

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Mar 27 14:31:59 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18LF45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1
   122                           	psect	text102,global,reloc=2,class=CODE,delta=1
   123                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=2,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1
   127                           	psect	text107,global,reloc=2,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1
   134                           	psect	text114,global,reloc=2,class=CODE,delta=1
   135                           	psect	text115,global,reloc=2,class=CODE,delta=1
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1
   137                           	psect	text117,global,reloc=2,class=CODE,delta=1
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1
   139                           	psect	text119,global,reloc=2,class=CODE,delta=1
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1
   141                           	psect	text121,global,reloc=2,class=CODE,delta=1
   142                           	psect	text122,global,reloc=2,class=CODE,delta=1
   143                           	psect	text123,global,reloc=2,class=CODE,delta=1
   144                           	psect	text124,global,reloc=2,class=CODE,delta=1
   145                           	psect	text125,global,reloc=2,class=CODE,delta=1
   146                           	psect	text126,global,reloc=2,class=CODE,delta=1
   147                           	psect	text127,global,reloc=2,class=CODE,delta=1
   148                           	psect	text128,global,reloc=2,class=CODE,delta=1
   149                           	psect	text129,global,reloc=2,class=CODE,delta=1
   150                           	psect	text130,global,reloc=2,class=CODE,delta=1
   151                           	psect	text131,global,reloc=2,class=CODE,delta=1
   152                           	psect	text132,global,reloc=2,class=CODE,delta=1
   153                           	psect	text133,global,reloc=2,class=CODE,delta=1
   154                           	psect	text134,global,reloc=2,class=CODE,delta=1,group=1
   155                           	psect	text135,global,reloc=2,class=CODE,delta=1
   156                           	psect	text136,global,reloc=2,class=CODE,delta=1
   157                           	psect	text137,global,reloc=2,class=CODE,delta=1
   158                           	psect	text138,global,reloc=2,class=CODE,delta=1
   159                           	psect	text139,global,reloc=2,class=CODE,delta=1
   160                           	psect	text140,global,reloc=2,class=CODE,delta=1
   161                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   164                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   165                           	dabs	1,0x400,48,_BDT
   166                           	dabs	1,0x500,64,_cdc_data_tx
   167                           	dabs	1,0x438,8,_CtrlTrfData
   168                           	dabs	1,0x430,8,_SetupPkt
   169                           	dabs	1,0x540,64,_cdc_data_rx
   170  0000                     
   171                           ; Version 1.41
   172                           ; Generated 25/01/2017 GMT
   173                           ; 
   174                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   175                           ; All rights reserved.
   176                           ; 
   177                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   178                           ; 
   179                           ; Redistribution and use in source and binary forms, with or without modification, are
   180                           ; permitted provided that the following conditions are met:
   181                           ; 
   182                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   183                           ;        conditions and the following disclaimer.
   184                           ; 
   185                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   186                           ;        of conditions and the following disclaimer in the documentation and/or other
   187                           ;        materials provided with the distribution.
   188                           ; 
   189                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   190                           ;        software without specific prior written permission.
   191                           ; 
   192                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   193                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   194                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   195                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   196                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   197                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   198                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   199                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   200                           ; 
   201                           ; 
   202                           ; Code-generator required, PIC18LF45K50 Definitions
   203                           ; 
   204                           ; SFR Addresses
   205  0000                     
   206                           	psect	idataBANK0
   207  0072BC                     __pidataBANK0:
   208                           	opt stack 0
   209                           
   210                           ;initializer for _Contrast_level
   211  0072BC  13                 	db	19
   212                           
   213                           ;initializer for _exitUSB
   214  0072BD  01                 	db	1
   215                           
   216                           ;initializer for _dataRateSelection
   217  0072BE  02                 	db	2
   218                           
   219                           ;initializer for _periodicState
   220  0072BF  03                 	db	3
   221                           
   222                           ;initializer for _menuTimeout
   223  0072C0  01                 	db	1
   224                           
   225                           ;initializer for _dataRateValue
   226  0072C1  02                 	db	2
   227                           
   228                           ;initializer for _periodicTimerValue
   229  0072C2  03                 	db	3
   230                           
   231                           ;initializer for _periodicUpValue
   232  0072C3  03                 	db	3
   233                           
   234                           ;initializer for _moteState
   235  0072C4  01                 	db	1
   236                           
   237                           	psect	idataBANK1
   238  007310                     __pidataBANK1:
   239                           	opt stack 0
   240                           
   241                           ;initializer for _selectedFont
   242  007310  F7                 	db	low _OledFont0
   243  007311  75                 	db	high _OledFont0
   244                           
   245                           	psect	mediumconst
   246  0075EE                     __pmediumconst:
   247                           	opt stack 0
   248  0075EE  00                 	db	0
   249  0075EF                     _USB_SD_Ptr:
   250                           	opt stack 0
   251  0075EF  B4                 	db	low _sd000
   252  0075F0  79                 	db	high _sd000
   253  0075F1  6E                 	db	low _sd001
   254  0075F2  79                 	db	high _sd001
   255  0075F3  3A                 	db	low _sd002
   256  0075F4  79                 	db	high _sd002
   257  0075F5                     __end_of_USB_SD_Ptr:
   258                           	opt stack 0
   259  0075F5                     _USB_CD_Ptr:
   260                           	opt stack 0
   261  0075F5  F7                 	db	low _configDescriptor1
   262  0075F6  78                 	db	high _configDescriptor1
   263  0075F7                     __end_of_USB_CD_Ptr:
   264                           	opt stack 0
   265  0075F7                     _OledFont0:
   266                           	opt stack 0
   267  0075F7  00                 	db	0
   268  0075F8  00                 	db	0
   269  0075F9  00                 	db	0
   270  0075FA  00                 	db	0
   271  0075FB  00                 	db	0
   272  0075FC  00                 	db	0
   273  0075FD  00                 	db	0
   274  0075FE  00                 	db	0
   275  0075FF  00                 	db	0
   276  007600  00                 	db	0
   277  007601  00                 	db	0
   278  007602  5F                 	db	95
   279  007603  00                 	db	0
   280  007604  00                 	db	0
   281  007605  00                 	db	0
   282  007606  00                 	db	0
   283  007607  00                 	db	0
   284  007608  00                 	db	0
   285  007609  03                 	db	3
   286  00760A  00                 	db	0
   287  00760B  03                 	db	3
   288  00760C  00                 	db	0
   289  00760D  00                 	db	0
   290  00760E  00                 	db	0
   291  00760F  64                 	db	100
   292  007610  3C                 	db	60
   293  007611  26                 	db	38
   294  007612  64                 	db	100
   295  007613  3C                 	db	60
   296  007614  26                 	db	38
   297  007615  24                 	db	36
   298  007616  00                 	db	0
   299  007617  26                 	db	38
   300  007618  49                 	db	73
   301  007619  49                 	db	73
   302  00761A  7F                 	db	127
   303  00761B  49                 	db	73
   304  00761C  49                 	db	73
   305  00761D  32                 	db	50
   306  00761E  00                 	db	0
   307  00761F  42                 	db	66
   308  007620  25                 	db	37
   309  007621  12                 	db	18
   310  007622  08                 	db	8
   311  007623  24                 	db	36
   312  007624  52                 	db	82
   313  007625  21                 	db	33
   314  007626  00                 	db	0
   315  007627  20                 	db	32
   316  007628  50                 	db	80
   317  007629  4E                 	db	78
   318  00762A  55                 	db	85
   319  00762B  22                 	db	34
   320  00762C  58                 	db	88
   321  00762D  28                 	db	40
   322  00762E  00                 	db	0
   323  00762F  00                 	db	0
   324  007630  00                 	db	0
   325  007631  00                 	db	0
   326  007632  03                 	db	3
   327  007633  00                 	db	0
   328  007634  00                 	db	0
   329  007635  00                 	db	0
   330  007636  00                 	db	0
   331  007637  00                 	db	0
   332  007638  00                 	db	0
   333  007639  1C                 	db	28
   334  00763A  22                 	db	34
   335  00763B  41                 	db	65
   336  00763C  00                 	db	0
   337  00763D  00                 	db	0
   338  00763E  00                 	db	0
   339  00763F  00                 	db	0
   340  007640  00                 	db	0
   341  007641  00                 	db	0
   342  007642  41                 	db	65
   343  007643  22                 	db	34
   344  007644  1C                 	db	28
   345  007645  00                 	db	0
   346  007646  00                 	db	0
   347  007647  00                 	db	0
   348  007648  15                 	db	21
   349  007649  15                 	db	21
   350  00764A  0E                 	db	14
   351  00764B  0E                 	db	14
   352  00764C  15                 	db	21
   353  00764D  15                 	db	21
   354  00764E  00                 	db	0
   355  00764F  00                 	db	0
   356  007650  08                 	db	8
   357  007651  08                 	db	8
   358  007652  3E                 	db	62
   359  007653  08                 	db	8
   360  007654  08                 	db	8
   361  007655  00                 	db	0
   362  007656  00                 	db	0
   363  007657  00                 	db	0
   364  007658  00                 	db	0
   365  007659  00                 	db	0
   366  00765A  50                 	db	80
   367  00765B  30                 	db	48
   368  00765C  00                 	db	0
   369  00765D  00                 	db	0
   370  00765E  00                 	db	0
   371  00765F  00                 	db	0
   372  007660  08                 	db	8
   373  007661  08                 	db	8
   374  007662  08                 	db	8
   375  007663  08                 	db	8
   376  007664  08                 	db	8
   377  007665  00                 	db	0
   378  007666  00                 	db	0
   379  007667  00                 	db	0
   380  007668  00                 	db	0
   381  007669  00                 	db	0
   382  00766A  40                 	db	64
   383  00766B  00                 	db	0
   384  00766C  00                 	db	0
   385  00766D  00                 	db	0
   386  00766E  00                 	db	0
   387  00766F  40                 	db	64
   388  007670  20                 	db	32
   389  007671  10                 	db	16
   390  007672  08                 	db	8
   391  007673  04                 	db	4
   392  007674  02                 	db	2
   393  007675  01                 	db	1
   394  007676  00                 	db	0
   395  007677  00                 	db	0
   396  007678  3E                 	db	62
   397  007679  41                 	db	65
   398  00767A  41                 	db	65
   399  00767B  41                 	db	65
   400  00767C  3E                 	db	62
   401  00767D  00                 	db	0
   402  00767E  00                 	db	0
   403  00767F  00                 	db	0
   404  007680  00                 	db	0
   405  007681  41                 	db	65
   406  007682  7F                 	db	127
   407  007683  40                 	db	64
   408  007684  00                 	db	0
   409  007685  00                 	db	0
   410  007686  00                 	db	0
   411  007687  00                 	db	0
   412  007688  42                 	db	66
   413  007689  61                 	db	97
   414  00768A  51                 	db	81
   415  00768B  49                 	db	73
   416  00768C  6E                 	db	110
   417  00768D  00                 	db	0
   418  00768E  00                 	db	0
   419  00768F  00                 	db	0
   420  007690  22                 	db	34
   421  007691  41                 	db	65
   422  007692  49                 	db	73
   423  007693  49                 	db	73
   424  007694  36                 	db	54
   425  007695  00                 	db	0
   426  007696  00                 	db	0
   427  007697  00                 	db	0
   428  007698  18                 	db	24
   429  007699  14                 	db	20
   430  00769A  12                 	db	18
   431  00769B  7F                 	db	127
   432  00769C  10                 	db	16
   433  00769D  00                 	db	0
   434  00769E  00                 	db	0
   435  00769F  00                 	db	0
   436  0076A0  27                 	db	39
   437  0076A1  49                 	db	73
   438  0076A2  49                 	db	73
   439  0076A3  49                 	db	73
   440  0076A4  71                 	db	113
   441  0076A5  00                 	db	0
   442  0076A6  00                 	db	0
   443  0076A7  00                 	db	0
   444  0076A8  3C                 	db	60
   445  0076A9  4A                 	db	74
   446  0076AA  49                 	db	73
   447  0076AB  48                 	db	72
   448  0076AC  70                 	db	112
   449  0076AD  00                 	db	0
   450  0076AE  00                 	db	0
   451  0076AF  00                 	db	0
   452  0076B0  43                 	db	67
   453  0076B1  21                 	db	33
   454  0076B2  11                 	db	17
   455  0076B3  0D                 	db	13
   456  0076B4  03                 	db	3
   457  0076B5  00                 	db	0
   458  0076B6  00                 	db	0
   459  0076B7  00                 	db	0
   460  0076B8  36                 	db	54
   461  0076B9  49                 	db	73
   462  0076BA  49                 	db	73
   463  0076BB  49                 	db	73
   464  0076BC  36                 	db	54
   465  0076BD  00                 	db	0
   466  0076BE  00                 	db	0
   467  0076BF  00                 	db	0
   468  0076C0  06                 	db	6
   469  0076C1  09                 	db	9
   470  0076C2  49                 	db	73
   471  0076C3  29                 	db	41
   472  0076C4  1E                 	db	30
   473  0076C5  00                 	db	0
   474  0076C6  00                 	db	0
   475  0076C7  00                 	db	0
   476  0076C8  00                 	db	0
   477  0076C9  00                 	db	0
   478  0076CA  12                 	db	18
   479  0076CB  00                 	db	0
   480  0076CC  00                 	db	0
   481  0076CD  00                 	db	0
   482  0076CE  00                 	db	0
   483  0076CF  00                 	db	0
   484  0076D0  00                 	db	0
   485  0076D1  00                 	db	0
   486  0076D2  52                 	db	82
   487  0076D3  30                 	db	48
   488  0076D4  00                 	db	0
   489  0076D5  00                 	db	0
   490  0076D6  00                 	db	0
   491  0076D7  00                 	db	0
   492  0076D8  00                 	db	0
   493  0076D9  08                 	db	8
   494  0076DA  14                 	db	20
   495  0076DB  14                 	db	20
   496  0076DC  22                 	db	34
   497  0076DD  00                 	db	0
   498  0076DE  00                 	db	0
   499  0076DF  00                 	db	0
   500  0076E0  14                 	db	20
   501  0076E1  14                 	db	20
   502  0076E2  14                 	db	20
   503  0076E3  14                 	db	20
   504  0076E4  14                 	db	20
   505  0076E5  14                 	db	20
   506  0076E6  00                 	db	0
   507  0076E7  00                 	db	0
   508  0076E8  00                 	db	0
   509  0076E9  22                 	db	34
   510  0076EA  14                 	db	20
   511  0076EB  14                 	db	20
   512  0076EC  08                 	db	8
   513  0076ED  00                 	db	0
   514  0076EE  00                 	db	0
   515  0076EF  00                 	db	0
   516  0076F0  02                 	db	2
   517  0076F1  01                 	db	1
   518  0076F2  59                 	db	89
   519  0076F3  05                 	db	5
   520  0076F4  02                 	db	2
   521  0076F5  00                 	db	0
   522  0076F6  00                 	db	0
   523  0076F7  3E                 	db	62
   524  0076F8  41                 	db	65
   525  0076F9  5D                 	db	93
   526  0076FA  55                 	db	85
   527  0076FB  4D                 	db	77
   528  0076FC  51                 	db	81
   529  0076FD  2E                 	db	46
   530  0076FE  00                 	db	0
   531  0076FF  40                 	db	64
   532  007700  7C                 	db	124
   533  007701  4A                 	db	74
   534  007702  09                 	db	9
   535  007703  4A                 	db	74
   536  007704  7C                 	db	124
   537  007705  40                 	db	64
   538  007706  00                 	db	0
   539  007707  41                 	db	65
   540  007708  7F                 	db	127
   541  007709  49                 	db	73
   542  00770A  49                 	db	73
   543  00770B  49                 	db	73
   544  00770C  49                 	db	73
   545  00770D  36                 	db	54
   546  00770E  00                 	db	0
   547  00770F  1C                 	db	28
   548  007710  22                 	db	34
   549  007711  41                 	db	65
   550  007712  41                 	db	65
   551  007713  41                 	db	65
   552  007714  41                 	db	65
   553  007715  22                 	db	34
   554  007716  00                 	db	0
   555  007717  41                 	db	65
   556  007718  7F                 	db	127
   557  007719  41                 	db	65
   558  00771A  41                 	db	65
   559  00771B  41                 	db	65
   560  00771C  22                 	db	34
   561  00771D  1C                 	db	28
   562  00771E  00                 	db	0
   563  00771F  41                 	db	65
   564  007720  7F                 	db	127
   565  007721  49                 	db	73
   566  007722  49                 	db	73
   567  007723  5D                 	db	93
   568  007724  41                 	db	65
   569  007725  63                 	db	99
   570  007726  00                 	db	0
   571  007727  41                 	db	65
   572  007728  7F                 	db	127
   573  007729  49                 	db	73
   574  00772A  09                 	db	9
   575  00772B  1D                 	db	29
   576  00772C  01                 	db	1
   577  00772D  03                 	db	3
   578  00772E  00                 	db	0
   579  00772F  1C                 	db	28
   580  007730  22                 	db	34
   581  007731  41                 	db	65
   582  007732  49                 	db	73
   583  007733  49                 	db	73
   584  007734  3A                 	db	58
   585  007735  08                 	db	8
   586  007736  00                 	db	0
   587  007737  41                 	db	65
   588  007738  7F                 	db	127
   589  007739  08                 	db	8
   590  00773A  08                 	db	8
   591  00773B  08                 	db	8
   592  00773C  7F                 	db	127
   593  00773D  41                 	db	65
   594  00773E  00                 	db	0
   595  00773F  00                 	db	0
   596  007740  41                 	db	65
   597  007741  41                 	db	65
   598  007742  7F                 	db	127
   599  007743  41                 	db	65
   600  007744  41                 	db	65
   601  007745  00                 	db	0
   602  007746  00                 	db	0
   603  007747  30                 	db	48
   604  007748  40                 	db	64
   605  007749  41                 	db	65
   606  00774A  41                 	db	65
   607  00774B  3F                 	db	63
   608  00774C  01                 	db	1
   609  00774D  01                 	db	1
   610  00774E  00                 	db	0
   611  00774F  41                 	db	65
   612  007750  7F                 	db	127
   613  007751  08                 	db	8
   614  007752  0C                 	db	12
   615  007753  12                 	db	18
   616  007754  61                 	db	97
   617  007755  41                 	db	65
   618  007756  00                 	db	0
   619  007757  41                 	db	65
   620  007758  7F                 	db	127
   621  007759  41                 	db	65
   622  00775A  40                 	db	64
   623  00775B  40                 	db	64
   624  00775C  40                 	db	64
   625  00775D  60                 	db	96
   626  00775E  00                 	db	0
   627  00775F  41                 	db	65
   628  007760  7F                 	db	127
   629  007761  42                 	db	66
   630  007762  0C                 	db	12
   631  007763  42                 	db	66
   632  007764  7F                 	db	127
   633  007765  41                 	db	65
   634  007766  00                 	db	0
   635  007767  41                 	db	65
   636  007768  7F                 	db	127
   637  007769  42                 	db	66
   638  00776A  0C                 	db	12
   639  00776B  11                 	db	17
   640  00776C  7F                 	db	127
   641  00776D  01                 	db	1
   642  00776E  00                 	db	0
   643  00776F  1C                 	db	28
   644  007770  22                 	db	34
   645  007771  41                 	db	65
   646  007772  41                 	db	65
   647  007773  41                 	db	65
   648  007774  22                 	db	34
   649  007775  1C                 	db	28
   650  007776  00                 	db	0
   651  007777  41                 	db	65
   652  007778  7F                 	db	127
   653  007779  49                 	db	73
   654  00777A  09                 	db	9
   655  00777B  09                 	db	9
   656  00777C  09                 	db	9
   657  00777D  06                 	db	6
   658  00777E  00                 	db	0
   659  00777F  0C                 	db	12
   660  007780  12                 	db	18
   661  007781  21                 	db	33
   662  007782  21                 	db	33
   663  007783  61                 	db	97
   664  007784  52                 	db	82
   665  007785  4C                 	db	76
   666  007786  00                 	db	0
   667  007787  41                 	db	65
   668  007788  7F                 	db	127
   669  007789  09                 	db	9
   670  00778A  09                 	db	9
   671  00778B  19                 	db	25
   672  00778C  69                 	db	105
   673  00778D  46                 	db	70
   674  00778E  00                 	db	0
   675  00778F  66                 	db	102
   676  007790  49                 	db	73
   677  007791  49                 	db	73
   678  007792  49                 	db	73
   679  007793  49                 	db	73
   680  007794  49                 	db	73
   681  007795  33                 	db	51
   682  007796  00                 	db	0
   683  007797  03                 	db	3
   684  007798  01                 	db	1
   685  007799  41                 	db	65
   686  00779A  7F                 	db	127
   687  00779B  41                 	db	65
   688  00779C  01                 	db	1
   689  00779D  03                 	db	3
   690  00779E  00                 	db	0
   691  00779F  01                 	db	1
   692  0077A0  3F                 	db	63
   693  0077A1  41                 	db	65
   694  0077A2  40                 	db	64
   695  0077A3  41                 	db	65
   696  0077A4  3F                 	db	63
   697  0077A5  01                 	db	1
   698  0077A6  00                 	db	0
   699  0077A7  01                 	db	1
   700  0077A8  0F                 	db	15
   701  0077A9  31                 	db	49
   702  0077AA  40                 	db	64
   703  0077AB  31                 	db	49
   704  0077AC  0F                 	db	15
   705  0077AD  01                 	db	1
   706  0077AE  00                 	db	0
   707  0077AF  01                 	db	1
   708  0077B0  1F                 	db	31
   709  0077B1  61                 	db	97
   710  0077B2  14                 	db	20
   711  0077B3  61                 	db	97
   712  0077B4  1F                 	db	31
   713  0077B5  01                 	db	1
   714  0077B6  00                 	db	0
   715  0077B7  41                 	db	65
   716  0077B8  41                 	db	65
   717  0077B9  36                 	db	54
   718  0077BA  08                 	db	8
   719  0077BB  36                 	db	54
   720  0077BC  41                 	db	65
   721  0077BD  41                 	db	65
   722  0077BE  00                 	db	0
   723  0077BF  01                 	db	1
   724  0077C0  03                 	db	3
   725  0077C1  44                 	db	68
   726  0077C2  78                 	db	120
   727  0077C3  44                 	db	68
   728  0077C4  03                 	db	3
   729  0077C5  01                 	db	1
   730  0077C6  00                 	db	0
   731  0077C7  43                 	db	67
   732  0077C8  61                 	db	97
   733  0077C9  51                 	db	81
   734  0077CA  49                 	db	73
   735  0077CB  45                 	db	69
   736  0077CC  43                 	db	67
   737  0077CD  61                 	db	97
   738  0077CE  00                 	db	0
   739  0077CF  00                 	db	0
   740  0077D0  00                 	db	0
   741  0077D1  7F                 	db	127
   742  0077D2  41                 	db	65
   743  0077D3  41                 	db	65
   744  0077D4  00                 	db	0
   745  0077D5  00                 	db	0
   746  0077D6  00                 	db	0
   747  0077D7  01                 	db	1
   748  0077D8  02                 	db	2
   749  0077D9  04                 	db	4
   750  0077DA  08                 	db	8
   751  0077DB  10                 	db	16
   752  0077DC  20                 	db	32
   753  0077DD  40                 	db	64
   754  0077DE  00                 	db	0
   755  0077DF  00                 	db	0
   756  0077E0  00                 	db	0
   757  0077E1  41                 	db	65
   758  0077E2  41                 	db	65
   759  0077E3  7F                 	db	127
   760  0077E4  00                 	db	0
   761  0077E5  00                 	db	0
   762  0077E6  00                 	db	0
   763  0077E7  00                 	db	0
   764  0077E8  04                 	db	4
   765  0077E9  02                 	db	2
   766  0077EA  01                 	db	1
   767  0077EB  01                 	db	1
   768  0077EC  02                 	db	2
   769  0077ED  04                 	db	4
   770  0077EE  00                 	db	0
   771  0077EF  00                 	db	0
   772  0077F0  40                 	db	64
   773  0077F1  40                 	db	64
   774  0077F2  40                 	db	64
   775  0077F3  40                 	db	64
   776  0077F4  40                 	db	64
   777  0077F5  40                 	db	64
   778  0077F6  00                 	db	0
   779  0077F7  00                 	db	0
   780  0077F8  01                 	db	1
   781  0077F9  02                 	db	2
   782  0077FA  00                 	db	0
   783  0077FB  00                 	db	0
   784  0077FC  00                 	db	0
   785  0077FD  00                 	db	0
   786  0077FE  00                 	db	0
   787  0077FF  00                 	db	0
   788  007800  34                 	db	52
   789  007801  4A                 	db	74
   790  007802  4A                 	db	74
   791  007803  4A                 	db	74
   792  007804  3C                 	db	60
   793  007805  40                 	db	64
   794  007806  00                 	db	0
   795  007807  00                 	db	0
   796  007808  41                 	db	65
   797  007809  3F                 	db	63
   798  00780A  48                 	db	72
   799  00780B  48                 	db	72
   800  00780C  48                 	db	72
   801  00780D  30                 	db	48
   802  00780E  00                 	db	0
   803  00780F  00                 	db	0
   804  007810  3C                 	db	60
   805  007811  42                 	db	66
   806  007812  42                 	db	66
   807  007813  42                 	db	66
   808  007814  24                 	db	36
   809  007815  00                 	db	0
   810  007816  00                 	db	0
   811  007817  00                 	db	0
   812  007818  30                 	db	48
   813  007819  48                 	db	72
   814  00781A  48                 	db	72
   815  00781B  49                 	db	73
   816  00781C  3F                 	db	63
   817  00781D  40                 	db	64
   818  00781E  00                 	db	0
   819  00781F  00                 	db	0
   820  007820  3C                 	db	60
   821  007821  4A                 	db	74
   822  007822  4A                 	db	74
   823  007823  4A                 	db	74
   824  007824  2C                 	db	44
   825  007825  00                 	db	0
   826  007826  00                 	db	0
   827  007827  00                 	db	0
   828  007828  00                 	db	0
   829  007829  48                 	db	72
   830  00782A  7E                 	db	126
   831  00782B  49                 	db	73
   832  00782C  09                 	db	9
   833  00782D  00                 	db	0
   834  00782E  00                 	db	0
   835  00782F  00                 	db	0
   836  007830  26                 	db	38
   837  007831  49                 	db	73
   838  007832  49                 	db	73
   839  007833  49                 	db	73
   840  007834  3F                 	db	63
   841  007835  01                 	db	1
   842  007836  00                 	db	0
   843  007837  41                 	db	65
   844  007838  7F                 	db	127
   845  007839  48                 	db	72
   846  00783A  04                 	db	4
   847  00783B  44                 	db	68
   848  00783C  78                 	db	120
   849  00783D  40                 	db	64
   850  00783E  00                 	db	0
   851  00783F  00                 	db	0
   852  007840  00                 	db	0
   853  007841  44                 	db	68
   854  007842  7D                 	db	125
   855  007843  40                 	db	64
   856  007844  00                 	db	0
   857  007845  00                 	db	0
   858  007846  00                 	db	0
   859  007847  00                 	db	0
   860  007848  00                 	db	0
   861  007849  40                 	db	64
   862  00784A  44                 	db	68
   863  00784B  3D                 	db	61
   864  00784C  00                 	db	0
   865  00784D  00                 	db	0
   866  00784E  00                 	db	0
   867  00784F  41                 	db	65
   868  007850  7F                 	db	127
   869  007851  10                 	db	16
   870  007852  18                 	db	24
   871  007853  24                 	db	36
   872  007854  42                 	db	66
   873  007855  42                 	db	66
   874  007856  00                 	db	0
   875  007857  00                 	db	0
   876  007858  40                 	db	64
   877  007859  41                 	db	65
   878  00785A  7F                 	db	127
   879  00785B  40                 	db	64
   880  00785C  40                 	db	64
   881  00785D  00                 	db	0
   882  00785E  00                 	db	0
   883  00785F  42                 	db	66
   884  007860  7E                 	db	126
   885  007861  02                 	db	2
   886  007862  7C                 	db	124
   887  007863  02                 	db	2
   888  007864  7E                 	db	126
   889  007865  40                 	db	64
   890  007866  00                 	db	0
   891  007867  42                 	db	66
   892  007868  7E                 	db	126
   893  007869  44                 	db	68
   894  00786A  02                 	db	2
   895  00786B  42                 	db	66
   896  00786C  7C                 	db	124
   897  00786D  40                 	db	64
   898  00786E  00                 	db	0
   899  00786F  00                 	db	0
   900  007870  3C                 	db	60
   901  007871  42                 	db	66
   902  007872  42                 	db	66
   903  007873  42                 	db	66
   904  007874  3C                 	db	60
   905  007875  00                 	db	0
   906  007876  00                 	db	0
   907  007877  00                 	db	0
   908  007878  41                 	db	65
   909  007879  7F                 	db	127
   910  00787A  49                 	db	73
   911  00787B  09                 	db	9
   912  00787C  09                 	db	9
   913  00787D  06                 	db	6
   914  00787E  00                 	db	0
   915  00787F  00                 	db	0
   916  007880  06                 	db	6
   917  007881  09                 	db	9
   918  007882  09                 	db	9
   919  007883  49                 	db	73
   920  007884  7F                 	db	127
   921  007885  41                 	db	65
   922  007886  00                 	db	0
   923  007887  00                 	db	0
   924  007888  42                 	db	66
   925  007889  7E                 	db	126
   926  00788A  44                 	db	68
   927  00788B  02                 	db	2
   928  00788C  02                 	db	2
   929  00788D  04                 	db	4
   930  00788E  00                 	db	0
   931  00788F  00                 	db	0
   932  007890  64                 	db	100
   933  007891  4A                 	db	74
   934  007892  4A                 	db	74
   935  007893  4A                 	db	74
   936  007894  36                 	db	54
   937  007895  00                 	db	0
   938  007896  00                 	db	0
   939  007897  00                 	db	0
   940  007898  04                 	db	4
   941  007899  3F                 	db	63
   942  00789A  44                 	db	68
   943  00789B  44                 	db	68
   944  00789C  20                 	db	32
   945  00789D  00                 	db	0
   946  00789E  00                 	db	0
   947  00789F  00                 	db	0
   948  0078A0  02                 	db	2
   949  0078A1  3E                 	db	62
   950  0078A2  40                 	db	64
   951  0078A3  40                 	db	64
   952  0078A4  22                 	db	34
   953  0078A5  7E                 	db	126
   954  0078A6  40                 	db	64
   955  0078A7  02                 	db	2
   956  0078A8  0E                 	db	14
   957  0078A9  32                 	db	50
   958  0078AA  40                 	db	64
   959  0078AB  32                 	db	50
   960  0078AC  0E                 	db	14
   961  0078AD  02                 	db	2
   962  0078AE  00                 	db	0
   963  0078AF  02                 	db	2
   964  0078B0  1E                 	db	30
   965  0078B1  62                 	db	98
   966  0078B2  18                 	db	24
   967  0078B3  62                 	db	98
   968  0078B4  1E                 	db	30
   969  0078B5  02                 	db	2
   970  0078B6  00                 	db	0
   971  0078B7  42                 	db	66
   972  0078B8  62                 	db	98
   973  0078B9  14                 	db	20
   974  0078BA  08                 	db	8
   975  0078BB  14                 	db	20
   976  0078BC  62                 	db	98
   977  0078BD  42                 	db	66
   978  0078BE  00                 	db	0
   979  0078BF  01                 	db	1
   980  0078C0  43                 	db	67
   981  0078C1  45                 	db	69
   982  0078C2  38                 	db	56
   983  0078C3  05                 	db	5
   984  0078C4  03                 	db	3
   985  0078C5  01                 	db	1
   986  0078C6  00                 	db	0
   987  0078C7  00                 	db	0
   988  0078C8  46                 	db	70
   989  0078C9  62                 	db	98
   990  0078CA  52                 	db	82
   991  0078CB  4A                 	db	74
   992  0078CC  46                 	db	70
   993  0078CD  62                 	db	98
   994  0078CE  00                 	db	0
   995  0078CF  00                 	db	0
   996  0078D0  00                 	db	0
   997  0078D1  08                 	db	8
   998  0078D2  36                 	db	54
   999  0078D3  41                 	db	65
  1000  0078D4  00                 	db	0
  1001  0078D5  00                 	db	0
  1002  0078D6  00                 	db	0
  1003  0078D7  00                 	db	0
  1004  0078D8  00                 	db	0
  1005  0078D9  00                 	db	0
  1006  0078DA  7F                 	db	127
  1007  0078DB  00                 	db	0
  1008  0078DC  00                 	db	0
  1009  0078DD  00                 	db	0
  1010  0078DE  00                 	db	0
  1011  0078DF  00                 	db	0
  1012  0078E0  00                 	db	0
  1013  0078E1  00                 	db	0
  1014  0078E2  41                 	db	65
  1015  0078E3  36                 	db	54
  1016  0078E4  08                 	db	8
  1017  0078E5  00                 	db	0
  1018  0078E6  00                 	db	0
  1019  0078E7  00                 	db	0
  1020  0078E8  18                 	db	24
  1021  0078E9  08                 	db	8
  1022  0078EA  08                 	db	8
  1023  0078EB  10                 	db	16
  1024  0078EC  10                 	db	16
  1025  0078ED  18                 	db	24
  1026  0078EE  00                 	db	0
  1027  0078EF  AA                 	db	170
  1028  0078F0  55                 	db	85
  1029  0078F1  AA                 	db	170
  1030  0078F2  55                 	db	85
  1031  0078F3  AA                 	db	170
  1032  0078F4  55                 	db	85
  1033  0078F5  AA                 	db	170
  1034  0078F6  55                 	db	85
  1035  0078F7                     __end_of_OledFont0:
  1036                           	opt stack 0
  1037  0078F7                     _configDescriptor1:
  1038                           	opt stack 0
  1039  0078F7  09                 	db	9
  1040  0078F8  02                 	db	2
  1041  0078F9  43                 	db	67
  1042  0078FA  00                 	db	0
  1043  0078FB  02                 	db	2
  1044  0078FC  01                 	db	1
  1045  0078FD  00                 	db	0
  1046  0078FE  C0                 	db	192
  1047  0078FF  32                 	db	50
  1048  007900  09                 	db	9
  1049  007901  04                 	db	4
  1050  007902  00                 	db	0
  1051  007903  00                 	db	0
  1052  007904  01                 	db	1
  1053  007905  02                 	db	2
  1054  007906  02                 	db	2
  1055  007907  01                 	db	1
  1056  007908  00                 	db	0
  1057  007909  05                 	db	5
  1058  00790A  24                 	db	36
  1059  00790B  00                 	db	0
  1060  00790C  10                 	db	16
  1061  00790D  01                 	db	1
  1062  00790E  04                 	db	4
  1063  00790F  24                 	db	36
  1064  007910  02                 	db	2
  1065  007911  02                 	db	2
  1066  007912  05                 	db	5
  1067  007913  24                 	db	36
  1068  007914  06                 	db	6
  1069  007915  00                 	db	0
  1070  007916  01                 	db	1
  1071  007917  05                 	db	5
  1072  007918  24                 	db	36
  1073  007919  01                 	db	1
  1074  00791A  00                 	db	0
  1075  00791B  01                 	db	1
  1076  00791C  07                 	db	7
  1077  00791D  05                 	db	5
  1078  00791E  81                 	db	129
  1079  00791F  03                 	db	3
  1080  007920  08                 	db	8
  1081  007921  00                 	db	0
  1082  007922  02                 	db	2
  1083  007923  09                 	db	9
  1084  007924  04                 	db	4
  1085  007925  01                 	db	1
  1086  007926  00                 	db	0
  1087  007927  02                 	db	2
  1088  007928  0A                 	db	10
  1089  007929  00                 	db	0
  1090  00792A  00                 	db	0
  1091  00792B  00                 	db	0
  1092  00792C  07                 	db	7
  1093  00792D  05                 	db	5
  1094  00792E  02                 	db	2
  1095  00792F  02                 	db	2
  1096  007930  40                 	db	64
  1097  007931  00                 	db	0
  1098  007932  00                 	db	0
  1099  007933  07                 	db	7
  1100  007934  05                 	db	5
  1101  007935  82                 	db	130
  1102  007936  02                 	db	2
  1103  007937  40                 	db	64
  1104  007938  00                 	db	0
  1105  007939  00                 	db	0
  1106  00793A                     __end_of_configDescriptor1:
  1107                           	opt stack 0
  1108  00793A                     _sd002:
  1109                           	opt stack 0
  1110  00793A  34                 	db	52
  1111  00793B  03                 	db	3
  1112  00793C  0043               	dw	67
  1113  00793E  0044               	dw	68
  1114  007940  0043               	dw	67
  1115  007942  0020               	dw	32
  1116  007944  0052               	dw	82
  1117  007946  0053               	dw	83
  1118  007948  002D               	dw	45
  1119  00794A  0032               	dw	50
  1120  00794C  0033               	dw	51
  1121  00794E  0032               	dw	50
  1122  007950  0020               	dw	32
  1123  007952  0045               	dw	69
  1124  007954  006D               	dw	109
  1125  007956  0075               	dw	117
  1126  007958  006C               	dw	108
  1127  00795A  0061               	dw	97
  1128  00795C  0074               	dw	116
  1129  00795E  0069               	dw	105
  1130  007960  006F               	dw	111
  1131  007962  006E               	dw	110
  1132  007964  0020               	dw	32
  1133  007966  0044               	dw	68
  1134  007968  0065               	dw	101
  1135  00796A  006D               	dw	109
  1136  00796C  006F               	dw	111
  1137  00796E                     __end_of_sd002:
  1138                           	opt stack 0
  1139  00796E                     _sd001:
  1140                           	opt stack 0
  1141  00796E  34                 	db	52
  1142  00796F  03                 	db	3
  1143  007970  004D               	dw	77
  1144  007972  0069               	dw	105
  1145  007974  0063               	dw	99
  1146  007976  0072               	dw	114
  1147  007978  006F               	dw	111
  1148  00797A  0063               	dw	99
  1149  00797C  0068               	dw	104
  1150  00797E  0069               	dw	105
  1151  007980  0070               	dw	112
  1152  007982  0020               	dw	32
  1153  007984  0054               	dw	84
  1154  007986  0065               	dw	101
  1155  007988  0063               	dw	99
  1156  00798A  0068               	dw	104
  1157  00798C  006E               	dw	110
  1158  00798E  006F               	dw	111
  1159  007990  006C               	dw	108
  1160  007992  006F               	dw	111
  1161  007994  0067               	dw	103
  1162  007996  0079               	dw	121
  1163  007998  0020               	dw	32
  1164  00799A  0049               	dw	73
  1165  00799C  006E               	dw	110
  1166  00799E  0063               	dw	99
  1167  0079A0  002E               	dw	46
  1168  0079A2                     __end_of_sd001:
  1169                           	opt stack 0
  1170  0079A2                     _device_dsc:
  1171                           	opt stack 0
  1172  0079A2  12                 	db	18
  1173  0079A3  01                 	db	1
  1174  0079A4  0200               	dw	512
  1175  0079A6  02                 	db	2
  1176  0079A7  00                 	db	0
  1177  0079A8  00                 	db	0
  1178  0079A9  08                 	db	8
  1179  0079AA  04D8               	dw	1240
  1180  0079AC  000A               	dw	10
  1181  0079AE  0100               	dw	256
  1182  0079B0  01                 	db	1
  1183  0079B1  02                 	db	2
  1184  0079B2  00                 	db	0
  1185  0079B3  01                 	db	1
  1186  0079B4                     __end_of_device_dsc:
  1187                           	opt stack 0
  1188  0079B4                     _sd000:
  1189                           	opt stack 0
  1190  0079B4  04                 	db	4
  1191  0079B5  03                 	db	3
  1192  0079B6  0409               	dw	1033
  1193  0079B8                     __end_of_sd000:
  1194                           	opt stack 0
  1195  0000                     _ANSELCbits	set	3933
  1196  0000                     _ANSELAbits	set	3931
  1197  0000                     _TMR3	set	4018
  1198  0000                     _UEP0bits	set	3946
  1199  0000                     _IPR3bits	set	4005
  1200  0000                     _RCONbits	set	4048
  1201  0000                     _UCON	set	3936
  1202  0000                     _USTAT	set	3937
  1203  0000                     _PIR3bits	set	4004
  1204  0000                     _UIEbits	set	3940
  1205  0000                     _UIRbits	set	3941
  1206  0000                     _UADDR	set	3939
  1207  0000                     _UIE	set	3940
  1208  0000                     _UEIE	set	3942
  1209  0000                     _UCFG	set	3938
  1210  0000                     _UIR	set	3941
  1211  0000                     _UEIR	set	3943
  1212  0000                     _PIE3bits	set	4003
  1213  0000                     _T3GCONbits	set	4020
  1214  0000                     _T3CONbits	set	4017
  1215  0000                     _T3GCON	set	4020
  1216  0000                     _T3CON	set	4017
  1217  0000                     _T2CONbits	set	4026
  1218  0000                     _TMR2	set	4028
  1219  0000                     _PR2	set	4027
  1220  0000                     _T2CON	set	4026
  1221  0000                     _VREFCON0bits	set	3965
  1222  0000                     _CM1CON0bits	set	3992
  1223  0000                     _CM2CON1bits	set	3994
  1224  0000                     _CM1CON0	set	3992
  1225  0000                     _EEDATA	set	4008
  1226  0000                     _EEADR	set	4009
  1227  0000                     _EECON2	set	4007
  1228  0000                     _EECON1bits	set	4006
  1229  0000                     _TABLAT	set	4085
  1230  0000                     _TBLPTRL	set	4086
  1231  0000                     _TBLPTRH	set	4087
  1232  0000                     _TBLPTRU	set	4088
  1233  0000                     _TRISD	set	3989
  1234  0000                     _TRISAbits	set	3986
  1235  0000                     _T1GCONbits	set	4044
  1236  0000                     _T1CONbits	set	4045
  1237  0000                     _TMR1L	set	4046
  1238  0000                     _TMR1H	set	4047
  1239  0000                     _T1GCON	set	4044
  1240  0000                     _T1CON	set	4045
  1241  0000                     _SSP1STATbits	set	4039
  1242  0000                     _SSPBUF	set	4041
  1243  0000                     _SSP1CON1bits	set	4038
  1244  0000                     _SSP1ADD	set	4040
  1245  0000                     _SSP1CON1	set	4038
  1246  0000                     _SSP1STAT	set	4039
  1247  0000                     _ADRESH	set	4036
  1248  0000                     _ADRESL	set	4035
  1249  0000                     _ADCON2	set	4032
  1250  0000                     _ADCON1	set	4033
  1251  0000                     _ADCON0	set	4034
  1252  0000                     _VREFCON0	set	3965
  1253  0000                     _ACTCON	set	4021
  1254  0000                     _OSCCON2bits	set	4050
  1255  0000                     _OSCCON2	set	4050
  1256  0000                     _OSCCON	set	4051
  1257  0000                     _OSCTUNE	set	3995
  1258  0000                     _IOCBbits	set	3974
  1259  0000                     _PIR1bits	set	3998
  1260  0000                     _RCREG	set	4014
  1261  0000                     _RCSTAbits	set	4011
  1262  0000                     _TXSTA	set	4012
  1263  0000                     _RCSTA	set	4011
  1264  0000                     _BAUDCON	set	4024
  1265  0000                     _LATD	set	3980
  1266  0000                     _TRISCbits	set	3988
  1267  0000                     _TRISBbits	set	3987
  1268  0000                     _TRISEbits	set	3990
  1269  0000                     _SPBRGH	set	4016
  1270  0000                     _SPBRG	set	4015
  1271  0000                     _UCONbits	set	3936
  1272  0000                     _TMR3L	set	4018
  1273  0000                     _TMR3H	set	4019
  1274  0000                     _PIR2bits	set	4001
  1275  0000                     _WDTCONbits	set	4049
  1276  0000                     _PORTCbits	set	3970
  1277  0000                     _IOCCbits	set	3975
  1278  0000                     _INTCON3bits	set	4080
  1279  0000                     _PIE2bits	set	4000
  1280  0000                     _LATEbits	set	3981
  1281  0000                     _INTCONbits	set	4082
  1282  0000                     _ADCON0bits	set	4034
  1283  0000                     _PORTAbits	set	3968
  1284  0000                     _PIE1bits	set	3997
  1285  0000                     _TXREG	set	4013
  1286  0000                     _LATCbits	set	3979
  1287  0000                     _TXSTAbits	set	4012
  1288  0000                     _LATAbits	set	3977
  1289  0000                     _PORTBbits	set	3969
  1290  0000                     _LATBbits	set	3978
  1291  0000                     _UEP1	set	3947
  1292  0000                     _UEP0	set	3946
  1293  0000                     _CKE	set	32318
  1294  0000                     _CKP	set	32308
  1295  0000                     _GIE	set	32663
  1296  0000                     _PEIE	set	32662
  1297  0079B8                     STR_184:
  1298  0079B8  73                 	db	115	;'s'
  1299  0079B9  79                 	db	121	;'y'
  1300  0079BA  73                 	db	115	;'s'
  1301  0079BB  20                 	db	32
  1302  0079BC  73                 	db	115	;'s'
  1303  0079BD  65                 	db	101	;'e'
  1304  0079BE  74                 	db	116	;'t'
  1305  0079BF  20                 	db	32
  1306  0079C0  70                 	db	112	;'p'
  1307  0079C1  69                 	db	105	;'i'
  1308  0079C2  6E                 	db	110	;'n'
  1309  0079C3  6D                 	db	109	;'m'
  1310  0079C4  6F                 	db	111	;'o'
  1311  0079C5  64                 	db	100	;'d'
  1312  0079C6  65                 	db	101	;'e'
  1313  0079C7  20                 	db	32
  1314  0079C8  47                 	db	71	;'G'
  1315  0079C9  50                 	db	80	;'P'
  1316  0079CA  49                 	db	73	;'I'
  1317  0079CB  4F                 	db	79	;'O'
  1318  0079CC  31                 	db	49	;'1'
  1319  0079CD  32                 	db	50	;'2'
  1320  0079CE  20                 	db	32
  1321  0079CF  61                 	db	97	;'a'
  1322  0079D0  6E                 	db	110	;'n'
  1323  0079D1  61                 	db	97	;'a'
  1324  0079D2  00                 	db	0
  1325  0079D3                     STR_183:
  1326  0079D3  73                 	db	115	;'s'
  1327  0079D4  79                 	db	121	;'y'
  1328  0079D5  73                 	db	115	;'s'
  1329  0079D6  20                 	db	32
  1330  0079D7  73                 	db	115	;'s'
  1331  0079D8  65                 	db	101	;'e'
  1332  0079D9  74                 	db	116	;'t'
  1333  0079DA  20                 	db	32
  1334  0079DB  70                 	db	112	;'p'
  1335  0079DC  69                 	db	105	;'i'
  1336  0079DD  6E                 	db	110	;'n'
  1337  0079DE  6D                 	db	109	;'m'
  1338  0079DF  6F                 	db	111	;'o'
  1339  0079E0  64                 	db	100	;'d'
  1340  0079E1  65                 	db	101	;'e'
  1341  0079E2  20                 	db	32
  1342  0079E3  47                 	db	71	;'G'
  1343  0079E4  50                 	db	80	;'P'
  1344  0079E5  49                 	db	73	;'I'
  1345  0079E6  4F                 	db	79	;'O'
  1346  0079E7  31                 	db	49	;'1'
  1347  0079E8  33                 	db	51	;'3'
  1348  0079E9  20                 	db	32
  1349  0079EA  61                 	db	97	;'a'
  1350  0079EB  6E                 	db	110	;'n'
  1351  0079EC  61                 	db	97	;'a'
  1352  0079ED  00                 	db	0
  1353  0079EE                     STR_177:
  1354  0079EE  73                 	db	115	;'s'
  1355  0079EF  79                 	db	121	;'y'
  1356  0079F0  73                 	db	115	;'s'
  1357  0079F1  20                 	db	32
  1358  0079F2  73                 	db	115	;'s'
  1359  0079F3  65                 	db	101	;'e'
  1360  0079F4  74                 	db	116	;'t'
  1361  0079F5  20                 	db	32
  1362  0079F6  70                 	db	112	;'p'
  1363  0079F7  69                 	db	105	;'i'
  1364  0079F8  6E                 	db	110	;'n'
  1365  0079F9  64                 	db	100	;'d'
  1366  0079FA  69                 	db	105	;'i'
  1367  0079FB  67                 	db	103	;'g'
  1368  0079FC  20                 	db	32
  1369  0079FD  47                 	db	71	;'G'
  1370  0079FE  50                 	db	80	;'P'
  1371  0079FF  49                 	db	73	;'I'
  1372  007A00  4F                 	db	79	;'O'
  1373  007A01  31                 	db	49	;'1'
  1374  007A02  30                 	db	48	;'0'
  1375  007A03  20                 	db	32
  1376  007A04  30                 	db	48	;'0'
  1377  007A05  0D                 	db	13
  1378  007A06  0A                 	db	10
  1379  007A07  00                 	db	0
  1380  007A08                     STR_178:
  1381  007A08  73                 	db	115	;'s'
  1382  007A09  79                 	db	121	;'y'
  1383  007A0A  73                 	db	115	;'s'
  1384  007A0B  20                 	db	32
  1385  007A0C  73                 	db	115	;'s'
  1386  007A0D  65                 	db	101	;'e'
  1387  007A0E  74                 	db	116	;'t'
  1388  007A0F  20                 	db	32
  1389  007A10  70                 	db	112	;'p'
  1390  007A11  69                 	db	105	;'i'
  1391  007A12  6E                 	db	110	;'n'
  1392  007A13  64                 	db	100	;'d'
  1393  007A14  69                 	db	105	;'i'
  1394  007A15  67                 	db	103	;'g'
  1395  007A16  20                 	db	32
  1396  007A17  47                 	db	71	;'G'
  1397  007A18  50                 	db	80	;'P'
  1398  007A19  49                 	db	73	;'I'
  1399  007A1A  4F                 	db	79	;'O'
  1400  007A1B  31                 	db	49	;'1'
  1401  007A1C  31                 	db	49	;'1'
  1402  007A1D  20                 	db	32
  1403  007A1E  30                 	db	48	;'0'
  1404  007A1F  0D                 	db	13
  1405  007A20  0A                 	db	10
  1406  007A21  00                 	db	0
  1407  007A22                     STR_175:
  1408  007A22  73                 	db	115	;'s'
  1409  007A23  79                 	db	121	;'y'
  1410  007A24  73                 	db	115	;'s'
  1411  007A25  20                 	db	32
  1412  007A26  73                 	db	115	;'s'
  1413  007A27  65                 	db	101	;'e'
  1414  007A28  74                 	db	116	;'t'
  1415  007A29  20                 	db	32
  1416  007A2A  70                 	db	112	;'p'
  1417  007A2B  69                 	db	105	;'i'
  1418  007A2C  6E                 	db	110	;'n'
  1419  007A2D  64                 	db	100	;'d'
  1420  007A2E  69                 	db	105	;'i'
  1421  007A2F  67                 	db	103	;'g'
  1422  007A30  20                 	db	32
  1423  007A31  47                 	db	71	;'G'
  1424  007A32  50                 	db	80	;'P'
  1425  007A33  49                 	db	73	;'I'
  1426  007A34  4F                 	db	79	;'O'
  1427  007A35  31                 	db	49	;'1'
  1428  007A36  30                 	db	48	;'0'
  1429  007A37  20                 	db	32
  1430  007A38  31                 	db	49	;'1'
  1431  007A39  0D                 	db	13
  1432  007A3A  0A                 	db	10
  1433  007A3B  00                 	db	0
  1434  007A3C                     STR_176:
  1435  007A3C  73                 	db	115	;'s'
  1436  007A3D  79                 	db	121	;'y'
  1437  007A3E  73                 	db	115	;'s'
  1438  007A3F  20                 	db	32
  1439  007A40  73                 	db	115	;'s'
  1440  007A41  65                 	db	101	;'e'
  1441  007A42  74                 	db	116	;'t'
  1442  007A43  20                 	db	32
  1443  007A44  70                 	db	112	;'p'
  1444  007A45  69                 	db	105	;'i'
  1445  007A46  6E                 	db	110	;'n'
  1446  007A47  64                 	db	100	;'d'
  1447  007A48  69                 	db	105	;'i'
  1448  007A49  67                 	db	103	;'g'
  1449  007A4A  20                 	db	32
  1450  007A4B  47                 	db	71	;'G'
  1451  007A4C  50                 	db	80	;'P'
  1452  007A4D  49                 	db	73	;'I'
  1453  007A4E  4F                 	db	79	;'O'
  1454  007A4F  31                 	db	49	;'1'
  1455  007A50  31                 	db	49	;'1'
  1456  007A51  20                 	db	32
  1457  007A52  31                 	db	49	;'1'
  1458  007A53  0D                 	db	13
  1459  007A54  0A                 	db	10
  1460  007A55  00                 	db	0
  1461  007A56                     STR_185:
  1462  007A56  73                 	db	115	;'s'
  1463  007A57  79                 	db	121	;'y'
  1464  007A58  73                 	db	115	;'s'
  1465  007A59  20                 	db	32
  1466  007A5A  67                 	db	103	;'g'
  1467  007A5B  65                 	db	101	;'e'
  1468  007A5C  74                 	db	116	;'t'
  1469  007A5D  20                 	db	32
  1470  007A5E  70                 	db	112	;'p'
  1471  007A5F  69                 	db	105	;'i'
  1472  007A60  6E                 	db	110	;'n'
  1473  007A61  61                 	db	97	;'a'
  1474  007A62  6E                 	db	110	;'n'
  1475  007A63  61                 	db	97	;'a'
  1476  007A64  20                 	db	32
  1477  007A65  47                 	db	71	;'G'
  1478  007A66  50                 	db	80	;'P'
  1479  007A67  49                 	db	73	;'I'
  1480  007A68  4F                 	db	79	;'O'
  1481  007A69  31                 	db	49	;'1'
  1482  007A6A  32                 	db	50	;'2'
  1483  007A6B  00                 	db	0
  1484  007A6C                     STR_186:
  1485  007A6C  73                 	db	115	;'s'
  1486  007A6D  79                 	db	121	;'y'
  1487  007A6E  73                 	db	115	;'s'
  1488  007A6F  20                 	db	32
  1489  007A70  67                 	db	103	;'g'
  1490  007A71  65                 	db	101	;'e'
  1491  007A72  74                 	db	116	;'t'
  1492  007A73  20                 	db	32
  1493  007A74  70                 	db	112	;'p'
  1494  007A75  69                 	db	105	;'i'
  1495  007A76  6E                 	db	110	;'n'
  1496  007A77  61                 	db	97	;'a'
  1497  007A78  6E                 	db	110	;'n'
  1498  007A79  61                 	db	97	;'a'
  1499  007A7A  20                 	db	32
  1500  007A7B  47                 	db	71	;'G'
  1501  007A7C  50                 	db	80	;'P'
  1502  007A7D  49                 	db	73	;'I'
  1503  007A7E  4F                 	db	79	;'O'
  1504  007A7F  31                 	db	49	;'1'
  1505  007A80  33                 	db	51	;'3'
  1506  007A81  00                 	db	0
  1507  007A82                     STR_22:
  1508  007A82  73                 	db	115	;'s'
  1509  007A83  79                 	db	121	;'y'
  1510  007A84  73                 	db	115	;'s'
  1511  007A85  20                 	db	32
  1512  007A86  73                 	db	115	;'s'
  1513  007A87  6C                 	db	108	;'l'
  1514  007A88  65                 	db	101	;'e'
  1515  007A89  65                 	db	101	;'e'
  1516  007A8A  70                 	db	112	;'p'
  1517  007A8B  20                 	db	32
  1518  007A8C  39                 	db	57	;'9'
  1519  007A8D  39                 	db	57	;'9'
  1520  007A8E  39                 	db	57	;'9'
  1521  007A8F  39                 	db	57	;'9'
  1522  007A90  39                 	db	57	;'9'
  1523  007A91  39                 	db	57	;'9'
  1524  007A92  39                 	db	57	;'9'
  1525  007A93  39                 	db	57	;'9'
  1526  007A94  39                 	db	57	;'9'
  1527  007A95  00                 	db	0
  1528  007A96                     STR_96:
  1529  007A96  4D                 	db	77	;'M'
  1530  007A97  61                 	db	97	;'a'
  1531  007A98  63                 	db	99	;'c'
  1532  007A99  20                 	db	32
  1533  007A9A  45                 	db	69	;'E'
  1534  007A9B  72                 	db	114	;'r'
  1535  007A9C  72                 	db	114	;'r'
  1536  007A9D  6F                 	db	111	;'o'
  1537  007A9E  72                 	db	114	;'r'
  1538  007A9F  20                 	db	32
  1539  007AA0  4F                 	db	79	;'O'
  1540  007AA1  63                 	db	99	;'c'
  1541  007AA2  63                 	db	99	;'c'
  1542  007AA3  75                 	db	117	;'u'
  1543  007AA4  72                 	db	114	;'r'
  1544  007AA5  72                 	db	114	;'r'
  1545  007AA6  65                 	db	101	;'e'
  1546  007AA7  64                 	db	100	;'d'
  1547  007AA8  00                 	db	0
  1548  007AA9                     STR_83:
  1549  007AA9  28                 	db	40
  1550  007AAA  55                 	db	85	;'U'
  1551  007AAB  4E                 	db	78	;'N'
  1552  007AAC  43                 	db	67	;'C'
  1553  007AAD  4E                 	db	78	;'N'
  1554  007AAE  46                 	db	70	;'F'
  1555  007AAF  29                 	db	41
  1556  007AB0  20                 	db	32
  1557  007AB1  20                 	db	32
  1558  007AB2  20                 	db	32
  1559  007AB3  20                 	db	32
  1560  007AB4  28                 	db	40
  1561  007AB5  43                 	db	67	;'C'
  1562  007AB6  4E                 	db	78	;'N'
  1563  007AB7  46                 	db	70	;'F'
  1564  007AB8  29                 	db	41
  1565  007AB9  20                 	db	32
  1566  007ABA  00                 	db	0
  1567  007ABB                     STR_40:
  1568  007ABB  20                 	db	32
  1569  007ABC  20                 	db	32
  1570  007ABD  28                 	db	40
  1571  007ABE  53                 	db	83	;'S'
  1572  007ABF  32                 	db	50	;'2'
  1573  007AC0  29                 	db	41
  1574  007AC1  20                 	db	32
  1575  007AC2  20                 	db	32
  1576  007AC3  20                 	db	32
  1577  007AC4  20                 	db	32
  1578  007AC5  20                 	db	32
  1579  007AC6  20                 	db	32
  1580  007AC7  20                 	db	32
  1581  007AC8  20                 	db	32
  1582  007AC9  20                 	db	32
  1583  007ACA  20                 	db	32
  1584  007ACB  00                 	db	0
  1585  007ACC                     STR_92:
  1586  007ACC  20                 	db	32
  1587  007ACD  20                 	db	32
  1588  007ACE  20                 	db	32
  1589  007ACF  20                 	db	32
  1590  007AD0  52                 	db	82	;'R'
  1591  007AD1  65                 	db	101	;'e'
  1592  007AD2  63                 	db	99	;'c'
  1593  007AD3  65                 	db	101	;'e'
  1594  007AD4  69                 	db	105	;'i'
  1595  007AD5  76                 	db	118	;'v'
  1596  007AD6  65                 	db	101	;'e'
  1597  007AD7  64                 	db	100	;'d'
  1598  007AD8  20                 	db	32
  1599  007AD9  20                 	db	32
  1600  007ADA  20                 	db	32
  1601  007ADB  20                 	db	32
  1602  007ADC  00                 	db	0
  1603  007ADD                     STR_42:
  1604  007ADD  20                 	db	32
  1605  007ADE  20                 	db	32
  1606  007ADF  20                 	db	32
  1607  007AE0  20                 	db	32
  1608  007AE1  20                 	db	32
  1609  007AE2  20                 	db	32
  1610  007AE3  20                 	db	32
  1611  007AE4  20                 	db	32
  1612  007AE5  20                 	db	32
  1613  007AE6  28                 	db	40
  1614  007AE7  53                 	db	83	;'S'
  1615  007AE8  33                 	db	51	;'3'
  1616  007AE9  29                 	db	41
  1617  007AEA  20                 	db	32
  1618  007AEB  20                 	db	32
  1619  007AEC  20                 	db	32
  1620  007AED  00                 	db	0
  1621  007AEE                     STR_34:
  1622  007AEE  20                 	db	32
  1623  007AEF  20                 	db	32
  1624  007AF0  28                 	db	40
  1625  007AF1  53                 	db	83	;'S'
  1626  007AF2  32                 	db	50	;'2'
  1627  007AF3  29                 	db	41
  1628  007AF4  20                 	db	32
  1629  007AF5  20                 	db	32
  1630  007AF6  20                 	db	32
  1631  007AF7  28                 	db	40
  1632  007AF8  53                 	db	83	;'S'
  1633  007AF9  33                 	db	51	;'3'
  1634  007AFA  29                 	db	41
  1635  007AFB  20                 	db	32
  1636  007AFC  20                 	db	32
  1637  007AFD  20                 	db	32
  1638  007AFE  00                 	db	0
  1639  007AFF                     STR_79:
  1640  007AFF  20                 	db	32
  1641  007B00  20                 	db	32
  1642  007B01  4C                 	db	76	;'L'
  1643  007B02  61                 	db	97	;'a'
  1644  007B03  73                 	db	115	;'s'
  1645  007B04  74                 	db	116	;'t'
  1646  007B05  20                 	db	32
  1647  007B06  4D                 	db	77	;'M'
  1648  007B07  65                 	db	101	;'e'
  1649  007B08  73                 	db	115	;'s'
  1650  007B09  73                 	db	115	;'s'
  1651  007B0A  61                 	db	97	;'a'
  1652  007B0B  67                 	db	103	;'g'
  1653  007B0C  65                 	db	101	;'e'
  1654  007B0D  20                 	db	32
  1655  007B0E  20                 	db	32
  1656  007B0F  00                 	db	0
  1657  007B10                     STR_78:
  1658  007B10  20                 	db	32
  1659  007B11  56                 	db	86	;'V'
  1660  007B12  69                 	db	105	;'i'
  1661  007B13  65                 	db	101	;'e'
  1662  007B14  77                 	db	119	;'w'
  1663  007B15  20                 	db	32
  1664  007B16  44                 	db	68	;'D'
  1665  007B17  6F                 	db	111	;'o'
  1666  007B18  77                 	db	119	;'w'
  1667  007B19  6E                 	db	110	;'n'
  1668  007B1A  6C                 	db	108	;'l'
  1669  007B1B  69                 	db	105	;'i'
  1670  007B1C  6E                 	db	110	;'n'
  1671  007B1D  6B                 	db	107	;'k'
  1672  007B1E  20                 	db	32
  1673  007B1F  20                 	db	32
  1674  007B20  00                 	db	0
  1675  007B21                     STR_75:
  1676  007B21  20                 	db	32
  1677  007B22  20                 	db	32
  1678  007B23  49                 	db	73	;'I'
  1679  007B24  73                 	db	115	;'s'
  1680  007B25  73                 	db	115	;'s'
  1681  007B26  75                 	db	117	;'u'
  1682  007B27  65                 	db	101	;'e'
  1683  007B28  20                 	db	32
  1684  007B29  55                 	db	85	;'U'
  1685  007B2A  70                 	db	112	;'p'
  1686  007B2B  6C                 	db	108	;'l'
  1687  007B2C  69                 	db	105	;'i'
  1688  007B2D  6E                 	db	110	;'n'
  1689  007B2E  6B                 	db	107	;'k'
  1690  007B2F  20                 	db	32
  1691  007B30  20                 	db	32
  1692  007B31  00                 	db	0
  1693  007B32                     STR_29:
  1694  007B32  20                 	db	32
  1695  007B33  28                 	db	40
  1696  007B34  53                 	db	83	;'S'
  1697  007B35  32                 	db	50	;'2'
  1698  007B36  29                 	db	41
  1699  007B37  20                 	db	32
  1700  007B38  20                 	db	32
  1701  007B39  20                 	db	32
  1702  007B3A  20                 	db	32
  1703  007B3B  20                 	db	32
  1704  007B3C  20                 	db	32
  1705  007B3D  28                 	db	40
  1706  007B3E  53                 	db	83	;'S'
  1707  007B3F  33                 	db	51	;'3'
  1708  007B40  29                 	db	41
  1709  007B41  20                 	db	32
  1710  007B42  00                 	db	0
  1711  007B43                     STR_32:
  1712  007B43  20                 	db	32
  1713  007B44  4A                 	db	74	;'J'
  1714  007B45  6F                 	db	111	;'o'
  1715  007B46  69                 	db	105	;'i'
  1716  007B47  6E                 	db	110	;'n'
  1717  007B48  69                 	db	105	;'i'
  1718  007B49  6E                 	db	110	;'n'
  1719  007B4A  67                 	db	103	;'g'
  1720  007B4B  20                 	db	32
  1721  007B4C  4D                 	db	77	;'M'
  1722  007B4D  65                 	db	101	;'e'
  1723  007B4E  74                 	db	116	;'t'
  1724  007B4F  68                 	db	104	;'h'
  1725  007B50  6F                 	db	111	;'o'
  1726  007B51  64                 	db	100	;'d'
  1727  007B52  20                 	db	32
  1728  007B53  00                 	db	0
  1729  007B54                     STR_91:
  1730  007B54  53                 	db	83	;'S'
  1731  007B55  65                 	db	101	;'e'
  1732  007B56  72                 	db	114	;'r'
  1733  007B57  76                 	db	118	;'v'
  1734  007B58  65                 	db	101	;'e'
  1735  007B59  72                 	db	114	;'r'
  1736  007B5A  20                 	db	32
  1737  007B5B  52                 	db	82	;'R'
  1738  007B5C  65                 	db	101	;'e'
  1739  007B5D  73                 	db	115	;'s'
  1740  007B5E  70                 	db	112	;'p'
  1741  007B5F  6F                 	db	111	;'o'
  1742  007B60  6E                 	db	110	;'n'
  1743  007B61  73                 	db	115	;'s'
  1744  007B62  65                 	db	101	;'e'
  1745  007B63  20                 	db	32
  1746  007B64  00                 	db	0
  1747  007B65                     STR_120:
  1748  007B65  54                 	db	84	;'T'
  1749  007B66  78                 	db	120	;'x'
  1750  007B67  20                 	db	32
  1751  007B68  45                 	db	69	;'E'
  1752  007B69  76                 	db	118	;'v'
  1753  007B6A  65                 	db	101	;'e'
  1754  007B6B  6E                 	db	110	;'n'
  1755  007B6C  74                 	db	116	;'t'
  1756  007B6D  20                 	db	32
  1757  007B6E  54                 	db	84	;'T'
  1758  007B6F  69                 	db	105	;'i'
  1759  007B70  6D                 	db	109	;'m'
  1760  007B71  69                 	db	105	;'i'
  1761  007B72  6E                 	db	110	;'n'
  1762  007B73  67                 	db	103	;'g'
  1763  007B74  20                 	db	32
  1764  007B75  00                 	db	0
  1765  007B76                     STR_119:
  1766  007B76  50                 	db	80	;'P'
  1767  007B77  65                 	db	101	;'e'
  1768  007B78  72                 	db	114	;'r'
  1769  007B79  69                 	db	105	;'i'
  1770  007B7A  6F                 	db	111	;'o'
  1771  007B7B  64                 	db	100	;'d'
  1772  007B7C  69                 	db	105	;'i'
  1773  007B7D  63                 	db	99	;'c'
  1774  007B7E  20                 	db	32
  1775  007B7F  55                 	db	85	;'U'
  1776  007B80  70                 	db	112	;'p'
  1777  007B81  6C                 	db	108	;'l'
  1778  007B82  69                 	db	105	;'i'
  1779  007B83  6E                 	db	110	;'n'
  1780  007B84  6B                 	db	107	;'k'
  1781  007B85  20                 	db	32
  1782  007B86  00                 	db	0
  1783  007B87                     STR_76:
  1784  007B87  20                 	db	32
  1785  007B88  4C                 	db	76	;'L'
  1786  007B89  6F                 	db	111	;'o'
  1787  007B8A  52                 	db	82	;'R'
  1788  007B8B  61                 	db	97	;'a'
  1789  007B8C  57                 	db	87	;'W'
  1790  007B8D  41                 	db	65	;'A'
  1791  007B8E  4E                 	db	78	;'N'
  1792  007B8F  20                 	db	32
  1793  007B90  50                 	db	80	;'P'
  1794  007B91  61                 	db	97	;'a'
  1795  007B92  63                 	db	99	;'c'
  1796  007B93  6B                 	db	107	;'k'
  1797  007B94  65                 	db	101	;'e'
  1798  007B95  74                 	db	116	;'t'
  1799  007B96  20                 	db	32
  1800  007B97  00                 	db	0
  1801  007B98                     STR_33:
  1802  007B98  3C                 	db	60	;'<'
  1803  007B99  2D                 	db	45
  1804  007B9A  20                 	db	32
  1805  007B9B  41                 	db	65	;'A'
  1806  007B9C  42                 	db	66	;'B'
  1807  007B9D  50                 	db	80	;'P'
  1808  007B9E  20                 	db	32
  1809  007B9F  20                 	db	32
  1810  007BA0  20                 	db	32
  1811  007BA1  4F                 	db	79	;'O'
  1812  007BA2  54                 	db	84	;'T'
  1813  007BA3  41                 	db	65	;'A'
  1814  007BA4  41                 	db	65	;'A'
  1815  007BA5  20                 	db	32
  1816  007BA6  2D                 	db	45
  1817  007BA7  3E                 	db	62	;'>'
  1818  007BA8  00                 	db	0
  1819  007BA9                     STR_26:
  1820  007BA9  52                 	db	82	;'R'
  1821  007BAA  65                 	db	101	;'e'
  1822  007BAB  52                 	db	82	;'R'
  1823  007BAC  75                 	db	117	;'u'
  1824  007BAD  6E                 	db	110	;'n'
  1825  007BAE  20                 	db	32
  1826  007BAF  50                 	db	80	;'P'
  1827  007BB0  77                 	db	119	;'w'
  1828  007BB1  72                 	db	114	;'r'
  1829  007BB2  54                 	db	84	;'T'
  1830  007BB3  73                 	db	115	;'s'
  1831  007BB4  74                 	db	116	;'t'
  1832  007BB5  3C                 	db	60	;'<'
  1833  007BB6  53                 	db	83	;'S'
  1834  007BB7  32                 	db	50	;'2'
  1835  007BB8  3E                 	db	62	;'>'
  1836  007BB9  00                 	db	0
  1837  007BBA                     STR_94:
  1838  007BBA  44                 	db	68	;'D'
  1839  007BBB  61                 	db	97	;'a'
  1840  007BBC  74                 	db	116	;'t'
  1841  007BBD  61                 	db	97	;'a'
  1842  007BBE  20                 	db	32
  1843  007BBF  54                 	db	84	;'T'
  1844  007BC0  72                 	db	114	;'r'
  1845  007BC1  61                 	db	97	;'a'
  1846  007BC2  6E                 	db	110	;'n'
  1847  007BC3  73                 	db	115	;'s'
  1848  007BC4  6D                 	db	109	;'m'
  1849  007BC5  69                 	db	105	;'i'
  1850  007BC6  74                 	db	116	;'t'
  1851  007BC7  74                 	db	116	;'t'
  1852  007BC8  65                 	db	101	;'e'
  1853  007BC9  64                 	db	100	;'d'
  1854  007BCA  00                 	db	0
  1855  007BCB                     STR_151:
  1856  007BCB  45                 	db	69	;'E'
  1857  007BCC  6E                 	db	110	;'n'
  1858  007BCD  74                 	db	116	;'t'
  1859  007BCE  65                 	db	101	;'e'
  1860  007BCF  72                 	db	114	;'r'
  1861  007BD0  20                 	db	32
  1862  007BD1  53                 	db	83	;'S'
  1863  007BD2  6C                 	db	108	;'l'
  1864  007BD3  65                 	db	101	;'e'
  1865  007BD4  65                 	db	101	;'e'
  1866  007BD5  70                 	db	112	;'p'
  1867  007BD6  20                 	db	32
  1868  007BD7  4D                 	db	77	;'M'
  1869  007BD8  6F                 	db	111	;'o'
  1870  007BD9  64                 	db	100	;'d'
  1871  007BDA  65                 	db	101	;'e'
  1872  007BDB  00                 	db	0
  1873  007BDC                     STR_81:
  1874  007BDC  55                 	db	85	;'U'
  1875  007BDD  70                 	db	112	;'p'
  1876  007BDE  6C                 	db	108	;'l'
  1877  007BDF  69                 	db	105	;'i'
  1878  007BE0  6E                 	db	110	;'n'
  1879  007BE1  6B                 	db	107	;'k'
  1880  007BE2  20                 	db	32
  1881  007BE3  50                 	db	80	;'P'
  1882  007BE4  63                 	db	99	;'c'
  1883  007BE5  6B                 	db	107	;'k'
  1884  007BE6  74                 	db	116	;'t'
  1885  007BE7  20                 	db	32
  1886  007BE8  54                 	db	84	;'T'
  1887  007BE9  79                 	db	121	;'y'
  1888  007BEA  70                 	db	112	;'p'
  1889  007BEB  65                 	db	101	;'e'
  1890  007BEC  00                 	db	0
  1891  007BED                     STR_135:
  1892  007BED  53                 	db	83	;'S'
  1893  007BEE  65                 	db	101	;'e'
  1894  007BEF  6C                 	db	108	;'l'
  1895  007BF0  65                 	db	101	;'e'
  1896  007BF1  63                 	db	99	;'c'
  1897  007BF2  74                 	db	116	;'t'
  1898  007BF3  20                 	db	32
  1899  007BF4  44                 	db	68	;'D'
  1900  007BF5  61                 	db	97	;'a'
  1901  007BF6  74                 	db	116	;'t'
  1902  007BF7  61                 	db	97	;'a'
  1903  007BF8  20                 	db	32
  1904  007BF9  52                 	db	82	;'R'
  1905  007BFA  61                 	db	97	;'a'
  1906  007BFB  74                 	db	116	;'t'
  1907  007BFC  65                 	db	101	;'e'
  1908  007BFD  00                 	db	0
  1909  007BFE                     STR_27:
  1910  007BFE  4D                 	db	77	;'M'
  1911  007BFF  6F                 	db	111	;'o'
  1912  007C00  62                 	db	98	;'b'
  1913  007C01  69                 	db	105	;'i'
  1914  007C02  6C                 	db	108	;'l'
  1915  007C03  65                 	db	101	;'e'
  1916  007C04  20                 	db	32
  1917  007C05  4D                 	db	77	;'M'
  1918  007C06  6F                 	db	111	;'o'
  1919  007C07  74                 	db	116	;'t'
  1920  007C08  65                 	db	101	;'e'
  1921  007C09  20                 	db	32
  1922  007C0A  2D                 	db	45
  1923  007C0B  41                 	db	65	;'A'
  1924  007C0C  70                 	db	112	;'p'
  1925  007C0D  70                 	db	112	;'p'
  1926  007C0E  00                 	db	0
  1927  007C0F                     STR_28:
  1928  007C0F  4E                 	db	78	;'N'
  1929  007C10  61                 	db	97	;'a'
  1930  007C11  76                 	db	118	;'v'
  1931  007C12  69                 	db	105	;'i'
  1932  007C13  67                 	db	103	;'g'
  1933  007C14  61                 	db	97	;'a'
  1934  007C15  74                 	db	116	;'t'
  1935  007C16  65                 	db	101	;'e'
  1936  007C17  20                 	db	32
  1937  007C18  20                 	db	32
  1938  007C19  53                 	db	83	;'S'
  1939  007C1A  65                 	db	101	;'e'
  1940  007C1B  6C                 	db	108	;'l'
  1941  007C1C  65                 	db	101	;'e'
  1942  007C1D  63                 	db	99	;'c'
  1943  007C1E  74                 	db	116	;'t'
  1944  007C1F  00                 	db	0
  1945  007C20                     STR_111:
  1946  007C20  4D                 	db	77	;'M'
  1947  007C21  65                 	db	101	;'e'
  1948  007C22  6E                 	db	110	;'n'
  1949  007C23  75                 	db	117	;'u'
  1950  007C24  20                 	db	32
  1951  007C25  48                 	db	72	;'H'
  1952  007C26  61                 	db	97	;'a'
  1953  007C27  73                 	db	115	;'s'
  1954  007C28  20                 	db	32
  1955  007C29  54                 	db	84	;'T'
  1956  007C2A  69                 	db	105	;'i'
  1957  007C2B  6D                 	db	109	;'m'
  1958  007C2C  65                 	db	101	;'e'
  1959  007C2D  6F                 	db	111	;'o'
  1960  007C2E  75                 	db	117	;'u'
  1961  007C2F  74                 	db	116	;'t'
  1962  007C30  00                 	db	0
  1963  007C31                     STR_71:
  1964  007C31  53                 	db	83	;'S'
  1965  007C32  65                 	db	101	;'e'
  1966  007C33  6E                 	db	110	;'n'
  1967  007C34  64                 	db	100	;'d'
  1968  007C35  20                 	db	32
  1969  007C36  50                 	db	80	;'P'
  1970  007C37  65                 	db	101	;'e'
  1971  007C38  72                 	db	114	;'r'
  1972  007C39  69                 	db	105	;'i'
  1973  007C3A  6F                 	db	111	;'o'
  1974  007C3B  64                 	db	100	;'d'
  1975  007C3C  69                 	db	105	;'i'
  1976  007C3D  63                 	db	99	;'c'
  1977  007C3E  20                 	db	32
  1978  007C3F  54                 	db	84	;'T'
  1979  007C40  78                 	db	120	;'x'
  1980  007C41  00                 	db	0
  1981  007C42                     STR_105:
  1982  007C42  44                 	db	68	;'D'
  1983  007C43  6F                 	db	111	;'o'
  1984  007C44  77                 	db	119	;'w'
  1985  007C45  6E                 	db	110	;'n'
  1986  007C46  6C                 	db	108	;'l'
  1987  007C47  69                 	db	105	;'i'
  1988  007C48  6E                 	db	110	;'n'
  1989  007C49  6B                 	db	107	;'k'
  1990  007C4A  20                 	db	32
  1991  007C4B  44                 	db	68	;'D'
  1992  007C4C  69                 	db	105	;'i'
  1993  007C4D  73                 	db	115	;'s'
  1994  007C4E  70                 	db	112	;'p'
  1995  007C4F  6C                 	db	108	;'l'
  1996  007C50  61                 	db	97	;'a'
  1997  007C51  79                 	db	121	;'y'
  1998  007C52  00                 	db	0
  1999  007C53                     STR_103:
  2000  007C53  20                 	db	32
  2001  007C54  20                 	db	32
  2002  007C55  20                 	db	32
  2003  007C56  20                 	db	32
  2004  007C57  44                 	db	68	;'D'
  2005  007C58  69                 	db	105	;'i'
  2006  007C59  73                 	db	115	;'s'
  2007  007C5A  70                 	db	112	;'p'
  2008  007C5B  6C                 	db	108	;'l'
  2009  007C5C  61                 	db	97	;'a'
  2010  007C5D  79                 	db	121	;'y'
  2011  007C5E  20                 	db	32
  2012  007C5F  20                 	db	32
  2013  007C60  20                 	db	32
  2014  007C61  20                 	db	32
  2015  007C62  00                 	db	0
  2016  007C63                     STR_102:
  2017  007C63  20                 	db	32
  2018  007C64  20                 	db	32
  2019  007C65  53                 	db	83	;'S'
  2020  007C66  65                 	db	101	;'e'
  2021  007C67  6E                 	db	110	;'n'
  2022  007C68  73                 	db	115	;'s'
  2023  007C69  6F                 	db	111	;'o'
  2024  007C6A  72                 	db	114	;'r'
  2025  007C6B  20                 	db	32
  2026  007C6C  44                 	db	68	;'D'
  2027  007C6D  61                 	db	97	;'a'
  2028  007C6E  74                 	db	116	;'t'
  2029  007C6F  61                 	db	97	;'a'
  2030  007C70  20                 	db	32
  2031  007C71  20                 	db	32
  2032  007C72  00                 	db	0
  2033  007C73                     STR_114:
  2034  007C73  28                 	db	40
  2035  007C74  4E                 	db	78	;'N'
  2036  007C75  41                 	db	65	;'A'
  2037  007C76  56                 	db	86	;'V'
  2038  007C77  29                 	db	41
  2039  007C78  20                 	db	32
  2040  007C79  20                 	db	32
  2041  007C7A  20                 	db	32
  2042  007C7B  20                 	db	32
  2043  007C7C  28                 	db	40
  2044  007C7D  43                 	db	67	;'C'
  2045  007C7E  4E                 	db	78	;'N'
  2046  007C7F  47                 	db	71	;'G'
  2047  007C80  29                 	db	41
  2048  007C81  20                 	db	32
  2049  007C82  00                 	db	0
  2050  007C83                     STR_77:
  2051  007C83  28                 	db	40
  2052  007C84  4E                 	db	78	;'N'
  2053  007C85  41                 	db	65	;'A'
  2054  007C86  56                 	db	86	;'V'
  2055  007C87  29                 	db	41
  2056  007C88  20                 	db	32
  2057  007C89  20                 	db	32
  2058  007C8A  20                 	db	32
  2059  007C8B  20                 	db	32
  2060  007C8C  28                 	db	40
  2061  007C8D  53                 	db	83	;'S'
  2062  007C8E  45                 	db	69	;'E'
  2063  007C8F  4C                 	db	76	;'L'
  2064  007C90  29                 	db	41
  2065  007C91  20                 	db	32
  2066  007C92  00                 	db	0
  2067  007C93                     STR_152:
  2068  007C93  28                 	db	40
  2069  007C94  4E                 	db	78	;'N'
  2070  007C95  41                 	db	65	;'A'
  2071  007C96  56                 	db	86	;'V'
  2072  007C97  29                 	db	41
  2073  007C98  20                 	db	32
  2074  007C99  20                 	db	32
  2075  007C9A  20                 	db	32
  2076  007C9B  20                 	db	32
  2077  007C9C  28                 	db	40
  2078  007C9D  53                 	db	83	;'S'
  2079  007C9E  4C                 	db	76	;'L'
  2080  007C9F  50                 	db	80	;'P'
  2081  007CA0  29                 	db	41
  2082  007CA1  20                 	db	32
  2083  007CA2  00                 	db	0
  2084  007CA3                     STR_163:
  2085  007CA3  6D                 	db	109	;'m'
  2086  007CA4  61                 	db	97	;'a'
  2087  007CA5  63                 	db	99	;'c'
  2088  007CA6  20                 	db	32
  2089  007CA7  73                 	db	115	;'s'
  2090  007CA8  65                 	db	101	;'e'
  2091  007CA9  74                 	db	116	;'t'
  2092  007CAA  20                 	db	32
  2093  007CAB  61                 	db	97	;'a'
  2094  007CAC  64                 	db	100	;'d'
  2095  007CAD  72                 	db	114	;'r'
  2096  007CAE  20                 	db	32
  2097  007CAF  6F                 	db	111	;'o'
  2098  007CB0  66                 	db	102	;'f'
  2099  007CB1  66                 	db	102	;'f'
  2100  007CB2  00                 	db	0
  2101  007CB3                     STR_98:
  2102  007CB3  4E                 	db	78	;'N'
  2103  007CB4  6F                 	db	111	;'o'
  2104  007CB5  20                 	db	32
  2105  007CB6  46                 	db	70	;'F'
  2106  007CB7  72                 	db	114	;'r'
  2107  007CB8  65                 	db	101	;'e'
  2108  007CB9  65                 	db	101	;'e'
  2109  007CBA  20                 	db	32
  2110  007CBB  43                 	db	67	;'C'
  2111  007CBC  68                 	db	104	;'h'
  2112  007CBD  61                 	db	97	;'a'
  2113  007CBE  6E                 	db	110	;'n'
  2114  007CBF  6E                 	db	110	;'n'
  2115  007CC0  65                 	db	101	;'e'
  2116  007CC1  6C                 	db	108	;'l'
  2117  007CC2  00                 	db	0
  2118  007CC3                     STR_7:
  2119  007CC3  42                 	db	66	;'B'
  2120  007CC4  75                 	db	117	;'u'
  2121  007CC5  69                 	db	105	;'i'
  2122  007CC6  6C                 	db	108	;'l'
  2123  007CC7  64                 	db	100	;'d'
  2124  007CC8  20                 	db	32
  2125  007CC9  44                 	db	68	;'D'
  2126  007CCA  61                 	db	97	;'a'
  2127  007CCB  74                 	db	116	;'t'
  2128  007CCC  65                 	db	101	;'e'
  2129  007CCD  2F                 	db	47
  2130  007CCE  54                 	db	84	;'T'
  2131  007CCF  69                 	db	105	;'i'
  2132  007CD0  6D                 	db	109	;'m'
  2133  007CD1  65                 	db	101	;'e'
  2134  007CD2  00                 	db	0
  2135  007CD3                     STR_112:
  2136  007CD3  20                 	db	32
  2137  007CD4  20                 	db	32
  2138  007CD5  20                 	db	32
  2139  007CD6  20                 	db	32
  2140  007CD7  45                 	db	69	;'E'
  2141  007CD8  6E                 	db	110	;'n'
  2142  007CD9  61                 	db	97	;'a'
  2143  007CDA  62                 	db	98	;'b'
  2144  007CDB  6C                 	db	108	;'l'
  2145  007CDC  65                 	db	101	;'e'
  2146  007CDD  64                 	db	100	;'d'
  2147  007CDE  20                 	db	32
  2148  007CDF  20                 	db	32
  2149  007CE0  20                 	db	32
  2150  007CE1  00                 	db	0
  2151  007CE2                     STR_113:
  2152  007CE2  20                 	db	32
  2153  007CE3  20                 	db	32
  2154  007CE4  20                 	db	32
  2155  007CE5  20                 	db	32
  2156  007CE6  44                 	db	68	;'D'
  2157  007CE7  69                 	db	105	;'i'
  2158  007CE8  73                 	db	115	;'s'
  2159  007CE9  61                 	db	97	;'a'
  2160  007CEA  62                 	db	98	;'b'
  2161  007CEB  6C                 	db	108	;'l'
  2162  007CEC  65                 	db	101	;'e'
  2163  007CED  64                 	db	100	;'d'
  2164  007CEE  20                 	db	32
  2165  007CEF  20                 	db	32
  2166  007CF0  00                 	db	0
  2167  007CF1                     STR_172:
  2168  007CF1  6D                 	db	109	;'m'
  2169  007CF2  61                 	db	97	;'a'
  2170  007CF3  63                 	db	99	;'c'
  2171  007CF4  20                 	db	32
  2172  007CF5  73                 	db	115	;'s'
  2173  007CF6  65                 	db	101	;'e'
  2174  007CF7  74                 	db	116	;'t'
  2175  007CF8  20                 	db	32
  2176  007CF9  61                 	db	97	;'a'
  2177  007CFA  64                 	db	100	;'d'
  2178  007CFB  72                 	db	114	;'r'
  2179  007CFC  20                 	db	32
  2180  007CFD  6F                 	db	111	;'o'
  2181  007CFE  6E                 	db	110	;'n'
  2182  007CFF  00                 	db	0
  2183  007D00                     STR_2:
  2184  007D00  20                 	db	32
  2185  007D01  20                 	db	32
  2186  007D02  20                 	db	32
  2187  007D03  4C                 	db	76	;'L'
  2188  007D04  6F                 	db	111	;'o'
  2189  007D05  52                 	db	82	;'R'
  2190  007D06  61                 	db	97	;'a'
  2191  007D07  20                 	db	32
  2192  007D08  44                 	db	68	;'D'
  2193  007D09  65                 	db	101	;'e'
  2194  007D0A  6D                 	db	109	;'m'
  2195  007D0B  6F                 	db	111	;'o'
  2196  007D0C  20                 	db	32
  2197  007D0D  20                 	db	32
  2198  007D0E  00                 	db	0
  2199  007D0F                     STR_3:
  2200  007D0F  20                 	db	32
  2201  007D10  56                 	db	86	;'V'
  2202  007D11  20                 	db	32
  2203  007D12  31                 	db	49	;'1'
  2204  007D13  2E                 	db	46
  2205  007D14  30                 	db	48	;'0'
  2206  007D15  2E                 	db	46
  2207  007D16  31                 	db	49	;'1'
  2208  007D17  20                 	db	32
  2209  007D18  43                 	db	67	;'C'
  2210  007D19  6F                 	db	111	;'o'
  2211  007D1A  64                 	db	100	;'d'
  2212  007D1B  65                 	db	101	;'e'
  2213  007D1C  20                 	db	32
  2214  007D1D  00                 	db	0
  2215  007D1E                     STR_1:
  2216  007D1E  4D                 	db	77	;'M'
  2217  007D1F  69                 	db	105	;'i'
  2218  007D20  63                 	db	99	;'c'
  2219  007D21  72                 	db	114	;'r'
  2220  007D22  6F                 	db	111	;'o'
  2221  007D23  63                 	db	99	;'c'
  2222  007D24  68                 	db	104	;'h'
  2223  007D25  69                 	db	105	;'i'
  2224  007D26  70                 	db	112	;'p'
  2225  007D27  20                 	db	32
  2226  007D28  4D                 	db	77	;'M'
  2227  007D29  6F                 	db	111	;'o'
  2228  007D2A  74                 	db	116	;'t'
  2229  007D2B  65                 	db	101	;'e'
  2230  007D2C  00                 	db	0
  2231  007D2D                     STR_74:
  2232  007D2D  6D                 	db	109	;'m'
  2233  007D2E  61                 	db	97	;'a'
  2234  007D2F  63                 	db	99	;'c'
  2235  007D30  20                 	db	32
  2236  007D31  74                 	db	116	;'t'
  2237  007D32  78                 	db	120	;'x'
  2238  007D33  20                 	db	32
  2239  007D34  75                 	db	117	;'u'
  2240  007D35  6E                 	db	110	;'n'
  2241  007D36  63                 	db	99	;'c'
  2242  007D37  6E                 	db	110	;'n'
  2243  007D38  66                 	db	102	;'f'
  2244  007D39  20                 	db	32
  2245  007D3A  00                 	db	0
  2246  007D3B                     STR_43:
  2247  007D3B  6D                 	db	109	;'m'
  2248  007D3C  61                 	db	97	;'a'
  2249  007D3D  63                 	db	99	;'c'
  2250  007D3E  20                 	db	32
  2251  007D3F  6A                 	db	106	;'j'
  2252  007D40  6F                 	db	111	;'o'
  2253  007D41  69                 	db	105	;'i'
  2254  007D42  6E                 	db	110	;'n'
  2255  007D43  20                 	db	32
  2256  007D44  6F                 	db	111	;'o'
  2257  007D45  74                 	db	116	;'t'
  2258  007D46  61                 	db	97	;'a'
  2259  007D47  61                 	db	97	;'a'
  2260  007D48  00                 	db	0
  2261  007D49                     STR_57:
  2262  007D49  69                 	db	105	;'i'
  2263  007D4A  6E                 	db	110	;'n'
  2264  007D4B  76                 	db	118	;'v'
  2265  007D4C  61                 	db	97	;'a'
  2266  007D4D  6C                 	db	108	;'l'
  2267  007D4E  69                 	db	105	;'i'
  2268  007D4F  64                 	db	100	;'d'
  2269  007D50  5F                 	db	95	;'_'
  2270  007D51  70                 	db	112	;'p'
  2271  007D52  61                 	db	97	;'a'
  2272  007D53  72                 	db	114	;'r'
  2273  007D54  61                 	db	97	;'a'
  2274  007D55  6D                 	db	109	;'m'
  2275  007D56  00                 	db	0
  2276  007D57                     STR_45:
  2277  007D57  6B                 	db	107	;'k'
  2278  007D58  65                 	db	101	;'e'
  2279  007D59  79                 	db	121	;'y'
  2280  007D5A  73                 	db	115	;'s'
  2281  007D5B  5F                 	db	95	;'_'
  2282  007D5C  6E                 	db	110	;'n'
  2283  007D5D  6F                 	db	111	;'o'
  2284  007D5E  74                 	db	116	;'t'
  2285  007D5F  5F                 	db	95	;'_'
  2286  007D60  69                 	db	105	;'i'
  2287  007D61  6E                 	db	110	;'n'
  2288  007D62  69                 	db	105	;'i'
  2289  007D63  74                 	db	116	;'t'
  2290  007D64  00                 	db	0
  2291  007D65                     STR_82:
  2292  007D65  54                 	db	84	;'T'
  2293  007D66  68                 	db	104	;'h'
  2294  007D67  72                 	db	114	;'r'
  2295  007D68  6F                 	db	111	;'o'
  2296  007D69  75                 	db	117	;'u'
  2297  007D6A  20                 	db	32
  2298  007D6B  50                 	db	80	;'P'
  2299  007D6C  6F                 	db	111	;'o'
  2300  007D6D  72                 	db	114	;'r'
  2301  007D6E  74                 	db	116	;'t'
  2302  007D6F  23                 	db	35
  2303  007D70  20                 	db	32
  2304  007D71  00                 	db	0
  2305  007D72                     STR_73:
  2306  007D72  4C                 	db	76	;'L'
  2307  007D73  3A                 	db	58	;':'
  2308  007D74  20                 	db	32
  2309  007D75  20                 	db	32
  2310  007D76  20                 	db	32
  2311  007D77  20                 	db	32
  2312  007D78  20                 	db	32
  2313  007D79  20                 	db	32
  2314  007D7A  20                 	db	32
  2315  007D7B  54                 	db	84	;'T'
  2316  007D7C  3A                 	db	58	;':'
  2317  007D7D  20                 	db	32
  2318  007D7E  00                 	db	0
  2319  007D7F                     STR_164:
  2320  007D7F  6D                 	db	109	;'m'
  2321  007D80  61                 	db	97	;'a'
  2322  007D81  63                 	db	99	;'c'
  2323  007D82  20                 	db	32
  2324  007D83  73                 	db	115	;'s'
  2325  007D84  65                 	db	101	;'e'
  2326  007D85  74                 	db	116	;'t'
  2327  007D86  20                 	db	32
  2328  007D87  64                 	db	100	;'d'
  2329  007D88  72                 	db	114	;'r'
  2330  007D89  20                 	db	32
  2331  007D8A  30                 	db	48	;'0'
  2332  007D8B  00                 	db	0
  2333  007D8C                     STR_165:
  2334  007D8C  6D                 	db	109	;'m'
  2335  007D8D  61                 	db	97	;'a'
  2336  007D8E  63                 	db	99	;'c'
  2337  007D8F  20                 	db	32
  2338  007D90  73                 	db	115	;'s'
  2339  007D91  65                 	db	101	;'e'
  2340  007D92  74                 	db	116	;'t'
  2341  007D93  20                 	db	32
  2342  007D94  64                 	db	100	;'d'
  2343  007D95  72                 	db	114	;'r'
  2344  007D96  20                 	db	32
  2345  007D97  31                 	db	49	;'1'
  2346  007D98  00                 	db	0
  2347  007D99                     STR_166:
  2348  007D99  6D                 	db	109	;'m'
  2349  007D9A  61                 	db	97	;'a'
  2350  007D9B  63                 	db	99	;'c'
  2351  007D9C  20                 	db	32
  2352  007D9D  73                 	db	115	;'s'
  2353  007D9E  65                 	db	101	;'e'
  2354  007D9F  74                 	db	116	;'t'
  2355  007DA0  20                 	db	32
  2356  007DA1  64                 	db	100	;'d'
  2357  007DA2  72                 	db	114	;'r'
  2358  007DA3  20                 	db	32
  2359  007DA4  32                 	db	50	;'2'
  2360  007DA5  00                 	db	0
  2361  007DA6                     STR_167:
  2362  007DA6  6D                 	db	109	;'m'
  2363  007DA7  61                 	db	97	;'a'
  2364  007DA8  63                 	db	99	;'c'
  2365  007DA9  20                 	db	32
  2366  007DAA  73                 	db	115	;'s'
  2367  007DAB  65                 	db	101	;'e'
  2368  007DAC  74                 	db	116	;'t'
  2369  007DAD  20                 	db	32
  2370  007DAE  64                 	db	100	;'d'
  2371  007DAF  72                 	db	114	;'r'
  2372  007DB0  20                 	db	32
  2373  007DB1  33                 	db	51	;'3'
  2374  007DB2  00                 	db	0
  2375  007DB3                     STR_168:
  2376  007DB3  6D                 	db	109	;'m'
  2377  007DB4  61                 	db	97	;'a'
  2378  007DB5  63                 	db	99	;'c'
  2379  007DB6  20                 	db	32
  2380  007DB7  73                 	db	115	;'s'
  2381  007DB8  65                 	db	101	;'e'
  2382  007DB9  74                 	db	116	;'t'
  2383  007DBA  20                 	db	32
  2384  007DBB  64                 	db	100	;'d'
  2385  007DBC  72                 	db	114	;'r'
  2386  007DBD  20                 	db	32
  2387  007DBE  34                 	db	52	;'4'
  2388  007DBF  00                 	db	0
  2389  007DC0                     STR_169:
  2390  007DC0  6D                 	db	109	;'m'
  2391  007DC1  61                 	db	97	;'a'
  2392  007DC2  63                 	db	99	;'c'
  2393  007DC3  20                 	db	32
  2394  007DC4  73                 	db	115	;'s'
  2395  007DC5  65                 	db	101	;'e'
  2396  007DC6  74                 	db	116	;'t'
  2397  007DC7  20                 	db	32
  2398  007DC8  64                 	db	100	;'d'
  2399  007DC9  72                 	db	114	;'r'
  2400  007DCA  20                 	db	32
  2401  007DCB  35                 	db	53	;'5'
  2402  007DCC  00                 	db	0
  2403  007DCD                     STR_170:
  2404  007DCD  6D                 	db	109	;'m'
  2405  007DCE  61                 	db	97	;'a'
  2406  007DCF  63                 	db	99	;'c'
  2407  007DD0  20                 	db	32
  2408  007DD1  73                 	db	115	;'s'
  2409  007DD2  65                 	db	101	;'e'
  2410  007DD3  74                 	db	116	;'t'
  2411  007DD4  20                 	db	32
  2412  007DD5  64                 	db	100	;'d'
  2413  007DD6  72                 	db	114	;'r'
  2414  007DD7  20                 	db	32
  2415  007DD8  36                 	db	54	;'6'
  2416  007DD9  00                 	db	0
  2417  007DDA                     STR_171:
  2418  007DDA  6D                 	db	109	;'m'
  2419  007DDB  61                 	db	97	;'a'
  2420  007DDC  63                 	db	99	;'c'
  2421  007DDD  20                 	db	32
  2422  007DDE  73                 	db	115	;'s'
  2423  007DDF  65                 	db	101	;'e'
  2424  007DE0  74                 	db	116	;'t'
  2425  007DE1  20                 	db	32
  2426  007DE2  64                 	db	100	;'d'
  2427  007DE3  72                 	db	114	;'r'
  2428  007DE4  20                 	db	32
  2429  007DE5  37                 	db	55	;'7'
  2430  007DE6  00                 	db	0
  2431  007DE7                     STR_41:
  2432  007DE7  6D                 	db	109	;'m'
  2433  007DE8  61                 	db	97	;'a'
  2434  007DE9  63                 	db	99	;'c'
  2435  007DEA  20                 	db	32
  2436  007DEB  6A                 	db	106	;'j'
  2437  007DEC  6F                 	db	111	;'o'
  2438  007DED  69                 	db	105	;'i'
  2439  007DEE  6E                 	db	110	;'n'
  2440  007DEF  20                 	db	32
  2441  007DF0  61                 	db	97	;'a'
  2442  007DF1  62                 	db	98	;'b'
  2443  007DF2  70                 	db	112	;'p'
  2444  007DF3  00                 	db	0
  2445  007DF4                     STR_10:
  2446  007DF4  42                 	db	66	;'B'
  2447  007DF5  75                 	db	117	;'u'
  2448  007DF6  74                 	db	116	;'t'
  2449  007DF7  74                 	db	116	;'t'
  2450  007DF8  6F                 	db	111	;'o'
  2451  007DF9  6E                 	db	110	;'n'
  2452  007DFA  20                 	db	32
  2453  007DFB  54                 	db	84	;'T'
  2454  007DFC  65                 	db	101	;'e'
  2455  007DFD  73                 	db	115	;'s'
  2456  007DFE  74                 	db	116	;'t'
  2457  007DFF  3A                 	db	58	;':'
  2458  007E00  00                 	db	0
  2459  007E01                     STR_13:
  2460  007E01  42                 	db	66	;'B'
  2461  007E02  75                 	db	117	;'u'
  2462  007E03  74                 	db	116	;'t'
  2463  007E04  74                 	db	116	;'t'
  2464  007E05  6F                 	db	111	;'o'
  2465  007E06  6E                 	db	110	;'n'
  2466  007E07  31                 	db	49	;'1'
  2467  007E08  20                 	db	32
  2468  007E09  50                 	db	80	;'P'
  2469  007E0A  41                 	db	65	;'A'
  2470  007E0B  53                 	db	83	;'S'
  2471  007E0C  53                 	db	83	;'S'
  2472  007E0D  00                 	db	0
  2473  007E0E                     STR_14:
  2474  007E0E  42                 	db	66	;'B'
  2475  007E0F  75                 	db	117	;'u'
  2476  007E10  74                 	db	116	;'t'
  2477  007E11  74                 	db	116	;'t'
  2478  007E12  6F                 	db	111	;'o'
  2479  007E13  6E                 	db	110	;'n'
  2480  007E14  32                 	db	50	;'2'
  2481  007E15  20                 	db	32
  2482  007E16  50                 	db	80	;'P'
  2483  007E17  41                 	db	65	;'A'
  2484  007E18  53                 	db	83	;'S'
  2485  007E19  53                 	db	83	;'S'
  2486  007E1A  00                 	db	0
  2487  007E1B                     STR_12:
  2488  007E1B  50                 	db	80	;'P'
  2489  007E1C  72                 	db	114	;'r'
  2490  007E1D  65                 	db	101	;'e'
  2491  007E1E  73                 	db	115	;'s'
  2492  007E1F  73                 	db	115	;'s'
  2493  007E20  20                 	db	32
  2494  007E21  42                 	db	66	;'B'
  2495  007E22  75                 	db	117	;'u'
  2496  007E23  74                 	db	116	;'t'
  2497  007E24  74                 	db	116	;'t'
  2498  007E25  6F                 	db	111	;'o'
  2499  007E26  6E                 	db	110	;'n'
  2500  007E27  00                 	db	0
  2501  007E28                     STR_189:
  2502  007E28  55                 	db	85	;'U'
  2503  007E29  53                 	db	83	;'S'
  2504  007E2A  42                 	db	66	;'B'
  2505  007E2B  20                 	db	32
  2506  007E2C  48                 	db	72	;'H'
  2507  007E2D  61                 	db	97	;'a'
  2508  007E2E  6E                 	db	110	;'n'
  2509  007E2F  64                 	db	100	;'d'
  2510  007E30  6C                 	db	108	;'l'
  2511  007E31  65                 	db	101	;'e'
  2512  007E32  72                 	db	114	;'r'
  2513  007E33  00                 	db	0
  2514  007E34                     STR_72:
  2515  007E34  4F                 	db	79	;'O'
  2516  007E35  6E                 	db	110	;'n'
  2517  007E36  20                 	db	32
  2518  007E37  50                 	db	80	;'P'
  2519  007E38  6F                 	db	111	;'o'
  2520  007E39  72                 	db	114	;'r'
  2521  007E3A  74                 	db	116	;'t'
  2522  007E3B  20                 	db	32
  2523  007E3C  23                 	db	35
  2524  007E3D  3A                 	db	58	;':'
  2525  007E3E  20                 	db	32
  2526  007E3F  00                 	db	0
  2527  007E40                     STR_87:
  2528  007E40  54                 	db	84	;'T'
  2529  007E41  78                 	db	120	;'x'
  2530  007E42  20                 	db	32
  2531  007E43  50                 	db	80	;'P'
  2532  007E44  6F                 	db	111	;'o'
  2533  007E45  72                 	db	114	;'r'
  2534  007E46  74                 	db	116	;'t'
  2535  007E47  20                 	db	32
  2536  007E48  23                 	db	35
  2537  007E49  3A                 	db	58	;':'
  2538  007E4A  20                 	db	32
  2539  007E4B  00                 	db	0
  2540  007E4C                     STR_86:
  2541  007E4C  53                 	db	83	;'S'
  2542  007E4D  65                 	db	101	;'e'
  2543  007E4E  6E                 	db	110	;'n'
  2544  007E4F  74                 	db	116	;'t'
  2545  007E50  20                 	db	32
  2546  007E51  44                 	db	68	;'D'
  2547  007E52  61                 	db	97	;'a'
  2548  007E53  74                 	db	116	;'t'
  2549  007E54  61                 	db	97	;'a'
  2550  007E55  3A                 	db	58	;':'
  2551  007E56  20                 	db	32
  2552  007E57  00                 	db	0
  2553  007E58                     STR_136:
  2554  007E58  44                 	db	68	;'D'
  2555  007E59  61                 	db	97	;'a'
  2556  007E5A  74                 	db	116	;'t'
  2557  007E5B  61                 	db	97	;'a'
  2558  007E5C  20                 	db	32
  2559  007E5D  52                 	db	82	;'R'
  2560  007E5E  61                 	db	97	;'a'
  2561  007E5F  74                 	db	116	;'t'
  2562  007E60  65                 	db	101	;'e'
  2563  007E61  3A                 	db	58	;':'
  2564  007E62  20                 	db	32
  2565  007E63  00                 	db	0
  2566  007E64                     STR_85:
  2567  007E64  6D                 	db	109	;'m'
  2568  007E65  61                 	db	97	;'a'
  2569  007E66  63                 	db	99	;'c'
  2570  007E67  20                 	db	32
  2571  007E68  74                 	db	116	;'t'
  2572  007E69  78                 	db	120	;'x'
  2573  007E6A  20                 	db	32
  2574  007E6B  63                 	db	99	;'c'
  2575  007E6C  6E                 	db	110	;'n'
  2576  007E6D  66                 	db	102	;'f'
  2577  007E6E  20                 	db	32
  2578  007E6F  00                 	db	0
  2579  007E70                     STR_8:
  2580  007E70  4D                 	db	77	;'M'
  2581  007E71  61                 	db	97	;'a'
  2582  007E72  72                 	db	114	;'r'
  2583  007E73  20                 	db	32
  2584  007E74  32                 	db	50	;'2'
  2585  007E75  37                 	db	55	;'7'
  2586  007E76  20                 	db	32
  2587  007E77  32                 	db	50	;'2'
  2588  007E78  30                 	db	48	;'0'
  2589  007E79  31                 	db	49	;'1'
  2590  007E7A  38                 	db	56	;'8'
  2591  007E7B  00                 	db	0
  2592  007E7C                     STR_11:
  2593  007E7C  42                 	db	66	;'B'
  2594  007E7D  75                 	db	117	;'u'
  2595  007E7E  74                 	db	116	;'t'
  2596  007E7F  74                 	db	116	;'t'
  2597  007E80  6F                 	db	111	;'o'
  2598  007E81  6E                 	db	110	;'n'
  2599  007E82  20                 	db	32
  2600  007E83  46                 	db	70	;'F'
  2601  007E84  41                 	db	65	;'A'
  2602  007E85  49                 	db	73	;'I'
  2603  007E86  4C                 	db	76	;'L'
  2604  007E87  00                 	db	0
  2605  007E88                     STR_61:
  2606  007E88  4F                 	db	79	;'O'
  2607  007E89  54                 	db	84	;'T'
  2608  007E8A  41                 	db	65	;'A'
  2609  007E8B  41                 	db	65	;'A'
  2610  007E8C  20                 	db	32
  2611  007E8D  4A                 	db	74	;'J'
  2612  007E8E  6F                 	db	111	;'o'
  2613  007E8F  69                 	db	105	;'i'
  2614  007E90  6E                 	db	110	;'n'
  2615  007E91  20                 	db	32
  2616  007E92  00                 	db	0
  2617  007E93                     STR_59:
  2618  007E93  6E                 	db	110	;'n'
  2619  007E94  6F                 	db	111	;'o'
  2620  007E95  5F                 	db	95	;'_'
  2621  007E96  66                 	db	102	;'f'
  2622  007E97  72                 	db	114	;'r'
  2623  007E98  65                 	db	101	;'e'
  2624  007E99  65                 	db	101	;'e'
  2625  007E9A  5F                 	db	95	;'_'
  2626  007E9B  63                 	db	99	;'c'
  2627  007E9C  68                 	db	104	;'h'
  2628  007E9D  00                 	db	0
  2629  007E9E                     STR_51:
  2630  007E9E  53                 	db	83	;'S'
  2631  007E9F  75                 	db	117	;'u'
  2632  007EA0  63                 	db	99	;'c'
  2633  007EA1  63                 	db	99	;'c'
  2634  007EA2  65                 	db	101	;'e'
  2635  007EA3  73                 	db	115	;'s'
  2636  007EA4  73                 	db	115	;'s'
  2637  007EA5  66                 	db	102	;'f'
  2638  007EA6  75                 	db	117	;'u'
  2639  007EA7  6C                 	db	108	;'l'
  2640  007EA8  00                 	db	0
  2641  007EA9                     STR_68:
  2642  007EA9  6D                 	db	109	;'m'
  2643  007EAA  61                 	db	97	;'a'
  2644  007EAB  63                 	db	99	;'c'
  2645  007EAC  20                 	db	32
  2646  007EAD  67                 	db	103	;'g'
  2647  007EAE  65                 	db	101	;'e'
  2648  007EAF  74                 	db	116	;'t'
  2649  007EB0  20                 	db	32
  2650  007EB1  64                 	db	100	;'d'
  2651  007EB2  72                 	db	114	;'r'
  2652  007EB3  00                 	db	0
  2653  007EB4                     STR_46:
  2654  007EB4  56                 	db	86	;'V'
  2655  007EB5  61                 	db	97	;'a'
  2656  007EB6  6C                 	db	108	;'l'
  2657  007EB7  69                 	db	105	;'i'
  2658  007EB8  64                 	db	100	;'d'
  2659  007EB9  20                 	db	32
  2660  007EBA  4B                 	db	75	;'K'
  2661  007EBB  65                 	db	101	;'e'
  2662  007EBC  79                 	db	121	;'y'
  2663  007EBD  73                 	db	115	;'s'
  2664  007EBE  00                 	db	0
  2665  007EBF                     STR_15:
  2666  007EBF  43                 	db	67	;'C'
  2667  007EC0  6F                 	db	111	;'o'
  2668  007EC1  6D                 	db	109	;'m'
  2669  007EC2  6D                 	db	109	;'m'
  2670  007EC3  20                 	db	32
  2671  007EC4  54                 	db	84	;'T'
  2672  007EC5  65                 	db	101	;'e'
  2673  007EC6  73                 	db	115	;'s'
  2674  007EC7  74                 	db	116	;'t'
  2675  007EC8  3A                 	db	58	;':'
  2676  007EC9  00                 	db	0
  2677  007ECA                     STR_106:
  2678  007ECA  52                 	db	82	;'R'
  2679  007ECB  78                 	db	120	;'x'
  2680  007ECC  20                 	db	32
  2681  007ECD  50                 	db	80	;'P'
  2682  007ECE  6F                 	db	111	;'o'
  2683  007ECF  72                 	db	114	;'r'
  2684  007ED0  74                 	db	116	;'t'
  2685  007ED1  23                 	db	35
  2686  007ED2  20                 	db	32
  2687  007ED3  00                 	db	0
  2688  007ED4                     STR_50:
  2689  007ED4  41                 	db	65	;'A'
  2690  007ED5  42                 	db	66	;'B'
  2691  007ED6  50                 	db	80	;'P'
  2692  007ED7  20                 	db	32
  2693  007ED8  4A                 	db	74	;'J'
  2694  007ED9  6F                 	db	111	;'o'
  2695  007EDA  69                 	db	105	;'i'
  2696  007EDB  6E                 	db	110	;'n'
  2697  007EDC  20                 	db	32
  2698  007EDD  00                 	db	0
  2699  007EDE                     STR_24:
  2700  007EDE  4D                 	db	77	;'M'
  2701  007EDF  4F                 	db	79	;'O'
  2702  007EE0  54                 	db	84	;'T'
  2703  007EE1  45                 	db	69	;'E'
  2704  007EE2  20                 	db	32
  2705  007EE3  4D                 	db	77	;'M'
  2706  007EE4  6F                 	db	111	;'o'
  2707  007EE5  64                 	db	100	;'d'
  2708  007EE6  65                 	db	101	;'e'
  2709  007EE7  00                 	db	0
  2710  007EE8                     STR_64:
  2711  007EE8  4F                 	db	79	;'O'
  2712  007EE9  54                 	db	84	;'T'
  2713  007EEA  41                 	db	65	;'A'
  2714  007EEB  41                 	db	65	;'A'
  2715  007EEC  20                 	db	32
  2716  007EED  4A                 	db	74	;'J'
  2717  007EEE  6F                 	db	111	;'o'
  2718  007EEF  69                 	db	105	;'i'
  2719  007EF0  6E                 	db	110	;'n'
  2720  007EF1  00                 	db	0
  2721  007EF2                     STR_52:
  2722  007EF2  6D                 	db	109	;'m'
  2723  007EF3  61                 	db	97	;'a'
  2724  007EF4  63                 	db	99	;'c'
  2725  007EF5  20                 	db	32
  2726  007EF6  72                 	db	114	;'r'
  2727  007EF7  65                 	db	101	;'e'
  2728  007EF8  73                 	db	115	;'s'
  2729  007EF9  65                 	db	101	;'e'
  2730  007EFA  74                 	db	116	;'t'
  2731  007EFB  00                 	db	0
  2732  007EFC                     STR_30:
  2733  007EFC  73                 	db	115	;'s'
  2734  007EFD  79                 	db	121	;'y'
  2735  007EFE  73                 	db	115	;'s'
  2736  007EFF  20                 	db	32
  2737  007F00  72                 	db	114	;'r'
  2738  007F01  65                 	db	101	;'e'
  2739  007F02  73                 	db	115	;'s'
  2740  007F03  65                 	db	101	;'e'
  2741  007F04  74                 	db	116	;'t'
  2742  007F05  00                 	db	0
  2743  007F06                     STR_16:
  2744  007F06  4C                 	db	76	;'L'
  2745  007F07  45                 	db	69	;'E'
  2746  007F08  44                 	db	68	;'D'
  2747  007F09  20                 	db	32
  2748  007F0A  54                 	db	84	;'T'
  2749  007F0B  65                 	db	101	;'e'
  2750  007F0C  73                 	db	115	;'s'
  2751  007F0D  74                 	db	116	;'t'
  2752  007F0E  3A                 	db	58	;':'
  2753  007F0F  00                 	db	0
  2754  007F10                     STR_187:
  2755  007F10  43                 	db	67	;'C'
  2756  007F11  44                 	db	68	;'D'
  2757  007F12  43                 	db	67	;'C'
  2758  007F13  20                 	db	32
  2759  007F14  4D                 	db	77	;'M'
  2760  007F15  6F                 	db	111	;'o'
  2761  007F16  64                 	db	100	;'d'
  2762  007F17  65                 	db	101	;'e'
  2763  007F18  00                 	db	0
  2764  007F19                     STR_47:
  2765  007F19  52                 	db	82	;'R'
  2766  007F1A  65                 	db	101	;'e'
  2767  007F1B  71                 	db	113	;'q'
  2768  007F1C  75                 	db	117	;'u'
  2769  007F1D  69                 	db	105	;'i'
  2770  007F1E  72                 	db	114	;'r'
  2771  007F1F  65                 	db	101	;'e'
  2772  007F20  64                 	db	100	;'d'
  2773  007F21  00                 	db	0
  2774  007F22                     STR_49:
  2775  007F22  61                 	db	97	;'a'
  2776  007F23  63                 	db	99	;'c'
  2777  007F24  63                 	db	99	;'c'
  2778  007F25  65                 	db	101	;'e'
  2779  007F26  70                 	db	112	;'p'
  2780  007F27  74                 	db	116	;'t'
  2781  007F28  65                 	db	101	;'e'
  2782  007F29  64                 	db	100	;'d'
  2783  007F2A  00                 	db	0
  2784  007F2B                     STR_173:
  2785  007F2B  6D                 	db	109	;'m'
  2786  007F2C  61                 	db	97	;'a'
  2787  007F2D  63                 	db	99	;'c'
  2788  007F2E  20                 	db	32
  2789  007F2F  73                 	db	115	;'s'
  2790  007F30  61                 	db	97	;'a'
  2791  007F31  76                 	db	118	;'v'
  2792  007F32  65                 	db	101	;'e'
  2793  007F33  00                 	db	0
  2794  007F34                     STR_25:
  2795  007F34  53                 	db	83	;'S'
  2796  007F35  74                 	db	116	;'t'
  2797  007F36  61                 	db	97	;'a'
  2798  007F37  72                 	db	114	;'r'
  2799  007F38  74                 	db	116	;'t'
  2800  007F39  69                 	db	105	;'i'
  2801  007F3A  6E                 	db	110	;'n'
  2802  007F3B  67                 	db	103	;'g'
  2803  007F3C  00                 	db	0
  2804  007F3D                     STR_4:
  2805  007F3D  4D                 	db	77	;'M'
  2806  007F3E  6F                 	db	111	;'o'
  2807  007F3F  54                 	db	84	;'T'
  2808  007F40  65                 	db	101	;'e'
  2809  007F41  20                 	db	32
  2810  007F42  76                 	db	118	;'v'
  2811  007F43  20                 	db	32
  2812  007F44  2E                 	db	46
  2813  007F45  00                 	db	0
  2814  007F46                     STR_9:
  2815  007F46  31                 	db	49	;'1'
  2816  007F47  34                 	db	52	;'4'
  2817  007F48  3A                 	db	58	;':'
  2818  007F49  31                 	db	49	;'1'
  2819  007F4A  36                 	db	54	;'6'
  2820  007F4B  3A                 	db	58	;':'
  2821  007F4C  34                 	db	52	;'4'
  2822  007F4D  35                 	db	53	;'5'
  2823  007F4E  00                 	db	0
  2824  007F4F  52                 	db	82	;'R'
  2825  007F50  46                 	db	70	;'F'
  2826  007F51  20                 	db	32
  2827  007F52  54                 	db	84	;'T'
  2828  007F53  65                 	db	101	;'e'
  2829  007F54  73                 	db	115	;'s'
  2830  007F55  74                 	db	116	;'t'
  2831  007F56  3A                 	db	58	;':'
  2832  007F57  00                 	db	0
  2833  007F58                     STR_17:
  2834  007F58  41                 	db	65	;'A'
  2835  007F59  44                 	db	68	;'D'
  2836  007F5A  43                 	db	67	;'C'
  2837  007F5B  20                 	db	32
  2838  007F5C  54                 	db	84	;'T'
  2839  007F5D  65                 	db	101	;'e'
  2840  007F5E  73                 	db	115	;'s'
  2841  007F5F  74                 	db	116	;'t'
  2842  007F60  00                 	db	0
  2843  007F61                     STR_188:
  2844  007F61  43                 	db	67	;'C'
  2845  007F62  6F                 	db	111	;'o'
  2846  007F63  6D                 	db	109	;'m'
  2847  007F64  6D                 	db	109	;'m'
  2848  007F65  61                 	db	97	;'a'
  2849  007F66  6E                 	db	110	;'n'
  2850  007F67  64                 	db	100	;'d'
  2851  007F68  00                 	db	0
  2852  007F69                     STR_18:
  2853  007F69  54                 	db	84	;'T'
  2854  007F6A  65                 	db	101	;'e'
  2855  007F6B  6D                 	db	109	;'m'
  2856  007F6C  70                 	db	112	;'p'
  2857  007F6D  20                 	db	32
  2858  007F6E  20                 	db	32
  2859  007F6F  3D                 	db	61	;'='
  2860  007F70  00                 	db	0
  2861  007F71                     STR_19:
  2862  007F71  4C                 	db	76	;'L'
  2863  007F72  69                 	db	105	;'i'
  2864  007F73  67                 	db	103	;'g'
  2865  007F74  68                 	db	104	;'h'
  2866  007F75  74                 	db	116	;'t'
  2867  007F76  20                 	db	32
  2868  007F77  3D                 	db	61	;'='
  2869  007F78  00                 	db	0
  2870  007F79                     STR_117:
  2871  007F79  54                 	db	84	;'T'
  2872  007F7A  65                 	db	101	;'e'
  2873  007F7B  6D                 	db	109	;'m'
  2874  007F7C  70                 	db	112	;'p'
  2875  007F7D  20                 	db	32
  2876  007F7E  3A                 	db	58	;':'
  2877  007F7F  00                 	db	0
  2878  007F80                     STR_116:
  2879  007F80  4C                 	db	76	;'L'
  2880  007F81  69                 	db	105	;'i'
  2881  007F82  67                 	db	103	;'g'
  2882  007F83  68                 	db	104	;'h'
  2883  007F84  74                 	db	116	;'t'
  2884  007F85  3A                 	db	58	;':'
  2885  007F86  00                 	db	0
  2886  007F87                     STR_121:
  2887  007F87  45                 	db	69	;'E'
  2888  007F88  76                 	db	118	;'v'
  2889  007F89  65                 	db	101	;'e'
  2890  007F8A  72                 	db	114	;'r'
  2891  007F8B  79                 	db	121	;'y'
  2892  007F8C  3A                 	db	58	;':'
  2893  007F8D  00                 	db	0
  2894  007F8E                     STR_65:
  2895  007F8E  44                 	db	68	;'D'
  2896  007F8F  65                 	db	101	;'e'
  2897  007F90  6E                 	db	110	;'n'
  2898  007F91  69                 	db	105	;'i'
  2899  007F92  65                 	db	101	;'e'
  2900  007F93  64                 	db	100	;'d'
  2901  007F94  00                 	db	0
  2902  007F95                     STR_63:
  2903  007F95  64                 	db	100	;'d'
  2904  007F96  65                 	db	101	;'e'
  2905  007F97  6E                 	db	110	;'n'
  2906  007F98  69                 	db	105	;'i'
  2907  007F99  65                 	db	101	;'e'
  2908  007F9A  64                 	db	100	;'d'
  2909  007F9B  00                 	db	0
  2910  007F9C                     STR_97:
  2911  007F9C  6E                 	db	110	;'n'
  2912  007F9D  6F                 	db	111	;'o'
  2913  007F9E  5F                 	db	95	;'_'
  2914  007F9F  66                 	db	102	;'f'
  2915  007FA0  72                 	db	114	;'r'
  2916  007FA1  65                 	db	101	;'e'
  2917  007FA2  00                 	db	0
  2918  007FA3                     STR_95:
  2919  007FA3  6D                 	db	109	;'m'
  2920  007FA4  61                 	db	97	;'a'
  2921  007FA5  63                 	db	99	;'c'
  2922  007FA6  5F                 	db	95	;'_'
  2923  007FA7  65                 	db	101	;'e'
  2924  007FA8  72                 	db	114	;'r'
  2925  007FA9  00                 	db	0
  2926  007FAA                     STR_90:
  2927  007FAA  6D                 	db	109	;'m'
  2928  007FAB  61                 	db	97	;'a'
  2929  007FAC  63                 	db	99	;'c'
  2930  007FAD  5F                 	db	95	;'_'
  2931  007FAE  72                 	db	114	;'r'
  2932  007FAF  78                 	db	120	;'x'
  2933  007FB0  00                 	db	0
  2934  007FB1                     STR_93:
  2935  007FB1  6D                 	db	109	;'m'
  2936  007FB2  61                 	db	97	;'a'
  2937  007FB3  63                 	db	99	;'c'
  2938  007FB4  5F                 	db	95	;'_'
  2939  007FB5  74                 	db	116	;'t'
  2940  007FB6  78                 	db	120	;'x'
  2941  007FB7  00                 	db	0
  2942  007FB8                     STR_31:
  2943  007FB8  52                 	db	82	;'R'
  2944  007FB9  4E                 	db	78	;'N'
  2945  007FBA  32                 	db	50	;'2'
  2946  007FBB  34                 	db	52	;'4'
  2947  007FBC  00                 	db	0
  2948  007FBD                     STR_35:
  2949  007FBD  52                 	db	82	;'R'
  2950  007FBE  4E                 	db	78	;'N'
  2951  007FBF  32                 	db	50	;'2'
  2952  007FC0  39                 	db	57	;'9'
  2953  007FC1  00                 	db	0
  2954  007FC2                     STR_122:
  2955  007FC2  4D                 	db	77	;'M'
  2956  007FC3  69                 	db	105	;'i'
  2957  007FC4  6E                 	db	110	;'n'
  2958  007FC5  73                 	db	115	;'s'
  2959  007FC6  00                 	db	0
  2960  007FC7                     STR_138:
  2961  007FC7  20                 	db	32
  2962  007FC8  30                 	db	48	;'0'
  2963  007FC9  20                 	db	32
  2964  007FCA  00                 	db	0
  2965  007FCB                     STR_139:
  2966  007FCB  20                 	db	32
  2967  007FCC  31                 	db	49	;'1'
  2968  007FCD  20                 	db	32
  2969  007FCE  00                 	db	0
  2970  007FCF                     STR_140:
  2971  007FCF  20                 	db	32
  2972  007FD0  32                 	db	50	;'2'
  2973  007FD1  20                 	db	32
  2974  007FD2  00                 	db	0
  2975  007FD3                     STR_141:
  2976  007FD3  20                 	db	32
  2977  007FD4  33                 	db	51	;'3'
  2978  007FD5  20                 	db	32
  2979  007FD6  00                 	db	0
  2980  007FD7                     STR_142:
  2981  007FD7  20                 	db	32
  2982  007FD8  34                 	db	52	;'4'
  2983  007FD9  20                 	db	32
  2984  007FDA  00                 	db	0
  2985  007FDB                     STR_143:
  2986  007FDB  20                 	db	32
  2987  007FDC  35                 	db	53	;'5'
  2988  007FDD  20                 	db	32
  2989  007FDE  00                 	db	0
  2990  007FDF                     STR_146:
  2991  007FDF  20                 	db	32
  2992  007FE0  31                 	db	49	;'1'
  2993  007FE1  30                 	db	48	;'0'
  2994  007FE2  00                 	db	0
  2995  007FE3                     STR_148:
  2996  007FE3  20                 	db	32
  2997  007FE4  33                 	db	51	;'3'
  2998  007FE5  30                 	db	48	;'0'
  2999  007FE6  00                 	db	0
  3000  007FE7                     STR_149:
  3001  007FE7  20                 	db	32
  3002  007FE8  36                 	db	54	;'6'
  3003  007FE9  30                 	db	48	;'0'
  3004  007FEA  00                 	db	0
  3005  007FEB                     STR_147:
  3006  007FEB  20                 	db	32
  3007  007FEC  31                 	db	49	;'1'
  3008  007FED  35                 	db	53	;'5'
  3009  007FEE  00                 	db	0
  3010  007FEF                     STR_128:
  3011  007FEF  4F                 	db	79	;'O'
  3012  007FF0  46                 	db	70	;'F'
  3013  007FF1  46                 	db	70	;'F'
  3014  007FF2  00                 	db	0
  3015  007FF3                     STR_144:
  3016  007FF3  41                 	db	65	;'A'
  3017  007FF4  44                 	db	68	;'D'
  3018  007FF5  52                 	db	82	;'R'
  3019  007FF6  00                 	db	0
  3020  007FF7                     STR_44:
  3021  007FF7  6F                 	db	111	;'o'
  3022  007FF8  6B                 	db	107	;'k'
  3023  007FF9  00                 	db	0
  3024  007FFA                     STR_118:
  3025  007FFA  43                 	db	67	;'C'
  3026  007FFB  00                 	db	0
  3027  007FFC                     STR_21:
  3028  007FFC  7A                 	db	122	;'z'
  3029  007FFD  00                 	db	0
  3030  0000                     
  3031                           ; #config settings
  3032  007FFE  00                 	db	0	; dummy byte at the end
  3033  0000                     
  3034                           	psect	cinit
  3035  00622A                     __pcinit:
  3036                           	opt stack 0
  3037  00622A                     start_initialization:
  3038                           	opt stack 0
  3039  00622A                     __initialization:
  3040                           	opt stack 0
  3041                           
  3042                           ; Initialize objects allocated to BANK1 (2 bytes)
  3043                           ; load TBLPTR registers with __pidataBANK1
  3044  00622A  0E10               	movlw	low __pidataBANK1
  3045  00622C  6EF6               	movwf	tblptrl,c
  3046  00622E  0E73               	movlw	high __pidataBANK1
  3047  006230  6EF7               	movwf	tblptrh,c
  3048  006232  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  3049  006234  6EF8               	movwf	tblptru,c
  3050  006236  0009               	tblrd		*+	;fetch initializer
  3051  006238  CFF5 F1F8          	movff	tablat,__pdataBANK1
  3052  00623C  0009               	tblrd		*+	;fetch initializer
  3053  00623E  CFF5 F1F9          	movff	tablat,__pdataBANK1+1
  3054                           
  3055                           ; Initialize objects allocated to BANK0 (9 bytes)
  3056                           ; load TBLPTR registers with __pidataBANK0
  3057  006242  0EBC               	movlw	low __pidataBANK0
  3058  006244  6EF6               	movwf	tblptrl,c
  3059  006246  0E72               	movlw	high __pidataBANK0
  3060  006248  6EF7               	movwf	tblptrh,c
  3061  00624A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  3062  00624C  6EF8               	movwf	tblptru,c
  3063  00624E  EE00  F0F6         	lfsr	0,__pdataBANK0
  3064  006252  EE10 F009          	lfsr	1,9
  3065  006256                     copy_data0:
  3066  006256  0009               	tblrd		*+
  3067  006258  CFF5 FFEE          	movff	tablat,postinc0
  3068  00625C  50E5               	movf	postdec1,w,c
  3069  00625E  50E1               	movf	fsr1l,w,c
  3070  006260  E1FA               	bnz	copy_data0
  3071                           
  3072                           ; Clear objects allocated to BANK3 (128 bytes)
  3073  006262  EE03  F000         	lfsr	0,__pbssBANK3
  3074  006266  0E80               	movlw	128
  3075  006268                     clear_0:
  3076  006268  6AEE               	clrf	postinc0,c
  3077  00626A  06E8               	decf	wreg,f,c
  3078  00626C  E1FD               	bnz	clear_0
  3079                           
  3080                           ; Clear objects allocated to BANK2 (192 bytes)
  3081  00626E  EE02  F000         	lfsr	0,__pbssBANK2
  3082  006272  0EC0               	movlw	192
  3083  006274                     clear_1:
  3084  006274  6AEE               	clrf	postinc0,c
  3085  006276  06E8               	decf	wreg,f,c
  3086  006278  E1FD               	bnz	clear_1
  3087                           
  3088                           ; Clear objects allocated to BANK1 (243 bytes)
  3089  00627A  EE01  F000         	lfsr	0,__pbssBANK1
  3090  00627E  0EF3               	movlw	243
  3091  006280                     clear_2:
  3092  006280  6AEE               	clrf	postinc0,c
  3093  006282  06E8               	decf	wreg,f,c
  3094  006284  E1FD               	bnz	clear_2
  3095                           
  3096                           ; Clear objects allocated to BANK0 (63 bytes)
  3097  006286  EE00  F0B7         	lfsr	0,__pbssBANK0
  3098  00628A  0E3F               	movlw	63
  3099  00628C                     clear_3:
  3100  00628C  6AEE               	clrf	postinc0,c
  3101  00628E  06E8               	decf	wreg,f,c
  3102  006290  E1FD               	bnz	clear_3
  3103                           
  3104                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  3105  006292  6A5A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  3106                           
  3107                           ; Clear objects allocated to COMRAM (44 bytes)
  3108  006294  EE00  F02E         	lfsr	0,__pbssCOMRAM
  3109  006298  0E2C               	movlw	44
  3110  00629A                     clear_4:
  3111  00629A  6AEE               	clrf	postinc0,c
  3112  00629C  06E8               	decf	wreg,f,c
  3113  00629E  E1FD               	bnz	clear_4
  3114  0062A0                     end_of_initialization:
  3115                           	opt stack 0
  3116  0062A0                     __end_of__initialization:
  3117                           	opt stack 0
  3118  0062A0  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3119  0062A2  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3120  0062A4  0E00               	movlw	low (__Lmediumconst shr (0+16))
  3121  0062A6  6EF8               	movwf	tblptru,c
  3122  0062A8  0100               	movlb	0
  3123  0062AA  EFF9  F01E         	goto	_main	;jump to C main() function
  3124                           tblptru	equ	0xFF8
  3125                           tblptrh	equ	0xFF7
  3126                           tblptrl	equ	0xFF6
  3127                           tablat	equ	0xFF5
  3128                           postinc0	equ	0xFEE
  3129                           wreg	equ	0xFE8
  3130                           postdec1	equ	0xFE5
  3131                           fsr1l	equ	0xFE1
  3132                           
  3133                           	psect	bitbssCOMRAM
  3134  0002D0                     __pbitbssCOMRAM:
  3135                           	opt stack 0
  3136  0002D0                     _log:
  3137                           	opt stack 0
  3138  0002D0                     	ds	1
  3139                           tblptru	equ	0xFF8
  3140                           tblptrh	equ	0xFF7
  3141                           tblptrl	equ	0xFF6
  3142                           tablat	equ	0xFF5
  3143                           postinc0	equ	0xFEE
  3144                           wreg	equ	0xFE8
  3145                           postdec1	equ	0xFE5
  3146                           fsr1l	equ	0xFE1
  3147                           
  3148                           	psect	bssCOMRAM
  3149  00002E                     __pbssCOMRAM:
  3150                           	opt stack 0
  3151  00002E                     _outPipes:
  3152                           	opt stack 0
  3153  00002E                     	ds	8
  3154  000036                     _inPipes:
  3155                           	opt stack 0
  3156  000036                     	ds	6
  3157  00003C                     _pBDTEntryIn:
  3158                           	opt stack 0
  3159  00003C                     	ds	6
  3160  000042                     _pBDTEntryEP0OutNext:
  3161                           	opt stack 0
  3162  000042                     	ds	2
  3163  000044                     _pBDTEntryEP0OutCurrent:
  3164                           	opt stack 0
  3165  000044                     	ds	2
  3166  000046                     _timer1ReloadVal:
  3167                           	opt stack 0
  3168  000046                     	ds	2
  3169  000048                     USBapp_LEDUpdateStatus@ledCount:
  3170                           	opt stack 0
  3171  000048                     	ds	2
  3172  00004A                     _USBDeferStatusStagePacket:
  3173                           	opt stack 0
  3174  00004A                     	ds	1
  3175  00004B                     _USBStatusStageTimeoutCounter:
  3176                           	opt stack 0
  3177  00004B                     	ds	1
  3178  00004C                     _endpoint_number:
  3179                           	opt stack 0
  3180  00004C                     	ds	1
  3181  00004D                     _controlTransferState:
  3182                           	opt stack 0
  3183  00004D                     	ds	1
  3184  00004E                     _shortPacketStatus:
  3185                           	opt stack 0
  3186  00004E                     	ds	1
  3187  00004F                     _eusartTxBufferRemaining:
  3188                           	opt stack 0
  3189  00004F                     	ds	1
  3190  000050                     _RS232cp:
  3191                           	opt stack 0
  3192  000050                     	ds	1
  3193  000051                     _LastRS232Out:
  3194                           	opt stack 0
  3195  000051                     	ds	1
  3196  000052                     _RS232_Out_Data_Rdy:
  3197                           	opt stack 0
  3198  000052                     	ds	1
  3199  000053                     _NextUSBOut:
  3200                           	opt stack 0
  3201  000053                     	ds	1
  3202  000054                     _rxByteFlag:
  3203                           	opt stack 0
  3204  000054                     	ds	1
  3205  000055                     _cdc_trf_state:
  3206                           	opt stack 0
  3207  000055                     	ds	1
  3208  000056                     _moduleBufferIndex:
  3209                           	opt stack 0
  3210  000056                     	ds	1
  3211  000057                     _eusartRxCount:
  3212                           	opt stack 0
  3213  000057                     	ds	1
  3214  000058                     _USTATcopy:
  3215                           	opt stack 0
  3216  000058                     	ds	1
  3217  000059                     _USBActiveConfiguration:
  3218                           	opt stack 0
  3219  000059                     	ds	1
  3220                           tblptru	equ	0xFF8
  3221                           tblptrh	equ	0xFF7
  3222                           tblptrl	equ	0xFF6
  3223                           tablat	equ	0xFF5
  3224                           postinc0	equ	0xFEE
  3225                           wreg	equ	0xFE8
  3226                           postdec1	equ	0xFE5
  3227                           fsr1l	equ	0xFE1
  3228                           
  3229                           	psect	bssBANK0
  3230  0000B7                     __pbssBANK0:
  3231                           	opt stack 0
  3232  0000B7                     _ep_data_out:
  3233                           	opt stack 0
  3234  0000B7                     	ds	3
  3235  0000BA                     _ep_data_in:
  3236                           	opt stack 0
  3237  0000BA                     	ds	3
  3238  0000BD                     _CDCDataInHandle:
  3239                           	opt stack 0
  3240  0000BD                     	ds	2
  3241  0000BF                     _CDCDataOutHandle:
  3242                           	opt stack 0
  3243  0000BF                     	ds	2
  3244  0000C1                     _timer3ReloadVal:
  3245                           	opt stack 0
  3246  0000C1                     	ds	2
  3247  0000C3                     _timerMinTickCount:
  3248                           	opt stack 0
  3249  0000C3                     	ds	2
  3250  0000C5                     _timerMsTickCount:
  3251                           	opt stack 0
  3252  0000C5                     	ds	2
  3253  0000C7                     _temperature:
  3254                           	opt stack 0
  3255  0000C7                     	ds	2
  3256  0000C9                     _countBitsSilent:
  3257                           	opt stack 0
  3258  0000C9                     	ds	1
  3259  0000CA                     _countRX:
  3260                           	opt stack 0
  3261  0000CA                     	ds	1
  3262  0000CB                     _rx_data:
  3263                           	opt stack 0
  3264  0000CB                     	ds	1
  3265  0000CC                     _status:
  3266                           	opt stack 0
  3267  0000CC                     	ds	1
  3268  0000CD                     _control_signal_bitmap:
  3269                           	opt stack 0
  3270  0000CD                     	ds	1
  3271  0000CE                     _cdc_mem_type:
  3272                           	opt stack 0
  3273  0000CE                     	ds	1
  3274  0000CF                     _cdc_tx_len:
  3275                           	opt stack 0
  3276  0000CF                     	ds	1
  3277  0000D0                     _cdc_rx_len:
  3278                           	opt stack 0
  3279  0000D0                     	ds	1
  3280  0000D1                     _USBDeferOUTDataStagePackets:
  3281                           	opt stack 0
  3282  0000D1                     	ds	1
  3283  0000D2                     _USBDeferINDataStagePackets:
  3284                           	opt stack 0
  3285  0000D2                     	ds	1
  3286  0000D3                     _USBStatusStageEnabledFlag2:
  3287                           	opt stack 0
  3288  0000D3                     	ds	1
  3289  0000D4                     _USBStatusStageEnabledFlag1:
  3290                           	opt stack 0
  3291  0000D4                     	ds	1
  3292  0000D5                     _BothEP0OutUOWNsSet:
  3293                           	opt stack 0
  3294  0000D5                     	ds	1
  3295  0000D6                     _USBBusIsSuspended:
  3296                           	opt stack 0
  3297  0000D6                     	ds	1
  3298  0000D7                     _RemoteWakeup:
  3299                           	opt stack 0
  3300  0000D7                     	ds	1
  3301  0000D8                     _eusartRxTail:
  3302                           	opt stack 0
  3303  0000D8                     	ds	1
  3304  0000D9                     _eusartRxHead:
  3305                           	opt stack 0
  3306  0000D9                     	ds	1
  3307  0000DA                     _eusartTxTail:
  3308                           	opt stack 0
  3309  0000DA                     	ds	1
  3310  0000DB                     _eusartTxHead:
  3311                           	opt stack 0
  3312  0000DB                     	ds	1
  3313  0000DC                     service_pushbutton@Release_Timer:
  3314                           	opt stack 0
  3315  0000DC                     	ds	1
  3316  0000DD                     _usbState:
  3317                           	opt stack 0
  3318  0000DD                     	ds	1
  3319  0000DE                     _USBDeviceState:
  3320                           	opt stack 0
  3321  0000DE                     	ds	1
  3322  0000DF                     _lightStringSize:
  3323                           	opt stack 0
  3324  0000DF                     	ds	1
  3325  0000E0                     	ds	1
  3326  0000E1                     	ds	1
  3327  0000E2                     _rnModule:
  3328                           	opt stack 0
  3329  0000E2                     	ds	1
  3330  0000E3                     _sleepTicker:
  3331                           	opt stack 0
  3332  0000E3                     	ds	1
  3333  0000E4                     _minTicker:
  3334                           	opt stack 0
  3335  0000E4                     	ds	1
  3336  0000E5                     _secTicker:
  3337                           	opt stack 0
  3338  0000E5                     	ds	1
  3339  0000E6                     	ds	1
  3340  0000E7                     _randomPortNum:
  3341                           	opt stack 0
  3342  0000E7                     	ds	1
  3343  0000E8                     	ds	1
  3344  0000E9                     _runningState:
  3345                           	opt stack 0
  3346  0000E9                     	ds	1
  3347  0000EA                     _responseReady:
  3348                           	opt stack 0
  3349  0000EA                     	ds	1
  3350  0000EB                     _activeState:
  3351                           	opt stack 0
  3352  0000EB                     	ds	1
  3353  0000EC                     	ds	1
  3354  0000ED                     _powerOnStatus:
  3355                           	opt stack 0
  3356  0000ED                     	ds	1
  3357  0000EE                     _moteModeState:
  3358                           	opt stack 0
  3359  0000EE                     	ds	1
  3360  0000EF                     _appState:
  3361                           	opt stack 0
  3362  0000EF                     	ds	1
  3363  0000F0                     _mainState:
  3364                           	opt stack 0
  3365  0000F0                     	ds	1
  3366  0000F1                     _operationType:
  3367                           	opt stack 0
  3368  0000F1                     	ds	1
  3369  0000F2                     _appTimer:
  3370                           	opt stack 0
  3371  0000F2                     	ds	1
  3372  0000F3                     _USBAlternateInterface:
  3373                           	opt stack 0
  3374  0000F3                     	ds	2
  3375  0000F5                     _n_bit:
  3376                           	opt stack 0
  3377  0000F5                     	ds	1
  3378                           tblptru	equ	0xFF8
  3379                           tblptrh	equ	0xFF7
  3380                           tblptrl	equ	0xFF6
  3381                           tablat	equ	0xFF5
  3382                           postinc0	equ	0xFEE
  3383                           wreg	equ	0xFE8
  3384                           postdec1	equ	0xFE5
  3385                           fsr1l	equ	0xFE1
  3386                           
  3387                           	psect	dataBANK0
  3388  0000F6                     __pdataBANK0:
  3389                           	opt stack 0
  3390  0000F6                     _Contrast_level:
  3391                           	opt stack 0
  3392  0000F6                     	ds	1
  3393  0000F7                     _exitUSB:
  3394                           	opt stack 0
  3395  0000F7                     	ds	1
  3396  0000F8                     	ds	1
  3397  0000F9                     _periodicState:
  3398                           	opt stack 0
  3399  0000F9                     	ds	1
  3400  0000FA                     _menuTimeout:
  3401                           	opt stack 0
  3402  0000FA                     	ds	1
  3403  0000FB                     _dataRateValue:
  3404                           	opt stack 0
  3405  0000FB                     	ds	1
  3406  0000FC                     _periodicTimerValue:
  3407                           	opt stack 0
  3408  0000FC                     	ds	1
  3409  0000FD                     _periodicUpValue:
  3410                           	opt stack 0
  3411  0000FD                     	ds	1
  3412  0000FE                     _moteState:
  3413                           	opt stack 0
  3414  0000FE                     	ds	1
  3415                           tblptru	equ	0xFF8
  3416                           tblptrh	equ	0xFF7
  3417                           tblptrl	equ	0xFF6
  3418                           tablat	equ	0xFF5
  3419                           postinc0	equ	0xFEE
  3420                           wreg	equ	0xFE8
  3421                           postdec1	equ	0xFE5
  3422                           fsr1l	equ	0xFE1
  3423                           
  3424                           	psect	bssBANK1
  3425  000100                     __pbssBANK1:
  3426                           	opt stack 0
  3427  000100                     	ds	32
  3428  000120                     	ds	16
  3429  000130                     _responseId:
  3430                           	opt stack 0
  3431  000130                     	ds	16
  3432  000140                     _pBDTEntryOut:
  3433                           	opt stack 0
  3434  000140                     	ds	6
  3435  000146                     _BaudRateGen:
  3436                           	opt stack 0
  3437  000146                     	ds	4
  3438  00014A                     service_pushbutton@PB_Timer:
  3439                           	opt stack 0
  3440  00014A                     	ds	4
  3441  00014E                     _pCDCDst:
  3442                           	opt stack 0
  3443  00014E                     	ds	3
  3444  000151                     _pCDCSrc:
  3445                           	opt stack 0
  3446  000151                     	ds	3
  3447  000154                     _pDst:
  3448                           	opt stack 0
  3449  000154                     	ds	2
  3450  000156                     _m10SecTicker:
  3451                           	opt stack 0
  3452  000156                     	ds	2
  3453  000158                     _light:
  3454                           	opt stack 0
  3455  000158                     	ds	2
  3456  00015A                     _cs:
  3457                           	opt stack 0
  3458  00015A                     	ds	1
  3459  00015B                     _stops:
  3460                           	opt stack 0
  3461  00015B                     	ds	1
  3462  00015C                     _parity:
  3463                           	opt stack 0
  3464  00015C                     	ds	1
  3465  00015D                     _moduleResonseBuffer:
  3466                           	opt stack 0
  3467  00015D                     	ds	64
  3468  00019D                     _responseData:
  3469                           	opt stack 0
  3470  00019D                     	ds	32
  3471  0001BD                     _dataBuffer:
  3472                           	opt stack 0
  3473  0001BD                     	ds	16
  3474  0001CD                     _cdc_notice:
  3475                           	opt stack 0
  3476  0001CD                     	ds	10
  3477  0001D7                     _dummy_encapsulated_cmd_response:
  3478                           	opt stack 0
  3479  0001D7                     	ds	8
  3480  0001DF                     _line_coding:
  3481                           	opt stack 0
  3482  0001DF                     	ds	7
  3483  0001E6                     _clearLight:
  3484                           	opt stack 0
  3485  0001E6                     	ds	5
  3486  0001EB                     _storedLight:
  3487                           	opt stack 0
  3488  0001EB                     	ds	5
  3489  0001F0                     _responsePortNum:
  3490                           	opt stack 0
  3491  0001F0                     	ds	3
  3492                           tblptru	equ	0xFF8
  3493                           tblptrh	equ	0xFF7
  3494                           tblptrl	equ	0xFF6
  3495                           tablat	equ	0xFF5
  3496                           postinc0	equ	0xFEE
  3497                           wreg	equ	0xFE8
  3498                           postdec1	equ	0xFE5
  3499                           fsr1l	equ	0xFE1
  3500                           
  3501                           	psect	dataBANK1
  3502  0001F8                     __pdataBANK1:
  3503                           	opt stack 0
  3504  0001F8                     _selectedFont:
  3505                           	opt stack 0
  3506  0001F8                     	ds	2
  3507                           tblptru	equ	0xFF8
  3508                           tblptrh	equ	0xFF7
  3509                           tblptrl	equ	0xFF6
  3510                           tablat	equ	0xFF5
  3511                           postinc0	equ	0xFEE
  3512                           wreg	equ	0xFE8
  3513                           postdec1	equ	0xFE5
  3514                           fsr1l	equ	0xFE1
  3515                           
  3516                           	psect	bssBANK2
  3517  000200                     __pbssBANK2:
  3518                           	opt stack 0
  3519  000200                     _eusartRxBuffer:
  3520                           	opt stack 0
  3521  000200                     	ds	64
  3522  000240                     _eusartTxBuffer:
  3523                           	opt stack 0
  3524  000240                     	ds	64
  3525  000280                     _USB_Buffer:
  3526                           	opt stack 0
  3527  000280                     	ds	64
  3528                           tblptru	equ	0xFF8
  3529                           tblptrh	equ	0xFF7
  3530                           tblptrl	equ	0xFF6
  3531                           tablat	equ	0xFF5
  3532                           postinc0	equ	0xFEE
  3533                           wreg	equ	0xFE8
  3534                           postdec1	equ	0xFE5
  3535                           fsr1l	equ	0xFE1
  3536                           
  3537                           	psect	bssBANK3
  3538  000300                     __pbssBANK3:
  3539                           	opt stack 0
  3540  000300                     _buffer_rx:
  3541                           	opt stack 0
  3542  000300                     	ds	128
  3543                           tblptru	equ	0xFF8
  3544                           tblptrh	equ	0xFF7
  3545                           tblptrl	equ	0xFF6
  3546                           tablat	equ	0xFF5
  3547                           postinc0	equ	0xFEE
  3548                           wreg	equ	0xFE8
  3549                           postdec1	equ	0xFE5
  3550                           fsr1l	equ	0xFE1
  3551                           
  3552                           	psect	cstackBANK1
  3553  0001F3                     __pcstackBANK1:
  3554                           	opt stack 0
  3555  0001F3                     moteHandler@gotoSleep:
  3556                           	opt stack 0
  3557                           
  3558                           ; 1 bytes @ 0x0
  3559  0001F3                     	ds	1
  3560  0001F4                     moteHandler@gotoNextState:
  3561                           	opt stack 0
  3562                           
  3563                           ; 1 bytes @ 0x1
  3564  0001F4                     	ds	1
  3565  0001F5                     moteHandler@s2Button:
  3566                           	opt stack 0
  3567                           
  3568                           ; 1 bytes @ 0x2
  3569  0001F5                     	ds	1
  3570  0001F6                     moteHandler@buttonPress:
  3571                           	opt stack 0
  3572                           
  3573                           ; 1 bytes @ 0x3
  3574  0001F6                     	ds	1
  3575  0001F7                     moteHandler@readMessage:
  3576                           	opt stack 0
  3577                           
  3578                           ; 1 bytes @ 0x4
  3579  0001F7                     	ds	1
  3580                           tblptru	equ	0xFF8
  3581                           tblptrh	equ	0xFF7
  3582                           tblptrl	equ	0xFF6
  3583                           tablat	equ	0xFF5
  3584                           postinc0	equ	0xFEE
  3585                           wreg	equ	0xFE8
  3586                           postdec1	equ	0xFE5
  3587                           fsr1l	equ	0xFE1
  3588                           
  3589                           	psect	cstackBANK0
  3590  000060                     __pcstackBANK0:
  3591                           	opt stack 0
  3592  000060                     ??_TMR1_Initialize:
  3593  000060                     ?_strncmp:
  3594                           	opt stack 0
  3595  000060                     ?_strcmp:
  3596                           	opt stack 0
  3597  000060                     ?_moteApp_getLightString:
  3598                           	opt stack 0
  3599  000060                     ?_USBTransferOnePacket:
  3600                           	opt stack 0
  3601  000060                     ?___wmul:
  3602                           	opt stack 0
  3603  000060                     ?___awmod:
  3604                           	opt stack 0
  3605  000060                     ?___lwmod:
  3606                           	opt stack 0
  3607  000060                     ?___fladd:
  3608                           	opt stack 0
  3609  000060                     ?___almod:
  3610                           	opt stack 0
  3611  000060                     ?___fltol:
  3612                           	opt stack 0
  3613  000060                     ?___xxtofl:
  3614                           	opt stack 0
  3615  000060                     MOTEapp_handlerState@state:
  3616                           	opt stack 0
  3617  000060                     MOTEapp_TimerBasedTask@timerTask:
  3618                           	opt stack 0
  3619  000060                     hexToStr@character:
  3620                           	opt stack 0
  3621  000060                     moteApp_clearBuffers@counter:
  3622                           	opt stack 0
  3623  000060                     USBapp_handlerState@state:
  3624                           	opt stack 0
  3625  000060                     USBapp_exitCDCState@usbState:
  3626                           	opt stack 0
  3627  000060                     service_pushbutton@bs:
  3628                           	opt stack 0
  3629  000060                     oled_writeCommand@command:
  3630                           	opt stack 0
  3631  000060                     oled_writeData@data:
  3632                           	opt stack 0
  3633  000060                     EUSART_Read@readValue:
  3634                           	opt stack 0
  3635  000060                     EUSART_Write@txData:
  3636                           	opt stack 0
  3637  000060                     EUSART_FlushBuffer@index:
  3638                           	opt stack 0
  3639  000060                     DATAEE_WriteByte@bData:
  3640                           	opt stack 0
  3641  000060                     DATAEE_ReadByte@bAdd:
  3642                           	opt stack 0
  3643  000060                     TMR2_ReadTimer@readVal:
  3644                           	opt stack 0
  3645  000060                     USBTransferOnePacket@dir:
  3646                           	opt stack 0
  3647  000060                     ___lbdiv@divisor:
  3648                           	opt stack 0
  3649  000060                     delayms@t:
  3650                           	opt stack 0
  3651  000060                     moteApp_delayms@length:
  3652                           	opt stack 0
  3653  000060                     oled_setFont@font:
  3654                           	opt stack 0
  3655  000060                     putUSBUSART@data:
  3656                           	opt stack 0
  3657  000060                     ___wmul@multiplier:
  3658                           	opt stack 0
  3659  000060                     ___awmod@dividend:
  3660                           	opt stack 0
  3661  000060                     ___lwmod@dividend:
  3662                           	opt stack 0
  3663  000060                     memcpy@d1:
  3664                           	opt stack 0
  3665  000060                     memset@p1:
  3666                           	opt stack 0
  3667  000060                     strcmp@s1:
  3668                           	opt stack 0
  3669  000060                     strncmp@s1:
  3670                           	opt stack 0
  3671  000060                     ___almod@dividend:
  3672                           	opt stack 0
  3673  000060                     ___fltol@f1:
  3674                           	opt stack 0
  3675  000060                     ___fladd@b:
  3676                           	opt stack 0
  3677  000060                     ___xxtofl@val:
  3678                           	opt stack 0
  3679                           
  3680                           ; 4 bytes @ 0x0
  3681  000060                     	ds	1
  3682  000061                     MOTEapp_getModuleResponse@terminatorReceived:
  3683                           	opt stack 0
  3684  000061                     moteApp_clearBuffers@counter_1710:
  3685                           	opt stack 0
  3686  000061                     Set_Page_Address@address:
  3687                           	opt stack 0
  3688  000061                     Set_Column_Address@address:
  3689                           	opt stack 0
  3690  000061                     oled_setDisplay@displayType:
  3691                           	opt stack 0
  3692  000061                     oled_setContrastControlRegister@mod:
  3693                           	opt stack 0
  3694  000061                     oled_initialDispayLine@line:
  3695                           	opt stack 0
  3696  000061                     oled_powerControl@vol:
  3697                           	opt stack 0
  3698  000061                     oled_regulorResistorSelect@r:
  3699                           	opt stack 0
  3700  000061                     DATAEE_WriteByte@bAdd:
  3701                           	opt stack 0
  3702  000061                     ___lbdiv@dividend:
  3703                           	opt stack 0
  3704  000061                     sendCommand@string:
  3705                           	opt stack 0
  3706  000061                     sendDataCommand@string:
  3707                           	opt stack 0
  3708  000061                     USBTransferOnePacket@data:
  3709                           	opt stack 0
  3710                           
  3711                           ; 2 bytes @ 0x1
  3712  000061                     	ds	1
  3713  000062                     ??_moteApp_delayms:
  3714  000062                     ??_oled_devInit:
  3715  000062                     ??_delayms:
  3716  000062                     MOTEapp_getModuleResponse@bufferByte:
  3717                           	opt stack 0
  3718  000062                     moteApp_clearBuffers@counter_1711:
  3719                           	opt stack 0
  3720  000062                     oled_putChar@station_dot:
  3721                           	opt stack 0
  3722  000062                     DATAEE_WriteByte@GIEBitValue:
  3723                           	opt stack 0
  3724  000062                     putUSBUSART@length:
  3725                           	opt stack 0
  3726  000062                     ___lbdiv@counter:
  3727                           	opt stack 0
  3728  000062                     ___wmul@multiplicand:
  3729                           	opt stack 0
  3730  000062                     ___awmod@divisor:
  3731                           	opt stack 0
  3732  000062                     ___lwmod@divisor:
  3733                           	opt stack 0
  3734  000062                     memcpy@s1:
  3735                           	opt stack 0
  3736  000062                     memset@c:
  3737                           	opt stack 0
  3738  000062                     strcmp@s2:
  3739                           	opt stack 0
  3740  000062                     strncmp@s2:
  3741                           	opt stack 0
  3742                           
  3743                           ; 2 bytes @ 0x2
  3744  000062                     	ds	1
  3745  000063                     ??_moteApp_toggleLeds:
  3746  000063                     ??_MOTEapp_SetDataRateSetting:
  3747  000063                     ??_moduleSleep:
  3748  000063                     ?_moteApp_getTempValue:
  3749                           	opt stack 0
  3750  000063                     moteApp_clearBuffers@counter_1712:
  3751                           	opt stack 0
  3752  000063                     oled_putChar@start_page:
  3753                           	opt stack 0
  3754  000063                     USBTransferOnePacket@len:
  3755                           	opt stack 0
  3756  000063                     ___lbdiv@quotient:
  3757                           	opt stack 0
  3758  000063                     delayms@i:
  3759                           	opt stack 0
  3760  000063                     moteApp_delayms@counter:
  3761                           	opt stack 0
  3762  000063                     sendDataCommand@appData:
  3763                           	opt stack 0
  3764                           
  3765                           ; 2 bytes @ 0x3
  3766  000063                     	ds	1
  3767  000064                     ??_oled_putChar:
  3768  000064                     ??_strcmp:
  3769  000064                     ??___fltol:
  3770  000064                     ??___xxtofl:
  3771  000064                     MOTEapp_SetDataRateSetting@dr:
  3772                           	opt stack 0
  3773  000064                     moteApp_toggleLeds@state:
  3774                           	opt stack 0
  3775  000064                     USBTransferOnePacket@ep:
  3776                           	opt stack 0
  3777  000064                     ___awmod@counter:
  3778                           	opt stack 0
  3779  000064                     ___lwmod@counter:
  3780                           	opt stack 0
  3781  000064                     ___wmul@product:
  3782                           	opt stack 0
  3783  000064                     memcpy@n:
  3784                           	opt stack 0
  3785  000064                     memset@n:
  3786                           	opt stack 0
  3787  000064                     strncmp@len:
  3788                           	opt stack 0
  3789  000064                     ___almod@divisor:
  3790                           	opt stack 0
  3791  000064                     ___fladd@a:
  3792                           	opt stack 0
  3793                           
  3794                           ; 4 bytes @ 0x4
  3795  000064                     	ds	1
  3796  000065                     sendDataCommand@dataLength:
  3797                           	opt stack 0
  3798  000065                     ___awmod@sign:
  3799                           	opt stack 0
  3800  000065                     strcmp@r:
  3801                           	opt stack 0
  3802  000065                     moduleResync@escapeCounter:
  3803                           	opt stack 0
  3804  000065                     moteApp_setSensorsInput@escapeCounter:
  3805                           	opt stack 0
  3806  000065                     moteApp_getTempValue@escapeCounter:
  3807                           	opt stack 0
  3808  000065                     USBTransferOnePacket@handle:
  3809                           	opt stack 0
  3810                           
  3811                           ; 2 bytes @ 0x5
  3812  000065                     	ds	1
  3813  000066                     ??_strncmp:
  3814  000066                     ??_sendDataCommand:
  3815  000066                     moteApp_add8bToDataBuffer@bufferLocation:
  3816                           	opt stack 0
  3817  000066                     memcpy@d:
  3818                           	opt stack 0
  3819  000066                     memset@p:
  3820                           	opt stack 0
  3821                           
  3822                           ; 2 bytes @ 0x6
  3823  000066                     	ds	1
  3824  000067                     ??_moteApp_add8bToDataBuffer:
  3825  000067                     ??_CDCTxService:
  3826  000067                     moduleResync@escapeEvent:
  3827                           	opt stack 0
  3828  000067                     sendDataCommand@byteCount:
  3829                           	opt stack 0
  3830  000067                     getsUSBUSART@buffer:
  3831                           	opt stack 0
  3832                           
  3833                           ; 2 bytes @ 0x7
  3834  000067                     	ds	1
  3835  000068                     ??___fladd:
  3836  000068                     sendDataCommand@byteCount_1623:
  3837                           	opt stack 0
  3838  000068                     USBDeviceInit@i:
  3839                           	opt stack 0
  3840  000068                     ___almod@counter:
  3841                           	opt stack 0
  3842  000068                     ___fltol@sign1:
  3843                           	opt stack 0
  3844  000068                     ___xxtofl@sign:
  3845                           	opt stack 0
  3846  000068                     _CDCTxService$5924:
  3847                           	opt stack 0
  3848  000068                     memcpy@s:
  3849                           	opt stack 0
  3850                           
  3851                           ; 2 bytes @ 0x8
  3852  000068                     	ds	1
  3853  000069                     moteApp_add8bToDataBuffer@number:
  3854                           	opt stack 0
  3855  000069                     getsUSBUSART@len:
  3856                           	opt stack 0
  3857  000069                     ___almod@sign:
  3858                           	opt stack 0
  3859  000069                     ___fltol@exp1:
  3860                           	opt stack 0
  3861  000069                     ___xxtofl@exp:
  3862                           	opt stack 0
  3863                           
  3864                           ; 1 bytes @ 0x9
  3865  000069                     	ds	1
  3866  00006A                     ??_getsUSBUSART:
  3867  00006A                     oled_putChar@k:
  3868                           	opt stack 0
  3869  00006A                     CDCTxService@i:
  3870                           	opt stack 0
  3871  00006A                     moteApp_setLightString@lightString:
  3872                           	opt stack 0
  3873  00006A                     ___xxtofl@arg:
  3874                           	opt stack 0
  3875                           
  3876                           ; 4 bytes @ 0xA
  3877  00006A                     	ds	1
  3878  00006B                     oled_putChar@index:
  3879                           	opt stack 0
  3880  00006B                     CDCTxService@byte_to_send:
  3881                           	opt stack 0
  3882  00006B                     _getsUSBUSART$5876:
  3883                           	opt stack 0
  3884                           
  3885                           ; 2 bytes @ 0xB
  3886  00006B                     	ds	1
  3887  00006C                     moteApp_setLightString@stingPos:
  3888                           	opt stack 0
  3889  00006C                     oled_clearRow@page:
  3890                           	opt stack 0
  3891                           
  3892                           ; 1 bytes @ 0xC
  3893  00006C                     	ds	1
  3894  00006D                     ??_USBapp_DeviceCdcEmulatorHandler:
  3895  00006D                     ?_moteApp_getLightValue:
  3896                           	opt stack 0
  3897  00006D                     oled_clearRow@index:
  3898                           	opt stack 0
  3899                           
  3900                           ; 1 bytes @ 0xD
  3901  00006D                     	ds	1
  3902  00006E                     moteApp_GoToSleep@status:
  3903                           	opt stack 0
  3904                           
  3905                           ; 1 bytes @ 0xE
  3906  00006E                     	ds	1
  3907  00006F                     moteApp_getLightValue@escapeCounter:
  3908                           	opt stack 0
  3909                           
  3910                           ; 2 bytes @ 0xF
  3911  00006F                     	ds	1
  3912  000070                     ___fladd@signs:
  3913                           	opt stack 0
  3914                           
  3915                           ; 1 bytes @ 0x10
  3916  000070                     	ds	1
  3917  000071                     ?_moteApp_convertSensorValue:
  3918                           	opt stack 0
  3919  000071                     ___fladd@aexp:
  3920                           	opt stack 0
  3921  000071                     moteApp_addToDataBuffer@string:
  3922                           	opt stack 0
  3923  000071                     moteApp_convertSensorValue@string:
  3924                           	opt stack 0
  3925  000071                     oled_putString@string:
  3926                           	opt stack 0
  3927                           
  3928                           ; 2 bytes @ 0x11
  3929  000071                     	ds	1
  3930  000072                     ___fladd@bexp:
  3931                           	opt stack 0
  3932                           
  3933                           ; 1 bytes @ 0x12
  3934  000072                     	ds	1
  3935  000073                     ??_moteApp_convertSensorValue:
  3936  000073                     moteApp_addToDataBuffer@bufferLocation:
  3937                           	opt stack 0
  3938  000073                     oled_putString@station_dot:
  3939                           	opt stack 0
  3940  000073                     ___fladd@grs:
  3941                           	opt stack 0
  3942                           
  3943                           ; 1 bytes @ 0x13
  3944  000073                     	ds	1
  3945  000074                     ?___flmul:
  3946                           	opt stack 0
  3947  000074                     moteApp_addToDataBuffer@index:
  3948                           	opt stack 0
  3949  000074                     oled_putString@start_page:
  3950                           	opt stack 0
  3951  000074                     ___flmul@b:
  3952                           	opt stack 0
  3953                           
  3954                           ; 4 bytes @ 0x14
  3955  000074                     	ds	1
  3956  000075                     oled_putString@index:
  3957                           	opt stack 0
  3958                           
  3959                           ; 1 bytes @ 0x15
  3960  000075                     	ds	1
  3961  000076                     ??_test_switch:
  3962  000076                     moteJoiningProcess@changeStates:
  3963                           	opt stack 0
  3964  000076                     moteApp_convertSensorValue@index:
  3965                           	opt stack 0
  3966  000076                     USBapp_Handler@buttonPress:
  3967                           	opt stack 0
  3968  000076                     oled_putUint8@station_dot:
  3969                           	opt stack 0
  3970  000076                     oled_putint8@station_dot:
  3971                           	opt stack 0
  3972                           
  3973                           ; 1 bytes @ 0x16
  3974  000076                     	ds	1
  3975  000077                     moteJoiningProcess@selectButton:
  3976                           	opt stack 0
  3977  000077                     oled_putUint8@start_page:
  3978                           	opt stack 0
  3979  000077                     oled_putint8@start_page:
  3980                           	opt stack 0
  3981  000077                     test_switch@timeout:
  3982                           	opt stack 0
  3983  000077                     moteApp_convertSensorValue@convertedValue:
  3984                           	opt stack 0
  3985                           
  3986                           ; 2 bytes @ 0x17
  3987  000077                     	ds	1
  3988  000078                     ??_moteJoiningProcess:
  3989  000078                     oled_putUint8@number:
  3990                           	opt stack 0
  3991  000078                     oled_putint8@negative:
  3992                           	opt stack 0
  3993  000078                     ___flmul@a:
  3994                           	opt stack 0
  3995                           
  3996                           ; 4 bytes @ 0x18
  3997  000078                     	ds	1
  3998  000079                     test_switch@buttonCheck:
  3999                           	opt stack 0
  4000  000079                     moteJoiningProcess@readDataRate:
  4001                           	opt stack 0
  4002  000079                     oled_putUint8@numData:
  4003                           	opt stack 0
  4004  000079                     oled_putint8@numData:
  4005                           	opt stack 0
  4006                           
  4007                           ; 6 bytes @ 0x19
  4008  000079                     	ds	1
  4009  00007A                     moteJoiningProcess@joiningComplete:
  4010                           	opt stack 0
  4011                           
  4012                           ; 1 bytes @ 0x1A
  4013  00007A                     	ds	1
  4014  00007B                     moteJoiningProcess@messageReady:
  4015                           	opt stack 0
  4016                           
  4017                           ; 1 bytes @ 0x1B
  4018  00007B                     	ds	1
  4019  00007C                     ??___flmul:
  4020                           
  4021                           ; 1 bytes @ 0x1C
  4022  00007C                     	ds	3
  4023  00007F                     oled_putint8@number:
  4024                           	opt stack 0
  4025                           
  4026                           ; 1 bytes @ 0x1F
  4027  00007F                     	ds	1
  4028  000080                     ___flmul@sign:
  4029                           	opt stack 0
  4030                           
  4031                           ; 1 bytes @ 0x20
  4032  000080                     	ds	1
  4033  000081                     ___flmul@aexp:
  4034                           	opt stack 0
  4035                           
  4036                           ; 1 bytes @ 0x21
  4037  000081                     	ds	1
  4038  000082                     ___flmul@grs:
  4039                           	opt stack 0
  4040                           
  4041                           ; 4 bytes @ 0x22
  4042  000082                     	ds	4
  4043  000086                     ___flmul@bexp:
  4044                           	opt stack 0
  4045                           
  4046                           ; 1 bytes @ 0x26
  4047  000086                     	ds	1
  4048  000087                     ___flmul@prod:
  4049                           	opt stack 0
  4050                           
  4051                           ; 4 bytes @ 0x27
  4052  000087                     	ds	4
  4053  00008B                     ___flmul@temp:
  4054                           	opt stack 0
  4055                           
  4056                           ; 2 bytes @ 0x2B
  4057  00008B                     	ds	2
  4058  00008D                     ?___fldiv:
  4059                           	opt stack 0
  4060  00008D                     ___fldiv@b:
  4061                           	opt stack 0
  4062                           
  4063                           ; 4 bytes @ 0x2D
  4064  00008D                     	ds	4
  4065  000091                     ___fldiv@a:
  4066                           	opt stack 0
  4067                           
  4068                           ; 4 bytes @ 0x31
  4069  000091                     	ds	4
  4070  000095                     ??___fldiv:
  4071                           
  4072                           ; 1 bytes @ 0x35
  4073  000095                     	ds	4
  4074  000099                     ___fldiv@sign:
  4075                           	opt stack 0
  4076                           
  4077                           ; 1 bytes @ 0x39
  4078  000099                     	ds	1
  4079  00009A                     ___fldiv@rem:
  4080                           	opt stack 0
  4081                           
  4082                           ; 4 bytes @ 0x3A
  4083  00009A                     	ds	4
  4084  00009E                     ___fldiv@new_exp:
  4085                           	opt stack 0
  4086                           
  4087                           ; 2 bytes @ 0x3E
  4088  00009E                     	ds	2
  4089  0000A0                     ___fldiv@grs:
  4090                           	opt stack 0
  4091                           
  4092                           ; 4 bytes @ 0x40
  4093  0000A0                     	ds	4
  4094  0000A4                     ___fldiv@bexp:
  4095                           	opt stack 0
  4096                           
  4097                           ; 1 bytes @ 0x44
  4098  0000A4                     	ds	1
  4099  0000A5                     ___fldiv@aexp:
  4100                           	opt stack 0
  4101                           
  4102                           ; 1 bytes @ 0x45
  4103  0000A5                     	ds	1
  4104  0000A6                     ADC_TempConversion@tempRaw:
  4105                           	opt stack 0
  4106                           
  4107                           ; 1 bytes @ 0x46
  4108  0000A6                     	ds	1
  4109  0000A7                     ADC_TempConversion@temp:
  4110                           	opt stack 0
  4111                           
  4112                           ; 1 bytes @ 0x47
  4113  0000A7                     	ds	1
  4114  0000A8                     ADC_TempConversion@val:
  4115                           	opt stack 0
  4116                           
  4117                           ; 4 bytes @ 0x48
  4118  0000A8                     	ds	4
  4119  0000AC                     ??_moteApp_testSensors:
  4120  0000AC                     moteRunningProcess@selectButton:
  4121                           	opt stack 0
  4122                           
  4123                           ; 1 bytes @ 0x4C
  4124  0000AC                     	ds	1
  4125  0000AD                     moteRunningProcess@messageReady:
  4126                           	opt stack 0
  4127                           
  4128                           ; 1 bytes @ 0x4D
  4129  0000AD                     	ds	1
  4130  0000AE                     moteRunningProcess@sleepEvent:
  4131                           	opt stack 0
  4132                           
  4133                           ; 1 bytes @ 0x4E
  4134  0000AE                     	ds	1
  4135  0000AF                     ??_moteRunningProcess:
  4136                           
  4137                           ; 1 bytes @ 0x4F
  4138  0000AF                     	ds	1
  4139  0000B0                     moteRunningProcess@readByte:
  4140                           	opt stack 0
  4141                           
  4142                           ; 1 bytes @ 0x50
  4143  0000B0                     	ds	1
  4144  0000B1                     moteRunningProcess@sizeOfUpdate:
  4145                           	opt stack 0
  4146                           
  4147                           ; 1 bytes @ 0x51
  4148  0000B1                     	ds	1
  4149  0000B2                     moteRunningProcess@sizeOfUpdate_1493:
  4150                           	opt stack 0
  4151                           
  4152                           ; 1 bytes @ 0x52
  4153  0000B2                     	ds	1
  4154  0000B3                     moteRunningProcess@counter:
  4155                           	opt stack 0
  4156                           
  4157                           ; 1 bytes @ 0x53
  4158  0000B3                     	ds	1
  4159  0000B4                     moteRunningProcess@bufferReadPos:
  4160                           	opt stack 0
  4161                           
  4162                           ; 1 bytes @ 0x54
  4163  0000B4                     	ds	1
  4164  0000B5                     moteRunningProcess@changeStates:
  4165                           	opt stack 0
  4166                           
  4167                           ; 1 bytes @ 0x55
  4168  0000B5                     	ds	1
  4169  0000B6                     ??_moteHandler:
  4170                           
  4171                           ; 1 bytes @ 0x56
  4172  0000B6                     	ds	1
  4173  0000B7                     tblptru	equ	0xFF8
  4174                           tblptrh	equ	0xFF7
  4175                           tblptrl	equ	0xFF6
  4176                           tablat	equ	0xFF5
  4177                           postinc0	equ	0xFEE
  4178                           wreg	equ	0xFE8
  4179                           postdec1	equ	0xFE5
  4180                           fsr1l	equ	0xFE1
  4181                           
  4182                           ; 1 bytes @ 0x57
  4183                           
  4184                           	psect	cstackCOMRAM
  4185  000001                     __pcstackCOMRAM:
  4186                           	opt stack 0
  4187  000001                     ??_USBStdGetDscHandler:
  4188  000001                     ??_USBStdGetStatusHandler:
  4189  000001                     ?i2_USBTransferOnePacket:
  4190                           	opt stack 0
  4191  000001                     ?___lldiv:
  4192                           	opt stack 0
  4193  000001                     USBConfigureEndpoint@direction:
  4194                           	opt stack 0
  4195  000001                     USBCtrlTrfTxService@byteToSend:
  4196                           	opt stack 0
  4197  000001                     i2USBTransferOnePacket@dir:
  4198                           	opt stack 0
  4199  000001                     i2memset@p1:
  4200                           	opt stack 0
  4201  000001                     ___lldiv@dividend:
  4202                           	opt stack 0
  4203                           
  4204                           ; 4 bytes @ 0x0
  4205  000001                     	ds	1
  4206  000002                     ??_USBConfigureEndpoint:
  4207  000002                     USBStdGetStatusHandler@p:
  4208                           	opt stack 0
  4209  000002                     i2USBTransferOnePacket@data:
  4210                           	opt stack 0
  4211                           
  4212                           ; 2 bytes @ 0x1
  4213  000002                     	ds	1
  4214  000003                     i2memset@c:
  4215                           	opt stack 0
  4216                           
  4217                           ; 2 bytes @ 0x2
  4218  000003                     	ds	1
  4219  000004                     i2USBTransferOnePacket@len:
  4220                           	opt stack 0
  4221                           
  4222                           ; 1 bytes @ 0x3
  4223  000004                     	ds	1
  4224  000005                     i2USBTransferOnePacket@ep:
  4225                           	opt stack 0
  4226  000005                     i2memset@n:
  4227                           	opt stack 0
  4228  000005                     ___lldiv@divisor:
  4229                           	opt stack 0
  4230                           
  4231                           ; 4 bytes @ 0x4
  4232  000005                     	ds	1
  4233  000006                     USBConfigureEndpoint@EPNum:
  4234                           	opt stack 0
  4235  000006                     i2USBTransferOnePacket@handle:
  4236                           	opt stack 0
  4237                           
  4238                           ; 2 bytes @ 0x5
  4239  000006                     	ds	1
  4240  000007                     USBConfigureEndpoint@handle:
  4241                           	opt stack 0
  4242  000007                     i2memset@p:
  4243                           	opt stack 0
  4244                           
  4245                           ; 2 bytes @ 0x6
  4246  000007                     	ds	2
  4247  000009                     USBEnableEndpoint@options:
  4248                           	opt stack 0
  4249  000009                     i2USBDeviceInit@i:
  4250                           	opt stack 0
  4251  000009                     ___lldiv@quotient:
  4252                           	opt stack 0
  4253                           
  4254                           ; 4 bytes @ 0x8
  4255  000009                     	ds	1
  4256  00000A                     USBEnableEndpoint@p:
  4257                           	opt stack 0
  4258                           
  4259                           ; 2 bytes @ 0x9
  4260  00000A                     	ds	2
  4261  00000C                     USBEnableEndpoint@ep:
  4262                           	opt stack 0
  4263                           
  4264                           ; 1 bytes @ 0xB
  4265  00000C                     	ds	1
  4266  00000D                     USBapp_CdcEmulatorInitialize@i:
  4267                           	opt stack 0
  4268  00000D                     ___lldiv@counter:
  4269                           	opt stack 0
  4270                           
  4271                           ; 1 bytes @ 0xC
  4272  00000D                     	ds	1
  4273  00000E                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  4274                           	opt stack 0
  4275  00000E                     USART_mySetLineCodingHandler@dwBaud:
  4276                           	opt stack 0
  4277                           
  4278                           ; 4 bytes @ 0xD
  4279  00000E                     	ds	2
  4280  000010                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  4281                           	opt stack 0
  4282                           
  4283                           ; 2 bytes @ 0xF
  4284  000010                     	ds	2
  4285  000012                     USBCtrlTrfRxService@i:
  4286                           	opt stack 0
  4287  000012                     USBCtrlTrfInHandler@lastDTS:
  4288                           	opt stack 0
  4289  000012                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  4290                           	opt stack 0
  4291                           
  4292                           ; 2 bytes @ 0x11
  4293  000012                     	ds	1
  4294  000013                     USBCtrlTrfRxService@byteToRead:
  4295                           	opt stack 0
  4296                           
  4297                           ; 1 bytes @ 0x12
  4298  000013                     	ds	1
  4299  000014                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  4300                           
  4301                           ; 1 bytes @ 0x13
  4302  000014                     	ds	2
  4303  000016                     ??_USBStdFeatureReqHandler:
  4304  000016                     USBStdSetCfgHandler@i:
  4305                           	opt stack 0
  4306                           
  4307                           ; 1 bytes @ 0x15
  4308  000016                     	ds	1
  4309  000017                     USBStdFeatureReqHandler@pUEP:
  4310                           	opt stack 0
  4311                           
  4312                           ; 2 bytes @ 0x16
  4313  000017                     	ds	2
  4314  000019                     USBStdFeatureReqHandler@current_ep_data:
  4315                           	opt stack 0
  4316                           
  4317                           ; 1 bytes @ 0x18
  4318  000019                     	ds	1
  4319  00001A                     USBStdFeatureReqHandler@p:
  4320                           	opt stack 0
  4321                           
  4322                           ; 2 bytes @ 0x19
  4323  00001A                     	ds	2
  4324  00001C                     ??_USBCtrlEPService:
  4325  00001C                     
  4326                           ; 1 bytes @ 0x1B
  4327  00001C                     	ds	2
  4328  00001E                     USBCtrlEPService@setup_cnt:
  4329                           	opt stack 0
  4330                           
  4331                           ; 1 bytes @ 0x1D
  4332  00001E                     	ds	1
  4333  00001F                     USBDeviceTasks@i:
  4334                           	opt stack 0
  4335                           
  4336                           ; 1 bytes @ 0x1E
  4337  00001F                     	ds	1
  4338  000020                     ??_INTERRUPT_InterruptManager:
  4339                           
  4340                           ; 1 bytes @ 0x1F
  4341  000020                     	ds	14
  4342                           tblptru	equ	0xFF8
  4343                           tblptrh	equ	0xFF7
  4344                           tblptrl	equ	0xFF6
  4345                           tablat	equ	0xFF5
  4346                           postinc0	equ	0xFEE
  4347                           wreg	equ	0xFE8
  4348                           postdec1	equ	0xFE5
  4349                           fsr1l	equ	0xFE1
  4350                           
  4351 ;;
  4352 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4353 ;;
  4354 ;; *************** function _main *****************
  4355 ;; Defined at:
  4356 ;;		line 70 in file "main.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;		None
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;		None
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  1    wreg      void 
  4363 ;; Registers used:
  4364 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4370 ;;      Params:         0       0       0       0       0       0       0       0       0
  4371 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4372 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4373 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4374 ;;Total ram usage:        0 bytes
  4375 ;; Hardware stack levels required when called:   20
  4376 ;; This function calls:
  4377 ;;		_DATAEE_ReadByte
  4378 ;;		_DATAEE_WriteByte
  4379 ;;		_MOTEapp_handlerState
  4380 ;;		_SYSTEM_Initialize
  4381 ;;		_USBDeviceAttach
  4382 ;;		_USBDeviceInit
  4383 ;;		_USBapp_Handler
  4384 ;;		_USBapp_handlerState
  4385 ;;		_moduleResync
  4386 ;;		_moteApp_clearCommand
  4387 ;;		_moteApp_delayms
  4388 ;;		_moteHandler
  4389 ;;		_oled_clear
  4390 ;;		_oled_init
  4391 ;;		_oled_putString
  4392 ;;		_test_powerup
  4393 ;; This function is called by:
  4394 ;;		Startup code after reset
  4395 ;; This function uses a non-reentrant model
  4396 ;;
  4397                           
  4398                           	psect	text0
  4399  003DF2                     __ptext0:
  4400                           	opt stack 0
  4401  003DF2                     _main:
  4402                           	opt stack 11
  4403                           
  4404                           ;main.c: 73: SYSTEM_Initialize();
  4405                           
  4406                           ;incstack = 0
  4407  003DF2  EC58  F038         	call	_SYSTEM_Initialize	;wreg free
  4408                           
  4409                           ;main.c: 75: oled_init();
  4410  003DF6  ECD4  F037         	call	_oled_init	;wreg free
  4411                           
  4412                           ;main.c: 76: USBDeviceInit();
  4413  003DFA  EC8B  F01B         	call	_USBDeviceInit	;wreg free
  4414                           
  4415                           ;main.c: 78: USBDeviceAttach();
  4416  003DFE  EC2E  F036         	call	_USBDeviceAttach	;wreg free
  4417                           
  4418                           ;main.c: 80: LATBbits.LATB5 = 1;
  4419  003E02  8A8A               	bsf	3978,5,c	;volatile
  4420                           
  4421                           ;main.c: 81: moteApp_delayms(50);
  4422  003E04  0E00               	movlw	0
  4423  003E06  0100               	movlb	0	; () banked
  4424  003E08  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4425  003E0A  0E32               	movlw	50
  4426  003E0C  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4427  003E0E  EC91  F036         	call	_moteApp_delayms	;wreg free
  4428                           
  4429                           ;main.c: 82: LATBbits.LATB5 = 0;
  4430  003E12  9A8A               	bcf	3978,5,c	;volatile
  4431                           
  4432                           ;main.c: 83: moteApp_delayms(500);
  4433  003E14  0E01               	movlw	1
  4434  003E16  0100               	movlb	0	; () banked
  4435  003E18  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4436  003E1A  0EF4               	movlw	244
  4437  003E1C  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4438  003E1E  EC91  F036         	call	_moteApp_delayms	;wreg free
  4439                           
  4440                           ;main.c: 85: PEIE = 1;
  4441  003E22  8CF2               	bsf	intcon,6,c	;volatile
  4442                           
  4443                           ;main.c: 86: GIE = 1;
  4444  003E24  8EF2               	bsf	intcon,7,c	;volatile
  4445                           
  4446                           ;main.c: 88: moduleResync();
  4447  003E26  ECB5  F02D         	call	_moduleResync	;wreg free
  4448                           
  4449                           ;main.c: 89: moteApp_delayms(20);
  4450  003E2A  0E00               	movlw	0
  4451  003E2C  0100               	movlb	0	; () banked
  4452  003E2E  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4453  003E30  0E14               	movlw	20
  4454  003E32  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4455  003E34  EC91  F036         	call	_moteApp_delayms	;wreg free
  4456                           
  4457                           ;main.c: 90: moteApp_clearCommand();
  4458  003E38  EC22  F039         	call	_moteApp_clearCommand	;wreg free
  4459                           
  4460                           ;main.c: 91: moteApp_delayms(20);
  4461  003E3C  0E00               	movlw	0
  4462  003E3E  0100               	movlb	0	; () banked
  4463  003E40  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4464  003E42  0E14               	movlw	20
  4465  003E44  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4466  003E46  EC91  F036         	call	_moteApp_delayms	;wreg free
  4467                           
  4468                           ;main.c: 93: powerOnStatus = DATAEE_ReadByte(0x00);
  4469  003E4A  0E00               	movlw	0
  4470  003E4C  ECE5  F038         	call	_DATAEE_ReadByte
  4471  003E50  0100               	movlb	0	; () banked
  4472  003E52  6FED               	movwf	_powerOnStatus& (0+255),b
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;main.c: 94: if ( powerOnStatus != 0x55)
  4476  003E54  0E55               	movlw	85
  4477  003E56  0100               	movlb	0	; () banked
  4478  003E58  19ED               	xorwf	_powerOnStatus& (0+255),w,b
  4479  003E5A  B4D8               	btfsc	status,2,c
  4480  003E5C  D009               	goto	l14845
  4481                           
  4482                           ; BSR set to: 0
  4483                           ;main.c: 95: {
  4484                           ;main.c: 96: test_powerup();
  4485  003E5E  EC8D  F032         	call	_test_powerup	;wreg free
  4486                           
  4487                           ;main.c: 97: DATAEE_WriteByte(0x00, 0x55);
  4488  003E62  0E55               	movlw	85
  4489  003E64  0100               	movlb	0	; () banked
  4490  003E66  6F60               	movwf	DATAEE_WriteByte@bData& (0+255),b
  4491  003E68  0E00               	movlw	0
  4492  003E6A  EC0D  F036         	call	_DATAEE_WriteByte
  4493  003E6E  D000               	goto	l14845
  4494  003E70                     l14845:
  4495                           
  4496                           ;main.c: 98: }
  4497                           ;main.c: 101: operationType = USB;
  4498  003E70  0E00               	movlw	0
  4499  003E72  0100               	movlb	0	; () banked
  4500  003E74  6FF1               	movwf	_operationType& (0+255),b
  4501                           
  4502                           ; BSR set to: 0
  4503                           ;main.c: 102: USBapp_handlerState(USB_STARTUP);
  4504  003E76  0E00               	movlw	0
  4505  003E78  EC54  F039         	call	_USBapp_handlerState
  4506                           
  4507                           ;main.c: 104: oled_clear();
  4508  003E7C  ECA6  F038         	call	_oled_clear	;wreg free
  4509                           
  4510                           ;main.c: 105: oled_putString("Microchip Mote",0,0);
  4511  003E80  0E1E               	movlw	low STR_1
  4512  003E82  0100               	movlb	0	; () banked
  4513  003E84  6F71               	movwf	oled_putString@string& (0+255),b
  4514  003E86  0E7D               	movlw	high STR_1
  4515  003E88  0100               	movlb	0	; () banked
  4516  003E8A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4517  003E8C  0E00               	movlw	0
  4518  003E8E  0100               	movlb	0	; () banked
  4519  003E90  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4520  003E92  0E00               	movlw	0
  4521  003E94  0100               	movlb	0	; () banked
  4522  003E96  6F74               	movwf	oled_putString@start_page& (0+255),b
  4523  003E98  EC8D  F030         	call	_oled_putString	;wreg free
  4524                           
  4525                           ;main.c: 106: oled_putString("   LoRa Demo  ",0,1);
  4526  003E9C  0E00               	movlw	low STR_2
  4527  003E9E  0100               	movlb	0	; () banked
  4528  003EA0  6F71               	movwf	oled_putString@string& (0+255),b
  4529  003EA2  0E7D               	movlw	high STR_2
  4530  003EA4  0100               	movlb	0	; () banked
  4531  003EA6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4532  003EA8  0E00               	movlw	0
  4533  003EAA  0100               	movlb	0	; () banked
  4534  003EAC  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4535  003EAE  0E01               	movlw	1
  4536  003EB0  0100               	movlb	0	; () banked
  4537  003EB2  6F74               	movwf	oled_putString@start_page& (0+255),b
  4538  003EB4  EC8D  F030         	call	_oled_putString	;wreg free
  4539                           
  4540                           ;main.c: 107: oled_putString(" V 1.0.1 Code ",0,3);
  4541  003EB8  0E0F               	movlw	low STR_3
  4542  003EBA  0100               	movlb	0	; () banked
  4543  003EBC  6F71               	movwf	oled_putString@string& (0+255),b
  4544  003EBE  0E7D               	movlw	high STR_3
  4545  003EC0  0100               	movlb	0	; () banked
  4546  003EC2  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4547  003EC4  0E00               	movlw	0
  4548  003EC6  0100               	movlb	0	; () banked
  4549  003EC8  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4550  003ECA  0E03               	movlw	3
  4551  003ECC  0100               	movlb	0	; () banked
  4552  003ECE  6F74               	movwf	oled_putString@start_page& (0+255),b
  4553  003ED0  EC8D  F030         	call	_oled_putString	;wreg free
  4554                           
  4555                           ;main.c: 108: moteApp_delayms(1000);
  4556  003ED4  0E03               	movlw	3
  4557  003ED6  0100               	movlb	0	; () banked
  4558  003ED8  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4559  003EDA  0EE8               	movlw	232
  4560  003EDC  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4561  003EDE  EC91  F036         	call	_moteApp_delayms	;wreg free
  4562                           
  4563                           ;main.c: 112: {
  4564                           ;main.c: 114: switch (operationType)
  4565                           
  4566                           ;main.c: 111: while(1)
  4567  003EE2  D017               	goto	l14873
  4568  003EE4                     l59:
  4569  003EE4  D7FF               	goto	l59
  4570                           
  4571                           ;main.c: 118: break;
  4572  003EE6  D015               	goto	l14873
  4573  003EE8                     l14859:
  4574                           
  4575                           ;main.c: 120: USBapp_Handler();
  4576  003EE8  EC66  F027         	call	_USBapp_Handler	;wreg free
  4577                           
  4578                           ;main.c: 122: operationType = MOTE;
  4579  003EEC  0E01               	movlw	1
  4580  003EEE  0100               	movlb	0	; () banked
  4581  003EF0  6FF1               	movwf	_operationType& (0+255),b
  4582                           
  4583                           ; BSR set to: 0
  4584                           ;main.c: 123: MOTEapp_handlerState(MOTE_STARTUP);
  4585  003EF2  0E01               	movlw	1
  4586  003EF4  EC59  F039         	call	_MOTEapp_handlerState
  4587                           
  4588                           ;main.c: 124: break;
  4589  003EF8  D00C               	goto	l14873
  4590  003EFA                     l14865:
  4591                           
  4592                           ;main.c: 126: if (moteHandler() == MOTE_SWAP)
  4593  003EFA  ECB4  F016         	call	_moteHandler	;wreg free
  4594  003EFE  0A04               	xorlw	4
  4595  003F00  A4D8               	btfss	status,2,c
  4596  003F02  D007               	goto	l14873
  4597                           
  4598                           ;main.c: 127: {
  4599                           ;main.c: 129: operationType = USB;
  4600  003F04  0E00               	movlw	0
  4601  003F06  0100               	movlb	0	; () banked
  4602  003F08  6FF1               	movwf	_operationType& (0+255),b
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;main.c: 130: USBapp_handlerState(USB_STARTUP);
  4606  003F0A  0E00               	movlw	0
  4607  003F0C  EC54  F039         	call	_USBapp_handlerState
  4608                           
  4609                           ;main.c: 133: }
  4610                           
  4611                           ;main.c: 131: }
  4612                           ;main.c: 132: break;
  4613  003F10  D000               	goto	l14873
  4614  003F12                     l14873:
  4615  003F12  0100               	movlb	0	; () banked
  4616  003F14  51F1               	movf	_operationType& (0+255),w,b
  4617                           
  4618                           ; Switch size 1, requested type "space"
  4619                           ; Number of cases is 2, Range of values is 0 to 1
  4620                           ; switch strategies available:
  4621                           ; Name         Instructions Cycles
  4622                           ; simple_byte            7     4 (average)
  4623                           ;	Chosen strategy is simple_byte
  4624  003F16  0A00               	xorlw	0	; case 0
  4625  003F18  B4D8               	btfsc	status,2,c
  4626  003F1A  D7E6               	goto	l14859
  4627  003F1C  0A01               	xorlw	1	; case 1
  4628  003F1E  B4D8               	btfsc	status,2,c
  4629  003F20  D7EC               	goto	l14865
  4630  003F22  D7E0               	goto	l59
  4631                           
  4632                           ; BSR set to: 0
  4633                           
  4634                           ; BSR set to: 0
  4635  003F24  D7F6               	goto	l14873
  4636                           
  4637                           ; BSR set to: 0
  4638                           
  4639                           ; BSR set to: 0
  4640  003F26  EF8F  F000         	goto	start
  4641  003F2A                     __end_of_main:
  4642                           	opt stack 0
  4643                           tblptru	equ	0xFF8
  4644                           tblptrh	equ	0xFF7
  4645                           tblptrl	equ	0xFF6
  4646                           tablat	equ	0xFF5
  4647                           intcon	equ	0xFF2
  4648                           postinc0	equ	0xFEE
  4649                           wreg	equ	0xFE8
  4650                           postdec1	equ	0xFE5
  4651                           fsr1l	equ	0xFE1
  4652                           status	equ	0xFD8
  4653                           
  4654 ;; *************** function _test_powerup *****************
  4655 ;; Defined at:
  4656 ;;		line 62 in file "../Includes/Board/poweruptest.c"
  4657 ;; Parameters:    Size  Location     Type
  4658 ;;		None
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;		None
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  1    wreg      void 
  4663 ;; Registers used:
  4664 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4670 ;;      Params:         0       0       0       0       0       0       0       0       0
  4671 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4672 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4673 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4674 ;;Total ram usage:        0 bytes
  4675 ;; Hardware stack levels used:    1
  4676 ;; Hardware stack levels required when called:   17
  4677 ;; This function calls:
  4678 ;;		_EUSART_FlushBuffer
  4679 ;;		_moteApp_delayms
  4680 ;;		_moteApp_testSensors
  4681 ;;		_oled_clear
  4682 ;;		_test_comms
  4683 ;;		_test_leds
  4684 ;;		_test_oled
  4685 ;;		_test_switch
  4686 ;; This function is called by:
  4687 ;;		_main
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           
  4691                           	psect	text1
  4692  00651A                     __ptext1:
  4693                           	opt stack 0
  4694  00651A                     _test_powerup:
  4695                           	opt stack 13
  4696                           
  4697                           ;poweruptest.c: 65: test_oled();
  4698                           
  4699                           ; BSR set to: 0
  4700                           ;incstack = 0
  4701  00651A  EC5E  F02D         	call	_test_oled	;wreg free
  4702                           
  4703                           ;poweruptest.c: 66: moteApp_delayms(20);
  4704  00651E  0E00               	movlw	0
  4705  006520  0100               	movlb	0	; () banked
  4706  006522  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4707  006524  0E14               	movlw	20
  4708  006526  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4709  006528  EC91  F036         	call	_moteApp_delayms	;wreg free
  4710                           
  4711                           ;poweruptest.c: 68: test_switch();
  4712  00652C  EC6D  F022         	call	_test_switch	;wreg free
  4713                           
  4714                           ;poweruptest.c: 70: oled_clear();
  4715  006530  ECA6  F038         	call	_oled_clear	;wreg free
  4716                           
  4717                           ;poweruptest.c: 71: moteApp_delayms(20);
  4718  006534  0E00               	movlw	0
  4719  006536  0100               	movlb	0	; () banked
  4720  006538  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4721  00653A  0E14               	movlw	20
  4722  00653C  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4723  00653E  EC91  F036         	call	_moteApp_delayms	;wreg free
  4724                           
  4725                           ;poweruptest.c: 72: test_comms();
  4726  006542  ECC6  F032         	call	_test_comms	;wreg free
  4727                           
  4728                           ;poweruptest.c: 73: moteApp_delayms(20);
  4729  006546  0E00               	movlw	0
  4730  006548  0100               	movlb	0	; () banked
  4731  00654A  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4732  00654C  0E14               	movlw	20
  4733  00654E  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4734  006550  EC91  F036         	call	_moteApp_delayms	;wreg free
  4735                           
  4736                           ;poweruptest.c: 75: test_leds();
  4737  006554  EC09  F034         	call	_test_leds	;wreg free
  4738                           
  4739                           ;poweruptest.c: 78: moteApp_delayms(20);
  4740  006558  0E00               	movlw	0
  4741  00655A  0100               	movlb	0	; () banked
  4742  00655C  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4743  00655E  0E14               	movlw	20
  4744  006560  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4745  006562  EC91  F036         	call	_moteApp_delayms	;wreg free
  4746                           
  4747                           ;poweruptest.c: 79: EUSART_FlushBuffer();
  4748  006566  EC3C  F034         	call	_EUSART_FlushBuffer	;wreg free
  4749                           
  4750                           ;poweruptest.c: 80: moteApp_delayms(20);
  4751  00656A  0E00               	movlw	0
  4752  00656C  0100               	movlb	0	; () banked
  4753  00656E  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4754  006570  0E14               	movlw	20
  4755  006572  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4756  006574  EC91  F036         	call	_moteApp_delayms	;wreg free
  4757                           
  4758                           ;poweruptest.c: 81: moteApp_testSensors();
  4759  006578  ECD0  F028         	call	_moteApp_testSensors	;wreg free
  4760                           
  4761                           ;poweruptest.c: 82: moteApp_delayms(3000);
  4762  00657C  0E0B               	movlw	11
  4763  00657E  0100               	movlb	0	; () banked
  4764  006580  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4765  006582  0EB8               	movlw	184
  4766  006584  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4767  006586  EC91  F036         	call	_moteApp_delayms	;wreg free
  4768  00658A  0012               	return		;funcret
  4769  00658C                     __end_of_test_powerup:
  4770                           	opt stack 0
  4771                           tblptru	equ	0xFF8
  4772                           tblptrh	equ	0xFF7
  4773                           tblptrl	equ	0xFF6
  4774                           tablat	equ	0xFF5
  4775                           intcon	equ	0xFF2
  4776                           postinc0	equ	0xFEE
  4777                           wreg	equ	0xFE8
  4778                           postdec1	equ	0xFE5
  4779                           fsr1l	equ	0xFE1
  4780                           status	equ	0xFD8
  4781                           
  4782 ;; *************** function _test_switch *****************
  4783 ;; Defined at:
  4784 ;;		line 99 in file "../Includes/Board/poweruptest.c"
  4785 ;; Parameters:    Size  Location     Type
  4786 ;;		None
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;  timeout         2   23[BANK0 ] unsigned int 
  4789 ;;  buttonCheck     1   25[BANK0 ] unsigned char 
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  1    wreg      void 
  4792 ;; Registers used:
  4793 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4799 ;;      Params:         0       0       0       0       0       0       0       0       0
  4800 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4801 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4802 ;;      Totals:         0       4       0       0       0       0       0       0       0
  4803 ;;Total ram usage:        4 bytes
  4804 ;; Hardware stack levels used:    1
  4805 ;; Hardware stack levels required when called:   16
  4806 ;; This function calls:
  4807 ;;		_oled_clear
  4808 ;;		_oled_putString
  4809 ;; This function is called by:
  4810 ;;		_test_powerup
  4811 ;; This function uses a non-reentrant model
  4812 ;;
  4813                           
  4814                           	psect	text2
  4815  0044DA                     __ptext2:
  4816                           	opt stack 0
  4817  0044DA                     _test_switch:
  4818                           	opt stack 13
  4819                           
  4820                           ;poweruptest.c: 101: uint16_t timeout = 500;
  4821                           
  4822                           ;incstack = 0
  4823  0044DA  0E01               	movlw	1
  4824  0044DC  0100               	movlb	0	; () banked
  4825  0044DE  6F78               	movwf	(test_switch@timeout+1)& (0+255),b
  4826  0044E0  0EF4               	movlw	244
  4827  0044E2  6F77               	movwf	test_switch@timeout& (0+255),b
  4828                           
  4829                           ;poweruptest.c: 102: uint8_t buttonCheck = 0x00;
  4830  0044E4  0E00               	movlw	0
  4831  0044E6  0100               	movlb	0	; () banked
  4832  0044E8  6F79               	movwf	test_switch@buttonCheck& (0+255),b
  4833                           
  4834                           ; BSR set to: 0
  4835                           ;poweruptest.c: 103: oled_clear();
  4836  0044EA  ECA6  F038         	call	_oled_clear	;wreg free
  4837                           
  4838                           ;poweruptest.c: 104: oled_putString("Button Test:",0,0);
  4839  0044EE  0EF4               	movlw	low STR_10
  4840  0044F0  0100               	movlb	0	; () banked
  4841  0044F2  6F71               	movwf	oled_putString@string& (0+255),b
  4842  0044F4  0E7D               	movlw	high STR_10
  4843  0044F6  0100               	movlb	0	; () banked
  4844  0044F8  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4845  0044FA  0E00               	movlw	0
  4846  0044FC  0100               	movlb	0	; () banked
  4847  0044FE  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4848  004500  0E00               	movlw	0
  4849  004502  0100               	movlb	0	; () banked
  4850  004504  6F74               	movwf	oled_putString@start_page& (0+255),b
  4851  004506  EC8D  F030         	call	_oled_putString	;wreg free
  4852                           
  4853                           ;poweruptest.c: 106: if( (PORTBbits.RB1 == 0) || (PORTBbits.RB0 == 0) )
  4854  00450A  A281               	btfss	3969,1,c	;volatile
  4855  00450C  D004               	goto	l13521
  4856  00450E  A081               	btfss	3969,0,c	;volatile
  4857  004510  D002               	goto	l13521
  4858  004512  D010               	goto	l13523
  4859  004514  D000               	goto	l13521
  4860  004516                     l13521:
  4861                           
  4862                           ;poweruptest.c: 107: {
  4863                           ;poweruptest.c: 108: oled_putString("Button FAIL",0,3);
  4864  004516  0E7C               	movlw	low STR_11
  4865  004518  0100               	movlb	0	; () banked
  4866  00451A  6F71               	movwf	oled_putString@string& (0+255),b
  4867  00451C  0E7E               	movlw	high STR_11
  4868  00451E  0100               	movlb	0	; () banked
  4869  004520  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4870  004522  0E00               	movlw	0
  4871  004524  0100               	movlb	0	; () banked
  4872  004526  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4873  004528  0E03               	movlw	3
  4874  00452A  0100               	movlb	0	; () banked
  4875  00452C  6F74               	movwf	oled_putString@start_page& (0+255),b
  4876  00452E  EC8D  F030         	call	_oled_putString	;wreg free
  4877                           
  4878                           ;poweruptest.c: 109: }
  4879  004532  D04B               	goto	l13541
  4880  004534                     l13523:
  4881                           
  4882                           ;poweruptest.c: 110: else
  4883                           ;poweruptest.c: 111: {
  4884                           ;poweruptest.c: 112: oled_putString("Press Button",0,1);
  4885  004534  0E1B               	movlw	low STR_12
  4886  004536  0100               	movlb	0	; () banked
  4887  004538  6F71               	movwf	oled_putString@string& (0+255),b
  4888  00453A  0E7E               	movlw	high STR_12
  4889  00453C  0100               	movlb	0	; () banked
  4890  00453E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4891  004540  0E00               	movlw	0
  4892  004542  0100               	movlb	0	; () banked
  4893  004544  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4894  004546  0E01               	movlw	1
  4895  004548  0100               	movlb	0	; () banked
  4896  00454A  6F74               	movwf	oled_putString@start_page& (0+255),b
  4897  00454C  EC8D  F030         	call	_oled_putString	;wreg free
  4898                           
  4899                           ;poweruptest.c: 113: }
  4900                           ;poweruptest.c: 114: while(timeout--)
  4901  004550  D03C               	goto	l13541
  4902  004552                     l126:
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;poweruptest.c: 115: {
  4906                           ;poweruptest.c: 116: if(PORTBbits.RB1 == 0)
  4907  004552  B281               	btfsc	3969,1,c	;volatile
  4908  004554  D014               	goto	l13529
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;poweruptest.c: 117: {
  4912                           ;poweruptest.c: 118: oled_putString("Button1 PASS",0,2);
  4913  004556  0E01               	movlw	low STR_13
  4914  004558  0100               	movlb	0	; () banked
  4915  00455A  6F71               	movwf	oled_putString@string& (0+255),b
  4916  00455C  0E7E               	movlw	high STR_13
  4917  00455E  0100               	movlb	0	; () banked
  4918  004560  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4919  004562  0E00               	movlw	0
  4920  004564  0100               	movlb	0	; () banked
  4921  004566  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4922  004568  0E02               	movlw	2
  4923  00456A  0100               	movlb	0	; () banked
  4924  00456C  6F74               	movwf	oled_putString@start_page& (0+255),b
  4925  00456E  EC8D  F030         	call	_oled_putString	;wreg free
  4926                           
  4927                           ;poweruptest.c: 119: buttonCheck = buttonCheck + 0x08;
  4928  004572  0100               	movlb	0	; () banked
  4929  004574  5179               	movf	test_switch@buttonCheck& (0+255),w,b
  4930  004576  0F08               	addlw	8
  4931  004578  0100               	movlb	0	; () banked
  4932  00457A  6F79               	movwf	test_switch@buttonCheck& (0+255),b
  4933  00457C  D000               	goto	l13529
  4934  00457E                     l13529:
  4935                           
  4936                           ; BSR set to: 0
  4937                           ;poweruptest.c: 120: }
  4938                           ;poweruptest.c: 121: if(PORTBbits.RB0 == 0)
  4939  00457E  B081               	btfsc	3969,0,c	;volatile
  4940  004580  D014               	goto	l13535
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;poweruptest.c: 122: {
  4944                           ;poweruptest.c: 123: oled_putString("Button2 PASS",0,3);
  4945  004582  0E0E               	movlw	low STR_14
  4946  004584  0100               	movlb	0	; () banked
  4947  004586  6F71               	movwf	oled_putString@string& (0+255),b
  4948  004588  0E7E               	movlw	high STR_14
  4949  00458A  0100               	movlb	0	; () banked
  4950  00458C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4951  00458E  0E00               	movlw	0
  4952  004590  0100               	movlb	0	; () banked
  4953  004592  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4954  004594  0E03               	movlw	3
  4955  004596  0100               	movlb	0	; () banked
  4956  004598  6F74               	movwf	oled_putString@start_page& (0+255),b
  4957  00459A  EC8D  F030         	call	_oled_putString	;wreg free
  4958                           
  4959                           ;poweruptest.c: 124: buttonCheck = buttonCheck + 0x80;
  4960  00459E  0100               	movlb	0	; () banked
  4961  0045A0  5179               	movf	test_switch@buttonCheck& (0+255),w,b
  4962  0045A2  0F80               	addlw	128
  4963  0045A4  0100               	movlb	0	; () banked
  4964  0045A6  6F79               	movwf	test_switch@buttonCheck& (0+255),b
  4965  0045A8  D000               	goto	l13535
  4966  0045AA                     l13535:
  4967                           
  4968                           ; BSR set to: 0
  4969                           ;poweruptest.c: 125: }
  4970                           ;poweruptest.c: 126: if (buttonCheck == 0x88)
  4971  0045AA  0E88               	movlw	136
  4972  0045AC  0100               	movlb	0	; () banked
  4973  0045AE  1979               	xorwf	test_switch@buttonCheck& (0+255),w,b
  4974  0045B0  B4D8               	btfsc	status,2,c
  4975  0045B2  0012               	return	
  4976  0045B4  D001               	goto	l13539
  4977                           
  4978                           ; BSR set to: 0
  4979                           ;poweruptest.c: 127: {
  4980                           ;poweruptest.c: 128: break;
  4981  0045B6  0012               	return	
  4982  0045B8                     l13539:
  4983                           
  4984                           ; BSR set to: 0
  4985                           ;poweruptest.c: 129: }
  4986                           ;poweruptest.c: 130: _delay((unsigned long)((10)*(48000000/4000.0)));
  4987  0045B8  0E9C               	movlw	156
  4988  0045BA  0100               	movlb	0	; () banked
  4989  0045BC  6F76               	movwf	??_test_switch& (0+255),b
  4990  0045BE  0ED7               	movlw	215
  4991  0045C0                     u14377:
  4992  0045C0  2EE8               	decfsz	wreg,f,c
  4993  0045C2  D7FE               	bra	u14377
  4994  0045C4  2F76               	decfsz	??_test_switch& (0+255),f,b
  4995  0045C6  D7FC               	bra	u14377
  4996  0045C8  D000               	goto	l13541
  4997  0045CA                     l13541:
  4998  0045CA  0100               	movlb	0	; () banked
  4999  0045CC  0777               	decf	test_switch@timeout& (0+255),f,b
  5000  0045CE  A0D8               	btfss	status,0,c
  5001  0045D0  0778               	decf	(test_switch@timeout+1)& (0+255),f,b
  5002  0045D2  0100               	movlb	0	; () banked
  5003  0045D4  2977               	incf	test_switch@timeout& (0+255),w,b
  5004  0045D6  E1BD               	bnz	l126
  5005  0045D8  0100               	movlb	0	; () banked
  5006  0045DA  2978               	incf	(test_switch@timeout+1)& (0+255),w,b
  5007  0045DC  B4D8               	btfsc	status,2,c
  5008  0045DE  0012               	return	
  5009  0045E0  D7B8               	goto	l126
  5010  0045E2  0012               	return	
  5011                           
  5012                           ; BSR set to: 0
  5013                           
  5014                           ; BSR set to: 0
  5015  0045E4  0012               	return		;funcret
  5016  0045E6                     __end_of_test_switch:
  5017                           	opt stack 0
  5018                           tblptru	equ	0xFF8
  5019                           tblptrh	equ	0xFF7
  5020                           tblptrl	equ	0xFF6
  5021                           tablat	equ	0xFF5
  5022                           intcon	equ	0xFF2
  5023                           postinc0	equ	0xFEE
  5024                           wreg	equ	0xFE8
  5025                           postdec1	equ	0xFE5
  5026                           fsr1l	equ	0xFE1
  5027                           status	equ	0xFD8
  5028                           
  5029 ;; *************** function _test_oled *****************
  5030 ;; Defined at:
  5031 ;;		line 86 in file "../Includes/Board/poweruptest.c"
  5032 ;; Parameters:    Size  Location     Type
  5033 ;;		None
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;		None
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  1    wreg      void 
  5038 ;; Registers used:
  5039 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5045 ;;      Params:         0       0       0       0       0       0       0       0       0
  5046 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5047 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5048 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5049 ;;Total ram usage:        0 bytes
  5050 ;; Hardware stack levels used:    1
  5051 ;; Hardware stack levels required when called:   16
  5052 ;; This function calls:
  5053 ;;		_oled_clear
  5054 ;;		_oled_putString
  5055 ;; This function is called by:
  5056 ;;		_test_powerup
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           	psect	text3
  5061  005ABC                     __ptext3:
  5062                           	opt stack 0
  5063  005ABC                     _test_oled:
  5064                           	opt stack 13
  5065                           
  5066                           ;poweruptest.c: 88: oled_clear();
  5067                           
  5068                           ; BSR set to: 0
  5069                           ;incstack = 0
  5070  005ABC  ECA6  F038         	call	_oled_clear	;wreg free
  5071                           
  5072                           ;poweruptest.c: 90: oled_putString("MoTe v .",0,0);
  5073  005AC0  0E3D               	movlw	low STR_4
  5074  005AC2  0100               	movlb	0	; () banked
  5075  005AC4  6F71               	movwf	oled_putString@string& (0+255),b
  5076  005AC6  0E7F               	movlw	high STR_4
  5077  005AC8  0100               	movlb	0	; () banked
  5078  005ACA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5079  005ACC  0E00               	movlw	0
  5080  005ACE  0100               	movlb	0	; () banked
  5081  005AD0  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5082  005AD2  0E00               	movlw	0
  5083  005AD4  0100               	movlb	0	; () banked
  5084  005AD6  6F74               	movwf	oled_putString@start_page& (0+255),b
  5085  005AD8  EC8D  F030         	call	_oled_putString	;wreg free
  5086                           
  5087                           ;poweruptest.c: 91: oled_putString("0",0,6);
  5088  005ADC  0E8A               	movlw	low (STR_164+11)
  5089  005ADE  0100               	movlb	0	; () banked
  5090  005AE0  6F71               	movwf	oled_putString@string& (0+255),b
  5091  005AE2  0E7D               	movlw	high (STR_164+11)
  5092  005AE4  0100               	movlb	0	; () banked
  5093  005AE6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5094  005AE8  0E00               	movlw	0
  5095  005AEA  0100               	movlb	0	; () banked
  5096  005AEC  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5097  005AEE  0E06               	movlw	6
  5098  005AF0  0100               	movlb	0	; () banked
  5099  005AF2  6F74               	movwf	oled_putString@start_page& (0+255),b
  5100  005AF4  EC8D  F030         	call	_oled_putString	;wreg free
  5101                           
  5102                           ;poweruptest.c: 92: oled_putString("1",0,8);
  5103  005AF8  0E97               	movlw	low (STR_165+11)
  5104  005AFA  0100               	movlb	0	; () banked
  5105  005AFC  6F71               	movwf	oled_putString@string& (0+255),b
  5106  005AFE  0E7D               	movlw	high (STR_165+11)
  5107  005B00  0100               	movlb	0	; () banked
  5108  005B02  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5109  005B04  0E00               	movlw	0
  5110  005B06  0100               	movlb	0	; () banked
  5111  005B08  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5112  005B0A  0E08               	movlw	8
  5113  005B0C  0100               	movlb	0	; () banked
  5114  005B0E  6F74               	movwf	oled_putString@start_page& (0+255),b
  5115  005B10  EC8D  F030         	call	_oled_putString	;wreg free
  5116                           
  5117                           ;poweruptest.c: 93: oled_putString("Build Date/Time",0,1);
  5118  005B14  0EC3               	movlw	low STR_7
  5119  005B16  0100               	movlb	0	; () banked
  5120  005B18  6F71               	movwf	oled_putString@string& (0+255),b
  5121  005B1A  0E7C               	movlw	high STR_7
  5122  005B1C  0100               	movlb	0	; () banked
  5123  005B1E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5124  005B20  0E00               	movlw	0
  5125  005B22  0100               	movlb	0	; () banked
  5126  005B24  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5127  005B26  0E01               	movlw	1
  5128  005B28  0100               	movlb	0	; () banked
  5129  005B2A  6F74               	movwf	oled_putString@start_page& (0+255),b
  5130  005B2C  EC8D  F030         	call	_oled_putString	;wreg free
  5131                           
  5132                           ;poweruptest.c: 94: oled_putString("Mar 27 2018",0,2);
  5133  005B30  0E70               	movlw	low STR_8
  5134  005B32  0100               	movlb	0	; () banked
  5135  005B34  6F71               	movwf	oled_putString@string& (0+255),b
  5136  005B36  0E7E               	movlw	high STR_8
  5137  005B38  0100               	movlb	0	; () banked
  5138  005B3A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5139  005B3C  0E00               	movlw	0
  5140  005B3E  0100               	movlb	0	; () banked
  5141  005B40  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5142  005B42  0E02               	movlw	2
  5143  005B44  0100               	movlb	0	; () banked
  5144  005B46  6F74               	movwf	oled_putString@start_page& (0+255),b
  5145  005B48  EC8D  F030         	call	_oled_putString	;wreg free
  5146                           
  5147                           ;poweruptest.c: 95: oled_putString("14:16:45",0,3);
  5148  005B4C  0E46               	movlw	low STR_9
  5149  005B4E  0100               	movlb	0	; () banked
  5150  005B50  6F71               	movwf	oled_putString@string& (0+255),b
  5151  005B52  0E7F               	movlw	high STR_9
  5152  005B54  0100               	movlb	0	; () banked
  5153  005B56  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5154  005B58  0E00               	movlw	0
  5155  005B5A  0100               	movlb	0	; () banked
  5156  005B5C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5157  005B5E  0E03               	movlw	3
  5158  005B60  0100               	movlb	0	; () banked
  5159  005B62  6F74               	movwf	oled_putString@start_page& (0+255),b
  5160  005B64  EC8D  F030         	call	_oled_putString	;wreg free
  5161  005B68  0012               	return		;funcret
  5162  005B6A                     __end_of_test_oled:
  5163                           	opt stack 0
  5164                           tblptru	equ	0xFF8
  5165                           tblptrh	equ	0xFF7
  5166                           tblptrl	equ	0xFF6
  5167                           tablat	equ	0xFF5
  5168                           intcon	equ	0xFF2
  5169                           postinc0	equ	0xFEE
  5170                           wreg	equ	0xFE8
  5171                           postdec1	equ	0xFE5
  5172                           fsr1l	equ	0xFE1
  5173                           status	equ	0xFD8
  5174                           
  5175 ;; *************** function _test_leds *****************
  5176 ;; Defined at:
  5177 ;;		line 147 in file "../Includes/Board/poweruptest.c"
  5178 ;; Parameters:    Size  Location     Type
  5179 ;;		None
  5180 ;; Auto vars:     Size  Location     Type
  5181 ;;		None
  5182 ;; Return value:  Size  Location     Type
  5183 ;;                  1    wreg      void 
  5184 ;; Registers used:
  5185 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5186 ;; Tracked objects:
  5187 ;;		On entry : 0/0
  5188 ;;		On exit  : 0/0
  5189 ;;		Unchanged: 0/0
  5190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5191 ;;      Params:         0       0       0       0       0       0       0       0       0
  5192 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5193 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5194 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5195 ;;Total ram usage:        0 bytes
  5196 ;; Hardware stack levels used:    1
  5197 ;; Hardware stack levels required when called:   15
  5198 ;; This function calls:
  5199 ;;		_delayms
  5200 ;;		_oled_putString
  5201 ;; This function is called by:
  5202 ;;		_test_powerup
  5203 ;; This function uses a non-reentrant model
  5204 ;;
  5205                           
  5206                           	psect	text4
  5207  006812                     __ptext4:
  5208                           	opt stack 0
  5209  006812                     _test_leds:
  5210                           	opt stack 14
  5211                           
  5212                           ;poweruptest.c: 149: oled_putString("LED Test:",0,1);
  5213                           
  5214                           ;incstack = 0
  5215  006812  0E06               	movlw	low STR_16
  5216  006814  0100               	movlb	0	; () banked
  5217  006816  6F71               	movwf	oled_putString@string& (0+255),b
  5218  006818  0E7F               	movlw	high STR_16
  5219  00681A  0100               	movlb	0	; () banked
  5220  00681C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5221  00681E  0E00               	movlw	0
  5222  006820  0100               	movlb	0	; () banked
  5223  006822  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5224  006824  0E01               	movlw	1
  5225  006826  0100               	movlb	0	; () banked
  5226  006828  6F74               	movwf	oled_putString@start_page& (0+255),b
  5227  00682A  EC8D  F030         	call	_oled_putString	;wreg free
  5228                           
  5229                           ;poweruptest.c: 151: LATAbits.LATA6 = 1;
  5230  00682E  8C89               	bsf	3977,6,c	;volatile
  5231                           
  5232                           ;poweruptest.c: 152: LATAbits.LATA7 = 1;
  5233  006830  8E89               	bsf	3977,7,c	;volatile
  5234                           
  5235                           ;poweruptest.c: 153: delayms(500);
  5236  006832  0E01               	movlw	1
  5237  006834  0100               	movlb	0	; () banked
  5238  006836  6F61               	movwf	(delayms@t+1)& (0+255),b
  5239  006838  0EF4               	movlw	244
  5240  00683A  6F60               	movwf	delayms@t& (0+255),b
  5241  00683C  ECB1  F036         	call	_delayms	;wreg free
  5242                           
  5243                           ;poweruptest.c: 154: LATAbits.LATA6 = 0;
  5244  006840  9C89               	bcf	3977,6,c	;volatile
  5245                           
  5246                           ;poweruptest.c: 155: LATAbits.LATA7 = 0;
  5247  006842  9E89               	bcf	3977,7,c	;volatile
  5248                           
  5249                           ;poweruptest.c: 156: delayms(500);
  5250  006844  0E01               	movlw	1
  5251  006846  0100               	movlb	0	; () banked
  5252  006848  6F61               	movwf	(delayms@t+1)& (0+255),b
  5253  00684A  0EF4               	movlw	244
  5254  00684C  6F60               	movwf	delayms@t& (0+255),b
  5255  00684E  ECB1  F036         	call	_delayms	;wreg free
  5256                           
  5257                           ;poweruptest.c: 157: LATAbits.LATA6 = 1;
  5258  006852  8C89               	bsf	3977,6,c	;volatile
  5259                           
  5260                           ;poweruptest.c: 158: LATAbits.LATA7 = 1;
  5261  006854  8E89               	bsf	3977,7,c	;volatile
  5262                           
  5263                           ;poweruptest.c: 159: delayms(500);
  5264  006856  0E01               	movlw	1
  5265  006858  0100               	movlb	0	; () banked
  5266  00685A  6F61               	movwf	(delayms@t+1)& (0+255),b
  5267  00685C  0EF4               	movlw	244
  5268  00685E  6F60               	movwf	delayms@t& (0+255),b
  5269  006860  ECB1  F036         	call	_delayms	;wreg free
  5270                           
  5271                           ;poweruptest.c: 160: LATAbits.LATA6 = 0;
  5272  006864  9C89               	bcf	3977,6,c	;volatile
  5273                           
  5274                           ;poweruptest.c: 161: LATAbits.LATA7 = 0;
  5275  006866  9E89               	bcf	3977,7,c	;volatile
  5276                           
  5277                           ;poweruptest.c: 162: delayms(500);
  5278  006868  0E01               	movlw	1
  5279  00686A  0100               	movlb	0	; () banked
  5280  00686C  6F61               	movwf	(delayms@t+1)& (0+255),b
  5281  00686E  0EF4               	movlw	244
  5282  006870  6F60               	movwf	delayms@t& (0+255),b
  5283  006872  ECB1  F036         	call	_delayms	;wreg free
  5284  006876  0012               	return		;funcret
  5285  006878                     __end_of_test_leds:
  5286                           	opt stack 0
  5287                           tblptru	equ	0xFF8
  5288                           tblptrh	equ	0xFF7
  5289                           tblptrl	equ	0xFF6
  5290                           tablat	equ	0xFF5
  5291                           intcon	equ	0xFF2
  5292                           postinc0	equ	0xFEE
  5293                           wreg	equ	0xFE8
  5294                           postdec1	equ	0xFE5
  5295                           fsr1l	equ	0xFE1
  5296                           status	equ	0xFD8
  5297                           
  5298 ;; *************** function _test_comms *****************
  5299 ;; Defined at:
  5300 ;;		line 134 in file "../Includes/Board/poweruptest.c"
  5301 ;; Parameters:    Size  Location     Type
  5302 ;;		None
  5303 ;; Auto vars:     Size  Location     Type
  5304 ;;		None
  5305 ;; Return value:  Size  Location     Type
  5306 ;;                  1    wreg      void 
  5307 ;; Registers used:
  5308 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5309 ;; Tracked objects:
  5310 ;;		On entry : 0/0
  5311 ;;		On exit  : 0/0
  5312 ;;		Unchanged: 0/0
  5313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5314 ;;      Params:         0       0       0       0       0       0       0       0       0
  5315 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5316 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5317 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5318 ;;Total ram usage:        0 bytes
  5319 ;; Hardware stack levels used:    1
  5320 ;; Hardware stack levels required when called:   15
  5321 ;; This function calls:
  5322 ;;		_delayms
  5323 ;;		_moteApp_toggleLeds
  5324 ;;		_oled_putString
  5325 ;; This function is called by:
  5326 ;;		_test_powerup
  5327 ;; This function uses a non-reentrant model
  5328 ;;
  5329                           
  5330                           	psect	text5
  5331  00658C                     __ptext5:
  5332                           	opt stack 0
  5333  00658C                     _test_comms:
  5334                           	opt stack 14
  5335                           
  5336                           ;poweruptest.c: 136: oled_putString("Comm Test:",0,0);
  5337                           
  5338                           ;incstack = 0
  5339  00658C  0EBF               	movlw	low STR_15
  5340  00658E  0100               	movlb	0	; () banked
  5341  006590  6F71               	movwf	oled_putString@string& (0+255),b
  5342  006592  0E7E               	movlw	high STR_15
  5343  006594  0100               	movlb	0	; () banked
  5344  006596  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5345  006598  0E00               	movlw	0
  5346  00659A  0100               	movlb	0	; () banked
  5347  00659C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5348  00659E  0E00               	movlw	0
  5349  0065A0  0100               	movlb	0	; () banked
  5350  0065A2  6F74               	movwf	oled_putString@start_page& (0+255),b
  5351  0065A4  EC8D  F030         	call	_oled_putString	;wreg free
  5352                           
  5353                           ;poweruptest.c: 137: moteApp_toggleLeds(1);
  5354  0065A8  0E01               	movlw	1
  5355  0065AA  ECF6  F025         	call	_moteApp_toggleLeds
  5356                           
  5357                           ;poweruptest.c: 138: delayms(500);
  5358  0065AE  0E01               	movlw	1
  5359  0065B0  0100               	movlb	0	; () banked
  5360  0065B2  6F61               	movwf	(delayms@t+1)& (0+255),b
  5361  0065B4  0EF4               	movlw	244
  5362  0065B6  6F60               	movwf	delayms@t& (0+255),b
  5363  0065B8  ECB1  F036         	call	_delayms	;wreg free
  5364                           
  5365                           ;poweruptest.c: 139: moteApp_toggleLeds(0);
  5366  0065BC  0E00               	movlw	0
  5367  0065BE  ECF6  F025         	call	_moteApp_toggleLeds
  5368                           
  5369                           ;poweruptest.c: 140: delayms(500);
  5370  0065C2  0E01               	movlw	1
  5371  0065C4  0100               	movlb	0	; () banked
  5372  0065C6  6F61               	movwf	(delayms@t+1)& (0+255),b
  5373  0065C8  0EF4               	movlw	244
  5374  0065CA  6F60               	movwf	delayms@t& (0+255),b
  5375  0065CC  ECB1  F036         	call	_delayms	;wreg free
  5376                           
  5377                           ;poweruptest.c: 141: moteApp_toggleLeds(1);
  5378  0065D0  0E01               	movlw	1
  5379  0065D2  ECF6  F025         	call	_moteApp_toggleLeds
  5380                           
  5381                           ;poweruptest.c: 142: delayms(500);
  5382  0065D6  0E01               	movlw	1
  5383  0065D8  0100               	movlb	0	; () banked
  5384  0065DA  6F61               	movwf	(delayms@t+1)& (0+255),b
  5385  0065DC  0EF4               	movlw	244
  5386  0065DE  6F60               	movwf	delayms@t& (0+255),b
  5387  0065E0  ECB1  F036         	call	_delayms	;wreg free
  5388                           
  5389                           ;poweruptest.c: 143: moteApp_toggleLeds(0);
  5390  0065E4  0E00               	movlw	0
  5391  0065E6  ECF6  F025         	call	_moteApp_toggleLeds
  5392                           
  5393                           ;poweruptest.c: 144: delayms(500);
  5394  0065EA  0E01               	movlw	1
  5395  0065EC  0100               	movlb	0	; () banked
  5396  0065EE  6F61               	movwf	(delayms@t+1)& (0+255),b
  5397  0065F0  0EF4               	movlw	244
  5398  0065F2  6F60               	movwf	delayms@t& (0+255),b
  5399  0065F4  ECB1  F036         	call	_delayms	;wreg free
  5400  0065F8  0012               	return		;funcret
  5401  0065FA                     __end_of_test_comms:
  5402                           	opt stack 0
  5403                           tblptru	equ	0xFF8
  5404                           tblptrh	equ	0xFF7
  5405                           tblptrl	equ	0xFF6
  5406                           tablat	equ	0xFF5
  5407                           intcon	equ	0xFF2
  5408                           postinc0	equ	0xFEE
  5409                           wreg	equ	0xFE8
  5410                           postdec1	equ	0xFE5
  5411                           fsr1l	equ	0xFE1
  5412                           status	equ	0xFD8
  5413                           
  5414 ;; *************** function _moteApp_toggleLeds *****************
  5415 ;; Defined at:
  5416 ;;		line 1262 in file "../Includes/Board/MOTEapp.c"
  5417 ;; Parameters:    Size  Location     Type
  5418 ;;  state           1    wreg     unsigned char 
  5419 ;; Auto vars:     Size  Location     Type
  5420 ;;  state           1    4[BANK0 ] unsigned char 
  5421 ;; Return value:  Size  Location     Type
  5422 ;;                  1    wreg      void 
  5423 ;; Registers used:
  5424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5425 ;; Tracked objects:
  5426 ;;		On entry : 0/0
  5427 ;;		On exit  : 0/0
  5428 ;;		Unchanged: 0/0
  5429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5430 ;;      Params:         0       0       0       0       0       0       0       0       0
  5431 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5432 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5433 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5434 ;;Total ram usage:        2 bytes
  5435 ;; Hardware stack levels used:    1
  5436 ;; Hardware stack levels required when called:   14
  5437 ;; This function calls:
  5438 ;;		_sendCommand
  5439 ;; This function is called by:
  5440 ;;		_test_comms
  5441 ;; This function uses a non-reentrant model
  5442 ;;
  5443                           
  5444                           	psect	text6
  5445  004BEC                     __ptext6:
  5446                           	opt stack 0
  5447  004BEC                     _moteApp_toggleLeds:
  5448                           	opt stack 14
  5449                           
  5450                           ;incstack = 0
  5451                           ;moteApp_toggleLeds@state stored from wreg
  5452  004BEC  0100               	movlb	0	; () banked
  5453  004BEE  6F64               	movwf	moteApp_toggleLeds@state& (0+255),b
  5454                           
  5455                           ;MOTEapp.c: 1264: _delay((unsigned long)((16)*(48000000/4000.0)));
  5456  004BF0  0EFA               	movlw	250
  5457  004BF2  0100               	movlb	0	; () banked
  5458  004BF4  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5459  004BF6  0E58               	movlw	88
  5460  004BF8                     u14387:
  5461  004BF8  2EE8               	decfsz	wreg,f,c
  5462  004BFA  D7FE               	bra	u14387
  5463  004BFC  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5464  004BFE  D7FC               	bra	u14387
  5465  004C00  F000               	nop	
  5466                           
  5467                           ;MOTEapp.c: 1265: _delay((unsigned long)((16)*(48000000/4000.0)));
  5468  004C02  0EFA               	movlw	250
  5469  004C04  0100               	movlb	0	; () banked
  5470  004C06  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5471  004C08  0E58               	movlw	88
  5472  004C0A                     u14397:
  5473  004C0A  2EE8               	decfsz	wreg,f,c
  5474  004C0C  D7FE               	bra	u14397
  5475  004C0E  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5476  004C10  D7FC               	bra	u14397
  5477  004C12  F000               	nop	
  5478                           
  5479                           ;MOTEapp.c: 1266: _delay((unsigned long)((16)*(48000000/4000.0)));
  5480  004C14  0EFA               	movlw	250
  5481  004C16  0100               	movlb	0	; () banked
  5482  004C18  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5483  004C1A  0E58               	movlw	88
  5484  004C1C                     u14407:
  5485  004C1C  2EE8               	decfsz	wreg,f,c
  5486  004C1E  D7FE               	bra	u14407
  5487  004C20  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5488  004C22  D7FC               	bra	u14407
  5489  004C24  F000               	nop	
  5490                           
  5491                           ;MOTEapp.c: 1267: if (state)
  5492  004C26  0100               	movlb	0	; () banked
  5493  004C28  5164               	movf	moteApp_toggleLeds@state& (0+255),w,b
  5494  004C2A  0100               	movlb	0	; () banked
  5495  004C2C  B4D8               	btfsc	status,2,c
  5496  004C2E  D02C               	goto	l12913
  5497                           
  5498                           ; BSR set to: 0
  5499                           ;MOTEapp.c: 1268: {
  5500                           ;MOTEapp.c: 1269: sendCommand("sys set pindig GPIO10 1\r\n");
  5501  004C30  0E22               	movlw	low STR_175
  5502  004C32  0100               	movlb	0	; () banked
  5503  004C34  6F61               	movwf	sendCommand@string& (0+255),b
  5504  004C36  0E7A               	movlw	high STR_175
  5505  004C38  0100               	movlb	0	; () banked
  5506  004C3A  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5507  004C3C  EC66  F037         	call	_sendCommand	;wreg free
  5508                           
  5509                           ;MOTEapp.c: 1270: _delay((unsigned long)((16)*(48000000/4000.0)));
  5510  004C40  0EFA               	movlw	250
  5511  004C42  0100               	movlb	0	; () banked
  5512  004C44  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5513  004C46  0E58               	movlw	88
  5514  004C48                     u14417:
  5515  004C48  2EE8               	decfsz	wreg,f,c
  5516  004C4A  D7FE               	bra	u14417
  5517  004C4C  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5518  004C4E  D7FC               	bra	u14417
  5519  004C50  F000               	nop	
  5520                           
  5521                           ;MOTEapp.c: 1271: _delay((unsigned long)((16)*(48000000/4000.0)));
  5522  004C52  0EFA               	movlw	250
  5523  004C54  0100               	movlb	0	; () banked
  5524  004C56  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5525  004C58  0E58               	movlw	88
  5526  004C5A                     u14427:
  5527  004C5A  2EE8               	decfsz	wreg,f,c
  5528  004C5C  D7FE               	bra	u14427
  5529  004C5E  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5530  004C60  D7FC               	bra	u14427
  5531  004C62  F000               	nop	
  5532                           
  5533                           ;MOTEapp.c: 1272: _delay((unsigned long)((16)*(48000000/4000.0)));
  5534  004C64  0EFA               	movlw	250
  5535  004C66  0100               	movlb	0	; () banked
  5536  004C68  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5537  004C6A  0E58               	movlw	88
  5538  004C6C                     u14437:
  5539  004C6C  2EE8               	decfsz	wreg,f,c
  5540  004C6E  D7FE               	bra	u14437
  5541  004C70  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5542  004C72  D7FC               	bra	u14437
  5543  004C74  F000               	nop	
  5544                           
  5545                           ;MOTEapp.c: 1273: sendCommand("sys set pindig GPIO11 1\r\n");
  5546  004C76  0E3C               	movlw	low STR_176
  5547  004C78  0100               	movlb	0	; () banked
  5548  004C7A  6F61               	movwf	sendCommand@string& (0+255),b
  5549  004C7C  0E7A               	movlw	high STR_176
  5550  004C7E  0100               	movlb	0	; () banked
  5551  004C80  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5552  004C82  EC66  F037         	call	_sendCommand	;wreg free
  5553                           
  5554                           ;MOTEapp.c: 1274: }
  5555  004C86  0012               	return	
  5556  004C88                     l12913:
  5557                           
  5558                           ;MOTEapp.c: 1275: else
  5559                           ;MOTEapp.c: 1276: {
  5560                           ;MOTEapp.c: 1277: sendCommand("sys set pindig GPIO10 0\r\n");
  5561  004C88  0EEE               	movlw	low STR_177
  5562  004C8A  0100               	movlb	0	; () banked
  5563  004C8C  6F61               	movwf	sendCommand@string& (0+255),b
  5564  004C8E  0E79               	movlw	high STR_177
  5565  004C90  0100               	movlb	0	; () banked
  5566  004C92  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5567  004C94  EC66  F037         	call	_sendCommand	;wreg free
  5568                           
  5569                           ;MOTEapp.c: 1278: _delay((unsigned long)((16)*(48000000/4000.0)));
  5570  004C98  0EFA               	movlw	250
  5571  004C9A  0100               	movlb	0	; () banked
  5572  004C9C  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5573  004C9E  0E58               	movlw	88
  5574  004CA0                     u14447:
  5575  004CA0  2EE8               	decfsz	wreg,f,c
  5576  004CA2  D7FE               	bra	u14447
  5577  004CA4  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5578  004CA6  D7FC               	bra	u14447
  5579  004CA8  F000               	nop	
  5580                           
  5581                           ;MOTEapp.c: 1279: _delay((unsigned long)((16)*(48000000/4000.0)));
  5582  004CAA  0EFA               	movlw	250
  5583  004CAC  0100               	movlb	0	; () banked
  5584  004CAE  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5585  004CB0  0E58               	movlw	88
  5586  004CB2                     u14457:
  5587  004CB2  2EE8               	decfsz	wreg,f,c
  5588  004CB4  D7FE               	bra	u14457
  5589  004CB6  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5590  004CB8  D7FC               	bra	u14457
  5591  004CBA  F000               	nop	
  5592                           
  5593                           ;MOTEapp.c: 1280: _delay((unsigned long)((16)*(48000000/4000.0)));
  5594  004CBC  0EFA               	movlw	250
  5595  004CBE  0100               	movlb	0	; () banked
  5596  004CC0  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5597  004CC2  0E58               	movlw	88
  5598  004CC4                     u14467:
  5599  004CC4  2EE8               	decfsz	wreg,f,c
  5600  004CC6  D7FE               	bra	u14467
  5601  004CC8  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5602  004CCA  D7FC               	bra	u14467
  5603  004CCC  F000               	nop	
  5604                           
  5605                           ;MOTEapp.c: 1281: sendCommand("sys set pindig GPIO11 0\r\n");
  5606  004CCE  0E08               	movlw	low STR_178
  5607  004CD0  0100               	movlb	0	; () banked
  5608  004CD2  6F61               	movwf	sendCommand@string& (0+255),b
  5609  004CD4  0E7A               	movlw	high STR_178
  5610  004CD6  0100               	movlb	0	; () banked
  5611  004CD8  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5612  004CDA  EC66  F037         	call	_sendCommand	;wreg free
  5613  004CDE  0012               	return	
  5614  004CE0  0012               	return		;funcret
  5615  004CE2                     __end_of_moteApp_toggleLeds:
  5616                           	opt stack 0
  5617                           tblptru	equ	0xFF8
  5618                           tblptrh	equ	0xFF7
  5619                           tblptrl	equ	0xFF6
  5620                           tablat	equ	0xFF5
  5621                           intcon	equ	0xFF2
  5622                           postinc0	equ	0xFEE
  5623                           wreg	equ	0xFE8
  5624                           postdec1	equ	0xFE5
  5625                           fsr1l	equ	0xFE1
  5626                           status	equ	0xFD8
  5627                           
  5628 ;; *************** function _delayms *****************
  5629 ;; Defined at:
  5630 ;;		line 54 in file "../Includes/Board/poweruptest.c"
  5631 ;; Parameters:    Size  Location     Type
  5632 ;;  t               2    0[BANK0 ] unsigned int 
  5633 ;; Auto vars:     Size  Location     Type
  5634 ;;  i               2    3[BANK0 ] unsigned int 
  5635 ;; Return value:  Size  Location     Type
  5636 ;;                  1    wreg      void 
  5637 ;; Registers used:
  5638 ;;		wreg, status,2, status,0
  5639 ;; Tracked objects:
  5640 ;;		On entry : 0/0
  5641 ;;		On exit  : 0/0
  5642 ;;		Unchanged: 0/0
  5643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5644 ;;      Params:         0       2       0       0       0       0       0       0       0
  5645 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5646 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5647 ;;      Totals:         0       5       0       0       0       0       0       0       0
  5648 ;;Total ram usage:        5 bytes
  5649 ;; Hardware stack levels used:    1
  5650 ;; Hardware stack levels required when called:   11
  5651 ;; This function calls:
  5652 ;;		Nothing
  5653 ;; This function is called by:
  5654 ;;		_test_comms
  5655 ;;		_test_leds
  5656 ;; This function uses a non-reentrant model
  5657 ;;
  5658                           
  5659                           	psect	text7
  5660  006D62                     __ptext7:
  5661                           	opt stack 0
  5662  006D62                     _delayms:
  5663                           	opt stack 17
  5664                           
  5665                           ;poweruptest.c: 56: uint16_t i;
  5666                           ;poweruptest.c: 57: for(i = 0; i < t; i++)
  5667                           
  5668                           ;incstack = 0
  5669  006D62  0E00               	movlw	0
  5670  006D64  0100               	movlb	0	; () banked
  5671  006D66  6F64               	movwf	(delayms@i+1)& (0+255),b
  5672  006D68  0E00               	movlw	0
  5673  006D6A  6F63               	movwf	delayms@i& (0+255),b
  5674  006D6C  D00C               	goto	l109
  5675  006D6E                     l12895:
  5676                           
  5677                           ; BSR set to: 0
  5678                           ;poweruptest.c: 58: {
  5679                           ;poweruptest.c: 59: _delay((unsigned long)((1)*(48000000/4000.0)));
  5680  006D6E  0E10               	movlw	16
  5681  006D70  0100               	movlb	0	; () banked
  5682  006D72  6F62               	movwf	??_delayms& (0+255),b
  5683  006D74  0E94               	movlw	148
  5684  006D76                     u14477:
  5685  006D76  2EE8               	decfsz	wreg,f,c
  5686  006D78  D7FE               	bra	u14477
  5687  006D7A  2F62               	decfsz	??_delayms& (0+255),f,b
  5688  006D7C  D7FC               	bra	u14477
  5689  006D7E  F000               	nop	
  5690  006D80  0100               	movlb	0	; () banked
  5691  006D82  4B63               	infsnz	delayms@i& (0+255),f,b
  5692  006D84  2B64               	incf	(delayms@i+1)& (0+255),f,b
  5693  006D86                     l109:
  5694                           
  5695                           ; BSR set to: 0
  5696  006D86  0100               	movlb	0	; () banked
  5697  006D88  5160               	movf	delayms@t& (0+255),w,b
  5698  006D8A  0100               	movlb	0	; () banked
  5699  006D8C  5D63               	subwf	delayms@i& (0+255),w,b
  5700  006D8E  0100               	movlb	0	; () banked
  5701  006D90  5161               	movf	(delayms@t+1)& (0+255),w,b
  5702  006D92  0100               	movlb	0	; () banked
  5703  006D94  5964               	subwfb	(delayms@i+1)& (0+255),w,b
  5704  006D96  B0D8               	btfsc	status,0,c
  5705  006D98  0012               	return	
  5706  006D9A  D7E9               	goto	l12895
  5707  006D9C  0012               	return	
  5708                           
  5709                           ; BSR set to: 0
  5710                           
  5711                           ; BSR set to: 0
  5712  006D9E  0012               	return		;funcret
  5713  006DA0                     __end_of_delayms:
  5714                           	opt stack 0
  5715                           tblptru	equ	0xFF8
  5716                           tblptrh	equ	0xFF7
  5717                           tblptrl	equ	0xFF6
  5718                           tablat	equ	0xFF5
  5719                           intcon	equ	0xFF2
  5720                           postinc0	equ	0xFEE
  5721                           wreg	equ	0xFE8
  5722                           postdec1	equ	0xFE5
  5723                           fsr1l	equ	0xFE1
  5724                           status	equ	0xFD8
  5725                           
  5726 ;; *************** function _moteApp_testSensors *****************
  5727 ;; Defined at:
  5728 ;;		line 1366 in file "../Includes/Board/MOTEapp.c"
  5729 ;; Parameters:    Size  Location     Type
  5730 ;;		None
  5731 ;; Auto vars:     Size  Location     Type
  5732 ;;  dummyValue      2    0        unsigned int 
  5733 ;; Return value:  Size  Location     Type
  5734 ;;                  1    wreg      void 
  5735 ;; Registers used:
  5736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5737 ;; Tracked objects:
  5738 ;;		On entry : 0/0
  5739 ;;		On exit  : 0/0
  5740 ;;		Unchanged: 0/0
  5741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5742 ;;      Params:         0       0       0       0       0       0       0       0       0
  5743 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5744 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5745 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5746 ;;Total ram usage:        1 bytes
  5747 ;; Hardware stack levels used:    1
  5748 ;; Hardware stack levels required when called:   16
  5749 ;; This function calls:
  5750 ;;		_ADC_TempConversion
  5751 ;;		_moteApp_convertSensorValue
  5752 ;;		_moteApp_getLightValue
  5753 ;;		_moteApp_getTempValue
  5754 ;;		_moteApp_setSensorsInput
  5755 ;;		_oled_clear
  5756 ;;		_oled_putChar
  5757 ;;		_oled_putString
  5758 ;;		_oled_putint8
  5759 ;; This function is called by:
  5760 ;;		_test_powerup
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           
  5764                           	psect	text8
  5765  0051A0                     __ptext8:
  5766                           	opt stack 0
  5767  0051A0                     _moteApp_testSensors:
  5768                           	opt stack 13
  5769                           
  5770                           ;MOTEapp.c: 1369: moteApp_setSensorsInput();
  5771                           
  5772                           ; BSR set to: 0
  5773                           ;incstack = 0
  5774  0051A0  EC60  F02E         	call	_moteApp_setSensorsInput	;wreg free
  5775                           
  5776                           ;MOTEapp.c: 1371: uint16_t dummyValue;
  5777                           ;MOTEapp.c: 1372: oled_clear();
  5778  0051A4  ECA6  F038         	call	_oled_clear	;wreg free
  5779                           
  5780                           ;MOTEapp.c: 1373: oled_putString("ADC Test",0,0);
  5781  0051A8  0E58               	movlw	low STR_17
  5782  0051AA  0100               	movlb	0	; () banked
  5783  0051AC  6F71               	movwf	oled_putString@string& (0+255),b
  5784  0051AE  0E7F               	movlw	high STR_17
  5785  0051B0  0100               	movlb	0	; () banked
  5786  0051B2  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5787  0051B4  0E00               	movlw	0
  5788  0051B6  0100               	movlb	0	; () banked
  5789  0051B8  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5790  0051BA  0E00               	movlw	0
  5791  0051BC  0100               	movlb	0	; () banked
  5792  0051BE  6F74               	movwf	oled_putString@start_page& (0+255),b
  5793  0051C0  EC8D  F030         	call	_oled_putString	;wreg free
  5794                           
  5795                           ;MOTEapp.c: 1374: oled_putString("Light =",0,1);
  5796  0051C4  0E71               	movlw	low STR_19
  5797  0051C6  0100               	movlb	0	; () banked
  5798  0051C8  6F71               	movwf	oled_putString@string& (0+255),b
  5799  0051CA  0E7F               	movlw	high STR_19
  5800  0051CC  0100               	movlb	0	; () banked
  5801  0051CE  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5802  0051D0  0E00               	movlw	0
  5803  0051D2  0100               	movlb	0	; () banked
  5804  0051D4  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5805  0051D6  0E01               	movlw	1
  5806  0051D8  0100               	movlb	0	; () banked
  5807  0051DA  6F74               	movwf	oled_putString@start_page& (0+255),b
  5808  0051DC  EC8D  F030         	call	_oled_putString	;wreg free
  5809                           
  5810                           ;MOTEapp.c: 1375: oled_putString("Temp  =",0,2);
  5811  0051E0  0E69               	movlw	low STR_18
  5812  0051E2  0100               	movlb	0	; () banked
  5813  0051E4  6F71               	movwf	oled_putString@string& (0+255),b
  5814  0051E6  0E7F               	movlw	high STR_18
  5815  0051E8  0100               	movlb	0	; () banked
  5816  0051EA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5817  0051EC  0E00               	movlw	0
  5818  0051EE  0100               	movlb	0	; () banked
  5819  0051F0  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5820  0051F2  0E02               	movlw	2
  5821  0051F4  0100               	movlb	0	; () banked
  5822  0051F6  6F74               	movwf	oled_putString@start_page& (0+255),b
  5823  0051F8  EC8D  F030         	call	_oled_putString	;wreg free
  5824                           
  5825                           ;MOTEapp.c: 1376: oled_putChar('C',14,2);
  5826  0051FC  0E0E               	movlw	14
  5827  0051FE  0100               	movlb	0	; () banked
  5828  005200  6F62               	movwf	oled_putChar@station_dot& (0+255),b
  5829  005202  0E02               	movlw	2
  5830  005204  0100               	movlb	0	; () banked
  5831  005206  6F63               	movwf	oled_putChar@start_page& (0+255),b
  5832  005208  0E43               	movlw	67
  5833  00520A  ECA4  F02C         	call	_oled_putChar
  5834                           
  5835                           ;MOTEapp.c: 1377: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  5836  00520E  EC6D  F034         	call	_moteApp_getTempValue	;wreg free
  5837  005212  C063  F071         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  5838  005216  C064  F072         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  5839  00521A  EC46  F02C         	call	_moteApp_convertSensorValue	;wreg free
  5840  00521E  C071  F0C7         	movff	?_moteApp_convertSensorValue,_temperature
  5841  005222  C072  F0C8         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  5842                           
  5843                           ;MOTEapp.c: 1378: temperature = ADC_TempConversion(temperature);
  5844  005226  0100               	movlb	0	; () banked
  5845  005228  51C7               	movf	_temperature& (0+255),w,b
  5846  00522A  ECEC  F026         	call	_ADC_TempConversion
  5847  00522E  0100               	movlb	0	; () banked
  5848  005230  6FAC               	movwf	??_moteApp_testSensors& (0+255),b
  5849  005232  0100               	movlb	0	; () banked
  5850  005234  51AC               	movf	??_moteApp_testSensors& (0+255),w,b
  5851  005236  0100               	movlb	0	; () banked
  5852  005238  6FC7               	movwf	_temperature& (0+255),b
  5853  00523A  6BC8               	clrf	(_temperature+1)& (0+255),b
  5854                           
  5855                           ; BSR set to: 0
  5856                           ;MOTEapp.c: 1379: oled_putint8(temperature, 10, 2);
  5857  00523C  0E0A               	movlw	10
  5858  00523E  0100               	movlb	0	; () banked
  5859  005240  6F76               	movwf	oled_putint8@station_dot& (0+255),b
  5860  005242  0E02               	movlw	2
  5861  005244  0100               	movlb	0	; () banked
  5862  005246  6F77               	movwf	oled_putint8@start_page& (0+255),b
  5863  005248  0100               	movlb	0	; () banked
  5864  00524A  51C7               	movf	_temperature& (0+255),w,b
  5865  00524C  EC9A  F02A         	call	_oled_putint8
  5866                           
  5867                           ;MOTEapp.c: 1380: __nop();
  5868  005250  F000               	nop	
  5869                           
  5870                           ;MOTEapp.c: 1381: oled_putString("    ", 10, 1);
  5871  005252  0EC7               	movlw	low (STR_40+12)
  5872  005254  0100               	movlb	0	; () banked
  5873  005256  6F71               	movwf	oled_putString@string& (0+255),b
  5874  005258  0E7A               	movlw	high (STR_40+12)
  5875  00525A  0100               	movlb	0	; () banked
  5876  00525C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5877  00525E  0E0A               	movlw	10
  5878  005260  0100               	movlb	0	; () banked
  5879  005262  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5880  005264  0E01               	movlw	1
  5881  005266  0100               	movlb	0	; () banked
  5882  005268  6F74               	movwf	oled_putString@start_page& (0+255),b
  5883  00526A  EC8D  F030         	call	_oled_putString	;wreg free
  5884                           
  5885                           ;MOTEapp.c: 1382: oled_putString(moteApp_getLightValue(), 10, 1);
  5886  00526E  EC34  F033         	call	_moteApp_getLightValue	;wreg free
  5887  005272  C06D  F071         	movff	?_moteApp_getLightValue,oled_putString@string
  5888  005276  C06E  F072         	movff	?_moteApp_getLightValue+1,oled_putString@string+1
  5889  00527A  0E0A               	movlw	10
  5890  00527C  0100               	movlb	0	; () banked
  5891  00527E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5892  005280  0E01               	movlw	1
  5893  005282  0100               	movlb	0	; () banked
  5894  005284  6F74               	movwf	oled_putString@start_page& (0+255),b
  5895  005286  EC8D  F030         	call	_oled_putString	;wreg free
  5896  00528A  0012               	return		;funcret
  5897  00528C                     __end_of_moteApp_testSensors:
  5898                           	opt stack 0
  5899                           tblptru	equ	0xFF8
  5900                           tblptrh	equ	0xFF7
  5901                           tblptrl	equ	0xFF6
  5902                           tablat	equ	0xFF5
  5903                           intcon	equ	0xFF2
  5904                           postinc0	equ	0xFEE
  5905                           wreg	equ	0xFE8
  5906                           postdec1	equ	0xFE5
  5907                           fsr1l	equ	0xFE1
  5908                           status	equ	0xFD8
  5909                           
  5910 ;; *************** function _moteHandler *****************
  5911 ;; Defined at:
  5912 ;;		line 186 in file "../Includes/Board/MOTEapp.c"
  5913 ;; Parameters:    Size  Location     Type
  5914 ;;		None
  5915 ;; Auto vars:     Size  Location     Type
  5916 ;;  readMessage     1    4[BANK1 ] unsigned char 
  5917 ;;  buttonPress     1    3[BANK1 ] enum E5832
  5918 ;;  s2Button        1    2[BANK1 ] unsigned char 
  5919 ;;  gotoNextStat    1    1[BANK1 ] unsigned char 
  5920 ;;  gotoSleep       1    0[BANK1 ] unsigned char 
  5921 ;; Return value:  Size  Location     Type
  5922 ;;                  1    wreg      enum E6829
  5923 ;; Registers used:
  5924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5925 ;; Tracked objects:
  5926 ;;		On entry : 0/0
  5927 ;;		On exit  : 0/0
  5928 ;;		Unchanged: 0/0
  5929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5930 ;;      Params:         0       0       0       0       0       0       0       0       0
  5931 ;;      Locals:         0       0       5       0       0       0       0       0       0
  5932 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5933 ;;      Totals:         0       1       5       0       0       0       0       0       0
  5934 ;;Total ram usage:        6 bytes
  5935 ;; Hardware stack levels used:    1
  5936 ;; Hardware stack levels required when called:   19
  5937 ;; This function calls:
  5938 ;;		_ADC_TempConversion
  5939 ;;		_MOTEapp_TimerBasedTask
  5940 ;;		_MOTEapp_getModuleResponse
  5941 ;;		_TMRapp_ClearBitFlags
  5942 ;;		_TMRapp_Handler
  5943 ;;		_USBapp_exitCDC
  5944 ;;		_USBapp_exitCDCState
  5945 ;;		_moteApp_convertSensorValue
  5946 ;;		_moteApp_getLightValue
  5947 ;;		_moteApp_getTempValue
  5948 ;;		_moteJoiningProcess
  5949 ;;		_moteRunningProcess
  5950 ;;		_oled_clear
  5951 ;;		_oled_putString
  5952 ;;		_oled_putint8
  5953 ;;		_service_pushbutton
  5954 ;; This function is called by:
  5955 ;;		_main
  5956 ;; This function uses a non-reentrant model
  5957 ;;
  5958                           
  5959                           	psect	text9
  5960  002D68                     __ptext9:
  5961                           	opt stack 0
  5962  002D68                     _moteHandler:
  5963                           	opt stack 11
  5964                           
  5965                           ;MOTEapp.c: 188: bool gotoSleep = 0;
  5966                           
  5967                           ;incstack = 0
  5968  002D68  0E00               	movlw	0
  5969  002D6A  0101               	movlb	1	; () banked
  5970  002D6C  6FF3               	movwf	moteHandler@gotoSleep& (0+255),b
  5971                           
  5972                           ;MOTEapp.c: 189: bool gotoNextState = 0;
  5973  002D6E  0E00               	movlw	0
  5974  002D70  0101               	movlb	1	; () banked
  5975  002D72  6FF4               	movwf	moteHandler@gotoNextState& (0+255),b
  5976                           
  5977                           ;MOTEapp.c: 190: bool s2Button = 0;
  5978  002D74  0E00               	movlw	0
  5979  002D76  0101               	movlb	1	; () banked
  5980  002D78  6FF5               	movwf	moteHandler@s2Button& (0+255),b
  5981                           
  5982                           ;MOTEapp.c: 191: bool readMessage = 0;
  5983  002D7A  0E00               	movlw	0
  5984  002D7C  0101               	movlb	1	; () banked
  5985  002D7E  6FF7               	movwf	moteHandler@readMessage& (0+255),b
  5986                           
  5987                           ;MOTEapp.c: 192: buttonStates_t buttonPress = Released;
  5988  002D80  0E03               	movlw	3
  5989  002D82  0101               	movlb	1	; () banked
  5990  002D84  6FF6               	movwf	moteHandler@buttonPress& (0+255),b
  5991                           
  5992                           ; BSR set to: 1
  5993                           ;MOTEapp.c: 195: if (PORTAbits.RA0)
  5994  002D86  A080               	btfss	3968,0,c	;volatile
  5995  002D88  D009               	goto	l14721
  5996                           
  5997                           ; BSR set to: 1
  5998                           ;MOTEapp.c: 196: {
  5999                           ;MOTEapp.c: 197: if (USBapp_exitCDC() == NO_USB)
  6000  002D8A  EC6B  F039         	call	_USBapp_exitCDC	;wreg free
  6001  002D8E  0900               	iorlw	0
  6002  002D90  A4D8               	btfss	status,2,c
  6003  002D92  D008               	goto	l14723
  6004                           
  6005                           ;MOTEapp.c: 198: moteState = MOTE_SWAP;
  6006  002D94  0E04               	movlw	4
  6007  002D96  0100               	movlb	0	; () banked
  6008  002D98  6FFE               	movwf	_moteState& (0+255),b
  6009                           
  6010                           ; BSR set to: 0
  6011                           ;MOTEapp.c: 199: } else {
  6012  002D9A  D004               	goto	l14723
  6013  002D9C                     l14721:
  6014                           
  6015                           ;MOTEapp.c: 200: USBapp_exitCDCState(NO_USB);
  6016  002D9C  0E00               	movlw	0
  6017  002D9E  EC4F  F039         	call	_USBapp_exitCDCState
  6018  002DA2  D000               	goto	l14723
  6019  002DA4                     l14723:
  6020                           
  6021                           ;MOTEapp.c: 201: }
  6022                           ;MOTEapp.c: 204: if ( appTimer.mSecTick )
  6023  002DA4  0100               	movlb	0	; () banked
  6024  002DA6  A1F2               	btfss	_appTimer& (0+255),0,b
  6025  002DA8  D009               	goto	l14731
  6026                           
  6027                           ; BSR set to: 0
  6028                           ;MOTEapp.c: 205: {
  6029                           ;MOTEapp.c: 207: TMRapp_ClearBitFlags();
  6030  002DAA  EC6F  F039         	call	_TMRapp_ClearBitFlags	;wreg free
  6031                           
  6032                           ;MOTEapp.c: 209: TMRapp_Handler();
  6033  002DAE  EC4B  F01C         	call	_TMRapp_Handler	;wreg free
  6034                           
  6035                           ;MOTEapp.c: 210: MOTEapp_TimerBasedTask(appTimer);
  6036  002DB2  0100               	movlb	0	; () banked
  6037  002DB4  51F2               	movf	_appTimer& (0+255),w,b
  6038  002DB6  ECC5  F035         	call	_MOTEapp_TimerBasedTask
  6039  002DBA  D000               	goto	l14731
  6040  002DBC                     l14731:
  6041                           
  6042                           ;MOTEapp.c: 211: }
  6043                           ;MOTEapp.c: 214: buttonPress = service_pushbutton();
  6044  002DBC  ECB4  F02E         	call	_service_pushbutton	;wreg free
  6045  002DC0  0101               	movlb	1	; () banked
  6046  002DC2  6FF6               	movwf	moteHandler@buttonPress& (0+255),b
  6047                           
  6048                           ; BSR set to: 1
  6049                           ;MOTEapp.c: 215: if (buttonPress == ShortPress1)
  6050  002DC4  0101               	movlb	1	; () banked
  6051  002DC6  05F6               	decf	moteHandler@buttonPress& (0+255),w,b
  6052  002DC8  A4D8               	btfss	status,2,c
  6053  002DCA  D007               	goto	l14737
  6054                           
  6055                           ; BSR set to: 1
  6056                           ;MOTEapp.c: 216: {
  6057                           ;MOTEapp.c: 217: secTicker = 0;
  6058  002DCC  0E00               	movlw	0
  6059  002DCE  0100               	movlb	0	; () banked
  6060  002DD0  6FE5               	movwf	_secTicker& (0+255),b
  6061                           
  6062                           ;MOTEapp.c: 218: gotoNextState = 1;
  6063  002DD2  0E01               	movlw	1
  6064  002DD4  0101               	movlb	1	; () banked
  6065  002DD6  6FF4               	movwf	moteHandler@gotoNextState& (0+255),b
  6066                           
  6067                           ;MOTEapp.c: 219: }
  6068  002DD8  D00C               	goto	l14741
  6069  002DDA                     l14737:
  6070                           
  6071                           ; BSR set to: 1
  6072                           ;MOTEapp.c: 220: else if (buttonPress == ShortPress2)
  6073  002DDA  0E02               	movlw	2
  6074  002DDC  0101               	movlb	1	; () banked
  6075  002DDE  19F6               	xorwf	moteHandler@buttonPress& (0+255),w,b
  6076  002DE0  A4D8               	btfss	status,2,c
  6077  002DE2  D007               	goto	l14741
  6078                           
  6079                           ; BSR set to: 1
  6080                           ;MOTEapp.c: 221: {
  6081                           ;MOTEapp.c: 222: secTicker = 0;
  6082  002DE4  0E00               	movlw	0
  6083  002DE6  0100               	movlb	0	; () banked
  6084  002DE8  6FE5               	movwf	_secTicker& (0+255),b
  6085                           
  6086                           ;MOTEapp.c: 223: s2Button = 1;
  6087  002DEA  0E01               	movlw	1
  6088  002DEC  0101               	movlb	1	; () banked
  6089  002DEE  6FF5               	movwf	moteHandler@s2Button& (0+255),b
  6090                           
  6091                           ; BSR set to: 1
  6092  002DF0  D000               	goto	l14741
  6093  002DF2                     l14741:
  6094                           
  6095                           ; BSR set to: 1
  6096                           ;MOTEapp.c: 224: }
  6097                           ;MOTEapp.c: 227: if ( MOTEapp_getModuleResponse() )
  6098  002DF2  EC45  F030         	call	_MOTEapp_getModuleResponse	;wreg free
  6099  002DF6  0900               	iorlw	0
  6100  002DF8  B4D8               	btfsc	status,2,c
  6101  002DFA  D002               	goto	l14745
  6102                           
  6103                           ;MOTEapp.c: 228: readMessage = 1;
  6104  002DFC  0E01               	movlw	1
  6105  002DFE  D001               	goto	L1
  6106  002E00                     l14745:
  6107                           
  6108                           ;MOTEapp.c: 229: else
  6109                           ;MOTEapp.c: 230: readMessage = 0;
  6110  002E00  0E00               	movlw	0
  6111  002E02                     L1:
  6112  002E02  0101               	movlb	1	; () banked
  6113  002E04  6FF7               	movwf	moteHandler@readMessage& (0+255),b
  6114  002E06  D000               	goto	l14747
  6115  002E08                     l14747:
  6116                           
  6117                           ; BSR set to: 1
  6118                           ;MOTEapp.c: 233: if (runningState == runningSensorMenu)
  6119  002E08  0E02               	movlw	2
  6120  002E0A  0100               	movlb	0	; () banked
  6121  002E0C  19E9               	xorwf	_runningState& (0+255),w,b
  6122  002E0E  A4D8               	btfss	status,2,c
  6123  002E10  D04C               	goto	l14765
  6124                           
  6125                           ; BSR set to: 0
  6126                           ;MOTEapp.c: 234: {
  6127                           ;MOTEapp.c: 236: if (m10SecTicker >= 100)
  6128  002E12  0101               	movlb	1	; () banked
  6129  002E14  5157               	movf	(_m10SecTicker+1)& (0+255),w,b
  6130  002E16  E105               	bnz	u14260
  6131  002E18  0E64               	movlw	100
  6132  002E1A  0101               	movlb	1	; () banked
  6133  002E1C  5D56               	subwf	_m10SecTicker& (0+255),w,b
  6134  002E1E  A0D8               	btfss	status,0,c
  6135  002E20  D044               	goto	l14765
  6136  002E22                     u14260:
  6137                           
  6138                           ; BSR set to: 1
  6139                           ;MOTEapp.c: 237: {
  6140                           ;MOTEapp.c: 238: __nop();
  6141  002E22  F000               	nop	
  6142                           
  6143                           ;MOTEapp.c: 239: oled_putString("    ", 6, 1);
  6144  002E24  0EC7               	movlw	low (STR_40+12)
  6145  002E26  0100               	movlb	0	; () banked
  6146  002E28  6F71               	movwf	oled_putString@string& (0+255),b
  6147  002E2A  0E7A               	movlw	high (STR_40+12)
  6148  002E2C  0100               	movlb	0	; () banked
  6149  002E2E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6150  002E30  0E06               	movlw	6
  6151  002E32  0100               	movlb	0	; () banked
  6152  002E34  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6153  002E36  0E01               	movlw	1
  6154  002E38  0100               	movlb	0	; () banked
  6155  002E3A  6F74               	movwf	oled_putString@start_page& (0+255),b
  6156  002E3C  EC8D  F030         	call	_oled_putString	;wreg free
  6157                           
  6158                           ;MOTEapp.c: 240: oled_putString(moteApp_getLightValue(), 6, 1);
  6159  002E40  EC34  F033         	call	_moteApp_getLightValue	;wreg free
  6160  002E44  C06D  F071         	movff	?_moteApp_getLightValue,oled_putString@string
  6161  002E48  C06E  F072         	movff	?_moteApp_getLightValue+1,oled_putString@string+1
  6162  002E4C  0E06               	movlw	6
  6163  002E4E  0100               	movlb	0	; () banked
  6164  002E50  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6165  002E52  0E01               	movlw	1
  6166  002E54  0100               	movlb	0	; () banked
  6167  002E56  6F74               	movwf	oled_putString@start_page& (0+255),b
  6168  002E58  EC8D  F030         	call	_oled_putString	;wreg free
  6169                           
  6170                           ;MOTEapp.c: 241: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  6171  002E5C  EC6D  F034         	call	_moteApp_getTempValue	;wreg free
  6172  002E60  C063  F071         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  6173  002E64  C064  F072         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  6174  002E68  EC46  F02C         	call	_moteApp_convertSensorValue	;wreg free
  6175  002E6C  C071  F0C7         	movff	?_moteApp_convertSensorValue,_temperature
  6176  002E70  C072  F0C8         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  6177                           
  6178                           ;MOTEapp.c: 242: temperature = ADC_TempConversion(temperature);
  6179  002E74  0100               	movlb	0	; () banked
  6180  002E76  51C7               	movf	_temperature& (0+255),w,b
  6181  002E78  ECEC  F026         	call	_ADC_TempConversion
  6182  002E7C  0100               	movlb	0	; () banked
  6183  002E7E  6FB6               	movwf	??_moteHandler& (0+255),b
  6184  002E80  0100               	movlb	0	; () banked
  6185  002E82  51B6               	movf	??_moteHandler& (0+255),w,b
  6186  002E84  0100               	movlb	0	; () banked
  6187  002E86  6FC7               	movwf	_temperature& (0+255),b
  6188  002E88  6BC8               	clrf	(_temperature+1)& (0+255),b
  6189                           
  6190                           ; BSR set to: 0
  6191                           ;MOTEapp.c: 243: oled_putint8(temperature, 6, 2);
  6192  002E8A  0E06               	movlw	6
  6193  002E8C  0100               	movlb	0	; () banked
  6194  002E8E  6F76               	movwf	oled_putint8@station_dot& (0+255),b
  6195  002E90  0E02               	movlw	2
  6196  002E92  0100               	movlb	0	; () banked
  6197  002E94  6F77               	movwf	oled_putint8@start_page& (0+255),b
  6198  002E96  0100               	movlb	0	; () banked
  6199  002E98  51C7               	movf	_temperature& (0+255),w,b
  6200  002E9A  EC9A  F02A         	call	_oled_putint8
  6201                           
  6202                           ;MOTEapp.c: 244: m10SecTicker = 0;
  6203  002E9E  0E00               	movlw	0
  6204  002EA0  0101               	movlb	1	; () banked
  6205  002EA2  6F57               	movwf	(_m10SecTicker+1)& (0+255),b
  6206  002EA4  0E00               	movlw	0
  6207  002EA6  6F56               	movwf	_m10SecTicker& (0+255),b
  6208                           
  6209                           ; BSR set to: 1
  6210  002EA8  D000               	goto	l14765
  6211  002EAA                     l14765:
  6212                           
  6213                           ;MOTEapp.c: 245: }
  6214                           ;MOTEapp.c: 246: }
  6215                           ;MOTEapp.c: 248: if(secTicker)
  6216  002EAA  0100               	movlb	0	; () banked
  6217  002EAC  51E5               	movf	_secTicker& (0+255),w,b
  6218  002EAE  B4D8               	btfsc	status,2,c
  6219  002EB0  D08D               	goto	l14803
  6220                           
  6221                           ; BSR set to: 0
  6222                           ;MOTEapp.c: 249: {
  6223                           ;MOTEapp.c: 250: if ((secTicker >= 10) && (menuTimeout))
  6224  002EB2  0E09               	movlw	9
  6225  002EB4  0100               	movlb	0	; () banked
  6226  002EB6  65E5               	cpfsgt	_secTicker& (0+255),b
  6227  002EB8  D089               	goto	l14803
  6228  002EBA  D001               	goto	l14769
  6229  002EBC  D087               	goto	l14803
  6230  002EBE                     l14769:
  6231                           
  6232                           ; BSR set to: 0
  6233  002EBE  0100               	movlb	0	; () banked
  6234  002EC0  51FA               	movf	_menuTimeout& (0+255),w,b
  6235  002EC2  B4D8               	btfsc	status,2,c
  6236  002EC4  D083               	goto	l14803
  6237                           
  6238                           ; BSR set to: 0
  6239                           ;MOTEapp.c: 251: {
  6240                           ;MOTEapp.c: 252: gotoSleep = 1;
  6241  002EC6  0E01               	movlw	1
  6242  002EC8  0101               	movlb	1	; () banked
  6243  002ECA  6FF3               	movwf	moteHandler@gotoSleep& (0+255),b
  6244                           
  6245                           ;MOTEapp.c: 253: secTicker = 0;
  6246  002ECC  0E00               	movlw	0
  6247  002ECE  0100               	movlb	0	; () banked
  6248  002ED0  6FE5               	movwf	_secTicker& (0+255),b
  6249                           
  6250                           ; BSR set to: 0
  6251                           ;MOTEapp.c: 254: }
  6252                           ;MOTEapp.c: 255: }
  6253                           ;MOTEapp.c: 257: switch(moteState)
  6254                           
  6255                           ; BSR set to: 0
  6256  002ED2  D07C               	goto	l14803
  6257  002ED4                     l376:
  6258  002ED4  D7FF               	goto	l376
  6259                           
  6260                           ;MOTEapp.c: 261: break;
  6261  002ED6  D088               	goto	l14805
  6262  002ED8                     l14773:
  6263                           
  6264                           ;MOTEapp.c: 263: oled_clear();
  6265  002ED8  ECA6  F038         	call	_oled_clear	;wreg free
  6266                           
  6267                           ;MOTEapp.c: 264: oled_putString("MOTE Mode",1,0);
  6268  002EDC  0EDE               	movlw	low STR_24
  6269  002EDE  0100               	movlb	0	; () banked
  6270  002EE0  6F71               	movwf	oled_putString@string& (0+255),b
  6271  002EE2  0E7E               	movlw	high STR_24
  6272  002EE4  0100               	movlb	0	; () banked
  6273  002EE6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6274  002EE8  0E01               	movlw	1
  6275  002EEA  0100               	movlb	0	; () banked
  6276  002EEC  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6277  002EEE  0E00               	movlw	0
  6278  002EF0  0100               	movlb	0	; () banked
  6279  002EF2  6F74               	movwf	oled_putString@start_page& (0+255),b
  6280  002EF4  EC8D  F030         	call	_oled_putString	;wreg free
  6281                           
  6282                           ;MOTEapp.c: 265: oled_putString("Starting",2,1);
  6283  002EF8  0E34               	movlw	low STR_25
  6284  002EFA  0100               	movlb	0	; () banked
  6285  002EFC  6F71               	movwf	oled_putString@string& (0+255),b
  6286  002EFE  0E7F               	movlw	high STR_25
  6287  002F00  0100               	movlb	0	; () banked
  6288  002F02  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6289  002F04  0E02               	movlw	2
  6290  002F06  0100               	movlb	0	; () banked
  6291  002F08  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6292  002F0A  0E01               	movlw	1
  6293  002F0C  0100               	movlb	0	; () banked
  6294  002F0E  6F74               	movwf	oled_putString@start_page& (0+255),b
  6295  002F10  EC8D  F030         	call	_oled_putString	;wreg free
  6296                           
  6297                           ;MOTEapp.c: 266: oled_putString("ReRun PwrTst<S2>",0,3);
  6298  002F14  0EA9               	movlw	low STR_26
  6299  002F16  0100               	movlb	0	; () banked
  6300  002F18  6F71               	movwf	oled_putString@string& (0+255),b
  6301  002F1A  0E7B               	movlw	high STR_26
  6302  002F1C  0100               	movlb	0	; () banked
  6303  002F1E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6304  002F20  0E00               	movlw	0
  6305  002F22  0100               	movlb	0	; () banked
  6306  002F24  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6307  002F26  0E03               	movlw	3
  6308  002F28  0100               	movlb	0	; () banked
  6309  002F2A  6F74               	movwf	oled_putString@start_page& (0+255),b
  6310  002F2C  EC8D  F030         	call	_oled_putString	;wreg free
  6311                           
  6312                           ;MOTEapp.c: 267: activeState = moteStartup;
  6313  002F30  0E00               	movlw	0
  6314  002F32  0100               	movlb	0	; () banked
  6315  002F34  6FEB               	movwf	_activeState& (0+255),b
  6316                           
  6317                           ; BSR set to: 0
  6318                           ;MOTEapp.c: 268: moteState = MOTE_JOINING;
  6319  002F36  0E02               	movlw	2
  6320  002F38  D03B               	goto	L2
  6321  002F3A                     l14785:
  6322                           
  6323                           ; BSR set to: 0
  6324                           ;MOTEapp.c: 271: if ( moteJoiningProcess(readMessage, gotoNextState, s2Button) )
  6325  002F3A  C1F4  F076         	movff	moteHandler@gotoNextState,moteJoiningProcess@changeStates
  6326  002F3E  C1F5  F077         	movff	moteHandler@s2Button,moteJoiningProcess@selectButton
  6327  002F42  0101               	movlb	1	; () banked
  6328  002F44  51F7               	movf	moteHandler@readMessage& (0+255),w,b
  6329  002F46  ECF3  F009         	call	_moteJoiningProcess
  6330  002F4A  0900               	iorlw	0
  6331  002F4C  B4D8               	btfsc	status,2,c
  6332  002F4E  D04C               	goto	l14805
  6333                           
  6334                           ;MOTEapp.c: 272: {
  6335                           ;MOTEapp.c: 273: oled_clear();
  6336  002F50  ECA6  F038         	call	_oled_clear	;wreg free
  6337                           
  6338                           ;MOTEapp.c: 274: oled_putString("Mobile Mote -App",0,0);
  6339  002F54  0EFE               	movlw	low STR_27
  6340  002F56  0100               	movlb	0	; () banked
  6341  002F58  6F71               	movwf	oled_putString@string& (0+255),b
  6342  002F5A  0E7B               	movlw	high STR_27
  6343  002F5C  0100               	movlb	0	; () banked
  6344  002F5E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6345  002F60  0E00               	movlw	0
  6346  002F62  0100               	movlb	0	; () banked
  6347  002F64  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6348  002F66  0E00               	movlw	0
  6349  002F68  0100               	movlb	0	; () banked
  6350  002F6A  6F74               	movwf	oled_putString@start_page& (0+255),b
  6351  002F6C  EC8D  F030         	call	_oled_putString	;wreg free
  6352                           
  6353                           ;MOTEapp.c: 275: oled_putString("Navigate  Select", 0,2);
  6354  002F70  0E0F               	movlw	low STR_28
  6355  002F72  0100               	movlb	0	; () banked
  6356  002F74  6F71               	movwf	oled_putString@string& (0+255),b
  6357  002F76  0E7C               	movlw	high STR_28
  6358  002F78  0100               	movlb	0	; () banked
  6359  002F7A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6360  002F7C  0E00               	movlw	0
  6361  002F7E  0100               	movlb	0	; () banked
  6362  002F80  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6363  002F82  0E02               	movlw	2
  6364  002F84  0100               	movlb	0	; () banked
  6365  002F86  6F74               	movwf	oled_putString@start_page& (0+255),b
  6366  002F88  EC8D  F030         	call	_oled_putString	;wreg free
  6367                           
  6368                           ;MOTEapp.c: 276: oled_putString(" (S2)      (S3) ", 0,3);
  6369  002F8C  0E32               	movlw	low STR_29
  6370  002F8E  0100               	movlb	0	; () banked
  6371  002F90  6F71               	movwf	oled_putString@string& (0+255),b
  6372  002F92  0E7B               	movlw	high STR_29
  6373  002F94  0100               	movlb	0	; () banked
  6374  002F96  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6375  002F98  0E00               	movlw	0
  6376  002F9A  0100               	movlb	0	; () banked
  6377  002F9C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6378  002F9E  0E03               	movlw	3
  6379  002FA0  0100               	movlb	0	; () banked
  6380  002FA2  6F74               	movwf	oled_putString@start_page& (0+255),b
  6381  002FA4  EC8D  F030         	call	_oled_putString	;wreg free
  6382                           
  6383                           ;MOTEapp.c: 277: runningState = runningEnter;
  6384  002FA8  0E00               	movlw	0
  6385  002FAA  0100               	movlb	0	; () banked
  6386  002FAC  6FE9               	movwf	_runningState& (0+255),b
  6387                           
  6388                           ; BSR set to: 0
  6389                           ;MOTEapp.c: 278: moteState = MOTE_RUNNING;
  6390  002FAE  0E03               	movlw	3
  6391  002FB0                     L2:
  6392  002FB0  0100               	movlb	0	; () banked
  6393  002FB2  6FFE               	movwf	_moteState& (0+255),b
  6394                           
  6395                           ; BSR set to: 0
  6396                           ;MOTEapp.c: 279: }
  6397                           ;MOTEapp.c: 280: break;
  6398  002FB4  D019               	goto	l14805
  6399  002FB6                     l14799:
  6400                           
  6401                           ; BSR set to: 0
  6402                           ;MOTEapp.c: 282: moteRunningProcess(gotoNextState, s2Button, readMessage, gotoSleep);
  6403  002FB6  C1F5  F0AC         	movff	moteHandler@s2Button,moteRunningProcess@selectButton
  6404  002FBA  C1F7  F0AD         	movff	moteHandler@readMessage,moteRunningProcess@messageReady
  6405  002FBE  C1F3  F0AE         	movff	moteHandler@gotoSleep,moteRunningProcess@sleepEvent
  6406  002FC2  0101               	movlb	1	; () banked
  6407  002FC4  51F4               	movf	moteHandler@gotoNextState& (0+255),w,b
  6408  002FC6  EC91  F000         	call	_moteRunningProcess
  6409                           
  6410                           ;MOTEapp.c: 287: }
  6411                           
  6412                           ;MOTEapp.c: 286: break;
  6413                           
  6414                           ;MOTEapp.c: 284: case MOTE_SWAP:
  6415                           
  6416                           ;MOTEapp.c: 283: break;
  6417  002FCA  D00E               	goto	l14805
  6418  002FCC                     l14803:
  6419  002FCC  0100               	movlb	0	; () banked
  6420  002FCE  51FE               	movf	_moteState& (0+255),w,b
  6421                           
  6422                           ; Switch size 1, requested type "space"
  6423                           ; Number of cases is 4, Range of values is 1 to 4
  6424                           ; switch strategies available:
  6425                           ; Name         Instructions Cycles
  6426                           ; simple_byte           13     7 (average)
  6427                           ;	Chosen strategy is simple_byte
  6428  002FD0  0A01               	xorlw	1	; case 1
  6429  002FD2  B4D8               	btfsc	status,2,c
  6430  002FD4  D781               	goto	l14773
  6431  002FD6  0A03               	xorlw	3	; case 2
  6432  002FD8  B4D8               	btfsc	status,2,c
  6433  002FDA  D7AF               	goto	l14785
  6434  002FDC  0A01               	xorlw	1	; case 3
  6435  002FDE  B4D8               	btfsc	status,2,c
  6436  002FE0  D7EA               	goto	l14799
  6437  002FE2  0A07               	xorlw	7	; case 4
  6438  002FE4  A4D8               	btfss	status,2,c
  6439  002FE6  D776               	goto	l376
  6440  002FE8                     l14805:
  6441                           
  6442                           ;MOTEapp.c: 288: return moteState;
  6443  002FE8  0100               	movlb	0	; () banked
  6444  002FEA  51FE               	movf	_moteState& (0+255),w,b
  6445  002FEC  0012               	return	
  6446                           
  6447                           ; BSR set to: 0
  6448                           
  6449                           ; BSR set to: 0
  6450  002FEE  0012               	return		;funcret
  6451  002FF0                     __end_of_moteHandler:
  6452                           	opt stack 0
  6453                           tblptru	equ	0xFF8
  6454                           tblptrh	equ	0xFF7
  6455                           tblptrl	equ	0xFF6
  6456                           tablat	equ	0xFF5
  6457                           intcon	equ	0xFF2
  6458                           postinc0	equ	0xFEE
  6459                           wreg	equ	0xFE8
  6460                           postdec1	equ	0xFE5
  6461                           fsr1l	equ	0xFE1
  6462                           status	equ	0xFD8
  6463                           
  6464 ;; *************** function _moteRunningProcess *****************
  6465 ;; Defined at:
  6466 ;;		line 487 in file "../Includes/Board/MOTEapp.c"
  6467 ;; Parameters:    Size  Location     Type
  6468 ;;  changeStates    1    wreg     unsigned char 
  6469 ;;  selectButton    1   76[BANK0 ] unsigned char 
  6470 ;;  messageReady    1   77[BANK0 ] unsigned char 
  6471 ;;  sleepEvent      1   78[BANK0 ] unsigned char 
  6472 ;; Auto vars:     Size  Location     Type
  6473 ;;  changeStates    1   85[BANK0 ] unsigned char 
  6474 ;;  counter         1   83[BANK0 ] unsigned char 
  6475 ;;  bufferReadPo    1   84[BANK0 ] unsigned char 
  6476 ;;  sizeOfUpdate    1   82[BANK0 ] unsigned char 
  6477 ;;  sizeOfUpdate    1   81[BANK0 ] unsigned char 
  6478 ;;  readByte        1   80[BANK0 ] unsigned char 
  6479 ;; Return value:  Size  Location     Type
  6480 ;;                  1    wreg      enum E6078
  6481 ;; Registers used:
  6482 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6483 ;; Tracked objects:
  6484 ;;		On entry : 0/0
  6485 ;;		On exit  : 0/0
  6486 ;;		Unchanged: 0/0
  6487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6488 ;;      Params:         0       3       0       0       0       0       0       0       0
  6489 ;;      Locals:         0       6       0       0       0       0       0       0       0
  6490 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6491 ;;      Totals:         0      10       0       0       0       0       0       0       0
  6492 ;;Total ram usage:       10 bytes
  6493 ;; Hardware stack levels used:    1
  6494 ;; Hardware stack levels required when called:   18
  6495 ;; This function calls:
  6496 ;;		_ADC_TempConversion
  6497 ;;		_MOTEapp_SetDataRateSetting
  6498 ;;		_TMR2_ReadTimer
  6499 ;;		_moteApp_GoToSleep
  6500 ;;		_moteApp_add8bToDataBuffer
  6501 ;;		_moteApp_addToDataBuffer
  6502 ;;		_moteApp_clearBuffers
  6503 ;;		_moteApp_convertSensorValue
  6504 ;;		_moteApp_delayms
  6505 ;;		_moteApp_getLightString
  6506 ;;		_moteApp_getLightValue
  6507 ;;		_moteApp_getTempValue
  6508 ;;		_moteApp_lightStringSize
  6509 ;;		_moteApp_setSensorsInput
  6510 ;;		_oled_clear
  6511 ;;		_oled_putString
  6512 ;;		_oled_putUint8
  6513 ;;		_oled_putint8
  6514 ;;		_sendDataCommand
  6515 ;;		_strcmp
  6516 ;;		_strncmp
  6517 ;; This function is called by:
  6518 ;;		_moteHandler
  6519 ;; This function uses a non-reentrant model
  6520 ;;
  6521                           
  6522                           	psect	text10
  6523  000122                     __ptext10:
  6524                           	opt stack 0
  6525  000122                     _moteRunningProcess:
  6526                           	opt stack 11
  6527                           
  6528                           ; BSR set to: 0
  6529                           ;incstack = 0
  6530                           ;moteRunningProcess@changeStates stored from wreg
  6531  000122  0100               	movlb	0	; () banked
  6532  000124  6FB5               	movwf	moteRunningProcess@changeStates& (0+255),b
  6533                           
  6534                           ;MOTEapp.c: 489: uint8_t readByte = 0;
  6535  000126  0E00               	movlw	0
  6536  000128  0100               	movlb	0	; () banked
  6537  00012A  6FB0               	movwf	moteRunningProcess@readByte& (0+255),b
  6538                           
  6539                           ; BSR set to: 0
  6540                           ;MOTEapp.c: 491: if ((sleepEvent) && (periodicState))
  6541  00012C  0100               	movlb	0	; () banked
  6542  00012E  51AE               	movf	moteRunningProcess@sleepEvent& (0+255),w,b
  6543  000130  0100               	movlb	0	; () banked
  6544  000132  B4D8               	btfsc	status,2,c
  6545  000134  EFC3  F009         	goto	l14421
  6546                           
  6547                           ; BSR set to: 0
  6548  000138  0100               	movlb	0	; () banked
  6549  00013A  51F9               	movf	_periodicState& (0+255),w,b
  6550  00013C  B4D8               	btfsc	status,2,c
  6551  00013E  EFC3  F009         	goto	l14421
  6552                           
  6553                           ; BSR set to: 0
  6554                           ;MOTEapp.c: 492: {
  6555                           ;MOTEapp.c: 493: if (sleepTicker >= periodicTimerValue)
  6556  000142  0100               	movlb	0	; () banked
  6557  000144  51FC               	movf	_periodicTimerValue& (0+255),w,b
  6558  000146  0100               	movlb	0	; () banked
  6559  000148  5DE3               	subwf	_sleepTicker& (0+255),w,b
  6560  00014A  A0D8               	btfss	status,0,c
  6561  00014C  D0E5               	goto	l13953
  6562                           
  6563                           ; BSR set to: 0
  6564                           ;MOTEapp.c: 494: {
  6565                           ;MOTEapp.c: 496: moteApp_clearBuffers();
  6566  00014E  EC79  F025         	call	_moteApp_clearBuffers	;wreg free
  6567                           
  6568                           ;MOTEapp.c: 499: light = 0;
  6569  000152  0E00               	movlw	0
  6570  000154  0101               	movlb	1	; () banked
  6571  000156  6F59               	movwf	(_light+1)& (0+255),b
  6572  000158  0E00               	movlw	0
  6573  00015A  6F58               	movwf	_light& (0+255),b
  6574                           
  6575                           ; BSR set to: 1
  6576                           ;MOTEapp.c: 500: temperature = 0;
  6577  00015C  0E00               	movlw	0
  6578  00015E  0100               	movlb	0	; () banked
  6579  000160  6FC8               	movwf	(_temperature+1)& (0+255),b
  6580  000162  0E00               	movlw	0
  6581  000164  6FC7               	movwf	_temperature& (0+255),b
  6582                           
  6583                           ; BSR set to: 0
  6584                           ;MOTEapp.c: 501: __nop();
  6585  000166  F000               	nop	
  6586                           
  6587                           ;MOTEapp.c: 503: moteApp_setSensorsInput();
  6588  000168  EC60  F02E         	call	_moteApp_setSensorsInput	;wreg free
  6589                           
  6590                           ;MOTEapp.c: 504: uint8_t sizeOfUpdate = 0;
  6591  00016C  0E00               	movlw	0
  6592  00016E  0100               	movlb	0	; () banked
  6593  000170  6FB1               	movwf	moteRunningProcess@sizeOfUpdate& (0+255),b
  6594                           
  6595                           ; BSR set to: 0
  6596                           ;MOTEapp.c: 505: light = moteApp_convertSensorValue(moteApp_getLightValue());
  6597  000172  EC34  F033         	call	_moteApp_getLightValue	;wreg free
  6598  000176  C06D  F071         	movff	?_moteApp_getLightValue,moteApp_convertSensorValue@string
  6599  00017A  C06E  F072         	movff	?_moteApp_getLightValue+1,moteApp_convertSensorValue@string+1
  6600  00017E  EC46  F02C         	call	_moteApp_convertSensorValue	;wreg free
  6601  000182  C071  F158         	movff	?_moteApp_convertSensorValue,_light
  6602  000186  C072  F159         	movff	?_moteApp_convertSensorValue+1,_light+1
  6603                           
  6604                           ;MOTEapp.c: 506: oled_putString(moteApp_getLightString(), 6, 1);
  6605  00018A  EC34  F039         	call	_moteApp_getLightString	;wreg free
  6606  00018E  C060  F071         	movff	?_moteApp_getLightString,oled_putString@string
  6607  000192  C061  F072         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  6608  000196  0E06               	movlw	6
  6609  000198  0100               	movlb	0	; () banked
  6610  00019A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6611  00019C  0E01               	movlw	1
  6612  00019E  0100               	movlb	0	; () banked
  6613  0001A0  6F74               	movwf	oled_putString@start_page& (0+255),b
  6614  0001A2  EC8D  F030         	call	_oled_putString	;wreg free
  6615                           
  6616                           ;MOTEapp.c: 507: sizeOfUpdate = moteApp_addToDataBuffer(moteApp_getLightString(), 4);
  6617  0001A6  EC34  F039         	call	_moteApp_getLightString	;wreg free
  6618  0001AA  C060  F071         	movff	?_moteApp_getLightString,moteApp_addToDataBuffer@string
  6619  0001AE  C061  F072         	movff	?_moteApp_getLightString+1,moteApp_addToDataBuffer@string+1
  6620  0001B2  0E04               	movlw	4
  6621  0001B4  0100               	movlb	0	; () banked
  6622  0001B6  6F73               	movwf	moteApp_addToDataBuffer@bufferLocation& (0+255),b
  6623  0001B8  EC57  F031         	call	_moteApp_addToDataBuffer	;wreg free
  6624  0001BC  0100               	movlb	0	; () banked
  6625  0001BE  6FB1               	movwf	moteRunningProcess@sizeOfUpdate& (0+255),b
  6626                           
  6627                           ; BSR set to: 0
  6628                           ;MOTEapp.c: 509: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  6629  0001C0  EC6D  F034         	call	_moteApp_getTempValue	;wreg free
  6630  0001C4  C063  F071         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  6631  0001C8  C064  F072         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  6632  0001CC  EC46  F02C         	call	_moteApp_convertSensorValue	;wreg free
  6633  0001D0  C071  F0C7         	movff	?_moteApp_convertSensorValue,_temperature
  6634  0001D4  C072  F0C8         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  6635                           
  6636                           ;MOTEapp.c: 510: temperature = ADC_TempConversion(temperature);
  6637  0001D8  0100               	movlb	0	; () banked
  6638  0001DA  51C7               	movf	_temperature& (0+255),w,b
  6639  0001DC  ECEC  F026         	call	_ADC_TempConversion
  6640  0001E0  0100               	movlb	0	; () banked
  6641  0001E2  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  6642  0001E4  0100               	movlb	0	; () banked
  6643  0001E6  51AF               	movf	??_moteRunningProcess& (0+255),w,b
  6644  0001E8  0100               	movlb	0	; () banked
  6645  0001EA  6FC7               	movwf	_temperature& (0+255),b
  6646  0001EC  6BC8               	clrf	(_temperature+1)& (0+255),b
  6647                           
  6648                           ; BSR set to: 0
  6649                           ;MOTEapp.c: 511: moteApp_add8bToDataBuffer(temperature, 4 + moteApp_lightStringSize() + 
      +                          1);
  6650  0001EE  EC63  F039         	call	_moteApp_lightStringSize	;wreg free
  6651  0001F2  0F05               	addlw	5
  6652  0001F4  0100               	movlb	0	; () banked
  6653  0001F6  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6654  0001F8  0100               	movlb	0	; () banked
  6655  0001FA  51C7               	movf	_temperature& (0+255),w,b
  6656  0001FC  EC09  F02B         	call	_moteApp_add8bToDataBuffer
  6657                           
  6658                           ;MOTEapp.c: 514: sleepTicker = 0;
  6659  000200  0E00               	movlw	0
  6660  000202  0100               	movlb	0	; () banked
  6661  000204  6FE3               	movwf	_sleepTicker& (0+255),b
  6662                           
  6663                           ; BSR set to: 0
  6664                           ;MOTEapp.c: 515: oled_clear();
  6665  000206  ECA6  F038         	call	_oled_clear	;wreg free
  6666                           
  6667                           ;MOTEapp.c: 516: oled_putString("Send Periodic Tx",0,0);
  6668  00020A  0E31               	movlw	low STR_71
  6669  00020C  0100               	movlb	0	; () banked
  6670  00020E  6F71               	movwf	oled_putString@string& (0+255),b
  6671  000210  0E7C               	movlw	high STR_71
  6672  000212  0100               	movlb	0	; () banked
  6673  000214  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6674  000216  0E00               	movlw	0
  6675  000218  0100               	movlb	0	; () banked
  6676  00021A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6677  00021C  0E00               	movlw	0
  6678  00021E  0100               	movlb	0	; () banked
  6679  000220  6F74               	movwf	oled_putString@start_page& (0+255),b
  6680  000222  EC8D  F030         	call	_oled_putString	;wreg free
  6681                           
  6682                           ;MOTEapp.c: 517: oled_putString("On Port #: ",0,1);
  6683  000226  0E34               	movlw	low STR_72
  6684  000228  0100               	movlb	0	; () banked
  6685  00022A  6F71               	movwf	oled_putString@string& (0+255),b
  6686  00022C  0E7E               	movlw	high STR_72
  6687  00022E  0100               	movlb	0	; () banked
  6688  000230  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6689  000232  0E00               	movlw	0
  6690  000234  0100               	movlb	0	; () banked
  6691  000236  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6692  000238  0E01               	movlw	1
  6693  00023A  0100               	movlb	0	; () banked
  6694  00023C  6F74               	movwf	oled_putString@start_page& (0+255),b
  6695  00023E  EC8D  F030         	call	_oled_putString	;wreg free
  6696                           
  6697                           ;MOTEapp.c: 518: oled_putString("L:       T: ",0,2);
  6698  000242  0E72               	movlw	low STR_73
  6699  000244  0100               	movlb	0	; () banked
  6700  000246  6F71               	movwf	oled_putString@string& (0+255),b
  6701  000248  0E7D               	movlw	high STR_73
  6702  00024A  0100               	movlb	0	; () banked
  6703  00024C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6704  00024E  0E00               	movlw	0
  6705  000250  0100               	movlb	0	; () banked
  6706  000252  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6707  000254  0E02               	movlw	2
  6708  000256  0100               	movlb	0	; () banked
  6709  000258  6F74               	movwf	oled_putString@start_page& (0+255),b
  6710  00025A  EC8D  F030         	call	_oled_putString	;wreg free
  6711                           
  6712                           ;MOTEapp.c: 519: oled_putString(moteApp_getLightString(), 3, 2);
  6713  00025E  EC34  F039         	call	_moteApp_getLightString	;wreg free
  6714  000262  C060  F071         	movff	?_moteApp_getLightString,oled_putString@string
  6715  000266  C061  F072         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  6716  00026A  0E03               	movlw	3
  6717  00026C  0100               	movlb	0	; () banked
  6718  00026E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6719  000270  0E02               	movlw	2
  6720  000272  0100               	movlb	0	; () banked
  6721  000274  6F74               	movwf	oled_putString@start_page& (0+255),b
  6722  000276  EC8D  F030         	call	_oled_putString	;wreg free
  6723                           
  6724                           ;MOTEapp.c: 520: oled_putint8(temperature,11,2);
  6725  00027A  0E0B               	movlw	11
  6726  00027C  0100               	movlb	0	; () banked
  6727  00027E  6F76               	movwf	oled_putint8@station_dot& (0+255),b
  6728  000280  0E02               	movlw	2
  6729  000282  0100               	movlb	0	; () banked
  6730  000284  6F77               	movwf	oled_putint8@start_page& (0+255),b
  6731  000286  0100               	movlb	0	; () banked
  6732  000288  51C7               	movf	_temperature& (0+255),w,b
  6733  00028A  EC9A  F02A         	call	_oled_putint8
  6734                           
  6735                           ;MOTEapp.c: 522: randomPortNum = TMR2_ReadTimer();
  6736  00028E  EC43  F039         	call	_TMR2_ReadTimer	;wreg free
  6737  000292  0100               	movlb	0	; () banked
  6738  000294  6FE7               	movwf	_randomPortNum& (0+255),b
  6739                           
  6740                           ; BSR set to: 0
  6741                           ;MOTEapp.c: 524: if (!randomPortNum)
  6742  000296  0100               	movlb	0	; () banked
  6743  000298  51E7               	movf	_randomPortNum& (0+255),w,b
  6744  00029A  0100               	movlb	0	; () banked
  6745  00029C  A4D8               	btfss	status,2,c
  6746  00029E  D002               	goto	l13935
  6747                           
  6748                           ; BSR set to: 0
  6749                           ;MOTEapp.c: 525: randomPortNum = 5;
  6750  0002A0  0E05               	movlw	5
  6751  0002A2  D009               	goto	L3
  6752  0002A4                     l13935:
  6753                           
  6754                           ; BSR set to: 0
  6755                           ;MOTEapp.c: 526: else if (randomPortNum > 223)
  6756  0002A4  0EDF               	movlw	223
  6757  0002A6  0100               	movlb	0	; () banked
  6758  0002A8  65E7               	cpfsgt	_randomPortNum& (0+255),b
  6759  0002AA  D008               	goto	l13939
  6760  0002AC  D001               	goto	l13937
  6761  0002AE  D006               	goto	l13939
  6762  0002B0                     l13937:
  6763                           
  6764                           ; BSR set to: 0
  6765                           ;MOTEapp.c: 527: randomPortNum = randomPortNum - 50;
  6766  0002B0  0100               	movlb	0	; () banked
  6767  0002B2  51E7               	movf	_randomPortNum& (0+255),w,b
  6768  0002B4  0FCE               	addlw	206
  6769  0002B6                     L3:
  6770  0002B6  0100               	movlb	0	; () banked
  6771  0002B8  6FE7               	movwf	_randomPortNum& (0+255),b
  6772                           
  6773                           ; BSR set to: 0
  6774  0002BA  D000               	goto	l13939
  6775  0002BC                     l13939:
  6776                           
  6777                           ; BSR set to: 0
  6778                           ;MOTEapp.c: 529: oled_putUint8(randomPortNum,10,1);
  6779  0002BC  0E0A               	movlw	10
  6780  0002BE  0100               	movlb	0	; () banked
  6781  0002C0  6F76               	movwf	oled_putUint8@station_dot& (0+255),b
  6782  0002C2  0E01               	movlw	1
  6783  0002C4  0100               	movlb	0	; () banked
  6784  0002C6  6F77               	movwf	oled_putUint8@start_page& (0+255),b
  6785  0002C8  0100               	movlb	0	; () banked
  6786  0002CA  51E7               	movf	_randomPortNum& (0+255),w,b
  6787  0002CC  EC0C  F02E         	call	_oled_putUint8
  6788                           
  6789                           ;MOTEapp.c: 531: moteApp_add8bToDataBuffer(randomPortNum, 0);
  6790  0002D0  0E00               	movlw	0
  6791  0002D2  0100               	movlb	0	; () banked
  6792  0002D4  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6793  0002D6  0100               	movlb	0	; () banked
  6794  0002D8  51E7               	movf	_randomPortNum& (0+255),w,b
  6795  0002DA  EC09  F02B         	call	_moteApp_add8bToDataBuffer
  6796                           
  6797                           ;MOTEapp.c: 532: dataBuffer[3] = 0x20;
  6798  0002DE  0E20               	movlw	32
  6799  0002E0  0101               	movlb	1	; () banked
  6800  0002E2  6FC0               	movwf	(_dataBuffer+3)& (0+255),b
  6801                           
  6802                           ; BSR set to: 1
  6803                           ;MOTEapp.c: 533: __nop();
  6804  0002E4  F000               	nop	
  6805                           
  6806                           ;MOTEapp.c: 534: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  6807  0002E6  0E2D               	movlw	low STR_74
  6808  0002E8  0100               	movlb	0	; () banked
  6809  0002EA  6F61               	movwf	sendDataCommand@string& (0+255),b
  6810  0002EC  0E7D               	movlw	high STR_74
  6811  0002EE  0100               	movlb	0	; () banked
  6812  0002F0  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  6813  0002F2  0EBD               	movlw	low _dataBuffer
  6814  0002F4  0100               	movlb	0	; () banked
  6815  0002F6  6F63               	movwf	sendDataCommand@appData& (0+255),b
  6816  0002F8  0E01               	movlw	high _dataBuffer
  6817  0002FA  0100               	movlb	0	; () banked
  6818  0002FC  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  6819  0002FE  0E0C               	movlw	12
  6820  000300  0100               	movlb	0	; () banked
  6821  000302  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  6822  000304  EC7D  F024         	call	_sendDataCommand	;wreg free
  6823                           
  6824                           ;MOTEapp.c: 535: secTicker = 10 - (10 / 3);
  6825  000308  0E07               	movlw	7
  6826  00030A  0100               	movlb	0	; () banked
  6827  00030C  6FE5               	movwf	_secTicker& (0+255),b
  6828                           
  6829                           ; BSR set to: 0
  6830                           ;MOTEapp.c: 536: runningState = runningUplinkTransmit;
  6831  00030E  0E08               	movlw	8
  6832  000310  0100               	movlb	0	; () banked
  6833  000312  6FE9               	movwf	_runningState& (0+255),b
  6834                           
  6835                           ;MOTEapp.c: 537: }
  6836  000314  EFC3  F009         	goto	l14421
  6837  000318                     l13953:
  6838                           
  6839                           ; BSR set to: 0
  6840                           ;MOTEapp.c: 538: else
  6841                           ;MOTEapp.c: 539: {
  6842                           ;MOTEapp.c: 540: if (menuTimeout)
  6843  000318  0100               	movlb	0	; () banked
  6844  00031A  51FA               	movf	_menuTimeout& (0+255),w,b
  6845  00031C  B4D8               	btfsc	status,2,c
  6846  00031E  D00A               	goto	l13961
  6847                           
  6848                           ; BSR set to: 0
  6849                           ;MOTEapp.c: 541: {
  6850                           ;MOTEapp.c: 542: sleepTicker++;
  6851  000320  0100               	movlb	0	; () banked
  6852  000322  2BE3               	incf	_sleepTicker& (0+255),f,b
  6853                           
  6854                           ; BSR set to: 0
  6855                           ;MOTEapp.c: 543: runningState = runningSleep;
  6856  000324  0E0F               	movlw	15
  6857  000326  0100               	movlb	0	; () banked
  6858  000328  6FE9               	movwf	_runningState& (0+255),b
  6859                           
  6860                           ; BSR set to: 0
  6861                           ;MOTEapp.c: 544: selectButton = 1;
  6862  00032A  0E01               	movlw	1
  6863  00032C  0100               	movlb	0	; () banked
  6864  00032E  6FAC               	movwf	moteRunningProcess@selectButton& (0+255),b
  6865                           
  6866                           ;MOTEapp.c: 545: } else {
  6867  000330  EFC3  F009         	goto	l14421
  6868  000334                     l13961:
  6869                           
  6870                           ; BSR set to: 0
  6871                           ;MOTEapp.c: 546: sleepTicker = 0;
  6872  000334  0E00               	movlw	0
  6873  000336  0100               	movlb	0	; () banked
  6874  000338  6FE3               	movwf	_sleepTicker& (0+255),b
  6875                           
  6876                           ; BSR set to: 0
  6877                           ;MOTEapp.c: 547: }
  6878                           ;MOTEapp.c: 548: }
  6879                           ;MOTEapp.c: 549: }
  6880                           ;MOTEapp.c: 552: switch(runningState)
  6881                           
  6882                           ; BSR set to: 0
  6883                           
  6884                           ; BSR set to: 0
  6885  00033A  EFC3  F009         	goto	l14421
  6886  00033E                     l466:
  6887  00033E  D7FF               	goto	l466
  6888                           
  6889                           ;MOTEapp.c: 556: break;
  6890  000340  0012               	return	
  6891  000342                     l13963:
  6892                           
  6893                           ;MOTEapp.c: 558: if ( (changeStates) || (selectButton) )
  6894  000342  0100               	movlb	0	; () banked
  6895  000344  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6896  000346  0100               	movlb	0	; () banked
  6897  000348  A4D8               	btfss	status,2,c
  6898  00034A  D007               	goto	l13967
  6899                           
  6900                           ; BSR set to: 0
  6901  00034C  0100               	movlb	0	; () banked
  6902  00034E  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6903  000350  0100               	movlb	0	; () banked
  6904  000352  A4D8               	btfss	status,2,c
  6905  000354  D002               	goto	l13967
  6906  000356  0012               	return	
  6907  000358  D000               	goto	l13967
  6908  00035A                     l13967:
  6909                           
  6910                           ; BSR set to: 0
  6911                           ;MOTEapp.c: 559: {
  6912                           ;MOTEapp.c: 560: oled_clear();
  6913  00035A  ECA6  F038         	call	_oled_clear	;wreg free
  6914                           
  6915                           ;MOTEapp.c: 561: oled_putString("  Issue Uplink  ",0,0);
  6916  00035E  0E21               	movlw	low STR_75
  6917  000360  0100               	movlb	0	; () banked
  6918  000362  6F71               	movwf	oled_putString@string& (0+255),b
  6919  000364  0E7B               	movlw	high STR_75
  6920  000366  0100               	movlb	0	; () banked
  6921  000368  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6922  00036A  0E00               	movlw	0
  6923  00036C  0100               	movlb	0	; () banked
  6924  00036E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6925  000370  0E00               	movlw	0
  6926  000372  0100               	movlb	0	; () banked
  6927  000374  6F74               	movwf	oled_putString@start_page& (0+255),b
  6928  000376  EC8D  F030         	call	_oled_putString	;wreg free
  6929                           
  6930                           ;MOTEapp.c: 562: oled_putString(" LoRaWAN Packet ",0,1);
  6931  00037A  0E87               	movlw	low STR_76
  6932  00037C  0100               	movlb	0	; () banked
  6933  00037E  6F71               	movwf	oled_putString@string& (0+255),b
  6934  000380  0E7B               	movlw	high STR_76
  6935  000382  0100               	movlb	0	; () banked
  6936  000384  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6937  000386  0E00               	movlw	0
  6938  000388  0100               	movlb	0	; () banked
  6939  00038A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6940  00038C  0E01               	movlw	1
  6941  00038E  0100               	movlb	0	; () banked
  6942  000390  6F74               	movwf	oled_putString@start_page& (0+255),b
  6943  000392  EC8D  F030         	call	_oled_putString	;wreg free
  6944                           
  6945                           ;MOTEapp.c: 563: oled_putString("(NAV)    (SEL) ",0,3);
  6946  000396  0E83               	movlw	low STR_77
  6947  000398  0100               	movlb	0	; () banked
  6948  00039A  6F71               	movwf	oled_putString@string& (0+255),b
  6949  00039C  0E7C               	movlw	high STR_77
  6950  00039E  0100               	movlb	0	; () banked
  6951  0003A0  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6952  0003A2  0E00               	movlw	0
  6953  0003A4  0100               	movlb	0	; () banked
  6954  0003A6  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6955  0003A8  0E03               	movlw	3
  6956  0003AA  0100               	movlb	0	; () banked
  6957  0003AC  6F74               	movwf	oled_putString@start_page& (0+255),b
  6958  0003AE  EC8D  F030         	call	_oled_putString	;wreg free
  6959                           
  6960                           ;MOTEapp.c: 564: runningState = runningUplink;
  6961  0003B2  0E06               	movlw	6
  6962  0003B4  0100               	movlb	0	; () banked
  6963  0003B6  6FE9               	movwf	_runningState& (0+255),b
  6964                           
  6965                           ; BSR set to: 0
  6966                           ;MOTEapp.c: 565: }
  6967                           ;MOTEapp.c: 566: break;
  6968  0003B8  0012               	return	
  6969  0003BA                     l13977:
  6970                           
  6971                           ; BSR set to: 0
  6972                           ;MOTEapp.c: 568: if (changeStates)
  6973  0003BA  0100               	movlb	0	; () banked
  6974  0003BC  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6975  0003BE  0100               	movlb	0	; () banked
  6976  0003C0  B4D8               	btfsc	status,2,c
  6977  0003C2  D030               	goto	l13989
  6978                           
  6979                           ; BSR set to: 0
  6980                           ;MOTEapp.c: 569: {
  6981                           ;MOTEapp.c: 570: oled_clear();
  6982  0003C4  ECA6  F038         	call	_oled_clear	;wreg free
  6983                           
  6984                           ;MOTEapp.c: 571: oled_putString(" View Downlink  ",0,0);
  6985  0003C8  0E10               	movlw	low STR_78
  6986  0003CA  0100               	movlb	0	; () banked
  6987  0003CC  6F71               	movwf	oled_putString@string& (0+255),b
  6988  0003CE  0E7B               	movlw	high STR_78
  6989  0003D0  0100               	movlb	0	; () banked
  6990  0003D2  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6991  0003D4  0E00               	movlw	0
  6992  0003D6  0100               	movlb	0	; () banked
  6993  0003D8  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6994  0003DA  0E00               	movlw	0
  6995  0003DC  0100               	movlb	0	; () banked
  6996  0003DE  6F74               	movwf	oled_putString@start_page& (0+255),b
  6997  0003E0  EC8D  F030         	call	_oled_putString	;wreg free
  6998                           
  6999                           ;MOTEapp.c: 572: oled_putString("  Last Message  ",0,1);
  7000  0003E4  0EFF               	movlw	low STR_79
  7001  0003E6  0100               	movlb	0	; () banked
  7002  0003E8  6F71               	movwf	oled_putString@string& (0+255),b
  7003  0003EA  0E7A               	movlw	high STR_79
  7004  0003EC  0100               	movlb	0	; () banked
  7005  0003EE  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7006  0003F0  0E00               	movlw	0
  7007  0003F2  0100               	movlb	0	; () banked
  7008  0003F4  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7009  0003F6  0E01               	movlw	1
  7010  0003F8  0100               	movlb	0	; () banked
  7011  0003FA  6F74               	movwf	oled_putString@start_page& (0+255),b
  7012  0003FC  EC8D  F030         	call	_oled_putString	;wreg free
  7013                           
  7014                           ;MOTEapp.c: 573: oled_putString("(NAV)    (SEL) ",0,3);
  7015  000400  0E83               	movlw	low STR_77
  7016  000402  0100               	movlb	0	; () banked
  7017  000404  6F71               	movwf	oled_putString@string& (0+255),b
  7018  000406  0E7C               	movlw	high STR_77
  7019  000408  0100               	movlb	0	; () banked
  7020  00040A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7021  00040C  0E00               	movlw	0
  7022  00040E  0100               	movlb	0	; () banked
  7023  000410  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7024  000412  0E03               	movlw	3
  7025  000414  0100               	movlb	0	; () banked
  7026  000416  6F74               	movwf	oled_putString@start_page& (0+255),b
  7027  000418  EC8D  F030         	call	_oled_putString	;wreg free
  7028                           
  7029                           ;MOTEapp.c: 574: runningState = runningDownlink;
  7030  00041C  0E0A               	movlw	10
  7031  00041E  0100               	movlb	0	; () banked
  7032  000420  6FE9               	movwf	_runningState& (0+255),b
  7033                           
  7034                           ;MOTEapp.c: 575: }
  7035  000422  0012               	return	
  7036  000424                     l13989:
  7037                           
  7038                           ; BSR set to: 0
  7039                           ;MOTEapp.c: 576: else if (selectButton)
  7040  000424  0100               	movlb	0	; () banked
  7041  000426  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7042  000428  0100               	movlb	0	; () banked
  7043  00042A  B4D8               	btfsc	status,2,c
  7044  00042C  0012               	return	
  7045                           
  7046                           ; BSR set to: 0
  7047                           ;MOTEapp.c: 577: {
  7048                           ;MOTEapp.c: 578: sleepTicker = 0;
  7049  00042E  0E00               	movlw	0
  7050  000430  0100               	movlb	0	; () banked
  7051  000432  6FE3               	movwf	_sleepTicker& (0+255),b
  7052                           
  7053                           ; BSR set to: 0
  7054                           ;MOTEapp.c: 580: oled_clear();
  7055  000434  ECA6  F038         	call	_oled_clear	;wreg free
  7056                           
  7057                           ;MOTEapp.c: 581: oled_putString("Uplink Pckt Type",0,0);
  7058  000438  0EDC               	movlw	low STR_81
  7059  00043A  0100               	movlb	0	; () banked
  7060  00043C  6F71               	movwf	oled_putString@string& (0+255),b
  7061  00043E  0E7B               	movlw	high STR_81
  7062  000440  0100               	movlb	0	; () banked
  7063  000442  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7064  000444  0E00               	movlw	0
  7065  000446  0100               	movlb	0	; () banked
  7066  000448  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7067  00044A  0E00               	movlw	0
  7068  00044C  0100               	movlb	0	; () banked
  7069  00044E  6F74               	movwf	oled_putString@start_page& (0+255),b
  7070  000450  EC8D  F030         	call	_oled_putString	;wreg free
  7071                           
  7072                           ;MOTEapp.c: 582: oled_putString("Throu Port# ",0,1);
  7073  000454  0E65               	movlw	low STR_82
  7074  000456  0100               	movlb	0	; () banked
  7075  000458  6F71               	movwf	oled_putString@string& (0+255),b
  7076  00045A  0E7D               	movlw	high STR_82
  7077  00045C  0100               	movlb	0	; () banked
  7078  00045E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7079  000460  0E00               	movlw	0
  7080  000462  0100               	movlb	0	; () banked
  7081  000464  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7082  000466  0E01               	movlw	1
  7083  000468  0100               	movlb	0	; () banked
  7084  00046A  6F74               	movwf	oled_putString@start_page& (0+255),b
  7085  00046C  EC8D  F030         	call	_oled_putString	;wreg free
  7086                           
  7087                           ;MOTEapp.c: 584: oled_putString("(UNCNF)    (CNF) ",0,3);
  7088  000470  0EA9               	movlw	low STR_83
  7089  000472  0100               	movlb	0	; () banked
  7090  000474  6F71               	movwf	oled_putString@string& (0+255),b
  7091  000476  0E7A               	movlw	high STR_83
  7092  000478  0100               	movlb	0	; () banked
  7093  00047A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7094  00047C  0E00               	movlw	0
  7095  00047E  0100               	movlb	0	; () banked
  7096  000480  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7097  000482  0E03               	movlw	3
  7098  000484  0100               	movlb	0	; () banked
  7099  000486  6F74               	movwf	oled_putString@start_page& (0+255),b
  7100  000488  EC8D  F030         	call	_oled_putString	;wreg free
  7101                           
  7102                           ;MOTEapp.c: 586: moteApp_clearBuffers();
  7103  00048C  EC79  F025         	call	_moteApp_clearBuffers	;wreg free
  7104                           
  7105                           ;MOTEapp.c: 587: randomPortNum = TMR2_ReadTimer();
  7106  000490  EC43  F039         	call	_TMR2_ReadTimer	;wreg free
  7107  000494  0100               	movlb	0	; () banked
  7108  000496  6FE7               	movwf	_randomPortNum& (0+255),b
  7109                           
  7110                           ; BSR set to: 0
  7111                           ;MOTEapp.c: 589: if (!randomPortNum)
  7112  000498  0100               	movlb	0	; () banked
  7113  00049A  51E7               	movf	_randomPortNum& (0+255),w,b
  7114  00049C  0100               	movlb	0	; () banked
  7115  00049E  A4D8               	btfss	status,2,c
  7116  0004A0  D002               	goto	l14009
  7117                           
  7118                           ; BSR set to: 0
  7119                           ;MOTEapp.c: 590: randomPortNum = 5;
  7120  0004A2  0E05               	movlw	5
  7121  0004A4  D009               	goto	L4
  7122  0004A6                     l14009:
  7123                           
  7124                           ; BSR set to: 0
  7125                           ;MOTEapp.c: 591: else if (randomPortNum > 223)
  7126  0004A6  0EDF               	movlw	223
  7127  0004A8  0100               	movlb	0	; () banked
  7128  0004AA  65E7               	cpfsgt	_randomPortNum& (0+255),b
  7129  0004AC  D008               	goto	l14013
  7130  0004AE  D001               	goto	l14011
  7131  0004B0  D006               	goto	l14013
  7132  0004B2                     l14011:
  7133                           
  7134                           ; BSR set to: 0
  7135                           ;MOTEapp.c: 592: randomPortNum = randomPortNum - 50;
  7136  0004B2  0100               	movlb	0	; () banked
  7137  0004B4  51E7               	movf	_randomPortNum& (0+255),w,b
  7138  0004B6  0FCE               	addlw	206
  7139  0004B8                     L4:
  7140  0004B8  0100               	movlb	0	; () banked
  7141  0004BA  6FE7               	movwf	_randomPortNum& (0+255),b
  7142                           
  7143                           ; BSR set to: 0
  7144  0004BC  D000               	goto	l14013
  7145  0004BE                     l14013:
  7146                           
  7147                           ; BSR set to: 0
  7148                           ;MOTEapp.c: 593: oled_putUint8(randomPortNum,12,1);
  7149  0004BE  0E0C               	movlw	12
  7150  0004C0  0100               	movlb	0	; () banked
  7151  0004C2  6F76               	movwf	oled_putUint8@station_dot& (0+255),b
  7152  0004C4  0E01               	movlw	1
  7153  0004C6  0100               	movlb	0	; () banked
  7154  0004C8  6F77               	movwf	oled_putUint8@start_page& (0+255),b
  7155  0004CA  0100               	movlb	0	; () banked
  7156  0004CC  51E7               	movf	_randomPortNum& (0+255),w,b
  7157  0004CE  EC0C  F02E         	call	_oled_putUint8
  7158                           
  7159                           ;MOTEapp.c: 594: moteApp_add8bToDataBuffer(randomPortNum, 0);
  7160  0004D2  0E00               	movlw	0
  7161  0004D4  0100               	movlb	0	; () banked
  7162  0004D6  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7163  0004D8  0100               	movlb	0	; () banked
  7164  0004DA  51E7               	movf	_randomPortNum& (0+255),w,b
  7165  0004DC  EC09  F02B         	call	_moteApp_add8bToDataBuffer
  7166                           
  7167                           ;MOTEapp.c: 595: dataBuffer[3] = 0x20;
  7168  0004E0  0E20               	movlw	32
  7169  0004E2  0101               	movlb	1	; () banked
  7170  0004E4  6FC0               	movwf	(_dataBuffer+3)& (0+255),b
  7171                           
  7172                           ; BSR set to: 1
  7173                           ;MOTEapp.c: 597: light = 0;
  7174  0004E6  0E00               	movlw	0
  7175  0004E8  0101               	movlb	1	; () banked
  7176  0004EA  6F59               	movwf	(_light+1)& (0+255),b
  7177  0004EC  0E00               	movlw	0
  7178  0004EE  6F58               	movwf	_light& (0+255),b
  7179                           
  7180                           ; BSR set to: 1
  7181                           ;MOTEapp.c: 598: temperature = 0;
  7182  0004F0  0E00               	movlw	0
  7183  0004F2  0100               	movlb	0	; () banked
  7184  0004F4  6FC8               	movwf	(_temperature+1)& (0+255),b
  7185  0004F6  0E00               	movlw	0
  7186  0004F8  6FC7               	movwf	_temperature& (0+255),b
  7187                           
  7188                           ; BSR set to: 0
  7189                           ;MOTEapp.c: 599: __nop();
  7190  0004FA  F000               	nop	
  7191                           
  7192                           ;MOTEapp.c: 600: moteApp_setSensorsInput();
  7193  0004FC  EC60  F02E         	call	_moteApp_setSensorsInput	;wreg free
  7194                           
  7195                           ;MOTEapp.c: 601: moteApp_delayms(500);
  7196  000500  0E01               	movlw	1
  7197  000502  0100               	movlb	0	; () banked
  7198  000504  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  7199  000506  0EF4               	movlw	244
  7200  000508  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7201  00050A  EC91  F036         	call	_moteApp_delayms	;wreg free
  7202                           
  7203                           ;MOTEapp.c: 602: uint8_t sizeOfUpdate = 0;
  7204  00050E  0E00               	movlw	0
  7205  000510  0100               	movlb	0	; () banked
  7206  000512  6FB2               	movwf	moteRunningProcess@sizeOfUpdate_1493& (0+255),b
  7207                           
  7208                           ; BSR set to: 0
  7209                           ;MOTEapp.c: 603: light = moteApp_convertSensorValue(moteApp_getLightValue());
  7210  000514  EC34  F033         	call	_moteApp_getLightValue	;wreg free
  7211  000518  C06D  F071         	movff	?_moteApp_getLightValue,moteApp_convertSensorValue@string
  7212  00051C  C06E  F072         	movff	?_moteApp_getLightValue+1,moteApp_convertSensorValue@string+1
  7213  000520  EC46  F02C         	call	_moteApp_convertSensorValue	;wreg free
  7214  000524  C071  F158         	movff	?_moteApp_convertSensorValue,_light
  7215  000528  C072  F159         	movff	?_moteApp_convertSensorValue+1,_light+1
  7216                           
  7217                           ;MOTEapp.c: 604: sizeOfUpdate = moteApp_addToDataBuffer(moteApp_getLightValue(), 4);
  7218  00052C  EC34  F033         	call	_moteApp_getLightValue	;wreg free
  7219  000530  C06D  F071         	movff	?_moteApp_getLightValue,moteApp_addToDataBuffer@string
  7220  000534  C06E  F072         	movff	?_moteApp_getLightValue+1,moteApp_addToDataBuffer@string+1
  7221  000538  0E04               	movlw	4
  7222  00053A  0100               	movlb	0	; () banked
  7223  00053C  6F73               	movwf	moteApp_addToDataBuffer@bufferLocation& (0+255),b
  7224  00053E  EC57  F031         	call	_moteApp_addToDataBuffer	;wreg free
  7225  000542  0100               	movlb	0	; () banked
  7226  000544  6FB2               	movwf	moteRunningProcess@sizeOfUpdate_1493& (0+255),b
  7227                           
  7228                           ; BSR set to: 0
  7229                           ;MOTEapp.c: 605: __nop();
  7230  000546  F000               	nop	
  7231                           
  7232                           ;MOTEapp.c: 606: __nop();
  7233  000548  F000               	nop	
  7234                           
  7235                           ;MOTEapp.c: 607: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  7236  00054A  EC6D  F034         	call	_moteApp_getTempValue	;wreg free
  7237  00054E  C063  F071         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  7238  000552  C064  F072         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  7239  000556  EC46  F02C         	call	_moteApp_convertSensorValue	;wreg free
  7240  00055A  C071  F0C7         	movff	?_moteApp_convertSensorValue,_temperature
  7241  00055E  C072  F0C8         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  7242                           
  7243                           ;MOTEapp.c: 608: temperature = ADC_TempConversion(temperature);
  7244  000562  0100               	movlb	0	; () banked
  7245  000564  51C7               	movf	_temperature& (0+255),w,b
  7246  000566  ECEC  F026         	call	_ADC_TempConversion
  7247  00056A  0100               	movlb	0	; () banked
  7248  00056C  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  7249  00056E  0100               	movlb	0	; () banked
  7250  000570  51AF               	movf	??_moteRunningProcess& (0+255),w,b
  7251  000572  0100               	movlb	0	; () banked
  7252  000574  6FC7               	movwf	_temperature& (0+255),b
  7253  000576  6BC8               	clrf	(_temperature+1)& (0+255),b
  7254                           
  7255                           ; BSR set to: 0
  7256                           ;MOTEapp.c: 609: moteApp_add8bToDataBuffer(temperature, 4 + moteApp_lightStringSize() + 
      +                          1);
  7257  000578  EC63  F039         	call	_moteApp_lightStringSize	;wreg free
  7258  00057C  0F05               	addlw	5
  7259  00057E  0100               	movlb	0	; () banked
  7260  000580  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7261  000582  0100               	movlb	0	; () banked
  7262  000584  51C7               	movf	_temperature& (0+255),w,b
  7263  000586  EC09  F02B         	call	_moteApp_add8bToDataBuffer
  7264                           
  7265                           ;MOTEapp.c: 610: __nop();
  7266  00058A  F000               	nop	
  7267                           
  7268                           ;MOTEapp.c: 612: runningState = runningUplinkSelect;
  7269  00058C  0E07               	movlw	7
  7270  00058E  0100               	movlb	0	; () banked
  7271  000590  6FE9               	movwf	_runningState& (0+255),b
  7272                           
  7273                           ; BSR set to: 0
  7274                           ;MOTEapp.c: 613: }
  7275                           ;MOTEapp.c: 614: break;
  7276                           
  7277                           ; BSR set to: 0
  7278  000592  0012               	return	
  7279  000594                     l14049:
  7280                           
  7281                           ; BSR set to: 0
  7282                           ;MOTEapp.c: 616: if (changeStates)
  7283  000594  0100               	movlb	0	; () banked
  7284  000596  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7285  000598  0100               	movlb	0	; () banked
  7286  00059A  B4D8               	btfsc	status,2,c
  7287  00059C  D012               	goto	l14053
  7288                           
  7289                           ; BSR set to: 0
  7290                           ;MOTEapp.c: 617: {
  7291                           ;MOTEapp.c: 618: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  7292  00059E  0E2D               	movlw	low STR_74
  7293  0005A0  0100               	movlb	0	; () banked
  7294  0005A2  6F61               	movwf	sendDataCommand@string& (0+255),b
  7295  0005A4  0E7D               	movlw	high STR_74
  7296  0005A6  0100               	movlb	0	; () banked
  7297  0005A8  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  7298  0005AA  0EBD               	movlw	low _dataBuffer
  7299  0005AC  0100               	movlb	0	; () banked
  7300  0005AE  6F63               	movwf	sendDataCommand@appData& (0+255),b
  7301  0005B0  0E01               	movlw	high _dataBuffer
  7302  0005B2  0100               	movlb	0	; () banked
  7303  0005B4  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  7304  0005B6  0E0C               	movlw	12
  7305  0005B8  0100               	movlb	0	; () banked
  7306  0005BA  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  7307  0005BC  EC7D  F024         	call	_sendDataCommand	;wreg free
  7308  0005C0  D000               	goto	l14053
  7309  0005C2                     l14053:
  7310                           
  7311                           ;MOTEapp.c: 620: }
  7312                           ;MOTEapp.c: 621: if (selectButton)
  7313  0005C2  0100               	movlb	0	; () banked
  7314  0005C4  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7315  0005C6  0100               	movlb	0	; () banked
  7316  0005C8  B4D8               	btfsc	status,2,c
  7317  0005CA  D012               	goto	l14057
  7318                           
  7319                           ; BSR set to: 0
  7320                           ;MOTEapp.c: 622: {
  7321                           ;MOTEapp.c: 623: sendDataCommand("mac tx cnf ", dataBuffer, 12);
  7322  0005CC  0E64               	movlw	low STR_85
  7323  0005CE  0100               	movlb	0	; () banked
  7324  0005D0  6F61               	movwf	sendDataCommand@string& (0+255),b
  7325  0005D2  0E7E               	movlw	high STR_85
  7326  0005D4  0100               	movlb	0	; () banked
  7327  0005D6  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  7328  0005D8  0EBD               	movlw	low _dataBuffer
  7329  0005DA  0100               	movlb	0	; () banked
  7330  0005DC  6F63               	movwf	sendDataCommand@appData& (0+255),b
  7331  0005DE  0E01               	movlw	high _dataBuffer
  7332  0005E0  0100               	movlb	0	; () banked
  7333  0005E2  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  7334  0005E4  0E0C               	movlw	12
  7335  0005E6  0100               	movlb	0	; () banked
  7336  0005E8  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  7337  0005EA  EC7D  F024         	call	_sendDataCommand	;wreg free
  7338  0005EE  D000               	goto	l14057
  7339  0005F0                     l14057:
  7340                           
  7341                           ;MOTEapp.c: 624: }
  7342                           ;MOTEapp.c: 626: if ( (changeStates) || (selectButton) )
  7343  0005F0  0100               	movlb	0	; () banked
  7344  0005F2  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7345  0005F4  0100               	movlb	0	; () banked
  7346  0005F6  A4D8               	btfss	status,2,c
  7347  0005F8  D007               	goto	l14061
  7348                           
  7349                           ; BSR set to: 0
  7350  0005FA  0100               	movlb	0	; () banked
  7351  0005FC  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7352  0005FE  0100               	movlb	0	; () banked
  7353  000600  A4D8               	btfss	status,2,c
  7354  000602  D002               	goto	l14061
  7355  000604  0012               	return	
  7356  000606  D000               	goto	l14061
  7357  000608                     l14061:
  7358                           
  7359                           ; BSR set to: 0
  7360                           ;MOTEapp.c: 627: {
  7361                           ;MOTEapp.c: 628: oled_clear();
  7362  000608  ECA6  F038         	call	_oled_clear	;wreg free
  7363                           
  7364                           ;MOTEapp.c: 629: oled_putString("Sent Data: ",0,0);
  7365  00060C  0E4C               	movlw	low STR_86
  7366  00060E  0100               	movlb	0	; () banked
  7367  000610  6F71               	movwf	oled_putString@string& (0+255),b
  7368  000612  0E7E               	movlw	high STR_86
  7369  000614  0100               	movlb	0	; () banked
  7370  000616  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7371  000618  0E00               	movlw	0
  7372  00061A  0100               	movlb	0	; () banked
  7373  00061C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7374  00061E  0E00               	movlw	0
  7375  000620  0100               	movlb	0	; () banked
  7376  000622  6F74               	movwf	oled_putString@start_page& (0+255),b
  7377  000624  EC8D  F030         	call	_oled_putString	;wreg free
  7378                           
  7379                           ;MOTEapp.c: 630: oled_putString("Tx Port #: ",0,1);
  7380  000628  0E40               	movlw	low STR_87
  7381  00062A  0100               	movlb	0	; () banked
  7382  00062C  6F71               	movwf	oled_putString@string& (0+255),b
  7383  00062E  0E7E               	movlw	high STR_87
  7384  000630  0100               	movlb	0	; () banked
  7385  000632  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7386  000634  0E00               	movlw	0
  7387  000636  0100               	movlb	0	; () banked
  7388  000638  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7389  00063A  0E01               	movlw	1
  7390  00063C  0100               	movlb	0	; () banked
  7391  00063E  6F74               	movwf	oled_putString@start_page& (0+255),b
  7392  000640  EC8D  F030         	call	_oled_putString	;wreg free
  7393                           
  7394                           ;MOTEapp.c: 631: oled_putUint8(randomPortNum,12,1);
  7395  000644  0E0C               	movlw	12
  7396  000646  0100               	movlb	0	; () banked
  7397  000648  6F76               	movwf	oled_putUint8@station_dot& (0+255),b
  7398  00064A  0E01               	movlw	1
  7399  00064C  0100               	movlb	0	; () banked
  7400  00064E  6F77               	movwf	oled_putUint8@start_page& (0+255),b
  7401  000650  0100               	movlb	0	; () banked
  7402  000652  51E7               	movf	_randomPortNum& (0+255),w,b
  7403  000654  EC0C  F02E         	call	_oled_putUint8
  7404                           
  7405                           ;MOTEapp.c: 632: oled_putString("L:       T: ",0,2);
  7406  000658  0E72               	movlw	low STR_73
  7407  00065A  0100               	movlb	0	; () banked
  7408  00065C  6F71               	movwf	oled_putString@string& (0+255),b
  7409  00065E  0E7D               	movlw	high STR_73
  7410  000660  0100               	movlb	0	; () banked
  7411  000662  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7412  000664  0E00               	movlw	0
  7413  000666  0100               	movlb	0	; () banked
  7414  000668  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7415  00066A  0E02               	movlw	2
  7416  00066C  0100               	movlb	0	; () banked
  7417  00066E  6F74               	movwf	oled_putString@start_page& (0+255),b
  7418  000670  EC8D  F030         	call	_oled_putString	;wreg free
  7419                           
  7420                           ;MOTEapp.c: 633: oled_putString(moteApp_getLightString(), 3, 2);
  7421  000674  EC34  F039         	call	_moteApp_getLightString	;wreg free
  7422  000678  C060  F071         	movff	?_moteApp_getLightString,oled_putString@string
  7423  00067C  C061  F072         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  7424  000680  0E03               	movlw	3
  7425  000682  0100               	movlb	0	; () banked
  7426  000684  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7427  000686  0E02               	movlw	2
  7428  000688  0100               	movlb	0	; () banked
  7429  00068A  6F74               	movwf	oled_putString@start_page& (0+255),b
  7430  00068C  EC8D  F030         	call	_oled_putString	;wreg free
  7431                           
  7432                           ;MOTEapp.c: 634: oled_putint8(temperature,11,2);
  7433  000690  0E0B               	movlw	11
  7434  000692  0100               	movlb	0	; () banked
  7435  000694  6F76               	movwf	oled_putint8@station_dot& (0+255),b
  7436  000696  0E02               	movlw	2
  7437  000698  0100               	movlb	0	; () banked
  7438  00069A  6F77               	movwf	oled_putint8@start_page& (0+255),b
  7439  00069C  0100               	movlb	0	; () banked
  7440  00069E  51C7               	movf	_temperature& (0+255),w,b
  7441  0006A0  EC9A  F02A         	call	_oled_putint8
  7442                           
  7443                           ;MOTEapp.c: 635: LATAbits.LATA6 = 0;
  7444  0006A4  9C89               	bcf	3977,6,c	;volatile
  7445                           
  7446                           ;MOTEapp.c: 636: runningState = runningUplinkTransmit;
  7447  0006A6  0E08               	movlw	8
  7448  0006A8  0100               	movlb	0	; () banked
  7449  0006AA  6FE9               	movwf	_runningState& (0+255),b
  7450                           
  7451                           ; BSR set to: 0
  7452                           ;MOTEapp.c: 637: }
  7453                           ;MOTEapp.c: 638: break;
  7454  0006AC  0012               	return	
  7455  0006AE                     l14079:
  7456                           
  7457                           ; BSR set to: 0
  7458                           ;MOTEapp.c: 640: if ( messageReady )
  7459  0006AE  0100               	movlb	0	; () banked
  7460  0006B0  51AD               	movf	moteRunningProcess@messageReady& (0+255),w,b
  7461  0006B2  0100               	movlb	0	; () banked
  7462  0006B4  B4D8               	btfsc	status,2,c
  7463  0006B6  D143               	goto	l14145
  7464                           
  7465                           ; BSR set to: 0
  7466                           ;MOTEapp.c: 641: {
  7467                           ;MOTEapp.c: 642: if(strcmp(moduleResonseBuffer, "ok") == 0)
  7468  0006B8  0E5D               	movlw	low _moduleResonseBuffer
  7469  0006BA  0100               	movlb	0	; () banked
  7470  0006BC  6F60               	movwf	strcmp@s1& (0+255),b
  7471  0006BE  0E01               	movlw	high _moduleResonseBuffer
  7472  0006C0  0100               	movlb	0	; () banked
  7473  0006C2  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7474  0006C4  0EF7               	movlw	low STR_44
  7475  0006C6  0100               	movlb	0	; () banked
  7476  0006C8  6F62               	movwf	strcmp@s2& (0+255),b
  7477  0006CA  0E7F               	movlw	high STR_44
  7478  0006CC  0100               	movlb	0	; () banked
  7479  0006CE  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7480  0006D0  ECD5  F033         	call	_strcmp	;wreg free
  7481  0006D4  0100               	movlb	0	; () banked
  7482  0006D6  5160               	movf	?_strcmp& (0+255),w,b
  7483  0006D8  0100               	movlb	0	; () banked
  7484  0006DA  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7485  0006DC  A4D8               	btfss	status,2,c
  7486  0006DE  D005               	goto	l14087
  7487                           
  7488                           ; BSR set to: 0
  7489                           ;MOTEapp.c: 643: {
  7490                           ;MOTEapp.c: 644: LATAbits.LATA6 = 1;
  7491  0006E0  8C89               	bsf	3977,6,c	;volatile
  7492                           
  7493                           ; BSR set to: 0
  7494                           ;MOTEapp.c: 645: runningState = runningUplinkTransmit;
  7495  0006E2  0E08               	movlw	8
  7496  0006E4  0100               	movlb	0	; () banked
  7497  0006E6  6FE9               	movwf	_runningState& (0+255),b
  7498  0006E8  D000               	goto	l14087
  7499  0006EA                     l14087:
  7500                           
  7501                           ; BSR set to: 0
  7502                           ;MOTEapp.c: 646: }
  7503                           ;MOTEapp.c: 647: if(strncmp(moduleResonseBuffer, "mac_rx", 6) == 0)
  7504  0006EA  0E5D               	movlw	low _moduleResonseBuffer
  7505  0006EC  0100               	movlb	0	; () banked
  7506  0006EE  6F60               	movwf	strncmp@s1& (0+255),b
  7507  0006F0  0E01               	movlw	high _moduleResonseBuffer
  7508  0006F2  0100               	movlb	0	; () banked
  7509  0006F4  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7510  0006F6  0EAA               	movlw	low STR_90
  7511  0006F8  0100               	movlb	0	; () banked
  7512  0006FA  6F62               	movwf	strncmp@s2& (0+255),b
  7513  0006FC  0E7F               	movlw	high STR_90
  7514  0006FE  0100               	movlb	0	; () banked
  7515  000700  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7516  000702  0E00               	movlw	0
  7517  000704  0100               	movlb	0	; () banked
  7518  000706  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7519  000708  0E06               	movlw	6
  7520  00070A  6F64               	movwf	strncmp@len& (0+255),b
  7521  00070C  EC02  F02D         	call	_strncmp	;wreg free
  7522  000710  0100               	movlb	0	; () banked
  7523  000712  5160               	movf	?_strncmp& (0+255),w,b
  7524  000714  0100               	movlb	0	; () banked
  7525  000716  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7526  000718  A4D8               	btfss	status,2,c
  7527  00071A  D08E               	goto	l14129
  7528                           
  7529                           ; BSR set to: 0
  7530                           ;MOTEapp.c: 648: {
  7531                           ;MOTEapp.c: 649: uint8_t bufferReadPos = 7;
  7532  00071C  0E07               	movlw	7
  7533  00071E  0100               	movlb	0	; () banked
  7534  000720  6FB4               	movwf	moteRunningProcess@bufferReadPos& (0+255),b
  7535                           
  7536                           ; BSR set to: 0
  7537                           ;MOTEapp.c: 653: responsePortNum[0] = moduleResonseBuffer[bufferReadPos++];
  7538  000722  0100               	movlb	0	; () banked
  7539  000724  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7540  000726  0D01               	mullw	1
  7541  000728  0E5D               	movlw	low _moduleResonseBuffer
  7542  00072A  24F3               	addwf	prodl,w,c
  7543  00072C  6ED9               	movwf	fsr2l,c
  7544  00072E  0E01               	movlw	high _moduleResonseBuffer
  7545  000730  20F4               	addwfc	prodh,w,c
  7546  000732  6EDA               	movwf	fsr2h,c
  7547  000734  50DF               	movf	indf2,w,c
  7548  000736  0101               	movlb	1	; () banked
  7549  000738  6FF0               	movwf	_responsePortNum& (0+255),b
  7550                           
  7551                           ; BSR set to: 1
  7552  00073A  0100               	movlb	0	; () banked
  7553  00073C  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7554                           
  7555                           ; BSR set to: 0
  7556                           ;MOTEapp.c: 654: responsePortNum[1] = moduleResonseBuffer[bufferReadPos++];
  7557  00073E  0100               	movlb	0	; () banked
  7558  000740  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7559  000742  0D01               	mullw	1
  7560  000744  0E5D               	movlw	low _moduleResonseBuffer
  7561  000746  24F3               	addwf	prodl,w,c
  7562  000748  6ED9               	movwf	fsr2l,c
  7563  00074A  0E01               	movlw	high _moduleResonseBuffer
  7564  00074C  20F4               	addwfc	prodh,w,c
  7565  00074E  6EDA               	movwf	fsr2h,c
  7566  000750  50DF               	movf	indf2,w,c
  7567  000752  0101               	movlb	1	; () banked
  7568  000754  6FF1               	movwf	(_responsePortNum+1)& (0+255),b
  7569                           
  7570                           ; BSR set to: 1
  7571  000756  0100               	movlb	0	; () banked
  7572  000758  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7573                           
  7574                           ; BSR set to: 0
  7575                           ;MOTEapp.c: 655: if (responsePortNum[1] != ' ')
  7576  00075A  0E20               	movlw	32
  7577  00075C  0101               	movlb	1	; () banked
  7578  00075E  19F1               	xorwf	(_responsePortNum+1)& (0+255),w,b
  7579  000760  B4D8               	btfsc	status,2,c
  7580  000762  D016               	goto	l14109
  7581                           
  7582                           ; BSR set to: 1
  7583                           ;MOTEapp.c: 656: {
  7584                           ;MOTEapp.c: 657: responsePortNum[2] = moduleResonseBuffer[bufferReadPos++];
  7585  000764  0100               	movlb	0	; () banked
  7586  000766  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7587  000768  0D01               	mullw	1
  7588  00076A  0E5D               	movlw	low _moduleResonseBuffer
  7589  00076C  24F3               	addwf	prodl,w,c
  7590  00076E  6ED9               	movwf	fsr2l,c
  7591  000770  0E01               	movlw	high _moduleResonseBuffer
  7592  000772  20F4               	addwfc	prodh,w,c
  7593  000774  6EDA               	movwf	fsr2h,c
  7594  000776  50DF               	movf	indf2,w,c
  7595  000778  0101               	movlb	1	; () banked
  7596  00077A  6FF2               	movwf	(_responsePortNum+2)& (0+255),b
  7597                           
  7598                           ; BSR set to: 1
  7599  00077C  0100               	movlb	0	; () banked
  7600  00077E  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7601                           
  7602                           ; BSR set to: 0
  7603                           ;MOTEapp.c: 658: if (responsePortNum[2] != ' ')
  7604  000780  0E20               	movlw	32
  7605  000782  0101               	movlb	1	; () banked
  7606  000784  19F2               	xorwf	(_responsePortNum+2)& (0+255),w,b
  7607  000786  B4D8               	btfsc	status,2,c
  7608  000788  D003               	goto	l14109
  7609                           
  7610                           ; BSR set to: 1
  7611                           ;MOTEapp.c: 659: {
  7612                           ;MOTEapp.c: 660: bufferReadPos++;
  7613  00078A  0100               	movlb	0	; () banked
  7614  00078C  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7615                           
  7616                           ; BSR set to: 0
  7617  00078E  D000               	goto	l14109
  7618  000790                     l14109:
  7619                           
  7620                           ;MOTEapp.c: 661: }
  7621                           ;MOTEapp.c: 662: }
  7622                           ;MOTEapp.c: 664: for (uint8_t counter = 0; counter < sizeof(moduleResonseBuffer); counte
      +                          r++)
  7623  000790  0E00               	movlw	0
  7624  000792  0100               	movlb	0	; () banked
  7625  000794  6FB3               	movwf	moteRunningProcess@counter& (0+255),b
  7626  000796                     l14111:
  7627                           
  7628                           ; BSR set to: 0
  7629  000796  0E3F               	movlw	63
  7630  000798  0100               	movlb	0	; () banked
  7631  00079A  65B3               	cpfsgt	moteRunningProcess@counter& (0+255),b
  7632  00079C  D003               	goto	l14115
  7633  00079E  D02D               	goto	l494
  7634  0007A0  D001               	goto	l14115
  7635                           
  7636                           ; BSR set to: 0
  7637  0007A2  D02B               	goto	l494
  7638  0007A4                     l14115:
  7639                           
  7640                           ; BSR set to: 0
  7641                           ;MOTEapp.c: 665: {
  7642                           ;MOTEapp.c: 666: responseData[counter] = moduleResonseBuffer[bufferReadPos];
  7643  0007A4  0100               	movlb	0	; () banked
  7644  0007A6  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7645  0007A8  0D01               	mullw	1
  7646  0007AA  0E5D               	movlw	low _moduleResonseBuffer
  7647  0007AC  24F3               	addwf	prodl,w,c
  7648  0007AE  6ED9               	movwf	fsr2l,c
  7649  0007B0  0E01               	movlw	high _moduleResonseBuffer
  7650  0007B2  20F4               	addwfc	prodh,w,c
  7651  0007B4  6EDA               	movwf	fsr2h,c
  7652  0007B6  0100               	movlb	0	; () banked
  7653  0007B8  51B3               	movf	moteRunningProcess@counter& (0+255),w,b
  7654  0007BA  0D01               	mullw	1
  7655  0007BC  0E9D               	movlw	low _responseData
  7656  0007BE  24F3               	addwf	prodl,w,c
  7657  0007C0  6EE1               	movwf	fsr1l,c
  7658  0007C2  0E01               	movlw	high _responseData
  7659  0007C4  20F4               	addwfc	prodh,w,c
  7660  0007C6  6EE2               	movwf	fsr1h,c
  7661  0007C8  CFDF FFE7          	movff	indf2,indf1
  7662                           
  7663                           ; BSR set to: 0
  7664                           ;MOTEapp.c: 668: if (responseData[counter] != 0x00)
  7665  0007CC  0100               	movlb	0	; () banked
  7666  0007CE  51B3               	movf	moteRunningProcess@counter& (0+255),w,b
  7667  0007D0  0D01               	mullw	1
  7668  0007D2  0E9D               	movlw	low _responseData
  7669  0007D4  24F3               	addwf	prodl,w,c
  7670  0007D6  6ED9               	movwf	fsr2l,c
  7671  0007D8  0E01               	movlw	high _responseData
  7672  0007DA  20F4               	addwfc	prodh,w,c
  7673  0007DC  6EDA               	movwf	fsr2h,c
  7674  0007DE  50DF               	movf	indf2,w,c
  7675  0007E0  B4D8               	btfsc	status,2,c
  7676  0007E2  D003               	goto	l14121
  7677                           
  7678                           ; BSR set to: 0
  7679                           ;MOTEapp.c: 669: {
  7680                           ;MOTEapp.c: 670: bufferReadPos++;
  7681  0007E4  0100               	movlb	0	; () banked
  7682  0007E6  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7683                           
  7684                           ;MOTEapp.c: 671: } else {
  7685  0007E8  D004               	goto	l14123
  7686  0007EA                     l14121:
  7687                           
  7688                           ; BSR set to: 0
  7689                           ;MOTEapp.c: 672: counter = sizeof(moduleResonseBuffer);
  7690  0007EA  0E40               	movlw	64
  7691  0007EC  0100               	movlb	0	; () banked
  7692  0007EE  6FB3               	movwf	moteRunningProcess@counter& (0+255),b
  7693  0007F0  D000               	goto	l14123
  7694  0007F2                     l14123:
  7695                           
  7696                           ; BSR set to: 0
  7697  0007F2  0100               	movlb	0	; () banked
  7698  0007F4  2BB3               	incf	moteRunningProcess@counter& (0+255),f,b
  7699  0007F6  D7CF               	goto	l14111
  7700                           
  7701                           ; BSR set to: 0
  7702  0007F8  D7D5               	goto	l14115
  7703  0007FA                     l494:
  7704                           
  7705                           ; BSR set to: 0
  7706                           ;MOTEapp.c: 673: }
  7707                           ;MOTEapp.c: 674: }
  7708                           ;MOTEapp.c: 676: LATAbits.LATA7 = 1;
  7709  0007FA  8E89               	bsf	3977,7,c	;volatile
  7710                           
  7711                           ;MOTEapp.c: 677: LATAbits.LATA6 = 0;
  7712  0007FC  9C89               	bcf	3977,6,c	;volatile
  7713                           
  7714                           ; BSR set to: 0
  7715                           ;MOTEapp.c: 679: oled_putString("Server Response ",0,2);
  7716  0007FE  0E54               	movlw	low STR_91
  7717  000800  0100               	movlb	0	; () banked
  7718  000802  6F71               	movwf	oled_putString@string& (0+255),b
  7719  000804  0E7B               	movlw	high STR_91
  7720  000806  0100               	movlb	0	; () banked
  7721  000808  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7722  00080A  0E00               	movlw	0
  7723  00080C  0100               	movlb	0	; () banked
  7724  00080E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7725  000810  0E02               	movlw	2
  7726  000812  0100               	movlb	0	; () banked
  7727  000814  6F74               	movwf	oled_putString@start_page& (0+255),b
  7728  000816  EC8D  F030         	call	_oled_putString	;wreg free
  7729                           
  7730                           ;MOTEapp.c: 680: oled_putString("    Received    ",0,3);
  7731  00081A  0ECC               	movlw	low STR_92
  7732  00081C  0100               	movlb	0	; () banked
  7733  00081E  6F71               	movwf	oled_putString@string& (0+255),b
  7734  000820  0E7A               	movlw	high STR_92
  7735  000822  0100               	movlb	0	; () banked
  7736  000824  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7737  000826  0E00               	movlw	0
  7738  000828  0100               	movlb	0	; () banked
  7739  00082A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7740  00082C  0E03               	movlw	3
  7741  00082E  0100               	movlb	0	; () banked
  7742  000830  6F74               	movwf	oled_putString@start_page& (0+255),b
  7743  000832  EC8D  F030         	call	_oled_putString	;wreg free
  7744                           
  7745                           ;MOTEapp.c: 681: }
  7746  000836  D079               	goto	l14143
  7747  000838                     l14129:
  7748                           
  7749                           ;MOTEapp.c: 682: else if(strncmp(moduleResonseBuffer, "mac_tx", 6) == 0)
  7750  000838  0E5D               	movlw	low _moduleResonseBuffer
  7751  00083A  0100               	movlb	0	; () banked
  7752  00083C  6F60               	movwf	strncmp@s1& (0+255),b
  7753  00083E  0E01               	movlw	high _moduleResonseBuffer
  7754  000840  0100               	movlb	0	; () banked
  7755  000842  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7756  000844  0EB1               	movlw	low STR_93
  7757  000846  0100               	movlb	0	; () banked
  7758  000848  6F62               	movwf	strncmp@s2& (0+255),b
  7759  00084A  0E7F               	movlw	high STR_93
  7760  00084C  0100               	movlb	0	; () banked
  7761  00084E  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7762  000850  0E00               	movlw	0
  7763  000852  0100               	movlb	0	; () banked
  7764  000854  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7765  000856  0E06               	movlw	6
  7766  000858  6F64               	movwf	strncmp@len& (0+255),b
  7767  00085A  EC02  F02D         	call	_strncmp	;wreg free
  7768  00085E  0100               	movlb	0	; () banked
  7769  000860  5160               	movf	?_strncmp& (0+255),w,b
  7770  000862  0100               	movlb	0	; () banked
  7771  000864  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7772  000866  A4D8               	btfss	status,2,c
  7773  000868  D010               	goto	l14135
  7774                           
  7775                           ; BSR set to: 0
  7776                           ;MOTEapp.c: 683: {
  7777                           ;MOTEapp.c: 684: LATAbits.LATA6 = 0;
  7778  00086A  9C89               	bcf	3977,6,c	;volatile
  7779                           
  7780                           ; BSR set to: 0
  7781                           ;MOTEapp.c: 685: oled_putString("Data Transmitted",0,3);
  7782  00086C  0EBA               	movlw	low STR_94
  7783  00086E  0100               	movlb	0	; () banked
  7784  000870  6F71               	movwf	oled_putString@string& (0+255),b
  7785  000872  0E7B               	movlw	high STR_94
  7786  000874  0100               	movlb	0	; () banked
  7787  000876  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7788  000878  0E00               	movlw	0
  7789  00087A  0100               	movlb	0	; () banked
  7790  00087C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7791  00087E  0E03               	movlw	3
  7792  000880  0100               	movlb	0	; () banked
  7793  000882  6F74               	movwf	oled_putString@start_page& (0+255),b
  7794  000884  EC8D  F030         	call	_oled_putString	;wreg free
  7795                           
  7796                           ;MOTEapp.c: 686: }
  7797  000888  D050               	goto	l14143
  7798  00088A                     l14135:
  7799                           
  7800                           ;MOTEapp.c: 687: else if(strncmp(moduleResonseBuffer, "mac_er", 6) == 0)
  7801  00088A  0E5D               	movlw	low _moduleResonseBuffer
  7802  00088C  0100               	movlb	0	; () banked
  7803  00088E  6F60               	movwf	strncmp@s1& (0+255),b
  7804  000890  0E01               	movlw	high _moduleResonseBuffer
  7805  000892  0100               	movlb	0	; () banked
  7806  000894  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7807  000896  0EA3               	movlw	low STR_95
  7808  000898  0100               	movlb	0	; () banked
  7809  00089A  6F62               	movwf	strncmp@s2& (0+255),b
  7810  00089C  0E7F               	movlw	high STR_95
  7811  00089E  0100               	movlb	0	; () banked
  7812  0008A0  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7813  0008A2  0E00               	movlw	0
  7814  0008A4  0100               	movlb	0	; () banked
  7815  0008A6  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7816  0008A8  0E06               	movlw	6
  7817  0008AA  6F64               	movwf	strncmp@len& (0+255),b
  7818  0008AC  EC02  F02D         	call	_strncmp	;wreg free
  7819  0008B0  0100               	movlb	0	; () banked
  7820  0008B2  5160               	movf	?_strncmp& (0+255),w,b
  7821  0008B4  0100               	movlb	0	; () banked
  7822  0008B6  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7823  0008B8  A4D8               	btfss	status,2,c
  7824  0008BA  D00F               	goto	l14139
  7825                           
  7826                           ; BSR set to: 0
  7827                           ;MOTEapp.c: 688: {
  7828                           ;MOTEapp.c: 689: oled_putString("Mac Error Occurred",0,3);
  7829  0008BC  0E96               	movlw	low STR_96
  7830  0008BE  0100               	movlb	0	; () banked
  7831  0008C0  6F71               	movwf	oled_putString@string& (0+255),b
  7832  0008C2  0E7A               	movlw	high STR_96
  7833  0008C4  0100               	movlb	0	; () banked
  7834  0008C6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7835  0008C8  0E00               	movlw	0
  7836  0008CA  0100               	movlb	0	; () banked
  7837  0008CC  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7838  0008CE  0E03               	movlw	3
  7839  0008D0  0100               	movlb	0	; () banked
  7840  0008D2  6F74               	movwf	oled_putString@start_page& (0+255),b
  7841  0008D4  EC8D  F030         	call	_oled_putString	;wreg free
  7842                           
  7843                           ;MOTEapp.c: 690: }
  7844  0008D8  D028               	goto	l14143
  7845  0008DA                     l14139:
  7846                           
  7847                           ;MOTEapp.c: 691: else if(strncmp(moduleResonseBuffer, "no_fre", 6) == 0)
  7848  0008DA  0E5D               	movlw	low _moduleResonseBuffer
  7849  0008DC  0100               	movlb	0	; () banked
  7850  0008DE  6F60               	movwf	strncmp@s1& (0+255),b
  7851  0008E0  0E01               	movlw	high _moduleResonseBuffer
  7852  0008E2  0100               	movlb	0	; () banked
  7853  0008E4  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7854  0008E6  0E9C               	movlw	low STR_97
  7855  0008E8  0100               	movlb	0	; () banked
  7856  0008EA  6F62               	movwf	strncmp@s2& (0+255),b
  7857  0008EC  0E7F               	movlw	high STR_97
  7858  0008EE  0100               	movlb	0	; () banked
  7859  0008F0  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7860  0008F2  0E00               	movlw	0
  7861  0008F4  0100               	movlb	0	; () banked
  7862  0008F6  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7863  0008F8  0E06               	movlw	6
  7864  0008FA  6F64               	movwf	strncmp@len& (0+255),b
  7865  0008FC  EC02  F02D         	call	_strncmp	;wreg free
  7866  000900  0100               	movlb	0	; () banked
  7867  000902  5160               	movf	?_strncmp& (0+255),w,b
  7868  000904  0100               	movlb	0	; () banked
  7869  000906  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7870  000908  A4D8               	btfss	status,2,c
  7871  00090A  D00F               	goto	l14143
  7872                           
  7873                           ; BSR set to: 0
  7874                           ;MOTEapp.c: 692: {
  7875                           ;MOTEapp.c: 693: oled_putString("No Free Channel",0,3);
  7876  00090C  0EB3               	movlw	low STR_98
  7877  00090E  0100               	movlb	0	; () banked
  7878  000910  6F71               	movwf	oled_putString@string& (0+255),b
  7879  000912  0E7C               	movlw	high STR_98
  7880  000914  0100               	movlb	0	; () banked
  7881  000916  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7882  000918  0E00               	movlw	0
  7883  00091A  0100               	movlb	0	; () banked
  7884  00091C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7885  00091E  0E03               	movlw	3
  7886  000920  0100               	movlb	0	; () banked
  7887  000922  6F74               	movwf	oled_putString@start_page& (0+255),b
  7888  000924  EC8D  F030         	call	_oled_putString	;wreg free
  7889  000928  D000               	goto	l14143
  7890  00092A                     l14143:
  7891                           
  7892                           ;MOTEapp.c: 694: }
  7893                           ;MOTEapp.c: 695: _delay((unsigned long)((16)*(48000000/4000.0)));
  7894  00092A  0EFA               	movlw	250
  7895  00092C  0100               	movlb	0	; () banked
  7896  00092E  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  7897  000930  0E58               	movlw	88
  7898  000932                     u14487:
  7899  000932  2EE8               	decfsz	wreg,f,c
  7900  000934  D7FE               	bra	u14487
  7901  000936  2FAF               	decfsz	??_moteRunningProcess& (0+255),f,b
  7902  000938  D7FC               	bra	u14487
  7903  00093A  F000               	nop	
  7904  00093C  D000               	goto	l14145
  7905  00093E                     l14145:
  7906                           
  7907                           ;MOTEapp.c: 696: }
  7908                           ;MOTEapp.c: 697: if ( (changeStates) || (selectButton) )
  7909  00093E  0100               	movlb	0	; () banked
  7910  000940  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7911  000942  0100               	movlb	0	; () banked
  7912  000944  A4D8               	btfss	status,2,c
  7913  000946  D007               	goto	l14149
  7914                           
  7915                           ; BSR set to: 0
  7916  000948  0100               	movlb	0	; () banked
  7917  00094A  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7918  00094C  0100               	movlb	0	; () banked
  7919  00094E  A4D8               	btfss	status,2,c
  7920  000950  D002               	goto	l14149
  7921  000952  0012               	return	
  7922  000954  D000               	goto	l14149
  7923  000956                     l14149:
  7924                           
  7925                           ; BSR set to: 0
  7926                           ;MOTEapp.c: 698: {
  7927                           ;MOTEapp.c: 699: oled_clear();
  7928  000956  ECA6  F038         	call	_oled_clear	;wreg free
  7929                           
  7930                           ;MOTEapp.c: 700: oled_putString("  Issue Uplink  ",0,0);
  7931  00095A  0E21               	movlw	low STR_75
  7932  00095C  0100               	movlb	0	; () banked
  7933  00095E  6F71               	movwf	oled_putString@string& (0+255),b
  7934  000960  0E7B               	movlw	high STR_75
  7935  000962  0100               	movlb	0	; () banked
  7936  000964  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7937  000966  0E00               	movlw	0
  7938  000968  0100               	movlb	0	; () banked
  7939  00096A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7940  00096C  0E00               	movlw	0
  7941  00096E  0100               	movlb	0	; () banked
  7942  000970  6F74               	movwf	oled_putString@start_page& (0+255),b
  7943  000972  EC8D  F030         	call	_oled_putString	;wreg free
  7944                           
  7945                           ;MOTEapp.c: 701: oled_putString(" LoRaWAN Packet ",0,1);
  7946  000976  0E87               	movlw	low STR_76
  7947  000978  0100               	movlb	0	; () banked
  7948  00097A  6F71               	movwf	oled_putString@string& (0+255),b
  7949  00097C  0E7B               	movlw	high STR_76
  7950  00097E  0100               	movlb	0	; () banked
  7951  000980  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7952  000982  0E00               	movlw	0
  7953  000984  0100               	movlb	0	; () banked
  7954  000986  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7955  000988  0E01               	movlw	1
  7956  00098A  0100               	movlb	0	; () banked
  7957  00098C  6F74               	movwf	oled_putString@start_page& (0+255),b
  7958  00098E  EC8D  F030         	call	_oled_putString	;wreg free
  7959                           
  7960                           ;MOTEapp.c: 702: oled_putString("(NAV)    (SEL) ",0,3);
  7961  000992  0E83               	movlw	low STR_77
  7962  000994  0100               	movlb	0	; () banked
  7963  000996  6F71               	movwf	oled_putString@string& (0+255),b
  7964  000998  0E7C               	movlw	high STR_77
  7965  00099A  0100               	movlb	0	; () banked
  7966  00099C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7967  00099E  0E00               	movlw	0
  7968  0009A0  0100               	movlb	0	; () banked
  7969  0009A2  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7970  0009A4  0E03               	movlw	3
  7971  0009A6  0100               	movlb	0	; () banked
  7972  0009A8  6F74               	movwf	oled_putString@start_page& (0+255),b
  7973  0009AA  EC8D  F030         	call	_oled_putString	;wreg free
  7974                           
  7975                           ;MOTEapp.c: 703: runningState = runningUplink;
  7976  0009AE  0E06               	movlw	6
  7977  0009B0  0100               	movlb	0	; () banked
  7978  0009B2  6FE9               	movwf	_runningState& (0+255),b
  7979                           
  7980                           ; BSR set to: 0
  7981                           ;MOTEapp.c: 704: }
  7982                           ;MOTEapp.c: 705: break;
  7983  0009B4  0012               	return	
  7984  0009B6                     l14159:
  7985                           
  7986                           ; BSR set to: 0
  7987                           ;MOTEapp.c: 707: if (changeStates)
  7988  0009B6  0100               	movlb	0	; () banked
  7989  0009B8  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7990  0009BA  0100               	movlb	0	; () banked
  7991  0009BC  B4D8               	btfsc	status,2,c
  7992  0009BE  D030               	goto	l14171
  7993                           
  7994                           ; BSR set to: 0
  7995                           ;MOTEapp.c: 708: {
  7996                           ;MOTEapp.c: 709: oled_clear();
  7997  0009C0  ECA6  F038         	call	_oled_clear	;wreg free
  7998                           
  7999                           ;MOTEapp.c: 710: oled_putString("  Sensor Data  ",0,0);
  8000  0009C4  0E63               	movlw	low STR_102
  8001  0009C6  0100               	movlb	0	; () banked
  8002  0009C8  6F71               	movwf	oled_putString@string& (0+255),b
  8003  0009CA  0E7C               	movlw	high STR_102
  8004  0009CC  0100               	movlb	0	; () banked
  8005  0009CE  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8006  0009D0  0E00               	movlw	0
  8007  0009D2  0100               	movlb	0	; () banked
  8008  0009D4  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8009  0009D6  0E00               	movlw	0
  8010  0009D8  0100               	movlb	0	; () banked
  8011  0009DA  6F74               	movwf	oled_putString@start_page& (0+255),b
  8012  0009DC  EC8D  F030         	call	_oled_putString	;wreg free
  8013                           
  8014                           ;MOTEapp.c: 711: oled_putString("    Display    ",0,1);
  8015  0009E0  0E53               	movlw	low STR_103
  8016  0009E2  0100               	movlb	0	; () banked
  8017  0009E4  6F71               	movwf	oled_putString@string& (0+255),b
  8018  0009E6  0E7C               	movlw	high STR_103
  8019  0009E8  0100               	movlb	0	; () banked
  8020  0009EA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8021  0009EC  0E00               	movlw	0
  8022  0009EE  0100               	movlb	0	; () banked
  8023  0009F0  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8024  0009F2  0E01               	movlw	1
  8025  0009F4  0100               	movlb	0	; () banked
  8026  0009F6  6F74               	movwf	oled_putString@start_page& (0+255),b
  8027  0009F8  EC8D  F030         	call	_oled_putString	;wreg free
  8028                           
  8029                           ;MOTEapp.c: 712: oled_putString("(NAV)    (SEL) ",0,3);
  8030  0009FC  0E83               	movlw	low STR_77
  8031  0009FE  0100               	movlb	0	; () banked
  8032  000A00  6F71               	movwf	oled_putString@string& (0+255),b
  8033  000A02  0E7C               	movlw	high STR_77
  8034  000A04  0100               	movlb	0	; () banked
  8035  000A06  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8036  000A08  0E00               	movlw	0
  8037  000A0A  0100               	movlb	0	; () banked
  8038  000A0C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8039  000A0E  0E03               	movlw	3
  8040  000A10  0100               	movlb	0	; () banked
  8041  000A12  6F74               	movwf	oled_putString@start_page& (0+255),b
  8042  000A14  EC8D  F030         	call	_oled_putString	;wreg free
  8043                           
  8044                           ;MOTEapp.c: 713: runningState = runningSensor;
  8045  000A18  0E01               	movlw	1
  8046  000A1A  0100               	movlb	0	; () banked
  8047  000A1C  6FE9               	movwf	_runningState& (0+255),b
  8048                           
  8049                           ;MOTEapp.c: 714: }
  8050  000A1E  0012               	return	
  8051  000A20                     l14171:
  8052                           
  8053                           ; BSR set to: 0
  8054                           ;MOTEapp.c: 715: else if (selectButton)
  8055  000A20  0100               	movlb	0	; () banked
  8056  000A22  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8057  000A24  0100               	movlb	0	; () banked
  8058  000A26  B4D8               	btfsc	status,2,c
  8059  000A28  0012               	return	
  8060                           
  8061                           ; BSR set to: 0
  8062                           ;MOTEapp.c: 716: {
  8063                           ;MOTEapp.c: 718: oled_clear();
  8064  000A2A  ECA6  F038         	call	_oled_clear	;wreg free
  8065                           
  8066                           ;MOTEapp.c: 720: LATAbits.LATA7 = 0;
  8067  000A2E  9E89               	bcf	3977,7,c	;volatile
  8068                           
  8069                           ;MOTEapp.c: 722: oled_putString("Downlink Display",0,0);
  8070  000A30  0E42               	movlw	low STR_105
  8071  000A32  0100               	movlb	0	; () banked
  8072  000A34  6F71               	movwf	oled_putString@string& (0+255),b
  8073  000A36  0E7C               	movlw	high STR_105
  8074  000A38  0100               	movlb	0	; () banked
  8075  000A3A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8076  000A3C  0E00               	movlw	0
  8077  000A3E  0100               	movlb	0	; () banked
  8078  000A40  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8079  000A42  0E00               	movlw	0
  8080  000A44  0100               	movlb	0	; () banked
  8081  000A46  6F74               	movwf	oled_putString@start_page& (0+255),b
  8082  000A48  EC8D  F030         	call	_oled_putString	;wreg free
  8083                           
  8084                           ;MOTEapp.c: 724: oled_putString("Rx Port# ",0,1);
  8085  000A4C  0ECA               	movlw	low STR_106
  8086  000A4E  0100               	movlb	0	; () banked
  8087  000A50  6F71               	movwf	oled_putString@string& (0+255),b
  8088  000A52  0E7E               	movlw	high STR_106
  8089  000A54  0100               	movlb	0	; () banked
  8090  000A56  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8091  000A58  0E00               	movlw	0
  8092  000A5A  0100               	movlb	0	; () banked
  8093  000A5C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8094  000A5E  0E01               	movlw	1
  8095  000A60  0100               	movlb	0	; () banked
  8096  000A62  6F74               	movwf	oled_putString@start_page& (0+255),b
  8097  000A64  EC8D  F030         	call	_oled_putString	;wreg free
  8098                           
  8099                           ;MOTEapp.c: 725: oled_putString(&responsePortNum,9,1);
  8100  000A68  0EF0               	movlw	low _responsePortNum
  8101  000A6A  0100               	movlb	0	; () banked
  8102  000A6C  6F71               	movwf	oled_putString@string& (0+255),b
  8103  000A6E  0E01               	movlw	high _responsePortNum
  8104  000A70  0100               	movlb	0	; () banked
  8105  000A72  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8106  000A74  0E09               	movlw	9
  8107  000A76  0100               	movlb	0	; () banked
  8108  000A78  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8109  000A7A  0E01               	movlw	1
  8110  000A7C  0100               	movlb	0	; () banked
  8111  000A7E  6F74               	movwf	oled_putString@start_page& (0+255),b
  8112  000A80  EC8D  F030         	call	_oled_putString	;wreg free
  8113                           
  8114                           ;MOTEapp.c: 727: oled_putString("Data: ",0,2);
  8115  000A84  0E51               	movlw	low (STR_86+5)
  8116  000A86  0100               	movlb	0	; () banked
  8117  000A88  6F71               	movwf	oled_putString@string& (0+255),b
  8118  000A8A  0E7E               	movlw	high (STR_86+5)
  8119  000A8C  0100               	movlb	0	; () banked
  8120  000A8E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8121  000A90  0E00               	movlw	0
  8122  000A92  0100               	movlb	0	; () banked
  8123  000A94  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8124  000A96  0E02               	movlw	2
  8125  000A98  0100               	movlb	0	; () banked
  8126  000A9A  6F74               	movwf	oled_putString@start_page& (0+255),b
  8127  000A9C  EC8D  F030         	call	_oled_putString	;wreg free
  8128                           
  8129                           ;MOTEapp.c: 728: oled_putString(&responseData[0],6,2);
  8130  000AA0  0E9D               	movlw	low _responseData
  8131  000AA2  0100               	movlb	0	; () banked
  8132  000AA4  6F71               	movwf	oled_putString@string& (0+255),b
  8133  000AA6  0E01               	movlw	high _responseData
  8134  000AA8  0100               	movlb	0	; () banked
  8135  000AAA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8136  000AAC  0E06               	movlw	6
  8137  000AAE  0100               	movlb	0	; () banked
  8138  000AB0  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8139  000AB2  0E02               	movlw	2
  8140  000AB4  0100               	movlb	0	; () banked
  8141  000AB6  6F74               	movwf	oled_putString@start_page& (0+255),b
  8142  000AB8  EC8D  F030         	call	_oled_putString	;wreg free
  8143                           
  8144                           ;MOTEapp.c: 730: oled_putString(&responseData[10],0,3);
  8145  000ABC  0EA7               	movlw	low (_responseData+10)
  8146  000ABE  0100               	movlb	0	; () banked
  8147  000AC0  6F71               	movwf	oled_putString@string& (0+255),b
  8148  000AC2  0E01               	movlw	high (_responseData+10)
  8149  000AC4  0100               	movlb	0	; () banked
  8150  000AC6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8151  000AC8  0E00               	movlw	0
  8152  000ACA  0100               	movlb	0	; () banked
  8153  000ACC  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8154  000ACE  0E03               	movlw	3
  8155  000AD0  0100               	movlb	0	; () banked
  8156  000AD2  6F74               	movwf	oled_putString@start_page& (0+255),b
  8157  000AD4  EC8D  F030         	call	_oled_putString	;wreg free
  8158                           
  8159                           ;MOTEapp.c: 732: runningState = runningDownlinkDisplay;
  8160  000AD8  0E0B               	movlw	11
  8161  000ADA  0100               	movlb	0	; () banked
  8162  000ADC  6FE9               	movwf	_runningState& (0+255),b
  8163                           
  8164                           ; BSR set to: 0
  8165                           ;MOTEapp.c: 733: }
  8166                           ;MOTEapp.c: 734: break;
  8167                           
  8168                           ; BSR set to: 0
  8169  000ADE  0012               	return	
  8170  000AE0                     l14191:
  8171                           
  8172                           ; BSR set to: 0
  8173                           ;MOTEapp.c: 736: if ( (changeStates) || (selectButton) )
  8174  000AE0  0100               	movlb	0	; () banked
  8175  000AE2  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8176  000AE4  0100               	movlb	0	; () banked
  8177  000AE6  A4D8               	btfss	status,2,c
  8178  000AE8  D007               	goto	l14195
  8179                           
  8180                           ; BSR set to: 0
  8181  000AEA  0100               	movlb	0	; () banked
  8182  000AEC  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8183  000AEE  0100               	movlb	0	; () banked
  8184  000AF0  A4D8               	btfss	status,2,c
  8185  000AF2  D002               	goto	l14195
  8186  000AF4  0012               	return	
  8187  000AF6  D000               	goto	l14195
  8188  000AF8                     l14195:
  8189                           
  8190                           ; BSR set to: 0
  8191                           ;MOTEapp.c: 737: {
  8192                           ;MOTEapp.c: 738: oled_clear();
  8193  000AF8  ECA6  F038         	call	_oled_clear	;wreg free
  8194                           
  8195                           ;MOTEapp.c: 739: oled_putString(" View Downlink  ",0,0);
  8196  000AFC  0E10               	movlw	low STR_78
  8197  000AFE  0100               	movlb	0	; () banked
  8198  000B00  6F71               	movwf	oled_putString@string& (0+255),b
  8199  000B02  0E7B               	movlw	high STR_78
  8200  000B04  0100               	movlb	0	; () banked
  8201  000B06  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8202  000B08  0E00               	movlw	0
  8203  000B0A  0100               	movlb	0	; () banked
  8204  000B0C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8205  000B0E  0E00               	movlw	0
  8206  000B10  0100               	movlb	0	; () banked
  8207  000B12  6F74               	movwf	oled_putString@start_page& (0+255),b
  8208  000B14  EC8D  F030         	call	_oled_putString	;wreg free
  8209                           
  8210                           ;MOTEapp.c: 740: oled_putString("  Last Message  ",0,1);
  8211  000B18  0EFF               	movlw	low STR_79
  8212  000B1A  0100               	movlb	0	; () banked
  8213  000B1C  6F71               	movwf	oled_putString@string& (0+255),b
  8214  000B1E  0E7A               	movlw	high STR_79
  8215  000B20  0100               	movlb	0	; () banked
  8216  000B22  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8217  000B24  0E00               	movlw	0
  8218  000B26  0100               	movlb	0	; () banked
  8219  000B28  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8220  000B2A  0E01               	movlw	1
  8221  000B2C  0100               	movlb	0	; () banked
  8222  000B2E  6F74               	movwf	oled_putString@start_page& (0+255),b
  8223  000B30  EC8D  F030         	call	_oled_putString	;wreg free
  8224                           
  8225                           ;MOTEapp.c: 741: oled_putString("(NAV)    (SEL) ",0,3);
  8226  000B34  0E83               	movlw	low STR_77
  8227  000B36  0100               	movlb	0	; () banked
  8228  000B38  6F71               	movwf	oled_putString@string& (0+255),b
  8229  000B3A  0E7C               	movlw	high STR_77
  8230  000B3C  0100               	movlb	0	; () banked
  8231  000B3E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8232  000B40  0E00               	movlw	0
  8233  000B42  0100               	movlb	0	; () banked
  8234  000B44  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8235  000B46  0E03               	movlw	3
  8236  000B48  0100               	movlb	0	; () banked
  8237  000B4A  6F74               	movwf	oled_putString@start_page& (0+255),b
  8238  000B4C  EC8D  F030         	call	_oled_putString	;wreg free
  8239                           
  8240                           ;MOTEapp.c: 742: runningState = runningDownlink;
  8241  000B50  0E0A               	movlw	10
  8242  000B52  0100               	movlb	0	; () banked
  8243  000B54  6FE9               	movwf	_runningState& (0+255),b
  8244                           
  8245                           ; BSR set to: 0
  8246                           ;MOTEapp.c: 743: }
  8247                           ;MOTEapp.c: 744: break;
  8248  000B56  0012               	return	
  8249  000B58                     l14205:
  8250                           
  8251                           ; BSR set to: 0
  8252                           ;MOTEapp.c: 746: if (changeStates)
  8253  000B58  0100               	movlb	0	; () banked
  8254  000B5A  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8255  000B5C  0100               	movlb	0	; () banked
  8256  000B5E  B4D8               	btfsc	status,2,c
  8257  000B60  D043               	goto	l14219
  8258                           
  8259                           ; BSR set to: 0
  8260                           ;MOTEapp.c: 747: {
  8261                           ;MOTEapp.c: 748: oled_clear();
  8262  000B62  ECA6  F038         	call	_oled_clear	;wreg free
  8263                           
  8264                           ;MOTEapp.c: 749: oled_putString("Menu Has Timeout",0,0);
  8265  000B66  0E20               	movlw	low STR_111
  8266  000B68  0100               	movlb	0	; () banked
  8267  000B6A  6F71               	movwf	oled_putString@string& (0+255),b
  8268  000B6C  0E7C               	movlw	high STR_111
  8269  000B6E  0100               	movlb	0	; () banked
  8270  000B70  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8271  000B72  0E00               	movlw	0
  8272  000B74  0100               	movlb	0	; () banked
  8273  000B76  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8274  000B78  0E00               	movlw	0
  8275  000B7A  0100               	movlb	0	; () banked
  8276  000B7C  6F74               	movwf	oled_putString@start_page& (0+255),b
  8277  000B7E  EC8D  F030         	call	_oled_putString	;wreg free
  8278                           
  8279                           ;MOTEapp.c: 750: if (menuTimeout)
  8280  000B82  0100               	movlb	0	; () banked
  8281  000B84  51FA               	movf	_menuTimeout& (0+255),w,b
  8282  000B86  B4D8               	btfsc	status,2,c
  8283  000B88  D00F               	goto	l14215
  8284                           
  8285                           ; BSR set to: 0
  8286                           ;MOTEapp.c: 751: oled_putString("    Enabled   ", 0,2);
  8287  000B8A  0ED3               	movlw	low STR_112
  8288  000B8C  0100               	movlb	0	; () banked
  8289  000B8E  6F71               	movwf	oled_putString@string& (0+255),b
  8290  000B90  0E7C               	movlw	high STR_112
  8291  000B92  0100               	movlb	0	; () banked
  8292  000B94  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8293  000B96  0E00               	movlw	0
  8294  000B98  0100               	movlb	0	; () banked
  8295  000B9A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8296  000B9C  0E02               	movlw	2
  8297  000B9E  0100               	movlb	0	; () banked
  8298  000BA0  6F74               	movwf	oled_putString@start_page& (0+255),b
  8299  000BA2  EC8D  F030         	call	_oled_putString	;wreg free
  8300  000BA6  D00E               	goto	l517
  8301  000BA8                     l14215:
  8302                           
  8303                           ;MOTEapp.c: 752: else
  8304                           ;MOTEapp.c: 753: oled_putString("    Disabled  ", 0,2);
  8305  000BA8  0EE2               	movlw	low STR_113
  8306  000BAA  0100               	movlb	0	; () banked
  8307  000BAC  6F71               	movwf	oled_putString@string& (0+255),b
  8308  000BAE  0E7C               	movlw	high STR_113
  8309  000BB0  0100               	movlb	0	; () banked
  8310  000BB2  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8311  000BB4  0E00               	movlw	0
  8312  000BB6  0100               	movlb	0	; () banked
  8313  000BB8  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8314  000BBA  0E02               	movlw	2
  8315  000BBC  0100               	movlb	0	; () banked
  8316  000BBE  6F74               	movwf	oled_putString@start_page& (0+255),b
  8317  000BC0  EC8D  F030         	call	_oled_putString	;wreg free
  8318  000BC4                     l517:
  8319                           
  8320                           ;MOTEapp.c: 754: oled_putString("(NAV)    (CNG) ",0,3);
  8321  000BC4  0E73               	movlw	low STR_114
  8322  000BC6  0100               	movlb	0	; () banked
  8323  000BC8  6F71               	movwf	oled_putString@string& (0+255),b
  8324  000BCA  0E7C               	movlw	high STR_114
  8325  000BCC  0100               	movlb	0	; () banked
  8326  000BCE  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8327  000BD0  0E00               	movlw	0
  8328  000BD2  0100               	movlb	0	; () banked
  8329  000BD4  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8330  000BD6  0E03               	movlw	3
  8331  000BD8  0100               	movlb	0	; () banked
  8332  000BDA  6F74               	movwf	oled_putString@start_page& (0+255),b
  8333  000BDC  EC8D  F030         	call	_oled_putString	;wreg free
  8334                           
  8335                           ;MOTEapp.c: 755: runningState = runningMenuTimeout;
  8336  000BE0  0E0C               	movlw	12
  8337  000BE2  0100               	movlb	0	; () banked
  8338  000BE4  6FE9               	movwf	_runningState& (0+255),b
  8339                           
  8340                           ;MOTEapp.c: 756: }
  8341  000BE6  0012               	return	
  8342  000BE8                     l14219:
  8343                           
  8344                           ; BSR set to: 0
  8345                           ;MOTEapp.c: 757: else if (selectButton)
  8346  000BE8  0100               	movlb	0	; () banked
  8347  000BEA  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8348  000BEC  0100               	movlb	0	; () banked
  8349  000BEE  B4D8               	btfsc	status,2,c
  8350  000BF0  0012               	return	
  8351                           
  8352                           ; BSR set to: 0
  8353                           ;MOTEapp.c: 758: {
  8354                           ;MOTEapp.c: 759: oled_clear();
  8355  000BF2  ECA6  F038         	call	_oled_clear	;wreg free
  8356                           
  8357                           ;MOTEapp.c: 760: oled_putString("  Sensor Data  ",0,0);
  8358  000BF6  0E63               	movlw	low STR_102
  8359  000BF8  0100               	movlb	0	; () banked
  8360  000BFA  6F71               	movwf	oled_putString@string& (0+255),b
  8361  000BFC  0E7C               	movlw	high STR_102
  8362  000BFE  0100               	movlb	0	; () banked
  8363  000C00  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8364  000C02  0E00               	movlw	0
  8365  000C04  0100               	movlb	0	; () banked
  8366  000C06  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8367  000C08  0E00               	movlw	0
  8368  000C0A  0100               	movlb	0	; () banked
  8369  000C0C  6F74               	movwf	oled_putString@start_page& (0+255),b
  8370  000C0E  EC8D  F030         	call	_oled_putString	;wreg free
  8371                           
  8372                           ;MOTEapp.c: 761: oled_putString("Light:",0,1);
  8373  000C12  0E80               	movlw	low STR_116
  8374  000C14  0100               	movlb	0	; () banked
  8375  000C16  6F71               	movwf	oled_putString@string& (0+255),b
  8376  000C18  0E7F               	movlw	high STR_116
  8377  000C1A  0100               	movlb	0	; () banked
  8378  000C1C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8379  000C1E  0E00               	movlw	0
  8380  000C20  0100               	movlb	0	; () banked
  8381  000C22  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8382  000C24  0E01               	movlw	1
  8383  000C26  0100               	movlb	0	; () banked
  8384  000C28  6F74               	movwf	oled_putString@start_page& (0+255),b
  8385  000C2A  EC8D  F030         	call	_oled_putString	;wreg free
  8386                           
  8387                           ;MOTEapp.c: 762: oled_putString("Temp :",0,2);
  8388  000C2E  0E79               	movlw	low STR_117
  8389  000C30  0100               	movlb	0	; () banked
  8390  000C32  6F71               	movwf	oled_putString@string& (0+255),b
  8391  000C34  0E7F               	movlw	high STR_117
  8392  000C36  0100               	movlb	0	; () banked
  8393  000C38  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8394  000C3A  0E00               	movlw	0
  8395  000C3C  0100               	movlb	0	; () banked
  8396  000C3E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8397  000C40  0E02               	movlw	2
  8398  000C42  0100               	movlb	0	; () banked
  8399  000C44  6F74               	movwf	oled_putString@start_page& (0+255),b
  8400  000C46  EC8D  F030         	call	_oled_putString	;wreg free
  8401                           
  8402                           ;MOTEapp.c: 763: oled_putString("C",10,2);
  8403  000C4A  0EFA               	movlw	low STR_118
  8404  000C4C  0100               	movlb	0	; () banked
  8405  000C4E  6F71               	movwf	oled_putString@string& (0+255),b
  8406  000C50  0E7F               	movlw	high STR_118
  8407  000C52  0100               	movlb	0	; () banked
  8408  000C54  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8409  000C56  0E0A               	movlw	10
  8410  000C58  0100               	movlb	0	; () banked
  8411  000C5A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8412  000C5C  0E02               	movlw	2
  8413  000C5E  0100               	movlb	0	; () banked
  8414  000C60  6F74               	movwf	oled_putString@start_page& (0+255),b
  8415  000C62  EC8D  F030         	call	_oled_putString	;wreg free
  8416                           
  8417                           ;MOTEapp.c: 765: moteApp_setSensorsInput();
  8418  000C66  EC60  F02E         	call	_moteApp_setSensorsInput	;wreg free
  8419                           
  8420                           ;MOTEapp.c: 766: runningState = runningSensorMenu;
  8421  000C6A  0E02               	movlw	2
  8422  000C6C  0100               	movlb	0	; () banked
  8423  000C6E  6FE9               	movwf	_runningState& (0+255),b
  8424                           
  8425                           ; BSR set to: 0
  8426                           ;MOTEapp.c: 767: }
  8427                           ;MOTEapp.c: 768: break;
  8428                           
  8429                           ; BSR set to: 0
  8430  000C70  0012               	return	
  8431  000C72                     l14235:
  8432                           
  8433                           ; BSR set to: 0
  8434                           ;MOTEapp.c: 770: if (changeStates)
  8435  000C72  0100               	movlb	0	; () banked
  8436  000C74  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8437  000C76  0100               	movlb	0	; () banked
  8438  000C78  B4D8               	btfsc	status,2,c
  8439  000C7A  D0BD               	goto	l14267
  8440                           
  8441                           ; BSR set to: 0
  8442                           ;MOTEapp.c: 771: {
  8443                           ;MOTEapp.c: 772: oled_clear();
  8444  000C7C  ECA6  F038         	call	_oled_clear	;wreg free
  8445                           
  8446                           ;MOTEapp.c: 773: oled_putString("Periodic Uplink ",0,0);
  8447  000C80  0E76               	movlw	low STR_119
  8448  000C82  0100               	movlb	0	; () banked
  8449  000C84  6F71               	movwf	oled_putString@string& (0+255),b
  8450  000C86  0E7B               	movlw	high STR_119
  8451  000C88  0100               	movlb	0	; () banked
  8452  000C8A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8453  000C8C  0E00               	movlw	0
  8454  000C8E  0100               	movlb	0	; () banked
  8455  000C90  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8456  000C92  0E00               	movlw	0
  8457  000C94  0100               	movlb	0	; () banked
  8458  000C96  6F74               	movwf	oled_putString@start_page& (0+255),b
  8459  000C98  EC8D  F030         	call	_oled_putString	;wreg free
  8460                           
  8461                           ;MOTEapp.c: 774: oled_putString("Tx Event Timing ",0,1);
  8462  000C9C  0E65               	movlw	low STR_120
  8463  000C9E  0100               	movlb	0	; () banked
  8464  000CA0  6F71               	movwf	oled_putString@string& (0+255),b
  8465  000CA2  0E7B               	movlw	high STR_120
  8466  000CA4  0100               	movlb	0	; () banked
  8467  000CA6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8468  000CA8  0E00               	movlw	0
  8469  000CAA  0100               	movlb	0	; () banked
  8470  000CAC  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8471  000CAE  0E01               	movlw	1
  8472  000CB0  0100               	movlb	0	; () banked
  8473  000CB2  6F74               	movwf	oled_putString@start_page& (0+255),b
  8474  000CB4  EC8D  F030         	call	_oled_putString	;wreg free
  8475                           
  8476                           ;MOTEapp.c: 775: oled_putString("Every:",0,2);
  8477  000CB8  0E87               	movlw	low STR_121
  8478  000CBA  0100               	movlb	0	; () banked
  8479  000CBC  6F71               	movwf	oled_putString@string& (0+255),b
  8480  000CBE  0E7F               	movlw	high STR_121
  8481  000CC0  0100               	movlb	0	; () banked
  8482  000CC2  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8483  000CC4  0E00               	movlw	0
  8484  000CC6  0100               	movlb	0	; () banked
  8485  000CC8  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8486  000CCA  0E02               	movlw	2
  8487  000CCC  0100               	movlb	0	; () banked
  8488  000CCE  6F74               	movwf	oled_putString@start_page& (0+255),b
  8489  000CD0  EC8D  F030         	call	_oled_putString	;wreg free
  8490                           
  8491                           ;MOTEapp.c: 776: oled_putString("Mins",12,2);
  8492  000CD4  0EC2               	movlw	low STR_122
  8493  000CD6  0100               	movlb	0	; () banked
  8494  000CD8  6F71               	movwf	oled_putString@string& (0+255),b
  8495  000CDA  0E7F               	movlw	high STR_122
  8496  000CDC  0100               	movlb	0	; () banked
  8497  000CDE  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8498  000CE0  0E0C               	movlw	12
  8499  000CE2  0100               	movlb	0	; () banked
  8500  000CE4  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8501  000CE6  0E02               	movlw	2
  8502  000CE8  0100               	movlb	0	; () banked
  8503  000CEA  6F74               	movwf	oled_putString@start_page& (0+255),b
  8504  000CEC  EC8D  F030         	call	_oled_putString	;wreg free
  8505                           
  8506                           ;MOTEapp.c: 778: switch (periodicUpValue)
  8507  000CF0  D05B               	goto	l14261
  8508                           
  8509                           ;MOTEapp.c: 779: {
  8510                           ;MOTEapp.c: 780: default:
  8511  000CF2  D000               	goto	l14247
  8512  000CF4                     l14247:
  8513                           
  8514                           ;MOTEapp.c: 782: oled_putString("5",7,2);
  8515  000CF4  0ECB               	movlw	low (STR_169+11)
  8516  000CF6  0100               	movlb	0	; () banked
  8517  000CF8  6F71               	movwf	oled_putString@string& (0+255),b
  8518  000CFA  0E7D               	movlw	high (STR_169+11)
  8519  000CFC  0100               	movlb	0	; () banked
  8520  000CFE  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8521  000D00  0E07               	movlw	7
  8522  000D02  0100               	movlb	0	; () banked
  8523  000D04  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8524  000D06  0E02               	movlw	2
  8525  000D08  0100               	movlb	0	; () banked
  8526  000D0A  6F74               	movwf	oled_putString@start_page& (0+255),b
  8527  000D0C  EC8D  F030         	call	_oled_putString	;wreg free
  8528                           
  8529                           ;MOTEapp.c: 783: break;
  8530  000D10  D060               	goto	l14263
  8531  000D12                     l14249:
  8532                           
  8533                           ;MOTEapp.c: 785: oled_putString("10",7,2);
  8534  000D12  0EE0               	movlw	low (STR_146+1)
  8535  000D14  0100               	movlb	0	; () banked
  8536  000D16  6F71               	movwf	oled_putString@string& (0+255),b
  8537  000D18  0E7F               	movlw	high (STR_146+1)
  8538  000D1A  0100               	movlb	0	; () banked
  8539  000D1C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8540  000D1E  0E07               	movlw	7
  8541  000D20  0100               	movlb	0	; () banked
  8542  000D22  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8543  000D24  0E02               	movlw	2
  8544  000D26  0100               	movlb	0	; () banked
  8545  000D28  6F74               	movwf	oled_putString@start_page& (0+255),b
  8546  000D2A  EC8D  F030         	call	_oled_putString	;wreg free
  8547                           
  8548                           ;MOTEapp.c: 786: break;
  8549  000D2E  D051               	goto	l14263
  8550  000D30                     l14251:
  8551                           
  8552                           ;MOTEapp.c: 788: oled_putString("15",7,2);
  8553  000D30  0EEC               	movlw	low (STR_147+1)
  8554  000D32  0100               	movlb	0	; () banked
  8555  000D34  6F71               	movwf	oled_putString@string& (0+255),b
  8556  000D36  0E7F               	movlw	high (STR_147+1)
  8557  000D38  0100               	movlb	0	; () banked
  8558  000D3A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8559  000D3C  0E07               	movlw	7
  8560  000D3E  0100               	movlb	0	; () banked
  8561  000D40  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8562  000D42  0E02               	movlw	2
  8563  000D44  0100               	movlb	0	; () banked
  8564  000D46  6F74               	movwf	oled_putString@start_page& (0+255),b
  8565  000D48  EC8D  F030         	call	_oled_putString	;wreg free
  8566                           
  8567                           ;MOTEapp.c: 789: break;
  8568  000D4C  D042               	goto	l14263
  8569  000D4E                     l14253:
  8570                           
  8571                           ;MOTEapp.c: 791: oled_putString("30",7,2);
  8572  000D4E  0EE4               	movlw	low (STR_148+1)
  8573  000D50  0100               	movlb	0	; () banked
  8574  000D52  6F71               	movwf	oled_putString@string& (0+255),b
  8575  000D54  0E7F               	movlw	high (STR_148+1)
  8576  000D56  0100               	movlb	0	; () banked
  8577  000D58  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8578  000D5A  0E07               	movlw	7
  8579  000D5C  0100               	movlb	0	; () banked
  8580  000D5E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8581  000D60  0E02               	movlw	2
  8582  000D62  0100               	movlb	0	; () banked
  8583  000D64  6F74               	movwf	oled_putString@start_page& (0+255),b
  8584  000D66  EC8D  F030         	call	_oled_putString	;wreg free
  8585                           
  8586                           ;MOTEapp.c: 792: break;
  8587  000D6A  D033               	goto	l14263
  8588  000D6C                     l14255:
  8589                           
  8590                           ;MOTEapp.c: 794: oled_putString("60",7,2);
  8591  000D6C  0EE8               	movlw	low (STR_149+1)
  8592  000D6E  0100               	movlb	0	; () banked
  8593  000D70  6F71               	movwf	oled_putString@string& (0+255),b
  8594  000D72  0E7F               	movlw	high (STR_149+1)
  8595  000D74  0100               	movlb	0	; () banked
  8596  000D76  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8597  000D78  0E07               	movlw	7
  8598  000D7A  0100               	movlb	0	; () banked
  8599  000D7C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8600  000D7E  0E02               	movlw	2
  8601  000D80  0100               	movlb	0	; () banked
  8602  000D82  6F74               	movwf	oled_putString@start_page& (0+255),b
  8603  000D84  EC8D  F030         	call	_oled_putString	;wreg free
  8604                           
  8605                           ;MOTEapp.c: 795: break;
  8606  000D88  D024               	goto	l14263
  8607  000D8A                     l14257:
  8608                           
  8609                           ;MOTEapp.c: 797: oled_putString("OFF",7,2);
  8610  000D8A  0EEF               	movlw	low STR_128
  8611  000D8C  0100               	movlb	0	; () banked
  8612  000D8E  6F71               	movwf	oled_putString@string& (0+255),b
  8613  000D90  0E7F               	movlw	high STR_128
  8614  000D92  0100               	movlb	0	; () banked
  8615  000D94  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8616  000D96  0E07               	movlw	7
  8617  000D98  0100               	movlb	0	; () banked
  8618  000D9A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8619  000D9C  0E02               	movlw	2
  8620  000D9E  0100               	movlb	0	; () banked
  8621  000DA0  6F74               	movwf	oled_putString@start_page& (0+255),b
  8622  000DA2  EC8D  F030         	call	_oled_putString	;wreg free
  8623                           
  8624                           ;MOTEapp.c: 799: }
  8625                           
  8626                           ;MOTEapp.c: 798: break;
  8627  000DA6  D015               	goto	l14263
  8628  000DA8                     l14261:
  8629  000DA8  0100               	movlb	0	; () banked
  8630  000DAA  51FD               	movf	_periodicUpValue& (0+255),w,b
  8631                           
  8632                           ; Switch size 1, requested type "space"
  8633                           ; Number of cases is 6, Range of values is 0 to 5
  8634                           ; switch strategies available:
  8635                           ; Name         Instructions Cycles
  8636                           ; simple_byte           19    10 (average)
  8637                           ;	Chosen strategy is simple_byte
  8638  000DAC  0A00               	xorlw	0	; case 0
  8639  000DAE  B4D8               	btfsc	status,2,c
  8640  000DB0  D7A1               	goto	l14247
  8641  000DB2  0A01               	xorlw	1	; case 1
  8642  000DB4  B4D8               	btfsc	status,2,c
  8643  000DB6  D7AD               	goto	l14249
  8644  000DB8  0A03               	xorlw	3	; case 2
  8645  000DBA  B4D8               	btfsc	status,2,c
  8646  000DBC  D7B9               	goto	l14251
  8647  000DBE  0A01               	xorlw	1	; case 3
  8648  000DC0  B4D8               	btfsc	status,2,c
  8649  000DC2  D7C5               	goto	l14253
  8650  000DC4  0A07               	xorlw	7	; case 4
  8651  000DC6  B4D8               	btfsc	status,2,c
  8652  000DC8  D7D1               	goto	l14255
  8653  000DCA  0A01               	xorlw	1	; case 5
  8654  000DCC  B4D8               	btfsc	status,2,c
  8655  000DCE  D7DD               	goto	l14257
  8656  000DD0  D791               	goto	l14247
  8657  000DD2                     l14263:
  8658                           
  8659                           ;MOTEapp.c: 800: oled_putString("(NAV)    (CNG) ",0,3);
  8660  000DD2  0E73               	movlw	low STR_114
  8661  000DD4  0100               	movlb	0	; () banked
  8662  000DD6  6F71               	movwf	oled_putString@string& (0+255),b
  8663  000DD8  0E7C               	movlw	high STR_114
  8664  000DDA  0100               	movlb	0	; () banked
  8665  000DDC  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8666  000DDE  0E00               	movlw	0
  8667  000DE0  0100               	movlb	0	; () banked
  8668  000DE2  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8669  000DE4  0E03               	movlw	3
  8670  000DE6  0100               	movlb	0	; () banked
  8671  000DE8  6F74               	movwf	oled_putString@start_page& (0+255),b
  8672  000DEA  EC8D  F030         	call	_oled_putString	;wreg free
  8673                           
  8674                           ;MOTEapp.c: 801: runningState = runningPeriodicWakeUpLength;
  8675  000DEE  0E0D               	movlw	13
  8676  000DF0  0100               	movlb	0	; () banked
  8677  000DF2  6FE9               	movwf	_runningState& (0+255),b
  8678                           
  8679                           ;MOTEapp.c: 802: }
  8680  000DF4  0012               	return	
  8681  000DF6                     l14267:
  8682                           
  8683                           ; BSR set to: 0
  8684                           ;MOTEapp.c: 803: else if (selectButton)
  8685  000DF6  0100               	movlb	0	; () banked
  8686  000DF8  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8687  000DFA  0100               	movlb	0	; () banked
  8688  000DFC  B4D8               	btfsc	status,2,c
  8689  000DFE  0012               	return	
  8690                           
  8691                           ; BSR set to: 0
  8692                           ;MOTEapp.c: 804: {
  8693                           ;MOTEapp.c: 805: if (menuTimeout)
  8694  000E00  0100               	movlb	0	; () banked
  8695  000E02  51FA               	movf	_menuTimeout& (0+255),w,b
  8696  000E04  B4D8               	btfsc	status,2,c
  8697  000E06  D012               	goto	l14275
  8698                           
  8699                           ; BSR set to: 0
  8700                           ;MOTEapp.c: 806: {
  8701                           ;MOTEapp.c: 807: menuTimeout = 0;
  8702  000E08  0E00               	movlw	0
  8703  000E0A  0100               	movlb	0	; () banked
  8704  000E0C  6FFA               	movwf	_menuTimeout& (0+255),b
  8705                           
  8706                           ; BSR set to: 0
  8707                           ;MOTEapp.c: 808: oled_putString("    Disabled  ", 0,2);
  8708  000E0E  0EE2               	movlw	low STR_113
  8709  000E10  0100               	movlb	0	; () banked
  8710  000E12  6F71               	movwf	oled_putString@string& (0+255),b
  8711  000E14  0E7C               	movlw	high STR_113
  8712  000E16  0100               	movlb	0	; () banked
  8713  000E18  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8714  000E1A  0E00               	movlw	0
  8715  000E1C  0100               	movlb	0	; () banked
  8716  000E1E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8717  000E20  0E02               	movlw	2
  8718  000E22  0100               	movlb	0	; () banked
  8719  000E24  6F74               	movwf	oled_putString@start_page& (0+255),b
  8720  000E26  EC8D  F030         	call	_oled_putString	;wreg free
  8721                           
  8722                           ;MOTEapp.c: 809: }
  8723  000E2A  0012               	return	
  8724  000E2C                     l14275:
  8725                           
  8726                           ;MOTEapp.c: 810: else
  8727                           ;MOTEapp.c: 811: {
  8728                           ;MOTEapp.c: 812: menuTimeout = 1;
  8729  000E2C  0E01               	movlw	1
  8730  000E2E  0100               	movlb	0	; () banked
  8731  000E30  6FFA               	movwf	_menuTimeout& (0+255),b
  8732                           
  8733                           ; BSR set to: 0
  8734                           ;MOTEapp.c: 813: oled_putString("    Enabled   ", 0,2);
  8735  000E32  0ED3               	movlw	low STR_112
  8736  000E34  0100               	movlb	0	; () banked
  8737  000E36  6F71               	movwf	oled_putString@string& (0+255),b
  8738  000E38  0E7C               	movlw	high STR_112
  8739  000E3A  0100               	movlb	0	; () banked
  8740  000E3C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8741  000E3E  0E00               	movlw	0
  8742  000E40  0100               	movlb	0	; () banked
  8743  000E42  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8744  000E44  0E02               	movlw	2
  8745  000E46  0100               	movlb	0	; () banked
  8746  000E48  6F74               	movwf	oled_putString@start_page& (0+255),b
  8747  000E4A  EC8D  F030         	call	_oled_putString	;wreg free
  8748                           
  8749                           ;MOTEapp.c: 814: }
  8750                           ;MOTEapp.c: 815: }
  8751                           ;MOTEapp.c: 816: break;
  8752  000E4E  0012               	return	
  8753  000E50                     l14279:
  8754                           
  8755                           ;MOTEapp.c: 819: if ( (changeStates) || (selectButton) )
  8756  000E50  0100               	movlb	0	; () banked
  8757  000E52  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8758  000E54  0100               	movlb	0	; () banked
  8759  000E56  A4D8               	btfss	status,2,c
  8760  000E58  D007               	goto	l14283
  8761                           
  8762                           ; BSR set to: 0
  8763  000E5A  0100               	movlb	0	; () banked
  8764  000E5C  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8765  000E5E  0100               	movlb	0	; () banked
  8766  000E60  A4D8               	btfss	status,2,c
  8767  000E62  D002               	goto	l14283
  8768  000E64  0012               	return	
  8769  000E66  D000               	goto	l14283
  8770  000E68                     l14283:
  8771                           
  8772                           ; BSR set to: 0
  8773                           ;MOTEapp.c: 820: {
  8774                           ;MOTEapp.c: 821: oled_clear();
  8775  000E68  ECA6  F038         	call	_oled_clear	;wreg free
  8776                           
  8777                           ;MOTEapp.c: 822: oled_putString("  Sensor Data  ",0,0);
  8778  000E6C  0E63               	movlw	low STR_102
  8779  000E6E  0100               	movlb	0	; () banked
  8780  000E70  6F71               	movwf	oled_putString@string& (0+255),b
  8781  000E72  0E7C               	movlw	high STR_102
  8782  000E74  0100               	movlb	0	; () banked
  8783  000E76  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8784  000E78  0E00               	movlw	0
  8785  000E7A  0100               	movlb	0	; () banked
  8786  000E7C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8787  000E7E  0E00               	movlw	0
  8788  000E80  0100               	movlb	0	; () banked
  8789  000E82  6F74               	movwf	oled_putString@start_page& (0+255),b
  8790  000E84  EC8D  F030         	call	_oled_putString	;wreg free
  8791                           
  8792                           ;MOTEapp.c: 823: oled_putString("    Display    ",0,1);
  8793  000E88  0E53               	movlw	low STR_103
  8794  000E8A  0100               	movlb	0	; () banked
  8795  000E8C  6F71               	movwf	oled_putString@string& (0+255),b
  8796  000E8E  0E7C               	movlw	high STR_103
  8797  000E90  0100               	movlb	0	; () banked
  8798  000E92  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8799  000E94  0E00               	movlw	0
  8800  000E96  0100               	movlb	0	; () banked
  8801  000E98  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8802  000E9A  0E01               	movlw	1
  8803  000E9C  0100               	movlb	0	; () banked
  8804  000E9E  6F74               	movwf	oled_putString@start_page& (0+255),b
  8805  000EA0  EC8D  F030         	call	_oled_putString	;wreg free
  8806                           
  8807                           ;MOTEapp.c: 824: oled_putString("(NAV)    (SEL) ",0,3);
  8808  000EA4  0E83               	movlw	low STR_77
  8809  000EA6  0100               	movlb	0	; () banked
  8810  000EA8  6F71               	movwf	oled_putString@string& (0+255),b
  8811  000EAA  0E7C               	movlw	high STR_77
  8812  000EAC  0100               	movlb	0	; () banked
  8813  000EAE  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8814  000EB0  0E00               	movlw	0
  8815  000EB2  0100               	movlb	0	; () banked
  8816  000EB4  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8817  000EB6  0E03               	movlw	3
  8818  000EB8  0100               	movlb	0	; () banked
  8819  000EBA  6F74               	movwf	oled_putString@start_page& (0+255),b
  8820  000EBC  EC8D  F030         	call	_oled_putString	;wreg free
  8821                           
  8822                           ;MOTEapp.c: 825: runningState = runningSensor;
  8823  000EC0  0E01               	movlw	1
  8824  000EC2  0100               	movlb	0	; () banked
  8825  000EC4  6FE9               	movwf	_runningState& (0+255),b
  8826                           
  8827                           ; BSR set to: 0
  8828                           ;MOTEapp.c: 826: }
  8829                           ;MOTEapp.c: 827: break;
  8830  000EC6  0012               	return	
  8831  000EC8                     l14293:
  8832                           
  8833                           ; BSR set to: 0
  8834                           ;MOTEapp.c: 829: if (changeStates)
  8835  000EC8  0100               	movlb	0	; () banked
  8836  000ECA  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8837  000ECC  0100               	movlb	0	; () banked
  8838  000ECE  B4D8               	btfsc	status,2,c
  8839  000ED0  D0B3               	goto	l14323
  8840                           
  8841                           ; BSR set to: 0
  8842                           ;MOTEapp.c: 830: {
  8843                           ;MOTEapp.c: 831: oled_clear();
  8844  000ED2  ECA6  F038         	call	_oled_clear	;wreg free
  8845                           
  8846                           ;MOTEapp.c: 832: oled_putString("Select Data Rate",0,0);
  8847  000ED6  0EED               	movlw	low STR_135
  8848  000ED8  0100               	movlb	0	; () banked
  8849  000EDA  6F71               	movwf	oled_putString@string& (0+255),b
  8850  000EDC  0E7B               	movlw	high STR_135
  8851  000EDE  0100               	movlb	0	; () banked
  8852  000EE0  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8853  000EE2  0E00               	movlw	0
  8854  000EE4  0100               	movlb	0	; () banked
  8855  000EE6  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8856  000EE8  0E00               	movlw	0
  8857  000EEA  0100               	movlb	0	; () banked
  8858  000EEC  6F74               	movwf	oled_putString@start_page& (0+255),b
  8859  000EEE  EC8D  F030         	call	_oled_putString	;wreg free
  8860                           
  8861                           ;MOTEapp.c: 833: oled_putString("Data Rate: ",0,2);
  8862  000EF2  0E58               	movlw	low STR_136
  8863  000EF4  0100               	movlb	0	; () banked
  8864  000EF6  6F71               	movwf	oled_putString@string& (0+255),b
  8865  000EF8  0E7E               	movlw	high STR_136
  8866  000EFA  0100               	movlb	0	; () banked
  8867  000EFC  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8868  000EFE  0E00               	movlw	0
  8869  000F00  0100               	movlb	0	; () banked
  8870  000F02  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8871  000F04  0E02               	movlw	2
  8872  000F06  0100               	movlb	0	; () banked
  8873  000F08  6F74               	movwf	oled_putString@start_page& (0+255),b
  8874  000F0A  EC8D  F030         	call	_oled_putString	;wreg free
  8875                           
  8876                           ;MOTEapp.c: 834: oled_putString("(NAV)    (CNG) ",0,3);
  8877  000F0E  0E73               	movlw	low STR_114
  8878  000F10  0100               	movlb	0	; () banked
  8879  000F12  6F71               	movwf	oled_putString@string& (0+255),b
  8880  000F14  0E7C               	movlw	high STR_114
  8881  000F16  0100               	movlb	0	; () banked
  8882  000F18  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8883  000F1A  0E00               	movlw	0
  8884  000F1C  0100               	movlb	0	; () banked
  8885  000F1E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8886  000F20  0E03               	movlw	3
  8887  000F22  0100               	movlb	0	; () banked
  8888  000F24  6F74               	movwf	oled_putString@start_page& (0+255),b
  8889  000F26  EC8D  F030         	call	_oled_putString	;wreg free
  8890                           
  8891                           ;MOTEapp.c: 835: runningState = runningDataRateDisplay;
  8892  000F2A  0E03               	movlw	3
  8893  000F2C  0100               	movlb	0	; () banked
  8894  000F2E  6FE9               	movwf	_runningState& (0+255),b
  8895                           
  8896                           ;MOTEapp.c: 838: switch (dataRateValue)
  8897  000F30  D06A               	goto	l14321
  8898                           
  8899                           ; BSR set to: 0
  8900                           
  8901                           ;MOTEapp.c: 839: {
  8902                           ;MOTEapp.c: 840: default:
  8903  000F32  D000               	goto	l14305
  8904  000F34                     l14305:
  8905                           
  8906                           ; BSR set to: 0
  8907                           ;MOTEapp.c: 842: oled_putString(" 0 ",10,2);
  8908  000F34  0EC7               	movlw	low STR_138
  8909  000F36  0100               	movlb	0	; () banked
  8910  000F38  6F71               	movwf	oled_putString@string& (0+255),b
  8911  000F3A  0E7F               	movlw	high STR_138
  8912  000F3C  0100               	movlb	0	; () banked
  8913  000F3E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8914  000F40  0E0A               	movlw	10
  8915  000F42  0100               	movlb	0	; () banked
  8916  000F44  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8917  000F46  0E02               	movlw	2
  8918  000F48  0100               	movlb	0	; () banked
  8919  000F4A  6F74               	movwf	oled_putString@start_page& (0+255),b
  8920  000F4C  EC8D  F030         	call	_oled_putString	;wreg free
  8921                           
  8922                           ;MOTEapp.c: 843: break;
  8923  000F50  D073               	goto	l14323
  8924  000F52                     l14307:
  8925                           
  8926                           ;MOTEapp.c: 845: oled_putString(" 1 ",10,2);
  8927  000F52  0ECB               	movlw	low STR_139
  8928  000F54  0100               	movlb	0	; () banked
  8929  000F56  6F71               	movwf	oled_putString@string& (0+255),b
  8930  000F58  0E7F               	movlw	high STR_139
  8931  000F5A  0100               	movlb	0	; () banked
  8932  000F5C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8933  000F5E  0E0A               	movlw	10
  8934  000F60  0100               	movlb	0	; () banked
  8935  000F62  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8936  000F64  0E02               	movlw	2
  8937  000F66  0100               	movlb	0	; () banked
  8938  000F68  6F74               	movwf	oled_putString@start_page& (0+255),b
  8939  000F6A  EC8D  F030         	call	_oled_putString	;wreg free
  8940                           
  8941                           ;MOTEapp.c: 846: break;
  8942  000F6E  D064               	goto	l14323
  8943  000F70                     l14309:
  8944                           
  8945                           ;MOTEapp.c: 848: oled_putString(" 2 ",10,2);
  8946  000F70  0ECF               	movlw	low STR_140
  8947  000F72  0100               	movlb	0	; () banked
  8948  000F74  6F71               	movwf	oled_putString@string& (0+255),b
  8949  000F76  0E7F               	movlw	high STR_140
  8950  000F78  0100               	movlb	0	; () banked
  8951  000F7A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8952  000F7C  0E0A               	movlw	10
  8953  000F7E  0100               	movlb	0	; () banked
  8954  000F80  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8955  000F82  0E02               	movlw	2
  8956  000F84  0100               	movlb	0	; () banked
  8957  000F86  6F74               	movwf	oled_putString@start_page& (0+255),b
  8958  000F88  EC8D  F030         	call	_oled_putString	;wreg free
  8959                           
  8960                           ;MOTEapp.c: 849: break;
  8961  000F8C  D055               	goto	l14323
  8962  000F8E                     l14311:
  8963                           
  8964                           ;MOTEapp.c: 851: oled_putString(" 3 ",10,2);
  8965  000F8E  0ED3               	movlw	low STR_141
  8966  000F90  0100               	movlb	0	; () banked
  8967  000F92  6F71               	movwf	oled_putString@string& (0+255),b
  8968  000F94  0E7F               	movlw	high STR_141
  8969  000F96  0100               	movlb	0	; () banked
  8970  000F98  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8971  000F9A  0E0A               	movlw	10
  8972  000F9C  0100               	movlb	0	; () banked
  8973  000F9E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8974  000FA0  0E02               	movlw	2
  8975  000FA2  0100               	movlb	0	; () banked
  8976  000FA4  6F74               	movwf	oled_putString@start_page& (0+255),b
  8977  000FA6  EC8D  F030         	call	_oled_putString	;wreg free
  8978                           
  8979                           ;MOTEapp.c: 852: break;
  8980  000FAA  D046               	goto	l14323
  8981  000FAC                     l14313:
  8982                           
  8983                           ;MOTEapp.c: 854: oled_putString(" 4 ",10,2);
  8984  000FAC  0ED7               	movlw	low STR_142
  8985  000FAE  0100               	movlb	0	; () banked
  8986  000FB0  6F71               	movwf	oled_putString@string& (0+255),b
  8987  000FB2  0E7F               	movlw	high STR_142
  8988  000FB4  0100               	movlb	0	; () banked
  8989  000FB6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8990  000FB8  0E0A               	movlw	10
  8991  000FBA  0100               	movlb	0	; () banked
  8992  000FBC  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8993  000FBE  0E02               	movlw	2
  8994  000FC0  0100               	movlb	0	; () banked
  8995  000FC2  6F74               	movwf	oled_putString@start_page& (0+255),b
  8996  000FC4  EC8D  F030         	call	_oled_putString	;wreg free
  8997                           
  8998                           ;MOTEapp.c: 855: break;
  8999  000FC8  D037               	goto	l14323
  9000  000FCA                     l14315:
  9001                           
  9002                           ;MOTEapp.c: 857: oled_putString(" 5 ",10,2);
  9003  000FCA  0EDB               	movlw	low STR_143
  9004  000FCC  0100               	movlb	0	; () banked
  9005  000FCE  6F71               	movwf	oled_putString@string& (0+255),b
  9006  000FD0  0E7F               	movlw	high STR_143
  9007  000FD2  0100               	movlb	0	; () banked
  9008  000FD4  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9009  000FD6  0E0A               	movlw	10
  9010  000FD8  0100               	movlb	0	; () banked
  9011  000FDA  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9012  000FDC  0E02               	movlw	2
  9013  000FDE  0100               	movlb	0	; () banked
  9014  000FE0  6F74               	movwf	oled_putString@start_page& (0+255),b
  9015  000FE2  EC8D  F030         	call	_oled_putString	;wreg free
  9016                           
  9017                           ;MOTEapp.c: 858: break;
  9018  000FE6  D028               	goto	l14323
  9019  000FE8                     l14317:
  9020                           
  9021                           ;MOTEapp.c: 860: oled_putString("ADR",10,2);
  9022  000FE8  0EF3               	movlw	low STR_144
  9023  000FEA  0100               	movlb	0	; () banked
  9024  000FEC  6F71               	movwf	oled_putString@string& (0+255),b
  9025  000FEE  0E7F               	movlw	high STR_144
  9026  000FF0  0100               	movlb	0	; () banked
  9027  000FF2  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9028  000FF4  0E0A               	movlw	10
  9029  000FF6  0100               	movlb	0	; () banked
  9030  000FF8  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9031  000FFA  0E02               	movlw	2
  9032  000FFC  0100               	movlb	0	; () banked
  9033  000FFE  6F74               	movwf	oled_putString@start_page& (0+255),b
  9034  001000  EC8D  F030         	call	_oled_putString	;wreg free
  9035                           
  9036                           ;MOTEapp.c: 862: }
  9037                           
  9038                           ;MOTEapp.c: 861: break;
  9039  001004  D019               	goto	l14323
  9040  001006                     l14321:
  9041  001006  0100               	movlb	0	; () banked
  9042  001008  51FB               	movf	_dataRateValue& (0+255),w,b
  9043                           
  9044                           ; Switch size 1, requested type "space"
  9045                           ; Number of cases is 7, Range of values is 0 to 6
  9046                           ; switch strategies available:
  9047                           ; Name         Instructions Cycles
  9048                           ; simple_byte           22    12 (average)
  9049                           ;	Chosen strategy is simple_byte
  9050  00100A  0A00               	xorlw	0	; case 0
  9051  00100C  B4D8               	btfsc	status,2,c
  9052  00100E  D792               	goto	l14305
  9053  001010  0A01               	xorlw	1	; case 1
  9054  001012  B4D8               	btfsc	status,2,c
  9055  001014  D79E               	goto	l14307
  9056  001016  0A03               	xorlw	3	; case 2
  9057  001018  B4D8               	btfsc	status,2,c
  9058  00101A  D7AA               	goto	l14309
  9059  00101C  0A01               	xorlw	1	; case 3
  9060  00101E  B4D8               	btfsc	status,2,c
  9061  001020  D7B6               	goto	l14311
  9062  001022  0A07               	xorlw	7	; case 4
  9063  001024  B4D8               	btfsc	status,2,c
  9064  001026  D7C2               	goto	l14313
  9065  001028  0A01               	xorlw	1	; case 5
  9066  00102A  B4D8               	btfsc	status,2,c
  9067  00102C  D7CE               	goto	l14315
  9068  00102E  0A03               	xorlw	3	; case 6
  9069  001030  B4D8               	btfsc	status,2,c
  9070  001032  D7DA               	goto	l14317
  9071  001034  D77F               	goto	l14305
  9072                           
  9073                           ; BSR set to: 0
  9074  001036  D000               	goto	l14323
  9075  001038                     l14323:
  9076                           
  9077                           ;MOTEapp.c: 863: }
  9078                           ;MOTEapp.c: 864: if (selectButton)
  9079  001038  0100               	movlb	0	; () banked
  9080  00103A  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9081  00103C  0100               	movlb	0	; () banked
  9082  00103E  B4D8               	btfsc	status,2,c
  9083  001040  0012               	return	
  9084                           
  9085                           ; BSR set to: 0
  9086                           ;MOTEapp.c: 865: {
  9087                           ;MOTEapp.c: 866: if (periodicUpValue < 5)
  9088  001042  0E05               	movlw	5
  9089  001044  0100               	movlb	0	; () banked
  9090  001046  61FD               	cpfslt	_periodicUpValue& (0+255),b
  9091  001048  D005               	goto	l14329
  9092  00104A  D001               	goto	l14327
  9093  00104C  D003               	goto	l14329
  9094  00104E                     l14327:
  9095                           
  9096                           ; BSR set to: 0
  9097                           ;MOTEapp.c: 867: {
  9098                           ;MOTEapp.c: 868: periodicUpValue++;
  9099  00104E  0100               	movlb	0	; () banked
  9100  001050  2BFD               	incf	_periodicUpValue& (0+255),f,b
  9101                           
  9102                           ;MOTEapp.c: 869: } else {
  9103  001052  D070               	goto	l14355
  9104  001054                     l14329:
  9105                           
  9106                           ; BSR set to: 0
  9107                           ;MOTEapp.c: 870: periodicUpValue = 0;
  9108  001054  0E00               	movlw	0
  9109  001056  0100               	movlb	0	; () banked
  9110  001058  6FFD               	movwf	_periodicUpValue& (0+255),b
  9111                           
  9112                           ; BSR set to: 0
  9113                           ;MOTEapp.c: 871: }
  9114                           ;MOTEapp.c: 873: switch (periodicUpValue)
  9115  00105A  D06C               	goto	l14355
  9116                           
  9117                           ; BSR set to: 0
  9118                           
  9119                           ;MOTEapp.c: 874: {
  9120                           ;MOTEapp.c: 875: default:
  9121  00105C  D000               	goto	l14331
  9122  00105E                     l14331:
  9123                           
  9124                           ; BSR set to: 0
  9125                           ;MOTEapp.c: 877: periodicTimerValue = 9;
  9126  00105E  0E09               	movlw	9
  9127  001060  0100               	movlb	0	; () banked
  9128  001062  6FFC               	movwf	_periodicTimerValue& (0+255),b
  9129                           
  9130                           ; BSR set to: 0
  9131                           ;MOTEapp.c: 878: oled_putString(" 5 ",7,2);
  9132  001064  0EDB               	movlw	low STR_143
  9133  001066  0100               	movlb	0	; () banked
  9134  001068  6F71               	movwf	oled_putString@string& (0+255),b
  9135  00106A  0E7F               	movlw	high STR_143
  9136  00106C  0100               	movlb	0	; () banked
  9137  00106E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9138  001070  0E07               	movlw	7
  9139  001072  0100               	movlb	0	; () banked
  9140  001074  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9141  001076  0E02               	movlw	2
  9142  001078  0100               	movlb	0	; () banked
  9143  00107A  6F74               	movwf	oled_putString@start_page& (0+255),b
  9144  00107C  EC8D  F030         	call	_oled_putString	;wreg free
  9145                           
  9146                           ;MOTEapp.c: 879: break;
  9147  001080  0012               	return	
  9148  001082                     l14335:
  9149                           
  9150                           ;MOTEapp.c: 881: periodicTimerValue = 18;
  9151  001082  0E12               	movlw	18
  9152  001084  0100               	movlb	0	; () banked
  9153  001086  6FFC               	movwf	_periodicTimerValue& (0+255),b
  9154                           
  9155                           ; BSR set to: 0
  9156                           ;MOTEapp.c: 882: oled_putString(" 10",7,2);
  9157  001088  0EDF               	movlw	low STR_146
  9158  00108A  0100               	movlb	0	; () banked
  9159  00108C  6F71               	movwf	oled_putString@string& (0+255),b
  9160  00108E  0E7F               	movlw	high STR_146
  9161  001090  0100               	movlb	0	; () banked
  9162  001092  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9163  001094  0E07               	movlw	7
  9164  001096  0100               	movlb	0	; () banked
  9165  001098  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9166  00109A  0E02               	movlw	2
  9167  00109C  0100               	movlb	0	; () banked
  9168  00109E  6F74               	movwf	oled_putString@start_page& (0+255),b
  9169  0010A0  EC8D  F030         	call	_oled_putString	;wreg free
  9170                           
  9171                           ;MOTEapp.c: 883: break;
  9172  0010A4  0012               	return	
  9173  0010A6                     l14339:
  9174                           
  9175                           ;MOTEapp.c: 885: periodicTimerValue = 27;
  9176  0010A6  0E1B               	movlw	27
  9177  0010A8  0100               	movlb	0	; () banked
  9178  0010AA  6FFC               	movwf	_periodicTimerValue& (0+255),b
  9179                           
  9180                           ; BSR set to: 0
  9181                           ;MOTEapp.c: 886: oled_putString(" 15",7,2);
  9182  0010AC  0EEB               	movlw	low STR_147
  9183  0010AE  0100               	movlb	0	; () banked
  9184  0010B0  6F71               	movwf	oled_putString@string& (0+255),b
  9185  0010B2  0E7F               	movlw	high STR_147
  9186  0010B4  0100               	movlb	0	; () banked
  9187  0010B6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9188  0010B8  0E07               	movlw	7
  9189  0010BA  0100               	movlb	0	; () banked
  9190  0010BC  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9191  0010BE  0E02               	movlw	2
  9192  0010C0  0100               	movlb	0	; () banked
  9193  0010C2  6F74               	movwf	oled_putString@start_page& (0+255),b
  9194  0010C4  EC8D  F030         	call	_oled_putString	;wreg free
  9195                           
  9196                           ;MOTEapp.c: 887: break;
  9197  0010C8  0012               	return	
  9198  0010CA                     l14343:
  9199                           
  9200                           ;MOTEapp.c: 889: periodicTimerValue = 54;
  9201  0010CA  0E36               	movlw	54
  9202  0010CC  0100               	movlb	0	; () banked
  9203  0010CE  6FFC               	movwf	_periodicTimerValue& (0+255),b
  9204                           
  9205                           ; BSR set to: 0
  9206                           ;MOTEapp.c: 890: oled_putString(" 30",7,2);
  9207  0010D0  0EE3               	movlw	low STR_148
  9208  0010D2  0100               	movlb	0	; () banked
  9209  0010D4  6F71               	movwf	oled_putString@string& (0+255),b
  9210  0010D6  0E7F               	movlw	high STR_148
  9211  0010D8  0100               	movlb	0	; () banked
  9212  0010DA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9213  0010DC  0E07               	movlw	7
  9214  0010DE  0100               	movlb	0	; () banked
  9215  0010E0  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9216  0010E2  0E02               	movlw	2
  9217  0010E4  0100               	movlb	0	; () banked
  9218  0010E6  6F74               	movwf	oled_putString@start_page& (0+255),b
  9219  0010E8  EC8D  F030         	call	_oled_putString	;wreg free
  9220                           
  9221                           ;MOTEapp.c: 891: break;
  9222  0010EC  0012               	return	
  9223  0010EE                     l14347:
  9224                           
  9225                           ;MOTEapp.c: 893: periodicTimerValue = 108;
  9226  0010EE  0E6C               	movlw	108
  9227  0010F0  0100               	movlb	0	; () banked
  9228  0010F2  6FFC               	movwf	_periodicTimerValue& (0+255),b
  9229                           
  9230                           ; BSR set to: 0
  9231                           ;MOTEapp.c: 894: oled_putString(" 60",7,2);
  9232  0010F4  0EE7               	movlw	low STR_149
  9233  0010F6  0100               	movlb	0	; () banked
  9234  0010F8  6F71               	movwf	oled_putString@string& (0+255),b
  9235  0010FA  0E7F               	movlw	high STR_149
  9236  0010FC  0100               	movlb	0	; () banked
  9237  0010FE  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9238  001100  0E07               	movlw	7
  9239  001102  0100               	movlb	0	; () banked
  9240  001104  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9241  001106  0E02               	movlw	2
  9242  001108  0100               	movlb	0	; () banked
  9243  00110A  6F74               	movwf	oled_putString@start_page& (0+255),b
  9244  00110C  EC8D  F030         	call	_oled_putString	;wreg free
  9245                           
  9246                           ;MOTEapp.c: 895: break;
  9247  001110  0012               	return	
  9248  001112                     l562:
  9249                           
  9250                           ; BSR set to: 0
  9251                           ;MOTEapp.c: 897: periodicTimerValue = 255;
  9252  001112  0100               	movlb	0	; () banked
  9253  001114  69FC               	setf	_periodicTimerValue& (0+255),b
  9254                           
  9255                           ; BSR set to: 0
  9256                           ;MOTEapp.c: 898: oled_putString("OFF",7,2);
  9257  001116  0EEF               	movlw	low STR_128
  9258  001118  0100               	movlb	0	; () banked
  9259  00111A  6F71               	movwf	oled_putString@string& (0+255),b
  9260  00111C  0E7F               	movlw	high STR_128
  9261  00111E  0100               	movlb	0	; () banked
  9262  001120  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9263  001122  0E07               	movlw	7
  9264  001124  0100               	movlb	0	; () banked
  9265  001126  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9266  001128  0E02               	movlw	2
  9267  00112A  0100               	movlb	0	; () banked
  9268  00112C  6F74               	movwf	oled_putString@start_page& (0+255),b
  9269  00112E  EC8D  F030         	call	_oled_putString	;wreg free
  9270                           
  9271                           ;MOTEapp.c: 900: }
  9272                           
  9273                           ;MOTEapp.c: 899: break;
  9274  001132  0012               	return	
  9275  001134                     l14355:
  9276  001134  0100               	movlb	0	; () banked
  9277  001136  51FD               	movf	_periodicUpValue& (0+255),w,b
  9278                           
  9279                           ; Switch size 1, requested type "space"
  9280                           ; Number of cases is 6, Range of values is 0 to 5
  9281                           ; switch strategies available:
  9282                           ; Name         Instructions Cycles
  9283                           ; simple_byte           19    10 (average)
  9284                           ;	Chosen strategy is simple_byte
  9285  001138  0A00               	xorlw	0	; case 0
  9286  00113A  B4D8               	btfsc	status,2,c
  9287  00113C  D790               	goto	l14331
  9288  00113E  0A01               	xorlw	1	; case 1
  9289  001140  B4D8               	btfsc	status,2,c
  9290  001142  D79F               	goto	l14335
  9291  001144  0A03               	xorlw	3	; case 2
  9292  001146  B4D8               	btfsc	status,2,c
  9293  001148  D7AE               	goto	l14339
  9294  00114A  0A01               	xorlw	1	; case 3
  9295  00114C  B4D8               	btfsc	status,2,c
  9296  00114E  D7BD               	goto	l14343
  9297  001150  0A07               	xorlw	7	; case 4
  9298  001152  B4D8               	btfsc	status,2,c
  9299  001154  D7CC               	goto	l14347
  9300  001156  0A01               	xorlw	1	; case 5
  9301  001158  B4D8               	btfsc	status,2,c
  9302  00115A  D7DB               	goto	l562
  9303  00115C  D780               	goto	l14331
  9304                           
  9305                           ; BSR set to: 0
  9306                           ;MOTEapp.c: 901: }
  9307                           ;MOTEapp.c: 902: break;
  9308                           
  9309                           ; BSR set to: 0
  9310  00115E  0012               	return	
  9311  001160                     l14357:
  9312                           
  9313                           ; BSR set to: 0
  9314                           ;MOTEapp.c: 904: if (changeStates)
  9315  001160  0100               	movlb	0	; () banked
  9316  001162  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  9317  001164  0100               	movlb	0	; () banked
  9318  001166  B4D8               	btfsc	status,2,c
  9319  001168  D026               	goto	l14369
  9320                           
  9321                           ; BSR set to: 0
  9322                           ;MOTEapp.c: 905: {
  9323                           ;MOTEapp.c: 907: MOTEapp_SetDataRateSetting(dataRateValue);
  9324  00116A  0100               	movlb	0	; () banked
  9325  00116C  51FB               	movf	_dataRateValue& (0+255),w,b
  9326  00116E  ECC9  F01A         	call	_MOTEapp_SetDataRateSetting
  9327                           
  9328                           ;MOTEapp.c: 909: oled_clear();
  9329  001172  ECA6  F038         	call	_oled_clear	;wreg free
  9330                           
  9331                           ;MOTEapp.c: 910: oled_putString("Enter Sleep Mode",0,0);
  9332  001176  0ECB               	movlw	low STR_151
  9333  001178  0100               	movlb	0	; () banked
  9334  00117A  6F71               	movwf	oled_putString@string& (0+255),b
  9335  00117C  0E7B               	movlw	high STR_151
  9336  00117E  0100               	movlb	0	; () banked
  9337  001180  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9338  001182  0E00               	movlw	0
  9339  001184  0100               	movlb	0	; () banked
  9340  001186  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9341  001188  0E00               	movlw	0
  9342  00118A  0100               	movlb	0	; () banked
  9343  00118C  6F74               	movwf	oled_putString@start_page& (0+255),b
  9344  00118E  EC8D  F030         	call	_oled_putString	;wreg free
  9345                           
  9346                           ;MOTEapp.c: 911: oled_putString("(NAV)    (SLP) ",0,3);
  9347  001192  0E93               	movlw	low STR_152
  9348  001194  0100               	movlb	0	; () banked
  9349  001196  6F71               	movwf	oled_putString@string& (0+255),b
  9350  001198  0E7C               	movlw	high STR_152
  9351  00119A  0100               	movlb	0	; () banked
  9352  00119C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9353  00119E  0E00               	movlw	0
  9354  0011A0  0100               	movlb	0	; () banked
  9355  0011A2  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9356  0011A4  0E03               	movlw	3
  9357  0011A6  0100               	movlb	0	; () banked
  9358  0011A8  6F74               	movwf	oled_putString@start_page& (0+255),b
  9359  0011AA  EC8D  F030         	call	_oled_putString	;wreg free
  9360                           
  9361                           ;MOTEapp.c: 912: runningState = runningSleep;
  9362  0011AE  0E0F               	movlw	15
  9363  0011B0  0100               	movlb	0	; () banked
  9364  0011B2  6FE9               	movwf	_runningState& (0+255),b
  9365  0011B4  D000               	goto	l14369
  9366  0011B6                     l14369:
  9367                           
  9368                           ; BSR set to: 0
  9369                           ;MOTEapp.c: 913: }
  9370                           ;MOTEapp.c: 914: if (selectButton)
  9371  0011B6  0100               	movlb	0	; () banked
  9372  0011B8  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9373  0011BA  0100               	movlb	0	; () banked
  9374  0011BC  B4D8               	btfsc	status,2,c
  9375  0011BE  0012               	return	
  9376                           
  9377                           ; BSR set to: 0
  9378                           ;MOTEapp.c: 915: {
  9379                           ;MOTEapp.c: 916: if (dataRateValue < 6)
  9380  0011C0  0E06               	movlw	6
  9381  0011C2  0100               	movlb	0	; () banked
  9382  0011C4  61FB               	cpfslt	_dataRateValue& (0+255),b
  9383  0011C6  D011               	goto	l14381
  9384  0011C8  D001               	goto	l14373
  9385  0011CA  D00F               	goto	l14381
  9386  0011CC                     l14373:
  9387                           
  9388                           ; BSR set to: 0
  9389                           ;MOTEapp.c: 917: {
  9390                           ;MOTEapp.c: 918: if ((rnModule == rn2903) && (dataRateValue > 3))
  9391  0011CC  0100               	movlb	0	; () banked
  9392  0011CE  05E2               	decf	_rnModule& (0+255),w,b
  9393  0011D0  A4D8               	btfss	status,2,c
  9394  0011D2  D008               	goto	l14379
  9395                           
  9396                           ; BSR set to: 0
  9397  0011D4  0E03               	movlw	3
  9398  0011D6  0100               	movlb	0	; () banked
  9399  0011D8  65FB               	cpfsgt	_dataRateValue& (0+255),b
  9400  0011DA  D004               	goto	l14379
  9401  0011DC  D001               	goto	l14377
  9402  0011DE  D002               	goto	l14379
  9403  0011E0                     l14377:
  9404                           
  9405                           ; BSR set to: 0
  9406                           ;MOTEapp.c: 919: dataRateValue = 6;
  9407  0011E0  0E06               	movlw	6
  9408  0011E2  D004               	goto	L5
  9409  0011E4                     l14379:
  9410                           
  9411                           ; BSR set to: 0
  9412                           ;MOTEapp.c: 920: else
  9413                           ;MOTEapp.c: 921: dataRateValue++;
  9414  0011E4  0100               	movlb	0	; () banked
  9415  0011E6  2BFB               	incf	_dataRateValue& (0+255),f,b
  9416                           
  9417                           ; BSR set to: 0
  9418                           ;MOTEapp.c: 922: }
  9419  0011E8  D06E               	goto	l14399
  9420  0011EA                     l14381:
  9421                           
  9422                           ; BSR set to: 0
  9423                           ;MOTEapp.c: 923: else {
  9424                           ;MOTEapp.c: 924: dataRateValue = 0;
  9425  0011EA  0E00               	movlw	0
  9426  0011EC                     L5:
  9427  0011EC  0100               	movlb	0	; () banked
  9428  0011EE  6FFB               	movwf	_dataRateValue& (0+255),b
  9429                           
  9430                           ; BSR set to: 0
  9431                           ;MOTEapp.c: 925: }
  9432                           ;MOTEapp.c: 927: switch (dataRateValue)
  9433  0011F0  D06A               	goto	l14399
  9434                           
  9435                           ; BSR set to: 0
  9436                           
  9437                           ;MOTEapp.c: 928: {
  9438                           ;MOTEapp.c: 929: default:
  9439  0011F2  D000               	goto	l14383
  9440  0011F4                     l14383:
  9441                           
  9442                           ; BSR set to: 0
  9443                           ;MOTEapp.c: 931: oled_putString(" 0 ",10,2);
  9444  0011F4  0EC7               	movlw	low STR_138
  9445  0011F6  0100               	movlb	0	; () banked
  9446  0011F8  6F71               	movwf	oled_putString@string& (0+255),b
  9447  0011FA  0E7F               	movlw	high STR_138
  9448  0011FC  0100               	movlb	0	; () banked
  9449  0011FE  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9450  001200  0E0A               	movlw	10
  9451  001202  0100               	movlb	0	; () banked
  9452  001204  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9453  001206  0E02               	movlw	2
  9454  001208  0100               	movlb	0	; () banked
  9455  00120A  6F74               	movwf	oled_putString@start_page& (0+255),b
  9456  00120C  EC8D  F030         	call	_oled_putString	;wreg free
  9457                           
  9458                           ;MOTEapp.c: 932: break;
  9459  001210  0012               	return	
  9460  001212                     l14385:
  9461                           
  9462                           ;MOTEapp.c: 934: oled_putString(" 1 ",10,2);
  9463  001212  0ECB               	movlw	low STR_139
  9464  001214  0100               	movlb	0	; () banked
  9465  001216  6F71               	movwf	oled_putString@string& (0+255),b
  9466  001218  0E7F               	movlw	high STR_139
  9467  00121A  0100               	movlb	0	; () banked
  9468  00121C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9469  00121E  0E0A               	movlw	10
  9470  001220  0100               	movlb	0	; () banked
  9471  001222  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9472  001224  0E02               	movlw	2
  9473  001226  0100               	movlb	0	; () banked
  9474  001228  6F74               	movwf	oled_putString@start_page& (0+255),b
  9475  00122A  EC8D  F030         	call	_oled_putString	;wreg free
  9476                           
  9477                           ;MOTEapp.c: 935: break;
  9478  00122E  0012               	return	
  9479  001230                     l14387:
  9480                           
  9481                           ;MOTEapp.c: 937: oled_putString(" 2 ",10,2);
  9482  001230  0ECF               	movlw	low STR_140
  9483  001232  0100               	movlb	0	; () banked
  9484  001234  6F71               	movwf	oled_putString@string& (0+255),b
  9485  001236  0E7F               	movlw	high STR_140
  9486  001238  0100               	movlb	0	; () banked
  9487  00123A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9488  00123C  0E0A               	movlw	10
  9489  00123E  0100               	movlb	0	; () banked
  9490  001240  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9491  001242  0E02               	movlw	2
  9492  001244  0100               	movlb	0	; () banked
  9493  001246  6F74               	movwf	oled_putString@start_page& (0+255),b
  9494  001248  EC8D  F030         	call	_oled_putString	;wreg free
  9495                           
  9496                           ;MOTEapp.c: 938: break;
  9497  00124C  0012               	return	
  9498  00124E                     l14389:
  9499                           
  9500                           ;MOTEapp.c: 940: oled_putString(" 3 ",10,2);
  9501  00124E  0ED3               	movlw	low STR_141
  9502  001250  0100               	movlb	0	; () banked
  9503  001252  6F71               	movwf	oled_putString@string& (0+255),b
  9504  001254  0E7F               	movlw	high STR_141
  9505  001256  0100               	movlb	0	; () banked
  9506  001258  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9507  00125A  0E0A               	movlw	10
  9508  00125C  0100               	movlb	0	; () banked
  9509  00125E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9510  001260  0E02               	movlw	2
  9511  001262  0100               	movlb	0	; () banked
  9512  001264  6F74               	movwf	oled_putString@start_page& (0+255),b
  9513  001266  EC8D  F030         	call	_oled_putString	;wreg free
  9514                           
  9515                           ;MOTEapp.c: 941: break;
  9516  00126A  0012               	return	
  9517  00126C                     l14391:
  9518                           
  9519                           ;MOTEapp.c: 943: oled_putString(" 4 ",10,2);
  9520  00126C  0ED7               	movlw	low STR_142
  9521  00126E  0100               	movlb	0	; () banked
  9522  001270  6F71               	movwf	oled_putString@string& (0+255),b
  9523  001272  0E7F               	movlw	high STR_142
  9524  001274  0100               	movlb	0	; () banked
  9525  001276  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9526  001278  0E0A               	movlw	10
  9527  00127A  0100               	movlb	0	; () banked
  9528  00127C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9529  00127E  0E02               	movlw	2
  9530  001280  0100               	movlb	0	; () banked
  9531  001282  6F74               	movwf	oled_putString@start_page& (0+255),b
  9532  001284  EC8D  F030         	call	_oled_putString	;wreg free
  9533                           
  9534                           ;MOTEapp.c: 944: break;
  9535  001288  0012               	return	
  9536  00128A                     l14393:
  9537                           
  9538                           ;MOTEapp.c: 946: oled_putString(" 5 ",10,2);
  9539  00128A  0EDB               	movlw	low STR_143
  9540  00128C  0100               	movlb	0	; () banked
  9541  00128E  6F71               	movwf	oled_putString@string& (0+255),b
  9542  001290  0E7F               	movlw	high STR_143
  9543  001292  0100               	movlb	0	; () banked
  9544  001294  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9545  001296  0E0A               	movlw	10
  9546  001298  0100               	movlb	0	; () banked
  9547  00129A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9548  00129C  0E02               	movlw	2
  9549  00129E  0100               	movlb	0	; () banked
  9550  0012A0  6F74               	movwf	oled_putString@start_page& (0+255),b
  9551  0012A2  EC8D  F030         	call	_oled_putString	;wreg free
  9552                           
  9553                           ;MOTEapp.c: 947: break;
  9554  0012A6  0012               	return	
  9555  0012A8                     l14395:
  9556                           
  9557                           ;MOTEapp.c: 949: oled_putString("ADR",10,2);
  9558  0012A8  0EF3               	movlw	low STR_144
  9559  0012AA  0100               	movlb	0	; () banked
  9560  0012AC  6F71               	movwf	oled_putString@string& (0+255),b
  9561  0012AE  0E7F               	movlw	high STR_144
  9562  0012B0  0100               	movlb	0	; () banked
  9563  0012B2  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9564  0012B4  0E0A               	movlw	10
  9565  0012B6  0100               	movlb	0	; () banked
  9566  0012B8  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9567  0012BA  0E02               	movlw	2
  9568  0012BC  0100               	movlb	0	; () banked
  9569  0012BE  6F74               	movwf	oled_putString@start_page& (0+255),b
  9570  0012C0  EC8D  F030         	call	_oled_putString	;wreg free
  9571                           
  9572                           ;MOTEapp.c: 951: }
  9573                           
  9574                           ;MOTEapp.c: 950: break;
  9575  0012C4  0012               	return	
  9576  0012C6                     l14399:
  9577  0012C6  0100               	movlb	0	; () banked
  9578  0012C8  51FB               	movf	_dataRateValue& (0+255),w,b
  9579                           
  9580                           ; Switch size 1, requested type "space"
  9581                           ; Number of cases is 7, Range of values is 0 to 6
  9582                           ; switch strategies available:
  9583                           ; Name         Instructions Cycles
  9584                           ; simple_byte           22    12 (average)
  9585                           ;	Chosen strategy is simple_byte
  9586  0012CA  0A00               	xorlw	0	; case 0
  9587  0012CC  B4D8               	btfsc	status,2,c
  9588  0012CE  D792               	goto	l14383
  9589  0012D0  0A01               	xorlw	1	; case 1
  9590  0012D2  B4D8               	btfsc	status,2,c
  9591  0012D4  D79E               	goto	l14385
  9592  0012D6  0A03               	xorlw	3	; case 2
  9593  0012D8  B4D8               	btfsc	status,2,c
  9594  0012DA  D7AA               	goto	l14387
  9595  0012DC  0A01               	xorlw	1	; case 3
  9596  0012DE  B4D8               	btfsc	status,2,c
  9597  0012E0  D7B6               	goto	l14389
  9598  0012E2  0A07               	xorlw	7	; case 4
  9599  0012E4  B4D8               	btfsc	status,2,c
  9600  0012E6  D7C2               	goto	l14391
  9601  0012E8  0A01               	xorlw	1	; case 5
  9602  0012EA  B4D8               	btfsc	status,2,c
  9603  0012EC  D7CE               	goto	l14393
  9604  0012EE  0A03               	xorlw	3	; case 6
  9605  0012F0  B4D8               	btfsc	status,2,c
  9606  0012F2  D7DA               	goto	l14395
  9607  0012F4  D77F               	goto	l14383
  9608                           
  9609                           ; BSR set to: 0
  9610                           ;MOTEapp.c: 952: }
  9611                           ;MOTEapp.c: 953: break;
  9612                           
  9613                           ; BSR set to: 0
  9614  0012F6  0012               	return	
  9615  0012F8                     l14401:
  9616                           
  9617                           ; BSR set to: 0
  9618                           ;MOTEapp.c: 955: if (selectButton)
  9619  0012F8  0100               	movlb	0	; () banked
  9620  0012FA  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9621  0012FC  0100               	movlb	0	; () banked
  9622  0012FE  B4D8               	btfsc	status,2,c
  9623  001300  D00D               	goto	l581
  9624                           
  9625                           ; BSR set to: 0
  9626                           ;MOTEapp.c: 956: {
  9627                           ;MOTEapp.c: 957: if( moteApp_GoToSleep() )
  9628  001302  ECF3  F022         	call	_moteApp_GoToSleep	;wreg free
  9629  001306  0900               	iorlw	0
  9630  001308  B4D8               	btfsc	status,2,c
  9631  00130A  D004               	goto	l14407
  9632                           
  9633                           ;MOTEapp.c: 958: {
  9634                           ;MOTEapp.c: 959: changeStates = 1;
  9635  00130C  0E01               	movlw	1
  9636  00130E  0100               	movlb	0	; () banked
  9637  001310  6FB5               	movwf	moteRunningProcess@changeStates& (0+255),b
  9638                           
  9639                           ;MOTEapp.c: 960: }
  9640  001312  D004               	goto	l581
  9641  001314                     l14407:
  9642                           
  9643                           ;MOTEapp.c: 961: else
  9644                           ;MOTEapp.c: 962: {
  9645                           ;MOTEapp.c: 963: secTicker = 10 - 1;
  9646  001314  0E09               	movlw	9
  9647  001316  0100               	movlb	0	; () banked
  9648  001318  6FE5               	movwf	_secTicker& (0+255),b
  9649  00131A  D000               	goto	l581
  9650  00131C                     l581:
  9651                           
  9652                           ; BSR set to: 0
  9653                           ;MOTEapp.c: 964: }
  9654                           ;MOTEapp.c: 965: }
  9655                           ;MOTEapp.c: 966: if (changeStates)
  9656  00131C  0100               	movlb	0	; () banked
  9657  00131E  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  9658  001320  0100               	movlb	0	; () banked
  9659  001322  B4D8               	btfsc	status,2,c
  9660  001324  0012               	return	
  9661                           
  9662                           ; BSR set to: 0
  9663                           ;MOTEapp.c: 967: {
  9664                           ;MOTEapp.c: 968: oled_clear();
  9665  001326  ECA6  F038         	call	_oled_clear	;wreg free
  9666                           
  9667                           ;MOTEapp.c: 969: oled_putString("  Issue Uplink  ",0,0);
  9668  00132A  0E21               	movlw	low STR_75
  9669  00132C  0100               	movlb	0	; () banked
  9670  00132E  6F71               	movwf	oled_putString@string& (0+255),b
  9671  001330  0E7B               	movlw	high STR_75
  9672  001332  0100               	movlb	0	; () banked
  9673  001334  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9674  001336  0E00               	movlw	0
  9675  001338  0100               	movlb	0	; () banked
  9676  00133A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9677  00133C  0E00               	movlw	0
  9678  00133E  0100               	movlb	0	; () banked
  9679  001340  6F74               	movwf	oled_putString@start_page& (0+255),b
  9680  001342  EC8D  F030         	call	_oled_putString	;wreg free
  9681                           
  9682                           ;MOTEapp.c: 970: oled_putString(" LoRaWAN Packet ",0,1);
  9683  001346  0E87               	movlw	low STR_76
  9684  001348  0100               	movlb	0	; () banked
  9685  00134A  6F71               	movwf	oled_putString@string& (0+255),b
  9686  00134C  0E7B               	movlw	high STR_76
  9687  00134E  0100               	movlb	0	; () banked
  9688  001350  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9689  001352  0E00               	movlw	0
  9690  001354  0100               	movlb	0	; () banked
  9691  001356  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9692  001358  0E01               	movlw	1
  9693  00135A  0100               	movlb	0	; () banked
  9694  00135C  6F74               	movwf	oled_putString@start_page& (0+255),b
  9695  00135E  EC8D  F030         	call	_oled_putString	;wreg free
  9696                           
  9697                           ;MOTEapp.c: 971: oled_putString("(NAV)    (SEL) ",0,3);
  9698  001362  0E83               	movlw	low STR_77
  9699  001364  0100               	movlb	0	; () banked
  9700  001366  6F71               	movwf	oled_putString@string& (0+255),b
  9701  001368  0E7C               	movlw	high STR_77
  9702  00136A  0100               	movlb	0	; () banked
  9703  00136C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9704  00136E  0E00               	movlw	0
  9705  001370  0100               	movlb	0	; () banked
  9706  001372  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9707  001374  0E03               	movlw	3
  9708  001376  0100               	movlb	0	; () banked
  9709  001378  6F74               	movwf	oled_putString@start_page& (0+255),b
  9710  00137A  EC8D  F030         	call	_oled_putString	;wreg free
  9711                           
  9712                           ;MOTEapp.c: 972: runningState = runningUplink;
  9713  00137E  0E06               	movlw	6
  9714  001380  0100               	movlb	0	; () banked
  9715  001382  6FE9               	movwf	_runningState& (0+255),b
  9716                           
  9717                           ; BSR set to: 0
  9718                           ;MOTEapp.c: 975: }
  9719                           
  9720                           ; BSR set to: 0
  9721                           ;MOTEapp.c: 973: }
  9722                           ;MOTEapp.c: 974: break;
  9723  001384  0012               	return	
  9724  001386                     l14421:
  9725                           
  9726                           ; BSR set to: 0
  9727  001386  0100               	movlb	0	; () banked
  9728  001388  51E9               	movf	_runningState& (0+255),w,b
  9729                           
  9730                           ; Switch size 1, requested type "space"
  9731                           ; Number of cases is 12, Range of values is 0 to 15
  9732                           ; switch strategies available:
  9733                           ; Name         Instructions Cycles
  9734                           ; simple_byte           37    19 (average)
  9735                           ;	Chosen strategy is simple_byte
  9736  00138A  0A00               	xorlw	0	; case 0
  9737  00138C  B4D8               	btfsc	status,2,c
  9738  00138E  EFA1  F001         	goto	l13963
  9739  001392  0A01               	xorlw	1	; case 1
  9740  001394  B4D8               	btfsc	status,2,c
  9741  001396  EFAC  F005         	goto	l14205
  9742  00139A  0A03               	xorlw	3	; case 2
  9743  00139C  B4D8               	btfsc	status,2,c
  9744  00139E  D558               	goto	l14279
  9745  0013A0  0A01               	xorlw	1	; case 3
  9746  0013A2  B4D8               	btfsc	status,2,c
  9747  0013A4  D6DD               	goto	l14357
  9748  0013A6  0A05               	xorlw	5	; case 6
  9749  0013A8  B4D8               	btfsc	status,2,c
  9750  0013AA  EFDD  F001         	goto	l13977
  9751  0013AE  0A01               	xorlw	1	; case 7
  9752  0013B0  B4D8               	btfsc	status,2,c
  9753  0013B2  EFCA  F002         	goto	l14049
  9754  0013B6  0A0F               	xorlw	15	; case 8
  9755  0013B8  B4D8               	btfsc	status,2,c
  9756  0013BA  EF57  F003         	goto	l14079
  9757  0013BE  0A02               	xorlw	2	; case 10
  9758  0013C0  B4D8               	btfsc	status,2,c
  9759  0013C2  EFDB  F004         	goto	l14159
  9760  0013C6  0A01               	xorlw	1	; case 11
  9761  0013C8  B4D8               	btfsc	status,2,c
  9762  0013CA  EF70  F005         	goto	l14191
  9763  0013CE  0A07               	xorlw	7	; case 12
  9764  0013D0  B4D8               	btfsc	status,2,c
  9765  0013D2  D44F               	goto	l14235
  9766  0013D4  0A01               	xorlw	1	; case 13
  9767  0013D6  B4D8               	btfsc	status,2,c
  9768  0013D8  D577               	goto	l14293
  9769  0013DA  0A02               	xorlw	2	; case 15
  9770  0013DC  B4D8               	btfsc	status,2,c
  9771  0013DE  D78C               	goto	l14401
  9772  0013E0  EF9F  F001         	goto	l467
  9773                           
  9774                           ; BSR set to: 0
  9775                           ;MOTEapp.c: 976: return runningState;
  9776                           ;	Return value of _moteRunningProcess is never used
  9777  0013E4  0012               	return		;funcret
  9778  0013E6                     __end_of_moteRunningProcess:
  9779                           	opt stack 0
  9780                           tblptru	equ	0xFF8
  9781                           tblptrh	equ	0xFF7
  9782                           tblptrl	equ	0xFF6
  9783                           tablat	equ	0xFF5
  9784                           prodh	equ	0xFF4
  9785                           prodl	equ	0xFF3
  9786                           intcon	equ	0xFF2
  9787                           postinc0	equ	0xFEE
  9788                           wreg	equ	0xFE8
  9789                           indf1	equ	0xFE7
  9790                           postdec1	equ	0xFE5
  9791                           fsr1h	equ	0xFE2
  9792                           fsr1l	equ	0xFE1
  9793                           indf2	equ	0xFDF
  9794                           fsr2h	equ	0xFDA
  9795                           fsr2l	equ	0xFD9
  9796                           status	equ	0xFD8
  9797                           
  9798 ;; *************** function _sendDataCommand *****************
  9799 ;; Defined at:
  9800 ;;		line 1122 in file "../Includes/Board/MOTEapp.c"
  9801 ;; Parameters:    Size  Location     Type
  9802 ;;  string          2    1[BANK0 ] PTR const unsigned char 
  9803 ;;		 -> STR_85(12), STR_84(14), STR_74(14), 
  9804 ;;  appData         2    3[BANK0 ] PTR unsigned char 
  9805 ;;		 -> dataBuffer(16), 
  9806 ;;  dataLength      1    5[BANK0 ] unsigned char 
  9807 ;; Auto vars:     Size  Location     Type
  9808 ;;  byteCount       1    8[BANK0 ] unsigned char 
  9809 ;;  byteCount       1    7[BANK0 ] unsigned char 
  9810 ;; Return value:  Size  Location     Type
  9811 ;;                  1    wreg      void 
  9812 ;; Registers used:
  9813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9814 ;; Tracked objects:
  9815 ;;		On entry : 0/0
  9816 ;;		On exit  : 0/0
  9817 ;;		Unchanged: 0/0
  9818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9819 ;;      Params:         0       5       0       0       0       0       0       0       0
  9820 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9821 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9822 ;;      Totals:         0       8       0       0       0       0       0       0       0
  9823 ;;Total ram usage:        8 bytes
  9824 ;; Hardware stack levels used:    1
  9825 ;; Hardware stack levels required when called:   13
  9826 ;; This function calls:
  9827 ;;		_EUSART_Write
  9828 ;;		_EndLine
  9829 ;;		_hexToStr
  9830 ;; This function is called by:
  9831 ;;		_moteRunningProcess
  9832 ;; This function uses a non-reentrant model
  9833 ;;
  9834                           
  9835                           	psect	text11
  9836  0048FA                     __ptext11:
  9837                           	opt stack 0
  9838  0048FA                     _sendDataCommand:
  9839                           	opt stack 15
  9840                           
  9841                           ;MOTEapp.c: 1125: while (*string)
  9842                           
  9843                           ;incstack = 0
  9844  0048FA  D00C               	goto	l13163
  9845  0048FC                     l13159:
  9846                           
  9847                           ;MOTEapp.c: 1126: {
  9848                           ;MOTEapp.c: 1127: EUSART_Write(*string++);
  9849  0048FC  C061  FFF6         	movff	sendDataCommand@string,tblptrl
  9850  004900  C062  FFF7         	movff	sendDataCommand@string+1,tblptrh
  9851  004904                     	if	0	;tblptru may be non-zero
  9852  004904                     	endif
  9853  004904                     	if	0	;tblptru may be non-zero
  9854  004904                     	endif
  9855  004904  0008               	tblrd		*
  9856  004906  50F5               	movf	tablat,w,c
  9857  004908  ECC8  F034         	call	_EUSART_Write
  9858  00490C  0100               	movlb	0	; () banked
  9859  00490E  4B61               	infsnz	sendDataCommand@string& (0+255),f,b
  9860  004910  2B62               	incf	(sendDataCommand@string+1)& (0+255),f,b
  9861  004912  D000               	goto	l13163
  9862  004914                     l13163:
  9863  004914  C061  FFF6         	movff	sendDataCommand@string,tblptrl
  9864  004918  C062  FFF7         	movff	sendDataCommand@string+1,tblptrh
  9865  00491C                     	if	0	;tblptru may be non-zero
  9866  00491C                     	endif
  9867  00491C                     	if	0	;tblptru may be non-zero
  9868  00491C                     	endif
  9869  00491C  0008               	tblrd		*
  9870  00491E  50F5               	movf	tablat,w,c
  9871  004920  0900               	iorlw	0
  9872  004922  A4D8               	btfss	status,2,c
  9873  004924  D001               	goto	u12561
  9874  004926  D001               	goto	u12560
  9875  004928                     u12561:
  9876  004928  D7E9               	goto	l13159
  9877  00492A                     u12560:
  9878  00492A  D000               	goto	l13165
  9879  00492C                     l13165:
  9880                           
  9881                           ;MOTEapp.c: 1128: }
  9882                           ;MOTEapp.c: 1130: for (uint8_t byteCount = 0; byteCount < 3; byteCount++)
  9883  00492C  0E00               	movlw	0
  9884  00492E  0100               	movlb	0	; () banked
  9885  004930  6F67               	movwf	sendDataCommand@byteCount& (0+255),b
  9886                           
  9887                           ; BSR set to: 0
  9888  004932  0E02               	movlw	2
  9889  004934  0100               	movlb	0	; () banked
  9890  004936  6567               	cpfsgt	sendDataCommand@byteCount& (0+255),b
  9891  004938  D001               	goto	u12571
  9892  00493A  D001               	goto	u12570
  9893  00493C                     u12571:
  9894  00493C  D002               	goto	l13171
  9895  00493E                     u12570:
  9896  00493E  D018               	goto	l13177
  9897                           
  9898                           ; BSR set to: 0
  9899  004940  D017               	goto	l13177
  9900  004942                     l13171:
  9901                           
  9902                           ; BSR set to: 0
  9903                           ;MOTEapp.c: 1131: {
  9904                           ;MOTEapp.c: 1132: EUSART_Write(appData[byteCount]);
  9905  004942  0100               	movlb	0	; () banked
  9906  004944  5167               	movf	sendDataCommand@byteCount& (0+255),w,b
  9907  004946  0D01               	mullw	1
  9908  004948  50F3               	movf	prodl,w,c
  9909  00494A  0100               	movlb	0	; () banked
  9910  00494C  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  9911  00494E  6ED9               	movwf	fsr2l,c
  9912  004950  50F4               	movf	prodh,w,c
  9913  004952  0100               	movlb	0	; () banked
  9914  004954  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  9915  004956  6EDA               	movwf	fsr2h,c
  9916  004958  50DF               	movf	indf2,w,c
  9917  00495A  ECC8  F034         	call	_EUSART_Write
  9918  00495E  0100               	movlb	0	; () banked
  9919  004960  2B67               	incf	sendDataCommand@byteCount& (0+255),f,b
  9920                           
  9921                           ; BSR set to: 0
  9922  004962  0E02               	movlw	2
  9923  004964  0100               	movlb	0	; () banked
  9924  004966  6567               	cpfsgt	sendDataCommand@byteCount& (0+255),b
  9925  004968  D001               	goto	u12581
  9926  00496A  D001               	goto	u12580
  9927  00496C                     u12581:
  9928  00496C  D7EA               	goto	l13171
  9929  00496E                     u12580:
  9930  00496E  D000               	goto	l13177
  9931  004970                     l13177:
  9932                           
  9933                           ; BSR set to: 0
  9934                           ;MOTEapp.c: 1133: }
  9935                           ;MOTEapp.c: 1135: EUSART_Write(appData[3]);
  9936  004970  0100               	movlb	0	; () banked
  9937  004972  EE20 F003          	lfsr	2,3
  9938  004976  5163               	movf	sendDataCommand@appData& (0+255),w,b
  9939  004978  26D9               	addwf	fsr2l,f,c
  9940  00497A  5164               	movf	(sendDataCommand@appData+1)& (0+255),w,b
  9941  00497C  22DA               	addwfc	fsr2h,f,c
  9942  00497E  50DF               	movf	indf2,w,c
  9943  004980  ECC8  F034         	call	_EUSART_Write
  9944                           
  9945                           ;MOTEapp.c: 1137: for (uint8_t byteCount = 4; byteCount < dataLength; byteCount++)
  9946  004984  0E04               	movlw	4
  9947  004986  0100               	movlb	0	; () banked
  9948  004988  6F68               	movwf	sendDataCommand@byteCount_1623& (0+255),b
  9949  00498A  D029               	goto	l13185
  9950  00498C                     l13181:
  9951                           
  9952                           ; BSR set to: 0
  9953                           ;MOTEapp.c: 1138: {
  9954                           ;MOTEapp.c: 1139: EUSART_Write(hexToStr(appData[byteCount] >> 4));
  9955  00498C  0100               	movlb	0	; () banked
  9956  00498E  5168               	movf	sendDataCommand@byteCount_1623& (0+255),w,b
  9957  004990  0D01               	mullw	1
  9958  004992  50F3               	movf	prodl,w,c
  9959  004994  0100               	movlb	0	; () banked
  9960  004996  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  9961  004998  6ED9               	movwf	fsr2l,c
  9962  00499A  50F4               	movf	prodh,w,c
  9963  00499C  0100               	movlb	0	; () banked
  9964  00499E  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  9965  0049A0  6EDA               	movwf	fsr2h,c
  9966  0049A2  50DF               	movf	indf2,w,c
  9967  0049A4  0100               	movlb	0	; () banked
  9968  0049A6  6F66               	movwf	??_sendDataCommand& (0+255),b
  9969  0049A8  0100               	movlb	0	; () banked
  9970  0049AA  3966               	swapf	??_sendDataCommand& (0+255),w,b
  9971  0049AC  0B0F               	andlw	15
  9972  0049AE  EC20  F035         	call	_hexToStr
  9973  0049B2  ECC8  F034         	call	_EUSART_Write
  9974                           
  9975                           ;MOTEapp.c: 1140: EUSART_Write(hexToStr(appData[byteCount] & 0x0F));
  9976  0049B6  0100               	movlb	0	; () banked
  9977  0049B8  5168               	movf	sendDataCommand@byteCount_1623& (0+255),w,b
  9978  0049BA  0D01               	mullw	1
  9979  0049BC  50F3               	movf	prodl,w,c
  9980  0049BE  0100               	movlb	0	; () banked
  9981  0049C0  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  9982  0049C2  6ED9               	movwf	fsr2l,c
  9983  0049C4  50F4               	movf	prodh,w,c
  9984  0049C6  0100               	movlb	0	; () banked
  9985  0049C8  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  9986  0049CA  6EDA               	movwf	fsr2h,c
  9987  0049CC  50DF               	movf	indf2,w,c
  9988  0049CE  0B0F               	andlw	15
  9989  0049D0  EC20  F035         	call	_hexToStr
  9990  0049D4  ECC8  F034         	call	_EUSART_Write
  9991  0049D8  0100               	movlb	0	; () banked
  9992  0049DA  2B68               	incf	sendDataCommand@byteCount_1623& (0+255),f,b
  9993  0049DC  D000               	goto	l13185
  9994  0049DE                     l13185:
  9995                           
  9996                           ; BSR set to: 0
  9997  0049DE  0100               	movlb	0	; () banked
  9998  0049E0  5165               	movf	sendDataCommand@dataLength& (0+255),w,b
  9999  0049E2  0100               	movlb	0	; () banked
 10000  0049E4  5D68               	subwf	sendDataCommand@byteCount_1623& (0+255),w,b
 10001  0049E6  A0D8               	btfss	status,0,c
 10002  0049E8  D001               	goto	u12591
 10003  0049EA  D001               	goto	u12590
 10004  0049EC                     u12591:
 10005  0049EC  D7CF               	goto	l13181
 10006  0049EE                     u12590:
 10007  0049EE  D000               	goto	l13187
 10008  0049F0                     l13187:
 10009                           
 10010                           ; BSR set to: 0
 10011                           ;MOTEapp.c: 1141: }
 10012                           ;MOTEapp.c: 1142: EndLine();
 10013  0049F0  EC3C  F039         	call	_EndLine	;wreg free
 10014  0049F4  0012               	return		;funcret
 10015  0049F6                     __end_of_sendDataCommand:
 10016                           	opt stack 0
 10017                           tblptru	equ	0xFF8
 10018                           tblptrh	equ	0xFF7
 10019                           tblptrl	equ	0xFF6
 10020                           tablat	equ	0xFF5
 10021                           prodh	equ	0xFF4
 10022                           prodl	equ	0xFF3
 10023                           intcon	equ	0xFF2
 10024                           postinc0	equ	0xFEE
 10025                           wreg	equ	0xFE8
 10026                           indf1	equ	0xFE7
 10027                           postdec1	equ	0xFE5
 10028                           fsr1h	equ	0xFE2
 10029                           fsr1l	equ	0xFE1
 10030                           indf2	equ	0xFDF
 10031                           fsr2h	equ	0xFDA
 10032                           fsr2l	equ	0xFD9
 10033                           status	equ	0xFD8
 10034                           
 10035 ;; *************** function _hexToStr *****************
 10036 ;; Defined at:
 10037 ;;		line 1154 in file "../Includes/Board/MOTEapp.c"
 10038 ;; Parameters:    Size  Location     Type
 10039 ;;  character       1    wreg     unsigned char 
 10040 ;; Auto vars:     Size  Location     Type
 10041 ;;  character       1    0[BANK0 ] unsigned char 
 10042 ;; Return value:  Size  Location     Type
 10043 ;;                  1    wreg      unsigned char 
 10044 ;; Registers used:
 10045 ;;		wreg, status,2, status,0
 10046 ;; Tracked objects:
 10047 ;;		On entry : 0/0
 10048 ;;		On exit  : 0/0
 10049 ;;		Unchanged: 0/0
 10050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10051 ;;      Params:         0       0       0       0       0       0       0       0       0
 10052 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10053 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10054 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10055 ;;Total ram usage:        1 bytes
 10056 ;; Hardware stack levels used:    1
 10057 ;; Hardware stack levels required when called:   11
 10058 ;; This function calls:
 10059 ;;		Nothing
 10060 ;; This function is called by:
 10061 ;;		_sendDataCommand
 10062 ;; This function uses a non-reentrant model
 10063 ;;
 10064                           
 10065                           	psect	text12
 10066  006A40                     __ptext12:
 10067                           	opt stack 0
 10068  006A40                     _hexToStr:
 10069                           	opt stack 16
 10070                           
 10071                           ;incstack = 0
 10072                           ;hexToStr@character stored from wreg
 10073  006A40  0100               	movlb	0	; () banked
 10074  006A42  6F60               	movwf	hexToStr@character& (0+255),b
 10075                           
 10076                           ;MOTEapp.c: 1157: character = character & 0x0F;
 10077  006A44  0100               	movlb	0	; () banked
 10078  006A46  5160               	movf	hexToStr@character& (0+255),w,b
 10079  006A48  0B0F               	andlw	15
 10080  006A4A  0100               	movlb	0	; () banked
 10081  006A4C  6F60               	movwf	hexToStr@character& (0+255),b
 10082                           
 10083                           ;MOTEapp.c: 1159: if (character < 0x0A)
 10084  006A4E  0E0A               	movlw	10
 10085  006A50  0100               	movlb	0	; () banked
 10086  006A52  6160               	cpfslt	hexToStr@character& (0+255),b
 10087  006A54  D001               	goto	u11061
 10088  006A56  D001               	goto	u11060
 10089  006A58                     u11061:
 10090  006A58  D006               	goto	l12157
 10091  006A5A                     u11060:
 10092                           
 10093                           ; BSR set to: 0
 10094                           ;MOTEapp.c: 1160: {
 10095                           ;MOTEapp.c: 1161: return character + '0';
 10096  006A5A  0100               	movlb	0	; () banked
 10097  006A5C  5160               	movf	hexToStr@character& (0+255),w,b
 10098  006A5E  0F30               	addlw	48
 10099  006A60  D018               	goto	l657
 10100                           
 10101                           ; BSR set to: 0
 10102  006A62  D017               	goto	l657
 10103                           
 10104                           ; BSR set to: 0
 10105                           ;MOTEapp.c: 1162: }
 10106  006A64  D016               	goto	l657
 10107  006A66                     l12157:
 10108                           
 10109                           ; BSR set to: 0
 10110                           ;MOTEapp.c: 1163: else if ( (character >= 0x0A) && (character <= 0x0F) )
 10111  006A66  0E09               	movlw	9
 10112  006A68  0100               	movlb	0	; () banked
 10113  006A6A  6560               	cpfsgt	hexToStr@character& (0+255),b
 10114  006A6C  D001               	goto	u11071
 10115  006A6E  D001               	goto	u11070
 10116  006A70                     u11071:
 10117  006A70  D00C               	goto	l12167
 10118  006A72                     u11070:
 10119                           
 10120                           ; BSR set to: 0
 10121  006A72  0E10               	movlw	16
 10122  006A74  0100               	movlb	0	; () banked
 10123  006A76  6160               	cpfslt	hexToStr@character& (0+255),b
 10124  006A78  D001               	goto	u11081
 10125  006A7A  D001               	goto	u11080
 10126  006A7C                     u11081:
 10127  006A7C  D006               	goto	l12167
 10128  006A7E                     u11080:
 10129                           
 10130                           ; BSR set to: 0
 10131                           ;MOTEapp.c: 1164: {
 10132                           ;MOTEapp.c: 1165: return character + '0' + 7;
 10133  006A7E  0100               	movlb	0	; () banked
 10134  006A80  5160               	movf	hexToStr@character& (0+255),w,b
 10135  006A82  0F37               	addlw	55
 10136  006A84  D006               	goto	l657
 10137                           
 10138                           ; BSR set to: 0
 10139  006A86  D005               	goto	l657
 10140                           
 10141                           ; BSR set to: 0
 10142                           ;MOTEapp.c: 1166: }
 10143  006A88  D004               	goto	l657
 10144  006A8A                     l12167:
 10145                           
 10146                           ; BSR set to: 0
 10147                           ;MOTEapp.c: 1167: else
 10148                           ;MOTEapp.c: 1168: {
 10149                           ;MOTEapp.c: 1169: return 0;
 10150  006A8A  0E00               	movlw	0
 10151  006A8C  D002               	goto	l657
 10152                           
 10153                           ; BSR set to: 0
 10154  006A8E  D001               	goto	l657
 10155                           
 10156                           ; BSR set to: 0
 10157  006A90  D000               	goto	l657
 10158  006A92                     l657:
 10159                           
 10160                           ; BSR set to: 0
 10161  006A92  0012               	return		;funcret
 10162  006A94                     __end_of_hexToStr:
 10163                           	opt stack 0
 10164                           tblptru	equ	0xFF8
 10165                           tblptrh	equ	0xFF7
 10166                           tblptrl	equ	0xFF6
 10167                           tablat	equ	0xFF5
 10168                           prodh	equ	0xFF4
 10169                           prodl	equ	0xFF3
 10170                           intcon	equ	0xFF2
 10171                           postinc0	equ	0xFEE
 10172                           wreg	equ	0xFE8
 10173                           indf1	equ	0xFE7
 10174                           postdec1	equ	0xFE5
 10175                           fsr1h	equ	0xFE2
 10176                           fsr1l	equ	0xFE1
 10177                           indf2	equ	0xFDF
 10178                           fsr2h	equ	0xFDA
 10179                           fsr2l	equ	0xFD9
 10180                           status	equ	0xFD8
 10181                           
 10182 ;; *************** function _oled_putint8 *****************
 10183 ;; Defined at:
 10184 ;;		line 278 in file "../Includes/Drivers/SSD1306oLED.c"
 10185 ;; Parameters:    Size  Location     Type
 10186 ;;  number          1    wreg     unsigned char 
 10187 ;;  station_dot     1   22[BANK0 ] unsigned char 
 10188 ;;  start_page      1   23[BANK0 ] unsigned char 
 10189 ;; Auto vars:     Size  Location     Type
 10190 ;;  number          1   31[BANK0 ] unsigned char 
 10191 ;;  numData         6   25[BANK0 ] struct .
 10192 ;;  negative        1   24[BANK0 ] unsigned char 
 10193 ;; Return value:  Size  Location     Type
 10194 ;;                  1    wreg      void 
 10195 ;; Registers used:
 10196 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10197 ;; Tracked objects:
 10198 ;;		On entry : 0/0
 10199 ;;		On exit  : 0/0
 10200 ;;		Unchanged: 0/0
 10201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10202 ;;      Params:         0       2       0       0       0       0       0       0       0
 10203 ;;      Locals:         0       8       0       0       0       0       0       0       0
 10204 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10205 ;;      Totals:         0      10       0       0       0       0       0       0       0
 10206 ;;Total ram usage:       10 bytes
 10207 ;; Hardware stack levels used:    1
 10208 ;; Hardware stack levels required when called:   15
 10209 ;; This function calls:
 10210 ;;		___awmod
 10211 ;;		___lbdiv
 10212 ;;		_oled_putString
 10213 ;; This function is called by:
 10214 ;;		_moteHandler
 10215 ;;		_moteRunningProcess
 10216 ;;		_moteApp_testSensors
 10217 ;; This function uses a non-reentrant model
 10218 ;;
 10219                           
 10220                           	psect	text13
 10221  005534                     __ptext13:
 10222                           	opt stack 0
 10223  005534                     _oled_putint8:
 10224                           	opt stack 13
 10225                           
 10226                           ; BSR set to: 0
 10227                           ;incstack = 0
 10228                           ;oled_putint8@number stored from wreg
 10229  005534  0100               	movlb	0	; () banked
 10230  005536  6F7F               	movwf	oled_putint8@number& (0+255),b
 10231                           
 10232                           ;SSD1306oLED.c: 280: display_data_t numData;
 10233                           ;SSD1306oLED.c: 281: bool negative = 0;
 10234  005538  0E00               	movlw	0
 10235  00553A  0100               	movlb	0	; () banked
 10236  00553C  6F78               	movwf	oled_putint8@negative& (0+255),b
 10237                           
 10238                           ; BSR set to: 0
 10239                           ;SSD1306oLED.c: 283: if(number & 0x80)
 10240  00553E  0100               	movlb	0	; () banked
 10241  005540  AF7F               	btfss	oled_putint8@number& (0+255),7,b
 10242  005542  D001               	goto	u12341
 10243  005544  D001               	goto	u12340
 10244  005546                     u12341:
 10245  005546  D004               	goto	l12993
 10246  005548                     u12340:
 10247                           
 10248                           ; BSR set to: 0
 10249                           ;SSD1306oLED.c: 284: negative = 1;
 10250  005548  0E01               	movlw	1
 10251  00554A  0100               	movlb	0	; () banked
 10252  00554C  6F78               	movwf	oled_putint8@negative& (0+255),b
 10253  00554E  D000               	goto	l12993
 10254  005550                     l12993:
 10255                           
 10256                           ; BSR set to: 0
 10257                           ;SSD1306oLED.c: 285: number = (number & 0x7F);
 10258  005550  0100               	movlb	0	; () banked
 10259  005552  517F               	movf	oled_putint8@number& (0+255),w,b
 10260  005554  0B7F               	andlw	127
 10261  005556  0100               	movlb	0	; () banked
 10262  005558  6F7F               	movwf	oled_putint8@number& (0+255),b
 10263                           
 10264                           ; BSR set to: 0
 10265                           ;SSD1306oLED.c: 287: numData.d2 = '0' + (number % 10);
 10266  00555A  C07F  F060         	movff	oled_putint8@number,___awmod@dividend
 10267  00555E  0100               	movlb	0	; () banked
 10268  005560  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10269  005562  0E00               	movlw	0
 10270  005564  0100               	movlb	0	; () banked
 10271  005566  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10272  005568  0E0A               	movlw	10
 10273  00556A  6F62               	movwf	___awmod@divisor& (0+255),b
 10274  00556C  EC78  F02B         	call	___awmod	;wreg free
 10275  005570  0100               	movlb	0	; () banked
 10276  005572  5160               	movf	?___awmod& (0+255),w,b
 10277  005574  0F30               	addlw	48
 10278  005576  0100               	movlb	0	; () banked
 10279  005578  6F7B               	movwf	(oled_putint8@numData+2)& (0+255),b
 10280                           
 10281                           ; BSR set to: 0
 10282                           ;SSD1306oLED.c: 288: number /= 10;
 10283  00557A  0E0A               	movlw	10
 10284  00557C  0100               	movlb	0	; () banked
 10285  00557E  6F60               	movwf	___lbdiv@divisor& (0+255),b
 10286  005580  0100               	movlb	0	; () banked
 10287  005582  517F               	movf	oled_putint8@number& (0+255),w,b
 10288  005584  EC52  F032         	call	___lbdiv
 10289  005588  0100               	movlb	0	; () banked
 10290  00558A  6F7F               	movwf	oled_putint8@number& (0+255),b
 10291                           
 10292                           ; BSR set to: 0
 10293                           ;SSD1306oLED.c: 289: numData.d1 = '0' + (number % 10);
 10294  00558C  C07F  F060         	movff	oled_putint8@number,___awmod@dividend
 10295  005590  0100               	movlb	0	; () banked
 10296  005592  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10297  005594  0E00               	movlw	0
 10298  005596  0100               	movlb	0	; () banked
 10299  005598  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10300  00559A  0E0A               	movlw	10
 10301  00559C  6F62               	movwf	___awmod@divisor& (0+255),b
 10302  00559E  EC78  F02B         	call	___awmod	;wreg free
 10303  0055A2  0100               	movlb	0	; () banked
 10304  0055A4  5160               	movf	?___awmod& (0+255),w,b
 10305  0055A6  0F30               	addlw	48
 10306  0055A8  0100               	movlb	0	; () banked
 10307  0055AA  6F7A               	movwf	(oled_putint8@numData+1)& (0+255),b
 10308                           
 10309                           ; BSR set to: 0
 10310                           ;SSD1306oLED.c: 290: number /= 10;
 10311  0055AC  0E0A               	movlw	10
 10312  0055AE  0100               	movlb	0	; () banked
 10313  0055B0  6F60               	movwf	___lbdiv@divisor& (0+255),b
 10314  0055B2  0100               	movlb	0	; () banked
 10315  0055B4  517F               	movf	oled_putint8@number& (0+255),w,b
 10316  0055B6  EC52  F032         	call	___lbdiv
 10317  0055BA  0100               	movlb	0	; () banked
 10318  0055BC  6F7F               	movwf	oled_putint8@number& (0+255),b
 10319                           
 10320                           ; BSR set to: 0
 10321                           ;SSD1306oLED.c: 291: numData.d0 = '0' + (number % 10);
 10322  0055BE  C07F  F060         	movff	oled_putint8@number,___awmod@dividend
 10323  0055C2  0100               	movlb	0	; () banked
 10324  0055C4  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10325  0055C6  0E00               	movlw	0
 10326  0055C8  0100               	movlb	0	; () banked
 10327  0055CA  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10328  0055CC  0E0A               	movlw	10
 10329  0055CE  6F62               	movwf	___awmod@divisor& (0+255),b
 10330  0055D0  EC78  F02B         	call	___awmod	;wreg free
 10331  0055D4  0100               	movlb	0	; () banked
 10332  0055D6  5160               	movf	?___awmod& (0+255),w,b
 10333  0055D8  0F30               	addlw	48
 10334  0055DA  0100               	movlb	0	; () banked
 10335  0055DC  6F79               	movwf	oled_putint8@numData& (0+255),b
 10336                           
 10337                           ; BSR set to: 0
 10338                           ;SSD1306oLED.c: 292: if(negative)
 10339  0055DE  0100               	movlb	0	; () banked
 10340  0055E0  5178               	movf	oled_putint8@negative& (0+255),w,b
 10341  0055E2  0100               	movlb	0	; () banked
 10342  0055E4  B4D8               	btfsc	status,2,c
 10343  0055E6  D001               	goto	u12351
 10344  0055E8  D001               	goto	u12350
 10345  0055EA                     u12351:
 10346  0055EA  D003               	goto	l1028
 10347  0055EC                     u12350:
 10348                           
 10349                           ; BSR set to: 0
 10350                           ;SSD1306oLED.c: 293: numData.d0 = '-';
 10351  0055EC  0E2D               	movlw	45
 10352  0055EE  0100               	movlb	0	; () banked
 10353  0055F0  6F79               	movwf	oled_putint8@numData& (0+255),b
 10354  0055F2                     l1028:
 10355                           
 10356                           ; BSR set to: 0
 10357                           ;SSD1306oLED.c: 295: numData.b[3]=0;
 10358  0055F2  0E00               	movlw	0
 10359  0055F4  0100               	movlb	0	; () banked
 10360  0055F6  6F7C               	movwf	(oled_putint8@numData+3)& (0+255),b
 10361                           
 10362                           ; BSR set to: 0
 10363                           ;SSD1306oLED.c: 297: oled_putString(numData.b,station_dot,start_page);
 10364  0055F8  0E79               	movlw	low oled_putint8@numData
 10365  0055FA  0100               	movlb	0	; () banked
 10366  0055FC  6F71               	movwf	oled_putString@string& (0+255),b
 10367  0055FE  0E00               	movlw	high oled_putint8@numData
 10368  005600  0100               	movlb	0	; () banked
 10369  005602  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 10370  005604  C076  F073         	movff	oled_putint8@station_dot,oled_putString@station_dot
 10371  005608  C077  F074         	movff	oled_putint8@start_page,oled_putString@start_page
 10372  00560C  EC8D  F030         	call	_oled_putString	;wreg free
 10373  005610  0012               	return		;funcret
 10374  005612                     __end_of_oled_putint8:
 10375                           	opt stack 0
 10376                           tblptru	equ	0xFF8
 10377                           tblptrh	equ	0xFF7
 10378                           tblptrl	equ	0xFF6
 10379                           tablat	equ	0xFF5
 10380                           prodh	equ	0xFF4
 10381                           prodl	equ	0xFF3
 10382                           intcon	equ	0xFF2
 10383                           postinc0	equ	0xFEE
 10384                           wreg	equ	0xFE8
 10385                           indf1	equ	0xFE7
 10386                           postdec1	equ	0xFE5
 10387                           fsr1h	equ	0xFE2
 10388                           fsr1l	equ	0xFE1
 10389                           indf2	equ	0xFDF
 10390                           fsr2h	equ	0xFDA
 10391                           fsr2l	equ	0xFD9
 10392                           status	equ	0xFD8
 10393                           
 10394 ;; *************** function _oled_putUint8 *****************
 10395 ;; Defined at:
 10396 ;;		line 264 in file "../Includes/Drivers/SSD1306oLED.c"
 10397 ;; Parameters:    Size  Location     Type
 10398 ;;  number          1    wreg     unsigned char 
 10399 ;;  station_dot     1   22[BANK0 ] unsigned char 
 10400 ;;  start_page      1   23[BANK0 ] unsigned char 
 10401 ;; Auto vars:     Size  Location     Type
 10402 ;;  number          1   24[BANK0 ] unsigned char 
 10403 ;;  numData         6   25[BANK0 ] struct .
 10404 ;; Return value:  Size  Location     Type
 10405 ;;                  1    wreg      void 
 10406 ;; Registers used:
 10407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10408 ;; Tracked objects:
 10409 ;;		On entry : 0/0
 10410 ;;		On exit  : 0/0
 10411 ;;		Unchanged: 0/0
 10412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10413 ;;      Params:         0       2       0       0       0       0       0       0       0
 10414 ;;      Locals:         0       7       0       0       0       0       0       0       0
 10415 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10416 ;;      Totals:         0       9       0       0       0       0       0       0       0
 10417 ;;Total ram usage:        9 bytes
 10418 ;; Hardware stack levels used:    1
 10419 ;; Hardware stack levels required when called:   15
 10420 ;; This function calls:
 10421 ;;		___awmod
 10422 ;;		___lbdiv
 10423 ;;		_oled_putString
 10424 ;; This function is called by:
 10425 ;;		_moteRunningProcess
 10426 ;;		_test_adc
 10427 ;; This function uses a non-reentrant model
 10428 ;;
 10429                           
 10430                           	psect	text14
 10431  005C18                     __ptext14:
 10432                           	opt stack 0
 10433  005C18                     _oled_putUint8:
 10434                           	opt stack 13
 10435                           
 10436                           ;incstack = 0
 10437                           ;oled_putUint8@number stored from wreg
 10438  005C18  0100               	movlb	0	; () banked
 10439  005C1A  6F78               	movwf	oled_putUint8@number& (0+255),b
 10440                           
 10441                           ;SSD1306oLED.c: 266: display_data_t numData;
 10442                           ;SSD1306oLED.c: 267: numData.d2 = '0' + (number % 10);
 10443  005C1C  C078  F060         	movff	oled_putUint8@number,___awmod@dividend
 10444  005C20  0100               	movlb	0	; () banked
 10445  005C22  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10446  005C24  0E00               	movlw	0
 10447  005C26  0100               	movlb	0	; () banked
 10448  005C28  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10449  005C2A  0E0A               	movlw	10
 10450  005C2C  6F62               	movwf	___awmod@divisor& (0+255),b
 10451  005C2E  EC78  F02B         	call	___awmod	;wreg free
 10452  005C32  0100               	movlb	0	; () banked
 10453  005C34  5160               	movf	?___awmod& (0+255),w,b
 10454  005C36  0F30               	addlw	48
 10455  005C38  0100               	movlb	0	; () banked
 10456  005C3A  6F7B               	movwf	(oled_putUint8@numData+2)& (0+255),b
 10457                           
 10458                           ;SSD1306oLED.c: 268: number /= 10;
 10459  005C3C  0E0A               	movlw	10
 10460  005C3E  0100               	movlb	0	; () banked
 10461  005C40  6F60               	movwf	___lbdiv@divisor& (0+255),b
 10462  005C42  0100               	movlb	0	; () banked
 10463  005C44  5178               	movf	oled_putUint8@number& (0+255),w,b
 10464  005C46  EC52  F032         	call	___lbdiv
 10465  005C4A  0100               	movlb	0	; () banked
 10466  005C4C  6F78               	movwf	oled_putUint8@number& (0+255),b
 10467                           
 10468                           ;SSD1306oLED.c: 269: numData.d1 = '0' + (number % 10);
 10469  005C4E  C078  F060         	movff	oled_putUint8@number,___awmod@dividend
 10470  005C52  0100               	movlb	0	; () banked
 10471  005C54  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10472  005C56  0E00               	movlw	0
 10473  005C58  0100               	movlb	0	; () banked
 10474  005C5A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10475  005C5C  0E0A               	movlw	10
 10476  005C5E  6F62               	movwf	___awmod@divisor& (0+255),b
 10477  005C60  EC78  F02B         	call	___awmod	;wreg free
 10478  005C64  0100               	movlb	0	; () banked
 10479  005C66  5160               	movf	?___awmod& (0+255),w,b
 10480  005C68  0F30               	addlw	48
 10481  005C6A  0100               	movlb	0	; () banked
 10482  005C6C  6F7A               	movwf	(oled_putUint8@numData+1)& (0+255),b
 10483                           
 10484                           ;SSD1306oLED.c: 270: number /= 10;
 10485  005C6E  0E0A               	movlw	10
 10486  005C70  0100               	movlb	0	; () banked
 10487  005C72  6F60               	movwf	___lbdiv@divisor& (0+255),b
 10488  005C74  0100               	movlb	0	; () banked
 10489  005C76  5178               	movf	oled_putUint8@number& (0+255),w,b
 10490  005C78  EC52  F032         	call	___lbdiv
 10491  005C7C  0100               	movlb	0	; () banked
 10492  005C7E  6F78               	movwf	oled_putUint8@number& (0+255),b
 10493                           
 10494                           ;SSD1306oLED.c: 271: numData.d0 = '0' + (number % 10);
 10495  005C80  C078  F060         	movff	oled_putUint8@number,___awmod@dividend
 10496  005C84  0100               	movlb	0	; () banked
 10497  005C86  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10498  005C88  0E00               	movlw	0
 10499  005C8A  0100               	movlb	0	; () banked
 10500  005C8C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10501  005C8E  0E0A               	movlw	10
 10502  005C90  6F62               	movwf	___awmod@divisor& (0+255),b
 10503  005C92  EC78  F02B         	call	___awmod	;wreg free
 10504  005C96  0100               	movlb	0	; () banked
 10505  005C98  5160               	movf	?___awmod& (0+255),w,b
 10506  005C9A  0F30               	addlw	48
 10507  005C9C  0100               	movlb	0	; () banked
 10508  005C9E  6F79               	movwf	oled_putUint8@numData& (0+255),b
 10509                           
 10510                           ; BSR set to: 0
 10511                           ;SSD1306oLED.c: 273: numData.b[3]=0;
 10512  005CA0  0E00               	movlw	0
 10513  005CA2  0100               	movlb	0	; () banked
 10514  005CA4  6F7C               	movwf	(oled_putUint8@numData+3)& (0+255),b
 10515                           
 10516                           ; BSR set to: 0
 10517                           ;SSD1306oLED.c: 275: oled_putString(numData.b,station_dot,start_page);
 10518  005CA6  0E79               	movlw	low oled_putUint8@numData
 10519  005CA8  0100               	movlb	0	; () banked
 10520  005CAA  6F71               	movwf	oled_putString@string& (0+255),b
 10521  005CAC  0E00               	movlw	high oled_putUint8@numData
 10522  005CAE  0100               	movlb	0	; () banked
 10523  005CB0  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 10524  005CB2  C076  F073         	movff	oled_putUint8@station_dot,oled_putString@station_dot
 10525  005CB6  C077  F074         	movff	oled_putUint8@start_page,oled_putString@start_page
 10526  005CBA  EC8D  F030         	call	_oled_putString	;wreg free
 10527  005CBE  0012               	return		;funcret
 10528  005CC0                     __end_of_oled_putUint8:
 10529                           	opt stack 0
 10530                           tblptru	equ	0xFF8
 10531                           tblptrh	equ	0xFF7
 10532                           tblptrl	equ	0xFF6
 10533                           tablat	equ	0xFF5
 10534                           prodh	equ	0xFF4
 10535                           prodl	equ	0xFF3
 10536                           intcon	equ	0xFF2
 10537                           postinc0	equ	0xFEE
 10538                           wreg	equ	0xFE8
 10539                           indf1	equ	0xFE7
 10540                           postdec1	equ	0xFE5
 10541                           fsr1h	equ	0xFE2
 10542                           fsr1l	equ	0xFE1
 10543                           indf2	equ	0xFDF
 10544                           fsr2h	equ	0xFDA
 10545                           fsr2l	equ	0xFD9
 10546                           status	equ	0xFD8
 10547                           
 10548 ;; *************** function _moteApp_setSensorsInput *****************
 10549 ;; Defined at:
 10550 ;;		line 1385 in file "../Includes/Board/MOTEapp.c"
 10551 ;; Parameters:    Size  Location     Type
 10552 ;;		None
 10553 ;; Auto vars:     Size  Location     Type
 10554 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 10555 ;; Return value:  Size  Location     Type
 10556 ;;                  1    wreg      void 
 10557 ;; Registers used:
 10558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10559 ;; Tracked objects:
 10560 ;;		On entry : 0/0
 10561 ;;		On exit  : 0/0
 10562 ;;		Unchanged: 0/0
 10563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10564 ;;      Params:         0       0       0       0       0       0       0       0       0
 10565 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10566 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10567 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10568 ;;Total ram usage:        2 bytes
 10569 ;; Hardware stack levels used:    1
 10570 ;; Hardware stack levels required when called:   14
 10571 ;; This function calls:
 10572 ;;		_MOTEapp_getModuleResponse
 10573 ;;		_moteApp_delayms
 10574 ;;		_sendCommand
 10575 ;; This function is called by:
 10576 ;;		_moteRunningProcess
 10577 ;;		_moteApp_testSensors
 10578 ;; This function uses a non-reentrant model
 10579 ;;
 10580                           
 10581                           	psect	text15
 10582  005CC0                     __ptext15:
 10583                           	opt stack 0
 10584  005CC0                     _moteApp_setSensorsInput:
 10585                           	opt stack 14
 10586                           
 10587                           ;MOTEapp.c: 1387: uint16_t escapeCounter = 0;
 10588                           
 10589                           ;incstack = 0
 10590  005CC0  0E00               	movlw	0
 10591  005CC2  0100               	movlb	0	; () banked
 10592  005CC4  6F66               	movwf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),b
 10593  005CC6  0E00               	movlw	0
 10594  005CC8  6F65               	movwf	moteApp_setSensorsInput@escapeCounter& (0+255),b
 10595                           
 10596                           ; BSR set to: 0
 10597                           ;MOTEapp.c: 1388: sendCommand("sys set pinmode GPIO13 ana");
 10598  005CCA  0ED3               	movlw	low STR_183
 10599  005CCC  0100               	movlb	0	; () banked
 10600  005CCE  6F61               	movwf	sendCommand@string& (0+255),b
 10601  005CD0  0E79               	movlw	high STR_183
 10602  005CD2  0100               	movlb	0	; () banked
 10603  005CD4  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10604  005CD6  EC66  F037         	call	_sendCommand	;wreg free
 10605                           
 10606                           ;MOTEapp.c: 1389: while ( !MOTEapp_getModuleResponse() )
 10607  005CDA  D010               	goto	l13097
 10608  005CDC                     l13093:
 10609                           
 10610                           ;MOTEapp.c: 1390: {
 10611                           ;MOTEapp.c: 1391: if (++escapeCounter > 50000)
 10612  005CDC  0100               	movlb	0	; () banked
 10613  005CDE  4B65               	infsnz	moteApp_setSensorsInput@escapeCounter& (0+255),f,b
 10614  005CE0  2B66               	incf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),f,b
 10615  005CE2  0E51               	movlw	81
 10616  005CE4  0100               	movlb	0	; () banked
 10617  005CE6  5D65               	subwf	moteApp_setSensorsInput@escapeCounter& (0+255),w,b
 10618  005CE8  0EC3               	movlw	195
 10619  005CEA  0100               	movlb	0	; () banked
 10620  005CEC  5966               	subwfb	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),w,b
 10621  005CEE  A0D8               	btfss	status,0,c
 10622  005CF0  D001               	goto	u12491
 10623  005CF2  D001               	goto	u12490
 10624  005CF4                     u12491:
 10625  005CF4  D003               	goto	l13097
 10626  005CF6                     u12490:
 10627  005CF6  D00A               	goto	l13099
 10628                           
 10629                           ; BSR set to: 0
 10630                           ;MOTEapp.c: 1392: break;
 10631  005CF8  D009               	goto	l13099
 10632                           
 10633                           ; BSR set to: 0
 10634  005CFA  D000               	goto	l13097
 10635  005CFC                     l13097:
 10636  005CFC  EC45  F030         	call	_MOTEapp_getModuleResponse	;wreg free
 10637  005D00  0900               	iorlw	0
 10638  005D02  B4D8               	btfsc	status,2,c
 10639  005D04  D001               	goto	u12501
 10640  005D06  D001               	goto	u12500
 10641  005D08                     u12501:
 10642  005D08  D7E9               	goto	l13093
 10643  005D0A                     u12500:
 10644  005D0A  D000               	goto	l13099
 10645  005D0C                     l13099:
 10646                           
 10647                           ;MOTEapp.c: 1393: }
 10648                           ;MOTEapp.c: 1394: escapeCounter = 0;
 10649  005D0C  0E00               	movlw	0
 10650  005D0E  0100               	movlb	0	; () banked
 10651  005D10  6F66               	movwf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),b
 10652  005D12  0E00               	movlw	0
 10653  005D14  6F65               	movwf	moteApp_setSensorsInput@escapeCounter& (0+255),b
 10654                           
 10655                           ; BSR set to: 0
 10656                           ;MOTEapp.c: 1395: sendCommand("sys set pinmode GPIO12 ana");
 10657  005D16  0EB8               	movlw	low STR_184
 10658  005D18  0100               	movlb	0	; () banked
 10659  005D1A  6F61               	movwf	sendCommand@string& (0+255),b
 10660  005D1C  0E79               	movlw	high STR_184
 10661  005D1E  0100               	movlb	0	; () banked
 10662  005D20  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10663  005D22  EC66  F037         	call	_sendCommand	;wreg free
 10664                           
 10665                           ;MOTEapp.c: 1396: while ( !MOTEapp_getModuleResponse() )
 10666  005D26  D010               	goto	l13107
 10667  005D28                     l13103:
 10668                           
 10669                           ;MOTEapp.c: 1397: {
 10670                           ;MOTEapp.c: 1398: if (++escapeCounter > 50000)
 10671  005D28  0100               	movlb	0	; () banked
 10672  005D2A  4B65               	infsnz	moteApp_setSensorsInput@escapeCounter& (0+255),f,b
 10673  005D2C  2B66               	incf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),f,b
 10674  005D2E  0E51               	movlw	81
 10675  005D30  0100               	movlb	0	; () banked
 10676  005D32  5D65               	subwf	moteApp_setSensorsInput@escapeCounter& (0+255),w,b
 10677  005D34  0EC3               	movlw	195
 10678  005D36  0100               	movlb	0	; () banked
 10679  005D38  5966               	subwfb	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),w,b
 10680  005D3A  A0D8               	btfss	status,0,c
 10681  005D3C  D001               	goto	u12511
 10682  005D3E  D001               	goto	u12510
 10683  005D40                     u12511:
 10684  005D40  D003               	goto	l13107
 10685  005D42                     u12510:
 10686  005D42  D00A               	goto	l13109
 10687                           
 10688                           ; BSR set to: 0
 10689                           ;MOTEapp.c: 1399: break;
 10690  005D44  D009               	goto	l13109
 10691                           
 10692                           ; BSR set to: 0
 10693  005D46  D000               	goto	l13107
 10694  005D48                     l13107:
 10695  005D48  EC45  F030         	call	_MOTEapp_getModuleResponse	;wreg free
 10696  005D4C  0900               	iorlw	0
 10697  005D4E  B4D8               	btfsc	status,2,c
 10698  005D50  D001               	goto	u12521
 10699  005D52  D001               	goto	u12520
 10700  005D54                     u12521:
 10701  005D54  D7E9               	goto	l13103
 10702  005D56                     u12520:
 10703  005D56  D000               	goto	l13109
 10704  005D58                     l13109:
 10705                           
 10706                           ;MOTEapp.c: 1400: }
 10707                           ;MOTEapp.c: 1401: moteApp_delayms(100);
 10708  005D58  0E00               	movlw	0
 10709  005D5A  0100               	movlb	0	; () banked
 10710  005D5C  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 10711  005D5E  0E64               	movlw	100
 10712  005D60  6F60               	movwf	moteApp_delayms@length& (0+255),b
 10713  005D62  EC91  F036         	call	_moteApp_delayms	;wreg free
 10714  005D66  0012               	return		;funcret
 10715  005D68                     __end_of_moteApp_setSensorsInput:
 10716                           	opt stack 0
 10717                           tblptru	equ	0xFF8
 10718                           tblptrh	equ	0xFF7
 10719                           tblptrl	equ	0xFF6
 10720                           tablat	equ	0xFF5
 10721                           prodh	equ	0xFF4
 10722                           prodl	equ	0xFF3
 10723                           intcon	equ	0xFF2
 10724                           postinc0	equ	0xFEE
 10725                           wreg	equ	0xFE8
 10726                           indf1	equ	0xFE7
 10727                           postdec1	equ	0xFE5
 10728                           fsr1h	equ	0xFE2
 10729                           fsr1l	equ	0xFE1
 10730                           indf2	equ	0xFDF
 10731                           fsr2h	equ	0xFDA
 10732                           fsr2l	equ	0xFD9
 10733                           status	equ	0xFD8
 10734                           
 10735 ;; *************** function _moteApp_lightStringSize *****************
 10736 ;; Defined at:
 10737 ;;		line 1450 in file "../Includes/Board/MOTEapp.c"
 10738 ;; Parameters:    Size  Location     Type
 10739 ;;		None
 10740 ;; Auto vars:     Size  Location     Type
 10741 ;;		None
 10742 ;; Return value:  Size  Location     Type
 10743 ;;                  1    wreg      unsigned char 
 10744 ;; Registers used:
 10745 ;;		wreg, status,2
 10746 ;; Tracked objects:
 10747 ;;		On entry : 0/0
 10748 ;;		On exit  : 0/0
 10749 ;;		Unchanged: 0/0
 10750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10751 ;;      Params:         0       0       0       0       0       0       0       0       0
 10752 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10753 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10754 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10755 ;;Total ram usage:        0 bytes
 10756 ;; Hardware stack levels used:    1
 10757 ;; Hardware stack levels required when called:   11
 10758 ;; This function calls:
 10759 ;;		Nothing
 10760 ;; This function is called by:
 10761 ;;		_moteRunningProcess
 10762 ;; This function uses a non-reentrant model
 10763 ;;
 10764                           
 10765                           	psect	text16
 10766  0072C6                     __ptext16:
 10767                           	opt stack 0
 10768  0072C6                     _moteApp_lightStringSize:
 10769                           	opt stack 17
 10770                           
 10771                           ;MOTEapp.c: 1452: return lightStringSize;
 10772                           
 10773                           ;incstack = 0
 10774  0072C6  0100               	movlb	0	; () banked
 10775  0072C8  51DF               	movf	_lightStringSize& (0+255),w,b
 10776  0072CA  D000               	goto	l754
 10777  0072CC                     l754:
 10778                           
 10779                           ; BSR set to: 0
 10780  0072CC  0012               	return		;funcret
 10781  0072CE                     __end_of_moteApp_lightStringSize:
 10782                           	opt stack 0
 10783                           tblptru	equ	0xFF8
 10784                           tblptrh	equ	0xFF7
 10785                           tblptrl	equ	0xFF6
 10786                           tablat	equ	0xFF5
 10787                           prodh	equ	0xFF4
 10788                           prodl	equ	0xFF3
 10789                           intcon	equ	0xFF2
 10790                           postinc0	equ	0xFEE
 10791                           wreg	equ	0xFE8
 10792                           indf1	equ	0xFE7
 10793                           postdec1	equ	0xFE5
 10794                           fsr1h	equ	0xFE2
 10795                           fsr1l	equ	0xFE1
 10796                           indf2	equ	0xFDF
 10797                           fsr2h	equ	0xFDA
 10798                           fsr2l	equ	0xFD9
 10799                           status	equ	0xFD8
 10800                           
 10801 ;; *************** function _moteApp_getTempValue *****************
 10802 ;; Defined at:
 10803 ;;		line 1403 in file "../Includes/Board/MOTEapp.c"
 10804 ;; Parameters:    Size  Location     Type
 10805 ;;		None
 10806 ;; Auto vars:     Size  Location     Type
 10807 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 10808 ;; Return value:  Size  Location     Type
 10809 ;;                  2    3[BANK0 ] PTR unsigned char 
 10810 ;; Registers used:
 10811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10812 ;; Tracked objects:
 10813 ;;		On entry : 0/0
 10814 ;;		On exit  : 0/0
 10815 ;;		Unchanged: 0/0
 10816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10817 ;;      Params:         0       2       0       0       0       0       0       0       0
 10818 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10819 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10820 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10821 ;;Total ram usage:        4 bytes
 10822 ;; Hardware stack levels used:    1
 10823 ;; Hardware stack levels required when called:   14
 10824 ;; This function calls:
 10825 ;;		_MOTEapp_getModuleResponse
 10826 ;;		_sendCommand
 10827 ;; This function is called by:
 10828 ;;		_moteHandler
 10829 ;;		_moteRunningProcess
 10830 ;;		_moteApp_testSensors
 10831 ;; This function uses a non-reentrant model
 10832 ;;
 10833                           
 10834                           	psect	text17
 10835  0068DA                     __ptext17:
 10836                           	opt stack 0
 10837  0068DA                     _moteApp_getTempValue:
 10838                           	opt stack 14
 10839                           
 10840                           ;MOTEapp.c: 1405: uint16_t escapeCounter = 0;
 10841                           
 10842                           ; BSR set to: 0
 10843                           ;incstack = 0
 10844  0068DA  0E00               	movlw	0
 10845  0068DC  0100               	movlb	0	; () banked
 10846  0068DE  6F66               	movwf	(moteApp_getTempValue@escapeCounter+1)& (0+255),b
 10847  0068E0  0E00               	movlw	0
 10848  0068E2  6F65               	movwf	moteApp_getTempValue@escapeCounter& (0+255),b
 10849                           
 10850                           ; BSR set to: 0
 10851                           ;MOTEapp.c: 1407: sendCommand("sys get pinana GPIO12");
 10852  0068E4  0E56               	movlw	low STR_185
 10853  0068E6  0100               	movlb	0	; () banked
 10854  0068E8  6F61               	movwf	sendCommand@string& (0+255),b
 10855  0068EA  0E7A               	movlw	high STR_185
 10856  0068EC  0100               	movlb	0	; () banked
 10857  0068EE  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10858  0068F0  EC66  F037         	call	_sendCommand	;wreg free
 10859                           
 10860                           ;MOTEapp.c: 1408: while ( !MOTEapp_getModuleResponse() )
 10861  0068F4  D010               	goto	l12961
 10862  0068F6                     l12957:
 10863                           
 10864                           ;MOTEapp.c: 1409: {
 10865                           ;MOTEapp.c: 1410: if (++escapeCounter > 50000)
 10866  0068F6  0100               	movlb	0	; () banked
 10867  0068F8  4B65               	infsnz	moteApp_getTempValue@escapeCounter& (0+255),f,b
 10868  0068FA  2B66               	incf	(moteApp_getTempValue@escapeCounter+1)& (0+255),f,b
 10869  0068FC  0E51               	movlw	81
 10870  0068FE  0100               	movlb	0	; () banked
 10871  006900  5D65               	subwf	moteApp_getTempValue@escapeCounter& (0+255),w,b
 10872  006902  0EC3               	movlw	195
 10873  006904  0100               	movlb	0	; () banked
 10874  006906  5966               	subwfb	(moteApp_getTempValue@escapeCounter+1)& (0+255),w,b
 10875  006908  A0D8               	btfss	status,0,c
 10876  00690A  D001               	goto	u12281
 10877  00690C  D001               	goto	u12280
 10878  00690E                     u12281:
 10879  00690E  D003               	goto	l12961
 10880  006910                     u12280:
 10881  006910  D00A               	goto	l12963
 10882                           
 10883                           ; BSR set to: 0
 10884                           ;MOTEapp.c: 1411: break;
 10885  006912  D009               	goto	l12963
 10886                           
 10887                           ; BSR set to: 0
 10888  006914  D000               	goto	l12961
 10889  006916                     l12961:
 10890  006916  EC45  F030         	call	_MOTEapp_getModuleResponse	;wreg free
 10891  00691A  0900               	iorlw	0
 10892  00691C  B4D8               	btfsc	status,2,c
 10893  00691E  D001               	goto	u12291
 10894  006920  D001               	goto	u12290
 10895  006922                     u12291:
 10896  006922  D7E9               	goto	l12957
 10897  006924                     u12290:
 10898  006924  D000               	goto	l12963
 10899  006926                     l12963:
 10900                           
 10901                           ;MOTEapp.c: 1412: }
 10902                           ;MOTEapp.c: 1414: return &moduleResonseBuffer;
 10903  006926  0E5D               	movlw	low _moduleResonseBuffer
 10904  006928  0100               	movlb	0	; () banked
 10905  00692A  6F63               	movwf	?_moteApp_getTempValue& (0+255),b
 10906  00692C  0E01               	movlw	high _moduleResonseBuffer
 10907  00692E  0100               	movlb	0	; () banked
 10908  006930  6F64               	movwf	(?_moteApp_getTempValue+1)& (0+255),b
 10909  006932  D000               	goto	l732
 10910  006934                     l732:
 10911                           
 10912                           ; BSR set to: 0
 10913  006934  0012               	return		;funcret
 10914  006936                     __end_of_moteApp_getTempValue:
 10915                           	opt stack 0
 10916                           tblptru	equ	0xFF8
 10917                           tblptrh	equ	0xFF7
 10918                           tblptrl	equ	0xFF6
 10919                           tablat	equ	0xFF5
 10920                           prodh	equ	0xFF4
 10921                           prodl	equ	0xFF3
 10922                           intcon	equ	0xFF2
 10923                           postinc0	equ	0xFEE
 10924                           wreg	equ	0xFE8
 10925                           indf1	equ	0xFE7
 10926                           postdec1	equ	0xFE5
 10927                           fsr1h	equ	0xFE2
 10928                           fsr1l	equ	0xFE1
 10929                           indf2	equ	0xFDF
 10930                           fsr2h	equ	0xFDA
 10931                           fsr2l	equ	0xFD9
 10932                           status	equ	0xFD8
 10933                           
 10934 ;; *************** function _moteApp_getLightValue *****************
 10935 ;; Defined at:
 10936 ;;		line 1417 in file "../Includes/Board/MOTEapp.c"
 10937 ;; Parameters:    Size  Location     Type
 10938 ;;		None
 10939 ;; Auto vars:     Size  Location     Type
 10940 ;;  escapeCounte    2   15[BANK0 ] unsigned int 
 10941 ;; Return value:  Size  Location     Type
 10942 ;;                  2   13[BANK0 ] PTR unsigned char 
 10943 ;; Registers used:
 10944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10945 ;; Tracked objects:
 10946 ;;		On entry : 0/0
 10947 ;;		On exit  : 0/0
 10948 ;;		Unchanged: 0/0
 10949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10950 ;;      Params:         0       2       0       0       0       0       0       0       0
 10951 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10952 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10953 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10954 ;;Total ram usage:        4 bytes
 10955 ;; Hardware stack levels used:    1
 10956 ;; Hardware stack levels required when called:   14
 10957 ;; This function calls:
 10958 ;;		_MOTEapp_getModuleResponse
 10959 ;;		_moteApp_setLightString
 10960 ;;		_sendCommand
 10961 ;; This function is called by:
 10962 ;;		_moteHandler
 10963 ;;		_moteRunningProcess
 10964 ;;		_moteApp_testSensors
 10965 ;; This function uses a non-reentrant model
 10966 ;;
 10967                           
 10968                           	psect	text18
 10969  006668                     __ptext18:
 10970                           	opt stack 0
 10971  006668                     _moteApp_getLightValue:
 10972                           	opt stack 14
 10973                           
 10974                           ;MOTEapp.c: 1419: uint16_t escapeCounter = 0;
 10975                           
 10976                           ; BSR set to: 0
 10977                           ;incstack = 0
 10978  006668  0E00               	movlw	0
 10979  00666A  0100               	movlb	0	; () banked
 10980  00666C  6F70               	movwf	(moteApp_getLightValue@escapeCounter+1)& (0+255),b
 10981  00666E  0E00               	movlw	0
 10982  006670  6F6F               	movwf	moteApp_getLightValue@escapeCounter& (0+255),b
 10983                           
 10984                           ; BSR set to: 0
 10985                           ;MOTEapp.c: 1421: sendCommand("sys get pinana GPIO13");
 10986  006672  0E6C               	movlw	low STR_186
 10987  006674  0100               	movlb	0	; () banked
 10988  006676  6F61               	movwf	sendCommand@string& (0+255),b
 10989  006678  0E7A               	movlw	high STR_186
 10990  00667A  0100               	movlb	0	; () banked
 10991  00667C  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10992  00667E  EC66  F037         	call	_sendCommand	;wreg free
 10993                           
 10994                           ;MOTEapp.c: 1422: while ( !MOTEapp_getModuleResponse() )
 10995  006682  D010               	goto	l12945
 10996  006684                     l12941:
 10997                           
 10998                           ;MOTEapp.c: 1423: {
 10999                           ;MOTEapp.c: 1424: if (++escapeCounter > 50000)
 11000  006684  0100               	movlb	0	; () banked
 11001  006686  4B6F               	infsnz	moteApp_getLightValue@escapeCounter& (0+255),f,b
 11002  006688  2B70               	incf	(moteApp_getLightValue@escapeCounter+1)& (0+255),f,b
 11003  00668A  0E51               	movlw	81
 11004  00668C  0100               	movlb	0	; () banked
 11005  00668E  5D6F               	subwf	moteApp_getLightValue@escapeCounter& (0+255),w,b
 11006  006690  0EC3               	movlw	195
 11007  006692  0100               	movlb	0	; () banked
 11008  006694  5970               	subwfb	(moteApp_getLightValue@escapeCounter+1)& (0+255),w,b
 11009  006696  A0D8               	btfss	status,0,c
 11010  006698  D001               	goto	u12261
 11011  00669A  D001               	goto	u12260
 11012  00669C                     u12261:
 11013  00669C  D003               	goto	l12945
 11014  00669E                     u12260:
 11015  00669E  D00A               	goto	l12947
 11016                           
 11017                           ; BSR set to: 0
 11018                           ;MOTEapp.c: 1425: break;
 11019  0066A0  D009               	goto	l12947
 11020                           
 11021                           ; BSR set to: 0
 11022  0066A2  D000               	goto	l12945
 11023  0066A4                     l12945:
 11024  0066A4  EC45  F030         	call	_MOTEapp_getModuleResponse	;wreg free
 11025  0066A8  0900               	iorlw	0
 11026  0066AA  B4D8               	btfsc	status,2,c
 11027  0066AC  D001               	goto	u12271
 11028  0066AE  D001               	goto	u12270
 11029  0066B0                     u12271:
 11030  0066B0  D7E9               	goto	l12941
 11031  0066B2                     u12270:
 11032  0066B2  D000               	goto	l12947
 11033  0066B4                     l12947:
 11034                           
 11035                           ;MOTEapp.c: 1426: }
 11036                           ;MOTEapp.c: 1427: moteApp_setLightString(moduleResonseBuffer);
 11037  0066B4  0E5D               	movlw	low _moduleResonseBuffer
 11038  0066B6  0100               	movlb	0	; () banked
 11039  0066B8  6F6A               	movwf	moteApp_setLightString@lightString& (0+255),b
 11040  0066BA  0E01               	movlw	high _moduleResonseBuffer
 11041  0066BC  0100               	movlb	0	; () banked
 11042  0066BE  6F6B               	movwf	(moteApp_setLightString@lightString+1)& (0+255),b
 11043  0066C0  ECFB  F02F         	call	_moteApp_setLightString	;wreg free
 11044                           
 11045                           ;MOTEapp.c: 1428: return &moduleResonseBuffer;
 11046  0066C4  0E5D               	movlw	low _moduleResonseBuffer
 11047  0066C6  0100               	movlb	0	; () banked
 11048  0066C8  6F6D               	movwf	?_moteApp_getLightValue& (0+255),b
 11049  0066CA  0E01               	movlw	high _moduleResonseBuffer
 11050  0066CC  0100               	movlb	0	; () banked
 11051  0066CE  6F6E               	movwf	(?_moteApp_getLightValue+1)& (0+255),b
 11052  0066D0  D000               	goto	l739
 11053  0066D2                     l739:
 11054                           
 11055                           ; BSR set to: 0
 11056  0066D2  0012               	return		;funcret
 11057  0066D4                     __end_of_moteApp_getLightValue:
 11058                           	opt stack 0
 11059                           tblptru	equ	0xFF8
 11060                           tblptrh	equ	0xFF7
 11061                           tblptrl	equ	0xFF6
 11062                           tablat	equ	0xFF5
 11063                           prodh	equ	0xFF4
 11064                           prodl	equ	0xFF3
 11065                           intcon	equ	0xFF2
 11066                           postinc0	equ	0xFEE
 11067                           wreg	equ	0xFE8
 11068                           indf1	equ	0xFE7
 11069                           postdec1	equ	0xFE5
 11070                           fsr1h	equ	0xFE2
 11071                           fsr1l	equ	0xFE1
 11072                           indf2	equ	0xFDF
 11073                           fsr2h	equ	0xFDA
 11074                           fsr2l	equ	0xFD9
 11075                           status	equ	0xFD8
 11076                           
 11077 ;; *************** function _moteApp_setLightString *****************
 11078 ;; Defined at:
 11079 ;;		line 1435 in file "../Includes/Board/MOTEapp.c"
 11080 ;; Parameters:    Size  Location     Type
 11081 ;;  lightString     2   10[BANK0 ] PTR unsigned char 
 11082 ;;		 -> moduleResonseBuffer(64), 
 11083 ;; Auto vars:     Size  Location     Type
 11084 ;;  stingPos        1   12[BANK0 ] unsigned char 
 11085 ;; Return value:  Size  Location     Type
 11086 ;;                  1    wreg      void 
 11087 ;; Registers used:
 11088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11089 ;; Tracked objects:
 11090 ;;		On entry : 0/0
 11091 ;;		On exit  : 0/0
 11092 ;;		Unchanged: 0/0
 11093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11094 ;;      Params:         0       2       0       0       0       0       0       0       0
 11095 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11096 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11097 ;;      Totals:         0       3       0       0       0       0       0       0       0
 11098 ;;Total ram usage:        3 bytes
 11099 ;; Hardware stack levels used:    1
 11100 ;; Hardware stack levels required when called:   12
 11101 ;; This function calls:
 11102 ;;		_memcpy
 11103 ;; This function is called by:
 11104 ;;		_moteApp_getLightValue
 11105 ;; This function uses a non-reentrant model
 11106 ;;
 11107                           
 11108                           	psect	text19
 11109  005FF6                     __ptext19:
 11110                           	opt stack 0
 11111  005FF6                     _moteApp_setLightString:
 11112                           	opt stack 15
 11113                           
 11114                           ;MOTEapp.c: 1437: memcpy(storedLight, clearLight, sizeof(storedLight));
 11115                           
 11116                           ; BSR set to: 0
 11117                           ;incstack = 0
 11118  005FF6  0EEB               	movlw	low _storedLight
 11119  005FF8  0100               	movlb	0	; () banked
 11120  005FFA  6F60               	movwf	memcpy@d1& (0+255),b
 11121  005FFC  0E01               	movlw	high _storedLight
 11122  005FFE  0100               	movlb	0	; () banked
 11123  006000  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11124  006002  0EE6               	movlw	low _clearLight
 11125  006004  0100               	movlb	0	; () banked
 11126  006006  6F62               	movwf	memcpy@s1& (0+255),b
 11127  006008  0E01               	movlw	high _clearLight
 11128  00600A  0100               	movlb	0	; () banked
 11129  00600C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 11130  00600E  0E00               	movlw	0
 11131  006010  0100               	movlb	0	; () banked
 11132  006012  6F65               	movwf	(memcpy@n+1)& (0+255),b
 11133  006014  0E05               	movlw	5
 11134  006016  6F64               	movwf	memcpy@n& (0+255),b
 11135  006018  EC74  F035         	call	_memcpy	;wreg free
 11136                           
 11137                           ;MOTEapp.c: 1438: memcpy(storedLight, lightString, sizeof(storedLight));
 11138  00601C  0EEB               	movlw	low _storedLight
 11139  00601E  0100               	movlb	0	; () banked
 11140  006020  6F60               	movwf	memcpy@d1& (0+255),b
 11141  006022  0E01               	movlw	high _storedLight
 11142  006024  0100               	movlb	0	; () banked
 11143  006026  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11144  006028  C06A  F062         	movff	moteApp_setLightString@lightString,memcpy@s1
 11145  00602C  C06B  F063         	movff	moteApp_setLightString@lightString+1,memcpy@s1+1
 11146  006030  0E00               	movlw	0
 11147  006032  0100               	movlb	0	; () banked
 11148  006034  6F65               	movwf	(memcpy@n+1)& (0+255),b
 11149  006036  0E05               	movlw	5
 11150  006038  6F64               	movwf	memcpy@n& (0+255),b
 11151  00603A  EC74  F035         	call	_memcpy	;wreg free
 11152                           
 11153                           ;MOTEapp.c: 1440: for (uint8_t stingPos = 0; stingPos < sizeof(storedLight); stingPos++)
 11154  00603E  0E00               	movlw	0
 11155  006040  0100               	movlb	0	; () banked
 11156  006042  6F6C               	movwf	moteApp_setLightString@stingPos& (0+255),b
 11157                           
 11158                           ; BSR set to: 0
 11159  006044  0E04               	movlw	4
 11160  006046  0100               	movlb	0	; () banked
 11161  006048  656C               	cpfsgt	moteApp_setLightString@stingPos& (0+255),b
 11162  00604A  D001               	goto	u11091
 11163  00604C  D001               	goto	u11090
 11164  00604E                     u11091:
 11165  00604E  D002               	goto	l12213
 11166  006050                     u11090:
 11167  006050  D01A               	goto	l749
 11168                           
 11169                           ; BSR set to: 0
 11170  006052  D019               	goto	l749
 11171  006054                     l12213:
 11172                           
 11173                           ; BSR set to: 0
 11174                           ;MOTEapp.c: 1441: {
 11175                           ;MOTEapp.c: 1442: if (storedLight[stingPos] == 0x00)
 11176  006054  0100               	movlb	0	; () banked
 11177  006056  516C               	movf	moteApp_setLightString@stingPos& (0+255),w,b
 11178  006058  0D01               	mullw	1
 11179  00605A  0EEB               	movlw	low _storedLight
 11180  00605C  24F3               	addwf	prodl,w,c
 11181  00605E  6ED9               	movwf	fsr2l,c
 11182  006060  0E01               	movlw	high _storedLight
 11183  006062  20F4               	addwfc	prodh,w,c
 11184  006064  6EDA               	movwf	fsr2h,c
 11185  006066  50DF               	movf	indf2,w,c
 11186  006068  A4D8               	btfss	status,2,c
 11187  00606A  D001               	goto	u11101
 11188  00606C  D001               	goto	u11100
 11189  00606E                     u11101:
 11190  00606E  D003               	goto	l12217
 11191  006070                     u11100:
 11192                           
 11193                           ; BSR set to: 0
 11194                           ;MOTEapp.c: 1443: {
 11195                           ;MOTEapp.c: 1444: lightStringSize = stingPos;
 11196  006070  C06C  F0DF         	movff	moteApp_setLightString@stingPos,_lightStringSize
 11197  006074  D000               	goto	l12217
 11198  006076                     l12217:
 11199                           
 11200                           ; BSR set to: 0
 11201  006076  0100               	movlb	0	; () banked
 11202  006078  2B6C               	incf	moteApp_setLightString@stingPos& (0+255),f,b
 11203                           
 11204                           ; BSR set to: 0
 11205  00607A  0E04               	movlw	4
 11206  00607C  0100               	movlb	0	; () banked
 11207  00607E  656C               	cpfsgt	moteApp_setLightString@stingPos& (0+255),b
 11208  006080  D001               	goto	u11111
 11209  006082  D001               	goto	u11110
 11210  006084                     u11111:
 11211  006084  D7E7               	goto	l12213
 11212  006086                     u11110:
 11213  006086                     l749:
 11214                           
 11215                           ; BSR set to: 0
 11216                           ;MOTEapp.c: 1445: }
 11217                           ;MOTEapp.c: 1446: }
 11218                           ;MOTEapp.c: 1447: __nop();
 11219  006086  F000               	nop	
 11220  006088  0012               	return		;funcret
 11221  00608A                     __end_of_moteApp_setLightString:
 11222                           	opt stack 0
 11223                           tblptru	equ	0xFF8
 11224                           tblptrh	equ	0xFF7
 11225                           tblptrl	equ	0xFF6
 11226                           tablat	equ	0xFF5
 11227                           prodh	equ	0xFF4
 11228                           prodl	equ	0xFF3
 11229                           intcon	equ	0xFF2
 11230                           postinc0	equ	0xFEE
 11231                           wreg	equ	0xFE8
 11232                           indf1	equ	0xFE7
 11233                           postdec1	equ	0xFE5
 11234                           fsr1h	equ	0xFE2
 11235                           fsr1l	equ	0xFE1
 11236                           indf2	equ	0xFDF
 11237                           fsr2h	equ	0xFDA
 11238                           fsr2l	equ	0xFD9
 11239                           status	equ	0xFD8
 11240                           
 11241 ;; *************** function _memcpy *****************
 11242 ;; Defined at:
 11243 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memcpy.c"
 11244 ;; Parameters:    Size  Location     Type
 11245 ;;  d1              2    0[BANK0 ] PTR void 
 11246 ;;		 -> storedLight(5), 
 11247 ;;  s1              2    2[BANK0 ] PTR const void 
 11248 ;;		 -> clearLight(5), moduleResonseBuffer(64), 
 11249 ;;  n               2    4[BANK0 ] unsigned int 
 11250 ;; Auto vars:     Size  Location     Type
 11251 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 11252 ;;		 -> clearLight(5), moduleResonseBuffer(64), 
 11253 ;;  d               2    6[BANK0 ] PTR unsigned char 
 11254 ;;		 -> storedLight(5), 
 11255 ;; Return value:  Size  Location     Type
 11256 ;;                  2    0[BANK0 ] PTR void 
 11257 ;; Registers used:
 11258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11259 ;; Tracked objects:
 11260 ;;		On entry : 0/0
 11261 ;;		On exit  : 0/0
 11262 ;;		Unchanged: 0/0
 11263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11264 ;;      Params:         0       6       0       0       0       0       0       0       0
 11265 ;;      Locals:         0       4       0       0       0       0       0       0       0
 11266 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11267 ;;      Totals:         0      10       0       0       0       0       0       0       0
 11268 ;;Total ram usage:       10 bytes
 11269 ;; Hardware stack levels used:    1
 11270 ;; Hardware stack levels required when called:   11
 11271 ;; This function calls:
 11272 ;;		Nothing
 11273 ;; This function is called by:
 11274 ;;		_moteApp_setLightString
 11275 ;; This function uses a non-reentrant model
 11276 ;;
 11277                           
 11278                           	psect	text20
 11279  006AE8                     __ptext20:
 11280                           	opt stack 0
 11281  006AE8                     _memcpy:
 11282                           	opt stack 15
 11283                           
 11284                           ;incstack = 0
 11285  006AE8  C062  F068         	movff	memcpy@s1,memcpy@s
 11286  006AEC  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 11287  006AF0  C060  F066         	movff	memcpy@d1,memcpy@d
 11288  006AF4  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 11289  006AF8  D011               	goto	l12033
 11290  006AFA                     l12027:
 11291  006AFA  C068  FFD9         	movff	memcpy@s,fsr2l
 11292  006AFE  C069  FFDA         	movff	memcpy@s+1,fsr2h
 11293  006B02  C066  FFE1         	movff	memcpy@d,fsr1l
 11294  006B06  C067  FFE2         	movff	memcpy@d+1,fsr1h
 11295  006B0A  CFDF FFE7          	movff	indf2,indf1
 11296  006B0E  0100               	movlb	0	; () banked
 11297  006B10  4B68               	infsnz	memcpy@s& (0+255),f,b
 11298  006B12  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 11299                           
 11300                           ; BSR set to: 0
 11301  006B14  0100               	movlb	0	; () banked
 11302  006B16  4B66               	infsnz	memcpy@d& (0+255),f,b
 11303  006B18  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 11304  006B1A  D000               	goto	l12033
 11305  006B1C                     l12033:
 11306  006B1C  0100               	movlb	0	; () banked
 11307  006B1E  0764               	decf	memcpy@n& (0+255),f,b
 11308  006B20  A0D8               	btfss	status,0,c
 11309  006B22  0765               	decf	(memcpy@n+1)& (0+255),f,b
 11310  006B24  0100               	movlb	0	; () banked
 11311  006B26  2964               	incf	memcpy@n& (0+255),w,b
 11312  006B28  E105               	bnz	u10911
 11313  006B2A  0100               	movlb	0	; () banked
 11314  006B2C  2965               	incf	(memcpy@n+1)& (0+255),w,b
 11315  006B2E  A4D8               	btfss	status,2,c
 11316  006B30  D001               	goto	u10911
 11317  006B32  D001               	goto	u10910
 11318  006B34                     u10911:
 11319  006B34  D7E2               	goto	l12027
 11320  006B36                     u10910:
 11321  006B36  D000               	goto	l2597
 11322  006B38                     l2597:
 11323                           
 11324                           ; BSR set to: 0
 11325  006B38  0012               	return		;funcret
 11326  006B3A                     __end_of_memcpy:
 11327                           	opt stack 0
 11328                           tblptru	equ	0xFF8
 11329                           tblptrh	equ	0xFF7
 11330                           tblptrl	equ	0xFF6
 11331                           tablat	equ	0xFF5
 11332                           prodh	equ	0xFF4
 11333                           prodl	equ	0xFF3
 11334                           intcon	equ	0xFF2
 11335                           postinc0	equ	0xFEE
 11336                           wreg	equ	0xFE8
 11337                           indf1	equ	0xFE7
 11338                           postdec1	equ	0xFE5
 11339                           fsr1h	equ	0xFE2
 11340                           fsr1l	equ	0xFE1
 11341                           indf2	equ	0xFDF
 11342                           fsr2h	equ	0xFDA
 11343                           fsr2l	equ	0xFD9
 11344                           status	equ	0xFD8
 11345                           
 11346 ;; *************** function _moteApp_getLightString *****************
 11347 ;; Defined at:
 11348 ;;		line 1454 in file "../Includes/Board/MOTEapp.c"
 11349 ;; Parameters:    Size  Location     Type
 11350 ;;		None
 11351 ;; Auto vars:     Size  Location     Type
 11352 ;;		None
 11353 ;; Return value:  Size  Location     Type
 11354 ;;                  2    0[BANK0 ] PTR unsigned char 
 11355 ;; Registers used:
 11356 ;;		wreg, status,2, status,0
 11357 ;; Tracked objects:
 11358 ;;		On entry : 0/0
 11359 ;;		On exit  : 0/0
 11360 ;;		Unchanged: 0/0
 11361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11362 ;;      Params:         0       2       0       0       0       0       0       0       0
 11363 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11364 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11365 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11366 ;;Total ram usage:        2 bytes
 11367 ;; Hardware stack levels used:    1
 11368 ;; Hardware stack levels required when called:   11
 11369 ;; This function calls:
 11370 ;;		Nothing
 11371 ;; This function is called by:
 11372 ;;		_moteRunningProcess
 11373 ;; This function uses a non-reentrant model
 11374 ;;
 11375                           
 11376                           	psect	text21
 11377  007268                     __ptext21:
 11378                           	opt stack 0
 11379  007268                     _moteApp_getLightString:
 11380                           	opt stack 17
 11381                           
 11382                           ;MOTEapp.c: 1456: return &storedLight;
 11383                           
 11384                           ; BSR set to: 0
 11385                           ;incstack = 0
 11386  007268  0EEB               	movlw	low _storedLight
 11387  00726A  0100               	movlb	0	; () banked
 11388  00726C  6F60               	movwf	?_moteApp_getLightString& (0+255),b
 11389  00726E  0E01               	movlw	high _storedLight
 11390  007270  0100               	movlb	0	; () banked
 11391  007272  6F61               	movwf	(?_moteApp_getLightString+1)& (0+255),b
 11392  007274  D000               	goto	l757
 11393  007276                     l757:
 11394                           
 11395                           ; BSR set to: 0
 11396  007276  0012               	return		;funcret
 11397  007278                     __end_of_moteApp_getLightString:
 11398                           	opt stack 0
 11399                           tblptru	equ	0xFF8
 11400                           tblptrh	equ	0xFF7
 11401                           tblptrl	equ	0xFF6
 11402                           tablat	equ	0xFF5
 11403                           prodh	equ	0xFF4
 11404                           prodl	equ	0xFF3
 11405                           intcon	equ	0xFF2
 11406                           postinc0	equ	0xFEE
 11407                           wreg	equ	0xFE8
 11408                           indf1	equ	0xFE7
 11409                           postdec1	equ	0xFE5
 11410                           fsr1h	equ	0xFE2
 11411                           fsr1l	equ	0xFE1
 11412                           indf2	equ	0xFDF
 11413                           fsr2h	equ	0xFDA
 11414                           fsr2l	equ	0xFD9
 11415                           status	equ	0xFD8
 11416                           
 11417 ;; *************** function _moteApp_convertSensorValue *****************
 11418 ;; Defined at:
 11419 ;;		line 1345 in file "../Includes/Board/MOTEapp.c"
 11420 ;; Parameters:    Size  Location     Type
 11421 ;;  string          2   17[BANK0 ] PTR const unsigned char 
 11422 ;;		 -> moduleResonseBuffer(64), 
 11423 ;; Auto vars:     Size  Location     Type
 11424 ;;  convertedVal    2   23[BANK0 ] unsigned int 
 11425 ;;  index           1   22[BANK0 ] unsigned char 
 11426 ;; Return value:  Size  Location     Type
 11427 ;;                  2   17[BANK0 ] unsigned int 
 11428 ;; Registers used:
 11429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11430 ;; Tracked objects:
 11431 ;;		On entry : 0/0
 11432 ;;		On exit  : 0/0
 11433 ;;		Unchanged: 0/0
 11434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11435 ;;      Params:         0       2       0       0       0       0       0       0       0
 11436 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11437 ;;      Temps:          0       3       0       0       0       0       0       0       0
 11438 ;;      Totals:         0       8       0       0       0       0       0       0       0
 11439 ;;Total ram usage:        8 bytes
 11440 ;; Hardware stack levels used:    1
 11441 ;; Hardware stack levels required when called:   12
 11442 ;; This function calls:
 11443 ;;		___wmul
 11444 ;; This function is called by:
 11445 ;;		_moteHandler
 11446 ;;		_moteRunningProcess
 11447 ;;		_moteApp_testSensors
 11448 ;; This function uses a non-reentrant model
 11449 ;;
 11450                           
 11451                           	psect	text22
 11452  00588C                     __ptext22:
 11453                           	opt stack 0
 11454  00588C                     _moteApp_convertSensorValue:
 11455                           	opt stack 16
 11456                           
 11457                           ;MOTEapp.c: 1347: uint8_t index;
 11458                           ;MOTEapp.c: 1348: uint16_t convertedValue = 0;
 11459                           
 11460                           ; BSR set to: 0
 11461                           ;incstack = 0
 11462  00588C  0E00               	movlw	0
 11463  00588E  0100               	movlb	0	; () banked
 11464  005890  6F78               	movwf	(moteApp_convertSensorValue@convertedValue+1)& (0+255),b
 11465  005892  0E00               	movlw	0
 11466  005894  6F77               	movwf	moteApp_convertSensorValue@convertedValue& (0+255),b
 11467                           
 11468                           ;MOTEapp.c: 1349: for(index = 0; index < 4; index++)
 11469  005896  0E00               	movlw	0
 11470  005898  0100               	movlb	0	; () banked
 11471  00589A  6F76               	movwf	moteApp_convertSensorValue@index& (0+255),b
 11472                           
 11473                           ; BSR set to: 0
 11474  00589C  0E03               	movlw	3
 11475  00589E  0100               	movlb	0	; () banked
 11476  0058A0  6576               	cpfsgt	moteApp_convertSensorValue@index& (0+255),b
 11477  0058A2  D001               	goto	u12301
 11478  0058A4  D001               	goto	u12300
 11479  0058A6                     u12301:
 11480  0058A6  D002               	goto	l12973
 11481  0058A8                     u12300:
 11482  0058A8  D04A               	goto	l707
 11483                           
 11484                           ; BSR set to: 0
 11485  0058AA  D049               	goto	l707
 11486  0058AC                     l12973:
 11487                           
 11488                           ; BSR set to: 0
 11489                           ;MOTEapp.c: 1350: {
 11490                           ;MOTEapp.c: 1351: if (*string != 0)
 11491  0058AC  C071  FFD9         	movff	moteApp_convertSensorValue@string,fsr2l
 11492  0058B0  C072  FFDA         	movff	moteApp_convertSensorValue@string+1,fsr2h
 11493  0058B4  50DF               	movf	indf2,w,c
 11494  0058B6  B4D8               	btfsc	status,2,c
 11495  0058B8  D001               	goto	u12311
 11496  0058BA  D001               	goto	u12310
 11497  0058BC                     u12311:
 11498  0058BC  D040               	goto	l707
 11499  0058BE                     u12310:
 11500                           
 11501                           ; BSR set to: 0
 11502                           ;MOTEapp.c: 1352: {
 11503                           ;MOTEapp.c: 1353: if (index != 0)
 11504  0058BE  0100               	movlb	0	; () banked
 11505  0058C0  5176               	movf	moteApp_convertSensorValue@index& (0+255),w,b
 11506  0058C2  0100               	movlb	0	; () banked
 11507  0058C4  B4D8               	btfsc	status,2,c
 11508  0058C6  D001               	goto	u12321
 11509  0058C8  D001               	goto	u12320
 11510  0058CA                     u12321:
 11511  0058CA  D010               	goto	l12979
 11512  0058CC                     u12320:
 11513                           
 11514                           ; BSR set to: 0
 11515                           ;MOTEapp.c: 1354: convertedValue = convertedValue * 10;
 11516  0058CC  C077  F060         	movff	moteApp_convertSensorValue@convertedValue,___wmul@multiplier
 11517  0058D0  C078  F061         	movff	moteApp_convertSensorValue@convertedValue+1,___wmul@multiplier+1
 11518  0058D4  0E00               	movlw	0
 11519  0058D6  0100               	movlb	0	; () banked
 11520  0058D8  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11521  0058DA  0E0A               	movlw	10
 11522  0058DC  6F62               	movwf	___wmul@multiplicand& (0+255),b
 11523  0058DE  EC4A  F037         	call	___wmul	;wreg free
 11524  0058E2  C060  F077         	movff	?___wmul,moteApp_convertSensorValue@convertedValue
 11525  0058E6  C061  F078         	movff	?___wmul+1,moteApp_convertSensorValue@convertedValue+1
 11526  0058EA  D000               	goto	l12979
 11527  0058EC                     l12979:
 11528                           
 11529                           ;MOTEapp.c: 1356: convertedValue = (*string++ - '0') + convertedValue;
 11530  0058EC  C071  FFD9         	movff	moteApp_convertSensorValue@string,fsr2l
 11531  0058F0  C072  FFDA         	movff	moteApp_convertSensorValue@string+1,fsr2h
 11532  0058F4  50DF               	movf	indf2,w,c
 11533  0058F6  0100               	movlb	0	; () banked
 11534  0058F8  6F73               	movwf	??_moteApp_convertSensorValue& (0+255),b
 11535  0058FA  0100               	movlb	0	; () banked
 11536  0058FC  5173               	movf	??_moteApp_convertSensorValue& (0+255),w,b
 11537  0058FE  0100               	movlb	0	; () banked
 11538  005900  2577               	addwf	moteApp_convertSensorValue@convertedValue& (0+255),w,b
 11539  005902  0100               	movlb	0	; () banked
 11540  005904  6F74               	movwf	(??_moteApp_convertSensorValue+1)& (0+255),b
 11541  005906  0E00               	movlw	0
 11542  005908  0100               	movlb	0	; () banked
 11543  00590A  2178               	addwfc	(moteApp_convertSensorValue@convertedValue+1)& (0+255),w,b
 11544  00590C  0100               	movlb	0	; () banked
 11545  00590E  6F75               	movwf	(??_moteApp_convertSensorValue+2)& (0+255),b
 11546  005910  0ED0               	movlw	208
 11547  005912  0100               	movlb	0	; () banked
 11548  005914  2574               	addwf	(??_moteApp_convertSensorValue+1)& (0+255),w,b
 11549  005916  0100               	movlb	0	; () banked
 11550  005918  6F77               	movwf	moteApp_convertSensorValue@convertedValue& (0+255),b
 11551  00591A  0EFF               	movlw	255
 11552  00591C  0100               	movlb	0	; () banked
 11553  00591E  2175               	addwfc	(??_moteApp_convertSensorValue+2)& (0+255),w,b
 11554  005920  0100               	movlb	0	; () banked
 11555  005922  6F78               	movwf	(moteApp_convertSensorValue@convertedValue+1)& (0+255),b
 11556                           
 11557                           ; BSR set to: 0
 11558  005924  0100               	movlb	0	; () banked
 11559  005926  4B71               	infsnz	moteApp_convertSensorValue@string& (0+255),f,b
 11560  005928  2B72               	incf	(moteApp_convertSensorValue@string+1)& (0+255),f,b
 11561                           
 11562                           ;MOTEapp.c: 1357: }
 11563  00592A  D001               	goto	l12983
 11564                           
 11565                           ; BSR set to: 0
 11566                           ;MOTEapp.c: 1358: else
 11567                           ;MOTEapp.c: 1359: {
 11568                           ;MOTEapp.c: 1360: break;
 11569  00592C  D008               	goto	l707
 11570  00592E                     l12983:
 11571                           
 11572                           ; BSR set to: 0
 11573  00592E  0100               	movlb	0	; () banked
 11574  005930  2B76               	incf	moteApp_convertSensorValue@index& (0+255),f,b
 11575                           
 11576                           ; BSR set to: 0
 11577  005932  0E03               	movlw	3
 11578  005934  0100               	movlb	0	; () banked
 11579  005936  6576               	cpfsgt	moteApp_convertSensorValue@index& (0+255),b
 11580  005938  D001               	goto	u12331
 11581  00593A  D001               	goto	u12330
 11582  00593C                     u12331:
 11583  00593C  D7B7               	goto	l12973
 11584  00593E                     u12330:
 11585  00593E                     l707:
 11586                           
 11587                           ; BSR set to: 0
 11588                           ;MOTEapp.c: 1361: }
 11589                           ;MOTEapp.c: 1362: }
 11590                           ;MOTEapp.c: 1363: return convertedValue;
 11591  00593E  C077  F071         	movff	moteApp_convertSensorValue@convertedValue,?_moteApp_convertSensorValue
 11592  005942  C078  F072         	movff	moteApp_convertSensorValue@convertedValue+1,?_moteApp_convertSensorValue+1
 11593                           
 11594                           ; BSR set to: 0
 11595  005946  0012               	return		;funcret
 11596  005948                     __end_of_moteApp_convertSensorValue:
 11597                           	opt stack 0
 11598                           tblptru	equ	0xFF8
 11599                           tblptrh	equ	0xFF7
 11600                           tblptrl	equ	0xFF6
 11601                           tablat	equ	0xFF5
 11602                           prodh	equ	0xFF4
 11603                           prodl	equ	0xFF3
 11604                           intcon	equ	0xFF2
 11605                           postinc0	equ	0xFEE
 11606                           wreg	equ	0xFE8
 11607                           indf1	equ	0xFE7
 11608                           postdec1	equ	0xFE5
 11609                           fsr1h	equ	0xFE2
 11610                           fsr1l	equ	0xFE1
 11611                           indf2	equ	0xFDF
 11612                           fsr2h	equ	0xFDA
 11613                           fsr2l	equ	0xFD9
 11614                           status	equ	0xFD8
 11615                           
 11616 ;; *************** function ___wmul *****************
 11617 ;; Defined at:
 11618 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
 11619 ;; Parameters:    Size  Location     Type
 11620 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11621 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11622 ;; Auto vars:     Size  Location     Type
 11623 ;;  product         2    4[BANK0 ] unsigned int 
 11624 ;; Return value:  Size  Location     Type
 11625 ;;                  2    0[BANK0 ] unsigned int 
 11626 ;; Registers used:
 11627 ;;		wreg, status,2, status,0, prodl, prodh
 11628 ;; Tracked objects:
 11629 ;;		On entry : 0/0
 11630 ;;		On exit  : 0/0
 11631 ;;		Unchanged: 0/0
 11632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11633 ;;      Params:         0       4       0       0       0       0       0       0       0
 11634 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11635 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11636 ;;      Totals:         0       6       0       0       0       0       0       0       0
 11637 ;;Total ram usage:        6 bytes
 11638 ;; Hardware stack levels used:    1
 11639 ;; Hardware stack levels required when called:   11
 11640 ;; This function calls:
 11641 ;;		Nothing
 11642 ;; This function is called by:
 11643 ;;		_moteApp_convertSensorValue
 11644 ;; This function uses a non-reentrant model
 11645 ;;
 11646                           
 11647                           	psect	text23
 11648  006E94                     __ptext23:
 11649                           	opt stack 0
 11650  006E94                     ___wmul:
 11651                           	opt stack 16
 11652                           
 11653                           ; BSR set to: 0
 11654                           ;incstack = 0
 11655  006E94  0100               	movlb	0	; () banked
 11656  006E96  5160               	movf	___wmul@multiplier& (0+255),w,b
 11657  006E98  0100               	movlb	0	; () banked
 11658  006E9A  0362               	mulwf	___wmul@multiplicand& (0+255),b
 11659  006E9C  CFF3 F064          	movff	prodl,___wmul@product
 11660  006EA0  CFF4 F065          	movff	prodh,___wmul@product+1
 11661  006EA4  0100               	movlb	0	; () banked
 11662  006EA6  5160               	movf	___wmul@multiplier& (0+255),w,b
 11663  006EA8  0100               	movlb	0	; () banked
 11664  006EAA  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11665  006EAC  50F3               	movf	prodl,w,c
 11666  006EAE  0100               	movlb	0	; () banked
 11667  006EB0  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 11668  006EB2  0100               	movlb	0	; () banked
 11669  006EB4  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11670  006EB6  0100               	movlb	0	; () banked
 11671  006EB8  0362               	mulwf	___wmul@multiplicand& (0+255),b
 11672  006EBA  50F3               	movf	prodl,w,c
 11673  006EBC  0100               	movlb	0	; () banked
 11674  006EBE  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 11675                           
 11676                           ; BSR set to: 0
 11677  006EC0  C064  F060         	movff	___wmul@product,?___wmul
 11678  006EC4  C065  F061         	movff	___wmul@product+1,?___wmul+1
 11679  006EC8  D000               	goto	l2169
 11680  006ECA                     l2169:
 11681                           
 11682                           ; BSR set to: 0
 11683  006ECA  0012               	return		;funcret
 11684  006ECC                     __end_of___wmul:
 11685                           	opt stack 0
 11686                           tblptru	equ	0xFF8
 11687                           tblptrh	equ	0xFF7
 11688                           tblptrl	equ	0xFF6
 11689                           tablat	equ	0xFF5
 11690                           prodh	equ	0xFF4
 11691                           prodl	equ	0xFF3
 11692                           intcon	equ	0xFF2
 11693                           postinc0	equ	0xFEE
 11694                           wreg	equ	0xFE8
 11695                           indf1	equ	0xFE7
 11696                           postdec1	equ	0xFE5
 11697                           fsr1h	equ	0xFE2
 11698                           fsr1l	equ	0xFE1
 11699                           indf2	equ	0xFDF
 11700                           fsr2h	equ	0xFDA
 11701                           fsr2l	equ	0xFD9
 11702                           status	equ	0xFD8
 11703                           
 11704 ;; *************** function _moteApp_clearBuffers *****************
 11705 ;; Defined at:
 11706 ;;		line 1285 in file "../Includes/Board/MOTEapp.c"
 11707 ;; Parameters:    Size  Location     Type
 11708 ;;		None
 11709 ;; Auto vars:     Size  Location     Type
 11710 ;;  counter         1    3[BANK0 ] unsigned char 
 11711 ;;  counter         1    2[BANK0 ] unsigned char 
 11712 ;;  counter         1    1[BANK0 ] unsigned char 
 11713 ;;  counter         1    0[BANK0 ] unsigned char 
 11714 ;; Return value:  Size  Location     Type
 11715 ;;                  1    wreg      void 
 11716 ;; Registers used:
 11717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11718 ;; Tracked objects:
 11719 ;;		On entry : 0/0
 11720 ;;		On exit  : 0/0
 11721 ;;		Unchanged: 0/0
 11722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11723 ;;      Params:         0       0       0       0       0       0       0       0       0
 11724 ;;      Locals:         0       4       0       0       0       0       0       0       0
 11725 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11726 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11727 ;;Total ram usage:        4 bytes
 11728 ;; Hardware stack levels used:    1
 11729 ;; Hardware stack levels required when called:   11
 11730 ;; This function calls:
 11731 ;;		Nothing
 11732 ;; This function is called by:
 11733 ;;		_moteRunningProcess
 11734 ;; This function uses a non-reentrant model
 11735 ;;
 11736                           
 11737                           	psect	text24
 11738  004AF2                     __ptext24:
 11739                           	opt stack 0
 11740  004AF2                     _moteApp_clearBuffers:
 11741                           	opt stack 17
 11742                           
 11743                           ;MOTEapp.c: 1287: for (uint8_t counter = 0; counter < 3; counter++)
 11744                           
 11745                           ; BSR set to: 0
 11746                           ;incstack = 0
 11747  004AF2  0E00               	movlw	0
 11748  004AF4  0100               	movlb	0	; () banked
 11749  004AF6  6F60               	movwf	moteApp_clearBuffers@counter& (0+255),b
 11750                           
 11751                           ; BSR set to: 0
 11752  004AF8  0E02               	movlw	2
 11753  004AFA  0100               	movlb	0	; () banked
 11754  004AFC  6560               	cpfsgt	moteApp_clearBuffers@counter& (0+255),b
 11755  004AFE  D001               	goto	u12411
 11756  004B00  D001               	goto	u12410
 11757  004B02                     u12411:
 11758  004B02  D002               	goto	l13047
 11759  004B04                     u12410:
 11760  004B04  D015               	goto	l13053
 11761                           
 11762                           ; BSR set to: 0
 11763  004B06  D014               	goto	l13053
 11764  004B08                     l13047:
 11765                           
 11766                           ; BSR set to: 0
 11767                           ;MOTEapp.c: 1288: {
 11768                           ;MOTEapp.c: 1289: responsePortNum[counter] = 0;
 11769  004B08  0100               	movlb	0	; () banked
 11770  004B0A  5160               	movf	moteApp_clearBuffers@counter& (0+255),w,b
 11771  004B0C  0D01               	mullw	1
 11772  004B0E  0EF0               	movlw	low _responsePortNum
 11773  004B10  24F3               	addwf	prodl,w,c
 11774  004B12  6ED9               	movwf	fsr2l,c
 11775  004B14  0E01               	movlw	high _responsePortNum
 11776  004B16  20F4               	addwfc	prodh,w,c
 11777  004B18  6EDA               	movwf	fsr2h,c
 11778  004B1A  0E00               	movlw	0
 11779  004B1C  6EDF               	movwf	indf2,c
 11780                           
 11781                           ; BSR set to: 0
 11782  004B1E  0100               	movlb	0	; () banked
 11783  004B20  2B60               	incf	moteApp_clearBuffers@counter& (0+255),f,b
 11784                           
 11785                           ; BSR set to: 0
 11786  004B22  0E02               	movlw	2
 11787  004B24  0100               	movlb	0	; () banked
 11788  004B26  6560               	cpfsgt	moteApp_clearBuffers@counter& (0+255),b
 11789  004B28  D001               	goto	u12421
 11790  004B2A  D001               	goto	u12420
 11791  004B2C                     u12421:
 11792  004B2C  D7ED               	goto	l13047
 11793  004B2E                     u12420:
 11794  004B2E  D000               	goto	l13053
 11795  004B30                     l13053:
 11796                           
 11797                           ; BSR set to: 0
 11798                           ;MOTEapp.c: 1290: }
 11799                           ;MOTEapp.c: 1291: for (uint8_t counter = 0; counter < 34; counter++)
 11800  004B30  0E00               	movlw	0
 11801  004B32  0100               	movlb	0	; () banked
 11802  004B34  6F61               	movwf	moteApp_clearBuffers@counter_1710& (0+255),b
 11803                           
 11804                           ; BSR set to: 0
 11805  004B36  0E21               	movlw	33
 11806  004B38  0100               	movlb	0	; () banked
 11807  004B3A  6561               	cpfsgt	moteApp_clearBuffers@counter_1710& (0+255),b
 11808  004B3C  D001               	goto	u12431
 11809  004B3E  D001               	goto	u12430
 11810  004B40                     u12431:
 11811  004B40  D002               	goto	l13059
 11812  004B42                     u12430:
 11813  004B42  D015               	goto	l13065
 11814                           
 11815                           ; BSR set to: 0
 11816  004B44  D014               	goto	l13065
 11817  004B46                     l13059:
 11818                           
 11819                           ; BSR set to: 0
 11820                           ;MOTEapp.c: 1292: {
 11821                           ;MOTEapp.c: 1293: responseId[counter] = 0;
 11822  004B46  0100               	movlb	0	; () banked
 11823  004B48  5161               	movf	moteApp_clearBuffers@counter_1710& (0+255),w,b
 11824  004B4A  0D01               	mullw	1
 11825  004B4C  0E30               	movlw	low _responseId
 11826  004B4E  24F3               	addwf	prodl,w,c
 11827  004B50  6ED9               	movwf	fsr2l,c
 11828  004B52  0E01               	movlw	high _responseId
 11829  004B54  20F4               	addwfc	prodh,w,c
 11830  004B56  6EDA               	movwf	fsr2h,c
 11831  004B58  0E00               	movlw	0
 11832  004B5A  6EDF               	movwf	indf2,c
 11833                           
 11834                           ; BSR set to: 0
 11835  004B5C  0100               	movlb	0	; () banked
 11836  004B5E  2B61               	incf	moteApp_clearBuffers@counter_1710& (0+255),f,b
 11837                           
 11838                           ; BSR set to: 0
 11839  004B60  0E21               	movlw	33
 11840  004B62  0100               	movlb	0	; () banked
 11841  004B64  6561               	cpfsgt	moteApp_clearBuffers@counter_1710& (0+255),b
 11842  004B66  D001               	goto	u12441
 11843  004B68  D001               	goto	u12440
 11844  004B6A                     u12441:
 11845  004B6A  D7ED               	goto	l13059
 11846  004B6C                     u12440:
 11847  004B6C  D000               	goto	l13065
 11848  004B6E                     l13065:
 11849                           
 11850                           ; BSR set to: 0
 11851                           ;MOTEapp.c: 1294: }
 11852                           ;MOTEapp.c: 1295: for (uint8_t counter = 0; counter < 32; counter++)
 11853  004B6E  0E00               	movlw	0
 11854  004B70  0100               	movlb	0	; () banked
 11855  004B72  6F62               	movwf	moteApp_clearBuffers@counter_1711& (0+255),b
 11856                           
 11857                           ; BSR set to: 0
 11858  004B74  0E1F               	movlw	31
 11859  004B76  0100               	movlb	0	; () banked
 11860  004B78  6562               	cpfsgt	moteApp_clearBuffers@counter_1711& (0+255),b
 11861  004B7A  D001               	goto	u12451
 11862  004B7C  D001               	goto	u12450
 11863  004B7E                     u12451:
 11864  004B7E  D002               	goto	l13071
 11865  004B80                     u12450:
 11866  004B80  D015               	goto	l13077
 11867                           
 11868                           ; BSR set to: 0
 11869  004B82  D014               	goto	l13077
 11870  004B84                     l13071:
 11871                           
 11872                           ; BSR set to: 0
 11873                           ;MOTEapp.c: 1296: {
 11874                           ;MOTEapp.c: 1297: responseData[counter] = 0;
 11875  004B84  0100               	movlb	0	; () banked
 11876  004B86  5162               	movf	moteApp_clearBuffers@counter_1711& (0+255),w,b
 11877  004B88  0D01               	mullw	1
 11878  004B8A  0E9D               	movlw	low _responseData
 11879  004B8C  24F3               	addwf	prodl,w,c
 11880  004B8E  6ED9               	movwf	fsr2l,c
 11881  004B90  0E01               	movlw	high _responseData
 11882  004B92  20F4               	addwfc	prodh,w,c
 11883  004B94  6EDA               	movwf	fsr2h,c
 11884  004B96  0E00               	movlw	0
 11885  004B98  6EDF               	movwf	indf2,c
 11886                           
 11887                           ; BSR set to: 0
 11888  004B9A  0100               	movlb	0	; () banked
 11889  004B9C  2B62               	incf	moteApp_clearBuffers@counter_1711& (0+255),f,b
 11890                           
 11891                           ; BSR set to: 0
 11892  004B9E  0E1F               	movlw	31
 11893  004BA0  0100               	movlb	0	; () banked
 11894  004BA2  6562               	cpfsgt	moteApp_clearBuffers@counter_1711& (0+255),b
 11895  004BA4  D001               	goto	u12461
 11896  004BA6  D001               	goto	u12460
 11897  004BA8                     u12461:
 11898  004BA8  D7ED               	goto	l13071
 11899  004BAA                     u12460:
 11900  004BAA  D000               	goto	l13077
 11901  004BAC                     l13077:
 11902                           
 11903                           ; BSR set to: 0
 11904                           ;MOTEapp.c: 1298: }
 11905                           ;MOTEapp.c: 1299: for (uint8_t counter = 0; counter < sizeof(dataBuffer); counter++)
 11906  004BAC  0E00               	movlw	0
 11907  004BAE  0100               	movlb	0	; () banked
 11908  004BB0  6F63               	movwf	moteApp_clearBuffers@counter_1712& (0+255),b
 11909                           
 11910                           ; BSR set to: 0
 11911  004BB2  0E0F               	movlw	15
 11912  004BB4  0100               	movlb	0	; () banked
 11913  004BB6  6563               	cpfsgt	moteApp_clearBuffers@counter_1712& (0+255),b
 11914  004BB8  D001               	goto	u12471
 11915  004BBA  D001               	goto	u12470
 11916  004BBC                     u12471:
 11917  004BBC  D002               	goto	l13083
 11918  004BBE                     u12470:
 11919  004BBE  D015               	goto	l690
 11920                           
 11921                           ; BSR set to: 0
 11922  004BC0  D014               	goto	l690
 11923  004BC2                     l13083:
 11924                           
 11925                           ; BSR set to: 0
 11926                           ;MOTEapp.c: 1300: {
 11927                           ;MOTEapp.c: 1301: dataBuffer[counter] = 0;
 11928  004BC2  0100               	movlb	0	; () banked
 11929  004BC4  5163               	movf	moteApp_clearBuffers@counter_1712& (0+255),w,b
 11930  004BC6  0D01               	mullw	1
 11931  004BC8  0EBD               	movlw	low _dataBuffer
 11932  004BCA  24F3               	addwf	prodl,w,c
 11933  004BCC  6ED9               	movwf	fsr2l,c
 11934  004BCE  0E01               	movlw	high _dataBuffer
 11935  004BD0  20F4               	addwfc	prodh,w,c
 11936  004BD2  6EDA               	movwf	fsr2h,c
 11937  004BD4  0E00               	movlw	0
 11938  004BD6  6EDF               	movwf	indf2,c
 11939                           
 11940                           ; BSR set to: 0
 11941  004BD8  0100               	movlb	0	; () banked
 11942  004BDA  2B63               	incf	moteApp_clearBuffers@counter_1712& (0+255),f,b
 11943                           
 11944                           ; BSR set to: 0
 11945  004BDC  0E0F               	movlw	15
 11946  004BDE  0100               	movlb	0	; () banked
 11947  004BE0  6563               	cpfsgt	moteApp_clearBuffers@counter_1712& (0+255),b
 11948  004BE2  D001               	goto	u12481
 11949  004BE4  D001               	goto	u12480
 11950  004BE6                     u12481:
 11951  004BE6  D7ED               	goto	l13083
 11952  004BE8                     u12480:
 11953  004BE8  D000               	goto	l690
 11954  004BEA                     l690:
 11955                           
 11956                           ; BSR set to: 0
 11957  004BEA  0012               	return		;funcret
 11958  004BEC                     __end_of_moteApp_clearBuffers:
 11959                           	opt stack 0
 11960                           tblptru	equ	0xFF8
 11961                           tblptrh	equ	0xFF7
 11962                           tblptrl	equ	0xFF6
 11963                           tablat	equ	0xFF5
 11964                           prodh	equ	0xFF4
 11965                           prodl	equ	0xFF3
 11966                           intcon	equ	0xFF2
 11967                           postinc0	equ	0xFEE
 11968                           wreg	equ	0xFE8
 11969                           indf1	equ	0xFE7
 11970                           postdec1	equ	0xFE5
 11971                           fsr1h	equ	0xFE2
 11972                           fsr1l	equ	0xFE1
 11973                           indf2	equ	0xFDF
 11974                           fsr2h	equ	0xFDA
 11975                           fsr2l	equ	0xFD9
 11976                           status	equ	0xFD8
 11977                           
 11978 ;; *************** function _moteApp_addToDataBuffer *****************
 11979 ;; Defined at:
 11980 ;;		line 1327 in file "../Includes/Board/MOTEapp.c"
 11981 ;; Parameters:    Size  Location     Type
 11982 ;;  string          2   17[BANK0 ] PTR const unsigned char 
 11983 ;;		 -> storedLight(5), moduleResonseBuffer(64), 
 11984 ;;  bufferLocati    1   19[BANK0 ] unsigned char 
 11985 ;; Auto vars:     Size  Location     Type
 11986 ;;  index           1   20[BANK0 ] unsigned char 
 11987 ;; Return value:  Size  Location     Type
 11988 ;;                  1    wreg      unsigned char 
 11989 ;; Registers used:
 11990 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11991 ;; Tracked objects:
 11992 ;;		On entry : 0/0
 11993 ;;		On exit  : 0/0
 11994 ;;		Unchanged: 0/0
 11995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11996 ;;      Params:         0       3       0       0       0       0       0       0       0
 11997 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11998 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11999 ;;      Totals:         0       4       0       0       0       0       0       0       0
 12000 ;;Total ram usage:        4 bytes
 12001 ;; Hardware stack levels used:    1
 12002 ;; Hardware stack levels required when called:   11
 12003 ;; This function calls:
 12004 ;;		Nothing
 12005 ;; This function is called by:
 12006 ;;		_moteRunningProcess
 12007 ;; This function uses a non-reentrant model
 12008 ;;
 12009                           
 12010                           	psect	text25
 12011  0062AE                     __ptext25:
 12012                           	opt stack 0
 12013  0062AE                     _moteApp_addToDataBuffer:
 12014                           	opt stack 17
 12015                           
 12016                           ;MOTEapp.c: 1329: uint8_t index;
 12017                           ;MOTEapp.c: 1330: for(index = 0; index < 6; index++)
 12018                           
 12019                           ; BSR set to: 0
 12020                           ;incstack = 0
 12021  0062AE  0E00               	movlw	0
 12022  0062B0  0100               	movlb	0	; () banked
 12023  0062B2  6F74               	movwf	moteApp_addToDataBuffer@index& (0+255),b
 12024                           
 12025                           ; BSR set to: 0
 12026  0062B4  0E05               	movlw	5
 12027  0062B6  0100               	movlb	0	; () banked
 12028  0062B8  6574               	cpfsgt	moteApp_addToDataBuffer@index& (0+255),b
 12029  0062BA  D001               	goto	u12531
 12030  0062BC  D001               	goto	u12530
 12031  0062BE                     u12531:
 12032  0062BE  D002               	goto	l13121
 12033  0062C0                     u12530:
 12034  0062C0  D034               	goto	l13135
 12035                           
 12036                           ; BSR set to: 0
 12037  0062C2  D033               	goto	l13135
 12038  0062C4                     l13121:
 12039                           
 12040                           ; BSR set to: 0
 12041                           ;MOTEapp.c: 1331: {
 12042                           ;MOTEapp.c: 1332: if (*string != 0)
 12043  0062C4  C071  FFD9         	movff	moteApp_addToDataBuffer@string,fsr2l
 12044  0062C8  C072  FFDA         	movff	moteApp_addToDataBuffer@string+1,fsr2h
 12045  0062CC  50DF               	movf	indf2,w,c
 12046  0062CE  B4D8               	btfsc	status,2,c
 12047  0062D0  D001               	goto	u12541
 12048  0062D2  D001               	goto	u12540
 12049  0062D4                     u12541:
 12050  0062D4  D015               	goto	l13129
 12051  0062D6                     u12540:
 12052                           
 12053                           ; BSR set to: 0
 12054                           ;MOTEapp.c: 1333: {
 12055                           ;MOTEapp.c: 1334: dataBuffer[bufferLocation++] = *string++;
 12056  0062D6  C071  FFD9         	movff	moteApp_addToDataBuffer@string,fsr2l
 12057  0062DA  C072  FFDA         	movff	moteApp_addToDataBuffer@string+1,fsr2h
 12058  0062DE  0100               	movlb	0	; () banked
 12059  0062E0  5173               	movf	moteApp_addToDataBuffer@bufferLocation& (0+255),w,b
 12060  0062E2  0D01               	mullw	1
 12061  0062E4  0EBD               	movlw	low _dataBuffer
 12062  0062E6  24F3               	addwf	prodl,w,c
 12063  0062E8  6EE1               	movwf	fsr1l,c
 12064  0062EA  0E01               	movlw	high _dataBuffer
 12065  0062EC  20F4               	addwfc	prodh,w,c
 12066  0062EE  6EE2               	movwf	fsr1h,c
 12067  0062F0  CFDF FFE7          	movff	indf2,indf1
 12068                           
 12069                           ; BSR set to: 0
 12070  0062F4  0100               	movlb	0	; () banked
 12071  0062F6  4B71               	infsnz	moteApp_addToDataBuffer@string& (0+255),f,b
 12072  0062F8  2B72               	incf	(moteApp_addToDataBuffer@string+1)& (0+255),f,b
 12073                           
 12074                           ; BSR set to: 0
 12075  0062FA  0100               	movlb	0	; () banked
 12076  0062FC  2B73               	incf	moteApp_addToDataBuffer@bufferLocation& (0+255),f,b
 12077                           
 12078                           ;MOTEapp.c: 1335: }
 12079  0062FE  D00C               	goto	l13131
 12080  006300                     l13129:
 12081                           
 12082                           ; BSR set to: 0
 12083                           ;MOTEapp.c: 1336: else
 12084                           ;MOTEapp.c: 1337: {
 12085                           ;MOTEapp.c: 1338: dataBuffer[bufferLocation] = 0x20;
 12086  006300  0100               	movlb	0	; () banked
 12087  006302  5173               	movf	moteApp_addToDataBuffer@bufferLocation& (0+255),w,b
 12088  006304  0D01               	mullw	1
 12089  006306  0EBD               	movlw	low _dataBuffer
 12090  006308  24F3               	addwf	prodl,w,c
 12091  00630A  6ED9               	movwf	fsr2l,c
 12092  00630C  0E01               	movlw	high _dataBuffer
 12093  00630E  20F4               	addwfc	prodh,w,c
 12094  006310  6EDA               	movwf	fsr2h,c
 12095  006312  0E20               	movlw	32
 12096  006314  6EDF               	movwf	indf2,c
 12097                           
 12098                           ;MOTEapp.c: 1339: break;
 12099  006316  D009               	goto	l13135
 12100  006318                     l13131:
 12101                           
 12102                           ; BSR set to: 0
 12103  006318  0100               	movlb	0	; () banked
 12104  00631A  2B74               	incf	moteApp_addToDataBuffer@index& (0+255),f,b
 12105                           
 12106                           ; BSR set to: 0
 12107  00631C  0E05               	movlw	5
 12108  00631E  0100               	movlb	0	; () banked
 12109  006320  6574               	cpfsgt	moteApp_addToDataBuffer@index& (0+255),b
 12110  006322  D001               	goto	u12551
 12111  006324  D001               	goto	u12550
 12112  006326                     u12551:
 12113  006326  D7CE               	goto	l13121
 12114  006328                     u12550:
 12115  006328  D000               	goto	l13135
 12116  00632A                     l13135:
 12117                           
 12118                           ; BSR set to: 0
 12119                           ;MOTEapp.c: 1340: }
 12120                           ;MOTEapp.c: 1341: }
 12121                           ;MOTEapp.c: 1342: return index;
 12122  00632A  0100               	movlb	0	; () banked
 12123  00632C  5174               	movf	moteApp_addToDataBuffer@index& (0+255),w,b
 12124  00632E  D000               	goto	l703
 12125  006330                     l703:
 12126                           
 12127                           ; BSR set to: 0
 12128  006330  0012               	return		;funcret
 12129  006332                     __end_of_moteApp_addToDataBuffer:
 12130                           	opt stack 0
 12131                           tblptru	equ	0xFF8
 12132                           tblptrh	equ	0xFF7
 12133                           tblptrl	equ	0xFF6
 12134                           tablat	equ	0xFF5
 12135                           prodh	equ	0xFF4
 12136                           prodl	equ	0xFF3
 12137                           intcon	equ	0xFF2
 12138                           postinc0	equ	0xFEE
 12139                           wreg	equ	0xFE8
 12140                           indf1	equ	0xFE7
 12141                           postdec1	equ	0xFE5
 12142                           fsr1h	equ	0xFE2
 12143                           fsr1l	equ	0xFE1
 12144                           indf2	equ	0xFDF
 12145                           fsr2h	equ	0xFDA
 12146                           fsr2l	equ	0xFD9
 12147                           status	equ	0xFD8
 12148                           
 12149 ;; *************** function _moteApp_add8bToDataBuffer *****************
 12150 ;; Defined at:
 12151 ;;		line 1305 in file "../Includes/Board/MOTEapp.c"
 12152 ;; Parameters:    Size  Location     Type
 12153 ;;  number          1    wreg     unsigned char 
 12154 ;;  bufferLocati    1    6[BANK0 ] unsigned char 
 12155 ;; Auto vars:     Size  Location     Type
 12156 ;;  number          1    9[BANK0 ] unsigned char 
 12157 ;; Return value:  Size  Location     Type
 12158 ;;                  1    wreg      void 
 12159 ;; Registers used:
 12160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12161 ;; Tracked objects:
 12162 ;;		On entry : 0/0
 12163 ;;		On exit  : 0/0
 12164 ;;		Unchanged: 0/0
 12165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12166 ;;      Params:         0       1       0       0       0       0       0       0       0
 12167 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12168 ;;      Temps:          0       2       0       0       0       0       0       0       0
 12169 ;;      Totals:         0       4       0       0       0       0       0       0       0
 12170 ;;Total ram usage:        4 bytes
 12171 ;; Hardware stack levels used:    1
 12172 ;; Hardware stack levels required when called:   12
 12173 ;; This function calls:
 12174 ;;		___awmod
 12175 ;;		___lbdiv
 12176 ;; This function is called by:
 12177 ;;		_moteRunningProcess
 12178 ;; This function uses a non-reentrant model
 12179 ;;
 12180                           
 12181                           	psect	text26
 12182  005612                     __ptext26:
 12183                           	opt stack 0
 12184  005612                     _moteApp_add8bToDataBuffer:
 12185                           	opt stack 16
 12186                           
 12187                           ; BSR set to: 0
 12188                           ;incstack = 0
 12189                           ;moteApp_add8bToDataBuffer@number stored from wreg
 12190  005612  0100               	movlb	0	; () banked
 12191  005614  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 12192                           
 12193                           ;MOTEapp.c: 1307: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
 12194  005616  0100               	movlb	0	; () banked
 12195  005618  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 12196  00561A  0100               	movlb	0	; () banked
 12197  00561C  6F67               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
 12198  00561E  6B68               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
 12199  005620  0E02               	movlw	2
 12200  005622  0100               	movlb	0	; () banked
 12201  005624  2767               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
 12202  005626  0E00               	movlw	0
 12203  005628  2368               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
 12204  00562A  0EBD               	movlw	low _dataBuffer
 12205  00562C  0100               	movlb	0	; () banked
 12206  00562E  2567               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
 12207  005630  6ED9               	movwf	fsr2l,c
 12208  005632  0E01               	movlw	high _dataBuffer
 12209  005634  0100               	movlb	0	; () banked
 12210  005636  2168               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
 12211  005638  6EDA               	movwf	fsr2h,c
 12212  00563A  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 12213  00563E  0100               	movlb	0	; () banked
 12214  005640  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12215  005642  0E00               	movlw	0
 12216  005644  0100               	movlb	0	; () banked
 12217  005646  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12218  005648  0E0A               	movlw	10
 12219  00564A  6F62               	movwf	___awmod@divisor& (0+255),b
 12220  00564C  EC78  F02B         	call	___awmod	;wreg free
 12221  005650  0100               	movlb	0	; () banked
 12222  005652  5160               	movf	?___awmod& (0+255),w,b
 12223  005654  0F30               	addlw	48
 12224  005656  6EDF               	movwf	indf2,c
 12225                           
 12226                           ; BSR set to: 0
 12227                           ;MOTEapp.c: 1308: number /= 10;
 12228  005658  0E0A               	movlw	10
 12229  00565A  0100               	movlb	0	; () banked
 12230  00565C  6F60               	movwf	___lbdiv@divisor& (0+255),b
 12231  00565E  0100               	movlb	0	; () banked
 12232  005660  5169               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
 12233  005662  EC52  F032         	call	___lbdiv
 12234  005666  0100               	movlb	0	; () banked
 12235  005668  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 12236                           
 12237                           ; BSR set to: 0
 12238                           ;MOTEapp.c: 1309: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
 12239  00566A  0100               	movlb	0	; () banked
 12240  00566C  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 12241  00566E  0100               	movlb	0	; () banked
 12242  005670  6F67               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
 12243  005672  6B68               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
 12244  005674  0E01               	movlw	1
 12245  005676  0100               	movlb	0	; () banked
 12246  005678  2767               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
 12247  00567A  0E00               	movlw	0
 12248  00567C  2368               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
 12249  00567E  0EBD               	movlw	low _dataBuffer
 12250  005680  0100               	movlb	0	; () banked
 12251  005682  2567               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
 12252  005684  6ED9               	movwf	fsr2l,c
 12253  005686  0E01               	movlw	high _dataBuffer
 12254  005688  0100               	movlb	0	; () banked
 12255  00568A  2168               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
 12256  00568C  6EDA               	movwf	fsr2h,c
 12257  00568E  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 12258  005692  0100               	movlb	0	; () banked
 12259  005694  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12260  005696  0E00               	movlw	0
 12261  005698  0100               	movlb	0	; () banked
 12262  00569A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12263  00569C  0E0A               	movlw	10
 12264  00569E  6F62               	movwf	___awmod@divisor& (0+255),b
 12265  0056A0  EC78  F02B         	call	___awmod	;wreg free
 12266  0056A4  0100               	movlb	0	; () banked
 12267  0056A6  5160               	movf	?___awmod& (0+255),w,b
 12268  0056A8  0F30               	addlw	48
 12269  0056AA  6EDF               	movwf	indf2,c
 12270                           
 12271                           ;MOTEapp.c: 1310: number /= 10;
 12272  0056AC  0E0A               	movlw	10
 12273  0056AE  0100               	movlb	0	; () banked
 12274  0056B0  6F60               	movwf	___lbdiv@divisor& (0+255),b
 12275  0056B2  0100               	movlb	0	; () banked
 12276  0056B4  5169               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
 12277  0056B6  EC52  F032         	call	___lbdiv
 12278  0056BA  0100               	movlb	0	; () banked
 12279  0056BC  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 12280                           
 12281                           ; BSR set to: 0
 12282                           ;MOTEapp.c: 1311: dataBuffer[bufferLocation] = '0' + (number % 10);
 12283  0056BE  0100               	movlb	0	; () banked
 12284  0056C0  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 12285  0056C2  0D01               	mullw	1
 12286  0056C4  0EBD               	movlw	low _dataBuffer
 12287  0056C6  24F3               	addwf	prodl,w,c
 12288  0056C8  6ED9               	movwf	fsr2l,c
 12289  0056CA  0E01               	movlw	high _dataBuffer
 12290  0056CC  20F4               	addwfc	prodh,w,c
 12291  0056CE  6EDA               	movwf	fsr2h,c
 12292  0056D0  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 12293  0056D4  0100               	movlb	0	; () banked
 12294  0056D6  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12295  0056D8  0E00               	movlw	0
 12296  0056DA  0100               	movlb	0	; () banked
 12297  0056DC  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12298  0056DE  0E0A               	movlw	10
 12299  0056E0  6F62               	movwf	___awmod@divisor& (0+255),b
 12300  0056E2  EC78  F02B         	call	___awmod	;wreg free
 12301  0056E6  0100               	movlb	0	; () banked
 12302  0056E8  5160               	movf	?___awmod& (0+255),w,b
 12303  0056EA  0F30               	addlw	48
 12304  0056EC  6EDF               	movwf	indf2,c
 12305                           
 12306                           ; BSR set to: 0
 12307  0056EE  0012               	return		;funcret
 12308  0056F0                     __end_of_moteApp_add8bToDataBuffer:
 12309                           	opt stack 0
 12310                           tblptru	equ	0xFF8
 12311                           tblptrh	equ	0xFF7
 12312                           tblptrl	equ	0xFF6
 12313                           tablat	equ	0xFF5
 12314                           prodh	equ	0xFF4
 12315                           prodl	equ	0xFF3
 12316                           intcon	equ	0xFF2
 12317                           postinc0	equ	0xFEE
 12318                           wreg	equ	0xFE8
 12319                           indf1	equ	0xFE7
 12320                           postdec1	equ	0xFE5
 12321                           fsr1h	equ	0xFE2
 12322                           fsr1l	equ	0xFE1
 12323                           indf2	equ	0xFDF
 12324                           fsr2h	equ	0xFDA
 12325                           fsr2l	equ	0xFD9
 12326                           status	equ	0xFD8
 12327                           
 12328 ;; *************** function ___lbdiv *****************
 12329 ;; Defined at:
 12330 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lbdiv.c"
 12331 ;; Parameters:    Size  Location     Type
 12332 ;;  dividend        1    wreg     unsigned char 
 12333 ;;  divisor         1    0[BANK0 ] unsigned char 
 12334 ;; Auto vars:     Size  Location     Type
 12335 ;;  dividend        1    1[BANK0 ] unsigned char 
 12336 ;;  quotient        1    3[BANK0 ] unsigned char 
 12337 ;;  counter         1    2[BANK0 ] unsigned char 
 12338 ;; Return value:  Size  Location     Type
 12339 ;;                  1    wreg      unsigned char 
 12340 ;; Registers used:
 12341 ;;		wreg, status,2, status,0
 12342 ;; Tracked objects:
 12343 ;;		On entry : 0/0
 12344 ;;		On exit  : 0/0
 12345 ;;		Unchanged: 0/0
 12346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12347 ;;      Params:         0       1       0       0       0       0       0       0       0
 12348 ;;      Locals:         0       3       0       0       0       0       0       0       0
 12349 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12350 ;;      Totals:         0       4       0       0       0       0       0       0       0
 12351 ;;Total ram usage:        4 bytes
 12352 ;; Hardware stack levels used:    1
 12353 ;; Hardware stack levels required when called:   11
 12354 ;; This function calls:
 12355 ;;		Nothing
 12356 ;; This function is called by:
 12357 ;;		_moteApp_add8bToDataBuffer
 12358 ;;		_oled_putUint8
 12359 ;;		_oled_putint8
 12360 ;; This function uses a non-reentrant model
 12361 ;;
 12362                           
 12363                           	psect	text27
 12364  0064A4                     __ptext27:
 12365                           	opt stack 0
 12366  0064A4                     ___lbdiv:
 12367                           	opt stack 16
 12368                           
 12369                           ; BSR set to: 0
 12370                           ;incstack = 0
 12371                           ;___lbdiv@dividend stored from wreg
 12372  0064A4  0100               	movlb	0	; () banked
 12373  0064A6  6F61               	movwf	___lbdiv@dividend& (0+255),b
 12374  0064A8  0E00               	movlw	0
 12375  0064AA  0100               	movlb	0	; () banked
 12376  0064AC  6F63               	movwf	___lbdiv@quotient& (0+255),b
 12377                           
 12378                           ; BSR set to: 0
 12379  0064AE  0100               	movlb	0	; () banked
 12380  0064B0  5160               	movf	___lbdiv@divisor& (0+255),w,b
 12381  0064B2  0100               	movlb	0	; () banked
 12382  0064B4  B4D8               	btfsc	status,2,c
 12383  0064B6  D001               	goto	u12091
 12384  0064B8  D001               	goto	u12090
 12385  0064BA                     u12091:
 12386  0064BA  D02B               	goto	l12827
 12387  0064BC                     u12090:
 12388                           
 12389                           ; BSR set to: 0
 12390  0064BC  0E01               	movlw	1
 12391  0064BE  0100               	movlb	0	; () banked
 12392  0064C0  6F62               	movwf	___lbdiv@counter& (0+255),b
 12393  0064C2  D006               	goto	l12815
 12394  0064C4                     l12811:
 12395                           
 12396                           ; BSR set to: 0
 12397  0064C4  0100               	movlb	0	; () banked
 12398  0064C6  90D8               	bcf	status,0,c
 12399  0064C8  3760               	rlcf	___lbdiv@divisor& (0+255),f,b
 12400                           
 12401                           ; BSR set to: 0
 12402  0064CA  0100               	movlb	0	; () banked
 12403  0064CC  2B62               	incf	___lbdiv@counter& (0+255),f,b
 12404  0064CE  D000               	goto	l12815
 12405  0064D0                     l12815:
 12406                           
 12407                           ; BSR set to: 0
 12408  0064D0  0100               	movlb	0	; () banked
 12409  0064D2  AF60               	btfss	___lbdiv@divisor& (0+255),7,b
 12410  0064D4  D001               	goto	u12101
 12411  0064D6  D001               	goto	u12100
 12412  0064D8                     u12101:
 12413  0064D8  D7F5               	goto	l12811
 12414  0064DA                     u12100:
 12415  0064DA  D001               	goto	l12817
 12416                           
 12417                           ; BSR set to: 0
 12418  0064DC  D000               	goto	l12817
 12419  0064DE                     l12817:
 12420                           
 12421                           ; BSR set to: 0
 12422  0064DE  0100               	movlb	0	; () banked
 12423  0064E0  90D8               	bcf	status,0,c
 12424  0064E2  3763               	rlcf	___lbdiv@quotient& (0+255),f,b
 12425  0064E4  0100               	movlb	0	; () banked
 12426  0064E6  5160               	movf	___lbdiv@divisor& (0+255),w,b
 12427  0064E8  0100               	movlb	0	; () banked
 12428  0064EA  5D61               	subwf	___lbdiv@dividend& (0+255),w,b
 12429  0064EC  A0D8               	btfss	status,0,c
 12430  0064EE  D001               	goto	u12111
 12431  0064F0  D001               	goto	u12110
 12432  0064F2                     u12111:
 12433  0064F2  D007               	goto	l12823
 12434  0064F4                     u12110:
 12435                           
 12436                           ; BSR set to: 0
 12437  0064F4  0100               	movlb	0	; () banked
 12438  0064F6  5160               	movf	___lbdiv@divisor& (0+255),w,b
 12439  0064F8  0100               	movlb	0	; () banked
 12440  0064FA  5F61               	subwf	___lbdiv@dividend& (0+255),f,b
 12441                           
 12442                           ; BSR set to: 0
 12443  0064FC  0100               	movlb	0	; () banked
 12444  0064FE  8163               	bsf	___lbdiv@quotient& (0+255),0,b
 12445  006500  D000               	goto	l12823
 12446  006502                     l12823:
 12447                           
 12448                           ; BSR set to: 0
 12449  006502  0100               	movlb	0	; () banked
 12450  006504  90D8               	bcf	status,0,c
 12451  006506  3360               	rrcf	___lbdiv@divisor& (0+255),f,b
 12452                           
 12453                           ; BSR set to: 0
 12454  006508  0100               	movlb	0	; () banked
 12455  00650A  2F62               	decfsz	___lbdiv@counter& (0+255),f,b
 12456  00650C  D7E8               	goto	l12817
 12457  00650E  D001               	goto	l12827
 12458                           
 12459                           ; BSR set to: 0
 12460  006510  D000               	goto	l12827
 12461  006512                     l12827:
 12462                           
 12463                           ; BSR set to: 0
 12464  006512  0100               	movlb	0	; () banked
 12465  006514  5163               	movf	___lbdiv@quotient& (0+255),w,b
 12466  006516  D000               	goto	l2502
 12467  006518                     l2502:
 12468                           
 12469                           ; BSR set to: 0
 12470  006518  0012               	return		;funcret
 12471  00651A                     __end_of___lbdiv:
 12472                           	opt stack 0
 12473                           tblptru	equ	0xFF8
 12474                           tblptrh	equ	0xFF7
 12475                           tblptrl	equ	0xFF6
 12476                           tablat	equ	0xFF5
 12477                           prodh	equ	0xFF4
 12478                           prodl	equ	0xFF3
 12479                           intcon	equ	0xFF2
 12480                           postinc0	equ	0xFEE
 12481                           wreg	equ	0xFE8
 12482                           indf1	equ	0xFE7
 12483                           postdec1	equ	0xFE5
 12484                           fsr1h	equ	0xFE2
 12485                           fsr1l	equ	0xFE1
 12486                           indf2	equ	0xFDF
 12487                           fsr2h	equ	0xFDA
 12488                           fsr2l	equ	0xFD9
 12489                           status	equ	0xFD8
 12490                           
 12491 ;; *************** function ___awmod *****************
 12492 ;; Defined at:
 12493 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
 12494 ;; Parameters:    Size  Location     Type
 12495 ;;  dividend        2    0[BANK0 ] int 
 12496 ;;  divisor         2    2[BANK0 ] int 
 12497 ;; Auto vars:     Size  Location     Type
 12498 ;;  sign            1    5[BANK0 ] unsigned char 
 12499 ;;  counter         1    4[BANK0 ] unsigned char 
 12500 ;; Return value:  Size  Location     Type
 12501 ;;                  2    0[BANK0 ] int 
 12502 ;; Registers used:
 12503 ;;		wreg, status,2, status,0
 12504 ;; Tracked objects:
 12505 ;;		On entry : 0/0
 12506 ;;		On exit  : 0/0
 12507 ;;		Unchanged: 0/0
 12508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12509 ;;      Params:         0       4       0       0       0       0       0       0       0
 12510 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12511 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12512 ;;      Totals:         0       6       0       0       0       0       0       0       0
 12513 ;;Total ram usage:        6 bytes
 12514 ;; Hardware stack levels used:    1
 12515 ;; Hardware stack levels required when called:   11
 12516 ;; This function calls:
 12517 ;;		Nothing
 12518 ;; This function is called by:
 12519 ;;		_moteApp_add8bToDataBuffer
 12520 ;;		_oled_putUint8
 12521 ;;		_oled_putint8
 12522 ;; This function uses a non-reentrant model
 12523 ;;
 12524                           
 12525                           	psect	text28
 12526  0056F0                     __ptext28:
 12527                           	opt stack 0
 12528  0056F0                     ___awmod:
 12529                           	opt stack 16
 12530                           
 12531                           ; BSR set to: 0
 12532                           ;incstack = 0
 12533  0056F0  0E00               	movlw	0
 12534  0056F2  0100               	movlb	0	; () banked
 12535  0056F4  6F65               	movwf	___awmod@sign& (0+255),b
 12536                           
 12537                           ; BSR set to: 0
 12538  0056F6  0100               	movlb	0	; () banked
 12539  0056F8  BF61               	btfsc	(___awmod@dividend+1)& (0+255),7,b
 12540  0056FA  D002               	goto	u11960
 12541  0056FC  D000               	goto	u11961
 12542  0056FE                     u11961:
 12543  0056FE  D009               	goto	l12733
 12544  005700                     u11960:
 12545                           
 12546                           ; BSR set to: 0
 12547  005700  0100               	movlb	0	; () banked
 12548  005702  6D60               	negf	___awmod@dividend& (0+255),b
 12549  005704  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 12550  005706  B0D8               	btfsc	status,0,c
 12551  005708  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 12552                           
 12553                           ; BSR set to: 0
 12554  00570A  0E01               	movlw	1
 12555  00570C  0100               	movlb	0	; () banked
 12556  00570E  6F65               	movwf	___awmod@sign& (0+255),b
 12557  005710  D000               	goto	l12733
 12558  005712                     l12733:
 12559                           
 12560                           ; BSR set to: 0
 12561  005712  0100               	movlb	0	; () banked
 12562  005714  BF63               	btfsc	(___awmod@divisor+1)& (0+255),7,b
 12563  005716  D002               	goto	u11970
 12564  005718  D000               	goto	u11971
 12565  00571A                     u11971:
 12566  00571A  D006               	goto	l12737
 12567  00571C                     u11970:
 12568                           
 12569                           ; BSR set to: 0
 12570  00571C  0100               	movlb	0	; () banked
 12571  00571E  6D62               	negf	___awmod@divisor& (0+255),b
 12572  005720  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 12573  005722  B0D8               	btfsc	status,0,c
 12574  005724  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 12575  005726  D000               	goto	l12737
 12576  005728                     l12737:
 12577                           
 12578                           ; BSR set to: 0
 12579  005728  0100               	movlb	0	; () banked
 12580  00572A  5162               	movf	___awmod@divisor& (0+255),w,b
 12581  00572C  0100               	movlb	0	; () banked
 12582  00572E  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 12583  005730  B4D8               	btfsc	status,2,c
 12584  005732  D001               	goto	u11981
 12585  005734  D001               	goto	u11980
 12586  005736                     u11981:
 12587  005736  D030               	goto	l12753
 12588  005738                     u11980:
 12589                           
 12590                           ; BSR set to: 0
 12591  005738  0E01               	movlw	1
 12592  00573A  0100               	movlb	0	; () banked
 12593  00573C  6F64               	movwf	___awmod@counter& (0+255),b
 12594  00573E  D007               	goto	l12743
 12595  005740                     l12741:
 12596                           
 12597                           ; BSR set to: 0
 12598  005740  0100               	movlb	0	; () banked
 12599  005742  90D8               	bcf	status,0,c
 12600  005744  3762               	rlcf	___awmod@divisor& (0+255),f,b
 12601  005746  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 12602  005748  0100               	movlb	0	; () banked
 12603  00574A  2B64               	incf	___awmod@counter& (0+255),f,b
 12604  00574C  D000               	goto	l12743
 12605  00574E                     l12743:
 12606                           
 12607                           ; BSR set to: 0
 12608  00574E  0100               	movlb	0	; () banked
 12609  005750  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12610  005752  D001               	goto	u11991
 12611  005754  D001               	goto	u11990
 12612  005756                     u11991:
 12613  005756  D7F4               	goto	l12741
 12614  005758                     u11990:
 12615  005758  D001               	goto	l12745
 12616                           
 12617                           ; BSR set to: 0
 12618  00575A  D000               	goto	l12745
 12619  00575C                     l12745:
 12620                           
 12621                           ; BSR set to: 0
 12622  00575C  0100               	movlb	0	; () banked
 12623  00575E  5162               	movf	___awmod@divisor& (0+255),w,b
 12624  005760  0100               	movlb	0	; () banked
 12625  005762  5D60               	subwf	___awmod@dividend& (0+255),w,b
 12626  005764  0100               	movlb	0	; () banked
 12627  005766  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 12628  005768  0100               	movlb	0	; () banked
 12629  00576A  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 12630  00576C  A0D8               	btfss	status,0,c
 12631  00576E  D001               	goto	u12001
 12632  005770  D001               	goto	u12000
 12633  005772                     u12001:
 12634  005772  D009               	goto	l12749
 12635  005774                     u12000:
 12636                           
 12637                           ; BSR set to: 0
 12638  005774  0100               	movlb	0	; () banked
 12639  005776  5162               	movf	___awmod@divisor& (0+255),w,b
 12640  005778  0100               	movlb	0	; () banked
 12641  00577A  5F60               	subwf	___awmod@dividend& (0+255),f,b
 12642  00577C  0100               	movlb	0	; () banked
 12643  00577E  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 12644  005780  0100               	movlb	0	; () banked
 12645  005782  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 12646  005784  D000               	goto	l12749
 12647  005786                     l12749:
 12648                           
 12649                           ; BSR set to: 0
 12650  005786  0100               	movlb	0	; () banked
 12651  005788  90D8               	bcf	status,0,c
 12652  00578A  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 12653  00578C  3362               	rrcf	___awmod@divisor& (0+255),f,b
 12654                           
 12655                           ; BSR set to: 0
 12656  00578E  0100               	movlb	0	; () banked
 12657  005790  2F64               	decfsz	___awmod@counter& (0+255),f,b
 12658  005792  D7E4               	goto	l12745
 12659  005794  D001               	goto	l12753
 12660                           
 12661                           ; BSR set to: 0
 12662  005796  D000               	goto	l12753
 12663  005798                     l12753:
 12664                           
 12665                           ; BSR set to: 0
 12666  005798  0100               	movlb	0	; () banked
 12667  00579A  5165               	movf	___awmod@sign& (0+255),w,b
 12668  00579C  0100               	movlb	0	; () banked
 12669  00579E  B4D8               	btfsc	status,2,c
 12670  0057A0  D001               	goto	u12011
 12671  0057A2  D001               	goto	u12010
 12672  0057A4                     u12011:
 12673  0057A4  D006               	goto	l12757
 12674  0057A6                     u12010:
 12675                           
 12676                           ; BSR set to: 0
 12677  0057A6  0100               	movlb	0	; () banked
 12678  0057A8  6D60               	negf	___awmod@dividend& (0+255),b
 12679  0057AA  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 12680  0057AC  B0D8               	btfsc	status,0,c
 12681  0057AE  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 12682  0057B0  D000               	goto	l12757
 12683  0057B2                     l12757:
 12684                           
 12685                           ; BSR set to: 0
 12686  0057B2  C060  F060         	movff	___awmod@dividend,?___awmod
 12687  0057B6  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 12688  0057BA  D000               	goto	l2357
 12689  0057BC                     l2357:
 12690                           
 12691                           ; BSR set to: 0
 12692  0057BC  0012               	return		;funcret
 12693  0057BE                     __end_of___awmod:
 12694                           	opt stack 0
 12695                           tblptru	equ	0xFF8
 12696                           tblptrh	equ	0xFF7
 12697                           tblptrl	equ	0xFF6
 12698                           tablat	equ	0xFF5
 12699                           prodh	equ	0xFF4
 12700                           prodl	equ	0xFF3
 12701                           intcon	equ	0xFF2
 12702                           postinc0	equ	0xFEE
 12703                           wreg	equ	0xFE8
 12704                           indf1	equ	0xFE7
 12705                           postdec1	equ	0xFE5
 12706                           fsr1h	equ	0xFE2
 12707                           fsr1l	equ	0xFE1
 12708                           indf2	equ	0xFDF
 12709                           fsr2h	equ	0xFDA
 12710                           fsr2l	equ	0xFD9
 12711                           status	equ	0xFD8
 12712                           
 12713 ;; *************** function _moteApp_GoToSleep *****************
 12714 ;; Defined at:
 12715 ;;		line 1173 in file "../Includes/Board/MOTEapp.c"
 12716 ;; Parameters:    Size  Location     Type
 12717 ;;		None
 12718 ;; Auto vars:     Size  Location     Type
 12719 ;;  status          1   14[BANK0 ] unsigned char 
 12720 ;; Return value:  Size  Location     Type
 12721 ;;                  1    wreg      unsigned char 
 12722 ;; Registers used:
 12723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12724 ;; Tracked objects:
 12725 ;;		On entry : 0/0
 12726 ;;		On exit  : 0/0
 12727 ;;		Unchanged: 0/0
 12728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12729 ;;      Params:         0       0       0       0       0       0       0       0       0
 12730 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12731 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12732 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12733 ;;Total ram usage:        1 bytes
 12734 ;; Hardware stack levels used:    1
 12735 ;; Hardware stack levels required when called:   17
 12736 ;; This function calls:
 12737 ;;		_EUSART_FlushBuffer
 12738 ;;		_PIN_MANAGER_Initialize
 12739 ;;		_moduleResync
 12740 ;;		_moduleSleep
 12741 ;;		_moteApp_delayms
 12742 ;;		_oled_displayOff
 12743 ;;		_oled_init
 12744 ;; This function is called by:
 12745 ;;		_moteRunningProcess
 12746 ;; This function uses a non-reentrant model
 12747 ;;
 12748                           
 12749                           	psect	text29
 12750  0045E6                     __ptext29:
 12751                           	opt stack 0
 12752  0045E6                     _moteApp_GoToSleep:
 12753                           	opt stack 11
 12754                           
 12755                           ;MOTEapp.c: 1175: uint8_t status = 0;
 12756                           
 12757                           ; BSR set to: 0
 12758                           ;incstack = 0
 12759  0045E6  0E00               	movlw	0
 12760  0045E8  0100               	movlb	0	; () banked
 12761  0045EA  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12762                           
 12763                           ;MOTEapp.c: 1176: while (PORTBbits.RB0 == 0);
 12764  0045EC  D000               	goto	l663
 12765  0045EE                     l663:
 12766  0045EE  A081               	btfss	3969,0,c	;volatile
 12767  0045F0  D001               	goto	u12611
 12768  0045F2  D001               	goto	u12610
 12769  0045F4                     u12611:
 12770  0045F4  D7FC               	goto	l663
 12771  0045F6                     u12610:
 12772  0045F6  D000               	goto	l13227
 12773  0045F8                     l13227:
 12774                           
 12775                           ;MOTEapp.c: 1177: moduleSleep();
 12776  0045F8  EC05  F038         	call	_moduleSleep	;wreg free
 12777                           
 12778                           ;MOTEapp.c: 1178: oled_displayOff(1);
 12779  0045FC  0E01               	movlw	1
 12780  0045FE  EC67  F039         	call	_oled_displayOff
 12781                           
 12782                           ;MOTEapp.c: 1179: ADCON0bits.ADON = 0;
 12783  004602  90C2               	bcf	4034,0,c	;volatile
 12784                           
 12785                           ;MOTEapp.c: 1180: INTCONbits.GIE = 0;
 12786  004604  9EF2               	bcf	intcon,7,c	;volatile
 12787                           
 12788                           ;MOTEapp.c: 1181: GIE = 0;
 12789  004606  9EF2               	bcf	intcon,7,c	;volatile
 12790                           
 12791                           ;MOTEapp.c: 1182: PEIE = 0;
 12792  004608  9CF2               	bcf	intcon,6,c	;volatile
 12793                           
 12794                           ;MOTEapp.c: 1184: LATEbits.LATE2 = 0;
 12795  00460A  948D               	bcf	3981,2,c	;volatile
 12796                           
 12797                           ;MOTEapp.c: 1185: PIE2bits.TMR3IE = 0;
 12798  00460C  92A0               	bcf	4000,1,c	;volatile
 12799                           
 12800                           ;MOTEapp.c: 1187: ANSELAbits.ANSA0 = 1;
 12801  00460E  010F               	movlb	15	; () banked
 12802  004610  815B               	bsf	91,0,b	;volatile
 12803                           
 12804                           ; BSR set to: 15
 12805                           ;MOTEapp.c: 1189: PIE2bits.C1IE = 1;
 12806  004612  8CA0               	bsf	4000,6,c	;volatile
 12807                           
 12808                           ; BSR set to: 15
 12809                           ;MOTEapp.c: 1190: INTCON3bits.INT1IE = 1;
 12810  004614  86F0               	bsf	intcon3,3,c	;volatile
 12811                           
 12812                           ; BSR set to: 15
 12813                           ;MOTEapp.c: 1191: INTCONbits.INT0IE = 1;
 12814  004616  88F2               	bsf	intcon,4,c	;volatile
 12815                           
 12816                           ; BSR set to: 15
 12817                           ;MOTEapp.c: 1192: IOCCbits.IOCC2 = 1;
 12818  004618  8487               	bsf	3975,2,c	;volatile
 12819                           
 12820                           ; BSR set to: 15
 12821                           ;MOTEapp.c: 1193: INTCONbits.IOCIE = 1;
 12822  00461A  86F2               	bsf	intcon,3,c	;volatile
 12823                           
 12824                           ; BSR set to: 15
 12825                           ;MOTEapp.c: 1195: status = PORTBbits.RB1;
 12826  00461C  0E00               	movlw	0
 12827  00461E  B281               	btfsc	3969,1,c	;volatile
 12828  004620  0E01               	movlw	1
 12829  004622  0100               	movlb	0	; () banked
 12830  004624  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12831                           
 12832                           ; BSR set to: 0
 12833                           ;MOTEapp.c: 1196: status = PORTBbits.RB0;
 12834  004626  0E00               	movlw	0
 12835  004628  B081               	btfsc	3969,0,c	;volatile
 12836  00462A  0E01               	movlw	1
 12837  00462C  0100               	movlb	0	; () banked
 12838  00462E  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12839                           
 12840                           ; BSR set to: 0
 12841                           ;MOTEapp.c: 1197: status = PORTCbits.RC2;
 12842  004630  0E00               	movlw	0
 12843  004632  B482               	btfsc	3970,2,c	;volatile
 12844  004634  0E01               	movlw	1
 12845  004636  0100               	movlb	0	; () banked
 12846  004638  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12847                           
 12848                           ; BSR set to: 0
 12849                           ;MOTEapp.c: 1199: if (periodicState)
 12850  00463A  0100               	movlb	0	; () banked
 12851  00463C  51F9               	movf	_periodicState& (0+255),w,b
 12852  00463E  B4D8               	btfsc	status,2,c
 12853  004640  D001               	goto	u12621
 12854  004642  D001               	goto	u12620
 12855  004644                     u12621:
 12856  004644  D001               	goto	l666
 12857  004646                     u12620:
 12858                           
 12859                           ; BSR set to: 0
 12860                           ;MOTEapp.c: 1200: {
 12861                           ;MOTEapp.c: 1201: WDTCONbits.SWDTEN = 1;
 12862  004646  80D1               	bsf	4049,0,c	;volatile
 12863  004648                     l666:
 12864                           
 12865                           ; BSR set to: 0
 12866                           ;MOTEapp.c: 1202: }
 12867                           ;MOTEapp.c: 1204: INTCONbits.IOCIF = 0;
 12868  004648  90F2               	bcf	intcon,0,c	;volatile
 12869                           
 12870                           ;MOTEapp.c: 1205: INTCONbits.INT0IF = 0;
 12871  00464A  92F2               	bcf	intcon,1,c	;volatile
 12872                           
 12873                           ;MOTEapp.c: 1206: INTCON3bits.INT1IF = 0;
 12874  00464C  90F0               	bcf	intcon3,0,c	;volatile
 12875                           
 12876                           ;MOTEapp.c: 1207: PIR2bits.C1IF = 0;
 12877  00464E  9CA1               	bcf	4001,6,c	;volatile
 12878                           
 12879                           ;MOTEapp.c: 1208: __nop();
 12880  004650  F000               	nop	
 12881  004652  0003               	sleep		;# 
 12882                           
 12883                           ;MOTEapp.c: 1210: __nop();
 12884  004654  F000               	nop	
 12885                           
 12886                           ;MOTEapp.c: 1212: WDTCONbits.SWDTEN = 0;
 12887  004656  90D1               	bcf	4049,0,c	;volatile
 12888                           
 12889                           ;MOTEapp.c: 1213: EUSART_FlushBuffer();
 12890  004658  EC3C  F034         	call	_EUSART_FlushBuffer	;wreg free
 12891                           
 12892                           ;MOTEapp.c: 1215: INTCONbits.IOCIE = 0;
 12893  00465C  96F2               	bcf	intcon,3,c	;volatile
 12894                           
 12895                           ;MOTEapp.c: 1216: INTCON3bits.INT1IE = 0;
 12896  00465E  96F0               	bcf	intcon3,3,c	;volatile
 12897                           
 12898                           ;MOTEapp.c: 1217: INTCONbits.INT0IE = 0;
 12899  004660  98F2               	bcf	intcon,4,c	;volatile
 12900                           
 12901                           ;MOTEapp.c: 1218: IOCCbits.IOCC2 = 0;
 12902  004662  9487               	bcf	3975,2,c	;volatile
 12903                           
 12904                           ;MOTEapp.c: 1219: PIE2bits.C1IE = 0;
 12905  004664  9CA0               	bcf	4000,6,c	;volatile
 12906                           
 12907                           ;MOTEapp.c: 1220: GIE = 1;
 12908  004666  8EF2               	bsf	intcon,7,c	;volatile
 12909                           
 12910                           ;MOTEapp.c: 1222: PIN_MANAGER_Initialize();
 12911  004668  ECF4  F034         	call	_PIN_MANAGER_Initialize	;wreg free
 12912                           
 12913                           ;MOTEapp.c: 1224: if ((INTCONbits.IOCIF)||(INTCONbits.INT0IF)||(INTCON3bits.INT1IF)||(PI
      +                          R2bits.C1IF))
 12914  00466C  B0F2               	btfsc	intcon,0,c	;volatile
 12915  00466E  D001               	goto	u12631
 12916  004670  D001               	goto	u12630
 12917  004672                     u12631:
 12918  004672  D00C               	goto	l669
 12919  004674                     u12630:
 12920  004674  B2F2               	btfsc	intcon,1,c	;volatile
 12921  004676  D001               	goto	u12641
 12922  004678  D001               	goto	u12640
 12923  00467A                     u12641:
 12924  00467A  D008               	goto	l669
 12925  00467C                     u12640:
 12926  00467C  B0F0               	btfsc	intcon3,0,c	;volatile
 12927  00467E  D001               	goto	u12651
 12928  004680  D001               	goto	u12650
 12929  004682                     u12651:
 12930  004682  D004               	goto	l669
 12931  004684                     u12650:
 12932  004684  ACA1               	btfss	4001,6,c	;volatile
 12933  004686  D001               	goto	u12661
 12934  004688  D001               	goto	u12660
 12935  00468A                     u12661:
 12936  00468A  D012               	goto	l13303
 12937  00468C                     u12660:
 12938  00468C                     l669:
 12939                           
 12940                           ;MOTEapp.c: 1225: {
 12941                           ;MOTEapp.c: 1226: INTCONbits.IOCIF = 0;
 12942  00468C  90F2               	bcf	intcon,0,c	;volatile
 12943                           
 12944                           ;MOTEapp.c: 1227: INTCONbits.INT0IF = 0;
 12945  00468E  92F2               	bcf	intcon,1,c	;volatile
 12946                           
 12947                           ;MOTEapp.c: 1228: INTCON3bits.INT1IF = 0;
 12948  004690  90F0               	bcf	intcon3,0,c	;volatile
 12949                           
 12950                           ;MOTEapp.c: 1229: status = 1;
 12951  004692  0E01               	movlw	1
 12952  004694  0100               	movlb	0	; () banked
 12953  004696  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12954                           
 12955                           ; BSR set to: 0
 12956                           ;MOTEapp.c: 1232: oled_displayOff(0);
 12957  004698  0E00               	movlw	0
 12958  00469A  EC67  F039         	call	_oled_displayOff
 12959                           
 12960                           ;MOTEapp.c: 1233: oled_init();
 12961  00469E  ECD4  F037         	call	_oled_init	;wreg free
 12962                           
 12963                           ;MOTEapp.c: 1235: LATEbits.LATE2 = 1;
 12964  0046A2  848D               	bsf	3981,2,c	;volatile
 12965                           
 12966                           ;MOTEapp.c: 1236: TMR3H = 0xFB;
 12967  0046A4  0EFB               	movlw	251
 12968  0046A6  6EB3               	movwf	4019,c	;volatile
 12969                           
 12970                           ;MOTEapp.c: 1237: TMR3L = 0x50;
 12971  0046A8  0E50               	movlw	80
 12972  0046AA  6EB2               	movwf	4018,c	;volatile
 12973                           
 12974                           ;MOTEapp.c: 1238: PIE2bits.TMR3IE = 1;
 12975  0046AC  82A0               	bsf	4000,1,c	;volatile
 12976                           
 12977                           ;MOTEapp.c: 1239: }
 12978  0046AE  D009               	goto	l13309
 12979  0046B0                     l13303:
 12980                           
 12981                           ;MOTEapp.c: 1240: else
 12982                           ;MOTEapp.c: 1241: {
 12983                           ;MOTEapp.c: 1242: secTicker = 10;
 12984  0046B0  0E0A               	movlw	10
 12985  0046B2  0100               	movlb	0	; () banked
 12986  0046B4  6FE5               	movwf	_secTicker& (0+255),b
 12987                           
 12988                           ;MOTEapp.c: 1243: status = 0;
 12989  0046B6  0E00               	movlw	0
 12990  0046B8  0100               	movlb	0	; () banked
 12991  0046BA  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12992                           
 12993                           ; BSR set to: 0
 12994                           ;MOTEapp.c: 1245: LATEbits.LATE2 = 0;
 12995  0046BC  948D               	bcf	3981,2,c	;volatile
 12996                           
 12997                           ; BSR set to: 0
 12998                           ;MOTEapp.c: 1246: PIE2bits.TMR3IE = 0;
 12999  0046BE  92A0               	bcf	4000,1,c	;volatile
 13000  0046C0  D000               	goto	l13309
 13001  0046C2                     l13309:
 13002                           
 13003                           ;MOTEapp.c: 1247: }
 13004                           ;MOTEapp.c: 1248: ANSELAbits.ANSA0 = 0;
 13005  0046C2  010F               	movlb	15	; () banked
 13006  0046C4  915B               	bcf	91,0,b	;volatile
 13007                           
 13008                           ; BSR set to: 15
 13009                           ;MOTEapp.c: 1250: moduleResync();
 13010  0046C6  ECB5  F02D         	call	_moduleResync	;wreg free
 13011                           
 13012                           ;MOTEapp.c: 1251: moteApp_delayms(40);
 13013  0046CA  0E00               	movlw	0
 13014  0046CC  0100               	movlb	0	; () banked
 13015  0046CE  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 13016  0046D0  0E28               	movlw	40
 13017  0046D2  6F60               	movwf	moteApp_delayms@length& (0+255),b
 13018  0046D4  EC91  F036         	call	_moteApp_delayms	;wreg free
 13019                           
 13020                           ;MOTEapp.c: 1252: moduleResync();
 13021  0046D8  ECB5  F02D         	call	_moduleResync	;wreg free
 13022                           
 13023                           ;MOTEapp.c: 1253: moteApp_delayms(40);
 13024  0046DC  0E00               	movlw	0
 13025  0046DE  0100               	movlb	0	; () banked
 13026  0046E0  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 13027  0046E2  0E28               	movlw	40
 13028  0046E4  6F60               	movwf	moteApp_delayms@length& (0+255),b
 13029  0046E6  EC91  F036         	call	_moteApp_delayms	;wreg free
 13030                           
 13031                           ;MOTEapp.c: 1254: return status;
 13032  0046EA  0100               	movlb	0	; () banked
 13033  0046EC  516E               	movf	moteApp_GoToSleep@status& (0+255),w,b
 13034  0046EE  D000               	goto	l671
 13035  0046F0                     l671:
 13036                           
 13037                           ; BSR set to: 0
 13038  0046F0  0012               	return		;funcret
 13039  0046F2                     __end_of_moteApp_GoToSleep:
 13040                           	opt stack 0
 13041                           tblptru	equ	0xFF8
 13042                           tblptrh	equ	0xFF7
 13043                           tblptrl	equ	0xFF6
 13044                           tablat	equ	0xFF5
 13045                           prodh	equ	0xFF4
 13046                           prodl	equ	0xFF3
 13047                           intcon	equ	0xFF2
 13048                           intcon3	equ	0xFF0
 13049                           postinc0	equ	0xFEE
 13050                           wreg	equ	0xFE8
 13051                           indf1	equ	0xFE7
 13052                           postdec1	equ	0xFE5
 13053                           fsr1h	equ	0xFE2
 13054                           fsr1l	equ	0xFE1
 13055                           indf2	equ	0xFDF
 13056                           fsr2h	equ	0xFDA
 13057                           fsr2l	equ	0xFD9
 13058                           status	equ	0xFD8
 13059                           
 13060 ;; *************** function _oled_init *****************
 13061 ;; Defined at:
 13062 ;;		line 366 in file "../Includes/Drivers/SSD1306oLED.c"
 13063 ;; Parameters:    Size  Location     Type
 13064 ;;		None
 13065 ;; Auto vars:     Size  Location     Type
 13066 ;;		None
 13067 ;; Return value:  Size  Location     Type
 13068 ;;                  1    wreg      void 
 13069 ;; Registers used:
 13070 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13071 ;; Tracked objects:
 13072 ;;		On entry : 0/0
 13073 ;;		On exit  : 0/0
 13074 ;;		Unchanged: 0/0
 13075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13076 ;;      Params:         0       0       0       0       0       0       0       0       0
 13077 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13078 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13079 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13080 ;;Total ram usage:        0 bytes
 13081 ;; Hardware stack levels used:    1
 13082 ;; Hardware stack levels required when called:   16
 13083 ;; This function calls:
 13084 ;;		_oled_clear
 13085 ;;		_oled_devInit
 13086 ;;		_oled_setDisplay
 13087 ;;		_oled_setFont
 13088 ;; This function is called by:
 13089 ;;		_main
 13090 ;;		_moteApp_GoToSleep
 13091 ;; This function uses a non-reentrant model
 13092 ;;
 13093                           
 13094                           	psect	text30
 13095  006FA8                     __ptext30:
 13096                           	opt stack 0
 13097  006FA8                     _oled_init:
 13098                           	opt stack 14
 13099                           
 13100                           ;SSD1306oLED.c: 369: TRISEbits.TRISE2 = 0;
 13101                           
 13102                           ; BSR set to: 0
 13103                           ;incstack = 0
 13104  006FA8  9496               	bcf	3990,2,c	;volatile
 13105                           
 13106                           ;SSD1306oLED.c: 370: LATEbits.LATE2 = 1;
 13107  006FAA  848D               	bsf	3981,2,c	;volatile
 13108                           
 13109                           ;SSD1306oLED.c: 371: TRISBbits.TRISB2 = 0;
 13110  006FAC  9493               	bcf	3987,2,c	;volatile
 13111                           
 13112                           ;SSD1306oLED.c: 372: TRISBbits.TRISB3 = 0;
 13113  006FAE  9693               	bcf	3987,3,c	;volatile
 13114                           
 13115                           ;SSD1306oLED.c: 373: TRISBbits.TRISB4 = 0;
 13116  006FB0  9893               	bcf	3987,4,c	;volatile
 13117                           
 13118                           ;SSD1306oLED.c: 374: TRISCbits.TRISC0 = 0;
 13119  006FB2  9094               	bcf	3988,0,c	;volatile
 13120                           
 13121                           ;SSD1306oLED.c: 375: TRISCbits.TRISC1 = 0;
 13122  006FB4  9294               	bcf	3988,1,c	;volatile
 13123                           
 13124                           ;SSD1306oLED.c: 377: LATBbits.LATB3 = 1;
 13125  006FB6  868A               	bsf	3978,3,c	;volatile
 13126                           
 13127                           ;SSD1306oLED.c: 379: LATBbits.LATB4 = 0;
 13128  006FB8  988A               	bcf	3978,4,c	;volatile
 13129                           
 13130                           ;SSD1306oLED.c: 381: oled_devInit();
 13131  006FBA  EC99  F031         	call	_oled_devInit	;wreg free
 13132                           
 13133                           ;SSD1306oLED.c: 383: oled_setDisplay(Inverse);
 13134  006FBE  0E01               	movlw	1
 13135  006FC0  ECED  F037         	call	_oled_setDisplay
 13136                           
 13137                           ;SSD1306oLED.c: 384: oled_setFont(OledFont0);
 13138  006FC4  0EF7               	movlw	low _OledFont0
 13139  006FC6  0100               	movlb	0	; () banked
 13140  006FC8  6F60               	movwf	oled_setFont@font& (0+255),b
 13141  006FCA  0E75               	movlw	high _OledFont0
 13142  006FCC  0100               	movlb	0	; () banked
 13143  006FCE  6F61               	movwf	(oled_setFont@font+1)& (0+255),b
 13144  006FD0  EC98  F038         	call	_oled_setFont	;wreg free
 13145                           
 13146                           ;SSD1306oLED.c: 385: oled_clear();
 13147  006FD4  ECA6  F038         	call	_oled_clear	;wreg free
 13148  006FD8  0012               	return		;funcret
 13149  006FDA                     __end_of_oled_init:
 13150                           	opt stack 0
 13151                           tblptru	equ	0xFF8
 13152                           tblptrh	equ	0xFF7
 13153                           tblptrl	equ	0xFF6
 13154                           tablat	equ	0xFF5
 13155                           prodh	equ	0xFF4
 13156                           prodl	equ	0xFF3
 13157                           intcon	equ	0xFF2
 13158                           intcon3	equ	0xFF0
 13159                           postinc0	equ	0xFEE
 13160                           wreg	equ	0xFE8
 13161                           indf1	equ	0xFE7
 13162                           postdec1	equ	0xFE5
 13163                           fsr1h	equ	0xFE2
 13164                           fsr1l	equ	0xFE1
 13165                           indf2	equ	0xFDF
 13166                           fsr2h	equ	0xFDA
 13167                           fsr2l	equ	0xFD9
 13168                           status	equ	0xFD8
 13169                           
 13170 ;; *************** function _oled_setFont *****************
 13171 ;; Defined at:
 13172 ;;		line 256 in file "../Includes/Drivers/SSD1306oLED.c"
 13173 ;; Parameters:    Size  Location     Type
 13174 ;;  font            2    0[BANK0 ] PTR const unsigned char 
 13175 ;;		 -> OledFont0(768), 
 13176 ;; Auto vars:     Size  Location     Type
 13177 ;;		None
 13178 ;; Return value:  Size  Location     Type
 13179 ;;                  1    wreg      void 
 13180 ;; Registers used:
 13181 ;;		wreg, status,2, status,0
 13182 ;; Tracked objects:
 13183 ;;		On entry : 0/0
 13184 ;;		On exit  : 0/0
 13185 ;;		Unchanged: 0/0
 13186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13187 ;;      Params:         0       2       0       0       0       0       0       0       0
 13188 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13189 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13190 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13191 ;;Total ram usage:        2 bytes
 13192 ;; Hardware stack levels used:    1
 13193 ;; Hardware stack levels required when called:   11
 13194 ;; This function calls:
 13195 ;;		Nothing
 13196 ;; This function is called by:
 13197 ;;		_oled_init
 13198 ;; This function uses a non-reentrant model
 13199 ;;
 13200                           
 13201                           	psect	text31
 13202  007130                     __ptext31:
 13203                           	opt stack 0
 13204  007130                     _oled_setFont:
 13205                           	opt stack 18
 13206                           
 13207                           ;SSD1306oLED.c: 258: if(font!=0)
 13208                           
 13209                           ;incstack = 0
 13210  007130  0100               	movlb	0	; () banked
 13211  007132  5160               	movf	oled_setFont@font& (0+255),w,b
 13212  007134  0100               	movlb	0	; () banked
 13213  007136  1161               	iorwf	(oled_setFont@font+1)& (0+255),w,b
 13214  007138  B4D8               	btfsc	status,2,c
 13215  00713A  D001               	goto	u10921
 13216  00713C  D001               	goto	u10920
 13217  00713E                     u10921:
 13218  00713E  D005               	goto	l1021
 13219  007140                     u10920:
 13220                           
 13221                           ; BSR set to: 0
 13222                           ;SSD1306oLED.c: 259: {
 13223                           ;SSD1306oLED.c: 260: selectedFont=font;
 13224  007140  C060  F1F8         	movff	oled_setFont@font,_selectedFont
 13225  007144  C061  F1F9         	movff	oled_setFont@font+1,_selectedFont+1
 13226  007148  D000               	goto	l1021
 13227  00714A                     l1021:
 13228                           
 13229                           ; BSR set to: 0
 13230  00714A  0012               	return		;funcret
 13231  00714C                     __end_of_oled_setFont:
 13232                           	opt stack 0
 13233                           tblptru	equ	0xFF8
 13234                           tblptrh	equ	0xFF7
 13235                           tblptrl	equ	0xFF6
 13236                           tablat	equ	0xFF5
 13237                           prodh	equ	0xFF4
 13238                           prodl	equ	0xFF3
 13239                           intcon	equ	0xFF2
 13240                           intcon3	equ	0xFF0
 13241                           postinc0	equ	0xFEE
 13242                           wreg	equ	0xFE8
 13243                           indf1	equ	0xFE7
 13244                           postdec1	equ	0xFE5
 13245                           fsr1h	equ	0xFE2
 13246                           fsr1l	equ	0xFE1
 13247                           indf2	equ	0xFDF
 13248                           fsr2h	equ	0xFDA
 13249                           fsr2l	equ	0xFD9
 13250                           status	equ	0xFD8
 13251                           
 13252 ;; *************** function _oled_setDisplay *****************
 13253 ;; Defined at:
 13254 ;;		line 411 in file "../Includes/Drivers/SSD1306oLED.c"
 13255 ;; Parameters:    Size  Location     Type
 13256 ;;  displayType     1    wreg     enum E5864
 13257 ;; Auto vars:     Size  Location     Type
 13258 ;;  displayType     1    1[BANK0 ] enum E5864
 13259 ;; Return value:  Size  Location     Type
 13260 ;;                  1    wreg      void 
 13261 ;; Registers used:
 13262 ;;		wreg, status,2, cstack
 13263 ;; Tracked objects:
 13264 ;;		On entry : 0/0
 13265 ;;		On exit  : 0/0
 13266 ;;		Unchanged: 0/0
 13267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13268 ;;      Params:         0       0       0       0       0       0       0       0       0
 13269 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13270 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13271 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13272 ;;Total ram usage:        1 bytes
 13273 ;; Hardware stack levels used:    1
 13274 ;; Hardware stack levels required when called:   12
 13275 ;; This function calls:
 13276 ;;		_oled_writeCommand
 13277 ;; This function is called by:
 13278 ;;		_oled_init
 13279 ;; This function uses a non-reentrant model
 13280 ;;
 13281                           
 13282                           	psect	text32
 13283  006FDA                     __ptext32:
 13284                           	opt stack 0
 13285  006FDA                     _oled_setDisplay:
 13286                           	opt stack 17
 13287                           
 13288                           ; BSR set to: 0
 13289                           ;incstack = 0
 13290                           ;oled_setDisplay@displayType stored from wreg
 13291  006FDA  0100               	movlb	0	; () banked
 13292  006FDC  6F61               	movwf	oled_setDisplay@displayType& (0+255),b
 13293                           
 13294                           ;SSD1306oLED.c: 413: if (displayType == Normal)
 13295  006FDE  0100               	movlb	0	; () banked
 13296  006FE0  5161               	movf	oled_setDisplay@displayType& (0+255),w,b
 13297  006FE2  0100               	movlb	0	; () banked
 13298  006FE4  A4D8               	btfss	status,2,c
 13299  006FE6  D001               	goto	u10931
 13300  006FE8  D001               	goto	u10930
 13301  006FEA                     u10931:
 13302  006FEA  D007               	goto	l12077
 13303  006FEC                     u10930:
 13304                           
 13305                           ; BSR set to: 0
 13306                           ;SSD1306oLED.c: 414: {
 13307                           ;SSD1306oLED.c: 415: oled_writeCommand(0xa0);
 13308  006FEC  0EA0               	movlw	160
 13309  006FEE  ECD9  F038         	call	_oled_writeCommand
 13310                           
 13311                           ;SSD1306oLED.c: 416: oled_writeCommand(0xc8);
 13312  006FF2  0EC8               	movlw	200
 13313  006FF4  ECD9  F038         	call	_oled_writeCommand
 13314                           
 13315                           ;SSD1306oLED.c: 417: }
 13316  006FF8  D007               	goto	l1063
 13317  006FFA                     l12077:
 13318                           
 13319                           ;SSD1306oLED.c: 418: else
 13320                           ;SSD1306oLED.c: 419: {
 13321                           ;SSD1306oLED.c: 420: oled_writeCommand(0xa1);
 13322  006FFA  0EA1               	movlw	161
 13323  006FFC  ECD9  F038         	call	_oled_writeCommand
 13324                           
 13325                           ;SSD1306oLED.c: 421: oled_writeCommand(0xc0);
 13326  007000  0EC0               	movlw	192
 13327  007002  ECD9  F038         	call	_oled_writeCommand
 13328  007006  D000               	goto	l1063
 13329  007008                     l1063:
 13330  007008  0012               	return		;funcret
 13331  00700A                     __end_of_oled_setDisplay:
 13332                           	opt stack 0
 13333                           tblptru	equ	0xFF8
 13334                           tblptrh	equ	0xFF7
 13335                           tblptrl	equ	0xFF6
 13336                           tablat	equ	0xFF5
 13337                           prodh	equ	0xFF4
 13338                           prodl	equ	0xFF3
 13339                           intcon	equ	0xFF2
 13340                           intcon3	equ	0xFF0
 13341                           postinc0	equ	0xFEE
 13342                           wreg	equ	0xFE8
 13343                           indf1	equ	0xFE7
 13344                           postdec1	equ	0xFE5
 13345                           fsr1h	equ	0xFE2
 13346                           fsr1l	equ	0xFE1
 13347                           indf2	equ	0xFDF
 13348                           fsr2h	equ	0xFDA
 13349                           fsr2l	equ	0xFD9
 13350                           status	equ	0xFD8
 13351                           
 13352 ;; *************** function _oled_devInit *****************
 13353 ;; Defined at:
 13354 ;;		line 388 in file "../Includes/Drivers/SSD1306oLED.c"
 13355 ;; Parameters:    Size  Location     Type
 13356 ;;		None
 13357 ;; Auto vars:     Size  Location     Type
 13358 ;;		None
 13359 ;; Return value:  Size  Location     Type
 13360 ;;                  1    wreg      void 
 13361 ;; Registers used:
 13362 ;;		wreg, status,2, status,0, cstack
 13363 ;; Tracked objects:
 13364 ;;		On entry : 0/0
 13365 ;;		On exit  : 0/0
 13366 ;;		Unchanged: 0/0
 13367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13368 ;;      Params:         0       0       0       0       0       0       0       0       0
 13369 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13370 ;;      Temps:          0       1       0       0       0       0       0       0       0
 13371 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13372 ;;Total ram usage:        1 bytes
 13373 ;; Hardware stack levels used:    1
 13374 ;; Hardware stack levels required when called:   13
 13375 ;; This function calls:
 13376 ;;		_oled_initialDispayLine
 13377 ;;		_oled_powerControl
 13378 ;;		_oled_regulorResistorSelect
 13379 ;;		_oled_setContrastControlRegister
 13380 ;;		_oled_writeCommand
 13381 ;; This function is called by:
 13382 ;;		_oled_init
 13383 ;; This function uses a non-reentrant model
 13384 ;;
 13385                           
 13386                           	psect	text33
 13387  006332                     __ptext33:
 13388                           	opt stack 0
 13389  006332                     _oled_devInit:
 13390                           	opt stack 16
 13391                           
 13392                           ;SSD1306oLED.c: 390: oled_writeCommand(0xe2);
 13393                           
 13394                           ;incstack = 0
 13395  006332  0EE2               	movlw	226
 13396  006334  ECD9  F038         	call	_oled_writeCommand
 13397                           
 13398                           ;SSD1306oLED.c: 391: LATBbits.LATB2=1;
 13399  006338  848A               	bsf	3978,2,c	;volatile
 13400                           
 13401                           ;SSD1306oLED.c: 392: _delay((unsigned long)((200)*(48000000/4000000.0)));
 13402  00633A  0E04               	movlw	4
 13403  00633C  0100               	movlb	0	; () banked
 13404  00633E  6F62               	movwf	??_oled_devInit& (0+255),b
 13405  006340  0E1C               	movlw	28
 13406  006342                     u14497:
 13407  006342  2EE8               	decfsz	wreg,f,c
 13408  006344  D7FE               	bra	u14497
 13409  006346  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 13410  006348  D7FC               	bra	u14497
 13411  00634A  F000               	nop	
 13412                           
 13413                           ;SSD1306oLED.c: 393: LATBbits.LATB2=0;
 13414  00634C  948A               	bcf	3978,2,c	;volatile
 13415                           
 13416                           ;SSD1306oLED.c: 394: _delay((unsigned long)((2000)*(48000000/4000000.0)));
 13417  00634E  0E20               	movlw	32
 13418  006350  0100               	movlb	0	; () banked
 13419  006352  6F62               	movwf	??_oled_devInit& (0+255),b
 13420  006354  0E29               	movlw	41
 13421  006356                     u14507:
 13422  006356  2EE8               	decfsz	wreg,f,c
 13423  006358  D7FE               	bra	u14507
 13424  00635A  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 13425  00635C  D7FC               	bra	u14507
 13426  00635E  D000               	nop2	
 13427                           
 13428                           ;SSD1306oLED.c: 395: LATBbits.LATB2=1;
 13429  006360  848A               	bsf	3978,2,c	;volatile
 13430                           
 13431                           ;SSD1306oLED.c: 396: _delay((unsigned long)((1000)*(48000000/4000000.0)));
 13432  006362  0E10               	movlw	16
 13433  006364  0100               	movlb	0	; () banked
 13434  006366  6F62               	movwf	??_oled_devInit& (0+255),b
 13435  006368  0E94               	movlw	148
 13436  00636A                     u14517:
 13437  00636A  2EE8               	decfsz	wreg,f,c
 13438  00636C  D7FE               	bra	u14517
 13439  00636E  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 13440  006370  D7FC               	bra	u14517
 13441  006372  F000               	nop	
 13442                           
 13443                           ;SSD1306oLED.c: 398: oled_writeCommand(0xa1);
 13444  006374  0EA1               	movlw	161
 13445  006376  ECD9  F038         	call	_oled_writeCommand
 13446                           
 13447                           ;SSD1306oLED.c: 399: oled_writeCommand(0xc0);
 13448  00637A  0EC0               	movlw	192
 13449  00637C  ECD9  F038         	call	_oled_writeCommand
 13450                           
 13451                           ;SSD1306oLED.c: 400: oled_writeCommand(0xa3);
 13452  006380  0EA3               	movlw	163
 13453  006382  ECD9  F038         	call	_oled_writeCommand
 13454                           
 13455                           ;SSD1306oLED.c: 401: oled_powerControl(0x07);
 13456  006386  0E07               	movlw	7
 13457  006388  EC19  F039         	call	_oled_powerControl
 13458                           
 13459                           ;SSD1306oLED.c: 402: oled_regulorResistorSelect(0x05);
 13460  00638C  0E05               	movlw	5
 13461  00638E  EC10  F039         	call	_oled_regulorResistorSelect
 13462                           
 13463                           ;SSD1306oLED.c: 403: oled_setContrastControlRegister(Contrast_level);
 13464  006392  0100               	movlb	0	; () banked
 13465  006394  51F6               	movf	_Contrast_level& (0+255),w,b
 13466  006396  ECF1  F038         	call	_oled_setContrastControlRegister
 13467                           
 13468                           ;SSD1306oLED.c: 404: oled_initialDispayLine(0x00);
 13469  00639A  0E00               	movlw	0
 13470  00639C  ECFC  F038         	call	_oled_initialDispayLine
 13471                           
 13472                           ;SSD1306oLED.c: 405: oled_writeCommand(0xF8);
 13473  0063A0  0EF8               	movlw	248
 13474  0063A2  ECD9  F038         	call	_oled_writeCommand
 13475                           
 13476                           ;SSD1306oLED.c: 406: oled_writeCommand(0x00);
 13477  0063A6  0E00               	movlw	0
 13478  0063A8  ECD9  F038         	call	_oled_writeCommand
 13479                           
 13480                           ;SSD1306oLED.c: 407: oled_writeCommand(0xaf);
 13481  0063AC  0EAF               	movlw	175
 13482  0063AE  ECD9  F038         	call	_oled_writeCommand
 13483  0063B2  0012               	return		;funcret
 13484  0063B4                     __end_of_oled_devInit:
 13485                           	opt stack 0
 13486                           tblptru	equ	0xFF8
 13487                           tblptrh	equ	0xFF7
 13488                           tblptrl	equ	0xFF6
 13489                           tablat	equ	0xFF5
 13490                           prodh	equ	0xFF4
 13491                           prodl	equ	0xFF3
 13492                           intcon	equ	0xFF2
 13493                           intcon3	equ	0xFF0
 13494                           postinc0	equ	0xFEE
 13495                           wreg	equ	0xFE8
 13496                           indf1	equ	0xFE7
 13497                           postdec1	equ	0xFE5
 13498                           fsr1h	equ	0xFE2
 13499                           fsr1l	equ	0xFE1
 13500                           indf2	equ	0xFDF
 13501                           fsr2h	equ	0xFDA
 13502                           fsr2l	equ	0xFD9
 13503                           status	equ	0xFD8
 13504                           
 13505 ;; *************** function _oled_setContrastControlRegister *****************
 13506 ;; Defined at:
 13507 ;;		line 454 in file "../Includes/Drivers/SSD1306oLED.c"
 13508 ;; Parameters:    Size  Location     Type
 13509 ;;  mod             1    wreg     unsigned char 
 13510 ;; Auto vars:     Size  Location     Type
 13511 ;;  mod             1    1[BANK0 ] unsigned char 
 13512 ;; Return value:  Size  Location     Type
 13513 ;;                  1    wreg      void 
 13514 ;; Registers used:
 13515 ;;		wreg, status,2, cstack
 13516 ;; Tracked objects:
 13517 ;;		On entry : 0/0
 13518 ;;		On exit  : 0/0
 13519 ;;		Unchanged: 0/0
 13520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13521 ;;      Params:         0       0       0       0       0       0       0       0       0
 13522 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13523 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13524 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13525 ;;Total ram usage:        1 bytes
 13526 ;; Hardware stack levels used:    1
 13527 ;; Hardware stack levels required when called:   12
 13528 ;; This function calls:
 13529 ;;		_oled_writeCommand
 13530 ;; This function is called by:
 13531 ;;		_oled_devInit
 13532 ;; This function uses a non-reentrant model
 13533 ;;
 13534                           
 13535                           	psect	text34
 13536  0071E2                     __ptext34:
 13537                           	opt stack 0
 13538  0071E2                     _oled_setContrastControlRegister:
 13539                           	opt stack 16
 13540                           
 13541                           ;incstack = 0
 13542                           ;oled_setContrastControlRegister@mod stored from wreg
 13543  0071E2  0100               	movlb	0	; () banked
 13544  0071E4  6F61               	movwf	oled_setContrastControlRegister@mod& (0+255),b
 13545                           
 13546                           ;SSD1306oLED.c: 456: oled_writeCommand(0x81);
 13547  0071E6  0E81               	movlw	129
 13548  0071E8  ECD9  F038         	call	_oled_writeCommand
 13549                           
 13550                           ;SSD1306oLED.c: 457: oled_writeCommand(mod);
 13551  0071EC  0100               	movlb	0	; () banked
 13552  0071EE  5161               	movf	oled_setContrastControlRegister@mod& (0+255),w,b
 13553  0071F0  ECD9  F038         	call	_oled_writeCommand
 13554  0071F4  D000               	goto	l1075
 13555  0071F6                     l1075:
 13556  0071F6  0012               	return		;funcret
 13557  0071F8                     __end_of_oled_setContrastControlRegister:
 13558                           	opt stack 0
 13559                           tblptru	equ	0xFF8
 13560                           tblptrh	equ	0xFF7
 13561                           tblptrl	equ	0xFF6
 13562                           tablat	equ	0xFF5
 13563                           prodh	equ	0xFF4
 13564                           prodl	equ	0xFF3
 13565                           intcon	equ	0xFF2
 13566                           intcon3	equ	0xFF0
 13567                           postinc0	equ	0xFEE
 13568                           wreg	equ	0xFE8
 13569                           indf1	equ	0xFE7
 13570                           postdec1	equ	0xFE5
 13571                           fsr1h	equ	0xFE2
 13572                           fsr1l	equ	0xFE1
 13573                           indf2	equ	0xFDF
 13574                           fsr2h	equ	0xFDA
 13575                           fsr2l	equ	0xFD9
 13576                           status	equ	0xFD8
 13577                           
 13578 ;; *************** function _oled_regulorResistorSelect *****************
 13579 ;; Defined at:
 13580 ;;		line 482 in file "../Includes/Drivers/SSD1306oLED.c"
 13581 ;; Parameters:    Size  Location     Type
 13582 ;;  r               1    wreg     unsigned char 
 13583 ;; Auto vars:     Size  Location     Type
 13584 ;;  r               1    1[BANK0 ] unsigned char 
 13585 ;; Return value:  Size  Location     Type
 13586 ;;                  1    wreg      void 
 13587 ;; Registers used:
 13588 ;;		wreg, status,2, status,0, cstack
 13589 ;; Tracked objects:
 13590 ;;		On entry : 0/0
 13591 ;;		On exit  : 0/0
 13592 ;;		Unchanged: 0/0
 13593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13594 ;;      Params:         0       0       0       0       0       0       0       0       0
 13595 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13596 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13597 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13598 ;;Total ram usage:        1 bytes
 13599 ;; Hardware stack levels used:    1
 13600 ;; Hardware stack levels required when called:   12
 13601 ;; This function calls:
 13602 ;;		_oled_writeCommand
 13603 ;; This function is called by:
 13604 ;;		_oled_devInit
 13605 ;; This function uses a non-reentrant model
 13606 ;;
 13607                           
 13608                           	psect	text35
 13609  007220                     __ptext35:
 13610                           	opt stack 0
 13611  007220                     _oled_regulorResistorSelect:
 13612                           	opt stack 16
 13613                           
 13614                           ;incstack = 0
 13615                           ;oled_regulorResistorSelect@r stored from wreg
 13616  007220  0100               	movlb	0	; () banked
 13617  007222  6F61               	movwf	oled_regulorResistorSelect@r& (0+255),b
 13618                           
 13619                           ;SSD1306oLED.c: 484: oled_writeCommand((0x20|r));
 13620  007224  0100               	movlb	0	; () banked
 13621  007226  5161               	movf	oled_regulorResistorSelect@r& (0+255),w,b
 13622  007228  0920               	iorlw	32
 13623  00722A  ECD9  F038         	call	_oled_writeCommand
 13624  00722E  D000               	goto	l1084
 13625  007230                     l1084:
 13626  007230  0012               	return		;funcret
 13627  007232                     __end_of_oled_regulorResistorSelect:
 13628                           	opt stack 0
 13629                           tblptru	equ	0xFF8
 13630                           tblptrh	equ	0xFF7
 13631                           tblptrl	equ	0xFF6
 13632                           tablat	equ	0xFF5
 13633                           prodh	equ	0xFF4
 13634                           prodl	equ	0xFF3
 13635                           intcon	equ	0xFF2
 13636                           intcon3	equ	0xFF0
 13637                           postinc0	equ	0xFEE
 13638                           wreg	equ	0xFE8
 13639                           indf1	equ	0xFE7
 13640                           postdec1	equ	0xFE5
 13641                           fsr1h	equ	0xFE2
 13642                           fsr1l	equ	0xFE1
 13643                           indf2	equ	0xFDF
 13644                           fsr2h	equ	0xFDA
 13645                           fsr2l	equ	0xFD9
 13646                           status	equ	0xFD8
 13647                           
 13648 ;; *************** function _oled_powerControl *****************
 13649 ;; Defined at:
 13650 ;;		line 469 in file "../Includes/Drivers/SSD1306oLED.c"
 13651 ;; Parameters:    Size  Location     Type
 13652 ;;  vol             1    wreg     unsigned char 
 13653 ;; Auto vars:     Size  Location     Type
 13654 ;;  vol             1    1[BANK0 ] unsigned char 
 13655 ;; Return value:  Size  Location     Type
 13656 ;;                  1    wreg      void 
 13657 ;; Registers used:
 13658 ;;		wreg, status,2, status,0, cstack
 13659 ;; Tracked objects:
 13660 ;;		On entry : 0/0
 13661 ;;		On exit  : 0/0
 13662 ;;		Unchanged: 0/0
 13663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13664 ;;      Params:         0       0       0       0       0       0       0       0       0
 13665 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13666 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13667 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13668 ;;Total ram usage:        1 bytes
 13669 ;; Hardware stack levels used:    1
 13670 ;; Hardware stack levels required when called:   12
 13671 ;; This function calls:
 13672 ;;		_oled_writeCommand
 13673 ;; This function is called by:
 13674 ;;		_oled_devInit
 13675 ;; This function uses a non-reentrant model
 13676 ;;
 13677                           
 13678                           	psect	text36
 13679  007232                     __ptext36:
 13680                           	opt stack 0
 13681  007232                     _oled_powerControl:
 13682                           	opt stack 16
 13683                           
 13684                           ;incstack = 0
 13685                           ;oled_powerControl@vol stored from wreg
 13686  007232  0100               	movlb	0	; () banked
 13687  007234  6F61               	movwf	oled_powerControl@vol& (0+255),b
 13688                           
 13689                           ;SSD1306oLED.c: 471: oled_writeCommand((0x28|vol));
 13690  007236  0100               	movlb	0	; () banked
 13691  007238  5161               	movf	oled_powerControl@vol& (0+255),w,b
 13692  00723A  0928               	iorlw	40
 13693  00723C  ECD9  F038         	call	_oled_writeCommand
 13694  007240  D000               	goto	l1081
 13695  007242                     l1081:
 13696  007242  0012               	return		;funcret
 13697  007244                     __end_of_oled_powerControl:
 13698                           	opt stack 0
 13699                           tblptru	equ	0xFF8
 13700                           tblptrh	equ	0xFF7
 13701                           tblptrl	equ	0xFF6
 13702                           tablat	equ	0xFF5
 13703                           prodh	equ	0xFF4
 13704                           prodl	equ	0xFF3
 13705                           intcon	equ	0xFF2
 13706                           intcon3	equ	0xFF0
 13707                           postinc0	equ	0xFEE
 13708                           wreg	equ	0xFE8
 13709                           indf1	equ	0xFE7
 13710                           postdec1	equ	0xFE5
 13711                           fsr1h	equ	0xFE2
 13712                           fsr1l	equ	0xFE1
 13713                           indf2	equ	0xFDF
 13714                           fsr2h	equ	0xFDA
 13715                           fsr2l	equ	0xFD9
 13716                           status	equ	0xFD8
 13717                           
 13718 ;; *************** function _oled_initialDispayLine *****************
 13719 ;; Defined at:
 13720 ;;		line 462 in file "../Includes/Drivers/SSD1306oLED.c"
 13721 ;; Parameters:    Size  Location     Type
 13722 ;;  line            1    wreg     unsigned char 
 13723 ;; Auto vars:     Size  Location     Type
 13724 ;;  line            1    1[BANK0 ] unsigned char 
 13725 ;; Return value:  Size  Location     Type
 13726 ;;                  1    wreg      void 
 13727 ;; Registers used:
 13728 ;;		wreg, status,2, status,0, cstack
 13729 ;; Tracked objects:
 13730 ;;		On entry : 0/0
 13731 ;;		On exit  : 0/0
 13732 ;;		Unchanged: 0/0
 13733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13734 ;;      Params:         0       0       0       0       0       0       0       0       0
 13735 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13736 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13737 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13738 ;;Total ram usage:        1 bytes
 13739 ;; Hardware stack levels used:    1
 13740 ;; Hardware stack levels required when called:   12
 13741 ;; This function calls:
 13742 ;;		_oled_writeCommand
 13743 ;; This function is called by:
 13744 ;;		_oled_devInit
 13745 ;; This function uses a non-reentrant model
 13746 ;;
 13747                           
 13748                           	psect	text37
 13749  0071F8                     __ptext37:
 13750                           	opt stack 0
 13751  0071F8                     _oled_initialDispayLine:
 13752                           	opt stack 16
 13753                           
 13754                           ;incstack = 0
 13755                           ;oled_initialDispayLine@line stored from wreg
 13756  0071F8  0100               	movlb	0	; () banked
 13757  0071FA  6F61               	movwf	oled_initialDispayLine@line& (0+255),b
 13758                           
 13759                           ;SSD1306oLED.c: 464: line|=0x40;
 13760  0071FC  0100               	movlb	0	; () banked
 13761  0071FE  8D61               	bsf	oled_initialDispayLine@line& (0+255),6,b
 13762                           
 13763                           ; BSR set to: 0
 13764                           ;SSD1306oLED.c: 465: oled_writeCommand(line);
 13765  007200  0100               	movlb	0	; () banked
 13766  007202  5161               	movf	oled_initialDispayLine@line& (0+255),w,b
 13767  007204  ECD9  F038         	call	_oled_writeCommand
 13768  007208  D000               	goto	l1078
 13769  00720A                     l1078:
 13770  00720A  0012               	return		;funcret
 13771  00720C                     __end_of_oled_initialDispayLine:
 13772                           	opt stack 0
 13773                           tblptru	equ	0xFF8
 13774                           tblptrh	equ	0xFF7
 13775                           tblptrl	equ	0xFF6
 13776                           tablat	equ	0xFF5
 13777                           prodh	equ	0xFF4
 13778                           prodl	equ	0xFF3
 13779                           intcon	equ	0xFF2
 13780                           intcon3	equ	0xFF0
 13781                           postinc0	equ	0xFEE
 13782                           wreg	equ	0xFE8
 13783                           indf1	equ	0xFE7
 13784                           postdec1	equ	0xFE5
 13785                           fsr1h	equ	0xFE2
 13786                           fsr1l	equ	0xFE1
 13787                           indf2	equ	0xFDF
 13788                           fsr2h	equ	0xFDA
 13789                           fsr2l	equ	0xFD9
 13790                           status	equ	0xFD8
 13791                           
 13792 ;; *************** function _oled_displayOff *****************
 13793 ;; Defined at:
 13794 ;;		line 425 in file "../Includes/Drivers/SSD1306oLED.c"
 13795 ;; Parameters:    Size  Location     Type
 13796 ;;  state           1    wreg     unsigned char 
 13797 ;; Auto vars:     Size  Location     Type
 13798 ;;  state           1    0[COMRAM] unsigned char 
 13799 ;; Return value:  Size  Location     Type
 13800 ;;                  1    wreg      void 
 13801 ;; Registers used:
 13802 ;;		wreg, cstack
 13803 ;; Tracked objects:
 13804 ;;		On entry : 0/0
 13805 ;;		On exit  : 0/0
 13806 ;;		Unchanged: 0/0
 13807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13808 ;;      Params:         0       0       0       0       0       0       0       0       0
 13809 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13810 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13811 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13812 ;;Total ram usage:        0 bytes
 13813 ;; Hardware stack levels used:    1
 13814 ;; Hardware stack levels required when called:   12
 13815 ;; This function calls:
 13816 ;;		_oled_writeCommand
 13817 ;; This function is called by:
 13818 ;;		_moteApp_GoToSleep
 13819 ;; This function uses a non-reentrant model
 13820 ;;
 13821                           
 13822                           	psect	text38
 13823  0072CE                     __ptext38:
 13824                           	opt stack 0
 13825  0072CE                     _oled_displayOff:
 13826                           	opt stack 15
 13827                           
 13828                           ;SSD1306oLED.c: 427: oled_writeCommand(0xae);
 13829                           
 13830                           ;incstack = 0
 13831  0072CE  0EAE               	movlw	174
 13832  0072D0  ECD9  F038         	call	_oled_writeCommand
 13833  0072D4  0012               	return		;funcret
 13834  0072D6                     __end_of_oled_displayOff:
 13835                           	opt stack 0
 13836                           tblptru	equ	0xFF8
 13837                           tblptrh	equ	0xFF7
 13838                           tblptrl	equ	0xFF6
 13839                           tablat	equ	0xFF5
 13840                           prodh	equ	0xFF4
 13841                           prodl	equ	0xFF3
 13842                           intcon	equ	0xFF2
 13843                           intcon3	equ	0xFF0
 13844                           postinc0	equ	0xFEE
 13845                           wreg	equ	0xFE8
 13846                           indf1	equ	0xFE7
 13847                           postdec1	equ	0xFE5
 13848                           fsr1h	equ	0xFE2
 13849                           fsr1l	equ	0xFE1
 13850                           indf2	equ	0xFDF
 13851                           fsr2h	equ	0xFDA
 13852                           fsr2l	equ	0xFD9
 13853                           status	equ	0xFD8
 13854                           
 13855 ;; *************** function _moduleSleep *****************
 13856 ;; Defined at:
 13857 ;;		line 173 in file "../Includes/Board/MOTEapp.c"
 13858 ;; Parameters:    Size  Location     Type
 13859 ;;		None
 13860 ;; Auto vars:     Size  Location     Type
 13861 ;;		None
 13862 ;; Return value:  Size  Location     Type
 13863 ;;                  1    wreg      void 
 13864 ;; Registers used:
 13865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13866 ;; Tracked objects:
 13867 ;;		On entry : 0/0
 13868 ;;		On exit  : 0/0
 13869 ;;		Unchanged: 0/0
 13870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13871 ;;      Params:         0       0       0       0       0       0       0       0       0
 13872 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13873 ;;      Temps:          0       1       0       0       0       0       0       0       0
 13874 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13875 ;;Total ram usage:        1 bytes
 13876 ;; Hardware stack levels used:    1
 13877 ;; Hardware stack levels required when called:   14
 13878 ;; This function calls:
 13879 ;;		_sendCommand
 13880 ;; This function is called by:
 13881 ;;		_moteApp_GoToSleep
 13882 ;; This function uses a non-reentrant model
 13883 ;;
 13884                           
 13885                           	psect	text39
 13886  00700A                     __ptext39:
 13887                           	opt stack 0
 13888  00700A                     _moduleSleep:
 13889                           	opt stack 13
 13890                           
 13891                           ;MOTEapp.c: 175: sendCommand("sys sleep 999999999");
 13892                           
 13893                           ;incstack = 0
 13894  00700A  0E82               	movlw	low STR_22
 13895  00700C  0100               	movlb	0	; () banked
 13896  00700E  6F61               	movwf	sendCommand@string& (0+255),b
 13897  007010  0E7A               	movlw	high STR_22
 13898  007012  0100               	movlb	0	; () banked
 13899  007014  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13900  007016  EC66  F037         	call	_sendCommand	;wreg free
 13901                           
 13902                           ;MOTEapp.c: 176: while(1 == PIE1bits.TXIE)
 13903  00701A  D000               	goto	l352
 13904  00701C                     l352:
 13905  00701C  B89D               	btfsc	3997,4,c	;volatile
 13906  00701E  D001               	goto	u11051
 13907  007020  D001               	goto	u11050
 13908  007022                     u11051:
 13909  007022  D7FC               	goto	l352
 13910  007024                     u11050:
 13911  007024  D000               	goto	l12147
 13912  007026                     l12147:
 13913                           
 13914                           ;MOTEapp.c: 178: _delay((unsigned long)((16)*(48000000/4000.0)));
 13915  007026  0EFA               	movlw	250
 13916  007028  0100               	movlb	0	; () banked
 13917  00702A  6F63               	movwf	??_moduleSleep& (0+255),b
 13918  00702C  0E58               	movlw	88
 13919  00702E                     u14527:
 13920  00702E  2EE8               	decfsz	wreg,f,c
 13921  007030  D7FE               	bra	u14527
 13922  007032  2F63               	decfsz	??_moduleSleep& (0+255),f,b
 13923  007034  D7FC               	bra	u14527
 13924  007036  F000               	nop	
 13925  007038  0012               	return		;funcret
 13926  00703A                     __end_of_moduleSleep:
 13927                           	opt stack 0
 13928                           tblptru	equ	0xFF8
 13929                           tblptrh	equ	0xFF7
 13930                           tblptrl	equ	0xFF6
 13931                           tablat	equ	0xFF5
 13932                           prodh	equ	0xFF4
 13933                           prodl	equ	0xFF3
 13934                           intcon	equ	0xFF2
 13935                           intcon3	equ	0xFF0
 13936                           postinc0	equ	0xFEE
 13937                           wreg	equ	0xFE8
 13938                           indf1	equ	0xFE7
 13939                           postdec1	equ	0xFE5
 13940                           fsr1h	equ	0xFE2
 13941                           fsr1l	equ	0xFE1
 13942                           indf2	equ	0xFDF
 13943                           fsr2h	equ	0xFDA
 13944                           fsr2l	equ	0xFD9
 13945                           status	equ	0xFD8
 13946                           
 13947 ;; *************** function _moduleResync *****************
 13948 ;; Defined at:
 13949 ;;		line 132 in file "../Includes/Board/MOTEapp.c"
 13950 ;; Parameters:    Size  Location     Type
 13951 ;;		None
 13952 ;; Auto vars:     Size  Location     Type
 13953 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 13954 ;;  escapeEvent     1    7[BANK0 ] unsigned char 
 13955 ;; Return value:  Size  Location     Type
 13956 ;;                  1    wreg      void 
 13957 ;; Registers used:
 13958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13959 ;; Tracked objects:
 13960 ;;		On entry : 0/0
 13961 ;;		On exit  : 0/0
 13962 ;;		Unchanged: 0/0
 13963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13964 ;;      Params:         0       0       0       0       0       0       0       0       0
 13965 ;;      Locals:         0       3       0       0       0       0       0       0       0
 13966 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13967 ;;      Totals:         0       3       0       0       0       0       0       0       0
 13968 ;;Total ram usage:        3 bytes
 13969 ;; Hardware stack levels used:    1
 13970 ;; Hardware stack levels required when called:   14
 13971 ;; This function calls:
 13972 ;;		_MOTEapp_getModuleResponse
 13973 ;;		_moteApp_delayms
 13974 ;;		_sendCommand
 13975 ;; This function is called by:
 13976 ;;		_main
 13977 ;;		_moteApp_GoToSleep
 13978 ;; This function uses a non-reentrant model
 13979 ;;
 13980                           
 13981                           	psect	text40
 13982  005B6A                     __ptext40:
 13983                           	opt stack 0
 13984  005B6A                     _moduleResync:
 13985                           	opt stack 13
 13986                           
 13987                           ;MOTEapp.c: 134: bool escapeEvent = 0;
 13988                           
 13989                           ;incstack = 0
 13990  005B6A  0E00               	movlw	0
 13991  005B6C  0100               	movlb	0	; () banked
 13992  005B6E  6F67               	movwf	moduleResync@escapeEvent& (0+255),b
 13993                           
 13994                           ;MOTEapp.c: 135: uint16_t escapeCounter = 0;
 13995  005B70  0E00               	movlw	0
 13996  005B72  0100               	movlb	0	; () banked
 13997  005B74  6F66               	movwf	(moduleResync@escapeCounter+1)& (0+255),b
 13998  005B76  0E00               	movlw	0
 13999  005B78  6F65               	movwf	moduleResync@escapeCounter& (0+255),b
 14000                           
 14001                           ; BSR set to: 0
 14002                           ;MOTEapp.c: 143: TXSTAbits.TXEN = 0;
 14003  005B7A  9AAC               	bcf	4012,5,c	;volatile
 14004                           
 14005                           ; BSR set to: 0
 14006                           ;MOTEapp.c: 144: LATCbits.LATC6 = 0;
 14007  005B7C  9C8B               	bcf	3979,6,c	;volatile
 14008                           
 14009                           ; BSR set to: 0
 14010                           ;MOTEapp.c: 145: moteApp_delayms(10);
 14011  005B7E  0E00               	movlw	0
 14012  005B80  0100               	movlb	0	; () banked
 14013  005B82  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 14014  005B84  0E0A               	movlw	10
 14015  005B86  6F60               	movwf	moteApp_delayms@length& (0+255),b
 14016  005B88  EC91  F036         	call	_moteApp_delayms	;wreg free
 14017                           
 14018                           ;MOTEapp.c: 146: TXSTAbits.TXEN = 1;
 14019  005B8C  8AAC               	bsf	4012,5,c	;volatile
 14020                           
 14021                           ;MOTEapp.c: 147: moteApp_delayms(5);
 14022  005B8E  0E00               	movlw	0
 14023  005B90  0100               	movlb	0	; () banked
 14024  005B92  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 14025  005B94  0E05               	movlw	5
 14026  005B96  6F60               	movwf	moteApp_delayms@length& (0+255),b
 14027  005B98  EC91  F036         	call	_moteApp_delayms	;wreg free
 14028                           
 14029                           ;MOTEapp.c: 149: TXREG = 0x55;
 14030  005B9C  0E55               	movlw	85
 14031  005B9E  6EAD               	movwf	4013,c	;volatile
 14032                           
 14033                           ;MOTEapp.c: 150: while (TXSTAbits.TRMT == 0)
 14034  005BA0  D000               	goto	l334
 14035  005BA2                     l334:
 14036  005BA2  A2AC               	btfss	4012,1,c	;volatile
 14037  005BA4  D001               	goto	u10941
 14038  005BA6  D001               	goto	u10940
 14039  005BA8                     u10941:
 14040  005BA8  D7FC               	goto	l334
 14041  005BAA                     u10940:
 14042  005BAA  D000               	goto	l12101
 14043  005BAC                     l12101:
 14044                           
 14045                           ;MOTEapp.c: 153: sendCommand("z");
 14046  005BAC  0EFC               	movlw	low STR_21
 14047  005BAE  0100               	movlb	0	; () banked
 14048  005BB0  6F61               	movwf	sendCommand@string& (0+255),b
 14049  005BB2  0E7F               	movlw	high STR_21
 14050  005BB4  0100               	movlb	0	; () banked
 14051  005BB6  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14052  005BB8  EC66  F037         	call	_sendCommand	;wreg free
 14053                           
 14054                           ;MOTEapp.c: 155: moteApp_delayms(40);
 14055  005BBC  0E00               	movlw	0
 14056  005BBE  0100               	movlb	0	; () banked
 14057  005BC0  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 14058  005BC2  0E28               	movlw	40
 14059  005BC4  6F60               	movwf	moteApp_delayms@length& (0+255),b
 14060  005BC6  EC91  F036         	call	_moteApp_delayms	;wreg free
 14061                           
 14062                           ;MOTEapp.c: 156: while (escapeEvent)
 14063  005BCA  D01D               	goto	l337
 14064  005BCC                     l12105:
 14065                           
 14066                           ;MOTEapp.c: 157: {
 14067                           ;MOTEapp.c: 158: if(MOTEapp_getModuleResponse())
 14068  005BCC  EC45  F030         	call	_MOTEapp_getModuleResponse	;wreg free
 14069  005BD0  0900               	iorlw	0
 14070  005BD2  B4D8               	btfsc	status,2,c
 14071  005BD4  D001               	goto	u10951
 14072  005BD6  D001               	goto	u10950
 14073  005BD8                     u10951:
 14074  005BD8  D004               	goto	l12109
 14075  005BDA                     u10950:
 14076                           
 14077                           ;MOTEapp.c: 159: escapeEvent = 1;
 14078  005BDA  0E01               	movlw	1
 14079  005BDC  0100               	movlb	0	; () banked
 14080  005BDE  6F67               	movwf	moduleResync@escapeEvent& (0+255),b
 14081  005BE0  D012               	goto	l337
 14082  005BE2                     l12109:
 14083                           
 14084                           ;MOTEapp.c: 160: else if (++escapeCounter > 5000)
 14085  005BE2  0100               	movlb	0	; () banked
 14086  005BE4  4B65               	infsnz	moduleResync@escapeCounter& (0+255),f,b
 14087  005BE6  2B66               	incf	(moduleResync@escapeCounter+1)& (0+255),f,b
 14088  005BE8  0E89               	movlw	137
 14089  005BEA  0100               	movlb	0	; () banked
 14090  005BEC  5D65               	subwf	moduleResync@escapeCounter& (0+255),w,b
 14091  005BEE  0E13               	movlw	19
 14092  005BF0  0100               	movlb	0	; () banked
 14093  005BF2  5966               	subwfb	(moduleResync@escapeCounter+1)& (0+255),w,b
 14094  005BF4  A0D8               	btfss	status,0,c
 14095  005BF6  D001               	goto	u10961
 14096  005BF8  D001               	goto	u10960
 14097  005BFA                     u10961:
 14098  005BFA  D005               	goto	l337
 14099  005BFC                     u10960:
 14100                           
 14101                           ; BSR set to: 0
 14102                           ;MOTEapp.c: 161: escapeEvent = 1;
 14103  005BFC  0E01               	movlw	1
 14104  005BFE  0100               	movlb	0	; () banked
 14105  005C00  6F67               	movwf	moduleResync@escapeEvent& (0+255),b
 14106  005C02  D001               	goto	l337
 14107                           
 14108                           ; BSR set to: 0
 14109  005C04  D000               	goto	l337
 14110  005C06                     l337:
 14111  005C06  0100               	movlb	0	; () banked
 14112  005C08  5167               	movf	moduleResync@escapeEvent& (0+255),w,b
 14113  005C0A  0100               	movlb	0	; () banked
 14114  005C0C  A4D8               	btfss	status,2,c
 14115  005C0E  D001               	goto	u10971
 14116  005C10  D001               	goto	u10970
 14117  005C12                     u10971:
 14118  005C12  D7DC               	goto	l12105
 14119  005C14                     u10970:
 14120  005C14  D000               	goto	l343
 14121  005C16                     l343:
 14122                           
 14123                           ; BSR set to: 0
 14124  005C16  0012               	return		;funcret
 14125  005C18                     __end_of_moduleResync:
 14126                           	opt stack 0
 14127                           tblptru	equ	0xFF8
 14128                           tblptrh	equ	0xFF7
 14129                           tblptrl	equ	0xFF6
 14130                           tablat	equ	0xFF5
 14131                           prodh	equ	0xFF4
 14132                           prodl	equ	0xFF3
 14133                           intcon	equ	0xFF2
 14134                           intcon3	equ	0xFF0
 14135                           postinc0	equ	0xFEE
 14136                           wreg	equ	0xFE8
 14137                           indf1	equ	0xFE7
 14138                           postdec1	equ	0xFE5
 14139                           fsr1h	equ	0xFE2
 14140                           fsr1l	equ	0xFE1
 14141                           indf2	equ	0xFDF
 14142                           fsr2h	equ	0xFDA
 14143                           fsr2l	equ	0xFD9
 14144                           status	equ	0xFD8
 14145                           
 14146 ;; *************** function _MOTEapp_getModuleResponse *****************
 14147 ;; Defined at:
 14148 ;;		line 1072 in file "../Includes/Board/MOTEapp.c"
 14149 ;; Parameters:    Size  Location     Type
 14150 ;;		None
 14151 ;; Auto vars:     Size  Location     Type
 14152 ;;  bufferByte      1    2[BANK0 ] unsigned char 
 14153 ;;  terminatorRe    1    1[BANK0 ] unsigned char 
 14154 ;; Return value:  Size  Location     Type
 14155 ;;                  1    wreg      unsigned char 
 14156 ;; Registers used:
 14157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14158 ;; Tracked objects:
 14159 ;;		On entry : 0/0
 14160 ;;		On exit  : 0/0
 14161 ;;		Unchanged: 0/0
 14162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14163 ;;      Params:         0       0       0       0       0       0       0       0       0
 14164 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14165 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14166 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14167 ;;Total ram usage:        2 bytes
 14168 ;; Hardware stack levels used:    1
 14169 ;; Hardware stack levels required when called:   12
 14170 ;; This function calls:
 14171 ;;		_EUSART_Read
 14172 ;; This function is called by:
 14173 ;;		_moduleResync
 14174 ;;		_moteHandler
 14175 ;;		_moteApp_setSensorsInput
 14176 ;;		_moteApp_getTempValue
 14177 ;;		_moteApp_getLightValue
 14178 ;; This function uses a non-reentrant model
 14179 ;;
 14180                           
 14181                           	psect	text41
 14182  00608A                     __ptext41:
 14183                           	opt stack 0
 14184  00608A                     _MOTEapp_getModuleResponse:
 14185                           	opt stack 15
 14186                           
 14187                           ;MOTEapp.c: 1074: bool terminatorReceived = 0;
 14188                           
 14189                           ; BSR set to: 0
 14190                           ;incstack = 0
 14191  00608A  0E00               	movlw	0
 14192  00608C  0100               	movlb	0	; () banked
 14193  00608E  6F61               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 14194                           
 14195                           ;MOTEapp.c: 1076: if ((eusartRxCount))
 14196  006090  5057               	movf	_eusartRxCount,w,c	;volatile
 14197  006092  B4D8               	btfsc	status,2,c
 14198  006094  D001               	goto	u10871
 14199  006096  D001               	goto	u10870
 14200  006098                     u10871:
 14201  006098  D03C               	goto	l12021
 14202  00609A                     u10870:
 14203                           
 14204                           ; BSR set to: 0
 14205                           ;MOTEapp.c: 1077: {
 14206                           ;MOTEapp.c: 1078: uint8_t bufferByte = 0;
 14207  00609A  0E00               	movlw	0
 14208  00609C  0100               	movlb	0	; () banked
 14209  00609E  6F62               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 14210                           
 14211                           ; BSR set to: 0
 14212                           ;MOTEapp.c: 1079: bufferByte = EUSART_Read();
 14213  0060A0  EC4A  F035         	call	_EUSART_Read	;wreg free
 14214  0060A4  0100               	movlb	0	; () banked
 14215  0060A6  6F62               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 14216                           
 14217                           ; BSR set to: 0
 14218                           ;MOTEapp.c: 1081: if (bufferByte == 0x0D)
 14219  0060A8  0E0D               	movlw	13
 14220  0060AA  0100               	movlb	0	; () banked
 14221  0060AC  1962               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 14222  0060AE  A4D8               	btfss	status,2,c
 14223  0060B0  D001               	goto	u10881
 14224  0060B2  D001               	goto	u10880
 14225  0060B4                     u10881:
 14226  0060B4  D010               	goto	l12013
 14227  0060B6                     u10880:
 14228                           
 14229                           ; BSR set to: 0
 14230                           ;MOTEapp.c: 1082: {
 14231                           ;MOTEapp.c: 1083: moduleResonseBuffer[moduleBufferIndex] = 0x00;
 14232  0060B6  5056               	movf	_moduleBufferIndex,w,c
 14233  0060B8  0D01               	mullw	1
 14234  0060BA  0E5D               	movlw	low _moduleResonseBuffer
 14235  0060BC  24F3               	addwf	prodl,w,c
 14236  0060BE  6ED9               	movwf	fsr2l,c
 14237  0060C0  0E01               	movlw	high _moduleResonseBuffer
 14238  0060C2  20F4               	addwfc	prodh,w,c
 14239  0060C4  6EDA               	movwf	fsr2h,c
 14240  0060C6  0E00               	movlw	0
 14241  0060C8  6EDF               	movwf	indf2,c
 14242                           
 14243                           ; BSR set to: 0
 14244                           ;MOTEapp.c: 1084: terminatorReceived = 1;
 14245  0060CA  0E01               	movlw	1
 14246  0060CC  0100               	movlb	0	; () banked
 14247  0060CE  6F61               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 14248                           
 14249                           ; BSR set to: 0
 14250                           ;MOTEapp.c: 1085: moduleBufferIndex = 0;
 14251  0060D0  0E00               	movlw	0
 14252  0060D2  6E56               	movwf	_moduleBufferIndex,c
 14253                           
 14254                           ;MOTEapp.c: 1086: }
 14255  0060D4  D01E               	goto	l12021
 14256  0060D6                     l12013:
 14257                           
 14258                           ; BSR set to: 0
 14259                           ;MOTEapp.c: 1087: else if ( (bufferByte == 0x00) || (bufferByte == 0x0A) )
 14260  0060D6  0100               	movlb	0	; () banked
 14261  0060D8  5162               	movf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 14262  0060DA  0100               	movlb	0	; () banked
 14263  0060DC  B4D8               	btfsc	status,2,c
 14264  0060DE  D001               	goto	u10891
 14265  0060E0  D001               	goto	u10890
 14266  0060E2                     u10891:
 14267  0060E2  D017               	goto	l12021
 14268  0060E4                     u10890:
 14269                           
 14270                           ; BSR set to: 0
 14271  0060E4  0E0A               	movlw	10
 14272  0060E6  0100               	movlb	0	; () banked
 14273  0060E8  1962               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 14274  0060EA  A4D8               	btfss	status,2,c
 14275  0060EC  D001               	goto	u10901
 14276  0060EE  D001               	goto	u10900
 14277  0060F0                     u10901:
 14278  0060F0  D002               	goto	l12017
 14279  0060F2                     u10900:
 14280  0060F2  D00F               	goto	l12021
 14281                           
 14282                           ; BSR set to: 0
 14283                           ;MOTEapp.c: 1088: {
 14284                           ;MOTEapp.c: 1090: }
 14285  0060F4  D00E               	goto	l12021
 14286  0060F6                     l12017:
 14287                           
 14288                           ; BSR set to: 0
 14289                           ;MOTEapp.c: 1091: else
 14290                           ;MOTEapp.c: 1092: {
 14291                           ;MOTEapp.c: 1093: moduleResonseBuffer[moduleBufferIndex] = bufferByte;
 14292  0060F6  5056               	movf	_moduleBufferIndex,w,c
 14293  0060F8  0D01               	mullw	1
 14294  0060FA  0E5D               	movlw	low _moduleResonseBuffer
 14295  0060FC  24F3               	addwf	prodl,w,c
 14296  0060FE  6ED9               	movwf	fsr2l,c
 14297  006100  0E01               	movlw	high _moduleResonseBuffer
 14298  006102  20F4               	addwfc	prodh,w,c
 14299  006104  6EDA               	movwf	fsr2h,c
 14300  006106  C062  FFDF         	movff	MOTEapp_getModuleResponse@bufferByte,indf2
 14301                           
 14302                           ; BSR set to: 0
 14303                           ;MOTEapp.c: 1095: moduleBufferIndex++;
 14304  00610A  2A56               	incf	_moduleBufferIndex,f,c
 14305  00610C  D002               	goto	l12021
 14306                           
 14307                           ; BSR set to: 0
 14308  00610E  D001               	goto	l12021
 14309                           
 14310                           ; BSR set to: 0
 14311  006110  D000               	goto	l12021
 14312  006112                     l12021:
 14313                           
 14314                           ; BSR set to: 0
 14315                           ;MOTEapp.c: 1096: }
 14316                           ;MOTEapp.c: 1097: }
 14317                           ;MOTEapp.c: 1098: return terminatorReceived;
 14318  006112  0100               	movlb	0	; () banked
 14319  006114  5161               	movf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),w,b
 14320  006116  D000               	goto	l625
 14321  006118                     l625:
 14322                           
 14323                           ; BSR set to: 0
 14324  006118  0012               	return		;funcret
 14325  00611A                     __end_of_MOTEapp_getModuleResponse:
 14326                           	opt stack 0
 14327                           tblptru	equ	0xFF8
 14328                           tblptrh	equ	0xFF7
 14329                           tblptrl	equ	0xFF6
 14330                           tablat	equ	0xFF5
 14331                           prodh	equ	0xFF4
 14332                           prodl	equ	0xFF3
 14333                           intcon	equ	0xFF2
 14334                           intcon3	equ	0xFF0
 14335                           postinc0	equ	0xFEE
 14336                           wreg	equ	0xFE8
 14337                           indf1	equ	0xFE7
 14338                           postdec1	equ	0xFE5
 14339                           fsr1h	equ	0xFE2
 14340                           fsr1l	equ	0xFE1
 14341                           indf2	equ	0xFDF
 14342                           fsr2h	equ	0xFDA
 14343                           fsr2l	equ	0xFD9
 14344                           status	equ	0xFD8
 14345                           
 14346 ;; *************** function _EUSART_FlushBuffer *****************
 14347 ;; Defined at:
 14348 ;;		line 202 in file "../Includes/MccGenerated/eusart.c"
 14349 ;; Parameters:    Size  Location     Type
 14350 ;;		None
 14351 ;; Auto vars:     Size  Location     Type
 14352 ;;  index           1    0[BANK0 ] unsigned char 
 14353 ;; Return value:  Size  Location     Type
 14354 ;;                  1    wreg      void 
 14355 ;; Registers used:
 14356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14357 ;; Tracked objects:
 14358 ;;		On entry : 0/0
 14359 ;;		On exit  : 0/0
 14360 ;;		Unchanged: 0/0
 14361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14362 ;;      Params:         0       0       0       0       0       0       0       0       0
 14363 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14364 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14365 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14366 ;;Total ram usage:        1 bytes
 14367 ;; Hardware stack levels used:    1
 14368 ;; Hardware stack levels required when called:   11
 14369 ;; This function calls:
 14370 ;;		Nothing
 14371 ;; This function is called by:
 14372 ;;		_test_powerup
 14373 ;;		_moteApp_GoToSleep
 14374 ;; This function uses a non-reentrant model
 14375 ;;
 14376                           
 14377                           	psect	text42
 14378  006878                     __ptext42:
 14379                           	opt stack 0
 14380  006878                     _EUSART_FlushBuffer:
 14381                           	opt stack 18
 14382                           
 14383                           ;eusart.c: 204: uint8_t index;
 14384                           ;eusart.c: 205: for (index=0; index < 64; index++)
 14385                           
 14386                           ; BSR set to: 0
 14387                           ;incstack = 0
 14388  006878  0E00               	movlw	0
 14389  00687A  0100               	movlb	0	; () banked
 14390  00687C  6F60               	movwf	EUSART_FlushBuffer@index& (0+255),b
 14391                           
 14392                           ; BSR set to: 0
 14393  00687E  0E3F               	movlw	63
 14394  006880  0100               	movlb	0	; () banked
 14395  006882  6560               	cpfsgt	EUSART_FlushBuffer@index& (0+255),b
 14396  006884  D001               	goto	u11031
 14397  006886  D001               	goto	u11030
 14398  006888                     u11031:
 14399  006888  D002               	goto	l12135
 14400  00688A                     u11030:
 14401  00688A  D015               	goto	l12141
 14402                           
 14403                           ; BSR set to: 0
 14404  00688C  D014               	goto	l12141
 14405  00688E                     l12135:
 14406                           
 14407                           ; BSR set to: 0
 14408                           ;eusart.c: 206: {
 14409                           ;eusart.c: 207: eusartRxBuffer[index] = 0;
 14410  00688E  0100               	movlb	0	; () banked
 14411  006890  5160               	movf	EUSART_FlushBuffer@index& (0+255),w,b
 14412  006892  0D01               	mullw	1
 14413  006894  0E00               	movlw	low _eusartRxBuffer
 14414  006896  24F3               	addwf	prodl,w,c
 14415  006898  6ED9               	movwf	fsr2l,c
 14416  00689A  0E02               	movlw	high _eusartRxBuffer
 14417  00689C  20F4               	addwfc	prodh,w,c
 14418  00689E  6EDA               	movwf	fsr2h,c
 14419  0068A0  0E00               	movlw	0
 14420  0068A2  6EDF               	movwf	indf2,c
 14421                           
 14422                           ; BSR set to: 0
 14423  0068A4  0100               	movlb	0	; () banked
 14424  0068A6  2B60               	incf	EUSART_FlushBuffer@index& (0+255),f,b
 14425                           
 14426                           ; BSR set to: 0
 14427  0068A8  0E3F               	movlw	63
 14428  0068AA  0100               	movlb	0	; () banked
 14429  0068AC  6560               	cpfsgt	EUSART_FlushBuffer@index& (0+255),b
 14430  0068AE  D001               	goto	u11041
 14431  0068B0  D001               	goto	u11040
 14432  0068B2                     u11041:
 14433  0068B2  D7ED               	goto	l12135
 14434  0068B4                     u11040:
 14435  0068B4  D000               	goto	l12141
 14436  0068B6                     l12141:
 14437                           
 14438                           ; BSR set to: 0
 14439                           ;eusart.c: 208: }
 14440                           ;eusart.c: 209: eusartRxHead = 0;
 14441  0068B6  0E00               	movlw	0
 14442  0068B8  0100               	movlb	0	; () banked
 14443  0068BA  6FD9               	movwf	_eusartRxHead& (0+255),b
 14444                           
 14445                           ;eusart.c: 210: eusartRxTail = 0;
 14446  0068BC  0E00               	movlw	0
 14447  0068BE  0100               	movlb	0	; () banked
 14448  0068C0  6FD8               	movwf	_eusartRxTail& (0+255),b
 14449                           
 14450                           ;eusart.c: 211: eusartRxCount = 0;
 14451  0068C2  0E00               	movlw	0
 14452  0068C4  6E57               	movwf	_eusartRxCount,c	;volatile
 14453                           
 14454                           ; BSR set to: 0
 14455                           ;eusart.c: 213: PIE1bits.TXIE = 0;
 14456  0068C6  989D               	bcf	3997,4,c	;volatile
 14457                           
 14458                           ;eusart.c: 214: eusartTxHead = 0;
 14459  0068C8  0E00               	movlw	0
 14460  0068CA  0100               	movlb	0	; () banked
 14461  0068CC  6FDB               	movwf	_eusartTxHead& (0+255),b
 14462                           
 14463                           ;eusart.c: 215: eusartTxTail = 0;
 14464  0068CE  0E00               	movlw	0
 14465  0068D0  0100               	movlb	0	; () banked
 14466  0068D2  6FDA               	movwf	_eusartTxTail& (0+255),b
 14467                           
 14468                           ;eusart.c: 216: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 14469  0068D4  0E40               	movlw	64
 14470  0068D6  6E4F               	movwf	_eusartTxBufferRemaining,c	;volatile
 14471                           
 14472                           ; BSR set to: 0
 14473  0068D8  0012               	return		;funcret
 14474  0068DA                     __end_of_EUSART_FlushBuffer:
 14475                           	opt stack 0
 14476                           tblptru	equ	0xFF8
 14477                           tblptrh	equ	0xFF7
 14478                           tblptrl	equ	0xFF6
 14479                           tablat	equ	0xFF5
 14480                           prodh	equ	0xFF4
 14481                           prodl	equ	0xFF3
 14482                           intcon	equ	0xFF2
 14483                           intcon3	equ	0xFF0
 14484                           postinc0	equ	0xFEE
 14485                           wreg	equ	0xFE8
 14486                           indf1	equ	0xFE7
 14487                           postdec1	equ	0xFE5
 14488                           fsr1h	equ	0xFE2
 14489                           fsr1l	equ	0xFE1
 14490                           indf2	equ	0xFDF
 14491                           fsr2h	equ	0xFDA
 14492                           fsr2l	equ	0xFD9
 14493                           status	equ	0xFD8
 14494                           
 14495 ;; *************** function _TMR2_ReadTimer *****************
 14496 ;; Defined at:
 14497 ;;		line 87 in file "../Includes/MccGenerated/tmr2.c"
 14498 ;; Parameters:    Size  Location     Type
 14499 ;;		None
 14500 ;; Auto vars:     Size  Location     Type
 14501 ;;  readVal         1    0[BANK0 ] unsigned char 
 14502 ;; Return value:  Size  Location     Type
 14503 ;;                  1    wreg      unsigned char 
 14504 ;; Registers used:
 14505 ;;		wreg, status,2
 14506 ;; Tracked objects:
 14507 ;;		On entry : 0/0
 14508 ;;		On exit  : 0/0
 14509 ;;		Unchanged: 0/0
 14510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14511 ;;      Params:         0       0       0       0       0       0       0       0       0
 14512 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14513 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14514 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14515 ;;Total ram usage:        1 bytes
 14516 ;; Hardware stack levels used:    1
 14517 ;; Hardware stack levels required when called:   11
 14518 ;; This function calls:
 14519 ;;		Nothing
 14520 ;; This function is called by:
 14521 ;;		_moteRunningProcess
 14522 ;; This function uses a non-reentrant model
 14523 ;;
 14524                           
 14525                           	psect	text43
 14526  007286                     __ptext43:
 14527                           	opt stack 0
 14528  007286                     _TMR2_ReadTimer:
 14529                           	opt stack 17
 14530                           
 14531                           ;tmr2.c: 88: uint8_t readVal;
 14532                           ;tmr2.c: 90: readVal = TMR2;
 14533                           
 14534                           ; BSR set to: 0
 14535                           ;incstack = 0
 14536  007286  CFBC F060          	movff	4028,TMR2_ReadTimer@readVal	;volatile
 14537                           
 14538                           ;tmr2.c: 92: return readVal;
 14539  00728A  0100               	movlb	0	; () banked
 14540  00728C  5160               	movf	TMR2_ReadTimer@readVal& (0+255),w,b
 14541  00728E  D000               	goto	l1515
 14542  007290                     l1515:
 14543                           
 14544                           ; BSR set to: 0
 14545  007290  0012               	return		;funcret
 14546  007292                     __end_of_TMR2_ReadTimer:
 14547                           	opt stack 0
 14548                           tblptru	equ	0xFF8
 14549                           tblptrh	equ	0xFF7
 14550                           tblptrl	equ	0xFF6
 14551                           tablat	equ	0xFF5
 14552                           prodh	equ	0xFF4
 14553                           prodl	equ	0xFF3
 14554                           intcon	equ	0xFF2
 14555                           intcon3	equ	0xFF0
 14556                           postinc0	equ	0xFEE
 14557                           wreg	equ	0xFE8
 14558                           indf1	equ	0xFE7
 14559                           postdec1	equ	0xFE5
 14560                           fsr1h	equ	0xFE2
 14561                           fsr1l	equ	0xFE1
 14562                           indf2	equ	0xFDF
 14563                           fsr2h	equ	0xFDA
 14564                           fsr2l	equ	0xFD9
 14565                           status	equ	0xFD8
 14566                           
 14567 ;; *************** function _MOTEapp_SetDataRateSetting *****************
 14568 ;; Defined at:
 14569 ;;		line 979 in file "../Includes/Board/MOTEapp.c"
 14570 ;; Parameters:    Size  Location     Type
 14571 ;;  dr              1    wreg     unsigned char 
 14572 ;; Auto vars:     Size  Location     Type
 14573 ;;  dr              1    4[BANK0 ] unsigned char 
 14574 ;; Return value:  Size  Location     Type
 14575 ;;                  1    wreg      void 
 14576 ;; Registers used:
 14577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14578 ;; Tracked objects:
 14579 ;;		On entry : 0/0
 14580 ;;		On exit  : 0/0
 14581 ;;		Unchanged: 0/0
 14582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14583 ;;      Params:         0       0       0       0       0       0       0       0       0
 14584 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14585 ;;      Temps:          0       1       0       0       0       0       0       0       0
 14586 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14587 ;;Total ram usage:        2 bytes
 14588 ;; Hardware stack levels used:    1
 14589 ;; Hardware stack levels required when called:   14
 14590 ;; This function calls:
 14591 ;;		_sendCommand
 14592 ;; This function is called by:
 14593 ;;		_moteRunningProcess
 14594 ;; This function uses a non-reentrant model
 14595 ;;
 14596                           
 14597                           	psect	text44
 14598  003592                     __ptext44:
 14599                           	opt stack 0
 14600  003592                     _MOTEapp_SetDataRateSetting:
 14601                           	opt stack 14
 14602                           
 14603                           ; BSR set to: 0
 14604                           ;incstack = 0
 14605                           ;MOTEapp_SetDataRateSetting@dr stored from wreg
 14606  003592  0100               	movlb	0	; () banked
 14607  003594  6F64               	movwf	MOTEapp_SetDataRateSetting@dr& (0+255),b
 14608                           
 14609                           ;MOTEapp.c: 981: if (dr != 8)
 14610  003596  0E08               	movlw	8
 14611  003598  0100               	movlb	0	; () banked
 14612  00359A  1964               	xorwf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 14613  00359C  B4D8               	btfsc	status,2,c
 14614  00359E  D001               	goto	u12601
 14615  0035A0  D001               	goto	u12600
 14616  0035A2                     u12601:
 14617  0035A2  D077               	goto	l13219
 14618  0035A4                     u12600:
 14619                           
 14620                           ; BSR set to: 0
 14621                           ;MOTEapp.c: 982: {
 14622                           ;MOTEapp.c: 983: sendCommand("mac set adr off");
 14623  0035A4  0EA3               	movlw	low STR_163
 14624  0035A6  0100               	movlb	0	; () banked
 14625  0035A8  6F61               	movwf	sendCommand@string& (0+255),b
 14626  0035AA  0E7C               	movlw	high STR_163
 14627  0035AC  0100               	movlb	0	; () banked
 14628  0035AE  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14629  0035B0  EC66  F037         	call	_sendCommand	;wreg free
 14630                           
 14631                           ;MOTEapp.c: 984: _delay((unsigned long)((16)*(48000000/4000.0)));
 14632  0035B4  0EFA               	movlw	250
 14633  0035B6  0100               	movlb	0	; () banked
 14634  0035B8  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14635  0035BA  0E58               	movlw	88
 14636  0035BC                     u14537:
 14637  0035BC  2EE8               	decfsz	wreg,f,c
 14638  0035BE  D7FE               	bra	u14537
 14639  0035C0  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14640  0035C2  D7FC               	bra	u14537
 14641  0035C4  F000               	nop	
 14642                           
 14643                           ;MOTEapp.c: 985: _delay((unsigned long)((16)*(48000000/4000.0)));
 14644  0035C6  0EFA               	movlw	250
 14645  0035C8  0100               	movlb	0	; () banked
 14646  0035CA  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14647  0035CC  0E58               	movlw	88
 14648  0035CE                     u14547:
 14649  0035CE  2EE8               	decfsz	wreg,f,c
 14650  0035D0  D7FE               	bra	u14547
 14651  0035D2  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14652  0035D4  D7FC               	bra	u14547
 14653  0035D6  F000               	nop	
 14654                           
 14655                           ;MOTEapp.c: 986: _delay((unsigned long)((16)*(48000000/4000.0)));
 14656  0035D8  0EFA               	movlw	250
 14657  0035DA  0100               	movlb	0	; () banked
 14658  0035DC  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14659  0035DE  0E58               	movlw	88
 14660  0035E0                     u14557:
 14661  0035E0  2EE8               	decfsz	wreg,f,c
 14662  0035E2  D7FE               	bra	u14557
 14663  0035E4  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14664  0035E6  D7FC               	bra	u14557
 14665  0035E8  F000               	nop	
 14666  0035EA  D053               	goto	l13219
 14667                           
 14668                           ;MOTEapp.c: 987: }
 14669                           ;MOTEapp.c: 989: switch (dr)
 14670  0035EC  D052               	goto	l13219
 14671  0035EE                     l13199:
 14672                           
 14673                           ;MOTEapp.c: 992: sendCommand("mac set dr 0");
 14674  0035EE  0E7F               	movlw	low STR_164
 14675  0035F0  0100               	movlb	0	; () banked
 14676  0035F2  6F61               	movwf	sendCommand@string& (0+255),b
 14677  0035F4  0E7D               	movlw	high STR_164
 14678  0035F6  0100               	movlb	0	; () banked
 14679  0035F8  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14680  0035FA  EC66  F037         	call	_sendCommand	;wreg free
 14681                           
 14682                           ;MOTEapp.c: 993: break;
 14683  0035FE  D067               	goto	l13221
 14684  003600                     l13201:
 14685                           
 14686                           ;MOTEapp.c: 995: sendCommand("mac set dr 1");
 14687  003600  0E8C               	movlw	low STR_165
 14688  003602  0100               	movlb	0	; () banked
 14689  003604  6F61               	movwf	sendCommand@string& (0+255),b
 14690  003606  0E7D               	movlw	high STR_165
 14691  003608  0100               	movlb	0	; () banked
 14692  00360A  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14693  00360C  EC66  F037         	call	_sendCommand	;wreg free
 14694                           
 14695                           ;MOTEapp.c: 996: break;
 14696  003610  D05E               	goto	l13221
 14697  003612                     l13203:
 14698                           
 14699                           ;MOTEapp.c: 998: sendCommand("mac set dr 2");
 14700  003612  0E99               	movlw	low STR_166
 14701  003614  0100               	movlb	0	; () banked
 14702  003616  6F61               	movwf	sendCommand@string& (0+255),b
 14703  003618  0E7D               	movlw	high STR_166
 14704  00361A  0100               	movlb	0	; () banked
 14705  00361C  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14706  00361E  EC66  F037         	call	_sendCommand	;wreg free
 14707                           
 14708                           ;MOTEapp.c: 999: break;
 14709  003622  D055               	goto	l13221
 14710  003624                     l13205:
 14711                           
 14712                           ;MOTEapp.c: 1001: sendCommand("mac set dr 3");
 14713  003624  0EA6               	movlw	low STR_167
 14714  003626  0100               	movlb	0	; () banked
 14715  003628  6F61               	movwf	sendCommand@string& (0+255),b
 14716  00362A  0E7D               	movlw	high STR_167
 14717  00362C  0100               	movlb	0	; () banked
 14718  00362E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14719  003630  EC66  F037         	call	_sendCommand	;wreg free
 14720                           
 14721                           ;MOTEapp.c: 1002: break;
 14722  003634  D04C               	goto	l13221
 14723  003636                     l13207:
 14724                           
 14725                           ;MOTEapp.c: 1004: sendCommand("mac set dr 4");
 14726  003636  0EB3               	movlw	low STR_168
 14727  003638  0100               	movlb	0	; () banked
 14728  00363A  6F61               	movwf	sendCommand@string& (0+255),b
 14729  00363C  0E7D               	movlw	high STR_168
 14730  00363E  0100               	movlb	0	; () banked
 14731  003640  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14732  003642  EC66  F037         	call	_sendCommand	;wreg free
 14733                           
 14734                           ;MOTEapp.c: 1005: break;
 14735  003646  D043               	goto	l13221
 14736  003648                     l13209:
 14737                           
 14738                           ;MOTEapp.c: 1007: sendCommand("mac set dr 5");
 14739  003648  0EC0               	movlw	low STR_169
 14740  00364A  0100               	movlb	0	; () banked
 14741  00364C  6F61               	movwf	sendCommand@string& (0+255),b
 14742  00364E  0E7D               	movlw	high STR_169
 14743  003650  0100               	movlb	0	; () banked
 14744  003652  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14745  003654  EC66  F037         	call	_sendCommand	;wreg free
 14746                           
 14747                           ;MOTEapp.c: 1008: break;
 14748  003658  D03A               	goto	l13221
 14749  00365A                     l13211:
 14750                           
 14751                           ;MOTEapp.c: 1010: sendCommand("mac set dr 6");
 14752  00365A  0ECD               	movlw	low STR_170
 14753  00365C  0100               	movlb	0	; () banked
 14754  00365E  6F61               	movwf	sendCommand@string& (0+255),b
 14755  003660  0E7D               	movlw	high STR_170
 14756  003662  0100               	movlb	0	; () banked
 14757  003664  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14758  003666  EC66  F037         	call	_sendCommand	;wreg free
 14759                           
 14760                           ;MOTEapp.c: 1011: break;
 14761  00366A  D031               	goto	l13221
 14762  00366C                     l13213:
 14763                           
 14764                           ;MOTEapp.c: 1013: sendCommand("mac set dr 7");
 14765  00366C  0EDA               	movlw	low STR_171
 14766  00366E  0100               	movlb	0	; () banked
 14767  003670  6F61               	movwf	sendCommand@string& (0+255),b
 14768  003672  0E7D               	movlw	high STR_171
 14769  003674  0100               	movlb	0	; () banked
 14770  003676  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14771  003678  EC66  F037         	call	_sendCommand	;wreg free
 14772                           
 14773                           ;MOTEapp.c: 1014: break;
 14774  00367C  D028               	goto	l13221
 14775  00367E                     l13215:
 14776                           
 14777                           ;MOTEapp.c: 1016: sendCommand("mac set adr on");
 14778  00367E  0EF1               	movlw	low STR_172
 14779  003680  0100               	movlb	0	; () banked
 14780  003682  6F61               	movwf	sendCommand@string& (0+255),b
 14781  003684  0E7C               	movlw	high STR_172
 14782  003686  0100               	movlb	0	; () banked
 14783  003688  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14784  00368A  EC66  F037         	call	_sendCommand	;wreg free
 14785                           
 14786                           ;MOTEapp.c: 1017: break;
 14787  00368E  D01F               	goto	l13221
 14788                           
 14789                           ;MOTEapp.c: 1018: }
 14790  003690  D01E               	goto	l13221
 14791  003692                     l13219:
 14792  003692  0100               	movlb	0	; () banked
 14793  003694  5164               	movf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 14794                           
 14795                           ; Switch size 1, requested type "space"
 14796                           ; Number of cases is 9, Range of values is 0 to 8
 14797                           ; switch strategies available:
 14798                           ; Name         Instructions Cycles
 14799                           ; simple_byte           28    15 (average)
 14800                           ;	Chosen strategy is simple_byte
 14801  003696  0A00               	xorlw	0	; case 0
 14802  003698  B4D8               	btfsc	status,2,c
 14803  00369A  D7A9               	goto	l13199
 14804  00369C  0A01               	xorlw	1	; case 1
 14805  00369E  B4D8               	btfsc	status,2,c
 14806  0036A0  D7AF               	goto	l13201
 14807  0036A2  0A03               	xorlw	3	; case 2
 14808  0036A4  B4D8               	btfsc	status,2,c
 14809  0036A6  D7B5               	goto	l13203
 14810  0036A8  0A01               	xorlw	1	; case 3
 14811  0036AA  B4D8               	btfsc	status,2,c
 14812  0036AC  D7BB               	goto	l13205
 14813  0036AE  0A07               	xorlw	7	; case 4
 14814  0036B0  B4D8               	btfsc	status,2,c
 14815  0036B2  D7C1               	goto	l13207
 14816  0036B4  0A01               	xorlw	1	; case 5
 14817  0036B6  B4D8               	btfsc	status,2,c
 14818  0036B8  D7C7               	goto	l13209
 14819  0036BA  0A03               	xorlw	3	; case 6
 14820  0036BC  B4D8               	btfsc	status,2,c
 14821  0036BE  D7CD               	goto	l13211
 14822  0036C0  0A01               	xorlw	1	; case 7
 14823  0036C2  B4D8               	btfsc	status,2,c
 14824  0036C4  D7D3               	goto	l13213
 14825  0036C6  0A0F               	xorlw	15	; case 8
 14826  0036C8  B4D8               	btfsc	status,2,c
 14827  0036CA  D7D9               	goto	l13215
 14828  0036CC  D000               	goto	l13221
 14829  0036CE                     l13221:
 14830                           
 14831                           ;MOTEapp.c: 1019: _delay((unsigned long)((16)*(48000000/4000.0)));
 14832  0036CE  0EFA               	movlw	250
 14833  0036D0  0100               	movlb	0	; () banked
 14834  0036D2  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14835  0036D4  0E58               	movlw	88
 14836  0036D6                     u14567:
 14837  0036D6  2EE8               	decfsz	wreg,f,c
 14838  0036D8  D7FE               	bra	u14567
 14839  0036DA  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14840  0036DC  D7FC               	bra	u14567
 14841  0036DE  F000               	nop	
 14842                           
 14843                           ;MOTEapp.c: 1020: _delay((unsigned long)((16)*(48000000/4000.0)));
 14844  0036E0  0EFA               	movlw	250
 14845  0036E2  0100               	movlb	0	; () banked
 14846  0036E4  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14847  0036E6  0E58               	movlw	88
 14848  0036E8                     u14577:
 14849  0036E8  2EE8               	decfsz	wreg,f,c
 14850  0036EA  D7FE               	bra	u14577
 14851  0036EC  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14852  0036EE  D7FC               	bra	u14577
 14853  0036F0  F000               	nop	
 14854                           
 14855                           ;MOTEapp.c: 1021: _delay((unsigned long)((16)*(48000000/4000.0)));
 14856  0036F2  0EFA               	movlw	250
 14857  0036F4  0100               	movlb	0	; () banked
 14858  0036F6  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14859  0036F8  0E58               	movlw	88
 14860  0036FA                     u14587:
 14861  0036FA  2EE8               	decfsz	wreg,f,c
 14862  0036FC  D7FE               	bra	u14587
 14863  0036FE  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14864  003700  D7FC               	bra	u14587
 14865  003702  F000               	nop	
 14866                           
 14867                           ;MOTEapp.c: 1022: sendCommand("mac save");
 14868  003704  0E2B               	movlw	low STR_173
 14869  003706  0100               	movlb	0	; () banked
 14870  003708  6F61               	movwf	sendCommand@string& (0+255),b
 14871  00370A  0E7F               	movlw	high STR_173
 14872  00370C  0100               	movlb	0	; () banked
 14873  00370E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14874  003710  EC66  F037         	call	_sendCommand	;wreg free
 14875  003714  0012               	return		;funcret
 14876  003716                     __end_of_MOTEapp_SetDataRateSetting:
 14877                           	opt stack 0
 14878                           tblptru	equ	0xFF8
 14879                           tblptrh	equ	0xFF7
 14880                           tblptrl	equ	0xFF6
 14881                           tablat	equ	0xFF5
 14882                           prodh	equ	0xFF4
 14883                           prodl	equ	0xFF3
 14884                           intcon	equ	0xFF2
 14885                           intcon3	equ	0xFF0
 14886                           postinc0	equ	0xFEE
 14887                           wreg	equ	0xFE8
 14888                           indf1	equ	0xFE7
 14889                           postdec1	equ	0xFE5
 14890                           fsr1h	equ	0xFE2
 14891                           fsr1l	equ	0xFE1
 14892                           indf2	equ	0xFDF
 14893                           fsr2h	equ	0xFDA
 14894                           fsr2l	equ	0xFD9
 14895                           status	equ	0xFD8
 14896                           
 14897 ;; *************** function _ADC_TempConversion *****************
 14898 ;; Defined at:
 14899 ;;		line 136 in file "../Includes/MccGenerated/adc.c"
 14900 ;; Parameters:    Size  Location     Type
 14901 ;;  tempRaw         1    wreg     enum E5745
 14902 ;; Auto vars:     Size  Location     Type
 14903 ;;  tempRaw         1   70[BANK0 ] enum E5745
 14904 ;;  val             4   72[BANK0 ] enum E5745
 14905 ;;  temp            1   71[BANK0 ] unsigned char 
 14906 ;; Return value:  Size  Location     Type
 14907 ;;                  1    wreg      unsigned char 
 14908 ;; Registers used:
 14909 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14910 ;; Tracked objects:
 14911 ;;		On entry : 0/0
 14912 ;;		On exit  : 0/0
 14913 ;;		Unchanged: 0/0
 14914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14915 ;;      Params:         0       0       0       0       0       0       0       0       0
 14916 ;;      Locals:         0       6       0       0       0       0       0       0       0
 14917 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14918 ;;      Totals:         0       6       0       0       0       0       0       0       0
 14919 ;;Total ram usage:        6 bytes
 14920 ;; Hardware stack levels used:    1
 14921 ;; Hardware stack levels required when called:   12
 14922 ;; This function calls:
 14923 ;;		___fladd
 14924 ;;		___fldiv
 14925 ;;		___flmul
 14926 ;;		___fltol
 14927 ;;		___xxtofl
 14928 ;; This function is called by:
 14929 ;;		_moteHandler
 14930 ;;		_moteRunningProcess
 14931 ;;		_moteApp_testSensors
 14932 ;;		_test_adc
 14933 ;; This function uses a non-reentrant model
 14934 ;;
 14935                           
 14936                           	psect	text45
 14937  004DD8                     __ptext45:
 14938                           	opt stack 0
 14939  004DD8                     _ADC_TempConversion:
 14940                           	opt stack 16
 14941                           
 14942                           ;incstack = 0
 14943                           ;ADC_TempConversion@tempRaw stored from wreg
 14944  004DD8  0100               	movlb	0	; () banked
 14945  004DDA  6FA6               	movwf	ADC_TempConversion@tempRaw& (0+255),b
 14946                           
 14947                           ;adc.c: 138: uint8_t temp;
 14948                           ;adc.c: 140: double val = ((tempRaw * 3.2)/1024);
 14949  004DDC  0ECD               	movlw	205
 14950  004DDE  0100               	movlb	0	; () banked
 14951  004DE0  6F78               	movwf	___flmul@a& (0+255),b
 14952  004DE2  0ECC               	movlw	204
 14953  004DE4  6F79               	movwf	(___flmul@a+1)& (0+255),b
 14954  004DE6  0E4C               	movlw	76
 14955  004DE8  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 14956  004DEA  0E40               	movlw	64
 14957  004DEC  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 14958  004DEE  0100               	movlb	0	; () banked
 14959  004DF0  51A6               	movf	ADC_TempConversion@tempRaw& (0+255),w,b
 14960  004DF2  0100               	movlb	0	; () banked
 14961  004DF4  6F60               	movwf	___xxtofl@val& (0+255),b
 14962  004DF6  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
 14963  004DF8  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 14964  004DFA  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 14965  004DFC  0E00               	movlw	0
 14966  004DFE  ECF8  F017         	call	___xxtofl
 14967  004E02  C060  F074         	movff	?___xxtofl,___flmul@b
 14968  004E06  C061  F075         	movff	?___xxtofl+1,___flmul@b+1
 14969  004E0A  C062  F076         	movff	?___xxtofl+2,___flmul@b+2
 14970  004E0E  C063  F077         	movff	?___xxtofl+3,___flmul@b+3
 14971  004E12  EC78  F010         	call	___flmul	;wreg free
 14972  004E16  C074  F08D         	movff	?___flmul,___fldiv@b
 14973  004E1A  C075  F08E         	movff	?___flmul+1,___fldiv@b+1
 14974  004E1E  C076  F08F         	movff	?___flmul+2,___fldiv@b+2
 14975  004E22  C077  F090         	movff	?___flmul+3,___fldiv@b+3
 14976  004E26  0E00               	movlw	0
 14977  004E28  0100               	movlb	0	; () banked
 14978  004E2A  6F91               	movwf	___fldiv@a& (0+255),b
 14979  004E2C  0E00               	movlw	0
 14980  004E2E  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 14981  004E30  0E80               	movlw	128
 14982  004E32  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 14983  004E34  0E44               	movlw	68
 14984  004E36  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 14985  004E38  EC05  F013         	call	___fldiv	;wreg free
 14986  004E3C  C08D  F0A8         	movff	?___fldiv,ADC_TempConversion@val
 14987  004E40  C08E  F0A9         	movff	?___fldiv+1,ADC_TempConversion@val+1
 14988  004E44  C08F  F0AA         	movff	?___fldiv+2,ADC_TempConversion@val+2
 14989  004E48  C090  F0AB         	movff	?___fldiv+3,ADC_TempConversion@val+3
 14990                           
 14991                           ;adc.c: 141: val = ((val - 0.5)*100);
 14992  004E4C  0E00               	movlw	0
 14993  004E4E  0100               	movlb	0	; () banked
 14994  004E50  6F64               	movwf	___fladd@a& (0+255),b
 14995  004E52  0E00               	movlw	0
 14996  004E54  6F65               	movwf	(___fladd@a+1)& (0+255),b
 14997  004E56  0E00               	movlw	0
 14998  004E58  6F66               	movwf	(___fladd@a+2)& (0+255),b
 14999  004E5A  0EBF               	movlw	191
 15000  004E5C  6F67               	movwf	(___fladd@a+3)& (0+255),b
 15001  004E5E  C0A8  F060         	movff	ADC_TempConversion@val,___fladd@b
 15002  004E62  C0A9  F061         	movff	ADC_TempConversion@val+1,___fladd@b+1
 15003  004E66  C0AA  F062         	movff	ADC_TempConversion@val+2,___fladd@b+2
 15004  004E6A  C0AB  F063         	movff	ADC_TempConversion@val+3,___fladd@b+3
 15005  004E6E  ECAD  F00D         	call	___fladd	;wreg free
 15006  004E72  C060  F074         	movff	?___fladd,___flmul@b
 15007  004E76  C061  F075         	movff	?___fladd+1,___flmul@b+1
 15008  004E7A  C062  F076         	movff	?___fladd+2,___flmul@b+2
 15009  004E7E  C063  F077         	movff	?___fladd+3,___flmul@b+3
 15010  004E82  0E00               	movlw	0
 15011  004E84  0100               	movlb	0	; () banked
 15012  004E86  6F78               	movwf	___flmul@a& (0+255),b
 15013  004E88  0E00               	movlw	0
 15014  004E8A  6F79               	movwf	(___flmul@a+1)& (0+255),b
 15015  004E8C  0EC8               	movlw	200
 15016  004E8E  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 15017  004E90  0E42               	movlw	66
 15018  004E92  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 15019  004E94  EC78  F010         	call	___flmul	;wreg free
 15020  004E98  C074  F0A8         	movff	?___flmul,ADC_TempConversion@val
 15021  004E9C  C075  F0A9         	movff	?___flmul+1,ADC_TempConversion@val+1
 15022  004EA0  C076  F0AA         	movff	?___flmul+2,ADC_TempConversion@val+2
 15023  004EA4  C077  F0AB         	movff	?___flmul+3,ADC_TempConversion@val+3
 15024                           
 15025                           ;adc.c: 142: temp = (uint8_t) val;
 15026  004EA8  C0A8  F060         	movff	ADC_TempConversion@val,___fltol@f1
 15027  004EAC  C0A9  F061         	movff	ADC_TempConversion@val+1,___fltol@f1+1
 15028  004EB0  C0AA  F062         	movff	ADC_TempConversion@val+2,___fltol@f1+2
 15029  004EB4  C0AB  F063         	movff	ADC_TempConversion@val+3,___fltol@f1+3
 15030  004EB8  EC5C  F01E         	call	___fltol	;wreg free
 15031  004EBC  0100               	movlb	0	; () banked
 15032  004EBE  5160               	movf	?___fltol& (0+255),w,b
 15033  004EC0  0100               	movlb	0	; () banked
 15034  004EC2  6FA7               	movwf	ADC_TempConversion@temp& (0+255),b
 15035                           
 15036                           ; BSR set to: 0
 15037                           ;adc.c: 144: return temp;
 15038  004EC4  0100               	movlb	0	; () banked
 15039  004EC6  51A7               	movf	ADC_TempConversion@temp& (0+255),w,b
 15040  004EC8  D000               	goto	l1272
 15041  004ECA                     l1272:
 15042                           
 15043                           ; BSR set to: 0
 15044  004ECA  0012               	return		;funcret
 15045  004ECC                     __end_of_ADC_TempConversion:
 15046                           	opt stack 0
 15047                           tblptru	equ	0xFF8
 15048                           tblptrh	equ	0xFF7
 15049                           tblptrl	equ	0xFF6
 15050                           tablat	equ	0xFF5
 15051                           prodh	equ	0xFF4
 15052                           prodl	equ	0xFF3
 15053                           intcon	equ	0xFF2
 15054                           intcon3	equ	0xFF0
 15055                           postinc0	equ	0xFEE
 15056                           wreg	equ	0xFE8
 15057                           indf1	equ	0xFE7
 15058                           postdec1	equ	0xFE5
 15059                           fsr1h	equ	0xFE2
 15060                           fsr1l	equ	0xFE1
 15061                           indf2	equ	0xFDF
 15062                           fsr2h	equ	0xFDA
 15063                           fsr2l	equ	0xFD9
 15064                           status	equ	0xFD8
 15065                           
 15066 ;; *************** function ___xxtofl *****************
 15067 ;; Defined at:
 15068 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\xxtofl.c"
 15069 ;; Parameters:    Size  Location     Type
 15070 ;;  sign            1    wreg     unsigned char 
 15071 ;;  val             4    0[BANK0 ] long 
 15072 ;; Auto vars:     Size  Location     Type
 15073 ;;  sign            1    8[BANK0 ] unsigned char 
 15074 ;;  arg             4   10[BANK0 ] unsigned long 
 15075 ;;  exp             1    9[BANK0 ] unsigned char 
 15076 ;; Return value:  Size  Location     Type
 15077 ;;                  4    0[BANK0 ] unsigned char 
 15078 ;; Registers used:
 15079 ;;		wreg, status,2, status,0
 15080 ;; Tracked objects:
 15081 ;;		On entry : 0/0
 15082 ;;		On exit  : 0/0
 15083 ;;		Unchanged: 0/0
 15084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15085 ;;      Params:         0       4       0       0       0       0       0       0       0
 15086 ;;      Locals:         0       6       0       0       0       0       0       0       0
 15087 ;;      Temps:          0       4       0       0       0       0       0       0       0
 15088 ;;      Totals:         0      14       0       0       0       0       0       0       0
 15089 ;;Total ram usage:       14 bytes
 15090 ;; Hardware stack levels used:    1
 15091 ;; Hardware stack levels required when called:   11
 15092 ;; This function calls:
 15093 ;;		Nothing
 15094 ;; This function is called by:
 15095 ;;		_ADC_TempConversion
 15096 ;; This function uses a non-reentrant model
 15097 ;;
 15098                           
 15099                           	psect	text46
 15100  002FF0                     __ptext46:
 15101                           	opt stack 0
 15102  002FF0                     ___xxtofl:
 15103                           	opt stack 16
 15104                           
 15105                           ; BSR set to: 0
 15106                           ;incstack = 0
 15107                           ;___xxtofl@sign stored from wreg
 15108  002FF0  0100               	movlb	0	; () banked
 15109  002FF2  6F68               	movwf	___xxtofl@sign& (0+255),b
 15110  002FF4  0100               	movlb	0	; () banked
 15111  002FF6  5168               	movf	___xxtofl@sign& (0+255),w,b
 15112  002FF8  0100               	movlb	0	; () banked
 15113  002FFA  B4D8               	btfsc	status,2,c
 15114  002FFC  D001               	goto	u12121
 15115  002FFE  D001               	goto	u12120
 15116  003000                     u12121:
 15117  003000  D020               	goto	l2743
 15118  003002                     u12120:
 15119                           
 15120                           ; BSR set to: 0
 15121  003002  0100               	movlb	0	; () banked
 15122  003004  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 15123  003006  D002               	goto	u12130
 15124  003008  D000               	goto	u12131
 15125  00300A                     u12131:
 15126  00300A  D01B               	goto	l2743
 15127  00300C                     u12130:
 15128                           
 15129                           ; BSR set to: 0
 15130  00300C  C060  F064         	movff	___xxtofl@val,??___xxtofl
 15131  003010  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 15132  003014  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 15133  003018  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 15134  00301C  0100               	movlb	0	; () banked
 15135  00301E  1F64               	comf	??___xxtofl& (0+255),f,b
 15136  003020  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 15137  003022  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 15138  003024  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 15139  003026  2B64               	incf	??___xxtofl& (0+255),f,b
 15140  003028  0E00               	movlw	0
 15141  00302A  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 15142  00302C  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 15143  00302E  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 15144  003030  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 15145  003034  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 15146  003038  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 15147  00303C  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 15148  003040  D009               	goto	l12837
 15149  003042                     l2743:
 15150                           
 15151                           ; BSR set to: 0
 15152  003042  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 15153  003046  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 15154  00304A  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 15155  00304E  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 15156  003052  D000               	goto	l12837
 15157  003054                     l12837:
 15158                           
 15159                           ; BSR set to: 0
 15160  003054  0100               	movlb	0	; () banked
 15161  003056  5160               	movf	___xxtofl@val& (0+255),w,b
 15162  003058  0100               	movlb	0	; () banked
 15163  00305A  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 15164  00305C  0100               	movlb	0	; () banked
 15165  00305E  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 15166  003060  0100               	movlb	0	; () banked
 15167  003062  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 15168  003064  A4D8               	btfss	status,2,c
 15169  003066  D001               	goto	u12141
 15170  003068  D001               	goto	u12140
 15171  00306A                     u12141:
 15172  00306A  D00B               	goto	l12843
 15173  00306C                     u12140:
 15174                           
 15175                           ; BSR set to: 0
 15176  00306C  0E00               	movlw	0
 15177  00306E  0100               	movlb	0	; () banked
 15178  003070  6F60               	movwf	?___xxtofl& (0+255),b
 15179  003072  0E00               	movlw	0
 15180  003074  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 15181  003076  0E00               	movlw	0
 15182  003078  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 15183  00307A  0E00               	movlw	0
 15184  00307C  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 15185  00307E  D0BB               	goto	l2746
 15186                           
 15187                           ; BSR set to: 0
 15188  003080  D0BA               	goto	l2746
 15189  003082                     l12843:
 15190                           
 15191                           ; BSR set to: 0
 15192  003082  0E96               	movlw	150
 15193  003084  0100               	movlb	0	; () banked
 15194  003086  6F69               	movwf	___xxtofl@exp& (0+255),b
 15195  003088  D009               	goto	l12847
 15196  00308A                     l12845:
 15197                           
 15198                           ; BSR set to: 0
 15199  00308A  0100               	movlb	0	; () banked
 15200  00308C  2B69               	incf	___xxtofl@exp& (0+255),f,b
 15201  00308E  0100               	movlb	0	; () banked
 15202  003090  90D8               	bcf	status,0,c
 15203  003092  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 15204  003094  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 15205  003096  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 15206  003098  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 15207  00309A  D000               	goto	l12847
 15208  00309C                     l12847:
 15209                           
 15210                           ; BSR set to: 0
 15211  00309C  0E00               	movlw	0
 15212  00309E  0100               	movlb	0	; () banked
 15213  0030A0  156A               	andwf	___xxtofl@arg& (0+255),w,b
 15214  0030A2  0100               	movlb	0	; () banked
 15215  0030A4  6F64               	movwf	??___xxtofl& (0+255),b
 15216  0030A6  0E00               	movlw	0
 15217  0030A8  0100               	movlb	0	; () banked
 15218  0030AA  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 15219  0030AC  0100               	movlb	0	; () banked
 15220  0030AE  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 15221  0030B0  0E00               	movlw	0
 15222  0030B2  0100               	movlb	0	; () banked
 15223  0030B4  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 15224  0030B6  0100               	movlb	0	; () banked
 15225  0030B8  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 15226  0030BA  0EFE               	movlw	254
 15227  0030BC  0100               	movlb	0	; () banked
 15228  0030BE  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 15229  0030C0  0100               	movlb	0	; () banked
 15230  0030C2  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 15231  0030C4  0100               	movlb	0	; () banked
 15232  0030C6  5164               	movf	??___xxtofl& (0+255),w,b
 15233  0030C8  0100               	movlb	0	; () banked
 15234  0030CA  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 15235  0030CC  0100               	movlb	0	; () banked
 15236  0030CE  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 15237  0030D0  0100               	movlb	0	; () banked
 15238  0030D2  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 15239  0030D4  A4D8               	btfss	status,2,c
 15240  0030D6  D001               	goto	u12151
 15241  0030D8  D001               	goto	u12150
 15242  0030DA                     u12151:
 15243  0030DA  D7D7               	goto	l12845
 15244  0030DC                     u12150:
 15245  0030DC  D010               	goto	l2750
 15246                           
 15247                           ; BSR set to: 0
 15248  0030DE  D00F               	goto	l2750
 15249  0030E0                     l12849:
 15250                           
 15251                           ; BSR set to: 0
 15252  0030E0  0100               	movlb	0	; () banked
 15253  0030E2  2B69               	incf	___xxtofl@exp& (0+255),f,b
 15254                           
 15255                           ; BSR set to: 0
 15256  0030E4  0E01               	movlw	1
 15257  0030E6  0100               	movlb	0	; () banked
 15258  0030E8  276A               	addwf	___xxtofl@arg& (0+255),f,b
 15259  0030EA  0E00               	movlw	0
 15260  0030EC  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 15261  0030EE  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 15262  0030F0  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 15263                           
 15264                           ; BSR set to: 0
 15265  0030F2  0100               	movlb	0	; () banked
 15266  0030F4  90D8               	bcf	status,0,c
 15267  0030F6  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 15268  0030F8  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 15269  0030FA  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 15270  0030FC  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 15271  0030FE                     l2750:
 15272                           
 15273                           ; BSR set to: 0
 15274  0030FE  0E00               	movlw	0
 15275  003100  0100               	movlb	0	; () banked
 15276  003102  156A               	andwf	___xxtofl@arg& (0+255),w,b
 15277  003104  0100               	movlb	0	; () banked
 15278  003106  6F64               	movwf	??___xxtofl& (0+255),b
 15279  003108  0E00               	movlw	0
 15280  00310A  0100               	movlb	0	; () banked
 15281  00310C  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 15282  00310E  0100               	movlb	0	; () banked
 15283  003110  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 15284  003112  0E00               	movlw	0
 15285  003114  0100               	movlb	0	; () banked
 15286  003116  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 15287  003118  0100               	movlb	0	; () banked
 15288  00311A  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 15289  00311C  0EFF               	movlw	255
 15290  00311E  0100               	movlb	0	; () banked
 15291  003120  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 15292  003122  0100               	movlb	0	; () banked
 15293  003124  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 15294  003126  0100               	movlb	0	; () banked
 15295  003128  5164               	movf	??___xxtofl& (0+255),w,b
 15296  00312A  0100               	movlb	0	; () banked
 15297  00312C  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 15298  00312E  0100               	movlb	0	; () banked
 15299  003130  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 15300  003132  0100               	movlb	0	; () banked
 15301  003134  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 15302  003136  A4D8               	btfss	status,2,c
 15303  003138  D001               	goto	u12161
 15304  00313A  D001               	goto	u12160
 15305  00313C                     u12161:
 15306  00313C  D7D1               	goto	l12849
 15307  00313E                     u12160:
 15308  00313E  D00A               	goto	l12857
 15309                           
 15310                           ; BSR set to: 0
 15311  003140  D009               	goto	l12857
 15312  003142                     l12855:
 15313                           
 15314                           ; BSR set to: 0
 15315  003142  0100               	movlb	0	; () banked
 15316  003144  0769               	decf	___xxtofl@exp& (0+255),f,b
 15317  003146  0100               	movlb	0	; () banked
 15318  003148  90D8               	bcf	status,0,c
 15319  00314A  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 15320  00314C  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 15321  00314E  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 15322  003150  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 15323  003152  D000               	goto	l12857
 15324  003154                     l12857:
 15325                           
 15326                           ; BSR set to: 0
 15327  003154  0100               	movlb	0	; () banked
 15328  003156  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 15329  003158  D001               	goto	u12171
 15330  00315A  D001               	goto	u12170
 15331  00315C                     u12171:
 15332  00315C  D007               	goto	l2757
 15333  00315E                     u12170:
 15334                           
 15335                           ; BSR set to: 0
 15336  00315E  0E02               	movlw	2
 15337  003160  0100               	movlb	0	; () banked
 15338  003162  6169               	cpfslt	___xxtofl@exp& (0+255),b
 15339  003164  D001               	goto	u12181
 15340  003166  D001               	goto	u12180
 15341  003168                     u12181:
 15342  003168  D7EC               	goto	l12855
 15343  00316A                     u12180:
 15344  00316A  D000               	goto	l2757
 15345  00316C                     l2757:
 15346                           
 15347                           ; BSR set to: 0
 15348  00316C  0100               	movlb	0	; () banked
 15349  00316E  B169               	btfsc	___xxtofl@exp& (0+255),0,b
 15350  003170  D001               	goto	u12191
 15351  003172  D001               	goto	u12190
 15352  003174                     u12191:
 15353  003174  D009               	goto	l2758
 15354  003176                     u12190:
 15355                           
 15356                           ; BSR set to: 0
 15357  003176  0EFF               	movlw	255
 15358  003178  0100               	movlb	0	; () banked
 15359  00317A  176A               	andwf	___xxtofl@arg& (0+255),f,b
 15360  00317C  0EFF               	movlw	255
 15361  00317E  176B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 15362  003180  0E7F               	movlw	127
 15363  003182  176C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 15364  003184  0EFF               	movlw	255
 15365  003186  176D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 15366  003188                     l2758:
 15367                           
 15368                           ; BSR set to: 0
 15369  003188  0100               	movlb	0	; () banked
 15370  00318A  90D8               	bcf	status,0,c
 15371  00318C  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 15372  00318E  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 15373  003192  0100               	movlb	0	; () banked
 15374  003194  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 15375  003196  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 15376  003198  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 15377  00319A  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 15378  00319E  0100               	movlb	0	; () banked
 15379  0031A0  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 15380  0031A2  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 15381  0031A4  6B64               	clrf	??___xxtofl& (0+255),b
 15382  0031A6  0100               	movlb	0	; () banked
 15383  0031A8  5164               	movf	??___xxtofl& (0+255),w,b
 15384  0031AA  0100               	movlb	0	; () banked
 15385  0031AC  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 15386  0031AE  0100               	movlb	0	; () banked
 15387  0031B0  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 15388  0031B2  0100               	movlb	0	; () banked
 15389  0031B4  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 15390  0031B6  0100               	movlb	0	; () banked
 15391  0031B8  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 15392  0031BA  0100               	movlb	0	; () banked
 15393  0031BC  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 15394  0031BE  0100               	movlb	0	; () banked
 15395  0031C0  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 15396  0031C2  0100               	movlb	0	; () banked
 15397  0031C4  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 15398                           
 15399                           ; BSR set to: 0
 15400  0031C6  0100               	movlb	0	; () banked
 15401  0031C8  5168               	movf	___xxtofl@sign& (0+255),w,b
 15402  0031CA  0100               	movlb	0	; () banked
 15403  0031CC  B4D8               	btfsc	status,2,c
 15404  0031CE  D001               	goto	u12201
 15405  0031D0  D001               	goto	u12200
 15406  0031D2                     u12201:
 15407  0031D2  D008               	goto	l12869
 15408  0031D4                     u12200:
 15409                           
 15410                           ; BSR set to: 0
 15411  0031D4  0100               	movlb	0	; () banked
 15412  0031D6  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 15413  0031D8  D002               	goto	u12210
 15414  0031DA  D000               	goto	u12211
 15415  0031DC                     u12211:
 15416  0031DC  D003               	goto	l12869
 15417  0031DE                     u12210:
 15418                           
 15419                           ; BSR set to: 0
 15420  0031DE  0100               	movlb	0	; () banked
 15421  0031E0  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 15422  0031E2  D000               	goto	l12869
 15423  0031E4                     l12869:
 15424                           
 15425                           ; BSR set to: 0
 15426  0031E4  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 15427  0031E8  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 15428  0031EC  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 15429  0031F0  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 15430  0031F4  D000               	goto	l2746
 15431  0031F6                     l2746:
 15432                           
 15433                           ; BSR set to: 0
 15434  0031F6  0012               	return		;funcret
 15435  0031F8                     __end_of___xxtofl:
 15436                           	opt stack 0
 15437                           tblptru	equ	0xFF8
 15438                           tblptrh	equ	0xFF7
 15439                           tblptrl	equ	0xFF6
 15440                           tablat	equ	0xFF5
 15441                           prodh	equ	0xFF4
 15442                           prodl	equ	0xFF3
 15443                           intcon	equ	0xFF2
 15444                           intcon3	equ	0xFF0
 15445                           postinc0	equ	0xFEE
 15446                           wreg	equ	0xFE8
 15447                           indf1	equ	0xFE7
 15448                           postdec1	equ	0xFE5
 15449                           fsr1h	equ	0xFE2
 15450                           fsr1l	equ	0xFE1
 15451                           indf2	equ	0xFDF
 15452                           fsr2h	equ	0xFDA
 15453                           fsr2l	equ	0xFD9
 15454                           status	equ	0xFD8
 15455                           
 15456 ;; *************** function ___fltol *****************
 15457 ;; Defined at:
 15458 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fltol.c"
 15459 ;; Parameters:    Size  Location     Type
 15460 ;;  f1              4    0[BANK0 ] unsigned char 
 15461 ;; Auto vars:     Size  Location     Type
 15462 ;;  exp1            1    9[BANK0 ] unsigned char 
 15463 ;;  sign1           1    8[BANK0 ] unsigned char 
 15464 ;; Return value:  Size  Location     Type
 15465 ;;                  4    0[BANK0 ] long 
 15466 ;; Registers used:
 15467 ;;		wreg, status,2, status,0
 15468 ;; Tracked objects:
 15469 ;;		On entry : 0/0
 15470 ;;		On exit  : 0/0
 15471 ;;		Unchanged: 0/0
 15472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15473 ;;      Params:         0       4       0       0       0       0       0       0       0
 15474 ;;      Locals:         0       2       0       0       0       0       0       0       0
 15475 ;;      Temps:          0       4       0       0       0       0       0       0       0
 15476 ;;      Totals:         0      10       0       0       0       0       0       0       0
 15477 ;;Total ram usage:       10 bytes
 15478 ;; Hardware stack levels used:    1
 15479 ;; Hardware stack levels required when called:   11
 15480 ;; This function calls:
 15481 ;;		Nothing
 15482 ;; This function is called by:
 15483 ;;		_ADC_TempConversion
 15484 ;; This function uses a non-reentrant model
 15485 ;;
 15486                           
 15487                           	psect	text47
 15488  003CB8                     __ptext47:
 15489                           	opt stack 0
 15490  003CB8                     ___fltol:
 15491                           	opt stack 16
 15492                           
 15493                           ; BSR set to: 0
 15494                           ;incstack = 0
 15495  003CB8  0100               	movlb	0	; () banked
 15496  003CBA  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 15497  003CBC  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 15498  003CBE  0100               	movlb	0	; () banked
 15499  003CC0  6F69               	movwf	___fltol@exp1& (0+255),b
 15500  003CC2  0100               	movlb	0	; () banked
 15501  003CC4  5169               	movf	___fltol@exp1& (0+255),w,b
 15502  003CC6  A4D8               	btfss	status,2,c
 15503  003CC8  D001               	goto	u12021
 15504  003CCA  D001               	goto	u12020
 15505  003CCC                     u12021:
 15506  003CCC  D00B               	goto	l12767
 15507  003CCE                     u12020:
 15508                           
 15509                           ; BSR set to: 0
 15510  003CCE  0E00               	movlw	0
 15511  003CD0  0100               	movlb	0	; () banked
 15512  003CD2  6F60               	movwf	?___fltol& (0+255),b
 15513  003CD4  0E00               	movlw	0
 15514  003CD6  6F61               	movwf	(?___fltol+1)& (0+255),b
 15515  003CD8  0E00               	movlw	0
 15516  003CDA  6F62               	movwf	(?___fltol+2)& (0+255),b
 15517  003CDC  0E00               	movlw	0
 15518  003CDE  6F63               	movwf	(?___fltol+3)& (0+255),b
 15519  003CE0  D087               	goto	l2397
 15520                           
 15521                           ; BSR set to: 0
 15522  003CE2  D086               	goto	l2397
 15523  003CE4                     l12767:
 15524                           
 15525                           ; BSR set to: 0
 15526  003CE4  C060  F064         	movff	___fltol@f1,??___fltol
 15527  003CE8  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 15528  003CEC  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 15529  003CF0  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 15530  003CF4  0E20               	movlw	32
 15531  003CF6  D006               	goto	u12030
 15532  003CF8                     u12035:
 15533  003CF8  0100               	movlb	0	; () banked
 15534  003CFA  90D8               	bcf	status,0,c
 15535  003CFC  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 15536  003CFE  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 15537  003D00  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 15538  003D02  3364               	rrcf	??___fltol& (0+255),f,b
 15539  003D04                     u12030:
 15540  003D04  2EE8               	decfsz	wreg,f,c
 15541  003D06  D7F8               	goto	u12035
 15542  003D08  0100               	movlb	0	; () banked
 15543  003D0A  5164               	movf	??___fltol& (0+255),w,b
 15544  003D0C  0100               	movlb	0	; () banked
 15545  003D0E  6F68               	movwf	___fltol@sign1& (0+255),b
 15546                           
 15547                           ; BSR set to: 0
 15548  003D10  0100               	movlb	0	; () banked
 15549  003D12  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 15550                           
 15551                           ; BSR set to: 0
 15552  003D14  0EFF               	movlw	255
 15553  003D16  0100               	movlb	0	; () banked
 15554  003D18  1760               	andwf	___fltol@f1& (0+255),f,b
 15555  003D1A  0EFF               	movlw	255
 15556  003D1C  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 15557  003D1E  0EFF               	movlw	255
 15558  003D20  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 15559  003D22  0E00               	movlw	0
 15560  003D24  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 15561                           
 15562                           ; BSR set to: 0
 15563  003D26  0E96               	movlw	150
 15564  003D28  0100               	movlb	0	; () banked
 15565  003D2A  5F69               	subwf	___fltol@exp1& (0+255),f,b
 15566                           
 15567                           ; BSR set to: 0
 15568  003D2C  0100               	movlb	0	; () banked
 15569  003D2E  BF69               	btfsc	___fltol@exp1& (0+255),7,b
 15570  003D30  D002               	goto	u12040
 15571  003D32  D000               	goto	u12041
 15572  003D34                     u12041:
 15573  003D34  D01F               	goto	l12787
 15574  003D36                     u12040:
 15575                           
 15576                           ; BSR set to: 0
 15577  003D36  0100               	movlb	0	; () banked
 15578  003D38  5169               	movf	___fltol@exp1& (0+255),w,b
 15579  003D3A  0A80               	xorlw	128
 15580  003D3C  0F97               	addlw	151
 15581  003D3E  B0D8               	btfsc	status,0,c
 15582  003D40  D001               	goto	u12051
 15583  003D42  D001               	goto	u12050
 15584  003D44                     u12051:
 15585  003D44  D00C               	goto	l12783
 15586  003D46                     u12050:
 15587                           
 15588                           ; BSR set to: 0
 15589  003D46  0E00               	movlw	0
 15590  003D48  0100               	movlb	0	; () banked
 15591  003D4A  6F60               	movwf	?___fltol& (0+255),b
 15592  003D4C  0E00               	movlw	0
 15593  003D4E  6F61               	movwf	(?___fltol+1)& (0+255),b
 15594  003D50  0E00               	movlw	0
 15595  003D52  6F62               	movwf	(?___fltol+2)& (0+255),b
 15596  003D54  0E00               	movlw	0
 15597  003D56  6F63               	movwf	(?___fltol+3)& (0+255),b
 15598  003D58  D04B               	goto	l2397
 15599                           
 15600                           ; BSR set to: 0
 15601  003D5A  D04A               	goto	l2397
 15602                           
 15603                           ; BSR set to: 0
 15604  003D5C  D000               	goto	l12783
 15605  003D5E                     l12783:
 15606                           
 15607                           ; BSR set to: 0
 15608  003D5E  0100               	movlb	0	; () banked
 15609  003D60  90D8               	bcf	status,0,c
 15610  003D62  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 15611  003D64  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 15612  003D66  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 15613  003D68  3360               	rrcf	___fltol@f1& (0+255),f,b
 15614                           
 15615                           ; BSR set to: 0
 15616  003D6A  0100               	movlb	0	; () banked
 15617  003D6C  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 15618  003D6E  D7F7               	goto	l12783
 15619  003D70  D025               	goto	l12797
 15620                           
 15621                           ; BSR set to: 0
 15622  003D72  D024               	goto	l12797
 15623  003D74                     l12787:
 15624                           
 15625                           ; BSR set to: 0
 15626  003D74  0E1F               	movlw	31
 15627  003D76  0100               	movlb	0	; () banked
 15628  003D78  6569               	cpfsgt	___fltol@exp1& (0+255),b
 15629  003D7A  D001               	goto	u12061
 15630  003D7C  D001               	goto	u12060
 15631  003D7E                     u12061:
 15632  003D7E  D015               	goto	l12795
 15633  003D80                     u12060:
 15634                           
 15635                           ; BSR set to: 0
 15636  003D80  0E00               	movlw	0
 15637  003D82  0100               	movlb	0	; () banked
 15638  003D84  6F60               	movwf	?___fltol& (0+255),b
 15639  003D86  0E00               	movlw	0
 15640  003D88  6F61               	movwf	(?___fltol+1)& (0+255),b
 15641  003D8A  0E00               	movlw	0
 15642  003D8C  6F62               	movwf	(?___fltol+2)& (0+255),b
 15643  003D8E  0E00               	movlw	0
 15644  003D90  6F63               	movwf	(?___fltol+3)& (0+255),b
 15645  003D92  D02E               	goto	l2397
 15646                           
 15647                           ; BSR set to: 0
 15648  003D94  D02D               	goto	l2397
 15649                           
 15650                           ; BSR set to: 0
 15651  003D96  D009               	goto	l12795
 15652  003D98                     l12793:
 15653                           
 15654                           ; BSR set to: 0
 15655  003D98  0100               	movlb	0	; () banked
 15656  003D9A  90D8               	bcf	status,0,c
 15657  003D9C  3760               	rlcf	___fltol@f1& (0+255),f,b
 15658  003D9E  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 15659  003DA0  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 15660  003DA2  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 15661  003DA4  0100               	movlb	0	; () banked
 15662  003DA6  0769               	decf	___fltol@exp1& (0+255),f,b
 15663  003DA8  D000               	goto	l12795
 15664  003DAA                     l12795:
 15665                           
 15666                           ; BSR set to: 0
 15667  003DAA  0100               	movlb	0	; () banked
 15668  003DAC  5169               	movf	___fltol@exp1& (0+255),w,b
 15669  003DAE  0100               	movlb	0	; () banked
 15670  003DB0  A4D8               	btfss	status,2,c
 15671  003DB2  D001               	goto	u12071
 15672  003DB4  D001               	goto	u12070
 15673  003DB6                     u12071:
 15674  003DB6  D7F0               	goto	l12793
 15675  003DB8                     u12070:
 15676  003DB8  D001               	goto	l12797
 15677                           
 15678                           ; BSR set to: 0
 15679  003DBA  D000               	goto	l12797
 15680  003DBC                     l12797:
 15681                           
 15682                           ; BSR set to: 0
 15683  003DBC  0100               	movlb	0	; () banked
 15684  003DBE  5168               	movf	___fltol@sign1& (0+255),w,b
 15685  003DC0  0100               	movlb	0	; () banked
 15686  003DC2  B4D8               	btfsc	status,2,c
 15687  003DC4  D001               	goto	u12081
 15688  003DC6  D001               	goto	u12080
 15689  003DC8                     u12081:
 15690  003DC8  D00A               	goto	l12801
 15691  003DCA                     u12080:
 15692                           
 15693                           ; BSR set to: 0
 15694  003DCA  0100               	movlb	0	; () banked
 15695  003DCC  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 15696  003DCE  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 15697  003DD0  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 15698  003DD2  6D60               	negf	___fltol@f1& (0+255),b
 15699  003DD4  0E00               	movlw	0
 15700  003DD6  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 15701  003DD8  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 15702  003DDA  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 15703  003DDC  D000               	goto	l12801
 15704  003DDE                     l12801:
 15705                           
 15706                           ; BSR set to: 0
 15707  003DDE  C060  F060         	movff	___fltol@f1,?___fltol
 15708  003DE2  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 15709  003DE6  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 15710  003DEA  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 15711  003DEE  D000               	goto	l2397
 15712  003DF0                     l2397:
 15713                           
 15714                           ; BSR set to: 0
 15715  003DF0  0012               	return		;funcret
 15716  003DF2                     __end_of___fltol:
 15717                           	opt stack 0
 15718                           tblptru	equ	0xFF8
 15719                           tblptrh	equ	0xFF7
 15720                           tblptrl	equ	0xFF6
 15721                           tablat	equ	0xFF5
 15722                           prodh	equ	0xFF4
 15723                           prodl	equ	0xFF3
 15724                           intcon	equ	0xFF2
 15725                           intcon3	equ	0xFF0
 15726                           postinc0	equ	0xFEE
 15727                           wreg	equ	0xFE8
 15728                           indf1	equ	0xFE7
 15729                           postdec1	equ	0xFE5
 15730                           fsr1h	equ	0xFE2
 15731                           fsr1l	equ	0xFE1
 15732                           indf2	equ	0xFDF
 15733                           fsr2h	equ	0xFDA
 15734                           fsr2l	equ	0xFD9
 15735                           status	equ	0xFD8
 15736                           
 15737 ;; *************** function ___flmul *****************
 15738 ;; Defined at:
 15739 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\sprcmul.c"
 15740 ;; Parameters:    Size  Location     Type
 15741 ;;  b               4   20[BANK0 ] long 
 15742 ;;  a               4   24[BANK0 ] long 
 15743 ;; Auto vars:     Size  Location     Type
 15744 ;;  prod            4   39[BANK0 ] struct .
 15745 ;;  grs             4   34[BANK0 ] unsigned long 
 15746 ;;  temp            2   43[BANK0 ] struct .
 15747 ;;  bexp            1   38[BANK0 ] unsigned char 
 15748 ;;  aexp            1   33[BANK0 ] unsigned char 
 15749 ;;  sign            1   32[BANK0 ] unsigned char 
 15750 ;; Return value:  Size  Location     Type
 15751 ;;                  4   20[BANK0 ] unsigned char 
 15752 ;; Registers used:
 15753 ;;		wreg, status,2, status,0, prodl, prodh
 15754 ;; Tracked objects:
 15755 ;;		On entry : 0/0
 15756 ;;		On exit  : 0/0
 15757 ;;		Unchanged: 0/0
 15758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15759 ;;      Params:         0       8       0       0       0       0       0       0       0
 15760 ;;      Locals:         0      13       0       0       0       0       0       0       0
 15761 ;;      Temps:          0       4       0       0       0       0       0       0       0
 15762 ;;      Totals:         0      25       0       0       0       0       0       0       0
 15763 ;;Total ram usage:       25 bytes
 15764 ;; Hardware stack levels used:    1
 15765 ;; Hardware stack levels required when called:   11
 15766 ;; This function calls:
 15767 ;;		Nothing
 15768 ;; This function is called by:
 15769 ;;		_ADC_TempConversion
 15770 ;; This function uses a non-reentrant model
 15771 ;;
 15772                           
 15773                           	psect	text48
 15774  0020F0                     __ptext48:
 15775                           	opt stack 0
 15776  0020F0                     ___flmul:
 15777                           	opt stack 16
 15778                           
 15779                           ; BSR set to: 0
 15780                           ;incstack = 0
 15781  0020F0  0100               	movlb	0	; () banked
 15782  0020F2  5177               	movf	(___flmul@b+3)& (0+255),w,b
 15783  0020F4  0B80               	andlw	128
 15784  0020F6  0100               	movlb	0	; () banked
 15785  0020F8  6F80               	movwf	___flmul@sign& (0+255),b
 15786  0020FA  0100               	movlb	0	; () banked
 15787  0020FC  5177               	movf	(___flmul@b+3)& (0+255),w,b
 15788  0020FE  2577               	addwf	(___flmul@b+3)& (0+255),w,b
 15789  002100  0100               	movlb	0	; () banked
 15790  002102  6F86               	movwf	___flmul@bexp& (0+255),b
 15791                           
 15792                           ; BSR set to: 0
 15793  002104  0100               	movlb	0	; () banked
 15794  002106  AF76               	btfss	(___flmul@b+2)& (0+255),7,b
 15795  002108  D001               	goto	u11771
 15796  00210A  D001               	goto	u11770
 15797  00210C                     u11771:
 15798  00210C  D003               	goto	l12601
 15799  00210E                     u11770:
 15800                           
 15801                           ; BSR set to: 0
 15802  00210E  0100               	movlb	0	; () banked
 15803  002110  8186               	bsf	___flmul@bexp& (0+255),0,b
 15804  002112  D000               	goto	l12601
 15805  002114                     l12601:
 15806                           
 15807                           ; BSR set to: 0
 15808  002114  0100               	movlb	0	; () banked
 15809  002116  5186               	movf	___flmul@bexp& (0+255),w,b
 15810  002118  0100               	movlb	0	; () banked
 15811  00211A  B4D8               	btfsc	status,2,c
 15812  00211C  D001               	goto	u11781
 15813  00211E  D001               	goto	u11780
 15814  002120                     u11781:
 15815  002120  D013               	goto	l12609
 15816  002122                     u11780:
 15817                           
 15818                           ; BSR set to: 0
 15819  002122  0100               	movlb	0	; () banked
 15820  002124  2986               	incf	___flmul@bexp& (0+255),w,b
 15821  002126  A4D8               	btfss	status,2,c
 15822  002128  D001               	goto	u11791
 15823  00212A  D001               	goto	u11790
 15824  00212C                     u11791:
 15825  00212C  D00A               	goto	l12607
 15826  00212E                     u11790:
 15827                           
 15828                           ; BSR set to: 0
 15829  00212E  0E00               	movlw	0
 15830  002130  0100               	movlb	0	; () banked
 15831  002132  6F74               	movwf	___flmul@b& (0+255),b
 15832  002134  0E00               	movlw	0
 15833  002136  6F75               	movwf	(___flmul@b+1)& (0+255),b
 15834  002138  0E00               	movlw	0
 15835  00213A  6F76               	movwf	(___flmul@b+2)& (0+255),b
 15836  00213C  0E00               	movlw	0
 15837  00213E  6F77               	movwf	(___flmul@b+3)& (0+255),b
 15838  002140  D000               	goto	l12607
 15839  002142                     l12607:
 15840                           
 15841                           ; BSR set to: 0
 15842  002142  0100               	movlb	0	; () banked
 15843  002144  8F76               	bsf	(___flmul@b+2)& (0+255),7,b
 15844  002146  D00A               	goto	l12611
 15845  002148                     l12609:
 15846                           
 15847                           ; BSR set to: 0
 15848  002148  0E00               	movlw	0
 15849  00214A  0100               	movlb	0	; () banked
 15850  00214C  6F74               	movwf	___flmul@b& (0+255),b
 15851  00214E  0E00               	movlw	0
 15852  002150  6F75               	movwf	(___flmul@b+1)& (0+255),b
 15853  002152  0E00               	movlw	0
 15854  002154  6F76               	movwf	(___flmul@b+2)& (0+255),b
 15855  002156  0E00               	movlw	0
 15856  002158  6F77               	movwf	(___flmul@b+3)& (0+255),b
 15857  00215A  D000               	goto	l12611
 15858  00215C                     l12611:
 15859                           
 15860                           ; BSR set to: 0
 15861  00215C  0100               	movlb	0	; () banked
 15862  00215E  517B               	movf	(___flmul@a+3)& (0+255),w,b
 15863  002160  0B80               	andlw	128
 15864  002162  0100               	movlb	0	; () banked
 15865  002164  1B80               	xorwf	___flmul@sign& (0+255),f,b
 15866                           
 15867                           ; BSR set to: 0
 15868  002166  0100               	movlb	0	; () banked
 15869  002168  517B               	movf	(___flmul@a+3)& (0+255),w,b
 15870  00216A  257B               	addwf	(___flmul@a+3)& (0+255),w,b
 15871  00216C  0100               	movlb	0	; () banked
 15872  00216E  6F81               	movwf	___flmul@aexp& (0+255),b
 15873                           
 15874                           ; BSR set to: 0
 15875  002170  0100               	movlb	0	; () banked
 15876  002172  AF7A               	btfss	(___flmul@a+2)& (0+255),7,b
 15877  002174  D001               	goto	u11801
 15878  002176  D001               	goto	u11800
 15879  002178                     u11801:
 15880  002178  D003               	goto	l12619
 15881  00217A                     u11800:
 15882                           
 15883                           ; BSR set to: 0
 15884  00217A  0100               	movlb	0	; () banked
 15885  00217C  8181               	bsf	___flmul@aexp& (0+255),0,b
 15886  00217E  D000               	goto	l12619
 15887  002180                     l12619:
 15888                           
 15889                           ; BSR set to: 0
 15890  002180  0100               	movlb	0	; () banked
 15891  002182  5181               	movf	___flmul@aexp& (0+255),w,b
 15892  002184  0100               	movlb	0	; () banked
 15893  002186  B4D8               	btfsc	status,2,c
 15894  002188  D001               	goto	u11811
 15895  00218A  D001               	goto	u11810
 15896  00218C                     u11811:
 15897  00218C  D013               	goto	l12627
 15898  00218E                     u11810:
 15899                           
 15900                           ; BSR set to: 0
 15901  00218E  0100               	movlb	0	; () banked
 15902  002190  2981               	incf	___flmul@aexp& (0+255),w,b
 15903  002192  A4D8               	btfss	status,2,c
 15904  002194  D001               	goto	u11821
 15905  002196  D001               	goto	u11820
 15906  002198                     u11821:
 15907  002198  D00A               	goto	l12625
 15908  00219A                     u11820:
 15909                           
 15910                           ; BSR set to: 0
 15911  00219A  0E00               	movlw	0
 15912  00219C  0100               	movlb	0	; () banked
 15913  00219E  6F78               	movwf	___flmul@a& (0+255),b
 15914  0021A0  0E00               	movlw	0
 15915  0021A2  6F79               	movwf	(___flmul@a+1)& (0+255),b
 15916  0021A4  0E00               	movlw	0
 15917  0021A6  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 15918  0021A8  0E00               	movlw	0
 15919  0021AA  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 15920  0021AC  D000               	goto	l12625
 15921  0021AE                     l12625:
 15922                           
 15923                           ; BSR set to: 0
 15924  0021AE  0100               	movlb	0	; () banked
 15925  0021B0  8F7A               	bsf	(___flmul@a+2)& (0+255),7,b
 15926  0021B2  D009               	goto	l2704
 15927  0021B4                     l12627:
 15928                           
 15929                           ; BSR set to: 0
 15930  0021B4  0E00               	movlw	0
 15931  0021B6  0100               	movlb	0	; () banked
 15932  0021B8  6F78               	movwf	___flmul@a& (0+255),b
 15933  0021BA  0E00               	movlw	0
 15934  0021BC  6F79               	movwf	(___flmul@a+1)& (0+255),b
 15935  0021BE  0E00               	movlw	0
 15936  0021C0  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 15937  0021C2  0E00               	movlw	0
 15938  0021C4  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 15939  0021C6                     l2704:
 15940                           
 15941                           ; BSR set to: 0
 15942  0021C6  0100               	movlb	0	; () banked
 15943  0021C8  5181               	movf	___flmul@aexp& (0+255),w,b
 15944  0021CA  0100               	movlb	0	; () banked
 15945  0021CC  B4D8               	btfsc	status,2,c
 15946  0021CE  D001               	goto	u11831
 15947  0021D0  D001               	goto	u11830
 15948  0021D2                     u11831:
 15949  0021D2  D008               	goto	l12631
 15950  0021D4                     u11830:
 15951                           
 15952                           ; BSR set to: 0
 15953  0021D4  0100               	movlb	0	; () banked
 15954  0021D6  5186               	movf	___flmul@bexp& (0+255),w,b
 15955  0021D8  0100               	movlb	0	; () banked
 15956  0021DA  A4D8               	btfss	status,2,c
 15957  0021DC  D001               	goto	u11841
 15958  0021DE  D001               	goto	u11840
 15959  0021E0                     u11841:
 15960  0021E0  D00C               	goto	l12635
 15961  0021E2                     u11840:
 15962  0021E2  D000               	goto	l12631
 15963  0021E4                     l12631:
 15964                           
 15965                           ; BSR set to: 0
 15966  0021E4  0E00               	movlw	0
 15967  0021E6  0100               	movlb	0	; () banked
 15968  0021E8  6F74               	movwf	?___flmul& (0+255),b
 15969  0021EA  0E00               	movlw	0
 15970  0021EC  6F75               	movwf	(?___flmul+1)& (0+255),b
 15971  0021EE  0E00               	movlw	0
 15972  0021F0  6F76               	movwf	(?___flmul+2)& (0+255),b
 15973  0021F2  0E00               	movlw	0
 15974  0021F4  6F77               	movwf	(?___flmul+3)& (0+255),b
 15975  0021F6  D208               	goto	l2708
 15976                           
 15977                           ; BSR set to: 0
 15978  0021F8  D207               	goto	l2708
 15979  0021FA                     l12635:
 15980                           
 15981                           ; BSR set to: 0
 15982  0021FA  0100               	movlb	0	; () banked
 15983  0021FC  517A               	movf	(___flmul@a+2)& (0+255),w,b
 15984  0021FE  0100               	movlb	0	; () banked
 15985  002200  0374               	mulwf	___flmul@b& (0+255),b
 15986  002202  CFF3 F08B          	movff	prodl,___flmul@temp
 15987  002206  CFF4 F08C          	movff	prodh,___flmul@temp+1
 15988                           
 15989                           ; BSR set to: 0
 15990  00220A  0100               	movlb	0	; () banked
 15991  00220C  518B               	movf	___flmul@temp& (0+255),w,b
 15992  00220E  0100               	movlb	0	; () banked
 15993  002210  6F82               	movwf	___flmul@grs& (0+255),b
 15994  002212  6B83               	clrf	(___flmul@grs+1)& (0+255),b
 15995  002214  6B84               	clrf	(___flmul@grs+2)& (0+255),b
 15996  002216  6B85               	clrf	(___flmul@grs+3)& (0+255),b
 15997                           
 15998                           ; BSR set to: 0
 15999  002218  0100               	movlb	0	; () banked
 16000  00221A  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16001  00221C  0100               	movlb	0	; () banked
 16002  00221E  6F87               	movwf	___flmul@prod& (0+255),b
 16003  002220  6B88               	clrf	(___flmul@prod+1)& (0+255),b
 16004  002222  6B89               	clrf	(___flmul@prod+2)& (0+255),b
 16005  002224  6B8A               	clrf	(___flmul@prod+3)& (0+255),b
 16006  002226  0100               	movlb	0	; () banked
 16007  002228  5179               	movf	(___flmul@a+1)& (0+255),w,b
 16008  00222A  0100               	movlb	0	; () banked
 16009  00222C  0375               	mulwf	(___flmul@b+1)& (0+255),b
 16010  00222E  CFF3 F08B          	movff	prodl,___flmul@temp
 16011  002232  CFF4 F08C          	movff	prodh,___flmul@temp+1
 16012                           
 16013                           ; BSR set to: 0
 16014  002236  0100               	movlb	0	; () banked
 16015  002238  518B               	movf	___flmul@temp& (0+255),w,b
 16016  00223A  0100               	movlb	0	; () banked
 16017  00223C  2782               	addwf	___flmul@grs& (0+255),f,b
 16018  00223E  0E00               	movlw	0
 16019  002240  2383               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16020  002242  2384               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16021  002244  2385               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16022                           
 16023                           ; BSR set to: 0
 16024  002246  0100               	movlb	0	; () banked
 16025  002248  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16026  00224A  0100               	movlb	0	; () banked
 16027  00224C  2787               	addwf	___flmul@prod& (0+255),f,b
 16028  00224E  0E00               	movlw	0
 16029  002250  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16030  002252  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16031  002254  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16032  002256  0100               	movlb	0	; () banked
 16033  002258  5178               	movf	___flmul@a& (0+255),w,b
 16034  00225A  0100               	movlb	0	; () banked
 16035  00225C  0376               	mulwf	(___flmul@b+2)& (0+255),b
 16036  00225E  CFF3 F08B          	movff	prodl,___flmul@temp
 16037  002262  CFF4 F08C          	movff	prodh,___flmul@temp+1
 16038                           
 16039                           ; BSR set to: 0
 16040  002266  0100               	movlb	0	; () banked
 16041  002268  518B               	movf	___flmul@temp& (0+255),w,b
 16042  00226A  0100               	movlb	0	; () banked
 16043  00226C  2782               	addwf	___flmul@grs& (0+255),f,b
 16044  00226E  0E00               	movlw	0
 16045  002270  2383               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16046  002272  2384               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16047  002274  2385               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16048                           
 16049                           ; BSR set to: 0
 16050  002276  0100               	movlb	0	; () banked
 16051  002278  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16052  00227A  0100               	movlb	0	; () banked
 16053  00227C  2787               	addwf	___flmul@prod& (0+255),f,b
 16054  00227E  0E00               	movlw	0
 16055  002280  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16056  002282  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16057  002284  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16058                           
 16059                           ; BSR set to: 0
 16060  002286  C084  F085         	movff	___flmul@grs+2,___flmul@grs+3
 16061  00228A  C083  F084         	movff	___flmul@grs+1,___flmul@grs+2
 16062  00228E  C082  F083         	movff	___flmul@grs,___flmul@grs+1
 16063  002292  0100               	movlb	0	; () banked
 16064  002294  6B82               	clrf	___flmul@grs& (0+255),b
 16065                           
 16066                           ; BSR set to: 0
 16067  002296  0100               	movlb	0	; () banked
 16068  002298  5178               	movf	___flmul@a& (0+255),w,b
 16069  00229A  0100               	movlb	0	; () banked
 16070  00229C  0375               	mulwf	(___flmul@b+1)& (0+255),b
 16071  00229E  CFF3 F08B          	movff	prodl,___flmul@temp
 16072  0022A2  CFF4 F08C          	movff	prodh,___flmul@temp+1
 16073                           
 16074                           ; BSR set to: 0
 16075  0022A6  0100               	movlb	0	; () banked
 16076  0022A8  518B               	movf	___flmul@temp& (0+255),w,b
 16077  0022AA  0100               	movlb	0	; () banked
 16078  0022AC  2782               	addwf	___flmul@grs& (0+255),f,b
 16079  0022AE  0100               	movlb	0	; () banked
 16080  0022B0  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16081  0022B2  0100               	movlb	0	; () banked
 16082  0022B4  2383               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16083  0022B6  0E00               	movlw	0
 16084  0022B8  0100               	movlb	0	; () banked
 16085  0022BA  2384               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16086  0022BC  0E00               	movlw	0
 16087  0022BE  0100               	movlb	0	; () banked
 16088  0022C0  2385               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16089                           
 16090                           ; BSR set to: 0
 16091  0022C2  0100               	movlb	0	; () banked
 16092  0022C4  5179               	movf	(___flmul@a+1)& (0+255),w,b
 16093  0022C6  0100               	movlb	0	; () banked
 16094  0022C8  0374               	mulwf	___flmul@b& (0+255),b
 16095  0022CA  CFF3 F08B          	movff	prodl,___flmul@temp
 16096  0022CE  CFF4 F08C          	movff	prodh,___flmul@temp+1
 16097                           
 16098                           ; BSR set to: 0
 16099  0022D2  0100               	movlb	0	; () banked
 16100  0022D4  518B               	movf	___flmul@temp& (0+255),w,b
 16101  0022D6  0100               	movlb	0	; () banked
 16102  0022D8  2782               	addwf	___flmul@grs& (0+255),f,b
 16103  0022DA  0100               	movlb	0	; () banked
 16104  0022DC  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16105  0022DE  0100               	movlb	0	; () banked
 16106  0022E0  2383               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16107  0022E2  0E00               	movlw	0
 16108  0022E4  0100               	movlb	0	; () banked
 16109  0022E6  2384               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16110  0022E8  0E00               	movlw	0
 16111  0022EA  0100               	movlb	0	; () banked
 16112  0022EC  2385               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16113                           
 16114                           ; BSR set to: 0
 16115  0022EE  C084  F085         	movff	___flmul@grs+2,___flmul@grs+3
 16116  0022F2  C083  F084         	movff	___flmul@grs+1,___flmul@grs+2
 16117  0022F6  C082  F083         	movff	___flmul@grs,___flmul@grs+1
 16118  0022FA  0100               	movlb	0	; () banked
 16119  0022FC  6B82               	clrf	___flmul@grs& (0+255),b
 16120  0022FE  0100               	movlb	0	; () banked
 16121  002300  5178               	movf	___flmul@a& (0+255),w,b
 16122  002302  0100               	movlb	0	; () banked
 16123  002304  0374               	mulwf	___flmul@b& (0+255),b
 16124  002306  CFF3 F08B          	movff	prodl,___flmul@temp
 16125  00230A  CFF4 F08C          	movff	prodh,___flmul@temp+1
 16126                           
 16127                           ; BSR set to: 0
 16128  00230E  0100               	movlb	0	; () banked
 16129  002310  518B               	movf	___flmul@temp& (0+255),w,b
 16130  002312  0100               	movlb	0	; () banked
 16131  002314  2782               	addwf	___flmul@grs& (0+255),f,b
 16132  002316  0100               	movlb	0	; () banked
 16133  002318  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16134  00231A  0100               	movlb	0	; () banked
 16135  00231C  2383               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16136  00231E  0E00               	movlw	0
 16137  002320  0100               	movlb	0	; () banked
 16138  002322  2384               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16139  002324  0E00               	movlw	0
 16140  002326  0100               	movlb	0	; () banked
 16141  002328  2385               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16142                           
 16143                           ; BSR set to: 0
 16144  00232A  0100               	movlb	0	; () banked
 16145  00232C  517A               	movf	(___flmul@a+2)& (0+255),w,b
 16146  00232E  0100               	movlb	0	; () banked
 16147  002330  0375               	mulwf	(___flmul@b+1)& (0+255),b
 16148  002332  CFF3 F08B          	movff	prodl,___flmul@temp
 16149  002336  CFF4 F08C          	movff	prodh,___flmul@temp+1
 16150  00233A  0100               	movlb	0	; () banked
 16151  00233C  518B               	movf	___flmul@temp& (0+255),w,b
 16152  00233E  0100               	movlb	0	; () banked
 16153  002340  2787               	addwf	___flmul@prod& (0+255),f,b
 16154  002342  0100               	movlb	0	; () banked
 16155  002344  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16156  002346  0100               	movlb	0	; () banked
 16157  002348  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16158  00234A  0E00               	movlw	0
 16159  00234C  0100               	movlb	0	; () banked
 16160  00234E  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16161  002350  0E00               	movlw	0
 16162  002352  0100               	movlb	0	; () banked
 16163  002354  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16164                           
 16165                           ; BSR set to: 0
 16166  002356  0100               	movlb	0	; () banked
 16167  002358  5179               	movf	(___flmul@a+1)& (0+255),w,b
 16168  00235A  0100               	movlb	0	; () banked
 16169  00235C  0376               	mulwf	(___flmul@b+2)& (0+255),b
 16170  00235E  CFF3 F08B          	movff	prodl,___flmul@temp
 16171  002362  CFF4 F08C          	movff	prodh,___flmul@temp+1
 16172                           
 16173                           ; BSR set to: 0
 16174  002366  0100               	movlb	0	; () banked
 16175  002368  518B               	movf	___flmul@temp& (0+255),w,b
 16176  00236A  0100               	movlb	0	; () banked
 16177  00236C  2787               	addwf	___flmul@prod& (0+255),f,b
 16178  00236E  0100               	movlb	0	; () banked
 16179  002370  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16180  002372  0100               	movlb	0	; () banked
 16181  002374  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16182  002376  0E00               	movlw	0
 16183  002378  0100               	movlb	0	; () banked
 16184  00237A  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16185  00237C  0E00               	movlw	0
 16186  00237E  0100               	movlb	0	; () banked
 16187  002380  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16188  002382  0100               	movlb	0	; () banked
 16189  002384  517A               	movf	(___flmul@a+2)& (0+255),w,b
 16190  002386  0100               	movlb	0	; () banked
 16191  002388  0376               	mulwf	(___flmul@b+2)& (0+255),b
 16192  00238A  CFF3 F08B          	movff	prodl,___flmul@temp
 16193  00238E  CFF4 F08C          	movff	prodh,___flmul@temp+1
 16194                           
 16195                           ; BSR set to: 0
 16196  002392  0100               	movlb	0	; () banked
 16197  002394  518B               	movf	___flmul@temp& (0+255),w,b
 16198  002396  0100               	movlb	0	; () banked
 16199  002398  6F7C               	movwf	??___flmul& (0+255),b
 16200  00239A  0100               	movlb	0	; () banked
 16201  00239C  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16202  00239E  0100               	movlb	0	; () banked
 16203  0023A0  6F7D               	movwf	(??___flmul+1)& (0+255),b
 16204  0023A2  0100               	movlb	0	; () banked
 16205  0023A4  6B7E               	clrf	(??___flmul+2)& (0+255),b
 16206  0023A6  0100               	movlb	0	; () banked
 16207  0023A8  6B7F               	clrf	(??___flmul+3)& (0+255),b
 16208  0023AA  C07E  F07F         	movff	??___flmul+2,??___flmul+3
 16209  0023AE  C07D  F07E         	movff	??___flmul+1,??___flmul+2
 16210  0023B2  C07C  F07D         	movff	??___flmul,??___flmul+1
 16211  0023B6  0100               	movlb	0	; () banked
 16212  0023B8  6B7C               	clrf	??___flmul& (0+255),b
 16213  0023BA  0100               	movlb	0	; () banked
 16214  0023BC  517C               	movf	??___flmul& (0+255),w,b
 16215  0023BE  0100               	movlb	0	; () banked
 16216  0023C0  2787               	addwf	___flmul@prod& (0+255),f,b
 16217  0023C2  0100               	movlb	0	; () banked
 16218  0023C4  517D               	movf	(??___flmul+1)& (0+255),w,b
 16219  0023C6  0100               	movlb	0	; () banked
 16220  0023C8  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16221  0023CA  0100               	movlb	0	; () banked
 16222  0023CC  517E               	movf	(??___flmul+2)& (0+255),w,b
 16223  0023CE  0100               	movlb	0	; () banked
 16224  0023D0  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16225  0023D2  0100               	movlb	0	; () banked
 16226  0023D4  517F               	movf	(??___flmul+3)& (0+255),w,b
 16227  0023D6  0100               	movlb	0	; () banked
 16228  0023D8  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16229                           
 16230                           ; BSR set to: 0
 16231  0023DA  C082  F07C         	movff	___flmul@grs,??___flmul
 16232  0023DE  C083  F07D         	movff	___flmul@grs+1,??___flmul+1
 16233  0023E2  C084  F07E         	movff	___flmul@grs+2,??___flmul+2
 16234  0023E6  C085  F07F         	movff	___flmul@grs+3,??___flmul+3
 16235  0023EA  0E19               	movlw	25
 16236  0023EC  D006               	goto	u11850
 16237  0023EE                     u11855:
 16238  0023EE  0100               	movlb	0	; () banked
 16239  0023F0  90D8               	bcf	status,0,c
 16240  0023F2  337F               	rrcf	(??___flmul+3)& (0+255),f,b
 16241  0023F4  337E               	rrcf	(??___flmul+2)& (0+255),f,b
 16242  0023F6  337D               	rrcf	(??___flmul+1)& (0+255),f,b
 16243  0023F8  337C               	rrcf	??___flmul& (0+255),f,b
 16244  0023FA                     u11850:
 16245  0023FA  2EE8               	decfsz	wreg,f,c
 16246  0023FC  D7F8               	goto	u11855
 16247  0023FE  0100               	movlb	0	; () banked
 16248  002400  517C               	movf	??___flmul& (0+255),w,b
 16249  002402  0100               	movlb	0	; () banked
 16250  002404  2787               	addwf	___flmul@prod& (0+255),f,b
 16251  002406  0100               	movlb	0	; () banked
 16252  002408  517D               	movf	(??___flmul+1)& (0+255),w,b
 16253  00240A  0100               	movlb	0	; () banked
 16254  00240C  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16255  00240E  0100               	movlb	0	; () banked
 16256  002410  517E               	movf	(??___flmul+2)& (0+255),w,b
 16257  002412  0100               	movlb	0	; () banked
 16258  002414  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16259  002416  0100               	movlb	0	; () banked
 16260  002418  517F               	movf	(??___flmul+3)& (0+255),w,b
 16261  00241A  0100               	movlb	0	; () banked
 16262  00241C  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16263                           
 16264                           ; BSR set to: 0
 16265  00241E  C084  F085         	movff	___flmul@grs+2,___flmul@grs+3
 16266  002422  C083  F084         	movff	___flmul@grs+1,___flmul@grs+2
 16267  002426  C082  F083         	movff	___flmul@grs,___flmul@grs+1
 16268  00242A  0100               	movlb	0	; () banked
 16269  00242C  6B82               	clrf	___flmul@grs& (0+255),b
 16270                           
 16271                           ; BSR set to: 0
 16272  00242E  0100               	movlb	0	; () banked
 16273  002430  5181               	movf	___flmul@aexp& (0+255),w,b
 16274  002432  C086  F07C         	movff	___flmul@bexp,??___flmul
 16275  002436  0100               	movlb	0	; () banked
 16276  002438  6B7D               	clrf	(??___flmul+1)& (0+255),b
 16277  00243A  0100               	movlb	0	; () banked
 16278  00243C  277C               	addwf	??___flmul& (0+255),f,b
 16279  00243E  0E00               	movlw	0
 16280  002440  237D               	addwfc	(??___flmul+1)& (0+255),f,b
 16281  002442  0E82               	movlw	130
 16282  002444  0100               	movlb	0	; () banked
 16283  002446  257C               	addwf	??___flmul& (0+255),w,b
 16284  002448  0100               	movlb	0	; () banked
 16285  00244A  6F8B               	movwf	___flmul@temp& (0+255),b
 16286  00244C  0EFF               	movlw	255
 16287  00244E  0100               	movlb	0	; () banked
 16288  002450  217D               	addwfc	(??___flmul+1)& (0+255),w,b
 16289  002452  0100               	movlb	0	; () banked
 16290  002454  6F8C               	movwf	(___flmul@temp+1)& (0+255),b
 16291  002456  D018               	goto	l12683
 16292  002458                     l12677:
 16293                           
 16294                           ; BSR set to: 0
 16295  002458  0100               	movlb	0	; () banked
 16296  00245A  90D8               	bcf	status,0,c
 16297  00245C  3787               	rlcf	___flmul@prod& (0+255),f,b
 16298  00245E  3788               	rlcf	(___flmul@prod+1)& (0+255),f,b
 16299  002460  3789               	rlcf	(___flmul@prod+2)& (0+255),f,b
 16300  002462  378A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 16301                           
 16302                           ; BSR set to: 0
 16303  002464  0100               	movlb	0	; () banked
 16304  002466  AF85               	btfss	(___flmul@grs+3)& (0+255),7,b
 16305  002468  D001               	goto	u11861
 16306  00246A  D001               	goto	u11860
 16307  00246C                     u11861:
 16308  00246C  D002               	goto	l2711
 16309  00246E                     u11860:
 16310                           
 16311                           ; BSR set to: 0
 16312  00246E  0100               	movlb	0	; () banked
 16313  002470  8187               	bsf	___flmul@prod& (0+255),0,b
 16314  002472                     l2711:
 16315                           
 16316                           ; BSR set to: 0
 16317  002472  0100               	movlb	0	; () banked
 16318  002474  90D8               	bcf	status,0,c
 16319  002476  3782               	rlcf	___flmul@grs& (0+255),f,b
 16320  002478  3783               	rlcf	(___flmul@grs+1)& (0+255),f,b
 16321  00247A  3784               	rlcf	(___flmul@grs+2)& (0+255),f,b
 16322  00247C  3785               	rlcf	(___flmul@grs+3)& (0+255),f,b
 16323  00247E  0100               	movlb	0	; () banked
 16324  002480  078B               	decf	___flmul@temp& (0+255),f,b
 16325  002482  A0D8               	btfss	status,0,c
 16326  002484  078C               	decf	(___flmul@temp+1)& (0+255),f,b
 16327  002486  D000               	goto	l12683
 16328  002488                     l12683:
 16329                           
 16330                           ; BSR set to: 0
 16331  002488  0100               	movlb	0	; () banked
 16332  00248A  AF89               	btfss	(___flmul@prod+2)& (0+255),7,b
 16333  00248C  D001               	goto	u11871
 16334  00248E  D001               	goto	u11870
 16335  002490                     u11871:
 16336  002490  D7E3               	goto	l12677
 16337  002492                     u11870:
 16338  002492  D000               	goto	l12685
 16339  002494                     l12685:
 16340                           
 16341                           ; BSR set to: 0
 16342  002494  0E00               	movlw	0
 16343  002496  0100               	movlb	0	; () banked
 16344  002498  6F81               	movwf	___flmul@aexp& (0+255),b
 16345                           
 16346                           ; BSR set to: 0
 16347  00249A  0100               	movlb	0	; () banked
 16348  00249C  AF85               	btfss	(___flmul@grs+3)& (0+255),7,b
 16349  00249E  D001               	goto	u11881
 16350  0024A0  D001               	goto	u11880
 16351  0024A2                     u11881:
 16352  0024A2  D02E               	goto	l2713
 16353  0024A4                     u11880:
 16354                           
 16355                           ; BSR set to: 0
 16356  0024A4  0EFF               	movlw	255
 16357  0024A6  0100               	movlb	0	; () banked
 16358  0024A8  1582               	andwf	___flmul@grs& (0+255),w,b
 16359  0024AA  0100               	movlb	0	; () banked
 16360  0024AC  6F7C               	movwf	??___flmul& (0+255),b
 16361  0024AE  0EFF               	movlw	255
 16362  0024B0  0100               	movlb	0	; () banked
 16363  0024B2  1583               	andwf	(___flmul@grs+1)& (0+255),w,b
 16364  0024B4  0100               	movlb	0	; () banked
 16365  0024B6  6F7D               	movwf	(??___flmul+1)& (0+255),b
 16366  0024B8  0EFF               	movlw	255
 16367  0024BA  0100               	movlb	0	; () banked
 16368  0024BC  1584               	andwf	(___flmul@grs+2)& (0+255),w,b
 16369  0024BE  0100               	movlb	0	; () banked
 16370  0024C0  6F7E               	movwf	(??___flmul+2)& (0+255),b
 16371  0024C2  0E7F               	movlw	127
 16372  0024C4  0100               	movlb	0	; () banked
 16373  0024C6  1585               	andwf	(___flmul@grs+3)& (0+255),w,b
 16374  0024C8  0100               	movlb	0	; () banked
 16375  0024CA  6F7F               	movwf	(??___flmul+3)& (0+255),b
 16376  0024CC  0100               	movlb	0	; () banked
 16377  0024CE  517C               	movf	??___flmul& (0+255),w,b
 16378  0024D0  0100               	movlb	0	; () banked
 16379  0024D2  117D               	iorwf	(??___flmul+1)& (0+255),w,b
 16380  0024D4  0100               	movlb	0	; () banked
 16381  0024D6  117E               	iorwf	(??___flmul+2)& (0+255),w,b
 16382  0024D8  0100               	movlb	0	; () banked
 16383  0024DA  117F               	iorwf	(??___flmul+3)& (0+255),w,b
 16384  0024DC  B4D8               	btfsc	status,2,c
 16385  0024DE  D001               	goto	u11891
 16386  0024E0  D001               	goto	u11890
 16387  0024E2                     u11891:
 16388  0024E2  D004               	goto	l2714
 16389  0024E4                     u11890:
 16390                           
 16391                           ; BSR set to: 0
 16392  0024E4  0E01               	movlw	1
 16393  0024E6  0100               	movlb	0	; () banked
 16394  0024E8  6F81               	movwf	___flmul@aexp& (0+255),b
 16395  0024EA  D00A               	goto	l2713
 16396  0024EC                     l2714:
 16397                           
 16398                           ; BSR set to: 0
 16399  0024EC  0100               	movlb	0	; () banked
 16400  0024EE  A187               	btfss	___flmul@prod& (0+255),0,b
 16401  0024F0  D001               	goto	u11901
 16402  0024F2  D001               	goto	u11900
 16403  0024F4                     u11901:
 16404  0024F4  D005               	goto	l2713
 16405  0024F6                     u11900:
 16406                           
 16407                           ; BSR set to: 0
 16408  0024F6  0E01               	movlw	1
 16409  0024F8  0100               	movlb	0	; () banked
 16410  0024FA  6F81               	movwf	___flmul@aexp& (0+255),b
 16411  0024FC  D001               	goto	l2713
 16412                           
 16413                           ; BSR set to: 0
 16414  0024FE  D000               	goto	l2713
 16415  002500                     l2713:
 16416                           
 16417                           ; BSR set to: 0
 16418  002500  0100               	movlb	0	; () banked
 16419  002502  5181               	movf	___flmul@aexp& (0+255),w,b
 16420  002504  0100               	movlb	0	; () banked
 16421  002506  B4D8               	btfsc	status,2,c
 16422  002508  D001               	goto	u11911
 16423  00250A  D001               	goto	u11910
 16424  00250C                     u11911:
 16425  00250C  D027               	goto	l12703
 16426  00250E                     u11910:
 16427                           
 16428                           ; BSR set to: 0
 16429  00250E  0E01               	movlw	1
 16430  002510  0100               	movlb	0	; () banked
 16431  002512  2787               	addwf	___flmul@prod& (0+255),f,b
 16432  002514  0E00               	movlw	0
 16433  002516  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16434  002518  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16435  00251A  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16436                           
 16437                           ; BSR set to: 0
 16438  00251C  0100               	movlb	0	; () banked
 16439  00251E  A18A               	btfss	(___flmul@prod+3)& (0+255),0,b
 16440  002520  D001               	goto	u11921
 16441  002522  D001               	goto	u11920
 16442  002524                     u11921:
 16443  002524  D01B               	goto	l12703
 16444  002526                     u11920:
 16445                           
 16446                           ; BSR set to: 0
 16447  002526  C087  F07C         	movff	___flmul@prod,??___flmul
 16448  00252A  C088  F07D         	movff	___flmul@prod+1,??___flmul+1
 16449  00252E  C089  F07E         	movff	___flmul@prod+2,??___flmul+2
 16450  002532  C08A  F07F         	movff	___flmul@prod+3,??___flmul+3
 16451  002536  0100               	movlb	0	; () banked
 16452  002538  357F               	rlcf	(??___flmul+3)& (0+255),w,b
 16453  00253A  337F               	rrcf	(??___flmul+3)& (0+255),f,b
 16454  00253C  337E               	rrcf	(??___flmul+2)& (0+255),f,b
 16455  00253E  337D               	rrcf	(??___flmul+1)& (0+255),f,b
 16456  002540  337C               	rrcf	??___flmul& (0+255),f,b
 16457  002542  C07C  F087         	movff	??___flmul,___flmul@prod
 16458  002546  C07D  F088         	movff	??___flmul+1,___flmul@prod+1
 16459  00254A  C07E  F089         	movff	??___flmul+2,___flmul@prod+2
 16460  00254E  C07F  F08A         	movff	??___flmul+3,___flmul@prod+3
 16461                           
 16462                           ; BSR set to: 0
 16463  002552  0100               	movlb	0	; () banked
 16464  002554  4B8B               	infsnz	___flmul@temp& (0+255),f,b
 16465  002556  2B8C               	incf	(___flmul@temp+1)& (0+255),f,b
 16466  002558  D001               	goto	l12703
 16467                           
 16468                           ; BSR set to: 0
 16469  00255A  D000               	goto	l12703
 16470  00255C                     l12703:
 16471                           
 16472                           ; BSR set to: 0
 16473  00255C  0100               	movlb	0	; () banked
 16474  00255E  BF8C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 16475  002560  D008               	goto	u11931
 16476  002562  0100               	movlb	0	; () banked
 16477  002564  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16478  002566  E106               	bnz	u11930
 16479  002568  0100               	movlb	0	; () banked
 16480  00256A  298B               	incf	___flmul@temp& (0+255),w,b
 16481  00256C  A0D8               	btfss	status,0,c
 16482  00256E  D001               	goto	u11931
 16483  002570  D001               	goto	u11930
 16484  002572                     u11931:
 16485  002572  D00A               	goto	l12707
 16486  002574                     u11930:
 16487                           
 16488                           ; BSR set to: 0
 16489  002574  0E00               	movlw	0
 16490  002576  0100               	movlb	0	; () banked
 16491  002578  6F87               	movwf	___flmul@prod& (0+255),b
 16492  00257A  0E00               	movlw	0
 16493  00257C  6F88               	movwf	(___flmul@prod+1)& (0+255),b
 16494  00257E  0E80               	movlw	128
 16495  002580  6F89               	movwf	(___flmul@prod+2)& (0+255),b
 16496  002582  0E7F               	movlw	127
 16497  002584  6F8A               	movwf	(___flmul@prod+3)& (0+255),b
 16498  002586  D033               	goto	l12719
 16499  002588                     l12707:
 16500                           
 16501                           ; BSR set to: 0
 16502  002588  0100               	movlb	0	; () banked
 16503  00258A  BF8C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 16504  00258C  D009               	goto	u11940
 16505  00258E  0100               	movlb	0	; () banked
 16506  002590  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16507  002592  E105               	bnz	u11941
 16508  002594  0100               	movlb	0	; () banked
 16509  002596  058B               	decf	___flmul@temp& (0+255),w,b
 16510  002598  B0D8               	btfsc	status,0,c
 16511  00259A  D001               	goto	u11941
 16512  00259C  D001               	goto	u11940
 16513  00259E                     u11941:
 16514  00259E  D00D               	goto	l2721
 16515  0025A0                     u11940:
 16516                           
 16517                           ; BSR set to: 0
 16518  0025A0  0E00               	movlw	0
 16519  0025A2  0100               	movlb	0	; () banked
 16520  0025A4  6F87               	movwf	___flmul@prod& (0+255),b
 16521  0025A6  0E00               	movlw	0
 16522  0025A8  6F88               	movwf	(___flmul@prod+1)& (0+255),b
 16523  0025AA  0E00               	movlw	0
 16524  0025AC  6F89               	movwf	(___flmul@prod+2)& (0+255),b
 16525  0025AE  0E00               	movlw	0
 16526  0025B0  6F8A               	movwf	(___flmul@prod+3)& (0+255),b
 16527  0025B2  0E00               	movlw	0
 16528  0025B4  0100               	movlb	0	; () banked
 16529  0025B6  6F80               	movwf	___flmul@sign& (0+255),b
 16530  0025B8  D01A               	goto	l12719
 16531  0025BA                     l2721:
 16532                           
 16533                           ; BSR set to: 0
 16534  0025BA  C08B  F086         	movff	___flmul@temp,___flmul@bexp
 16535                           
 16536                           ; BSR set to: 0
 16537  0025BE  0EFF               	movlw	255
 16538  0025C0  0100               	movlb	0	; () banked
 16539  0025C2  1787               	andwf	___flmul@prod& (0+255),f,b
 16540  0025C4  0EFF               	movlw	255
 16541  0025C6  1788               	andwf	(___flmul@prod+1)& (0+255),f,b
 16542  0025C8  0E7F               	movlw	127
 16543  0025CA  1789               	andwf	(___flmul@prod+2)& (0+255),f,b
 16544  0025CC  0E00               	movlw	0
 16545  0025CE  178A               	andwf	(___flmul@prod+3)& (0+255),f,b
 16546                           
 16547                           ; BSR set to: 0
 16548  0025D0  0100               	movlb	0	; () banked
 16549  0025D2  A186               	btfss	___flmul@bexp& (0+255),0,b
 16550  0025D4  D001               	goto	u11951
 16551  0025D6  D001               	goto	u11950
 16552  0025D8                     u11951:
 16553  0025D8  D003               	goto	l12717
 16554  0025DA                     u11950:
 16555                           
 16556                           ; BSR set to: 0
 16557  0025DA  0100               	movlb	0	; () banked
 16558  0025DC  8F89               	bsf	(___flmul@prod+2)& (0+255),7,b
 16559  0025DE  D000               	goto	l12717
 16560  0025E0                     l12717:
 16561                           
 16562                           ; BSR set to: 0
 16563  0025E0  0100               	movlb	0	; () banked
 16564  0025E2  90D8               	bcf	status,0,c
 16565  0025E4  3186               	rrcf	___flmul@bexp& (0+255),w,b
 16566  0025E6  0100               	movlb	0	; () banked
 16567  0025E8  6F8A               	movwf	(___flmul@prod+3)& (0+255),b
 16568  0025EA  D001               	goto	l12719
 16569                           
 16570                           ; BSR set to: 0
 16571  0025EC  D000               	goto	l12719
 16572  0025EE                     l12719:
 16573                           
 16574                           ; BSR set to: 0
 16575  0025EE  0100               	movlb	0	; () banked
 16576  0025F0  5180               	movf	___flmul@sign& (0+255),w,b
 16577  0025F2  0100               	movlb	0	; () banked
 16578  0025F4  138A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 16579                           
 16580                           ; BSR set to: 0
 16581  0025F6  C087  F074         	movff	___flmul@prod,?___flmul
 16582  0025FA  C088  F075         	movff	___flmul@prod+1,?___flmul+1
 16583  0025FE  C089  F076         	movff	___flmul@prod+2,?___flmul+2
 16584  002602  C08A  F077         	movff	___flmul@prod+3,?___flmul+3
 16585  002606  D000               	goto	l2708
 16586  002608                     l2708:
 16587                           
 16588                           ; BSR set to: 0
 16589  002608  0012               	return		;funcret
 16590  00260A                     __end_of___flmul:
 16591                           	opt stack 0
 16592                           tblptru	equ	0xFF8
 16593                           tblptrh	equ	0xFF7
 16594                           tblptrl	equ	0xFF6
 16595                           tablat	equ	0xFF5
 16596                           prodh	equ	0xFF4
 16597                           prodl	equ	0xFF3
 16598                           intcon	equ	0xFF2
 16599                           intcon3	equ	0xFF0
 16600                           postinc0	equ	0xFEE
 16601                           wreg	equ	0xFE8
 16602                           indf1	equ	0xFE7
 16603                           postdec1	equ	0xFE5
 16604                           fsr1h	equ	0xFE2
 16605                           fsr1l	equ	0xFE1
 16606                           indf2	equ	0xFDF
 16607                           fsr2h	equ	0xFDA
 16608                           fsr2l	equ	0xFD9
 16609                           status	equ	0xFD8
 16610                           
 16611 ;; *************** function ___fldiv *****************
 16612 ;; Defined at:
 16613 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\sprcdiv.c"
 16614 ;; Parameters:    Size  Location     Type
 16615 ;;  b               4   45[BANK0 ] unsigned char 
 16616 ;;  a               4   49[BANK0 ] unsigned char 
 16617 ;; Auto vars:     Size  Location     Type
 16618 ;;  grs             4   64[BANK0 ] unsigned long 
 16619 ;;  rem             4   58[BANK0 ] unsigned long 
 16620 ;;  new_exp         2   62[BANK0 ] int 
 16621 ;;  aexp            1   69[BANK0 ] unsigned char 
 16622 ;;  bexp            1   68[BANK0 ] unsigned char 
 16623 ;;  sign            1   57[BANK0 ] unsigned char 
 16624 ;; Return value:  Size  Location     Type
 16625 ;;                  4   45[BANK0 ] unsigned char 
 16626 ;; Registers used:
 16627 ;;		wreg, status,2, status,0
 16628 ;; Tracked objects:
 16629 ;;		On entry : 0/0
 16630 ;;		On exit  : 0/0
 16631 ;;		Unchanged: 0/0
 16632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16633 ;;      Params:         0       8       0       0       0       0       0       0       0
 16634 ;;      Locals:         0      13       0       0       0       0       0       0       0
 16635 ;;      Temps:          0       4       0       0       0       0       0       0       0
 16636 ;;      Totals:         0      25       0       0       0       0       0       0       0
 16637 ;;Total ram usage:       25 bytes
 16638 ;; Hardware stack levels used:    1
 16639 ;; Hardware stack levels required when called:   11
 16640 ;; This function calls:
 16641 ;;		Nothing
 16642 ;; This function is called by:
 16643 ;;		_ADC_TempConversion
 16644 ;; This function uses a non-reentrant model
 16645 ;;
 16646                           
 16647                           	psect	text49
 16648  00260A                     __ptext49:
 16649                           	opt stack 0
 16650  00260A                     ___fldiv:
 16651                           	opt stack 16
 16652                           
 16653                           ; BSR set to: 0
 16654                           ;incstack = 0
 16655  00260A  0100               	movlb	0	; () banked
 16656  00260C  5190               	movf	(___fldiv@b+3)& (0+255),w,b
 16657  00260E  0B80               	andlw	128
 16658  002610  0100               	movlb	0	; () banked
 16659  002612  6F99               	movwf	___fldiv@sign& (0+255),b
 16660  002614  0100               	movlb	0	; () banked
 16661  002616  5190               	movf	(___fldiv@b+3)& (0+255),w,b
 16662  002618  2590               	addwf	(___fldiv@b+3)& (0+255),w,b
 16663  00261A  0100               	movlb	0	; () banked
 16664  00261C  6FA4               	movwf	___fldiv@bexp& (0+255),b
 16665                           
 16666                           ; BSR set to: 0
 16667  00261E  0100               	movlb	0	; () banked
 16668  002620  AF8F               	btfss	(___fldiv@b+2)& (0+255),7,b
 16669  002622  D001               	goto	u11541
 16670  002624  D001               	goto	u11540
 16671  002626                     u11541:
 16672  002626  D003               	goto	l12465
 16673  002628                     u11540:
 16674                           
 16675                           ; BSR set to: 0
 16676  002628  0100               	movlb	0	; () banked
 16677  00262A  81A4               	bsf	___fldiv@bexp& (0+255),0,b
 16678  00262C  D000               	goto	l12465
 16679  00262E                     l12465:
 16680                           
 16681                           ; BSR set to: 0
 16682  00262E  0100               	movlb	0	; () banked
 16683  002630  51A4               	movf	___fldiv@bexp& (0+255),w,b
 16684  002632  0100               	movlb	0	; () banked
 16685  002634  B4D8               	btfsc	status,2,c
 16686  002636  D001               	goto	u11551
 16687  002638  D001               	goto	u11550
 16688  00263A                     u11551:
 16689  00263A  D016               	goto	l12475
 16690  00263C                     u11550:
 16691                           
 16692                           ; BSR set to: 0
 16693  00263C  0100               	movlb	0	; () banked
 16694  00263E  29A4               	incf	___fldiv@bexp& (0+255),w,b
 16695  002640  A4D8               	btfss	status,2,c
 16696  002642  D001               	goto	u11561
 16697  002644  D001               	goto	u11560
 16698  002646                     u11561:
 16699  002646  D00A               	goto	l12471
 16700  002648                     u11560:
 16701                           
 16702                           ; BSR set to: 0
 16703  002648  0E00               	movlw	0
 16704  00264A  0100               	movlb	0	; () banked
 16705  00264C  6F8D               	movwf	___fldiv@b& (0+255),b
 16706  00264E  0E00               	movlw	0
 16707  002650  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 16708  002652  0E00               	movlw	0
 16709  002654  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 16710  002656  0E00               	movlw	0
 16711  002658  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 16712  00265A  D000               	goto	l12471
 16713  00265C                     l12471:
 16714                           
 16715                           ; BSR set to: 0
 16716  00265C  0100               	movlb	0	; () banked
 16717  00265E  8F8F               	bsf	(___fldiv@b+2)& (0+255),7,b
 16718                           
 16719                           ; BSR set to: 0
 16720  002660  0E00               	movlw	0
 16721  002662  0100               	movlb	0	; () banked
 16722  002664  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 16723  002666  D00A               	goto	l12477
 16724  002668                     l12475:
 16725                           
 16726                           ; BSR set to: 0
 16727  002668  0E00               	movlw	0
 16728  00266A  0100               	movlb	0	; () banked
 16729  00266C  6F8D               	movwf	___fldiv@b& (0+255),b
 16730  00266E  0E00               	movlw	0
 16731  002670  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 16732  002672  0E00               	movlw	0
 16733  002674  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 16734  002676  0E00               	movlw	0
 16735  002678  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 16736  00267A  D000               	goto	l12477
 16737  00267C                     l12477:
 16738                           
 16739                           ; BSR set to: 0
 16740  00267C  0100               	movlb	0	; () banked
 16741  00267E  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 16742  002680  0B80               	andlw	128
 16743  002682  0100               	movlb	0	; () banked
 16744  002684  1B99               	xorwf	___fldiv@sign& (0+255),f,b
 16745                           
 16746                           ; BSR set to: 0
 16747  002686  0100               	movlb	0	; () banked
 16748  002688  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 16749  00268A  2594               	addwf	(___fldiv@a+3)& (0+255),w,b
 16750  00268C  0100               	movlb	0	; () banked
 16751  00268E  6FA5               	movwf	___fldiv@aexp& (0+255),b
 16752                           
 16753                           ; BSR set to: 0
 16754  002690  0100               	movlb	0	; () banked
 16755  002692  AF93               	btfss	(___fldiv@a+2)& (0+255),7,b
 16756  002694  D001               	goto	u11571
 16757  002696  D001               	goto	u11570
 16758  002698                     u11571:
 16759  002698  D003               	goto	l12485
 16760  00269A                     u11570:
 16761                           
 16762                           ; BSR set to: 0
 16763  00269A  0100               	movlb	0	; () banked
 16764  00269C  81A5               	bsf	___fldiv@aexp& (0+255),0,b
 16765  00269E  D000               	goto	l12485
 16766  0026A0                     l12485:
 16767                           
 16768                           ; BSR set to: 0
 16769  0026A0  0100               	movlb	0	; () banked
 16770  0026A2  51A5               	movf	___fldiv@aexp& (0+255),w,b
 16771  0026A4  0100               	movlb	0	; () banked
 16772  0026A6  B4D8               	btfsc	status,2,c
 16773  0026A8  D001               	goto	u11581
 16774  0026AA  D001               	goto	u11580
 16775  0026AC                     u11581:
 16776  0026AC  D016               	goto	l12495
 16777  0026AE                     u11580:
 16778                           
 16779                           ; BSR set to: 0
 16780  0026AE  0100               	movlb	0	; () banked
 16781  0026B0  29A5               	incf	___fldiv@aexp& (0+255),w,b
 16782  0026B2  A4D8               	btfss	status,2,c
 16783  0026B4  D001               	goto	u11591
 16784  0026B6  D001               	goto	u11590
 16785  0026B8                     u11591:
 16786  0026B8  D00A               	goto	l12491
 16787  0026BA                     u11590:
 16788                           
 16789                           ; BSR set to: 0
 16790  0026BA  0E00               	movlw	0
 16791  0026BC  0100               	movlb	0	; () banked
 16792  0026BE  6F91               	movwf	___fldiv@a& (0+255),b
 16793  0026C0  0E00               	movlw	0
 16794  0026C2  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 16795  0026C4  0E00               	movlw	0
 16796  0026C6  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 16797  0026C8  0E00               	movlw	0
 16798  0026CA  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 16799  0026CC  D000               	goto	l12491
 16800  0026CE                     l12491:
 16801                           
 16802                           ; BSR set to: 0
 16803  0026CE  0100               	movlb	0	; () banked
 16804  0026D0  8F93               	bsf	(___fldiv@a+2)& (0+255),7,b
 16805                           
 16806                           ; BSR set to: 0
 16807  0026D2  0E00               	movlw	0
 16808  0026D4  0100               	movlb	0	; () banked
 16809  0026D6  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 16810  0026D8  D00A               	goto	l12497
 16811  0026DA                     l12495:
 16812                           
 16813                           ; BSR set to: 0
 16814  0026DA  0E00               	movlw	0
 16815  0026DC  0100               	movlb	0	; () banked
 16816  0026DE  6F91               	movwf	___fldiv@a& (0+255),b
 16817  0026E0  0E00               	movlw	0
 16818  0026E2  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 16819  0026E4  0E00               	movlw	0
 16820  0026E6  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 16821  0026E8  0E00               	movlw	0
 16822  0026EA  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 16823  0026EC  D000               	goto	l12497
 16824  0026EE                     l12497:
 16825                           
 16826                           ; BSR set to: 0
 16827  0026EE  0100               	movlb	0	; () banked
 16828  0026F0  5191               	movf	___fldiv@a& (0+255),w,b
 16829  0026F2  0100               	movlb	0	; () banked
 16830  0026F4  1192               	iorwf	(___fldiv@a+1)& (0+255),w,b
 16831  0026F6  0100               	movlb	0	; () banked
 16832  0026F8  1193               	iorwf	(___fldiv@a+2)& (0+255),w,b
 16833  0026FA  0100               	movlb	0	; () banked
 16834  0026FC  1194               	iorwf	(___fldiv@a+3)& (0+255),w,b
 16835  0026FE  A4D8               	btfss	status,2,c
 16836  002700  D001               	goto	u11601
 16837  002702  D001               	goto	u11600
 16838  002704                     u11601:
 16839  002704  D018               	goto	l12507
 16840  002706                     u11600:
 16841                           
 16842                           ; BSR set to: 0
 16843  002706  0E00               	movlw	0
 16844  002708  0100               	movlb	0	; () banked
 16845  00270A  6F8D               	movwf	___fldiv@b& (0+255),b
 16846  00270C  0E00               	movlw	0
 16847  00270E  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 16848  002710  0E00               	movlw	0
 16849  002712  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 16850  002714  0E00               	movlw	0
 16851  002716  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 16852                           
 16853                           ; BSR set to: 0
 16854  002718  0100               	movlb	0	; () banked
 16855  00271A  0E80               	movlw	128
 16856  00271C  138F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 16857  00271E  0E7F               	movlw	127
 16858  002720  1390               	iorwf	(___fldiv@b+3)& (0+255),f,b
 16859                           
 16860                           ; BSR set to: 0
 16861  002722  C08D  F08D         	movff	___fldiv@b,?___fldiv
 16862  002726  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 16863  00272A  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 16864  00272E  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 16865  002732  D194               	goto	l2672
 16866                           
 16867                           ; BSR set to: 0
 16868  002734  D193               	goto	l2672
 16869  002736                     l12507:
 16870                           
 16871                           ; BSR set to: 0
 16872  002736  0100               	movlb	0	; () banked
 16873  002738  51A4               	movf	___fldiv@bexp& (0+255),w,b
 16874  00273A  0100               	movlb	0	; () banked
 16875  00273C  A4D8               	btfss	status,2,c
 16876  00273E  D001               	goto	u11611
 16877  002740  D001               	goto	u11610
 16878  002742                     u11611:
 16879  002742  D013               	goto	l12515
 16880  002744                     u11610:
 16881                           
 16882                           ; BSR set to: 0
 16883  002744  0E00               	movlw	0
 16884  002746  0100               	movlb	0	; () banked
 16885  002748  6F8D               	movwf	___fldiv@b& (0+255),b
 16886  00274A  0E00               	movlw	0
 16887  00274C  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 16888  00274E  0E00               	movlw	0
 16889  002750  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 16890  002752  0E00               	movlw	0
 16891  002754  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 16892                           
 16893                           ; BSR set to: 0
 16894  002756  C08D  F08D         	movff	___fldiv@b,?___fldiv
 16895  00275A  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 16896  00275E  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 16897  002762  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 16898  002766  D17A               	goto	l2672
 16899                           
 16900                           ; BSR set to: 0
 16901  002768  D179               	goto	l2672
 16902  00276A                     l12515:
 16903                           
 16904                           ; BSR set to: 0
 16905  00276A  0100               	movlb	0	; () banked
 16906  00276C  51A5               	movf	___fldiv@aexp& (0+255),w,b
 16907  00276E  0100               	movlb	0	; () banked
 16908  002770  6F95               	movwf	??___fldiv& (0+255),b
 16909  002772  6B96               	clrf	(??___fldiv+1)& (0+255),b
 16910  002774  0100               	movlb	0	; () banked
 16911  002776  1F95               	comf	??___fldiv& (0+255),f,b
 16912  002778  1F96               	comf	(??___fldiv+1)& (0+255),f,b
 16913  00277A  4B95               	infsnz	??___fldiv& (0+255),f,b
 16914  00277C  2B96               	incf	(??___fldiv+1)& (0+255),f,b
 16915  00277E  0100               	movlb	0	; () banked
 16916  002780  51A4               	movf	___fldiv@bexp& (0+255),w,b
 16917  002782  0100               	movlb	0	; () banked
 16918  002784  6F97               	movwf	(??___fldiv+2)& (0+255),b
 16919  002786  6B98               	clrf	(??___fldiv+3)& (0+255),b
 16920  002788  0100               	movlb	0	; () banked
 16921  00278A  5195               	movf	??___fldiv& (0+255),w,b
 16922  00278C  0100               	movlb	0	; () banked
 16923  00278E  2797               	addwf	(??___fldiv+2)& (0+255),f,b
 16924  002790  0100               	movlb	0	; () banked
 16925  002792  5196               	movf	(??___fldiv+1)& (0+255),w,b
 16926  002794  0100               	movlb	0	; () banked
 16927  002796  2398               	addwfc	(??___fldiv+3)& (0+255),f,b
 16928  002798  0E7F               	movlw	127
 16929  00279A  0100               	movlb	0	; () banked
 16930  00279C  2597               	addwf	(??___fldiv+2)& (0+255),w,b
 16931  00279E  0100               	movlb	0	; () banked
 16932  0027A0  6F9E               	movwf	___fldiv@new_exp& (0+255),b
 16933  0027A2  0E00               	movlw	0
 16934  0027A4  0100               	movlb	0	; () banked
 16935  0027A6  2198               	addwfc	(??___fldiv+3)& (0+255),w,b
 16936  0027A8  0100               	movlb	0	; () banked
 16937  0027AA  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 16938                           
 16939                           ; BSR set to: 0
 16940  0027AC  C08D  F09A         	movff	___fldiv@b,___fldiv@rem
 16941  0027B0  C08E  F09B         	movff	___fldiv@b+1,___fldiv@rem+1
 16942  0027B4  C08F  F09C         	movff	___fldiv@b+2,___fldiv@rem+2
 16943  0027B8  C090  F09D         	movff	___fldiv@b+3,___fldiv@rem+3
 16944                           
 16945                           ; BSR set to: 0
 16946  0027BC  0E00               	movlw	0
 16947  0027BE  0100               	movlb	0	; () banked
 16948  0027C0  6F8D               	movwf	___fldiv@b& (0+255),b
 16949  0027C2  0E00               	movlw	0
 16950  0027C4  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 16951  0027C6  0E00               	movlw	0
 16952  0027C8  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 16953  0027CA  0E00               	movlw	0
 16954  0027CC  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 16955                           
 16956                           ; BSR set to: 0
 16957  0027CE  0E00               	movlw	0
 16958  0027D0  0100               	movlb	0	; () banked
 16959  0027D2  6FA0               	movwf	___fldiv@grs& (0+255),b
 16960  0027D4  0E00               	movlw	0
 16961  0027D6  6FA1               	movwf	(___fldiv@grs+1)& (0+255),b
 16962  0027D8  0E00               	movlw	0
 16963  0027DA  6FA2               	movwf	(___fldiv@grs+2)& (0+255),b
 16964  0027DC  0E00               	movlw	0
 16965  0027DE  6FA3               	movwf	(___fldiv@grs+3)& (0+255),b
 16966                           
 16967                           ; BSR set to: 0
 16968  0027E0  0E00               	movlw	0
 16969  0027E2  0100               	movlb	0	; () banked
 16970  0027E4  6FA5               	movwf	___fldiv@aexp& (0+255),b
 16971  0027E6  D04A               	goto	l2674
 16972  0027E8                     l12525:
 16973                           
 16974                           ; BSR set to: 0
 16975  0027E8  0100               	movlb	0	; () banked
 16976  0027EA  51A5               	movf	___fldiv@aexp& (0+255),w,b
 16977  0027EC  0100               	movlb	0	; () banked
 16978  0027EE  B4D8               	btfsc	status,2,c
 16979  0027F0  D001               	goto	u11621
 16980  0027F2  D001               	goto	u11620
 16981  0027F4                     u11621:
 16982  0027F4  D01A               	goto	l12533
 16983  0027F6                     u11620:
 16984                           
 16985                           ; BSR set to: 0
 16986  0027F6  0100               	movlb	0	; () banked
 16987  0027F8  90D8               	bcf	status,0,c
 16988  0027FA  379A               	rlcf	___fldiv@rem& (0+255),f,b
 16989  0027FC  379B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 16990  0027FE  379C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 16991  002800  379D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 16992  002802  0100               	movlb	0	; () banked
 16993  002804  90D8               	bcf	status,0,c
 16994  002806  378D               	rlcf	___fldiv@b& (0+255),f,b
 16995  002808  378E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 16996  00280A  378F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 16997  00280C  3790               	rlcf	(___fldiv@b+3)& (0+255),f,b
 16998                           
 16999                           ; BSR set to: 0
 17000  00280E  0100               	movlb	0	; () banked
 17001  002810  AFA3               	btfss	(___fldiv@grs+3)& (0+255),7,b
 17002  002812  D001               	goto	u11631
 17003  002814  D001               	goto	u11630
 17004  002816                     u11631:
 17005  002816  D002               	goto	l2677
 17006  002818                     u11630:
 17007                           
 17008                           ; BSR set to: 0
 17009  002818  0100               	movlb	0	; () banked
 17010  00281A  818D               	bsf	___fldiv@b& (0+255),0,b
 17011  00281C                     l2677:
 17012                           
 17013                           ; BSR set to: 0
 17014  00281C  0100               	movlb	0	; () banked
 17015  00281E  90D8               	bcf	status,0,c
 17016  002820  37A0               	rlcf	___fldiv@grs& (0+255),f,b
 17017  002822  37A1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 17018  002824  37A2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 17019  002826  37A3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 17020  002828  D000               	goto	l12533
 17021  00282A                     l12533:
 17022                           
 17023                           ; BSR set to: 0
 17024  00282A  0100               	movlb	0	; () banked
 17025  00282C  5191               	movf	___fldiv@a& (0+255),w,b
 17026  00282E  0100               	movlb	0	; () banked
 17027  002830  5D9A               	subwf	___fldiv@rem& (0+255),w,b
 17028  002832  0100               	movlb	0	; () banked
 17029  002834  5192               	movf	(___fldiv@a+1)& (0+255),w,b
 17030  002836  0100               	movlb	0	; () banked
 17031  002838  599B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 17032  00283A  0100               	movlb	0	; () banked
 17033  00283C  5193               	movf	(___fldiv@a+2)& (0+255),w,b
 17034  00283E  0100               	movlb	0	; () banked
 17035  002840  599C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 17036  002842  0100               	movlb	0	; () banked
 17037  002844  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 17038  002846  0100               	movlb	0	; () banked
 17039  002848  599D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 17040  00284A  A0D8               	btfss	status,0,c
 17041  00284C  D001               	goto	u11641
 17042  00284E  D001               	goto	u11640
 17043  002850                     u11641:
 17044  002850  D013               	goto	l12539
 17045  002852                     u11640:
 17046                           
 17047                           ; BSR set to: 0
 17048  002852  0100               	movlb	0	; () banked
 17049  002854  8DA3               	bsf	(___fldiv@grs+3)& (0+255),6,b
 17050                           
 17051                           ; BSR set to: 0
 17052  002856  0100               	movlb	0	; () banked
 17053  002858  5191               	movf	___fldiv@a& (0+255),w,b
 17054  00285A  0100               	movlb	0	; () banked
 17055  00285C  5F9A               	subwf	___fldiv@rem& (0+255),f,b
 17056  00285E  0100               	movlb	0	; () banked
 17057  002860  5192               	movf	(___fldiv@a+1)& (0+255),w,b
 17058  002862  0100               	movlb	0	; () banked
 17059  002864  5B9B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 17060  002866  0100               	movlb	0	; () banked
 17061  002868  5193               	movf	(___fldiv@a+2)& (0+255),w,b
 17062  00286A  0100               	movlb	0	; () banked
 17063  00286C  5B9C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 17064  00286E  0100               	movlb	0	; () banked
 17065  002870  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 17066  002872  0100               	movlb	0	; () banked
 17067  002874  5B9D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 17068  002876  D000               	goto	l12539
 17069  002878                     l12539:
 17070                           
 17071                           ; BSR set to: 0
 17072  002878  0100               	movlb	0	; () banked
 17073  00287A  2BA5               	incf	___fldiv@aexp& (0+255),f,b
 17074  00287C                     l2674:
 17075                           
 17076                           ; BSR set to: 0
 17077  00287C  0E19               	movlw	25
 17078  00287E  0100               	movlb	0	; () banked
 17079  002880  65A5               	cpfsgt	___fldiv@aexp& (0+255),b
 17080  002882  D001               	goto	u11651
 17081  002884  D001               	goto	u11650
 17082  002886                     u11651:
 17083  002886  D7B0               	goto	l12525
 17084  002888                     u11650:
 17085  002888  D000               	goto	l12541
 17086  00288A                     l12541:
 17087                           
 17088                           ; BSR set to: 0
 17089  00288A  0100               	movlb	0	; () banked
 17090  00288C  519A               	movf	___fldiv@rem& (0+255),w,b
 17091  00288E  0100               	movlb	0	; () banked
 17092  002890  119B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 17093  002892  0100               	movlb	0	; () banked
 17094  002894  119C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 17095  002896  0100               	movlb	0	; () banked
 17096  002898  119D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 17097  00289A  B4D8               	btfsc	status,2,c
 17098  00289C  D001               	goto	u11661
 17099  00289E  D001               	goto	u11660
 17100  0028A0                     u11661:
 17101  0028A0  D01C               	goto	l12551
 17102  0028A2                     u11660:
 17103                           
 17104                           ; BSR set to: 0
 17105  0028A2  0100               	movlb	0	; () banked
 17106  0028A4  81A0               	bsf	___fldiv@grs& (0+255),0,b
 17107  0028A6  D019               	goto	l12551
 17108                           
 17109                           ; BSR set to: 0
 17110  0028A8  D018               	goto	l12551
 17111  0028AA                     l12545:
 17112                           
 17113                           ; BSR set to: 0
 17114  0028AA  0100               	movlb	0	; () banked
 17115  0028AC  90D8               	bcf	status,0,c
 17116  0028AE  378D               	rlcf	___fldiv@b& (0+255),f,b
 17117  0028B0  378E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 17118  0028B2  378F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 17119  0028B4  3790               	rlcf	(___fldiv@b+3)& (0+255),f,b
 17120                           
 17121                           ; BSR set to: 0
 17122  0028B6  0100               	movlb	0	; () banked
 17123  0028B8  AFA3               	btfss	(___fldiv@grs+3)& (0+255),7,b
 17124  0028BA  D001               	goto	u11671
 17125  0028BC  D001               	goto	u11670
 17126  0028BE                     u11671:
 17127  0028BE  D002               	goto	l2683
 17128  0028C0                     u11670:
 17129                           
 17130                           ; BSR set to: 0
 17131  0028C0  0100               	movlb	0	; () banked
 17132  0028C2  818D               	bsf	___fldiv@b& (0+255),0,b
 17133  0028C4                     l2683:
 17134                           
 17135                           ; BSR set to: 0
 17136  0028C4  0100               	movlb	0	; () banked
 17137  0028C6  90D8               	bcf	status,0,c
 17138  0028C8  37A0               	rlcf	___fldiv@grs& (0+255),f,b
 17139  0028CA  37A1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 17140  0028CC  37A2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 17141  0028CE  37A3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 17142  0028D0  0100               	movlb	0	; () banked
 17143  0028D2  079E               	decf	___fldiv@new_exp& (0+255),f,b
 17144  0028D4  A0D8               	btfss	status,0,c
 17145  0028D6  079F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 17146  0028D8  D000               	goto	l12551
 17147  0028DA                     l12551:
 17148                           
 17149                           ; BSR set to: 0
 17150  0028DA  0100               	movlb	0	; () banked
 17151  0028DC  AF8F               	btfss	(___fldiv@b+2)& (0+255),7,b
 17152  0028DE  D001               	goto	u11681
 17153  0028E0  D001               	goto	u11680
 17154  0028E2                     u11681:
 17155  0028E2  D7E3               	goto	l12545
 17156  0028E4                     u11680:
 17157  0028E4  D000               	goto	l12553
 17158  0028E6                     l12553:
 17159                           
 17160                           ; BSR set to: 0
 17161  0028E6  0E00               	movlw	0
 17162  0028E8  0100               	movlb	0	; () banked
 17163  0028EA  6FA5               	movwf	___fldiv@aexp& (0+255),b
 17164                           
 17165                           ; BSR set to: 0
 17166  0028EC  0100               	movlb	0	; () banked
 17167  0028EE  AFA3               	btfss	(___fldiv@grs+3)& (0+255),7,b
 17168  0028F0  D001               	goto	u11691
 17169  0028F2  D001               	goto	u11690
 17170  0028F4                     u11691:
 17171  0028F4  D02E               	goto	l2685
 17172  0028F6                     u11690:
 17173                           
 17174                           ; BSR set to: 0
 17175  0028F6  0EFF               	movlw	255
 17176  0028F8  0100               	movlb	0	; () banked
 17177  0028FA  15A0               	andwf	___fldiv@grs& (0+255),w,b
 17178  0028FC  0100               	movlb	0	; () banked
 17179  0028FE  6F95               	movwf	??___fldiv& (0+255),b
 17180  002900  0EFF               	movlw	255
 17181  002902  0100               	movlb	0	; () banked
 17182  002904  15A1               	andwf	(___fldiv@grs+1)& (0+255),w,b
 17183  002906  0100               	movlb	0	; () banked
 17184  002908  6F96               	movwf	(??___fldiv+1)& (0+255),b
 17185  00290A  0EFF               	movlw	255
 17186  00290C  0100               	movlb	0	; () banked
 17187  00290E  15A2               	andwf	(___fldiv@grs+2)& (0+255),w,b
 17188  002910  0100               	movlb	0	; () banked
 17189  002912  6F97               	movwf	(??___fldiv+2)& (0+255),b
 17190  002914  0E7F               	movlw	127
 17191  002916  0100               	movlb	0	; () banked
 17192  002918  15A3               	andwf	(___fldiv@grs+3)& (0+255),w,b
 17193  00291A  0100               	movlb	0	; () banked
 17194  00291C  6F98               	movwf	(??___fldiv+3)& (0+255),b
 17195  00291E  0100               	movlb	0	; () banked
 17196  002920  5195               	movf	??___fldiv& (0+255),w,b
 17197  002922  0100               	movlb	0	; () banked
 17198  002924  1196               	iorwf	(??___fldiv+1)& (0+255),w,b
 17199  002926  0100               	movlb	0	; () banked
 17200  002928  1197               	iorwf	(??___fldiv+2)& (0+255),w,b
 17201  00292A  0100               	movlb	0	; () banked
 17202  00292C  1198               	iorwf	(??___fldiv+3)& (0+255),w,b
 17203  00292E  B4D8               	btfsc	status,2,c
 17204  002930  D001               	goto	u11701
 17205  002932  D001               	goto	u11700
 17206  002934                     u11701:
 17207  002934  D004               	goto	l2686
 17208  002936                     u11700:
 17209                           
 17210                           ; BSR set to: 0
 17211  002936  0E01               	movlw	1
 17212  002938  0100               	movlb	0	; () banked
 17213  00293A  6FA5               	movwf	___fldiv@aexp& (0+255),b
 17214  00293C  D00A               	goto	l2685
 17215  00293E                     l2686:
 17216                           
 17217                           ; BSR set to: 0
 17218  00293E  0100               	movlb	0	; () banked
 17219  002940  A18D               	btfss	___fldiv@b& (0+255),0,b
 17220  002942  D001               	goto	u11711
 17221  002944  D001               	goto	u11710
 17222  002946                     u11711:
 17223  002946  D005               	goto	l2685
 17224  002948                     u11710:
 17225                           
 17226                           ; BSR set to: 0
 17227  002948  0E01               	movlw	1
 17228  00294A  0100               	movlb	0	; () banked
 17229  00294C  6FA5               	movwf	___fldiv@aexp& (0+255),b
 17230  00294E  D001               	goto	l2685
 17231                           
 17232                           ; BSR set to: 0
 17233  002950  D000               	goto	l2685
 17234  002952                     l2685:
 17235                           
 17236                           ; BSR set to: 0
 17237  002952  0100               	movlb	0	; () banked
 17238  002954  51A5               	movf	___fldiv@aexp& (0+255),w,b
 17239  002956  0100               	movlb	0	; () banked
 17240  002958  B4D8               	btfsc	status,2,c
 17241  00295A  D001               	goto	u11721
 17242  00295C  D001               	goto	u11720
 17243  00295E                     u11721:
 17244  00295E  D027               	goto	l12571
 17245  002960                     u11720:
 17246                           
 17247                           ; BSR set to: 0
 17248  002960  0E01               	movlw	1
 17249  002962  0100               	movlb	0	; () banked
 17250  002964  278D               	addwf	___fldiv@b& (0+255),f,b
 17251  002966  0E00               	movlw	0
 17252  002968  238E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 17253  00296A  238F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 17254  00296C  2390               	addwfc	(___fldiv@b+3)& (0+255),f,b
 17255                           
 17256                           ; BSR set to: 0
 17257  00296E  0100               	movlb	0	; () banked
 17258  002970  A190               	btfss	(___fldiv@b+3)& (0+255),0,b
 17259  002972  D001               	goto	u11731
 17260  002974  D001               	goto	u11730
 17261  002976                     u11731:
 17262  002976  D01B               	goto	l12571
 17263  002978                     u11730:
 17264                           
 17265                           ; BSR set to: 0
 17266  002978  C08D  F095         	movff	___fldiv@b,??___fldiv
 17267  00297C  C08E  F096         	movff	___fldiv@b+1,??___fldiv+1
 17268  002980  C08F  F097         	movff	___fldiv@b+2,??___fldiv+2
 17269  002984  C090  F098         	movff	___fldiv@b+3,??___fldiv+3
 17270  002988  0100               	movlb	0	; () banked
 17271  00298A  3598               	rlcf	(??___fldiv+3)& (0+255),w,b
 17272  00298C  3398               	rrcf	(??___fldiv+3)& (0+255),f,b
 17273  00298E  3397               	rrcf	(??___fldiv+2)& (0+255),f,b
 17274  002990  3396               	rrcf	(??___fldiv+1)& (0+255),f,b
 17275  002992  3395               	rrcf	??___fldiv& (0+255),f,b
 17276  002994  C095  F08D         	movff	??___fldiv,___fldiv@b
 17277  002998  C096  F08E         	movff	??___fldiv+1,___fldiv@b+1
 17278  00299C  C097  F08F         	movff	??___fldiv+2,___fldiv@b+2
 17279  0029A0  C098  F090         	movff	??___fldiv+3,___fldiv@b+3
 17280                           
 17281                           ; BSR set to: 0
 17282  0029A4  0100               	movlb	0	; () banked
 17283  0029A6  4B9E               	infsnz	___fldiv@new_exp& (0+255),f,b
 17284  0029A8  2B9F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 17285  0029AA  D001               	goto	l12571
 17286                           
 17287                           ; BSR set to: 0
 17288  0029AC  D000               	goto	l12571
 17289  0029AE                     l12571:
 17290                           
 17291                           ; BSR set to: 0
 17292  0029AE  0100               	movlb	0	; () banked
 17293  0029B0  BF9F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 17294  0029B2  D008               	goto	u11741
 17295  0029B4  0100               	movlb	0	; () banked
 17296  0029B6  519F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 17297  0029B8  E106               	bnz	u11740
 17298  0029BA  0100               	movlb	0	; () banked
 17299  0029BC  299E               	incf	___fldiv@new_exp& (0+255),w,b
 17300  0029BE  A0D8               	btfss	status,0,c
 17301  0029C0  D001               	goto	u11741
 17302  0029C2  D001               	goto	u11740
 17303  0029C4                     u11741:
 17304  0029C4  D00E               	goto	l12575
 17305  0029C6                     u11740:
 17306                           
 17307                           ; BSR set to: 0
 17308  0029C6  0E00               	movlw	0
 17309  0029C8  0100               	movlb	0	; () banked
 17310  0029CA  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 17311  0029CC  699E               	setf	___fldiv@new_exp& (0+255),b
 17312  0029CE  0E00               	movlw	0
 17313  0029D0  0100               	movlb	0	; () banked
 17314  0029D2  6F8D               	movwf	___fldiv@b& (0+255),b
 17315  0029D4  0E00               	movlw	0
 17316  0029D6  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 17317  0029D8  0E00               	movlw	0
 17318  0029DA  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 17319  0029DC  0E00               	movlw	0
 17320  0029DE  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 17321  0029E0  D000               	goto	l12575
 17322  0029E2                     l12575:
 17323                           
 17324                           ; BSR set to: 0
 17325  0029E2  0100               	movlb	0	; () banked
 17326  0029E4  BF9F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 17327  0029E6  D009               	goto	u11750
 17328  0029E8  0100               	movlb	0	; () banked
 17329  0029EA  519F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 17330  0029EC  E105               	bnz	u11751
 17331  0029EE  0100               	movlb	0	; () banked
 17332  0029F0  059E               	decf	___fldiv@new_exp& (0+255),w,b
 17333  0029F2  B0D8               	btfsc	status,0,c
 17334  0029F4  D001               	goto	u11751
 17335  0029F6  D001               	goto	u11750
 17336  0029F8                     u11751:
 17337  0029F8  D012               	goto	l12579
 17338  0029FA                     u11750:
 17339                           
 17340                           ; BSR set to: 0
 17341  0029FA  0E00               	movlw	0
 17342  0029FC  0100               	movlb	0	; () banked
 17343  0029FE  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 17344  002A00  0E00               	movlw	0
 17345  002A02  6F9E               	movwf	___fldiv@new_exp& (0+255),b
 17346  002A04  0E00               	movlw	0
 17347  002A06  0100               	movlb	0	; () banked
 17348  002A08  6F8D               	movwf	___fldiv@b& (0+255),b
 17349  002A0A  0E00               	movlw	0
 17350  002A0C  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 17351  002A0E  0E00               	movlw	0
 17352  002A10  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 17353  002A12  0E00               	movlw	0
 17354  002A14  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 17355  002A16  0E00               	movlw	0
 17356  002A18  0100               	movlb	0	; () banked
 17357  002A1A  6F99               	movwf	___fldiv@sign& (0+255),b
 17358  002A1C  D000               	goto	l12579
 17359  002A1E                     l12579:
 17360                           
 17361                           ; BSR set to: 0
 17362  002A1E  C09E  F0A4         	movff	___fldiv@new_exp,___fldiv@bexp
 17363                           
 17364                           ; BSR set to: 0
 17365  002A22  0100               	movlb	0	; () banked
 17366  002A24  A1A4               	btfss	___fldiv@bexp& (0+255),0,b
 17367  002A26  D001               	goto	u11761
 17368  002A28  D001               	goto	u11760
 17369  002A2A                     u11761:
 17370  002A2A  D003               	goto	l12585
 17371  002A2C                     u11760:
 17372                           
 17373                           ; BSR set to: 0
 17374  002A2C  0100               	movlb	0	; () banked
 17375  002A2E  8F8F               	bsf	(___fldiv@b+2)& (0+255),7,b
 17376  002A30  D003               	goto	l12587
 17377  002A32                     l12585:
 17378                           
 17379                           ; BSR set to: 0
 17380  002A32  0100               	movlb	0	; () banked
 17381  002A34  9F8F               	bcf	(___fldiv@b+2)& (0+255),7,b
 17382  002A36  D000               	goto	l12587
 17383  002A38                     l12587:
 17384                           
 17385                           ; BSR set to: 0
 17386  002A38  0100               	movlb	0	; () banked
 17387  002A3A  90D8               	bcf	status,0,c
 17388  002A3C  31A4               	rrcf	___fldiv@bexp& (0+255),w,b
 17389  002A3E  0100               	movlb	0	; () banked
 17390  002A40  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 17391                           
 17392                           ; BSR set to: 0
 17393  002A42  0100               	movlb	0	; () banked
 17394  002A44  5199               	movf	___fldiv@sign& (0+255),w,b
 17395  002A46  0100               	movlb	0	; () banked
 17396  002A48  1390               	iorwf	(___fldiv@b+3)& (0+255),f,b
 17397                           
 17398                           ; BSR set to: 0
 17399  002A4A  C08D  F08D         	movff	___fldiv@b,?___fldiv
 17400  002A4E  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 17401  002A52  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 17402  002A56  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 17403  002A5A  D000               	goto	l2672
 17404  002A5C                     l2672:
 17405                           
 17406                           ; BSR set to: 0
 17407  002A5C  0012               	return		;funcret
 17408  002A5E                     __end_of___fldiv:
 17409                           	opt stack 0
 17410                           tblptru	equ	0xFF8
 17411                           tblptrh	equ	0xFF7
 17412                           tblptrl	equ	0xFF6
 17413                           tablat	equ	0xFF5
 17414                           prodh	equ	0xFF4
 17415                           prodl	equ	0xFF3
 17416                           intcon	equ	0xFF2
 17417                           intcon3	equ	0xFF0
 17418                           postinc0	equ	0xFEE
 17419                           wreg	equ	0xFE8
 17420                           indf1	equ	0xFE7
 17421                           postdec1	equ	0xFE5
 17422                           fsr1h	equ	0xFE2
 17423                           fsr1l	equ	0xFE1
 17424                           indf2	equ	0xFDF
 17425                           fsr2h	equ	0xFDA
 17426                           fsr2l	equ	0xFD9
 17427                           status	equ	0xFD8
 17428                           
 17429 ;; *************** function ___fladd *****************
 17430 ;; Defined at:
 17431 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\sprcadd.c"
 17432 ;; Parameters:    Size  Location     Type
 17433 ;;  b               4    0[BANK0 ] unsigned char 
 17434 ;;  a               4    4[BANK0 ] unsigned char 
 17435 ;; Auto vars:     Size  Location     Type
 17436 ;;  grs             1   19[BANK0 ] unsigned char 
 17437 ;;  bexp            1   18[BANK0 ] unsigned char 
 17438 ;;  aexp            1   17[BANK0 ] unsigned char 
 17439 ;;  signs           1   16[BANK0 ] unsigned char 
 17440 ;; Return value:  Size  Location     Type
 17441 ;;                  4    0[BANK0 ] unsigned char 
 17442 ;; Registers used:
 17443 ;;		wreg, status,2, status,0
 17444 ;; Tracked objects:
 17445 ;;		On entry : 0/0
 17446 ;;		On exit  : 0/0
 17447 ;;		Unchanged: 0/0
 17448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17449 ;;      Params:         0       8       0       0       0       0       0       0       0
 17450 ;;      Locals:         0       4       0       0       0       0       0       0       0
 17451 ;;      Temps:          0       8       0       0       0       0       0       0       0
 17452 ;;      Totals:         0      20       0       0       0       0       0       0       0
 17453 ;;Total ram usage:       20 bytes
 17454 ;; Hardware stack levels used:    1
 17455 ;; Hardware stack levels required when called:   11
 17456 ;; This function calls:
 17457 ;;		Nothing
 17458 ;; This function is called by:
 17459 ;;		_ADC_TempConversion
 17460 ;; This function uses a non-reentrant model
 17461 ;;
 17462                           
 17463                           	psect	text50
 17464  001B5A                     __ptext50:
 17465                           	opt stack 0
 17466  001B5A                     ___fladd:
 17467                           	opt stack 16
 17468                           
 17469                           ; BSR set to: 0
 17470                           ;incstack = 0
 17471  001B5A  0100               	movlb	0	; () banked
 17472  001B5C  5163               	movf	(___fladd@b+3)& (0+255),w,b
 17473  001B5E  0B80               	andlw	128
 17474  001B60  0100               	movlb	0	; () banked
 17475  001B62  6F70               	movwf	___fladd@signs& (0+255),b
 17476  001B64  0100               	movlb	0	; () banked
 17477  001B66  5163               	movf	(___fladd@b+3)& (0+255),w,b
 17478  001B68  2563               	addwf	(___fladd@b+3)& (0+255),w,b
 17479  001B6A  0100               	movlb	0	; () banked
 17480  001B6C  6F72               	movwf	___fladd@bexp& (0+255),b
 17481                           
 17482                           ; BSR set to: 0
 17483  001B6E  0100               	movlb	0	; () banked
 17484  001B70  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
 17485  001B72  D001               	goto	u11151
 17486  001B74  D001               	goto	u11150
 17487  001B76                     u11151:
 17488  001B76  D003               	goto	l12263
 17489  001B78                     u11150:
 17490                           
 17491                           ; BSR set to: 0
 17492  001B78  0100               	movlb	0	; () banked
 17493  001B7A  8172               	bsf	___fladd@bexp& (0+255),0,b
 17494  001B7C  D000               	goto	l12263
 17495  001B7E                     l12263:
 17496                           
 17497                           ; BSR set to: 0
 17498  001B7E  0100               	movlb	0	; () banked
 17499  001B80  5172               	movf	___fladd@bexp& (0+255),w,b
 17500  001B82  0100               	movlb	0	; () banked
 17501  001B84  B4D8               	btfsc	status,2,c
 17502  001B86  D001               	goto	u11161
 17503  001B88  D001               	goto	u11160
 17504  001B8A                     u11161:
 17505  001B8A  D016               	goto	l12273
 17506  001B8C                     u11160:
 17507                           
 17508                           ; BSR set to: 0
 17509  001B8C  0100               	movlb	0	; () banked
 17510  001B8E  2972               	incf	___fladd@bexp& (0+255),w,b
 17511  001B90  A4D8               	btfss	status,2,c
 17512  001B92  D001               	goto	u11171
 17513  001B94  D001               	goto	u11170
 17514  001B96                     u11171:
 17515  001B96  D00A               	goto	l12269
 17516  001B98                     u11170:
 17517                           
 17518                           ; BSR set to: 0
 17519  001B98  0E00               	movlw	0
 17520  001B9A  0100               	movlb	0	; () banked
 17521  001B9C  6F60               	movwf	___fladd@b& (0+255),b
 17522  001B9E  0E00               	movlw	0
 17523  001BA0  6F61               	movwf	(___fladd@b+1)& (0+255),b
 17524  001BA2  0E00               	movlw	0
 17525  001BA4  6F62               	movwf	(___fladd@b+2)& (0+255),b
 17526  001BA6  0E00               	movlw	0
 17527  001BA8  6F63               	movwf	(___fladd@b+3)& (0+255),b
 17528  001BAA  D000               	goto	l12269
 17529  001BAC                     l12269:
 17530                           
 17531                           ; BSR set to: 0
 17532  001BAC  0100               	movlb	0	; () banked
 17533  001BAE  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 17534                           
 17535                           ; BSR set to: 0
 17536  001BB0  0E00               	movlw	0
 17537  001BB2  0100               	movlb	0	; () banked
 17538  001BB4  6F63               	movwf	(___fladd@b+3)& (0+255),b
 17539  001BB6  D00A               	goto	l12275
 17540  001BB8                     l12273:
 17541                           
 17542                           ; BSR set to: 0
 17543  001BB8  0E00               	movlw	0
 17544  001BBA  0100               	movlb	0	; () banked
 17545  001BBC  6F60               	movwf	___fladd@b& (0+255),b
 17546  001BBE  0E00               	movlw	0
 17547  001BC0  6F61               	movwf	(___fladd@b+1)& (0+255),b
 17548  001BC2  0E00               	movlw	0
 17549  001BC4  6F62               	movwf	(___fladd@b+2)& (0+255),b
 17550  001BC6  0E00               	movlw	0
 17551  001BC8  6F63               	movwf	(___fladd@b+3)& (0+255),b
 17552  001BCA  D000               	goto	l12275
 17553  001BCC                     l12275:
 17554                           
 17555                           ; BSR set to: 0
 17556  001BCC  0100               	movlb	0	; () banked
 17557  001BCE  5167               	movf	(___fladd@a+3)& (0+255),w,b
 17558  001BD0  0B80               	andlw	128
 17559  001BD2  0100               	movlb	0	; () banked
 17560  001BD4  6F71               	movwf	___fladd@aexp& (0+255),b
 17561                           
 17562                           ; BSR set to: 0
 17563  001BD6  0100               	movlb	0	; () banked
 17564  001BD8  5170               	movf	___fladd@signs& (0+255),w,b
 17565  001BDA  0100               	movlb	0	; () banked
 17566  001BDC  1971               	xorwf	___fladd@aexp& (0+255),w,b
 17567  001BDE  B4D8               	btfsc	status,2,c
 17568  001BE0  D001               	goto	u11181
 17569  001BE2  D001               	goto	u11180
 17570  001BE4                     u11181:
 17571  001BE4  D003               	goto	l12281
 17572  001BE6                     u11180:
 17573                           
 17574                           ; BSR set to: 0
 17575  001BE6  0100               	movlb	0	; () banked
 17576  001BE8  8D70               	bsf	___fladd@signs& (0+255),6,b
 17577  001BEA  D000               	goto	l12281
 17578  001BEC                     l12281:
 17579                           
 17580                           ; BSR set to: 0
 17581  001BEC  0100               	movlb	0	; () banked
 17582  001BEE  5167               	movf	(___fladd@a+3)& (0+255),w,b
 17583  001BF0  2567               	addwf	(___fladd@a+3)& (0+255),w,b
 17584  001BF2  0100               	movlb	0	; () banked
 17585  001BF4  6F71               	movwf	___fladd@aexp& (0+255),b
 17586                           
 17587                           ; BSR set to: 0
 17588  001BF6  0100               	movlb	0	; () banked
 17589  001BF8  AF66               	btfss	(___fladd@a+2)& (0+255),7,b
 17590  001BFA  D001               	goto	u11191
 17591  001BFC  D001               	goto	u11190
 17592  001BFE                     u11191:
 17593  001BFE  D003               	goto	l12287
 17594  001C00                     u11190:
 17595                           
 17596                           ; BSR set to: 0
 17597  001C00  0100               	movlb	0	; () banked
 17598  001C02  8171               	bsf	___fladd@aexp& (0+255),0,b
 17599  001C04  D000               	goto	l12287
 17600  001C06                     l12287:
 17601                           
 17602                           ; BSR set to: 0
 17603  001C06  0100               	movlb	0	; () banked
 17604  001C08  5171               	movf	___fladd@aexp& (0+255),w,b
 17605  001C0A  0100               	movlb	0	; () banked
 17606  001C0C  B4D8               	btfsc	status,2,c
 17607  001C0E  D001               	goto	u11201
 17608  001C10  D001               	goto	u11200
 17609  001C12                     u11201:
 17610  001C12  D016               	goto	l12297
 17611  001C14                     u11200:
 17612                           
 17613                           ; BSR set to: 0
 17614  001C14  0100               	movlb	0	; () banked
 17615  001C16  2971               	incf	___fladd@aexp& (0+255),w,b
 17616  001C18  A4D8               	btfss	status,2,c
 17617  001C1A  D001               	goto	u11211
 17618  001C1C  D001               	goto	u11210
 17619  001C1E                     u11211:
 17620  001C1E  D00A               	goto	l12293
 17621  001C20                     u11210:
 17622                           
 17623                           ; BSR set to: 0
 17624  001C20  0E00               	movlw	0
 17625  001C22  0100               	movlb	0	; () banked
 17626  001C24  6F64               	movwf	___fladd@a& (0+255),b
 17627  001C26  0E00               	movlw	0
 17628  001C28  6F65               	movwf	(___fladd@a+1)& (0+255),b
 17629  001C2A  0E00               	movlw	0
 17630  001C2C  6F66               	movwf	(___fladd@a+2)& (0+255),b
 17631  001C2E  0E00               	movlw	0
 17632  001C30  6F67               	movwf	(___fladd@a+3)& (0+255),b
 17633  001C32  D000               	goto	l12293
 17634  001C34                     l12293:
 17635                           
 17636                           ; BSR set to: 0
 17637  001C34  0100               	movlb	0	; () banked
 17638  001C36  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
 17639                           
 17640                           ; BSR set to: 0
 17641  001C38  0E00               	movlw	0
 17642  001C3A  0100               	movlb	0	; () banked
 17643  001C3C  6F67               	movwf	(___fladd@a+3)& (0+255),b
 17644  001C3E  D00A               	goto	l12299
 17645  001C40                     l12297:
 17646                           
 17647                           ; BSR set to: 0
 17648  001C40  0E00               	movlw	0
 17649  001C42  0100               	movlb	0	; () banked
 17650  001C44  6F64               	movwf	___fladd@a& (0+255),b
 17651  001C46  0E00               	movlw	0
 17652  001C48  6F65               	movwf	(___fladd@a+1)& (0+255),b
 17653  001C4A  0E00               	movlw	0
 17654  001C4C  6F66               	movwf	(___fladd@a+2)& (0+255),b
 17655  001C4E  0E00               	movlw	0
 17656  001C50  6F67               	movwf	(___fladd@a+3)& (0+255),b
 17657  001C52  D000               	goto	l12299
 17658  001C54                     l12299:
 17659                           
 17660                           ; BSR set to: 0
 17661  001C54  0100               	movlb	0	; () banked
 17662  001C56  5172               	movf	___fladd@bexp& (0+255),w,b
 17663  001C58  0100               	movlb	0	; () banked
 17664  001C5A  5D71               	subwf	___fladd@aexp& (0+255),w,b
 17665  001C5C  B0D8               	btfsc	status,0,c
 17666  001C5E  D001               	goto	u11221
 17667  001C60  D001               	goto	u11220
 17668  001C62                     u11221:
 17669  001C62  D028               	goto	l12335
 17670  001C64                     u11220:
 17671                           
 17672                           ; BSR set to: 0
 17673  001C64  0100               	movlb	0	; () banked
 17674  001C66  AD70               	btfss	___fladd@signs& (0+255),6,b
 17675  001C68  D001               	goto	u11231
 17676  001C6A  D001               	goto	u11230
 17677  001C6C                     u11231:
 17678  001C6C  D004               	goto	l12305
 17679  001C6E                     u11230:
 17680                           
 17681                           ; BSR set to: 0
 17682  001C6E  0E80               	movlw	128
 17683  001C70  0100               	movlb	0	; () banked
 17684  001C72  1B70               	xorwf	___fladd@signs& (0+255),f,b
 17685  001C74  D000               	goto	l12305
 17686  001C76                     l12305:
 17687                           
 17688                           ; BSR set to: 0
 17689  001C76  C072  F073         	movff	___fladd@bexp,___fladd@grs
 17690                           
 17691                           ; BSR set to: 0
 17692  001C7A  C071  F072         	movff	___fladd@aexp,___fladd@bexp
 17693                           
 17694                           ; BSR set to: 0
 17695  001C7E  C073  F071         	movff	___fladd@grs,___fladd@aexp
 17696                           
 17697                           ; BSR set to: 0
 17698  001C82  C060  F073         	movff	___fladd@b,___fladd@grs
 17699                           
 17700                           ; BSR set to: 0
 17701  001C86  C064  F060         	movff	___fladd@a,___fladd@b
 17702                           
 17703                           ; BSR set to: 0
 17704  001C8A  C073  F064         	movff	___fladd@grs,___fladd@a
 17705                           
 17706                           ; BSR set to: 0
 17707  001C8E  C061  F073         	movff	___fladd@b+1,___fladd@grs
 17708                           
 17709                           ; BSR set to: 0
 17710  001C92  C065  F061         	movff	___fladd@a+1,___fladd@b+1
 17711                           
 17712                           ; BSR set to: 0
 17713  001C96  C073  F065         	movff	___fladd@grs,___fladd@a+1
 17714                           
 17715                           ; BSR set to: 0
 17716  001C9A  C062  F073         	movff	___fladd@b+2,___fladd@grs
 17717                           
 17718                           ; BSR set to: 0
 17719  001C9E  C066  F062         	movff	___fladd@a+2,___fladd@b+2
 17720                           
 17721                           ; BSR set to: 0
 17722  001CA2  C073  F066         	movff	___fladd@grs,___fladd@a+2
 17723                           
 17724                           ; BSR set to: 0
 17725  001CA6  C063  F073         	movff	___fladd@b+3,___fladd@grs
 17726                           
 17727                           ; BSR set to: 0
 17728  001CAA  C067  F063         	movff	___fladd@a+3,___fladd@b+3
 17729                           
 17730                           ; BSR set to: 0
 17731  001CAE  C073  F067         	movff	___fladd@grs,___fladd@a+3
 17732  001CB2  D000               	goto	l12335
 17733  001CB4                     l12335:
 17734                           
 17735                           ; BSR set to: 0
 17736  001CB4  0E00               	movlw	0
 17737  001CB6  0100               	movlb	0	; () banked
 17738  001CB8  6F73               	movwf	___fladd@grs& (0+255),b
 17739                           
 17740                           ; BSR set to: 0
 17741  001CBA  0100               	movlb	0	; () banked
 17742  001CBC  5172               	movf	___fladd@bexp& (0+255),w,b
 17743  001CBE  0100               	movlb	0	; () banked
 17744  001CC0  6F68               	movwf	??___fladd& (0+255),b
 17745  001CC2  6B69               	clrf	(??___fladd+1)& (0+255),b
 17746  001CC4  0100               	movlb	0	; () banked
 17747  001CC6  1F68               	comf	??___fladd& (0+255),f,b
 17748  001CC8  1F69               	comf	(??___fladd+1)& (0+255),f,b
 17749  001CCA  4B68               	infsnz	??___fladd& (0+255),f,b
 17750  001CCC  2B69               	incf	(??___fladd+1)& (0+255),f,b
 17751  001CCE  0100               	movlb	0	; () banked
 17752  001CD0  5171               	movf	___fladd@aexp& (0+255),w,b
 17753  001CD2  0100               	movlb	0	; () banked
 17754  001CD4  6F6A               	movwf	(??___fladd+2)& (0+255),b
 17755  001CD6  6B6B               	clrf	(??___fladd+3)& (0+255),b
 17756  001CD8  0100               	movlb	0	; () banked
 17757  001CDA  5168               	movf	??___fladd& (0+255),w,b
 17758  001CDC  0100               	movlb	0	; () banked
 17759  001CDE  276A               	addwf	(??___fladd+2)& (0+255),f,b
 17760  001CE0  0100               	movlb	0	; () banked
 17761  001CE2  5169               	movf	(??___fladd+1)& (0+255),w,b
 17762  001CE4  0100               	movlb	0	; () banked
 17763  001CE6  236B               	addwfc	(??___fladd+3)& (0+255),f,b
 17764  001CE8  0100               	movlb	0	; () banked
 17765  001CEA  BF6B               	btfsc	(??___fladd+3)& (0+255),7,b
 17766  001CEC  D009               	goto	u11241
 17767  001CEE  0100               	movlb	0	; () banked
 17768  001CF0  516B               	movf	(??___fladd+3)& (0+255),w,b
 17769  001CF2  E107               	bnz	u11240
 17770  001CF4  0E1A               	movlw	26
 17771  001CF6  0100               	movlb	0	; () banked
 17772  001CF8  5D6A               	subwf	(??___fladd+2)& (0+255),w,b
 17773  001CFA  A0D8               	btfss	status,0,c
 17774  001CFC  D001               	goto	u11241
 17775  001CFE  D001               	goto	u11240
 17776  001D00                     u11241:
 17777  001D00  D03D               	goto	l2619
 17778  001D02                     u11240:
 17779                           
 17780                           ; BSR set to: 0
 17781  001D02  0100               	movlb	0	; () banked
 17782  001D04  5160               	movf	___fladd@b& (0+255),w,b
 17783  001D06  0100               	movlb	0	; () banked
 17784  001D08  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 17785  001D0A  0100               	movlb	0	; () banked
 17786  001D0C  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 17787  001D0E  0100               	movlb	0	; () banked
 17788  001D10  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 17789  001D12  A4D8               	btfss	status,2,c
 17790  001D14  D001               	goto	u11251
 17791  001D16  D002               	goto	u11250
 17792  001D18                     u11251:
 17793  001D18  0E01               	movlw	1
 17794  001D1A  D001               	goto	u11260
 17795  001D1C                     u11250:
 17796  001D1C  0E00               	movlw	0
 17797  001D1E                     u11260:
 17798  001D1E  0100               	movlb	0	; () banked
 17799  001D20  6F73               	movwf	___fladd@grs& (0+255),b
 17800                           
 17801                           ; BSR set to: 0
 17802  001D22  0E00               	movlw	0
 17803  001D24  0100               	movlb	0	; () banked
 17804  001D26  6F60               	movwf	___fladd@b& (0+255),b
 17805  001D28  0E00               	movlw	0
 17806  001D2A  6F61               	movwf	(___fladd@b+1)& (0+255),b
 17807  001D2C  0E00               	movlw	0
 17808  001D2E  6F62               	movwf	(___fladd@b+2)& (0+255),b
 17809  001D30  0E00               	movlw	0
 17810  001D32  6F63               	movwf	(___fladd@b+3)& (0+255),b
 17811                           
 17812                           ; BSR set to: 0
 17813  001D34  C071  F072         	movff	___fladd@aexp,___fladd@bexp
 17814  001D38  D02A               	goto	l2618
 17815                           
 17816                           ; BSR set to: 0
 17817  001D3A  D020               	goto	l2619
 17818  001D3C                     l2620:
 17819                           
 17820                           ; BSR set to: 0
 17821  001D3C  0100               	movlb	0	; () banked
 17822  001D3E  A173               	btfss	___fladd@grs& (0+255),0,b
 17823  001D40  D001               	goto	u11271
 17824  001D42  D001               	goto	u11270
 17825  001D44                     u11271:
 17826  001D44  D007               	goto	l12347
 17827  001D46                     u11270:
 17828                           
 17829                           ; BSR set to: 0
 17830  001D46  0100               	movlb	0	; () banked
 17831  001D48  90D8               	bcf	status,0,c
 17832  001D4A  3173               	rrcf	___fladd@grs& (0+255),w,b
 17833  001D4C  0901               	iorlw	1
 17834  001D4E  0100               	movlb	0	; () banked
 17835  001D50  6F73               	movwf	___fladd@grs& (0+255),b
 17836  001D52  D004               	goto	l12349
 17837  001D54                     l12347:
 17838                           
 17839                           ; BSR set to: 0
 17840  001D54  0100               	movlb	0	; () banked
 17841  001D56  90D8               	bcf	status,0,c
 17842  001D58  3373               	rrcf	___fladd@grs& (0+255),f,b
 17843  001D5A  D000               	goto	l12349
 17844  001D5C                     l12349:
 17845                           
 17846                           ; BSR set to: 0
 17847  001D5C  0100               	movlb	0	; () banked
 17848  001D5E  A160               	btfss	___fladd@b& (0+255),0,b
 17849  001D60  D001               	goto	u11281
 17850  001D62  D001               	goto	u11280
 17851  001D64                     u11281:
 17852  001D64  D003               	goto	l12353
 17853  001D66                     u11280:
 17854                           
 17855                           ; BSR set to: 0
 17856  001D66  0100               	movlb	0	; () banked
 17857  001D68  8F73               	bsf	___fladd@grs& (0+255),7,b
 17858  001D6A  D000               	goto	l12353
 17859  001D6C                     l12353:
 17860                           
 17861                           ; BSR set to: 0
 17862  001D6C  0100               	movlb	0	; () banked
 17863  001D6E  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 17864  001D70  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 17865  001D72  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 17866  001D74  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 17867  001D76  3360               	rrcf	___fladd@b& (0+255),f,b
 17868                           
 17869                           ; BSR set to: 0
 17870  001D78  0100               	movlb	0	; () banked
 17871  001D7A  2B72               	incf	___fladd@bexp& (0+255),f,b
 17872  001D7C                     l2619:
 17873                           
 17874                           ; BSR set to: 0
 17875  001D7C  0100               	movlb	0	; () banked
 17876  001D7E  5171               	movf	___fladd@aexp& (0+255),w,b
 17877  001D80  0100               	movlb	0	; () banked
 17878  001D82  5D72               	subwf	___fladd@bexp& (0+255),w,b
 17879  001D84  A0D8               	btfss	status,0,c
 17880  001D86  D001               	goto	u11291
 17881  001D88  D001               	goto	u11290
 17882  001D8A                     u11291:
 17883  001D8A  D7D8               	goto	l2620
 17884  001D8C                     u11290:
 17885  001D8C  D000               	goto	l2618
 17886  001D8E                     l2618:
 17887                           
 17888                           ; BSR set to: 0
 17889  001D8E  0100               	movlb	0	; () banked
 17890  001D90  BD70               	btfsc	___fladd@signs& (0+255),6,b
 17891  001D92  D001               	goto	u11301
 17892  001D94  D001               	goto	u11300
 17893  001D96                     u11301:
 17894  001D96  D04B               	goto	l12381
 17895  001D98                     u11300:
 17896                           
 17897                           ; BSR set to: 0
 17898  001D98  0100               	movlb	0	; () banked
 17899  001D9A  5172               	movf	___fladd@bexp& (0+255),w,b
 17900  001D9C  0100               	movlb	0	; () banked
 17901  001D9E  A4D8               	btfss	status,2,c
 17902  001DA0  D001               	goto	u11311
 17903  001DA2  D001               	goto	u11310
 17904  001DA4                     u11311:
 17905  001DA4  D00B               	goto	l12363
 17906  001DA6                     u11310:
 17907                           
 17908                           ; BSR set to: 0
 17909  001DA6  0E00               	movlw	0
 17910  001DA8  0100               	movlb	0	; () banked
 17911  001DAA  6F60               	movwf	?___fladd& (0+255),b
 17912  001DAC  0E00               	movlw	0
 17913  001DAE  6F61               	movwf	(?___fladd+1)& (0+255),b
 17914  001DB0  0E00               	movlw	0
 17915  001DB2  6F62               	movwf	(?___fladd+2)& (0+255),b
 17916  001DB4  0E00               	movlw	0
 17917  001DB6  6F63               	movwf	(?___fladd+3)& (0+255),b
 17918  001DB8  D19A               	goto	l2627
 17919                           
 17920                           ; BSR set to: 0
 17921  001DBA  D199               	goto	l2627
 17922  001DBC                     l12363:
 17923                           
 17924                           ; BSR set to: 0
 17925  001DBC  0100               	movlb	0	; () banked
 17926  001DBE  5164               	movf	___fladd@a& (0+255),w,b
 17927  001DC0  0100               	movlb	0	; () banked
 17928  001DC2  2760               	addwf	___fladd@b& (0+255),f,b
 17929  001DC4  0100               	movlb	0	; () banked
 17930  001DC6  5165               	movf	(___fladd@a+1)& (0+255),w,b
 17931  001DC8  0100               	movlb	0	; () banked
 17932  001DCA  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 17933  001DCC  0100               	movlb	0	; () banked
 17934  001DCE  5166               	movf	(___fladd@a+2)& (0+255),w,b
 17935  001DD0  0100               	movlb	0	; () banked
 17936  001DD2  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 17937  001DD4  0100               	movlb	0	; () banked
 17938  001DD6  5167               	movf	(___fladd@a+3)& (0+255),w,b
 17939  001DD8  0100               	movlb	0	; () banked
 17940  001DDA  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 17941                           
 17942                           ; BSR set to: 0
 17943  001DDC  0100               	movlb	0	; () banked
 17944  001DDE  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 17945  001DE0  D001               	goto	u11321
 17946  001DE2  D001               	goto	u11320
 17947  001DE4                     u11321:
 17948  001DE4  D0ED               	goto	l12417
 17949  001DE6                     u11320:
 17950                           
 17951                           ; BSR set to: 0
 17952  001DE6  0100               	movlb	0	; () banked
 17953  001DE8  A173               	btfss	___fladd@grs& (0+255),0,b
 17954  001DEA  D001               	goto	u11331
 17955  001DEC  D001               	goto	u11330
 17956  001DEE                     u11331:
 17957  001DEE  D009               	goto	l12371
 17958  001DF0                     u11330:
 17959                           
 17960                           ; BSR set to: 0
 17961  001DF0  0100               	movlb	0	; () banked
 17962  001DF2  90D8               	bcf	status,0,c
 17963  001DF4  3373               	rrcf	___fladd@grs& (0+255),f,b
 17964  001DF6  0100               	movlb	0	; () banked
 17965  001DF8  5173               	movf	___fladd@grs& (0+255),w,b
 17966  001DFA  0901               	iorlw	1
 17967  001DFC  0100               	movlb	0	; () banked
 17968  001DFE  6F73               	movwf	___fladd@grs& (0+255),b
 17969  001E00  D004               	goto	l12373
 17970  001E02                     l12371:
 17971                           
 17972                           ; BSR set to: 0
 17973  001E02  0100               	movlb	0	; () banked
 17974  001E04  90D8               	bcf	status,0,c
 17975  001E06  3373               	rrcf	___fladd@grs& (0+255),f,b
 17976  001E08  D000               	goto	l12373
 17977  001E0A                     l12373:
 17978                           
 17979                           ; BSR set to: 0
 17980  001E0A  0100               	movlb	0	; () banked
 17981  001E0C  A160               	btfss	___fladd@b& (0+255),0,b
 17982  001E0E  D001               	goto	u11341
 17983  001E10  D001               	goto	u11340
 17984  001E12                     u11341:
 17985  001E12  D003               	goto	l12377
 17986  001E14                     u11340:
 17987                           
 17988                           ; BSR set to: 0
 17989  001E14  0100               	movlb	0	; () banked
 17990  001E16  8F73               	bsf	___fladd@grs& (0+255),7,b
 17991  001E18  D000               	goto	l12377
 17992  001E1A                     l12377:
 17993                           
 17994                           ; BSR set to: 0
 17995  001E1A  0100               	movlb	0	; () banked
 17996  001E1C  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 17997  001E1E  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 17998  001E20  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 17999  001E22  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 18000  001E24  3360               	rrcf	___fladd@b& (0+255),f,b
 18001                           
 18002                           ; BSR set to: 0
 18003  001E26  0100               	movlb	0	; () banked
 18004  001E28  2B72               	incf	___fladd@bexp& (0+255),f,b
 18005  001E2A  D0CA               	goto	l12417
 18006                           
 18007                           ; BSR set to: 0
 18008  001E2C  D0C9               	goto	l12417
 18009  001E2E                     l12381:
 18010                           
 18011                           ; BSR set to: 0
 18012  001E2E  0100               	movlb	0	; () banked
 18013  001E30  5164               	movf	___fladd@a& (0+255),w,b
 18014  001E32  0100               	movlb	0	; () banked
 18015  001E34  5D60               	subwf	___fladd@b& (0+255),w,b
 18016  001E36  0100               	movlb	0	; () banked
 18017  001E38  5165               	movf	(___fladd@a+1)& (0+255),w,b
 18018  001E3A  0100               	movlb	0	; () banked
 18019  001E3C  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
 18020  001E3E  0100               	movlb	0	; () banked
 18021  001E40  5166               	movf	(___fladd@a+2)& (0+255),w,b
 18022  001E42  0100               	movlb	0	; () banked
 18023  001E44  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
 18024  001E46  0100               	movlb	0	; () banked
 18025  001E48  5163               	movf	(___fladd@b+3)& (0+255),w,b
 18026  001E4A  0A80               	xorlw	128
 18027  001E4C  0100               	movlb	0	; () banked
 18028  001E4E  6F68               	movwf	??___fladd& (0+255),b
 18029  001E50  0100               	movlb	0	; () banked
 18030  001E52  5167               	movf	(___fladd@a+3)& (0+255),w,b
 18031  001E54  0A80               	xorlw	128
 18032  001E56  0100               	movlb	0	; () banked
 18033  001E58  5968               	subwfb	??___fladd& (0+255),w,b
 18034  001E5A  B0D8               	btfsc	status,0,c
 18035  001E5C  D001               	goto	u11351
 18036  001E5E  D001               	goto	u11350
 18037  001E60                     u11351:
 18038  001E60  D053               	goto	l12391
 18039  001E62                     u11350:
 18040                           
 18041                           ; BSR set to: 0
 18042  001E62  C060  F068         	movff	___fladd@b,??___fladd
 18043  001E66  C061  F069         	movff	___fladd@b+1,??___fladd+1
 18044  001E6A  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 18045  001E6E  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 18046  001E72  0100               	movlb	0	; () banked
 18047  001E74  1F68               	comf	??___fladd& (0+255),f,b
 18048  001E76  1F69               	comf	(??___fladd+1)& (0+255),f,b
 18049  001E78  1F6A               	comf	(??___fladd+2)& (0+255),f,b
 18050  001E7A  1F6B               	comf	(??___fladd+3)& (0+255),f,b
 18051  001E7C  2B68               	incf	??___fladd& (0+255),f,b
 18052  001E7E  0E00               	movlw	0
 18053  001E80  2369               	addwfc	(??___fladd+1)& (0+255),f,b
 18054  001E82  236A               	addwfc	(??___fladd+2)& (0+255),f,b
 18055  001E84  236B               	addwfc	(??___fladd+3)& (0+255),f,b
 18056  001E86  0100               	movlb	0	; () banked
 18057  001E88  5164               	movf	___fladd@a& (0+255),w,b
 18058  001E8A  0100               	movlb	0	; () banked
 18059  001E8C  2568               	addwf	??___fladd& (0+255),w,b
 18060  001E8E  0100               	movlb	0	; () banked
 18061  001E90  6F6C               	movwf	(??___fladd+4)& (0+255),b
 18062  001E92  0100               	movlb	0	; () banked
 18063  001E94  5165               	movf	(___fladd@a+1)& (0+255),w,b
 18064  001E96  0100               	movlb	0	; () banked
 18065  001E98  2169               	addwfc	(??___fladd+1)& (0+255),w,b
 18066  001E9A  0100               	movlb	0	; () banked
 18067  001E9C  6F6D               	movwf	(??___fladd+5)& (0+255),b
 18068  001E9E  0100               	movlb	0	; () banked
 18069  001EA0  5166               	movf	(___fladd@a+2)& (0+255),w,b
 18070  001EA2  0100               	movlb	0	; () banked
 18071  001EA4  216A               	addwfc	(??___fladd+2)& (0+255),w,b
 18072  001EA6  0100               	movlb	0	; () banked
 18073  001EA8  6F6E               	movwf	(??___fladd+6)& (0+255),b
 18074  001EAA  0100               	movlb	0	; () banked
 18075  001EAC  5167               	movf	(___fladd@a+3)& (0+255),w,b
 18076  001EAE  0100               	movlb	0	; () banked
 18077  001EB0  216B               	addwfc	(??___fladd+3)& (0+255),w,b
 18078  001EB2  0100               	movlb	0	; () banked
 18079  001EB4  6F6F               	movwf	(??___fladd+7)& (0+255),b
 18080  001EB6  0EFF               	movlw	255
 18081  001EB8  0100               	movlb	0	; () banked
 18082  001EBA  256C               	addwf	(??___fladd+4)& (0+255),w,b
 18083  001EBC  0100               	movlb	0	; () banked
 18084  001EBE  6F60               	movwf	___fladd@b& (0+255),b
 18085  001EC0  0EFF               	movlw	255
 18086  001EC2  0100               	movlb	0	; () banked
 18087  001EC4  216D               	addwfc	(??___fladd+5)& (0+255),w,b
 18088  001EC6  0100               	movlb	0	; () banked
 18089  001EC8  6F61               	movwf	(___fladd@b+1)& (0+255),b
 18090  001ECA  0EFF               	movlw	255
 18091  001ECC  0100               	movlb	0	; () banked
 18092  001ECE  216E               	addwfc	(??___fladd+6)& (0+255),w,b
 18093  001ED0  0100               	movlb	0	; () banked
 18094  001ED2  6F62               	movwf	(___fladd@b+2)& (0+255),b
 18095  001ED4  0EFF               	movlw	255
 18096  001ED6  0100               	movlb	0	; () banked
 18097  001ED8  216F               	addwfc	(??___fladd+7)& (0+255),w,b
 18098  001EDA  0100               	movlb	0	; () banked
 18099  001EDC  6F63               	movwf	(___fladd@b+3)& (0+255),b
 18100  001EDE  0E80               	movlw	128
 18101  001EE0  0100               	movlb	0	; () banked
 18102  001EE2  1B70               	xorwf	___fladd@signs& (0+255),f,b
 18103                           
 18104                           ; BSR set to: 0
 18105  001EE4  0100               	movlb	0	; () banked
 18106  001EE6  6D73               	negf	___fladd@grs& (0+255),b
 18107                           
 18108                           ; BSR set to: 0
 18109  001EE8  0100               	movlb	0	; () banked
 18110  001EEA  5173               	movf	___fladd@grs& (0+255),w,b
 18111  001EEC  0100               	movlb	0	; () banked
 18112  001EEE  A4D8               	btfss	status,2,c
 18113  001EF0  D001               	goto	u11361
 18114  001EF2  D001               	goto	u11360
 18115  001EF4                     u11361:
 18116  001EF4  D019               	goto	l2635
 18117  001EF6                     u11360:
 18118                           
 18119                           ; BSR set to: 0
 18120  001EF6  0E01               	movlw	1
 18121  001EF8  0100               	movlb	0	; () banked
 18122  001EFA  2760               	addwf	___fladd@b& (0+255),f,b
 18123  001EFC  0E00               	movlw	0
 18124  001EFE  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 18125  001F00  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 18126  001F02  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 18127  001F04  D011               	goto	l2635
 18128                           
 18129                           ; BSR set to: 0
 18130  001F06  D010               	goto	l2635
 18131  001F08                     l12391:
 18132                           
 18133                           ; BSR set to: 0
 18134  001F08  0100               	movlb	0	; () banked
 18135  001F0A  5164               	movf	___fladd@a& (0+255),w,b
 18136  001F0C  0100               	movlb	0	; () banked
 18137  001F0E  5F60               	subwf	___fladd@b& (0+255),f,b
 18138  001F10  0100               	movlb	0	; () banked
 18139  001F12  5165               	movf	(___fladd@a+1)& (0+255),w,b
 18140  001F14  0100               	movlb	0	; () banked
 18141  001F16  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
 18142  001F18  0100               	movlb	0	; () banked
 18143  001F1A  5166               	movf	(___fladd@a+2)& (0+255),w,b
 18144  001F1C  0100               	movlb	0	; () banked
 18145  001F1E  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
 18146  001F20  0100               	movlb	0	; () banked
 18147  001F22  5167               	movf	(___fladd@a+3)& (0+255),w,b
 18148  001F24  0100               	movlb	0	; () banked
 18149  001F26  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
 18150  001F28                     l2635:
 18151                           
 18152                           ; BSR set to: 0
 18153  001F28  0100               	movlb	0	; () banked
 18154  001F2A  5160               	movf	___fladd@b& (0+255),w,b
 18155  001F2C  0100               	movlb	0	; () banked
 18156  001F2E  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 18157  001F30  0100               	movlb	0	; () banked
 18158  001F32  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 18159  001F34  0100               	movlb	0	; () banked
 18160  001F36  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 18161  001F38  A4D8               	btfss	status,2,c
 18162  001F3A  D001               	goto	u11371
 18163  001F3C  D001               	goto	u11370
 18164  001F3E                     u11371:
 18165  001F3E  D039               	goto	l12415
 18166  001F40                     u11370:
 18167                           
 18168                           ; BSR set to: 0
 18169  001F40  0100               	movlb	0	; () banked
 18170  001F42  5173               	movf	___fladd@grs& (0+255),w,b
 18171  001F44  0100               	movlb	0	; () banked
 18172  001F46  A4D8               	btfss	status,2,c
 18173  001F48  D001               	goto	u11381
 18174  001F4A  D001               	goto	u11380
 18175  001F4C                     u11381:
 18176  001F4C  D032               	goto	l12415
 18177  001F4E                     u11380:
 18178                           
 18179                           ; BSR set to: 0
 18180  001F4E  0E00               	movlw	0
 18181  001F50  0100               	movlb	0	; () banked
 18182  001F52  6F60               	movwf	?___fladd& (0+255),b
 18183  001F54  0E00               	movlw	0
 18184  001F56  6F61               	movwf	(?___fladd+1)& (0+255),b
 18185  001F58  0E00               	movlw	0
 18186  001F5A  6F62               	movwf	(?___fladd+2)& (0+255),b
 18187  001F5C  0E00               	movlw	0
 18188  001F5E  6F63               	movwf	(?___fladd+3)& (0+255),b
 18189  001F60  D0C6               	goto	l2627
 18190                           
 18191                           ; BSR set to: 0
 18192  001F62  D0C5               	goto	l2627
 18193                           
 18194                           ; BSR set to: 0
 18195  001F64  D026               	goto	l12415
 18196  001F66                     l12399:
 18197                           
 18198                           ; BSR set to: 0
 18199  001F66  0100               	movlb	0	; () banked
 18200  001F68  90D8               	bcf	status,0,c
 18201  001F6A  3760               	rlcf	___fladd@b& (0+255),f,b
 18202  001F6C  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
 18203  001F6E  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
 18204  001F70  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
 18205                           
 18206                           ; BSR set to: 0
 18207  001F72  0100               	movlb	0	; () banked
 18208  001F74  AF73               	btfss	___fladd@grs& (0+255),7,b
 18209  001F76  D001               	goto	u11391
 18210  001F78  D001               	goto	u11390
 18211  001F7A                     u11391:
 18212  001F7A  D003               	goto	l12405
 18213  001F7C                     u11390:
 18214                           
 18215                           ; BSR set to: 0
 18216  001F7C  0100               	movlb	0	; () banked
 18217  001F7E  8160               	bsf	___fladd@b& (0+255),0,b
 18218  001F80  D000               	goto	l12405
 18219  001F82                     l12405:
 18220                           
 18221                           ; BSR set to: 0
 18222  001F82  0100               	movlb	0	; () banked
 18223  001F84  A173               	btfss	___fladd@grs& (0+255),0,b
 18224  001F86  D001               	goto	u11401
 18225  001F88  D001               	goto	u11400
 18226  001F8A                     u11401:
 18227  001F8A  D004               	goto	l12409
 18228  001F8C                     u11400:
 18229                           
 18230                           ; BSR set to: 0
 18231  001F8C  80D8               	bsf	status,0,c
 18232  001F8E  0100               	movlb	0	; () banked
 18233  001F90  3773               	rlcf	___fladd@grs& (0+255),f,b
 18234  001F92  D004               	goto	l12411
 18235  001F94                     l12409:
 18236                           
 18237                           ; BSR set to: 0
 18238  001F94  0100               	movlb	0	; () banked
 18239  001F96  90D8               	bcf	status,0,c
 18240  001F98  3773               	rlcf	___fladd@grs& (0+255),f,b
 18241  001F9A  D000               	goto	l12411
 18242  001F9C                     l12411:
 18243                           
 18244                           ; BSR set to: 0
 18245  001F9C  0100               	movlb	0	; () banked
 18246  001F9E  5172               	movf	___fladd@bexp& (0+255),w,b
 18247  001FA0  0100               	movlb	0	; () banked
 18248  001FA2  B4D8               	btfsc	status,2,c
 18249  001FA4  D001               	goto	u11411
 18250  001FA6  D001               	goto	u11410
 18251  001FA8                     u11411:
 18252  001FA8  D004               	goto	l12415
 18253  001FAA                     u11410:
 18254                           
 18255                           ; BSR set to: 0
 18256  001FAA  0100               	movlb	0	; () banked
 18257  001FAC  0772               	decf	___fladd@bexp& (0+255),f,b
 18258  001FAE  D001               	goto	l12415
 18259                           
 18260                           ; BSR set to: 0
 18261  001FB0  D000               	goto	l12415
 18262  001FB2                     l12415:
 18263                           
 18264                           ; BSR set to: 0
 18265  001FB2  0100               	movlb	0	; () banked
 18266  001FB4  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
 18267  001FB6  D001               	goto	u11421
 18268  001FB8  D001               	goto	u11420
 18269  001FBA                     u11421:
 18270  001FBA  D7D5               	goto	l12399
 18271  001FBC                     u11420:
 18272  001FBC  D001               	goto	l12417
 18273                           
 18274                           ; BSR set to: 0
 18275  001FBE  D000               	goto	l12417
 18276  001FC0                     l12417:
 18277                           
 18278                           ; BSR set to: 0
 18279  001FC0  0E00               	movlw	0
 18280  001FC2  0100               	movlb	0	; () banked
 18281  001FC4  6F71               	movwf	___fladd@aexp& (0+255),b
 18282                           
 18283                           ; BSR set to: 0
 18284  001FC6  0100               	movlb	0	; () banked
 18285  001FC8  AF73               	btfss	___fladd@grs& (0+255),7,b
 18286  001FCA  D001               	goto	u11431
 18287  001FCC  D001               	goto	u11430
 18288  001FCE                     u11431:
 18289  001FCE  D017               	goto	l2644
 18290  001FD0                     u11430:
 18291                           
 18292                           ; BSR set to: 0
 18293  001FD0  C073  F068         	movff	___fladd@grs,??___fladd
 18294  001FD4  0E7F               	movlw	127
 18295  001FD6  0100               	movlb	0	; () banked
 18296  001FD8  1768               	andwf	??___fladd& (0+255),f,b
 18297  001FDA  B4D8               	btfsc	status,2,c
 18298  001FDC  D001               	goto	u11441
 18299  001FDE  D001               	goto	u11440
 18300  001FE0                     u11441:
 18301  001FE0  D004               	goto	l2645
 18302  001FE2                     u11440:
 18303                           
 18304                           ; BSR set to: 0
 18305  001FE2  0E01               	movlw	1
 18306  001FE4  0100               	movlb	0	; () banked
 18307  001FE6  6F71               	movwf	___fladd@aexp& (0+255),b
 18308  001FE8  D00A               	goto	l2644
 18309  001FEA                     l2645:
 18310                           
 18311                           ; BSR set to: 0
 18312  001FEA  0100               	movlb	0	; () banked
 18313  001FEC  A160               	btfss	___fladd@b& (0+255),0,b
 18314  001FEE  D001               	goto	u11451
 18315  001FF0  D001               	goto	u11450
 18316  001FF2                     u11451:
 18317  001FF2  D005               	goto	l2644
 18318  001FF4                     u11450:
 18319                           
 18320                           ; BSR set to: 0
 18321  001FF4  0E01               	movlw	1
 18322  001FF6  0100               	movlb	0	; () banked
 18323  001FF8  6F71               	movwf	___fladd@aexp& (0+255),b
 18324  001FFA  D001               	goto	l2644
 18325                           
 18326                           ; BSR set to: 0
 18327  001FFC  D000               	goto	l2644
 18328  001FFE                     l2644:
 18329                           
 18330                           ; BSR set to: 0
 18331  001FFE  0100               	movlb	0	; () banked
 18332  002000  5171               	movf	___fladd@aexp& (0+255),w,b
 18333  002002  0100               	movlb	0	; () banked
 18334  002004  B4D8               	btfsc	status,2,c
 18335  002006  D001               	goto	u11461
 18336  002008  D001               	goto	u11460
 18337  00200A                     u11461:
 18338  00200A  D02D               	goto	l12435
 18339  00200C                     u11460:
 18340                           
 18341                           ; BSR set to: 0
 18342  00200C  0E01               	movlw	1
 18343  00200E  0100               	movlb	0	; () banked
 18344  002010  2760               	addwf	___fladd@b& (0+255),f,b
 18345  002012  0E00               	movlw	0
 18346  002014  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 18347  002016  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 18348  002018  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 18349                           
 18350                           ; BSR set to: 0
 18351  00201A  0100               	movlb	0	; () banked
 18352  00201C  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 18353  00201E  D001               	goto	u11471
 18354  002020  D001               	goto	u11470
 18355  002022                     u11471:
 18356  002022  D021               	goto	l12435
 18357  002024                     u11470:
 18358                           
 18359                           ; BSR set to: 0
 18360  002024  C060  F068         	movff	___fladd@b,??___fladd
 18361  002028  C061  F069         	movff	___fladd@b+1,??___fladd+1
 18362  00202C  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 18363  002030  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 18364  002034  0100               	movlb	0	; () banked
 18365  002036  356B               	rlcf	(??___fladd+3)& (0+255),w,b
 18366  002038  336B               	rrcf	(??___fladd+3)& (0+255),f,b
 18367  00203A  336A               	rrcf	(??___fladd+2)& (0+255),f,b
 18368  00203C  3369               	rrcf	(??___fladd+1)& (0+255),f,b
 18369  00203E  3368               	rrcf	??___fladd& (0+255),f,b
 18370  002040  C068  F060         	movff	??___fladd,___fladd@b
 18371  002044  C069  F061         	movff	??___fladd+1,___fladd@b+1
 18372  002048  C06A  F062         	movff	??___fladd+2,___fladd@b+2
 18373  00204C  C06B  F063         	movff	??___fladd+3,___fladd@b+3
 18374  002050  0100               	movlb	0	; () banked
 18375  002052  2972               	incf	___fladd@bexp& (0+255),w,b
 18376  002054  B4D8               	btfsc	status,2,c
 18377  002056  D001               	goto	u11481
 18378  002058  D001               	goto	u11480
 18379  00205A                     u11481:
 18380  00205A  D005               	goto	l12435
 18381  00205C                     u11480:
 18382                           
 18383                           ; BSR set to: 0
 18384  00205C  0100               	movlb	0	; () banked
 18385  00205E  2B72               	incf	___fladd@bexp& (0+255),f,b
 18386  002060  D002               	goto	l12435
 18387                           
 18388                           ; BSR set to: 0
 18389  002062  D001               	goto	l12435
 18390                           
 18391                           ; BSR set to: 0
 18392  002064  D000               	goto	l12435
 18393  002066                     l12435:
 18394                           
 18395                           ; BSR set to: 0
 18396  002066  0100               	movlb	0	; () banked
 18397  002068  2972               	incf	___fladd@bexp& (0+255),w,b
 18398  00206A  B4D8               	btfsc	status,2,c
 18399  00206C  D001               	goto	u11491
 18400  00206E  D001               	goto	u11490
 18401  002070                     u11491:
 18402  002070  D008               	goto	l12439
 18403  002072                     u11490:
 18404                           
 18405                           ; BSR set to: 0
 18406  002072  0100               	movlb	0	; () banked
 18407  002074  5172               	movf	___fladd@bexp& (0+255),w,b
 18408  002076  0100               	movlb	0	; () banked
 18409  002078  A4D8               	btfss	status,2,c
 18410  00207A  D001               	goto	u11501
 18411  00207C  D001               	goto	u11500
 18412  00207E                     u11501:
 18413  00207E  D016               	goto	l12443
 18414  002080                     u11500:
 18415  002080  D000               	goto	l12439
 18416  002082                     l12439:
 18417                           
 18418                           ; BSR set to: 0
 18419  002082  0E00               	movlw	0
 18420  002084  0100               	movlb	0	; () banked
 18421  002086  6F60               	movwf	___fladd@b& (0+255),b
 18422  002088  0E00               	movlw	0
 18423  00208A  6F61               	movwf	(___fladd@b+1)& (0+255),b
 18424  00208C  0E00               	movlw	0
 18425  00208E  6F62               	movwf	(___fladd@b+2)& (0+255),b
 18426  002090  0E00               	movlw	0
 18427  002092  6F63               	movwf	(___fladd@b+3)& (0+255),b
 18428  002094  0100               	movlb	0	; () banked
 18429  002096  5172               	movf	___fladd@bexp& (0+255),w,b
 18430  002098  0100               	movlb	0	; () banked
 18431  00209A  A4D8               	btfss	status,2,c
 18432  00209C  D001               	goto	u11511
 18433  00209E  D001               	goto	u11510
 18434  0020A0                     u11511:
 18435  0020A0  D005               	goto	l12443
 18436  0020A2                     u11510:
 18437                           
 18438                           ; BSR set to: 0
 18439  0020A2  0E00               	movlw	0
 18440  0020A4  0100               	movlb	0	; () banked
 18441  0020A6  6F70               	movwf	___fladd@signs& (0+255),b
 18442  0020A8  D001               	goto	l12443
 18443                           
 18444                           ; BSR set to: 0
 18445  0020AA  D000               	goto	l12443
 18446  0020AC                     l12443:
 18447                           
 18448                           ; BSR set to: 0
 18449  0020AC  0100               	movlb	0	; () banked
 18450  0020AE  A172               	btfss	___fladd@bexp& (0+255),0,b
 18451  0020B0  D001               	goto	u11521
 18452  0020B2  D001               	goto	u11520
 18453  0020B4                     u11521:
 18454  0020B4  D003               	goto	l12447
 18455  0020B6                     u11520:
 18456                           
 18457                           ; BSR set to: 0
 18458  0020B6  0100               	movlb	0	; () banked
 18459  0020B8  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 18460  0020BA  D003               	goto	l12449
 18461  0020BC                     l12447:
 18462                           
 18463                           ; BSR set to: 0
 18464  0020BC  0100               	movlb	0	; () banked
 18465  0020BE  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
 18466  0020C0  D000               	goto	l12449
 18467  0020C2                     l12449:
 18468                           
 18469                           ; BSR set to: 0
 18470  0020C2  0100               	movlb	0	; () banked
 18471  0020C4  90D8               	bcf	status,0,c
 18472  0020C6  3172               	rrcf	___fladd@bexp& (0+255),w,b
 18473  0020C8  0100               	movlb	0	; () banked
 18474  0020CA  6F63               	movwf	(___fladd@b+3)& (0+255),b
 18475                           
 18476                           ; BSR set to: 0
 18477  0020CC  0100               	movlb	0	; () banked
 18478  0020CE  AF70               	btfss	___fladd@signs& (0+255),7,b
 18479  0020D0  D001               	goto	u11531
 18480  0020D2  D001               	goto	u11530
 18481  0020D4                     u11531:
 18482  0020D4  D003               	goto	l12455
 18483  0020D6                     u11530:
 18484                           
 18485                           ; BSR set to: 0
 18486  0020D6  0100               	movlb	0	; () banked
 18487  0020D8  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
 18488  0020DA  D000               	goto	l12455
 18489  0020DC                     l12455:
 18490                           
 18491                           ; BSR set to: 0
 18492  0020DC  C060  F060         	movff	___fladd@b,?___fladd
 18493  0020E0  C061  F061         	movff	___fladd@b+1,?___fladd+1
 18494  0020E4  C062  F062         	movff	___fladd@b+2,?___fladd+2
 18495  0020E8  C063  F063         	movff	___fladd@b+3,?___fladd+3
 18496  0020EC  D000               	goto	l2627
 18497  0020EE                     l2627:
 18498                           
 18499                           ; BSR set to: 0
 18500  0020EE  0012               	return		;funcret
 18501  0020F0                     __end_of___fladd:
 18502                           	opt stack 0
 18503                           tblptru	equ	0xFF8
 18504                           tblptrh	equ	0xFF7
 18505                           tblptrl	equ	0xFF6
 18506                           tablat	equ	0xFF5
 18507                           prodh	equ	0xFF4
 18508                           prodl	equ	0xFF3
 18509                           intcon	equ	0xFF2
 18510                           intcon3	equ	0xFF0
 18511                           postinc0	equ	0xFEE
 18512                           wreg	equ	0xFE8
 18513                           indf1	equ	0xFE7
 18514                           postdec1	equ	0xFE5
 18515                           fsr1h	equ	0xFE2
 18516                           fsr1l	equ	0xFE1
 18517                           indf2	equ	0xFDF
 18518                           fsr2h	equ	0xFDA
 18519                           fsr2l	equ	0xFD9
 18520                           status	equ	0xFD8
 18521                           
 18522 ;; *************** function _moteJoiningProcess *****************
 18523 ;; Defined at:
 18524 ;;		line 291 in file "../Includes/Board/MOTEapp.c"
 18525 ;; Parameters:    Size  Location     Type
 18526 ;;  messageReady    1    wreg     unsigned char 
 18527 ;;  changeStates    1   22[BANK0 ] unsigned char 
 18528 ;;  selectButton    1   23[BANK0 ] unsigned char 
 18529 ;; Auto vars:     Size  Location     Type
 18530 ;;  messageReady    1   27[BANK0 ] unsigned char 
 18531 ;;  readDataRate    1   25[BANK0 ] unsigned char 
 18532 ;;  joiningCompl    1   26[BANK0 ] unsigned char 
 18533 ;; Return value:  Size  Location     Type
 18534 ;;                  1    wreg      enum E6058
 18535 ;; Registers used:
 18536 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18537 ;; Tracked objects:
 18538 ;;		On entry : 0/0
 18539 ;;		On exit  : 0/0
 18540 ;;		Unchanged: 0/0
 18541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18542 ;;      Params:         0       2       0       0       0       0       0       0       0
 18543 ;;      Locals:         0       3       0       0       0       0       0       0       0
 18544 ;;      Temps:          0       1       0       0       0       0       0       0       0
 18545 ;;      Totals:         0       6       0       0       0       0       0       0       0
 18546 ;;Total ram usage:        6 bytes
 18547 ;; Hardware stack levels used:    1
 18548 ;; Hardware stack levels required when called:   16
 18549 ;; This function calls:
 18550 ;;		_DATAEE_WriteByte
 18551 ;;		_moteApp_delayms
 18552 ;;		_oled_clear
 18553 ;;		_oled_putString
 18554 ;;		_sendCommand
 18555 ;;		_strcmp
 18556 ;;		_strncmp
 18557 ;; This function is called by:
 18558 ;;		_moteHandler
 18559 ;; This function uses a non-reentrant model
 18560 ;;
 18561                           
 18562                           	psect	text51
 18563  0013E6                     __ptext51:
 18564                           	opt stack 0
 18565  0013E6                     _moteJoiningProcess:
 18566                           	opt stack 13
 18567                           
 18568                           ; BSR set to: 0
 18569                           ;incstack = 0
 18570                           ;moteJoiningProcess@messageReady stored from wreg
 18571  0013E6  0100               	movlb	0	; () banked
 18572  0013E8  6F7B               	movwf	moteJoiningProcess@messageReady& (0+255),b
 18573                           
 18574                           ;MOTEapp.c: 293: bool joiningComplete = 0;
 18575  0013EA  0E00               	movlw	0
 18576  0013EC  0100               	movlb	0	; () banked
 18577  0013EE  6F7A               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 18578                           
 18579                           ;MOTEapp.c: 295: switch (activeState)
 18580  0013F0  D38C               	goto	l13887
 18581  0013F2                     l390:
 18582  0013F2  D7FF               	goto	l390
 18583                           
 18584                           ;MOTEapp.c: 299: break;
 18585  0013F4  D3AE               	goto	l13889
 18586  0013F6                     l13705:
 18587                           
 18588                           ;MOTEapp.c: 301: sendCommand("sys reset");
 18589  0013F6  0EFC               	movlw	low STR_30
 18590  0013F8  0100               	movlb	0	; () banked
 18591  0013FA  6F61               	movwf	sendCommand@string& (0+255),b
 18592  0013FC  0E7E               	movlw	high STR_30
 18593  0013FE  0100               	movlb	0	; () banked
 18594  001400  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18595  001402  EC66  F037         	call	_sendCommand	;wreg free
 18596                           
 18597                           ;MOTEapp.c: 302: activeState = moteReset;
 18598  001406  0E01               	movlw	1
 18599  001408  0100               	movlb	0	; () banked
 18600  00140A  6FEB               	movwf	_activeState& (0+255),b
 18601                           
 18602                           ;MOTEapp.c: 303: break;
 18603  00140C  D3A2               	goto	l13889
 18604  00140E                     l13709:
 18605                           
 18606                           ; BSR set to: 0
 18607                           ;MOTEapp.c: 305: if (selectButton)
 18608  00140E  0100               	movlb	0	; () banked
 18609  001410  5177               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 18610  001412  0100               	movlb	0	; () banked
 18611  001414  B4D8               	btfsc	status,2,c
 18612  001416  D001               	goto	u13161
 18613  001418  D001               	goto	u13160
 18614  00141A                     u13161:
 18615  00141A  D003               	goto	l396
 18616  00141C                     u13160:
 18617                           
 18618                           ; BSR set to: 0
 18619                           ;MOTEapp.c: 306: {
 18620                           ;MOTEapp.c: 307: activeState = moteComFailure;
 18621  00141C  0E0A               	movlw	10
 18622  00141E  0100               	movlb	0	; () banked
 18623  001420  6FEB               	movwf	_activeState& (0+255),b
 18624  001422                     l396:
 18625                           
 18626                           ; BSR set to: 0
 18627                           ;MOTEapp.c: 308: }
 18628                           ;MOTEapp.c: 309: if ( messageReady )
 18629  001422  0100               	movlb	0	; () banked
 18630  001424  517B               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 18631  001426  0100               	movlb	0	; () banked
 18632  001428  B4D8               	btfsc	status,2,c
 18633  00142A  D001               	goto	u13171
 18634  00142C  D001               	goto	u13170
 18635  00142E                     u13171:
 18636  00142E  D391               	goto	l13889
 18637  001430                     u13170:
 18638                           
 18639                           ; BSR set to: 0
 18640                           ;MOTEapp.c: 310: {
 18641                           ;MOTEapp.c: 311: if(strncmp(moduleResonseBuffer, "RN24", 4) == 0)
 18642  001430  0E5D               	movlw	low _moduleResonseBuffer
 18643  001432  0100               	movlb	0	; () banked
 18644  001434  6F60               	movwf	strncmp@s1& (0+255),b
 18645  001436  0E01               	movlw	high _moduleResonseBuffer
 18646  001438  0100               	movlb	0	; () banked
 18647  00143A  6F61               	movwf	(strncmp@s1+1)& (0+255),b
 18648  00143C  0EB8               	movlw	low STR_31
 18649  00143E  0100               	movlb	0	; () banked
 18650  001440  6F62               	movwf	strncmp@s2& (0+255),b
 18651  001442  0E7F               	movlw	high STR_31
 18652  001444  0100               	movlb	0	; () banked
 18653  001446  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 18654  001448  0E00               	movlw	0
 18655  00144A  0100               	movlb	0	; () banked
 18656  00144C  6F65               	movwf	(strncmp@len+1)& (0+255),b
 18657  00144E  0E04               	movlw	4
 18658  001450  6F64               	movwf	strncmp@len& (0+255),b
 18659  001452  EC02  F02D         	call	_strncmp	;wreg free
 18660  001456  0100               	movlb	0	; () banked
 18661  001458  5160               	movf	?_strncmp& (0+255),w,b
 18662  00145A  0100               	movlb	0	; () banked
 18663  00145C  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 18664  00145E  A4D8               	btfss	status,2,c
 18665  001460  D001               	goto	u13181
 18666  001462  D001               	goto	u13180
 18667  001464                     u13181:
 18668  001464  D033               	goto	l13727
 18669  001466                     u13180:
 18670                           
 18671                           ; BSR set to: 0
 18672                           ;MOTEapp.c: 312: {
 18673                           ;MOTEapp.c: 313: rnModule = rn2483;
 18674  001466  0E00               	movlw	0
 18675  001468  0100               	movlb	0	; () banked
 18676  00146A  6FE2               	movwf	_rnModule& (0+255),b
 18677                           
 18678                           ; BSR set to: 0
 18679                           ;MOTEapp.c: 314: oled_clear();
 18680  00146C  ECA6  F038         	call	_oled_clear	;wreg free
 18681                           
 18682                           ;MOTEapp.c: 315: oled_putString(" Joining Method ",0,0);
 18683  001470  0E43               	movlw	low STR_32
 18684  001472  0100               	movlb	0	; () banked
 18685  001474  6F71               	movwf	oled_putString@string& (0+255),b
 18686  001476  0E7B               	movlw	high STR_32
 18687  001478  0100               	movlb	0	; () banked
 18688  00147A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18689  00147C  0E00               	movlw	0
 18690  00147E  0100               	movlb	0	; () banked
 18691  001480  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18692  001482  0E00               	movlw	0
 18693  001484  0100               	movlb	0	; () banked
 18694  001486  6F74               	movwf	oled_putString@start_page& (0+255),b
 18695  001488  EC8D  F030         	call	_oled_putString	;wreg free
 18696                           
 18697                           ;MOTEapp.c: 316: oled_putString("<- ABP   OTAA ->", 0,2);
 18698  00148C  0E98               	movlw	low STR_33
 18699  00148E  0100               	movlb	0	; () banked
 18700  001490  6F71               	movwf	oled_putString@string& (0+255),b
 18701  001492  0E7B               	movlw	high STR_33
 18702  001494  0100               	movlb	0	; () banked
 18703  001496  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18704  001498  0E00               	movlw	0
 18705  00149A  0100               	movlb	0	; () banked
 18706  00149C  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18707  00149E  0E02               	movlw	2
 18708  0014A0  0100               	movlb	0	; () banked
 18709  0014A2  6F74               	movwf	oled_putString@start_page& (0+255),b
 18710  0014A4  EC8D  F030         	call	_oled_putString	;wreg free
 18711                           
 18712                           ;MOTEapp.c: 317: oled_putString("  (S2)   (S3)   ", 0,3);
 18713  0014A8  0EEE               	movlw	low STR_34
 18714  0014AA  0100               	movlb	0	; () banked
 18715  0014AC  6F71               	movwf	oled_putString@string& (0+255),b
 18716  0014AE  0E7A               	movlw	high STR_34
 18717  0014B0  0100               	movlb	0	; () banked
 18718  0014B2  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18719  0014B4  0E00               	movlw	0
 18720  0014B6  0100               	movlb	0	; () banked
 18721  0014B8  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18722  0014BA  0E03               	movlw	3
 18723  0014BC  0100               	movlb	0	; () banked
 18724  0014BE  6F74               	movwf	oled_putString@start_page& (0+255),b
 18725  0014C0  EC8D  F030         	call	_oled_putString	;wreg free
 18726                           
 18727                           ;MOTEapp.c: 318: activeState = moteJoinMethod;
 18728  0014C4  0E02               	movlw	2
 18729  0014C6  0100               	movlb	0	; () banked
 18730  0014C8  6FEB               	movwf	_activeState& (0+255),b
 18731                           
 18732                           ;MOTEapp.c: 319: }
 18733  0014CA  D343               	goto	l13889
 18734  0014CC                     l13727:
 18735                           
 18736                           ; BSR set to: 0
 18737                           ;MOTEapp.c: 320: else if(strncmp(moduleResonseBuffer, "RN29", 4) == 0)
 18738  0014CC  0E5D               	movlw	low _moduleResonseBuffer
 18739  0014CE  0100               	movlb	0	; () banked
 18740  0014D0  6F60               	movwf	strncmp@s1& (0+255),b
 18741  0014D2  0E01               	movlw	high _moduleResonseBuffer
 18742  0014D4  0100               	movlb	0	; () banked
 18743  0014D6  6F61               	movwf	(strncmp@s1+1)& (0+255),b
 18744  0014D8  0EBD               	movlw	low STR_35
 18745  0014DA  0100               	movlb	0	; () banked
 18746  0014DC  6F62               	movwf	strncmp@s2& (0+255),b
 18747  0014DE  0E7F               	movlw	high STR_35
 18748  0014E0  0100               	movlb	0	; () banked
 18749  0014E2  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 18750  0014E4  0E00               	movlw	0
 18751  0014E6  0100               	movlb	0	; () banked
 18752  0014E8  6F65               	movwf	(strncmp@len+1)& (0+255),b
 18753  0014EA  0E04               	movlw	4
 18754  0014EC  6F64               	movwf	strncmp@len& (0+255),b
 18755  0014EE  EC02  F02D         	call	_strncmp	;wreg free
 18756  0014F2  0100               	movlb	0	; () banked
 18757  0014F4  5160               	movf	?_strncmp& (0+255),w,b
 18758  0014F6  0100               	movlb	0	; () banked
 18759  0014F8  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 18760  0014FA  A4D8               	btfss	status,2,c
 18761  0014FC  D001               	goto	u13191
 18762  0014FE  D001               	goto	u13190
 18763  001500                     u13191:
 18764  001500  D033               	goto	l13741
 18765  001502                     u13190:
 18766                           
 18767                           ; BSR set to: 0
 18768                           ;MOTEapp.c: 321: {
 18769                           ;MOTEapp.c: 322: rnModule = rn2903;
 18770  001502  0E01               	movlw	1
 18771  001504  0100               	movlb	0	; () banked
 18772  001506  6FE2               	movwf	_rnModule& (0+255),b
 18773                           
 18774                           ; BSR set to: 0
 18775                           ;MOTEapp.c: 323: oled_clear();
 18776  001508  ECA6  F038         	call	_oled_clear	;wreg free
 18777                           
 18778                           ;MOTEapp.c: 324: oled_putString(" Joining Method ",0,0);
 18779  00150C  0E43               	movlw	low STR_32
 18780  00150E  0100               	movlb	0	; () banked
 18781  001510  6F71               	movwf	oled_putString@string& (0+255),b
 18782  001512  0E7B               	movlw	high STR_32
 18783  001514  0100               	movlb	0	; () banked
 18784  001516  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18785  001518  0E00               	movlw	0
 18786  00151A  0100               	movlb	0	; () banked
 18787  00151C  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18788  00151E  0E00               	movlw	0
 18789  001520  0100               	movlb	0	; () banked
 18790  001522  6F74               	movwf	oled_putString@start_page& (0+255),b
 18791  001524  EC8D  F030         	call	_oled_putString	;wreg free
 18792                           
 18793                           ;MOTEapp.c: 325: oled_putString("<- ABP   OTAA ->", 0,2);
 18794  001528  0E98               	movlw	low STR_33
 18795  00152A  0100               	movlb	0	; () banked
 18796  00152C  6F71               	movwf	oled_putString@string& (0+255),b
 18797  00152E  0E7B               	movlw	high STR_33
 18798  001530  0100               	movlb	0	; () banked
 18799  001532  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18800  001534  0E00               	movlw	0
 18801  001536  0100               	movlb	0	; () banked
 18802  001538  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18803  00153A  0E02               	movlw	2
 18804  00153C  0100               	movlb	0	; () banked
 18805  00153E  6F74               	movwf	oled_putString@start_page& (0+255),b
 18806  001540  EC8D  F030         	call	_oled_putString	;wreg free
 18807                           
 18808                           ;MOTEapp.c: 326: oled_putString("  (S2)   (S3)   ", 0,3);
 18809  001544  0EEE               	movlw	low STR_34
 18810  001546  0100               	movlb	0	; () banked
 18811  001548  6F71               	movwf	oled_putString@string& (0+255),b
 18812  00154A  0E7A               	movlw	high STR_34
 18813  00154C  0100               	movlb	0	; () banked
 18814  00154E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18815  001550  0E00               	movlw	0
 18816  001552  0100               	movlb	0	; () banked
 18817  001554  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18818  001556  0E03               	movlw	3
 18819  001558  0100               	movlb	0	; () banked
 18820  00155A  6F74               	movwf	oled_putString@start_page& (0+255),b
 18821  00155C  EC8D  F030         	call	_oled_putString	;wreg free
 18822                           
 18823                           ;MOTEapp.c: 327: activeState = moteJoinMethod;
 18824  001560  0E02               	movlw	2
 18825  001562  0100               	movlb	0	; () banked
 18826  001564  6FEB               	movwf	_activeState& (0+255),b
 18827                           
 18828                           ;MOTEapp.c: 328: }
 18829  001566  D2F5               	goto	l13889
 18830  001568                     l13741:
 18831                           
 18832                           ; BSR set to: 0
 18833                           ;MOTEapp.c: 329: else
 18834                           ;MOTEapp.c: 330: {
 18835                           ;MOTEapp.c: 331: sendCommand("sys reset");
 18836  001568  0EFC               	movlw	low STR_30
 18837  00156A  0100               	movlb	0	; () banked
 18838  00156C  6F61               	movwf	sendCommand@string& (0+255),b
 18839  00156E  0E7E               	movlw	high STR_30
 18840  001570  0100               	movlb	0	; () banked
 18841  001572  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18842  001574  EC66  F037         	call	_sendCommand	;wreg free
 18843                           
 18844                           ;MOTEapp.c: 332: moteApp_delayms(25);
 18845  001578  0E00               	movlw	0
 18846  00157A  0100               	movlb	0	; () banked
 18847  00157C  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 18848  00157E  0E19               	movlw	25
 18849  001580  6F60               	movwf	moteApp_delayms@length& (0+255),b
 18850  001582  EC91  F036         	call	_moteApp_delayms	;wreg free
 18851                           
 18852                           ;MOTEapp.c: 333: activeState = moteStartup;
 18853  001586  0E00               	movlw	0
 18854  001588  0100               	movlb	0	; () banked
 18855  00158A  6FEB               	movwf	_activeState& (0+255),b
 18856  00158C  D2E2               	goto	l13889
 18857                           
 18858                           ; BSR set to: 0
 18859  00158E  D2E1               	goto	l13889
 18860                           
 18861                           ; BSR set to: 0
 18862  001590  D2E0               	goto	l13889
 18863                           
 18864                           ; BSR set to: 0
 18865                           ;MOTEapp.c: 334: }
 18866                           ;MOTEapp.c: 335: }
 18867                           ;MOTEapp.c: 336: break;
 18868  001592  D2DF               	goto	l13889
 18869  001594                     l13747:
 18870                           
 18871                           ; BSR set to: 0
 18872                           ;MOTEapp.c: 338: if (changeStates)
 18873  001594  0100               	movlb	0	; () banked
 18874  001596  5176               	movf	moteJoiningProcess@changeStates& (0+255),w,b
 18875  001598  0100               	movlb	0	; () banked
 18876  00159A  B4D8               	btfsc	status,2,c
 18877  00159C  D001               	goto	u13201
 18878  00159E  D001               	goto	u13200
 18879  0015A0                     u13201:
 18880  0015A0  D021               	goto	l13757
 18881  0015A2                     u13200:
 18882                           
 18883                           ; BSR set to: 0
 18884                           ;MOTEapp.c: 339: {
 18885                           ;MOTEapp.c: 340: oled_putString("  (S2)          ", 0,3);
 18886  0015A2  0EBB               	movlw	low STR_40
 18887  0015A4  0100               	movlb	0	; () banked
 18888  0015A6  6F71               	movwf	oled_putString@string& (0+255),b
 18889  0015A8  0E7A               	movlw	high STR_40
 18890  0015AA  0100               	movlb	0	; () banked
 18891  0015AC  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18892  0015AE  0E00               	movlw	0
 18893  0015B0  0100               	movlb	0	; () banked
 18894  0015B2  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18895  0015B4  0E03               	movlw	3
 18896  0015B6  0100               	movlb	0	; () banked
 18897  0015B8  6F74               	movwf	oled_putString@start_page& (0+255),b
 18898  0015BA  EC8D  F030         	call	_oled_putString	;wreg free
 18899                           
 18900                           ;MOTEapp.c: 341: moteApp_delayms(500);
 18901  0015BE  0E01               	movlw	1
 18902  0015C0  0100               	movlb	0	; () banked
 18903  0015C2  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 18904  0015C4  0EF4               	movlw	244
 18905  0015C6  6F60               	movwf	moteApp_delayms@length& (0+255),b
 18906  0015C8  EC91  F036         	call	_moteApp_delayms	;wreg free
 18907                           
 18908                           ;MOTEapp.c: 342: sendCommand("mac join abp");
 18909  0015CC  0EE7               	movlw	low STR_41
 18910  0015CE  0100               	movlb	0	; () banked
 18911  0015D0  6F61               	movwf	sendCommand@string& (0+255),b
 18912  0015D2  0E7D               	movlw	high STR_41
 18913  0015D4  0100               	movlb	0	; () banked
 18914  0015D6  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18915  0015D8  EC66  F037         	call	_sendCommand	;wreg free
 18916                           
 18917                           ;MOTEapp.c: 343: activeState = moteCheckAbp;
 18918  0015DC  0E03               	movlw	3
 18919  0015DE  0100               	movlb	0	; () banked
 18920  0015E0  6FEB               	movwf	_activeState& (0+255),b
 18921                           
 18922                           ;MOTEapp.c: 344: }
 18923  0015E2  D2B7               	goto	l13889
 18924  0015E4                     l13757:
 18925                           
 18926                           ; BSR set to: 0
 18927                           ;MOTEapp.c: 345: else if (selectButton)
 18928  0015E4  0100               	movlb	0	; () banked
 18929  0015E6  5177               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 18930  0015E8  0100               	movlb	0	; () banked
 18931  0015EA  B4D8               	btfsc	status,2,c
 18932  0015EC  D001               	goto	u13211
 18933  0015EE  D001               	goto	u13210
 18934  0015F0                     u13211:
 18935  0015F0  D2B0               	goto	l13889
 18936  0015F2                     u13210:
 18937                           
 18938                           ; BSR set to: 0
 18939                           ;MOTEapp.c: 346: {
 18940                           ;MOTEapp.c: 347: oled_putString("         (S3)   ", 0,3);
 18941  0015F2  0EDD               	movlw	low STR_42
 18942  0015F4  0100               	movlb	0	; () banked
 18943  0015F6  6F71               	movwf	oled_putString@string& (0+255),b
 18944  0015F8  0E7A               	movlw	high STR_42
 18945  0015FA  0100               	movlb	0	; () banked
 18946  0015FC  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18947  0015FE  0E00               	movlw	0
 18948  001600  0100               	movlb	0	; () banked
 18949  001602  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18950  001604  0E03               	movlw	3
 18951  001606  0100               	movlb	0	; () banked
 18952  001608  6F74               	movwf	oled_putString@start_page& (0+255),b
 18953  00160A  EC8D  F030         	call	_oled_putString	;wreg free
 18954                           
 18955                           ;MOTEapp.c: 348: moteApp_delayms(500);
 18956  00160E  0E01               	movlw	1
 18957  001610  0100               	movlb	0	; () banked
 18958  001612  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 18959  001614  0EF4               	movlw	244
 18960  001616  6F60               	movwf	moteApp_delayms@length& (0+255),b
 18961  001618  EC91  F036         	call	_moteApp_delayms	;wreg free
 18962                           
 18963                           ;MOTEapp.c: 349: sendCommand("mac join otaa");
 18964  00161C  0E3B               	movlw	low STR_43
 18965  00161E  0100               	movlb	0	; () banked
 18966  001620  6F61               	movwf	sendCommand@string& (0+255),b
 18967  001622  0E7D               	movlw	high STR_43
 18968  001624  0100               	movlb	0	; () banked
 18969  001626  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18970  001628  EC66  F037         	call	_sendCommand	;wreg free
 18971                           
 18972                           ;MOTEapp.c: 350: activeState = moteCheckOtaa;
 18973  00162C  0E05               	movlw	5
 18974  00162E  0100               	movlb	0	; () banked
 18975  001630  6FEB               	movwf	_activeState& (0+255),b
 18976  001632  D28F               	goto	l13889
 18977                           
 18978                           ; BSR set to: 0
 18979  001634  D28E               	goto	l13889
 18980                           
 18981                           ; BSR set to: 0
 18982                           ;MOTEapp.c: 351: }
 18983                           ;MOTEapp.c: 352: break;
 18984  001636  D28D               	goto	l13889
 18985  001638                     l13767:
 18986                           
 18987                           ; BSR set to: 0
 18988                           ;MOTEapp.c: 354: if ( messageReady )
 18989  001638  0100               	movlb	0	; () banked
 18990  00163A  517B               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 18991  00163C  0100               	movlb	0	; () banked
 18992  00163E  B4D8               	btfsc	status,2,c
 18993  001640  D001               	goto	u13221
 18994  001642  D001               	goto	u13220
 18995  001644                     u13221:
 18996  001644  D286               	goto	l13889
 18997  001646                     u13220:
 18998                           
 18999                           ; BSR set to: 0
 19000                           ;MOTEapp.c: 355: {
 19001                           ;MOTEapp.c: 356: if(strcmp(moduleResonseBuffer, "ok") == 0)
 19002  001646  0E5D               	movlw	low _moduleResonseBuffer
 19003  001648  0100               	movlb	0	; () banked
 19004  00164A  6F60               	movwf	strcmp@s1& (0+255),b
 19005  00164C  0E01               	movlw	high _moduleResonseBuffer
 19006  00164E  0100               	movlb	0	; () banked
 19007  001650  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 19008  001652  0EF7               	movlw	low STR_44
 19009  001654  0100               	movlb	0	; () banked
 19010  001656  6F62               	movwf	strcmp@s2& (0+255),b
 19011  001658  0E7F               	movlw	high STR_44
 19012  00165A  0100               	movlb	0	; () banked
 19013  00165C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 19014  00165E  ECD5  F033         	call	_strcmp	;wreg free
 19015  001662  0100               	movlb	0	; () banked
 19016  001664  5160               	movf	?_strcmp& (0+255),w,b
 19017  001666  0100               	movlb	0	; () banked
 19018  001668  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 19019  00166A  A4D8               	btfss	status,2,c
 19020  00166C  D001               	goto	u13231
 19021  00166E  D001               	goto	u13230
 19022  001670                     u13231:
 19023  001670  D004               	goto	l13773
 19024  001672                     u13230:
 19025                           
 19026                           ; BSR set to: 0
 19027                           ;MOTEapp.c: 357: {
 19028                           ;MOTEapp.c: 358: activeState = moteWaitAbp;
 19029  001672  0E04               	movlw	4
 19030  001674  0100               	movlb	0	; () banked
 19031  001676  6FEB               	movwf	_activeState& (0+255),b
 19032                           
 19033                           ;MOTEapp.c: 359: }
 19034  001678  D26C               	goto	l13889
 19035  00167A                     l13773:
 19036                           
 19037                           ; BSR set to: 0
 19038                           ;MOTEapp.c: 360: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 19039  00167A  0E5D               	movlw	low _moduleResonseBuffer
 19040  00167C  0100               	movlb	0	; () banked
 19041  00167E  6F60               	movwf	strcmp@s1& (0+255),b
 19042  001680  0E01               	movlw	high _moduleResonseBuffer
 19043  001682  0100               	movlb	0	; () banked
 19044  001684  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 19045  001686  0E57               	movlw	low STR_45
 19046  001688  0100               	movlb	0	; () banked
 19047  00168A  6F62               	movwf	strcmp@s2& (0+255),b
 19048  00168C  0E7D               	movlw	high STR_45
 19049  00168E  0100               	movlb	0	; () banked
 19050  001690  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 19051  001692  ECD5  F033         	call	_strcmp	;wreg free
 19052  001696  0100               	movlb	0	; () banked
 19053  001698  5160               	movf	?_strcmp& (0+255),w,b
 19054  00169A  0100               	movlb	0	; () banked
 19055  00169C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 19056  00169E  A4D8               	btfss	status,2,c
 19057  0016A0  D001               	goto	u13241
 19058  0016A2  D001               	goto	u13240
 19059  0016A4                     u13241:
 19060  0016A4  D022               	goto	l13783
 19061  0016A6                     u13240:
 19062                           
 19063                           ; BSR set to: 0
 19064                           ;MOTEapp.c: 361: {
 19065                           ;MOTEapp.c: 362: oled_clear();
 19066  0016A6  ECA6  F038         	call	_oled_clear	;wreg free
 19067                           
 19068                           ;MOTEapp.c: 363: oled_putString("Valid Keys",0,0);
 19069  0016AA  0EB4               	movlw	low STR_46
 19070  0016AC  0100               	movlb	0	; () banked
 19071  0016AE  6F71               	movwf	oled_putString@string& (0+255),b
 19072  0016B0  0E7E               	movlw	high STR_46
 19073  0016B2  0100               	movlb	0	; () banked
 19074  0016B4  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 19075  0016B6  0E00               	movlw	0
 19076  0016B8  0100               	movlb	0	; () banked
 19077  0016BA  6F73               	movwf	oled_putString@station_dot& (0+255),b
 19078  0016BC  0E00               	movlw	0
 19079  0016BE  0100               	movlb	0	; () banked
 19080  0016C0  6F74               	movwf	oled_putString@start_page& (0+255),b
 19081  0016C2  EC8D  F030         	call	_oled_putString	;wreg free
 19082                           
 19083                           ;MOTEapp.c: 364: oled_putString("Required",0,1);
 19084  0016C6  0E19               	movlw	low STR_47
 19085  0016C8  0100               	movlb	0	; () banked
 19086  0016CA  6F71               	movwf	oled_putString@string& (0+255),b
 19087  0016CC  0E7F               	movlw	high STR_47
 19088  0016CE  0100               	movlb	0	; () banked
 19089  0016D0  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 19090  0016D2  0E00               	movlw	0
 19091  0016D4  0100               	movlb	0	; () banked
 19092  0016D6  6F73               	movwf	oled_putString@station_dot& (0+255),b
 19093  0016D8  0E01               	movlw	1
 19094  0016DA  0100               	movlb	0	; () banked
 19095  0016DC  6F74               	movwf	oled_putString@start_page& (0+255),b
 19096  0016DE  EC8D  F030         	call	_oled_putString	;wreg free
 19097                           
 19098                           ;MOTEapp.c: 365: activeState = moteNeedKeys;
 19099  0016E2  0E09               	movlw	9
 19100  0016E4  0100               	movlb	0	; () banked
 19101  0016E6  6FEB               	movwf	_activeState& (0+255),b
 19102                           
 19103                           ;MOTEapp.c: 366: }
 19104  0016E8  D234               	goto	l13889
 19105  0016EA                     l13783:
 19106                           
 19107                           ; BSR set to: 0
 19108                           ;MOTEapp.c: 367: else
 19109                           ;MOTEapp.c: 368: {
 19110                           ;MOTEapp.c: 369: sendCommand("mac join abp");
 19111  0016EA  0EE7               	movlw	low STR_41
 19112  0016EC  0100               	movlb	0	; () banked
 19113  0016EE  6F61               	movwf	sendCommand@string& (0+255),b
 19114  0016F0  0E7D               	movlw	high STR_41
 19115  0016F2  0100               	movlb	0	; () banked
 19116  0016F4  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 19117  0016F6  EC66  F037         	call	_sendCommand	;wreg free
 19118                           
 19119                           ;MOTEapp.c: 370: activeState = moteCheckAbp;
 19120  0016FA  0E03               	movlw	3
 19121  0016FC  0100               	movlb	0	; () banked
 19122  0016FE  6FEB               	movwf	_activeState& (0+255),b
 19123  001700  D228               	goto	l13889
 19124                           
 19125                           ; BSR set to: 0
 19126  001702  D227               	goto	l13889
 19127                           
 19128                           ; BSR set to: 0
 19129  001704  D226               	goto	l13889
 19130                           
 19131                           ; BSR set to: 0
 19132                           ;MOTEapp.c: 371: }
 19133                           ;MOTEapp.c: 372: }
 19134                           ;MOTEapp.c: 373: break;
 19135  001706  D225               	goto	l13889
 19136  001708                     l13787:
 19137                           
 19138                           ; BSR set to: 0
 19139                           ;MOTEapp.c: 375: if ( messageReady )
 19140  001708  0100               	movlb	0	; () banked
 19141  00170A  517B               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 19142  00170C  0100               	movlb	0	; () banked
 19143  00170E  B4D8               	btfsc	status,2,c
 19144  001710  D001               	goto	u13251
 19145  001712  D001               	goto	u13250
 19146  001714                     u13251:
 19147  001714  D21E               	goto	l13889
 19148  001716                     u13250:
 19149                           
 19150                           ; BSR set to: 0
 19151                           ;MOTEapp.c: 376: {
 19152                           ;MOTEapp.c: 377: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 19153  001716  0E5D               	movlw	low _moduleResonseBuffer
 19154  001718  0100               	movlb	0	; () banked
 19155  00171A  6F60               	movwf	strcmp@s1& (0+255),b
 19156  00171C  0E01               	movlw	high _moduleResonseBuffer
 19157  00171E  0100               	movlb	0	; () banked
 19158  001720  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 19159  001722  0E22               	movlw	low STR_49
 19160  001724  0100               	movlb	0	; () banked
 19161  001726  6F62               	movwf	strcmp@s2& (0+255),b
 19162  001728  0E7F               	movlw	high STR_49
 19163  00172A  0100               	movlb	0	; () banked
 19164  00172C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 19165  00172E  ECD5  F033         	call	_strcmp	;wreg free
 19166  001732  0100               	movlb	0	; () banked
 19167  001734  5160               	movf	?_strcmp& (0+255),w,b
 19168  001736  0100               	movlb	0	; () banked
 19169  001738  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 19170  00173A  A4D8               	btfss	status,2,c
 19171  00173C  D001               	goto	u13261
 19172  00173E  D001               	goto	u13260
 19173  001740                     u13261:
 19174  001740  D022               	goto	l13799
 19175  001742                     u13260:
 19176                           
 19177                           ; BSR set to: 0
 19178                           ;MOTEapp.c: 378: {
 19179                           ;MOTEapp.c: 379: oled_clear();
 19180  001742  ECA6  F038         	call	_oled_clear	;wreg free
 19181                           
 19182                           ;MOTEapp.c: 380: oled_putString("ABP Join ",0,0);
 19183  001746  0ED4               	movlw	low STR_50
 19184  001748  0100               	movlb	0	; () banked
 19185  00174A  6F71               	movwf	oled_putString@string& (0+255),b
 19186  00174C  0E7E               	movlw	high STR_50
 19187  00174E  0100               	movlb	0	; () banked
 19188  001750  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 19189  001752  0E00               	movlw	0
 19190  001754  0100               	movlb	0	; () banked
 19191  001756  6F73               	movwf	oled_putString@station_dot& (0+255),b
 19192  001758  0E00               	movlw	0
 19193  00175A  0100               	movlb	0	; () banked
 19194  00175C  6F74               	movwf	oled_putString@start_page& (0+255),b
 19195  00175E  EC8D  F030         	call	_oled_putString	;wreg free
 19196                           
 19197                           ;MOTEapp.c: 381: oled_putString("Successful",0,1);
 19198  001762  0E9E               	movlw	low STR_51
 19199  001764  0100               	movlb	0	; () banked
 19200  001766  6F71               	movwf	oled_putString@string& (0+255),b
 19201  001768  0E7E               	movlw	high STR_51
 19202  00176A  0100               	movlb	0	; () banked
 19203  00176C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 19204  00176E  0E00               	movlw	0
 19205  001770  0100               	movlb	0	; () banked
 19206  001772  6F73               	movwf	oled_putString@station_dot& (0+255),b
 19207  001774  0E01               	movlw	1
 19208  001776  0100               	movlb	0	; () banked
 19209  001778  6F74               	movwf	oled_putString@start_page& (0+255),b
 19210  00177A  EC8D  F030         	call	_oled_putString	;wreg free
 19211                           
 19212                           ;MOTEapp.c: 382: activeState = moteJoined;
 19213  00177E  0E07               	movlw	7
 19214  001780  0100               	movlb	0	; () banked
 19215  001782  6FEB               	movwf	_activeState& (0+255),b
 19216                           
 19217                           ;MOTEapp.c: 383: }
 19218  001784  D1E6               	goto	l13889
 19219  001786                     l13799:
 19220                           
 19221                           ; BSR set to: 0
 19222                           ;MOTEapp.c: 384: else
 19223                           ;MOTEapp.c: 385: {
 19224                           ;MOTEapp.c: 386: sendCommand("mac reset");
 19225  001786  0EF2               	movlw	low STR_52
 19226  001788  0100               	movlb	0	; () banked
 19227  00178A  6F61               	movwf	sendCommand@string& (0+255),b
 19228  00178C  0E7E               	movlw	high STR_52
 19229  00178E  0100               	movlb	0	; () banked
 19230  001790  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 19231  001792  EC66  F037         	call	_sendCommand	;wreg free
 19232                           
 19233                           ;MOTEapp.c: 387: activeState = moteReset;
 19234  001796  0E01               	movlw	1
 19235  001798  0100               	movlb	0	; () banked
 19236  00179A  6FEB               	movwf	_activeState& (0+255),b
 19237  00179C  D1DA               	goto	l13889
 19238                           
 19239                           ; BSR set to: 0
 19240  00179E  D1D9               	goto	l13889
 19241                           
 19242                           ; BSR set to: 0
 19243                           ;MOTEapp.c: 388: }
 19244                           ;MOTEapp.c: 389: }
 19245                           ;MOTEapp.c: 390: break;
 19246  0017A0  D1D8               	goto	l13889
 19247  0017A2                     l13803:
 19248                           
 19249                           ; BSR set to: 0
 19250                           ;MOTEapp.c: 393: if ( messageReady )
 19251  0017A2  0100               	movlb	0	; () banked
 19252  0017A4  517B               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 19253  0017A6  0100               	movlb	0	; () banked
 19254  0017A8  B4D8               	btfsc	status,2,c
 19255  0017AA  D001               	goto	u13271
 19256  0017AC  D001               	goto	u13270
 19257  0017AE                     u13271:
 19258  0017AE  D1D1               	goto	l13889
 19259  0017B0                     u13270:
 19260                           
 19261                           ; BSR set to: 0
 19262                           ;MOTEapp.c: 394: {
 19263                           ;MOTEapp.c: 395: if(strcmp(moduleResonseBuffer, "ok") == 0)
 19264  0017B0  0E5D               	movlw	low _moduleResonseBuffer
 19265  0017B2  0100               	movlb	0	; () banked
 19266  0017B4  6F60               	movwf	strcmp@s1& (0+255),b
 19267  0017B6  0E01               	movlw	high _moduleResonseBuffer
 19268  0017B8  0100               	movlb	0	; () banked
 19269  0017BA  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 19270  0017BC  0EF7               	movlw	low STR_44
 19271  0017BE  0100               	movlb	0	; () banked
 19272  0017C0  6F62               	movwf	strcmp@s2& (0+255),b
 19273  0017C2  0E7F               	movlw	high STR_44
 19274  0017C4  0100               	movlb	0	; () banked
 19275  0017C6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 19276  0017C8  ECD5  F033         	call	_strcmp	;wreg free
 19277  0017CC  0100               	movlb	0	; () banked
 19278  0017CE  5160               	movf	?_strcmp& (0+255),w,b
 19279  0017D0  0100               	movlb	0	; () banked
 19280  0017D2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 19281  0017D4  A4D8               	btfss	status,2,c
 19282  0017D6  D001               	goto	u13281
 19283  0017D8  D001               	goto	u13280
 19284  0017DA                     u13281:
 19285  0017DA  D004               	goto	l13809
 19286  0017DC                     u13280:
 19287                           
 19288                           ; BSR set to: 0
 19289                           ;MOTEapp.c: 396: {
 19290                           ;MOTEapp.c: 397: activeState = moteWaitOtaa;
 19291  0017DC  0E06               	movlw	6
 19292  0017DE  0100               	movlb	0	; () banked
 19293  0017E0  6FEB               	movwf	_activeState& (0+255),b
 19294                           
 19295                           ;MOTEapp.c: 398: }
 19296  0017E2  D1B7               	goto	l13889
 19297  0017E4                     l13809:
 19298                           
 19299                           ; BSR set to: 0
 19300                           ;MOTEapp.c: 399: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 19301  0017E4  0E5D               	movlw	low _moduleResonseBuffer
 19302  0017E6  0100               	movlb	0	; () banked
 19303  0017E8  6F60               	movwf	strcmp@s1& (0+255),b
 19304  0017EA  0E01               	movlw	high _moduleResonseBuffer
 19305  0017EC  0100               	movlb	0	; () banked
 19306  0017EE  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 19307  0017F0  0E57               	movlw	low STR_45
 19308  0017F2  0100               	movlb	0	; () banked
 19309  0017F4  6F62               	movwf	strcmp@s2& (0+255),b
 19310  0017F6  0E7D               	movlw	high STR_45
 19311  0017F8  0100               	movlb	0	; () banked
 19312  0017FA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 19313  0017FC  ECD5  F033         	call	_strcmp	;wreg free
 19314  001800  0100               	movlb	0	; () banked
 19315  001802  5160               	movf	?_strcmp& (0+255),w,b
 19316  001804  0100               	movlb	0	; () banked
 19317  001806  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 19318  001808  A4D8               	btfss	status,2,c
 19319  00180A  D001               	goto	u13291
 19320  00180C  D001               	goto	u13290
 19321  00180E                     u13291:
 19322  00180E  D022               	goto	l13819
 19323  001810                     u13290:
 19324                           
 19325                           ; BSR set to: 0
 19326                           ;MOTEapp.c: 400: {
 19327                           ;MOTEapp.c: 401: oled_clear();
 19328  001810  ECA6  F038         	call	_oled_clear	;wreg free
 19329                           
 19330                           ;MOTEapp.c: 402: oled_putString("Valid Keys",0,0);
 19331  001814  0EB4               	movlw	low STR_46
 19332  001816  0100               	movlb	0	; () banked
 19333  001818  6F71               	movwf	oled_putString@string& (0+255),b
 19334  00181A  0E7E               	movlw	high STR_46
 19335  00181C  0100               	movlb	0	; () banked
 19336  00181E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 19337  001820  0E00               	movlw	0
 19338  001822  0100               	movlb	0	; () banked
 19339  001824  6F73               	movwf	oled_putString@station_dot& (0+255),b
 19340  001826  0E00               	movlw	0
 19341  001828  0100               	movlb	0	; () banked
 19342  00182A  6F74               	movwf	oled_putString@start_page& (0+255),b
 19343  00182C  EC8D  F030         	call	_oled_putString	;wreg free
 19344                           
 19345                           ;MOTEapp.c: 403: oled_putString("Required",0,1);
 19346  001830  0E19               	movlw	low STR_47
 19347  001832  0100               	movlb	0	; () banked
 19348  001834  6F71               	movwf	oled_putString@string& (0+255),b
 19349  001836  0E7F               	movlw	high STR_47
 19350  001838  0100               	movlb	0	; () banked
 19351  00183A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 19352  00183C  0E00               	movlw	0
 19353  00183E  0100               	movlb	0	; () banked
 19354  001840  6F73               	movwf	oled_putString@station_dot& (0+255),b
 19355  001842  0E01               	movlw	1
 19356  001844  0100               	movlb	0	; () banked
 19357  001846  6F74               	movwf	oled_putString@start_page& (0+255),b
 19358  001848  EC8D  F030         	call	_oled_putString	;wreg free
 19359                           
 19360                           ;MOTEapp.c: 404: activeState = moteNeedKeys;
 19361  00184C  0E09               	movlw	9
 19362  00184E  0100               	movlb	0	; () banked
 19363  001850  6FEB               	movwf	_activeState& (0+255),b
 19364                           
 19365                           ;MOTEapp.c: 405: }
 19366  001852  D17F               	goto	l13889
 19367  001854                     l13819:
 19368                           
 19369                           ; BSR set to: 0
 19370                           ;MOTEapp.c: 406: else if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 19371  001854  0E5D               	movlw	low _moduleResonseBuffer
 19372  001856  0100               	movlb	0	; () banked
 19373  001858  6F60               	movwf	strcmp@s1& (0+255),b
 19374  00185A  0E01               	movlw	high _moduleResonseBuffer
 19375  00185C  0100               	movlb	0	; () banked
 19376  00185E  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 19377  001860  0E49               	movlw	low STR_57
 19378  001862  0100               	movlb	0	; () banked
 19379  001864  6F62               	movwf	strcmp@s2& (0+255),b
 19380  001866  0E7D               	movlw	high STR_57
 19381  001868  0100               	movlb	0	; () banked
 19382  00186A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 19383  00186C  ECD5  F033         	call	_strcmp	;wreg free
 19384  001870  0100               	movlb	0	; () banked
 19385  001872  5160               	movf	?_strcmp& (0+255),w,b
 19386  001874  0100               	movlb	0	; () banked
 19387  001876  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 19388  001878  A4D8               	btfss	status,2,c
 19389  00187A  D001               	goto	u13301
 19390  00187C  D001               	goto	u13300
 19391  00187E                     u13301:
 19392  00187E  D00C               	goto	l13825
 19393  001880                     u13300:
 19394                           
 19395                           ; BSR set to: 0
 19396                           ;MOTEapp.c: 407: {
 19397                           ;MOTEapp.c: 408: sendCommand("mac join otaa");
 19398  001880  0E3B               	movlw	low STR_43
 19399  001882  0100               	movlb	0	; () banked
 19400  001884  6F61               	movwf	sendCommand@string& (0+255),b
 19401  001886  0E7D               	movlw	high STR_43
 19402  001888  0100               	movlb	0	; () banked
 19403  00188A  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 19404  00188C  EC66  F037         	call	_sendCommand	;wreg free
 19405                           
 19406                           ;MOTEapp.c: 409: activeState = moteCheckOtaa;
 19407  001890  0E05               	movlw	5
 19408  001892  0100               	movlb	0	; () banked
 19409  001894  6FEB               	movwf	_activeState& (0+255),b
 19410                           
 19411                           ;MOTEapp.c: 410: }
 19412  001896  D15D               	goto	l13889
 19413  001898                     l13825:
 19414                           
 19415                           ; BSR set to: 0
 19416                           ;MOTEapp.c: 411: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 19417  001898  0E5D               	movlw	low _moduleResonseBuffer
 19418  00189A  0100               	movlb	0	; () banked
 19419  00189C  6F60               	movwf	strcmp@s1& (0+255),b
 19420  00189E  0E01               	movlw	high _moduleResonseBuffer
 19421  0018A0  0100               	movlb	0	; () banked
 19422  0018A2  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 19423  0018A4  0E93               	movlw	low STR_59
 19424  0018A6  0100               	movlb	0	; () banked
 19425  0018A8  6F62               	movwf	strcmp@s2& (0+255),b
 19426  0018AA  0E7E               	movlw	high STR_59
 19427  0018AC  0100               	movlb	0	; () banked
 19428  0018AE  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 19429  0018B0  ECD5  F033         	call	_strcmp	;wreg free
 19430  0018B4  0100               	movlb	0	; () banked
 19431  0018B6  5160               	movf	?_strcmp& (0+255),w,b
 19432  0018B8  0100               	movlb	0	; () banked
 19433  0018BA  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 19434  0018BC  A4D8               	btfss	status,2,c
 19435  0018BE  D001               	goto	u13311
 19436  0018C0  D001               	goto	u13310
 19437  0018C2                     u13311:
 19438  0018C2  D147               	goto	l13889
 19439  0018C4                     u13310:
 19440                           
 19441                           ; BSR set to: 0
 19442                           ;MOTEapp.c: 412: {
 19443                           ;MOTEapp.c: 413: activeState = moteStartup;
 19444  0018C4  0E00               	movlw	0
 19445  0018C6  0100               	movlb	0	; () banked
 19446  0018C8  6FEB               	movwf	_activeState& (0+255),b
 19447  0018CA  D143               	goto	l13889
 19448                           
 19449                           ; BSR set to: 0
 19450  0018CC  D142               	goto	l13889
 19451                           
 19452                           ; BSR set to: 0
 19453  0018CE  D141               	goto	l13889
 19454                           
 19455                           ; BSR set to: 0
 19456  0018D0  D140               	goto	l13889
 19457                           
 19458                           ; BSR set to: 0
 19459  0018D2  D13F               	goto	l13889
 19460                           
 19461                           ; BSR set to: 0
 19462                           ;MOTEapp.c: 414: }
 19463                           ;MOTEapp.c: 415: }
 19464                           ;MOTEapp.c: 416: break;
 19465  0018D4  D13E               	goto	l13889
 19466  0018D6                     l13829:
 19467                           
 19468                           ; BSR set to: 0
 19469                           ;MOTEapp.c: 418: if ( messageReady )
 19470  0018D6  0100               	movlb	0	; () banked
 19471  0018D8  517B               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 19472  0018DA  0100               	movlb	0	; () banked
 19473  0018DC  B4D8               	btfsc	status,2,c
 19474  0018DE  D001               	goto	u13321
 19475  0018E0  D001               	goto	u13320
 19476  0018E2                     u13321:
 19477  0018E2  D137               	goto	l13889
 19478  0018E4                     u13320:
 19479                           
 19480                           ; BSR set to: 0
 19481                           ;MOTEapp.c: 419: {
 19482                           ;MOTEapp.c: 420: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 19483  0018E4  0E5D               	movlw	low _moduleResonseBuffer
 19484  0018E6  0100               	movlb	0	; () banked
 19485  0018E8  6F60               	movwf	strcmp@s1& (0+255),b
 19486  0018EA  0E01               	movlw	high _moduleResonseBuffer
 19487  0018EC  0100               	movlb	0	; () banked
 19488  0018EE  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 19489  0018F0  0E22               	movlw	low STR_49
 19490  0018F2  0100               	movlb	0	; () banked
 19491  0018F4  6F62               	movwf	strcmp@s2& (0+255),b
 19492  0018F6  0E7F               	movlw	high STR_49
 19493  0018F8  0100               	movlb	0	; () banked
 19494  0018FA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 19495  0018FC  ECD5  F033         	call	_strcmp	;wreg free
 19496  001900  0100               	movlb	0	; () banked
 19497  001902  5160               	movf	?_strcmp& (0+255),w,b
 19498  001904  0100               	movlb	0	; () banked
 19499  001906  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 19500  001908  A4D8               	btfss	status,2,c
 19501  00190A  D001               	goto	u13331
 19502  00190C  D001               	goto	u13330
 19503  00190E                     u13331:
 19504  00190E  D022               	goto	l13841
 19505  001910                     u13330:
 19506                           
 19507                           ; BSR set to: 0
 19508                           ;MOTEapp.c: 421: {
 19509                           ;MOTEapp.c: 422: oled_clear();
 19510  001910  ECA6  F038         	call	_oled_clear	;wreg free
 19511                           
 19512                           ;MOTEapp.c: 423: oled_putString("OTAA Join ",0,0);
 19513  001914  0E88               	movlw	low STR_61
 19514  001916  0100               	movlb	0	; () banked
 19515  001918  6F71               	movwf	oled_putString@string& (0+255),b
 19516  00191A  0E7E               	movlw	high STR_61
 19517  00191C  0100               	movlb	0	; () banked
 19518  00191E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 19519  001920  0E00               	movlw	0
 19520  001922  0100               	movlb	0	; () banked
 19521  001924  6F73               	movwf	oled_putString@station_dot& (0+255),b
 19522  001926  0E00               	movlw	0
 19523  001928  0100               	movlb	0	; () banked
 19524  00192A  6F74               	movwf	oled_putString@start_page& (0+255),b
 19525  00192C  EC8D  F030         	call	_oled_putString	;wreg free
 19526                           
 19527                           ;MOTEapp.c: 424: oled_putString("Successful",0,1);
 19528  001930  0E9E               	movlw	low STR_51
 19529  001932  0100               	movlb	0	; () banked
 19530  001934  6F71               	movwf	oled_putString@string& (0+255),b
 19531  001936  0E7E               	movlw	high STR_51
 19532  001938  0100               	movlb	0	; () banked
 19533  00193A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 19534  00193C  0E00               	movlw	0
 19535  00193E  0100               	movlb	0	; () banked
 19536  001940  6F73               	movwf	oled_putString@station_dot& (0+255),b
 19537  001942  0E01               	movlw	1
 19538  001944  0100               	movlb	0	; () banked
 19539  001946  6F74               	movwf	oled_putString@start_page& (0+255),b
 19540  001948  EC8D  F030         	call	_oled_putString	;wreg free
 19541                           
 19542                           ;MOTEapp.c: 425: activeState = moteJoined;
 19543  00194C  0E07               	movlw	7
 19544  00194E  0100               	movlb	0	; () banked
 19545  001950  6FEB               	movwf	_activeState& (0+255),b
 19546                           
 19547                           ;MOTEapp.c: 426: }
 19548  001952  D0FF               	goto	l13889
 19549  001954                     l13841:
 19550                           
 19551                           ; BSR set to: 0
 19552                           ;MOTEapp.c: 427: else if(strcmp(moduleResonseBuffer, "denied") == 0)
 19553  001954  0E5D               	movlw	low _moduleResonseBuffer
 19554  001956  0100               	movlb	0	; () banked
 19555  001958  6F60               	movwf	strcmp@s1& (0+255),b
 19556  00195A  0E01               	movlw	high _moduleResonseBuffer
 19557  00195C  0100               	movlb	0	; () banked
 19558  00195E  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 19559  001960  0E95               	movlw	low STR_63
 19560  001962  0100               	movlb	0	; () banked
 19561  001964  6F62               	movwf	strcmp@s2& (0+255),b
 19562  001966  0E7F               	movlw	high STR_63
 19563  001968  0100               	movlb	0	; () banked
 19564  00196A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 19565  00196C  ECD5  F033         	call	_strcmp	;wreg free
 19566  001970  0100               	movlb	0	; () banked
 19567  001972  5160               	movf	?_strcmp& (0+255),w,b
 19568  001974  0100               	movlb	0	; () banked
 19569  001976  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 19570  001978  A4D8               	btfss	status,2,c
 19571  00197A  D001               	goto	u13341
 19572  00197C  D001               	goto	u13340
 19573  00197E                     u13341:
 19574  00197E  D02A               	goto	l13853
 19575  001980                     u13340:
 19576                           
 19577                           ; BSR set to: 0
 19578                           ;MOTEapp.c: 428: {
 19579                           ;MOTEapp.c: 429: oled_clear();
 19580  001980  ECA6  F038         	call	_oled_clear	;wreg free
 19581                           
 19582                           ;MOTEapp.c: 430: oled_putString("OTAA Join",1,0);
 19583  001984  0EE8               	movlw	low STR_64
 19584  001986  0100               	movlb	0	; () banked
 19585  001988  6F71               	movwf	oled_putString@string& (0+255),b
 19586  00198A  0E7E               	movlw	high STR_64
 19587  00198C  0100               	movlb	0	; () banked
 19588  00198E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 19589  001990  0E01               	movlw	1
 19590  001992  0100               	movlb	0	; () banked
 19591  001994  6F73               	movwf	oled_putString@station_dot& (0+255),b
 19592  001996  0E00               	movlw	0
 19593  001998  0100               	movlb	0	; () banked
 19594  00199A  6F74               	movwf	oled_putString@start_page& (0+255),b
 19595  00199C  EC8D  F030         	call	_oled_putString	;wreg free
 19596                           
 19597                           ;MOTEapp.c: 431: oled_putString("Denied",2,1);
 19598  0019A0  0E8E               	movlw	low STR_65
 19599  0019A2  0100               	movlb	0	; () banked
 19600  0019A4  6F71               	movwf	oled_putString@string& (0+255),b
 19601  0019A6  0E7F               	movlw	high STR_65
 19602  0019A8  0100               	movlb	0	; () banked
 19603  0019AA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 19604  0019AC  0E02               	movlw	2
 19605  0019AE  0100               	movlb	0	; () banked
 19606  0019B0  6F73               	movwf	oled_putString@station_dot& (0+255),b
 19607  0019B2  0E01               	movlw	1
 19608  0019B4  0100               	movlb	0	; () banked
 19609  0019B6  6F74               	movwf	oled_putString@start_page& (0+255),b
 19610  0019B8  EC8D  F030         	call	_oled_putString	;wreg free
 19611                           
 19612                           ;MOTEapp.c: 432: sendCommand("mac join otaa");
 19613  0019BC  0E3B               	movlw	low STR_43
 19614  0019BE  0100               	movlb	0	; () banked
 19615  0019C0  6F61               	movwf	sendCommand@string& (0+255),b
 19616  0019C2  0E7D               	movlw	high STR_43
 19617  0019C4  0100               	movlb	0	; () banked
 19618  0019C6  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 19619  0019C8  EC66  F037         	call	_sendCommand	;wreg free
 19620                           
 19621                           ;MOTEapp.c: 433: activeState = moteCheckOtaa;
 19622  0019CC  0E05               	movlw	5
 19623  0019CE  0100               	movlb	0	; () banked
 19624  0019D0  6FEB               	movwf	_activeState& (0+255),b
 19625                           
 19626                           ;MOTEapp.c: 434: }
 19627  0019D2  D0BF               	goto	l13889
 19628  0019D4                     l13853:
 19629                           
 19630                           ; BSR set to: 0
 19631                           ;MOTEapp.c: 435: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 19632  0019D4  0E5D               	movlw	low _moduleResonseBuffer
 19633  0019D6  0100               	movlb	0	; () banked
 19634  0019D8  6F60               	movwf	strcmp@s1& (0+255),b
 19635  0019DA  0E01               	movlw	high _moduleResonseBuffer
 19636  0019DC  0100               	movlb	0	; () banked
 19637  0019DE  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 19638  0019E0  0E93               	movlw	low STR_59
 19639  0019E2  0100               	movlb	0	; () banked
 19640  0019E4  6F62               	movwf	strcmp@s2& (0+255),b
 19641  0019E6  0E7E               	movlw	high STR_59
 19642  0019E8  0100               	movlb	0	; () banked
 19643  0019EA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 19644  0019EC  ECD5  F033         	call	_strcmp	;wreg free
 19645  0019F0  0100               	movlb	0	; () banked
 19646  0019F2  5160               	movf	?_strcmp& (0+255),w,b
 19647  0019F4  0100               	movlb	0	; () banked
 19648  0019F6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 19649  0019F8  A4D8               	btfss	status,2,c
 19650  0019FA  D001               	goto	u13351
 19651  0019FC  D001               	goto	u13350
 19652  0019FE                     u13351:
 19653  0019FE  D0A9               	goto	l13889
 19654  001A00                     u13350:
 19655                           
 19656                           ; BSR set to: 0
 19657                           ;MOTEapp.c: 436: {
 19658                           ;MOTEapp.c: 437: activeState = moteStartup;
 19659  001A00  0E00               	movlw	0
 19660  001A02  0100               	movlb	0	; () banked
 19661  001A04  6FEB               	movwf	_activeState& (0+255),b
 19662  001A06  D0A5               	goto	l13889
 19663                           
 19664                           ; BSR set to: 0
 19665  001A08  D0A4               	goto	l13889
 19666                           
 19667                           ; BSR set to: 0
 19668  001A0A  D0A3               	goto	l13889
 19669                           
 19670                           ; BSR set to: 0
 19671  001A0C  D0A2               	goto	l13889
 19672                           
 19673                           ; BSR set to: 0
 19674                           ;MOTEapp.c: 438: }
 19675                           ;MOTEapp.c: 439: }
 19676                           ;MOTEapp.c: 440: break;
 19677  001A0E  D0A1               	goto	l13889
 19678  001A10                     l13857:
 19679                           
 19680                           ; BSR set to: 0
 19681                           ;MOTEapp.c: 442: sendCommand("mac get dr");
 19682  001A10  0EA9               	movlw	low STR_68
 19683  001A12  0100               	movlb	0	; () banked
 19684  001A14  6F61               	movwf	sendCommand@string& (0+255),b
 19685  001A16  0E7E               	movlw	high STR_68
 19686  001A18  0100               	movlb	0	; () banked
 19687  001A1A  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 19688  001A1C  EC66  F037         	call	_sendCommand	;wreg free
 19689                           
 19690                           ;MOTEapp.c: 443: activeState = moteGetDr;
 19691  001A20  0E08               	movlw	8
 19692  001A22  0100               	movlb	0	; () banked
 19693  001A24  6FEB               	movwf	_activeState& (0+255),b
 19694                           
 19695                           ;MOTEapp.c: 444: break;
 19696  001A26  D095               	goto	l13889
 19697  001A28                     l13861:
 19698                           
 19699                           ; BSR set to: 0
 19700                           ;MOTEapp.c: 446: if ( messageReady )
 19701  001A28  0100               	movlb	0	; () banked
 19702  001A2A  517B               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 19703  001A2C  0100               	movlb	0	; () banked
 19704  001A2E  B4D8               	btfsc	status,2,c
 19705  001A30  D001               	goto	u13361
 19706  001A32  D001               	goto	u13360
 19707  001A34                     u13361:
 19708  001A34  D08E               	goto	l13889
 19709  001A36                     u13360:
 19710                           
 19711                           ; BSR set to: 0
 19712                           ;MOTEapp.c: 447: {
 19713                           ;MOTEapp.c: 448: if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 19714  001A36  0E5D               	movlw	low _moduleResonseBuffer
 19715  001A38  0100               	movlb	0	; () banked
 19716  001A3A  6F60               	movwf	strcmp@s1& (0+255),b
 19717  001A3C  0E01               	movlw	high _moduleResonseBuffer
 19718  001A3E  0100               	movlb	0	; () banked
 19719  001A40  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 19720  001A42  0E49               	movlw	low STR_57
 19721  001A44  0100               	movlb	0	; () banked
 19722  001A46  6F62               	movwf	strcmp@s2& (0+255),b
 19723  001A48  0E7D               	movlw	high STR_57
 19724  001A4A  0100               	movlb	0	; () banked
 19725  001A4C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 19726  001A4E  ECD5  F033         	call	_strcmp	;wreg free
 19727  001A52  0100               	movlb	0	; () banked
 19728  001A54  5160               	movf	?_strcmp& (0+255),w,b
 19729  001A56  0100               	movlb	0	; () banked
 19730  001A58  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 19731  001A5A  A4D8               	btfss	status,2,c
 19732  001A5C  D001               	goto	u13371
 19733  001A5E  D001               	goto	u13370
 19734  001A60                     u13371:
 19735  001A60  D00C               	goto	l13869
 19736  001A62                     u13370:
 19737                           
 19738                           ; BSR set to: 0
 19739                           ;MOTEapp.c: 449: {
 19740                           ;MOTEapp.c: 450: sendCommand("mac get dr");
 19741  001A62  0EA9               	movlw	low STR_68
 19742  001A64  0100               	movlb	0	; () banked
 19743  001A66  6F61               	movwf	sendCommand@string& (0+255),b
 19744  001A68  0E7E               	movlw	high STR_68
 19745  001A6A  0100               	movlb	0	; () banked
 19746  001A6C  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 19747  001A6E  EC66  F037         	call	_sendCommand	;wreg free
 19748                           
 19749                           ;MOTEapp.c: 451: activeState = moteGetDr;
 19750  001A72  0E08               	movlw	8
 19751  001A74  0100               	movlb	0	; () banked
 19752  001A76  6FEB               	movwf	_activeState& (0+255),b
 19753                           
 19754                           ;MOTEapp.c: 452: }
 19755  001A78  D06C               	goto	l13889
 19756  001A7A                     l13869:
 19757                           
 19758                           ; BSR set to: 0
 19759                           ;MOTEapp.c: 453: else
 19760                           ;MOTEapp.c: 454: {
 19761                           ;MOTEapp.c: 455: uint8_t readDataRate;
 19762                           ;MOTEapp.c: 456: readDataRate = moduleResonseBuffer[0] - '0';
 19763  001A7A  0101               	movlb	1	; () banked
 19764  001A7C  515D               	movf	_moduleResonseBuffer& (0+255),w,b
 19765  001A7E  0FD0               	addlw	208
 19766  001A80  0100               	movlb	0	; () banked
 19767  001A82  6F79               	movwf	moteJoiningProcess@readDataRate& (0+255),b
 19768                           
 19769                           ; BSR set to: 0
 19770                           ;MOTEapp.c: 457: dataRateValue = readDataRate;
 19771  001A84  C079  F0FB         	movff	moteJoiningProcess@readDataRate,_dataRateValue
 19772                           
 19773                           ; BSR set to: 0
 19774                           ;MOTEapp.c: 458: joiningComplete = 1;
 19775  001A88  0E01               	movlw	1
 19776  001A8A  0100               	movlb	0	; () banked
 19777  001A8C  6F7A               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 19778  001A8E  D061               	goto	l13889
 19779                           
 19780                           ; BSR set to: 0
 19781  001A90  D060               	goto	l13889
 19782                           
 19783                           ; BSR set to: 0
 19784                           ;MOTEapp.c: 459: }
 19785                           ;MOTEapp.c: 460: }
 19786                           ;MOTEapp.c: 461: break;
 19787  001A92  D05F               	goto	l13889
 19788  001A94                     l13875:
 19789                           
 19790                           ; BSR set to: 0
 19791                           ;MOTEapp.c: 463: if (selectButton)
 19792  001A94  0100               	movlb	0	; () banked
 19793  001A96  5177               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 19794  001A98  0100               	movlb	0	; () banked
 19795  001A9A  B4D8               	btfsc	status,2,c
 19796  001A9C  D001               	goto	u13381
 19797  001A9E  D001               	goto	u13380
 19798  001AA0                     u13381:
 19799  001AA0  D058               	goto	l13889
 19800  001AA2                     u13380:
 19801                           
 19802                           ; BSR set to: 0
 19803                           ;MOTEapp.c: 464: {
 19804                           ;MOTEapp.c: 465: activeState = moteComFailure;
 19805  001AA2  0E0A               	movlw	10
 19806  001AA4  0100               	movlb	0	; () banked
 19807  001AA6  6FEB               	movwf	_activeState& (0+255),b
 19808  001AA8  D054               	goto	l13889
 19809                           
 19810                           ; BSR set to: 0
 19811                           ;MOTEapp.c: 466: }
 19812                           ;MOTEapp.c: 468: break;
 19813  001AAA  D053               	goto	l13889
 19814  001AAC                     l13879:
 19815                           
 19816                           ; BSR set to: 0
 19817                           ;MOTEapp.c: 470: DATAEE_WriteByte(0x00, 0x00);
 19818  001AAC  0E00               	movlw	0
 19819  001AAE  0100               	movlb	0	; () banked
 19820  001AB0  6F60               	movwf	DATAEE_WriteByte@bData& (0+255),b
 19821  001AB2  0E00               	movlw	0
 19822  001AB4  EC0D  F036         	call	_DATAEE_WriteByte
 19823                           
 19824                           ;MOTEapp.c: 471: while((!PORTBbits.RB1) && (!PORTBbits.RB0));
 19825  001AB8  D000               	goto	l440
 19826  001ABA                     l440:
 19827  001ABA  B281               	btfsc	3969,1,c	;volatile
 19828  001ABC  D001               	goto	u13391
 19829  001ABE  D001               	goto	u13390
 19830  001AC0                     u13391:
 19831  001AC0  D006               	goto	l13883
 19832  001AC2                     u13390:
 19833  001AC2  A081               	btfss	3969,0,c	;volatile
 19834  001AC4  D001               	goto	u13401
 19835  001AC6  D001               	goto	u13400
 19836  001AC8                     u13401:
 19837  001AC8  D7F8               	goto	l440
 19838  001ACA                     u13400:
 19839  001ACA  D001               	goto	l13883
 19840  001ACC  D000               	goto	l13883
 19841  001ACE                     l13883:
 19842                           
 19843                           ;MOTEapp.c: 472: _delay((unsigned long)((16)*(48000000/4000.0)));
 19844  001ACE  0EFA               	movlw	250
 19845  001AD0  0100               	movlb	0	; () banked
 19846  001AD2  6F78               	movwf	??_moteJoiningProcess& (0+255),b
 19847  001AD4  0E58               	movlw	88
 19848  001AD6                     u14597:
 19849  001AD6  2EE8               	decfsz	wreg,f,c
 19850  001AD8  D7FE               	bra	u14597
 19851  001ADA  2F78               	decfsz	??_moteJoiningProcess& (0+255),f,b
 19852  001ADC  D7FC               	bra	u14597
 19853  001ADE  F000               	nop	
 19854                           
 19855                           ;MOTEapp.c: 473: _delay((unsigned long)((16)*(48000000/4000.0)));
 19856  001AE0  0EFA               	movlw	250
 19857  001AE2  0100               	movlb	0	; () banked
 19858  001AE4  6F78               	movwf	??_moteJoiningProcess& (0+255),b
 19859  001AE6  0E58               	movlw	88
 19860  001AE8                     u14607:
 19861  001AE8  2EE8               	decfsz	wreg,f,c
 19862  001AEA  D7FE               	bra	u14607
 19863  001AEC  2F78               	decfsz	??_moteJoiningProcess& (0+255),f,b
 19864  001AEE  D7FC               	bra	u14607
 19865  001AF0  F000               	nop	
 19866                           
 19867                           ;MOTEapp.c: 474: _delay((unsigned long)((16)*(48000000/4000.0)));
 19868  001AF2  0EFA               	movlw	250
 19869  001AF4  0100               	movlb	0	; () banked
 19870  001AF6  6F78               	movwf	??_moteJoiningProcess& (0+255),b
 19871  001AF8  0E58               	movlw	88
 19872  001AFA                     u14617:
 19873  001AFA  2EE8               	decfsz	wreg,f,c
 19874  001AFC  D7FE               	bra	u14617
 19875  001AFE  2F78               	decfsz	??_moteJoiningProcess& (0+255),f,b
 19876  001B00  D7FC               	bra	u14617
 19877  001B02  F000               	nop	
 19878  001B04  00FF               	reset		;# 
 19879                           
 19880                           ;MOTEapp.c: 477: break;
 19881  001B06  D025               	goto	l13889
 19882                           
 19883                           ;MOTEapp.c: 478: }
 19884  001B08  D024               	goto	l13889
 19885  001B0A                     l13887:
 19886  001B0A  0100               	movlb	0	; () banked
 19887  001B0C  51EB               	movf	_activeState& (0+255),w,b
 19888                           
 19889                           ; Switch size 1, requested type "space"
 19890                           ; Number of cases is 11, Range of values is 0 to 10
 19891                           ; switch strategies available:
 19892                           ; Name         Instructions Cycles
 19893                           ; simple_byte           34    18 (average)
 19894                           ;	Chosen strategy is simple_byte
 19895  001B0E  0A00               	xorlw	0	; case 0
 19896  001B10  B4D8               	btfsc	status,2,c
 19897  001B12  D471               	goto	l13705
 19898  001B14  0A01               	xorlw	1	; case 1
 19899  001B16  B4D8               	btfsc	status,2,c
 19900  001B18  D47A               	goto	l13709
 19901  001B1A  0A03               	xorlw	3	; case 2
 19902  001B1C  B4D8               	btfsc	status,2,c
 19903  001B1E  D53A               	goto	l13747
 19904  001B20  0A01               	xorlw	1	; case 3
 19905  001B22  B4D8               	btfsc	status,2,c
 19906  001B24  D589               	goto	l13767
 19907  001B26  0A07               	xorlw	7	; case 4
 19908  001B28  B4D8               	btfsc	status,2,c
 19909  001B2A  D5EE               	goto	l13787
 19910  001B2C  0A01               	xorlw	1	; case 5
 19911  001B2E  B4D8               	btfsc	status,2,c
 19912  001B30  D638               	goto	l13803
 19913  001B32  0A03               	xorlw	3	; case 6
 19914  001B34  B4D8               	btfsc	status,2,c
 19915  001B36  D6CF               	goto	l13829
 19916  001B38  0A01               	xorlw	1	; case 7
 19917  001B3A  B4D8               	btfsc	status,2,c
 19918  001B3C  D769               	goto	l13857
 19919  001B3E  0A0F               	xorlw	15	; case 8
 19920  001B40  B4D8               	btfsc	status,2,c
 19921  001B42  D772               	goto	l13861
 19922  001B44  0A01               	xorlw	1	; case 9
 19923  001B46  B4D8               	btfsc	status,2,c
 19924  001B48  D7A5               	goto	l13875
 19925  001B4A  0A03               	xorlw	3	; case 10
 19926  001B4C  B4D8               	btfsc	status,2,c
 19927  001B4E  D7AE               	goto	l13879
 19928  001B50  D450               	goto	l390
 19929  001B52                     l13889:
 19930                           
 19931                           ;MOTEapp.c: 479: return joiningComplete;
 19932  001B52  0100               	movlb	0	; () banked
 19933  001B54  517A               	movf	moteJoiningProcess@joiningComplete& (0+255),w,b
 19934  001B56  D000               	goto	l445
 19935  001B58                     l445:
 19936                           
 19937                           ; BSR set to: 0
 19938  001B58  0012               	return		;funcret
 19939  001B5A                     __end_of_moteJoiningProcess:
 19940                           	opt stack 0
 19941                           tblptru	equ	0xFF8
 19942                           tblptrh	equ	0xFF7
 19943                           tblptrl	equ	0xFF6
 19944                           tablat	equ	0xFF5
 19945                           prodh	equ	0xFF4
 19946                           prodl	equ	0xFF3
 19947                           intcon	equ	0xFF2
 19948                           intcon3	equ	0xFF0
 19949                           postinc0	equ	0xFEE
 19950                           wreg	equ	0xFE8
 19951                           indf1	equ	0xFE7
 19952                           postdec1	equ	0xFE5
 19953                           fsr1h	equ	0xFE2
 19954                           fsr1l	equ	0xFE1
 19955                           indf2	equ	0xFDF
 19956                           fsr2h	equ	0xFDA
 19957                           fsr2l	equ	0xFD9
 19958                           status	equ	0xFD8
 19959                           
 19960 ;; *************** function _strncmp *****************
 19961 ;; Defined at:
 19962 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strncmp.c"
 19963 ;; Parameters:    Size  Location     Type
 19964 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 19965 ;;		 -> moduleResonseBuffer(64), 
 19966 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 19967 ;;		 -> STR_97(7), STR_95(7), STR_93(7), STR_90(7), 
 19968 ;;		 -> STR_35(5), STR_31(5), 
 19969 ;;  len             2    4[BANK0 ] unsigned int 
 19970 ;; Auto vars:     Size  Location     Type
 19971 ;;		None
 19972 ;; Return value:  Size  Location     Type
 19973 ;;                  2    0[BANK0 ] int 
 19974 ;; Registers used:
 19975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 19976 ;; Tracked objects:
 19977 ;;		On entry : 0/0
 19978 ;;		On exit  : 0/0
 19979 ;;		Unchanged: 0/0
 19980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19981 ;;      Params:         0       6       0       0       0       0       0       0       0
 19982 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19983 ;;      Temps:          0       3       0       0       0       0       0       0       0
 19984 ;;      Totals:         0       9       0       0       0       0       0       0       0
 19985 ;;Total ram usage:        9 bytes
 19986 ;; Hardware stack levels used:    1
 19987 ;; Hardware stack levels required when called:   11
 19988 ;; This function calls:
 19989 ;;		Nothing
 19990 ;; This function is called by:
 19991 ;;		_moteJoiningProcess
 19992 ;;		_moteRunningProcess
 19993 ;; This function uses a non-reentrant model
 19994 ;;
 19995                           
 19996                           	psect	text52
 19997  005A04                     __ptext52:
 19998                           	opt stack 0
 19999  005A04                     _strncmp:
 20000                           	opt stack 17
 20001                           
 20002                           ; BSR set to: 0
 20003                           ;incstack = 0
 20004  005A04  D046               	goto	l13023
 20005  005A06                     l13013:
 20006  005A06  C060  FFD9         	movff	strncmp@s1,fsr2l
 20007  005A0A  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 20008  005A0E  50DF               	movf	indf2,w,c
 20009  005A10  B4D8               	btfsc	status,2,c
 20010  005A12  D001               	goto	u12361
 20011  005A14  D001               	goto	u12360
 20012  005A16                     u12361:
 20013  005A16  D014               	goto	l13017
 20014  005A18                     u12360:
 20015  005A18  C060  FFD9         	movff	strncmp@s1,fsr2l
 20016  005A1C  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 20017  005A20  50DF               	movf	indf2,w,c
 20018  005A22  0100               	movlb	0	; () banked
 20019  005A24  6F66               	movwf	??_strncmp& (0+255),b
 20020  005A26  C062  FFF6         	movff	strncmp@s2,tblptrl
 20021  005A2A  C063  FFF7         	movff	strncmp@s2+1,tblptrh
 20022  005A2E                     	if	0	;tblptru may be non-zero
 20023  005A2E                     	endif
 20024  005A2E                     	if	0	;tblptru may be non-zero
 20025  005A2E                     	endif
 20026  005A2E  0008               	tblrd		*
 20027  005A30  50F5               	movf	tablat,w,c
 20028  005A32  0100               	movlb	0	; () banked
 20029  005A34  1966               	xorwf	??_strncmp& (0+255),w,b
 20030  005A36  B4D8               	btfsc	status,2,c
 20031  005A38  D001               	goto	u12371
 20032  005A3A  D001               	goto	u12370
 20033  005A3C                     u12371:
 20034  005A3C  D023               	goto	l13021
 20035  005A3E                     u12370:
 20036  005A3E  D000               	goto	l13017
 20037  005A40                     l13017:
 20038  005A40  C062  FFF6         	movff	strncmp@s2,tblptrl
 20039  005A44  C063  FFF7         	movff	strncmp@s2+1,tblptrh
 20040  005A48                     	if	0	;tblptru may be non-zero
 20041  005A48                     	endif
 20042  005A48                     	if	0	;tblptru may be non-zero
 20043  005A48                     	endif
 20044  005A48  0008               	tblrd		*
 20045  005A4A  50F5               	movf	tablat,w,c
 20046  005A4C  0100               	movlb	0	; () banked
 20047  005A4E  6F66               	movwf	??_strncmp& (0+255),b
 20048  005A50  6B67               	clrf	(??_strncmp+1)& (0+255),b
 20049  005A52  0100               	movlb	0	; () banked
 20050  005A54  1F66               	comf	??_strncmp& (0+255),f,b
 20051  005A56  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 20052  005A58  4B66               	infsnz	??_strncmp& (0+255),f,b
 20053  005A5A  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 20054  005A5C  C060  FFD9         	movff	strncmp@s1,fsr2l
 20055  005A60  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 20056  005A64  50DF               	movf	indf2,w,c
 20057  005A66  0100               	movlb	0	; () banked
 20058  005A68  6F68               	movwf	(??_strncmp+2)& (0+255),b
 20059  005A6A  0100               	movlb	0	; () banked
 20060  005A6C  5168               	movf	(??_strncmp+2)& (0+255),w,b
 20061  005A6E  0100               	movlb	0	; () banked
 20062  005A70  2566               	addwf	??_strncmp& (0+255),w,b
 20063  005A72  0100               	movlb	0	; () banked
 20064  005A74  6F60               	movwf	?_strncmp& (0+255),b
 20065  005A76  0E00               	movlw	0
 20066  005A78  0100               	movlb	0	; () banked
 20067  005A7A  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 20068  005A7C  0100               	movlb	0	; () banked
 20069  005A7E  6F61               	movwf	(?_strncmp+1)& (0+255),b
 20070  005A80  D01C               	goto	l2739
 20071                           
 20072                           ; BSR set to: 0
 20073  005A82  D01B               	goto	l2739
 20074  005A84                     l13021:
 20075                           
 20076                           ; BSR set to: 0
 20077  005A84  0100               	movlb	0	; () banked
 20078  005A86  4B60               	infsnz	strncmp@s1& (0+255),f,b
 20079  005A88  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 20080  005A8A  0100               	movlb	0	; () banked
 20081  005A8C  4B62               	infsnz	strncmp@s2& (0+255),f,b
 20082  005A8E  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 20083  005A90  D000               	goto	l13023
 20084  005A92                     l13023:
 20085  005A92  0100               	movlb	0	; () banked
 20086  005A94  0764               	decf	strncmp@len& (0+255),f,b
 20087  005A96  A0D8               	btfss	status,0,c
 20088  005A98  0765               	decf	(strncmp@len+1)& (0+255),f,b
 20089  005A9A  0100               	movlb	0	; () banked
 20090  005A9C  2964               	incf	strncmp@len& (0+255),w,b
 20091  005A9E  E105               	bnz	u12381
 20092  005AA0  0100               	movlb	0	; () banked
 20093  005AA2  2965               	incf	(strncmp@len+1)& (0+255),w,b
 20094  005AA4  A4D8               	btfss	status,2,c
 20095  005AA6  D001               	goto	u12381
 20096  005AA8  D001               	goto	u12380
 20097  005AAA                     u12381:
 20098  005AAA  D7AD               	goto	l13013
 20099  005AAC                     u12380:
 20100  005AAC  D000               	goto	l13025
 20101  005AAE                     l13025:
 20102                           
 20103                           ; BSR set to: 0
 20104  005AAE  0E00               	movlw	0
 20105  005AB0  0100               	movlb	0	; () banked
 20106  005AB2  6F61               	movwf	(?_strncmp+1)& (0+255),b
 20107  005AB4  0E00               	movlw	0
 20108  005AB6  6F60               	movwf	?_strncmp& (0+255),b
 20109  005AB8  D000               	goto	l2739
 20110  005ABA                     l2739:
 20111                           
 20112                           ; BSR set to: 0
 20113  005ABA  0012               	return		;funcret
 20114  005ABC                     __end_of_strncmp:
 20115                           	opt stack 0
 20116                           tblptru	equ	0xFF8
 20117                           tblptrh	equ	0xFF7
 20118                           tblptrl	equ	0xFF6
 20119                           tablat	equ	0xFF5
 20120                           prodh	equ	0xFF4
 20121                           prodl	equ	0xFF3
 20122                           intcon	equ	0xFF2
 20123                           intcon3	equ	0xFF0
 20124                           postinc0	equ	0xFEE
 20125                           wreg	equ	0xFE8
 20126                           indf1	equ	0xFE7
 20127                           postdec1	equ	0xFE5
 20128                           fsr1h	equ	0xFE2
 20129                           fsr1l	equ	0xFE1
 20130                           indf2	equ	0xFDF
 20131                           fsr2h	equ	0xFDA
 20132                           fsr2l	equ	0xFD9
 20133                           status	equ	0xFD8
 20134                           
 20135 ;; *************** function _strcmp *****************
 20136 ;; Defined at:
 20137 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strcmp.c"
 20138 ;; Parameters:    Size  Location     Type
 20139 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 20140 ;;		 -> moduleResonseBuffer(64), 
 20141 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 20142 ;;		 -> STR_89(3), STR_69(14), STR_67(11), STR_63(7), 
 20143 ;;		 -> STR_60(9), STR_59(11), STR_57(14), STR_54(14), 
 20144 ;;		 -> STR_53(3), STR_49(9), STR_45(14), STR_44(3), 
 20145 ;; Auto vars:     Size  Location     Type
 20146 ;;  r               1    5[BANK0 ] char 
 20147 ;; Return value:  Size  Location     Type
 20148 ;;                  2    0[BANK0 ] int 
 20149 ;; Registers used:
 20150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20151 ;; Tracked objects:
 20152 ;;		On entry : 0/0
 20153 ;;		On exit  : 0/0
 20154 ;;		Unchanged: 0/0
 20155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20156 ;;      Params:         0       4       0       0       0       0       0       0       0
 20157 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20158 ;;      Temps:          0       1       0       0       0       0       0       0       0
 20159 ;;      Totals:         0       6       0       0       0       0       0       0       0
 20160 ;;Total ram usage:        6 bytes
 20161 ;; Hardware stack levels used:    1
 20162 ;; Hardware stack levels required when called:   11
 20163 ;; This function calls:
 20164 ;;		Nothing
 20165 ;; This function is called by:
 20166 ;;		_moteJoiningProcess
 20167 ;;		_moteRunningProcess
 20168 ;; This function uses a non-reentrant model
 20169 ;;
 20170                           
 20171                           	psect	text53
 20172  0067AA                     __ptext53:
 20173                           	opt stack 0
 20174  0067AA                     _strcmp:
 20175                           	opt stack 17
 20176                           
 20177                           ; BSR set to: 0
 20178                           ;incstack = 0
 20179  0067AA  D007               	goto	l13033
 20180  0067AC                     l13031:
 20181  0067AC  0100               	movlb	0	; () banked
 20182  0067AE  4B60               	infsnz	strcmp@s1& (0+255),f,b
 20183  0067B0  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
 20184  0067B2  0100               	movlb	0	; () banked
 20185  0067B4  4B62               	infsnz	strcmp@s2& (0+255),f,b
 20186  0067B6  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
 20187  0067B8  D000               	goto	l13033
 20188  0067BA                     l13033:
 20189  0067BA  C060  FFD9         	movff	strcmp@s1,fsr2l
 20190  0067BE  C061  FFDA         	movff	strcmp@s1+1,fsr2h
 20191  0067C2  50DF               	movf	indf2,w,c
 20192  0067C4  0100               	movlb	0	; () banked
 20193  0067C6  6F64               	movwf	??_strcmp& (0+255),b
 20194  0067C8  C062  FFF6         	movff	strcmp@s2,tblptrl
 20195  0067CC  C063  FFF7         	movff	strcmp@s2+1,tblptrh
 20196  0067D0                     	if	0	;tblptru may be non-zero
 20197  0067D0                     	endif
 20198  0067D0                     	if	0	;tblptru may be non-zero
 20199  0067D0                     	endif
 20200  0067D0  0008               	tblrd		*
 20201  0067D2  50F5               	movf	tablat,w,c
 20202  0067D4  0800               	sublw	0
 20203  0067D6  0100               	movlb	0	; () banked
 20204  0067D8  2564               	addwf	??_strcmp& (0+255),w,b
 20205  0067DA  0100               	movlb	0	; () banked
 20206  0067DC  6F65               	movwf	strcmp@r& (0+255),b
 20207  0067DE  0100               	movlb	0	; () banked
 20208  0067E0  5165               	movf	strcmp@r& (0+255),w,b
 20209  0067E2  A4D8               	btfss	status,2,c
 20210  0067E4  D001               	goto	u12391
 20211  0067E6  D001               	goto	u12390
 20212  0067E8                     u12391:
 20213  0067E8  D00B               	goto	l13037
 20214  0067EA                     u12390:
 20215                           
 20216                           ; BSR set to: 0
 20217  0067EA  C060  FFD9         	movff	strcmp@s1,fsr2l
 20218  0067EE  C061  FFDA         	movff	strcmp@s1+1,fsr2h
 20219  0067F2  50DF               	movf	indf2,w,c
 20220  0067F4  A4D8               	btfss	status,2,c
 20221  0067F6  D001               	goto	u12401
 20222  0067F8  D001               	goto	u12400
 20223  0067FA                     u12401:
 20224  0067FA  D7D8               	goto	l13031
 20225  0067FC                     u12400:
 20226  0067FC  D001               	goto	l13037
 20227                           
 20228                           ; BSR set to: 0
 20229  0067FE  D000               	goto	l13037
 20230  006800                     l13037:
 20231                           
 20232                           ; BSR set to: 0
 20233  006800  0100               	movlb	0	; () banked
 20234  006802  5165               	movf	strcmp@r& (0+255),w,b
 20235  006804  0100               	movlb	0	; () banked
 20236  006806  6F60               	movwf	?_strcmp& (0+255),b
 20237  006808  6B61               	clrf	(?_strcmp+1)& (0+255),b
 20238  00680A  BF60               	btfsc	?_strcmp& (0+255),7,b
 20239  00680C  0761               	decf	(?_strcmp+1)& (0+255),f,b
 20240  00680E  D000               	goto	l2731
 20241  006810                     l2731:
 20242                           
 20243                           ; BSR set to: 0
 20244  006810  0012               	return		;funcret
 20245  006812                     __end_of_strcmp:
 20246                           	opt stack 0
 20247                           tblptru	equ	0xFF8
 20248                           tblptrh	equ	0xFF7
 20249                           tblptrl	equ	0xFF6
 20250                           tablat	equ	0xFF5
 20251                           prodh	equ	0xFF4
 20252                           prodl	equ	0xFF3
 20253                           intcon	equ	0xFF2
 20254                           intcon3	equ	0xFF0
 20255                           postinc0	equ	0xFEE
 20256                           wreg	equ	0xFE8
 20257                           indf1	equ	0xFE7
 20258                           postdec1	equ	0xFE5
 20259                           fsr1h	equ	0xFE2
 20260                           fsr1l	equ	0xFE1
 20261                           indf2	equ	0xFDF
 20262                           fsr2h	equ	0xFDA
 20263                           fsr2l	equ	0xFD9
 20264                           status	equ	0xFD8
 20265                           
 20266 ;; *************** function _moteApp_delayms *****************
 20267 ;; Defined at:
 20268 ;;		line 165 in file "../Includes/Board/MOTEapp.c"
 20269 ;; Parameters:    Size  Location     Type
 20270 ;;  length          2    0[BANK0 ] unsigned int 
 20271 ;; Auto vars:     Size  Location     Type
 20272 ;;  counter         2    3[BANK0 ] unsigned int 
 20273 ;; Return value:  Size  Location     Type
 20274 ;;                  1    wreg      void 
 20275 ;; Registers used:
 20276 ;;		wreg, status,2, status,0
 20277 ;; Tracked objects:
 20278 ;;		On entry : 0/0
 20279 ;;		On exit  : 0/0
 20280 ;;		Unchanged: 0/0
 20281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20282 ;;      Params:         0       2       0       0       0       0       0       0       0
 20283 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20284 ;;      Temps:          0       1       0       0       0       0       0       0       0
 20285 ;;      Totals:         0       5       0       0       0       0       0       0       0
 20286 ;;Total ram usage:        5 bytes
 20287 ;; Hardware stack levels used:    1
 20288 ;; Hardware stack levels required when called:   11
 20289 ;; This function calls:
 20290 ;;		Nothing
 20291 ;; This function is called by:
 20292 ;;		_main
 20293 ;;		_test_powerup
 20294 ;;		_moduleResync
 20295 ;;		_moteJoiningProcess
 20296 ;;		_moteRunningProcess
 20297 ;;		_moteApp_GoToSleep
 20298 ;;		_moteApp_setSensorsInput
 20299 ;; This function uses a non-reentrant model
 20300 ;;
 20301                           
 20302                           	psect	text54
 20303  006D22                     __ptext54:
 20304                           	opt stack 0
 20305  006D22                     _moteApp_delayms:
 20306                           	opt stack 16
 20307                           
 20308                           ;MOTEapp.c: 167: uint16_t counter;
 20309                           ;MOTEapp.c: 168: for(counter = 0; counter < length; counter++)
 20310                           
 20311                           ; BSR set to: 0
 20312                           ;incstack = 0
 20313  006D22  0E00               	movlw	0
 20314  006D24  0100               	movlb	0	; () banked
 20315  006D26  6F64               	movwf	(moteApp_delayms@counter+1)& (0+255),b
 20316  006D28  0E00               	movlw	0
 20317  006D2A  6F63               	movwf	moteApp_delayms@counter& (0+255),b
 20318  006D2C  D00C               	goto	l346
 20319  006D2E                     l11983:
 20320                           
 20321                           ; BSR set to: 0
 20322                           ;MOTEapp.c: 169: {
 20323                           ;MOTEapp.c: 170: _delay((unsigned long)((1)*(48000000/4000.0)));
 20324  006D2E  0E10               	movlw	16
 20325  006D30  0100               	movlb	0	; () banked
 20326  006D32  6F62               	movwf	??_moteApp_delayms& (0+255),b
 20327  006D34  0E94               	movlw	148
 20328  006D36                     u14627:
 20329  006D36  2EE8               	decfsz	wreg,f,c
 20330  006D38  D7FE               	bra	u14627
 20331  006D3A  2F62               	decfsz	??_moteApp_delayms& (0+255),f,b
 20332  006D3C  D7FC               	bra	u14627
 20333  006D3E  F000               	nop	
 20334  006D40  0100               	movlb	0	; () banked
 20335  006D42  4B63               	infsnz	moteApp_delayms@counter& (0+255),f,b
 20336  006D44  2B64               	incf	(moteApp_delayms@counter+1)& (0+255),f,b
 20337  006D46                     l346:
 20338                           
 20339                           ; BSR set to: 0
 20340  006D46  0100               	movlb	0	; () banked
 20341  006D48  5160               	movf	moteApp_delayms@length& (0+255),w,b
 20342  006D4A  0100               	movlb	0	; () banked
 20343  006D4C  5D63               	subwf	moteApp_delayms@counter& (0+255),w,b
 20344  006D4E  0100               	movlb	0	; () banked
 20345  006D50  5161               	movf	(moteApp_delayms@length+1)& (0+255),w,b
 20346  006D52  0100               	movlb	0	; () banked
 20347  006D54  5964               	subwfb	(moteApp_delayms@counter+1)& (0+255),w,b
 20348  006D56  A0D8               	btfss	status,0,c
 20349  006D58  D001               	goto	u10851
 20350  006D5A  D001               	goto	u10850
 20351  006D5C                     u10851:
 20352  006D5C  D7E8               	goto	l11983
 20353  006D5E                     u10850:
 20354  006D5E  D000               	goto	l349
 20355  006D60                     l349:
 20356                           
 20357                           ; BSR set to: 0
 20358  006D60  0012               	return		;funcret
 20359  006D62                     __end_of_moteApp_delayms:
 20360                           	opt stack 0
 20361                           tblptru	equ	0xFF8
 20362                           tblptrh	equ	0xFF7
 20363                           tblptrl	equ	0xFF6
 20364                           tablat	equ	0xFF5
 20365                           prodh	equ	0xFF4
 20366                           prodl	equ	0xFF3
 20367                           intcon	equ	0xFF2
 20368                           intcon3	equ	0xFF0
 20369                           postinc0	equ	0xFEE
 20370                           wreg	equ	0xFE8
 20371                           indf1	equ	0xFE7
 20372                           postdec1	equ	0xFE5
 20373                           fsr1h	equ	0xFE2
 20374                           fsr1l	equ	0xFE1
 20375                           indf2	equ	0xFDF
 20376                           fsr2h	equ	0xFDA
 20377                           fsr2l	equ	0xFD9
 20378                           status	equ	0xFD8
 20379                           
 20380 ;; *************** function _DATAEE_WriteByte *****************
 20381 ;; Defined at:
 20382 ;;		line 166 in file "../Includes/MccGenerated/memory.c"
 20383 ;; Parameters:    Size  Location     Type
 20384 ;;  bAdd            1    wreg     unsigned char 
 20385 ;;  bData           1    0[BANK0 ] unsigned char 
 20386 ;; Auto vars:     Size  Location     Type
 20387 ;;  bAdd            1    1[BANK0 ] unsigned char 
 20388 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 20389 ;; Return value:  Size  Location     Type
 20390 ;;                  1    wreg      void 
 20391 ;; Registers used:
 20392 ;;		wreg, status,2
 20393 ;; Tracked objects:
 20394 ;;		On entry : 0/0
 20395 ;;		On exit  : 0/0
 20396 ;;		Unchanged: 0/0
 20397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20398 ;;      Params:         0       1       0       0       0       0       0       0       0
 20399 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20400 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20401 ;;      Totals:         0       3       0       0       0       0       0       0       0
 20402 ;;Total ram usage:        3 bytes
 20403 ;; Hardware stack levels used:    1
 20404 ;; Hardware stack levels required when called:   11
 20405 ;; This function calls:
 20406 ;;		Nothing
 20407 ;; This function is called by:
 20408 ;;		_main
 20409 ;;		_moteJoiningProcess
 20410 ;; This function uses a non-reentrant model
 20411 ;;
 20412                           
 20413                           	psect	text55
 20414  006C1A                     __ptext55:
 20415                           	opt stack 0
 20416  006C1A                     _DATAEE_WriteByte:
 20417                           	opt stack 17
 20418                           
 20419                           ; BSR set to: 0
 20420                           ;incstack = 0
 20421                           ;DATAEE_WriteByte@bAdd stored from wreg
 20422  006C1A  0100               	movlb	0	; () banked
 20423  006C1C  6F61               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 20424                           
 20425                           ;memory.c: 168: uint8_t GIEBitValue = INTCONbits.GIE;
 20426  006C1E  0E00               	movlw	0
 20427  006C20  BEF2               	btfsc	intcon,7,c	;volatile
 20428  006C22  0E01               	movlw	1
 20429  006C24  0100               	movlb	0	; () banked
 20430  006C26  6F62               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 20431                           
 20432                           ; BSR set to: 0
 20433                           ;memory.c: 170: EEADR = (bAdd & 0xFF);
 20434  006C28  C061  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
 20435                           
 20436                           ; BSR set to: 0
 20437                           ;memory.c: 171: EEDATA = bData;
 20438  006C2C  C060  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
 20439                           
 20440                           ; BSR set to: 0
 20441                           ;memory.c: 172: EECON1bits.EEPGD = 0;
 20442  006C30  9EA6               	bcf	4006,7,c	;volatile
 20443                           
 20444                           ; BSR set to: 0
 20445                           ;memory.c: 173: EECON1bits.CFGS = 0;
 20446  006C32  9CA6               	bcf	4006,6,c	;volatile
 20447                           
 20448                           ; BSR set to: 0
 20449                           ;memory.c: 174: EECON1bits.WREN = 1;
 20450  006C34  84A6               	bsf	4006,2,c	;volatile
 20451                           
 20452                           ; BSR set to: 0
 20453                           ;memory.c: 175: INTCONbits.GIE = 0;
 20454  006C36  9EF2               	bcf	intcon,7,c	;volatile
 20455                           
 20456                           ; BSR set to: 0
 20457                           ;memory.c: 176: EECON2 = 0x55;
 20458  006C38  0E55               	movlw	85
 20459  006C3A  6EA7               	movwf	4007,c	;volatile
 20460                           
 20461                           ; BSR set to: 0
 20462                           ;memory.c: 177: EECON2 = 0xAA;
 20463  006C3C  0EAA               	movlw	170
 20464  006C3E  6EA7               	movwf	4007,c	;volatile
 20465                           
 20466                           ; BSR set to: 0
 20467                           ;memory.c: 178: EECON1bits.WR = 1;
 20468  006C40  82A6               	bsf	4006,1,c	;volatile
 20469                           
 20470                           ;memory.c: 180: while (EECON1bits.WR)
 20471  006C42  D000               	goto	l1444
 20472  006C44                     l1444:
 20473  006C44  B2A6               	btfsc	4006,1,c	;volatile
 20474  006C46  D001               	goto	u12221
 20475  006C48  D001               	goto	u12220
 20476  006C4A                     u12221:
 20477  006C4A  D7FC               	goto	l1444
 20478  006C4C                     u12220:
 20479                           
 20480                           ;memory.c: 182: }
 20481                           ;memory.c: 184: EECON1bits.WREN = 0;
 20482  006C4C  94A6               	bcf	4006,2,c	;volatile
 20483                           
 20484                           ;memory.c: 185: INTCONbits.GIE = GIEBitValue;
 20485  006C4E  0100               	movlb	0	; () banked
 20486  006C50  B162               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 20487  006C52  D002               	bra	u12235
 20488  006C54  9EF2               	bcf	intcon,7,c	;volatile
 20489  006C56  D001               	bra	u12236
 20490  006C58                     u12235:
 20491  006C58  8EF2               	bsf	intcon,7,c	;volatile
 20492  006C5A                     u12236:
 20493  006C5A  0012               	return		;funcret
 20494  006C5C                     __end_of_DATAEE_WriteByte:
 20495                           	opt stack 0
 20496                           tblptru	equ	0xFF8
 20497                           tblptrh	equ	0xFF7
 20498                           tblptrl	equ	0xFF6
 20499                           tablat	equ	0xFF5
 20500                           prodh	equ	0xFF4
 20501                           prodl	equ	0xFF3
 20502                           intcon	equ	0xFF2
 20503                           intcon3	equ	0xFF0
 20504                           postinc0	equ	0xFEE
 20505                           wreg	equ	0xFE8
 20506                           indf1	equ	0xFE7
 20507                           postdec1	equ	0xFE5
 20508                           fsr1h	equ	0xFE2
 20509                           fsr1l	equ	0xFE1
 20510                           indf2	equ	0xFDF
 20511                           fsr2h	equ	0xFDA
 20512                           fsr2l	equ	0xFD9
 20513                           status	equ	0xFD8
 20514                           
 20515 ;; *************** function _USBapp_exitCDCState *****************
 20516 ;; Defined at:
 20517 ;;		line 139 in file "../Includes/Board/USBapp.c"
 20518 ;; Parameters:    Size  Location     Type
 20519 ;;  usbState        1    wreg     enum E5834
 20520 ;; Auto vars:     Size  Location     Type
 20521 ;;  usbState        1    0[BANK0 ] enum E5834
 20522 ;; Return value:  Size  Location     Type
 20523 ;;                  1    wreg      void 
 20524 ;; Registers used:
 20525 ;;		wreg
 20526 ;; Tracked objects:
 20527 ;;		On entry : 0/0
 20528 ;;		On exit  : 0/0
 20529 ;;		Unchanged: 0/0
 20530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20531 ;;      Params:         0       0       0       0       0       0       0       0       0
 20532 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20533 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20534 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20535 ;;Total ram usage:        1 bytes
 20536 ;; Hardware stack levels used:    1
 20537 ;; Hardware stack levels required when called:   11
 20538 ;; This function calls:
 20539 ;;		Nothing
 20540 ;; This function is called by:
 20541 ;;		_moteHandler
 20542 ;; This function uses a non-reentrant model
 20543 ;;
 20544                           
 20545                           	psect	text56
 20546  00729E                     __ptext56:
 20547                           	opt stack 0
 20548  00729E                     _USBapp_exitCDCState:
 20549                           	opt stack 18
 20550                           
 20551                           ;incstack = 0
 20552                           ;USBapp_exitCDCState@usbState stored from wreg
 20553  00729E  0100               	movlb	0	; () banked
 20554  0072A0  6F60               	movwf	USBapp_exitCDCState@usbState& (0+255),b
 20555                           
 20556                           ;USBapp.c: 141: exitUSB = usbState;
 20557  0072A2  C060  F0F7         	movff	USBapp_exitCDCState@usbState,_exitUSB
 20558  0072A6  0012               	return		;funcret
 20559  0072A8                     __end_of_USBapp_exitCDCState:
 20560                           	opt stack 0
 20561                           tblptru	equ	0xFF8
 20562                           tblptrh	equ	0xFF7
 20563                           tblptrl	equ	0xFF6
 20564                           tablat	equ	0xFF5
 20565                           prodh	equ	0xFF4
 20566                           prodl	equ	0xFF3
 20567                           intcon	equ	0xFF2
 20568                           intcon3	equ	0xFF0
 20569                           postinc0	equ	0xFEE
 20570                           wreg	equ	0xFE8
 20571                           indf1	equ	0xFE7
 20572                           postdec1	equ	0xFE5
 20573                           fsr1h	equ	0xFE2
 20574                           fsr1l	equ	0xFE1
 20575                           indf2	equ	0xFDF
 20576                           fsr2h	equ	0xFDA
 20577                           fsr2l	equ	0xFD9
 20578                           status	equ	0xFD8
 20579                           
 20580 ;; *************** function _USBapp_exitCDC *****************
 20581 ;; Defined at:
 20582 ;;		line 134 in file "../Includes/Board/USBapp.c"
 20583 ;; Parameters:    Size  Location     Type
 20584 ;;		None
 20585 ;; Auto vars:     Size  Location     Type
 20586 ;;		None
 20587 ;; Return value:  Size  Location     Type
 20588 ;;                  1    wreg      enum E5898
 20589 ;; Registers used:
 20590 ;;		wreg, status,2
 20591 ;; Tracked objects:
 20592 ;;		On entry : 0/0
 20593 ;;		On exit  : 0/0
 20594 ;;		Unchanged: 0/0
 20595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20596 ;;      Params:         0       0       0       0       0       0       0       0       0
 20597 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20598 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20599 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20600 ;;Total ram usage:        0 bytes
 20601 ;; Hardware stack levels used:    1
 20602 ;; Hardware stack levels required when called:   11
 20603 ;; This function calls:
 20604 ;;		Nothing
 20605 ;; This function is called by:
 20606 ;;		_moteHandler
 20607 ;; This function uses a non-reentrant model
 20608 ;;
 20609                           
 20610                           	psect	text57
 20611  0072D6                     __ptext57:
 20612                           	opt stack 0
 20613  0072D6                     _USBapp_exitCDC:
 20614                           	opt stack 18
 20615                           
 20616                           ;USBapp.c: 136: return exitUSB;
 20617                           
 20618                           ;incstack = 0
 20619  0072D6  0100               	movlb	0	; () banked
 20620  0072D8  51F7               	movf	_exitUSB& (0+255),w,b
 20621  0072DA  D000               	goto	l859
 20622  0072DC                     l859:
 20623                           
 20624                           ; BSR set to: 0
 20625  0072DC  0012               	return		;funcret
 20626  0072DE                     __end_of_USBapp_exitCDC:
 20627                           	opt stack 0
 20628                           tblptru	equ	0xFF8
 20629                           tblptrh	equ	0xFF7
 20630                           tblptrl	equ	0xFF6
 20631                           tablat	equ	0xFF5
 20632                           prodh	equ	0xFF4
 20633                           prodl	equ	0xFF3
 20634                           intcon	equ	0xFF2
 20635                           intcon3	equ	0xFF0
 20636                           postinc0	equ	0xFEE
 20637                           wreg	equ	0xFE8
 20638                           indf1	equ	0xFE7
 20639                           postdec1	equ	0xFE5
 20640                           fsr1h	equ	0xFE2
 20641                           fsr1l	equ	0xFE1
 20642                           indf2	equ	0xFDF
 20643                           fsr2h	equ	0xFDA
 20644                           fsr2l	equ	0xFD9
 20645                           status	equ	0xFD8
 20646                           
 20647 ;; *************** function _TMRapp_Handler *****************
 20648 ;; Defined at:
 20649 ;;		line 57 in file "../Includes/Drivers/TMRapp.c"
 20650 ;; Parameters:    Size  Location     Type
 20651 ;;		None
 20652 ;; Auto vars:     Size  Location     Type
 20653 ;;		None
 20654 ;; Return value:  Size  Location     Type
 20655 ;;                  1    wreg      void 
 20656 ;; Registers used:
 20657 ;;		wreg, status,2, status,0, cstack
 20658 ;; Tracked objects:
 20659 ;;		On entry : 0/0
 20660 ;;		On exit  : 0/0
 20661 ;;		Unchanged: 0/0
 20662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20663 ;;      Params:         0       0       0       0       0       0       0       0       0
 20664 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20665 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20666 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20667 ;;Total ram usage:        0 bytes
 20668 ;; Hardware stack levels used:    1
 20669 ;; Hardware stack levels required when called:   12
 20670 ;; This function calls:
 20671 ;;		___almod
 20672 ;;		___lwmod
 20673 ;; This function is called by:
 20674 ;;		_moteHandler
 20675 ;; This function uses a non-reentrant model
 20676 ;;
 20677                           
 20678                           	psect	text58
 20679  003896                     __ptext58:
 20680                           	opt stack 0
 20681  003896                     _TMRapp_Handler:
 20682                           	opt stack 17
 20683                           
 20684                           ;TMRapp.c: 60: timerMsTickCount++;
 20685                           
 20686                           ; BSR set to: 0
 20687                           ;incstack = 0
 20688  003896  0100               	movlb	0	; () banked
 20689  003898  4BC5               	infsnz	_timerMsTickCount& (0+255),f,b
 20690  00389A  2BC6               	incf	(_timerMsTickCount+1)& (0+255),f,b
 20691                           
 20692                           ; BSR set to: 0
 20693                           ;TMRapp.c: 62: if ( (timerMsTickCount % 10) == 0)
 20694  00389C  C0C5  F060         	movff	_timerMsTickCount,___lwmod@dividend
 20695  0038A0  C0C6  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 20696  0038A4  0E00               	movlw	0
 20697  0038A6  0100               	movlb	0	; () banked
 20698  0038A8  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20699  0038AA  0E0A               	movlw	10
 20700  0038AC  6F62               	movwf	___lwmod@divisor& (0+255),b
 20701  0038AE  ECDA  F031         	call	___lwmod	;wreg free
 20702  0038B2  0100               	movlb	0	; () banked
 20703  0038B4  5160               	movf	?___lwmod& (0+255),w,b
 20704  0038B6  0100               	movlb	0	; () banked
 20705  0038B8  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20706  0038BA  A4D8               	btfss	status,2,c
 20707  0038BC  D001               	goto	u13011
 20708  0038BE  D001               	goto	u13010
 20709  0038C0                     u13011:
 20710  0038C0  D09F               	goto	l965
 20711  0038C2                     u13010:
 20712                           
 20713                           ; BSR set to: 0
 20714                           ;TMRapp.c: 63: {
 20715                           ;TMRapp.c: 64: appTimer.mSecTenTick = 1;
 20716  0038C2  0100               	movlb	0	; () banked
 20717  0038C4  83F2               	bsf	_appTimer& (0+255),1,b
 20718                           
 20719                           ; BSR set to: 0
 20720                           ;TMRapp.c: 65: if ( (timerMsTickCount % 100) == 0)
 20721  0038C6  C0C5  F060         	movff	_timerMsTickCount,___lwmod@dividend
 20722  0038CA  C0C6  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 20723  0038CE  0E00               	movlw	0
 20724  0038D0  0100               	movlb	0	; () banked
 20725  0038D2  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20726  0038D4  0E64               	movlw	100
 20727  0038D6  6F62               	movwf	___lwmod@divisor& (0+255),b
 20728  0038D8  ECDA  F031         	call	___lwmod	;wreg free
 20729  0038DC  0100               	movlb	0	; () banked
 20730  0038DE  5160               	movf	?___lwmod& (0+255),w,b
 20731  0038E0  0100               	movlb	0	; () banked
 20732  0038E2  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20733  0038E4  A4D8               	btfss	status,2,c
 20734  0038E6  D001               	goto	u13021
 20735  0038E8  D001               	goto	u13020
 20736  0038EA                     u13021:
 20737  0038EA  D08A               	goto	l965
 20738  0038EC                     u13020:
 20739                           
 20740                           ; BSR set to: 0
 20741                           ;TMRapp.c: 66: {
 20742                           ;TMRapp.c: 67: appTimer.mSecHundredTick = 1;
 20743  0038EC  0100               	movlb	0	; () banked
 20744  0038EE  85F2               	bsf	_appTimer& (0+255),2,b
 20745                           
 20746                           ; BSR set to: 0
 20747                           ;TMRapp.c: 68: if ( (timerMsTickCount % 1000) == 0)
 20748  0038F0  C0C5  F060         	movff	_timerMsTickCount,___lwmod@dividend
 20749  0038F4  C0C6  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 20750  0038F8  0E03               	movlw	3
 20751  0038FA  0100               	movlb	0	; () banked
 20752  0038FC  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20753  0038FE  0EE8               	movlw	232
 20754  003900  6F62               	movwf	___lwmod@divisor& (0+255),b
 20755  003902  ECDA  F031         	call	___lwmod	;wreg free
 20756  003906  0100               	movlb	0	; () banked
 20757  003908  5160               	movf	?___lwmod& (0+255),w,b
 20758  00390A  0100               	movlb	0	; () banked
 20759  00390C  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20760  00390E  A4D8               	btfss	status,2,c
 20761  003910  D001               	goto	u13031
 20762  003912  D001               	goto	u13030
 20763  003914                     u13031:
 20764  003914  D075               	goto	l965
 20765  003916                     u13030:
 20766                           
 20767                           ; BSR set to: 0
 20768                           ;TMRapp.c: 69: {
 20769                           ;TMRapp.c: 70: appTimer.SecTick = 1;
 20770  003916  0100               	movlb	0	; () banked
 20771  003918  87F2               	bsf	_appTimer& (0+255),3,b
 20772                           
 20773                           ; BSR set to: 0
 20774                           ;TMRapp.c: 71: if ( (timerMsTickCount % 60000) == 0)
 20775  00391A  C0C5  F060         	movff	_timerMsTickCount,___almod@dividend
 20776  00391E  C0C6  F061         	movff	_timerMsTickCount+1,___almod@dividend+1
 20777  003922  0100               	movlb	0	; () banked
 20778  003924  6B62               	clrf	(___almod@dividend+2)& (0+255),b
 20779  003926  6B63               	clrf	(___almod@dividend+3)& (0+255),b
 20780  003928  0E60               	movlw	96
 20781  00392A  0100               	movlb	0	; () banked
 20782  00392C  6F64               	movwf	___almod@divisor& (0+255),b
 20783  00392E  0EEA               	movlw	234
 20784  003930  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 20785  003932  0E00               	movlw	0
 20786  003934  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 20787  003936  0E00               	movlw	0
 20788  003938  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 20789  00393A  EC57  F021         	call	___almod	;wreg free
 20790  00393E  0100               	movlb	0	; () banked
 20791  003940  5160               	movf	?___almod& (0+255),w,b
 20792  003942  0100               	movlb	0	; () banked
 20793  003944  1161               	iorwf	(?___almod+1)& (0+255),w,b
 20794  003946  0100               	movlb	0	; () banked
 20795  003948  1162               	iorwf	(?___almod+2)& (0+255),w,b
 20796  00394A  0100               	movlb	0	; () banked
 20797  00394C  1163               	iorwf	(?___almod+3)& (0+255),w,b
 20798  00394E  A4D8               	btfss	status,2,c
 20799  003950  D001               	goto	u13041
 20800  003952  D001               	goto	u13040
 20801  003954                     u13041:
 20802  003954  D055               	goto	l965
 20803  003956                     u13040:
 20804                           
 20805                           ; BSR set to: 0
 20806                           ;TMRapp.c: 72: {
 20807                           ;TMRapp.c: 73: timerMinTickCount++;
 20808  003956  0100               	movlb	0	; () banked
 20809  003958  4BC3               	infsnz	_timerMinTickCount& (0+255),f,b
 20810  00395A  2BC4               	incf	(_timerMinTickCount+1)& (0+255),f,b
 20811                           
 20812                           ; BSR set to: 0
 20813                           ;TMRapp.c: 74: appTimer.MinTick = 1;
 20814  00395C  0100               	movlb	0	; () banked
 20815  00395E  89F2               	bsf	_appTimer& (0+255),4,b
 20816                           
 20817                           ; BSR set to: 0
 20818                           ;TMRapp.c: 75: if ( (timerMinTickCount % 60) == 0)
 20819  003960  C0C3  F060         	movff	_timerMinTickCount,___lwmod@dividend
 20820  003964  C0C4  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 20821  003968  0E00               	movlw	0
 20822  00396A  0100               	movlb	0	; () banked
 20823  00396C  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20824  00396E  0E3C               	movlw	60
 20825  003970  6F62               	movwf	___lwmod@divisor& (0+255),b
 20826  003972  ECDA  F031         	call	___lwmod	;wreg free
 20827  003976  0100               	movlb	0	; () banked
 20828  003978  5160               	movf	?___lwmod& (0+255),w,b
 20829  00397A  0100               	movlb	0	; () banked
 20830  00397C  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20831  00397E  A4D8               	btfss	status,2,c
 20832  003980  D001               	goto	u13051
 20833  003982  D001               	goto	u13050
 20834  003984                     u13051:
 20835  003984  D03D               	goto	l965
 20836  003986                     u13050:
 20837                           
 20838                           ; BSR set to: 0
 20839                           ;TMRapp.c: 76: {
 20840                           ;TMRapp.c: 77: appTimer.HourTick = 1;
 20841  003986  0100               	movlb	0	; () banked
 20842  003988  8BF2               	bsf	_appTimer& (0+255),5,b
 20843                           
 20844                           ; BSR set to: 0
 20845                           ;TMRapp.c: 78: if ( (timerMinTickCount % 720) == 0)
 20846  00398A  C0C3  F060         	movff	_timerMinTickCount,___lwmod@dividend
 20847  00398E  C0C4  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 20848  003992  0E02               	movlw	2
 20849  003994  0100               	movlb	0	; () banked
 20850  003996  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20851  003998  0ED0               	movlw	208
 20852  00399A  6F62               	movwf	___lwmod@divisor& (0+255),b
 20853  00399C  ECDA  F031         	call	___lwmod	;wreg free
 20854  0039A0  0100               	movlb	0	; () banked
 20855  0039A2  5160               	movf	?___lwmod& (0+255),w,b
 20856  0039A4  0100               	movlb	0	; () banked
 20857  0039A6  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20858  0039A8  A4D8               	btfss	status,2,c
 20859  0039AA  D001               	goto	u13061
 20860  0039AC  D001               	goto	u13060
 20861  0039AE                     u13061:
 20862  0039AE  D028               	goto	l965
 20863  0039B0                     u13060:
 20864                           
 20865                           ; BSR set to: 0
 20866                           ;TMRapp.c: 79: {
 20867                           ;TMRapp.c: 80: appTimer.HalfDayTick = 1;
 20868  0039B0  0100               	movlb	0	; () banked
 20869  0039B2  8DF2               	bsf	_appTimer& (0+255),6,b
 20870                           
 20871                           ; BSR set to: 0
 20872                           ;TMRapp.c: 81: if ( (timerMinTickCount % 1440) == 0)
 20873  0039B4  C0C3  F060         	movff	_timerMinTickCount,___lwmod@dividend
 20874  0039B8  C0C4  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 20875  0039BC  0E05               	movlw	5
 20876  0039BE  0100               	movlb	0	; () banked
 20877  0039C0  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20878  0039C2  0EA0               	movlw	160
 20879  0039C4  6F62               	movwf	___lwmod@divisor& (0+255),b
 20880  0039C6  ECDA  F031         	call	___lwmod	;wreg free
 20881  0039CA  0100               	movlb	0	; () banked
 20882  0039CC  5160               	movf	?___lwmod& (0+255),w,b
 20883  0039CE  0100               	movlb	0	; () banked
 20884  0039D0  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20885  0039D2  A4D8               	btfss	status,2,c
 20886  0039D4  D001               	goto	u13071
 20887  0039D6  D001               	goto	u13070
 20888  0039D8                     u13071:
 20889  0039D8  D013               	goto	l965
 20890  0039DA                     u13070:
 20891                           
 20892                           ; BSR set to: 0
 20893                           ;TMRapp.c: 82: {
 20894                           ;TMRapp.c: 83: appTimer.DayTick = 1;
 20895  0039DA  0100               	movlb	0	; () banked
 20896  0039DC  8FF2               	bsf	_appTimer& (0+255),7,b
 20897                           
 20898                           ; BSR set to: 0
 20899                           ;TMRapp.c: 85: timerMsTickCount = 0;
 20900  0039DE  0E00               	movlw	0
 20901  0039E0  0100               	movlb	0	; () banked
 20902  0039E2  6FC6               	movwf	(_timerMsTickCount+1)& (0+255),b
 20903  0039E4  0E00               	movlw	0
 20904  0039E6  6FC5               	movwf	_timerMsTickCount& (0+255),b
 20905                           
 20906                           ;TMRapp.c: 86: timerMinTickCount = 0;
 20907  0039E8  0E00               	movlw	0
 20908  0039EA  0100               	movlb	0	; () banked
 20909  0039EC  6FC4               	movwf	(_timerMinTickCount+1)& (0+255),b
 20910  0039EE  0E00               	movlw	0
 20911  0039F0  6FC3               	movwf	_timerMinTickCount& (0+255),b
 20912  0039F2  D006               	goto	l965
 20913                           
 20914                           ; BSR set to: 0
 20915  0039F4  D005               	goto	l965
 20916                           
 20917                           ; BSR set to: 0
 20918  0039F6  D004               	goto	l965
 20919                           
 20920                           ; BSR set to: 0
 20921  0039F8  D003               	goto	l965
 20922                           
 20923                           ; BSR set to: 0
 20924  0039FA  D002               	goto	l965
 20925                           
 20926                           ; BSR set to: 0
 20927  0039FC  D001               	goto	l965
 20928                           
 20929                           ; BSR set to: 0
 20930  0039FE  D000               	goto	l965
 20931  003A00                     l965:
 20932                           
 20933                           ; BSR set to: 0
 20934  003A00  0012               	return		;funcret
 20935  003A02                     __end_of_TMRapp_Handler:
 20936                           	opt stack 0
 20937                           tblptru	equ	0xFF8
 20938                           tblptrh	equ	0xFF7
 20939                           tblptrl	equ	0xFF6
 20940                           tablat	equ	0xFF5
 20941                           prodh	equ	0xFF4
 20942                           prodl	equ	0xFF3
 20943                           intcon	equ	0xFF2
 20944                           intcon3	equ	0xFF0
 20945                           postinc0	equ	0xFEE
 20946                           wreg	equ	0xFE8
 20947                           indf1	equ	0xFE7
 20948                           postdec1	equ	0xFE5
 20949                           fsr1h	equ	0xFE2
 20950                           fsr1l	equ	0xFE1
 20951                           indf2	equ	0xFDF
 20952                           fsr2h	equ	0xFDA
 20953                           fsr2l	equ	0xFD9
 20954                           status	equ	0xFD8
 20955                           
 20956 ;; *************** function ___lwmod *****************
 20957 ;; Defined at:
 20958 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
 20959 ;; Parameters:    Size  Location     Type
 20960 ;;  dividend        2    0[BANK0 ] unsigned int 
 20961 ;;  divisor         2    2[BANK0 ] unsigned int 
 20962 ;; Auto vars:     Size  Location     Type
 20963 ;;  counter         1    4[BANK0 ] unsigned char 
 20964 ;; Return value:  Size  Location     Type
 20965 ;;                  2    0[BANK0 ] unsigned int 
 20966 ;; Registers used:
 20967 ;;		wreg, status,2, status,0
 20968 ;; Tracked objects:
 20969 ;;		On entry : 0/0
 20970 ;;		On exit  : 0/0
 20971 ;;		Unchanged: 0/0
 20972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20973 ;;      Params:         0       4       0       0       0       0       0       0       0
 20974 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20975 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20976 ;;      Totals:         0       5       0       0       0       0       0       0       0
 20977 ;;Total ram usage:        5 bytes
 20978 ;; Hardware stack levels used:    1
 20979 ;; Hardware stack levels required when called:   11
 20980 ;; This function calls:
 20981 ;;		Nothing
 20982 ;; This function is called by:
 20983 ;;		_TMRapp_Handler
 20984 ;;		_moteApp_add16bToDataBuffer
 20985 ;;		_oled_putUint16
 20986 ;; This function uses a non-reentrant model
 20987 ;;
 20988                           
 20989                           	psect	text59
 20990  0063B4                     __ptext59:
 20991                           	opt stack 0
 20992  0063B4                     ___lwmod:
 20993                           	opt stack 17
 20994                           
 20995                           ; BSR set to: 0
 20996                           ;incstack = 0
 20997  0063B4  0100               	movlb	0	; () banked
 20998  0063B6  5162               	movf	___lwmod@divisor& (0+255),w,b
 20999  0063B8  0100               	movlb	0	; () banked
 21000  0063BA  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 21001  0063BC  B4D8               	btfsc	status,2,c
 21002  0063BE  D001               	goto	u12921
 21003  0063C0  D001               	goto	u12920
 21004  0063C2                     u12921:
 21005  0063C2  D02F               	goto	l2579
 21006  0063C4                     u12920:
 21007                           
 21008                           ; BSR set to: 0
 21009  0063C4  0E01               	movlw	1
 21010  0063C6  0100               	movlb	0	; () banked
 21011  0063C8  6F64               	movwf	___lwmod@counter& (0+255),b
 21012  0063CA  D007               	goto	l13487
 21013  0063CC                     l13485:
 21014                           
 21015                           ; BSR set to: 0
 21016  0063CC  0100               	movlb	0	; () banked
 21017  0063CE  90D8               	bcf	status,0,c
 21018  0063D0  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 21019  0063D2  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 21020  0063D4  0100               	movlb	0	; () banked
 21021  0063D6  2B64               	incf	___lwmod@counter& (0+255),f,b
 21022  0063D8  D000               	goto	l13487
 21023  0063DA                     l13487:
 21024                           
 21025                           ; BSR set to: 0
 21026  0063DA  0100               	movlb	0	; () banked
 21027  0063DC  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 21028  0063DE  D001               	goto	u12931
 21029  0063E0  D001               	goto	u12930
 21030  0063E2                     u12931:
 21031  0063E2  D7F4               	goto	l13485
 21032  0063E4                     u12930:
 21033  0063E4  D001               	goto	l13489
 21034                           
 21035                           ; BSR set to: 0
 21036  0063E6  D000               	goto	l13489
 21037  0063E8                     l13489:
 21038                           
 21039                           ; BSR set to: 0
 21040  0063E8  0100               	movlb	0	; () banked
 21041  0063EA  5162               	movf	___lwmod@divisor& (0+255),w,b
 21042  0063EC  0100               	movlb	0	; () banked
 21043  0063EE  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 21044  0063F0  0100               	movlb	0	; () banked
 21045  0063F2  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 21046  0063F4  0100               	movlb	0	; () banked
 21047  0063F6  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 21048  0063F8  A0D8               	btfss	status,0,c
 21049  0063FA  D001               	goto	u12941
 21050  0063FC  D001               	goto	u12940
 21051  0063FE                     u12941:
 21052  0063FE  D009               	goto	l13493
 21053  006400                     u12940:
 21054                           
 21055                           ; BSR set to: 0
 21056  006400  0100               	movlb	0	; () banked
 21057  006402  5162               	movf	___lwmod@divisor& (0+255),w,b
 21058  006404  0100               	movlb	0	; () banked
 21059  006406  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 21060  006408  0100               	movlb	0	; () banked
 21061  00640A  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 21062  00640C  0100               	movlb	0	; () banked
 21063  00640E  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 21064  006410  D000               	goto	l13493
 21065  006412                     l13493:
 21066                           
 21067                           ; BSR set to: 0
 21068  006412  0100               	movlb	0	; () banked
 21069  006414  90D8               	bcf	status,0,c
 21070  006416  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 21071  006418  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 21072                           
 21073                           ; BSR set to: 0
 21074  00641A  0100               	movlb	0	; () banked
 21075  00641C  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 21076  00641E  D7E4               	goto	l13489
 21077  006420  D000               	goto	l2579
 21078  006422                     l2579:
 21079                           
 21080                           ; BSR set to: 0
 21081  006422  C060  F060         	movff	___lwmod@dividend,?___lwmod
 21082  006426  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 21083                           
 21084                           ; BSR set to: 0
 21085  00642A  0012               	return		;funcret
 21086  00642C                     __end_of___lwmod:
 21087                           	opt stack 0
 21088                           tblptru	equ	0xFF8
 21089                           tblptrh	equ	0xFF7
 21090                           tblptrl	equ	0xFF6
 21091                           tablat	equ	0xFF5
 21092                           prodh	equ	0xFF4
 21093                           prodl	equ	0xFF3
 21094                           intcon	equ	0xFF2
 21095                           intcon3	equ	0xFF0
 21096                           postinc0	equ	0xFEE
 21097                           wreg	equ	0xFE8
 21098                           indf1	equ	0xFE7
 21099                           postdec1	equ	0xFE5
 21100                           fsr1h	equ	0xFE2
 21101                           fsr1l	equ	0xFE1
 21102                           indf2	equ	0xFDF
 21103                           fsr2h	equ	0xFDA
 21104                           fsr2l	equ	0xFD9
 21105                           status	equ	0xFD8
 21106                           
 21107 ;; *************** function ___almod *****************
 21108 ;; Defined at:
 21109 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\almod.c"
 21110 ;; Parameters:    Size  Location     Type
 21111 ;;  dividend        4    0[BANK0 ] long 
 21112 ;;  divisor         4    4[BANK0 ] long 
 21113 ;; Auto vars:     Size  Location     Type
 21114 ;;  sign            1    9[BANK0 ] unsigned char 
 21115 ;;  counter         1    8[BANK0 ] unsigned char 
 21116 ;; Return value:  Size  Location     Type
 21117 ;;                  4    0[BANK0 ] long 
 21118 ;; Registers used:
 21119 ;;		wreg, status,2, status,0
 21120 ;; Tracked objects:
 21121 ;;		On entry : 0/0
 21122 ;;		On exit  : 0/0
 21123 ;;		Unchanged: 0/0
 21124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21125 ;;      Params:         0       8       0       0       0       0       0       0       0
 21126 ;;      Locals:         0       2       0       0       0       0       0       0       0
 21127 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21128 ;;      Totals:         0      10       0       0       0       0       0       0       0
 21129 ;;Total ram usage:       10 bytes
 21130 ;; Hardware stack levels used:    1
 21131 ;; Hardware stack levels required when called:   11
 21132 ;; This function calls:
 21133 ;;		Nothing
 21134 ;; This function is called by:
 21135 ;;		_TMRapp_Handler
 21136 ;; This function uses a non-reentrant model
 21137 ;;
 21138                           
 21139                           	psect	text60
 21140  0042AE                     __ptext60:
 21141                           	opt stack 0
 21142  0042AE                     ___almod:
 21143                           	opt stack 17
 21144                           
 21145                           ; BSR set to: 0
 21146                           ;incstack = 0
 21147  0042AE  0E00               	movlw	0
 21148  0042B0  0100               	movlb	0	; () banked
 21149  0042B2  6F69               	movwf	___almod@sign& (0+255),b
 21150                           
 21151                           ; BSR set to: 0
 21152  0042B4  0100               	movlb	0	; () banked
 21153  0042B6  BF63               	btfsc	(___almod@dividend+3)& (0+255),7,b
 21154  0042B8  D002               	goto	u12860
 21155  0042BA  D000               	goto	u12861
 21156  0042BC                     u12861:
 21157  0042BC  D00D               	goto	l13453
 21158  0042BE                     u12860:
 21159                           
 21160                           ; BSR set to: 0
 21161  0042BE  0100               	movlb	0	; () banked
 21162  0042C0  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 21163  0042C2  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 21164  0042C4  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 21165  0042C6  6D60               	negf	___almod@dividend& (0+255),b
 21166  0042C8  0E00               	movlw	0
 21167  0042CA  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 21168  0042CC  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 21169  0042CE  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 21170                           
 21171                           ; BSR set to: 0
 21172  0042D0  0E01               	movlw	1
 21173  0042D2  0100               	movlb	0	; () banked
 21174  0042D4  6F69               	movwf	___almod@sign& (0+255),b
 21175  0042D6  D000               	goto	l13453
 21176  0042D8                     l13453:
 21177                           
 21178                           ; BSR set to: 0
 21179  0042D8  0100               	movlb	0	; () banked
 21180  0042DA  BF67               	btfsc	(___almod@divisor+3)& (0+255),7,b
 21181  0042DC  D002               	goto	u12870
 21182  0042DE  D000               	goto	u12871
 21183  0042E0                     u12871:
 21184  0042E0  D00A               	goto	l13457
 21185  0042E2                     u12870:
 21186                           
 21187                           ; BSR set to: 0
 21188  0042E2  0100               	movlb	0	; () banked
 21189  0042E4  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 21190  0042E6  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 21191  0042E8  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 21192  0042EA  6D64               	negf	___almod@divisor& (0+255),b
 21193  0042EC  0E00               	movlw	0
 21194  0042EE  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 21195  0042F0  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 21196  0042F2  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 21197  0042F4  D000               	goto	l13457
 21198  0042F6                     l13457:
 21199                           
 21200                           ; BSR set to: 0
 21201  0042F6  0100               	movlb	0	; () banked
 21202  0042F8  5164               	movf	___almod@divisor& (0+255),w,b
 21203  0042FA  0100               	movlb	0	; () banked
 21204  0042FC  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 21205  0042FE  0100               	movlb	0	; () banked
 21206  004300  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 21207  004302  0100               	movlb	0	; () banked
 21208  004304  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 21209  004306  B4D8               	btfsc	status,2,c
 21210  004308  D001               	goto	u12881
 21211  00430A  D001               	goto	u12880
 21212  00430C                     u12881:
 21213  00430C  D044               	goto	l13473
 21214  00430E                     u12880:
 21215                           
 21216                           ; BSR set to: 0
 21217  00430E  0E01               	movlw	1
 21218  004310  0100               	movlb	0	; () banked
 21219  004312  6F68               	movwf	___almod@counter& (0+255),b
 21220  004314  D009               	goto	l13463
 21221  004316                     l13461:
 21222                           
 21223                           ; BSR set to: 0
 21224  004316  0100               	movlb	0	; () banked
 21225  004318  90D8               	bcf	status,0,c
 21226  00431A  3764               	rlcf	___almod@divisor& (0+255),f,b
 21227  00431C  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 21228  00431E  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 21229  004320  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 21230  004322  0100               	movlb	0	; () banked
 21231  004324  2B68               	incf	___almod@counter& (0+255),f,b
 21232  004326  D000               	goto	l13463
 21233  004328                     l13463:
 21234                           
 21235                           ; BSR set to: 0
 21236  004328  0100               	movlb	0	; () banked
 21237  00432A  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 21238  00432C  D001               	goto	u12891
 21239  00432E  D001               	goto	u12890
 21240  004330                     u12891:
 21241  004330  D7F2               	goto	l13461
 21242  004332                     u12890:
 21243  004332  D001               	goto	l13465
 21244                           
 21245                           ; BSR set to: 0
 21246  004334  D000               	goto	l13465
 21247  004336                     l13465:
 21248                           
 21249                           ; BSR set to: 0
 21250  004336  0100               	movlb	0	; () banked
 21251  004338  5164               	movf	___almod@divisor& (0+255),w,b
 21252  00433A  0100               	movlb	0	; () banked
 21253  00433C  5D60               	subwf	___almod@dividend& (0+255),w,b
 21254  00433E  0100               	movlb	0	; () banked
 21255  004340  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 21256  004342  0100               	movlb	0	; () banked
 21257  004344  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 21258  004346  0100               	movlb	0	; () banked
 21259  004348  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 21260  00434A  0100               	movlb	0	; () banked
 21261  00434C  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 21262  00434E  0100               	movlb	0	; () banked
 21263  004350  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 21264  004352  0100               	movlb	0	; () banked
 21265  004354  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 21266  004356  A0D8               	btfss	status,0,c
 21267  004358  D001               	goto	u12901
 21268  00435A  D001               	goto	u12900
 21269  00435C                     u12901:
 21270  00435C  D011               	goto	l13469
 21271  00435E                     u12900:
 21272                           
 21273                           ; BSR set to: 0
 21274  00435E  0100               	movlb	0	; () banked
 21275  004360  5164               	movf	___almod@divisor& (0+255),w,b
 21276  004362  0100               	movlb	0	; () banked
 21277  004364  5F60               	subwf	___almod@dividend& (0+255),f,b
 21278  004366  0100               	movlb	0	; () banked
 21279  004368  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 21280  00436A  0100               	movlb	0	; () banked
 21281  00436C  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 21282  00436E  0100               	movlb	0	; () banked
 21283  004370  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 21284  004372  0100               	movlb	0	; () banked
 21285  004374  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 21286  004376  0100               	movlb	0	; () banked
 21287  004378  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 21288  00437A  0100               	movlb	0	; () banked
 21289  00437C  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 21290  00437E  D000               	goto	l13469
 21291  004380                     l13469:
 21292                           
 21293                           ; BSR set to: 0
 21294  004380  0100               	movlb	0	; () banked
 21295  004382  90D8               	bcf	status,0,c
 21296  004384  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 21297  004386  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 21298  004388  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 21299  00438A  3364               	rrcf	___almod@divisor& (0+255),f,b
 21300                           
 21301                           ; BSR set to: 0
 21302  00438C  0100               	movlb	0	; () banked
 21303  00438E  2F68               	decfsz	___almod@counter& (0+255),f,b
 21304  004390  D7D2               	goto	l13465
 21305  004392  D001               	goto	l13473
 21306                           
 21307                           ; BSR set to: 0
 21308  004394  D000               	goto	l13473
 21309  004396                     l13473:
 21310                           
 21311                           ; BSR set to: 0
 21312  004396  0100               	movlb	0	; () banked
 21313  004398  5169               	movf	___almod@sign& (0+255),w,b
 21314  00439A  0100               	movlb	0	; () banked
 21315  00439C  B4D8               	btfsc	status,2,c
 21316  00439E  D001               	goto	u12911
 21317  0043A0  D001               	goto	u12910
 21318  0043A2                     u12911:
 21319  0043A2  D00A               	goto	l13477
 21320  0043A4                     u12910:
 21321                           
 21322                           ; BSR set to: 0
 21323  0043A4  0100               	movlb	0	; () banked
 21324  0043A6  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 21325  0043A8  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 21326  0043AA  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 21327  0043AC  6D60               	negf	___almod@dividend& (0+255),b
 21328  0043AE  0E00               	movlw	0
 21329  0043B0  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 21330  0043B2  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 21331  0043B4  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 21332  0043B6  D000               	goto	l13477
 21333  0043B8                     l13477:
 21334                           
 21335                           ; BSR set to: 0
 21336  0043B8  C060  F060         	movff	___almod@dividend,?___almod
 21337  0043BC  C061  F061         	movff	___almod@dividend+1,?___almod+1
 21338  0043C0  C062  F062         	movff	___almod@dividend+2,?___almod+2
 21339  0043C4  C063  F063         	movff	___almod@dividend+3,?___almod+3
 21340  0043C8  D000               	goto	l2245
 21341  0043CA                     l2245:
 21342                           
 21343                           ; BSR set to: 0
 21344  0043CA  0012               	return		;funcret
 21345  0043CC                     __end_of___almod:
 21346                           	opt stack 0
 21347                           tblptru	equ	0xFF8
 21348                           tblptrh	equ	0xFF7
 21349                           tblptrl	equ	0xFF6
 21350                           tablat	equ	0xFF5
 21351                           prodh	equ	0xFF4
 21352                           prodl	equ	0xFF3
 21353                           intcon	equ	0xFF2
 21354                           intcon3	equ	0xFF0
 21355                           postinc0	equ	0xFEE
 21356                           wreg	equ	0xFE8
 21357                           indf1	equ	0xFE7
 21358                           postdec1	equ	0xFE5
 21359                           fsr1h	equ	0xFE2
 21360                           fsr1l	equ	0xFE1
 21361                           indf2	equ	0xFDF
 21362                           fsr2h	equ	0xFDA
 21363                           fsr2l	equ	0xFD9
 21364                           status	equ	0xFD8
 21365                           
 21366 ;; *************** function _TMRapp_ClearBitFlags *****************
 21367 ;; Defined at:
 21368 ;;		line 51 in file "../Includes/Drivers/TMRapp.c"
 21369 ;; Parameters:    Size  Location     Type
 21370 ;;		None
 21371 ;; Auto vars:     Size  Location     Type
 21372 ;;		None
 21373 ;; Return value:  Size  Location     Type
 21374 ;;                  1    wreg      void 
 21375 ;; Registers used:
 21376 ;;		wreg, status,2
 21377 ;; Tracked objects:
 21378 ;;		On entry : 0/0
 21379 ;;		On exit  : 0/0
 21380 ;;		Unchanged: 0/0
 21381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21382 ;;      Params:         0       0       0       0       0       0       0       0       0
 21383 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21384 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21385 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21386 ;;Total ram usage:        0 bytes
 21387 ;; Hardware stack levels used:    1
 21388 ;; Hardware stack levels required when called:   11
 21389 ;; This function calls:
 21390 ;;		Nothing
 21391 ;; This function is called by:
 21392 ;;		_moteHandler
 21393 ;; This function uses a non-reentrant model
 21394 ;;
 21395                           
 21396                           	psect	text61
 21397  0072DE                     __ptext61:
 21398                           	opt stack 0
 21399  0072DE                     _TMRapp_ClearBitFlags:
 21400                           	opt stack 18
 21401                           
 21402                           ;TMRapp.c: 54: appTimer.TicksBitMap = 0x00;
 21403                           
 21404                           ; BSR set to: 0
 21405                           ;incstack = 0
 21406  0072DE  0E00               	movlw	0
 21407  0072E0  0100               	movlb	0	; () banked
 21408  0072E2  6FF2               	movwf	_appTimer& (0+255),b
 21409                           
 21410                           ; BSR set to: 0
 21411  0072E4  0012               	return		;funcret
 21412  0072E6                     __end_of_TMRapp_ClearBitFlags:
 21413                           	opt stack 0
 21414                           tblptru	equ	0xFF8
 21415                           tblptrh	equ	0xFF7
 21416                           tblptrl	equ	0xFF6
 21417                           tablat	equ	0xFF5
 21418                           prodh	equ	0xFF4
 21419                           prodl	equ	0xFF3
 21420                           intcon	equ	0xFF2
 21421                           intcon3	equ	0xFF0
 21422                           postinc0	equ	0xFEE
 21423                           wreg	equ	0xFE8
 21424                           indf1	equ	0xFE7
 21425                           postdec1	equ	0xFE5
 21426                           fsr1h	equ	0xFE2
 21427                           fsr1l	equ	0xFE1
 21428                           indf2	equ	0xFDF
 21429                           fsr2h	equ	0xFDA
 21430                           fsr2l	equ	0xFD9
 21431                           status	equ	0xFD8
 21432                           
 21433 ;; *************** function _MOTEapp_TimerBasedTask *****************
 21434 ;; Defined at:
 21435 ;;		line 1025 in file "../Includes/Board/MOTEapp.c"
 21436 ;; Parameters:    Size  Location     Type
 21437 ;;  timerTask       1    wreg     struct .
 21438 ;; Auto vars:     Size  Location     Type
 21439 ;;  timerTask       1    0[BANK0 ] struct .
 21440 ;; Return value:  Size  Location     Type
 21441 ;;                  1    wreg      void 
 21442 ;; Registers used:
 21443 ;;		wreg, status,2, status,0
 21444 ;; Tracked objects:
 21445 ;;		On entry : 0/0
 21446 ;;		On exit  : 0/0
 21447 ;;		Unchanged: 0/0
 21448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21449 ;;      Params:         0       0       0       0       0       0       0       0       0
 21450 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21451 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21452 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21453 ;;Total ram usage:        1 bytes
 21454 ;; Hardware stack levels used:    1
 21455 ;; Hardware stack levels required when called:   11
 21456 ;; This function calls:
 21457 ;;		Nothing
 21458 ;; This function is called by:
 21459 ;;		_moteHandler
 21460 ;; This function uses a non-reentrant model
 21461 ;;
 21462                           
 21463                           	psect	text62
 21464  006B8A                     __ptext62:
 21465                           	opt stack 0
 21466  006B8A                     _MOTEapp_TimerBasedTask:
 21467                           	opt stack 18
 21468                           
 21469                           ; BSR set to: 0
 21470                           ;incstack = 0
 21471                           ;MOTEapp_TimerBasedTask@timerTask stored from wreg
 21472  006B8A  0100               	movlb	0	; () banked
 21473  006B8C  6F60               	movwf	MOTEapp_TimerBasedTask@timerTask& (0+255),b
 21474                           
 21475                           ;MOTEapp.c: 1030: if (timerTask.mSecTenTick)
 21476  006B8E  0100               	movlb	0	; () banked
 21477  006B90  A360               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),1,b
 21478  006B92  D001               	goto	u13081
 21479  006B94  D001               	goto	u13080
 21480  006B96                     u13081:
 21481  006B96  D006               	goto	l13659
 21482  006B98                     u13080:
 21483                           
 21484                           ; BSR set to: 0
 21485                           ;MOTEapp.c: 1031: {
 21486                           ;MOTEapp.c: 1033: m10SecTicker++;
 21487  006B98  0101               	movlb	1	; () banked
 21488  006B9A  4B56               	infsnz	_m10SecTicker& (0+255),f,b
 21489  006B9C  2B57               	incf	(_m10SecTicker+1)& (0+255),f,b
 21490  006B9E  D002               	goto	l13659
 21491                           
 21492                           ; BSR set to: 1
 21493  006BA0  D001               	goto	l13659
 21494                           
 21495                           ; BSR set to: 1
 21496  006BA2  D000               	goto	l13659
 21497  006BA4                     l13659:
 21498                           
 21499                           ;MOTEapp.c: 1039: }
 21500                           ;MOTEapp.c: 1040: if (timerTask.SecTick)
 21501  006BA4  0100               	movlb	0	; () banked
 21502  006BA6  A760               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),3,b
 21503  006BA8  D001               	goto	u13091
 21504  006BAA  D001               	goto	u13090
 21505  006BAC                     u13091:
 21506  006BAC  D003               	goto	l13663
 21507  006BAE                     u13090:
 21508                           
 21509                           ; BSR set to: 0
 21510                           ;MOTEapp.c: 1041: {
 21511                           ;MOTEapp.c: 1043: secTicker++;
 21512  006BAE  0100               	movlb	0	; () banked
 21513  006BB0  2BE5               	incf	_secTicker& (0+255),f,b
 21514  006BB2  D000               	goto	l13663
 21515  006BB4                     l13663:
 21516                           
 21517                           ; BSR set to: 0
 21518                           ;MOTEapp.c: 1044: }
 21519                           ;MOTEapp.c: 1045: if (timerTask.MinTick)
 21520  006BB4  0100               	movlb	0	; () banked
 21521  006BB6  A960               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),4,b
 21522  006BB8  D001               	goto	u13101
 21523  006BBA  D001               	goto	u13100
 21524  006BBC                     u13101:
 21525  006BBC  D009               	goto	l610
 21526  006BBE                     u13100:
 21527                           
 21528                           ; BSR set to: 0
 21529                           ;MOTEapp.c: 1046: {
 21530                           ;MOTEapp.c: 1048: minTicker++;
 21531  006BBE  0100               	movlb	0	; () banked
 21532  006BC0  2BE4               	incf	_minTicker& (0+255),f,b
 21533  006BC2  D006               	goto	l610
 21534                           
 21535                           ; BSR set to: 0
 21536  006BC4  D005               	goto	l610
 21537                           
 21538                           ; BSR set to: 0
 21539  006BC6  D004               	goto	l610
 21540                           
 21541                           ; BSR set to: 0
 21542                           
 21543                           ;MOTEapp.c: 1051: {
 21544  006BC8  D003               	goto	l610
 21545                           
 21546                           ; BSR set to: 0
 21547  006BCA  D002               	goto	l610
 21548                           
 21549                           ; BSR set to: 0
 21550                           
 21551                           ;MOTEapp.c: 1055: {
 21552  006BCC  D001               	goto	l610
 21553                           
 21554                           ; BSR set to: 0
 21555  006BCE  D000               	goto	l610
 21556  006BD0                     l610:
 21557                           
 21558                           ; BSR set to: 0
 21559  006BD0  0012               	return		;funcret
 21560  006BD2                     __end_of_MOTEapp_TimerBasedTask:
 21561                           	opt stack 0
 21562                           tblptru	equ	0xFF8
 21563                           tblptrh	equ	0xFF7
 21564                           tblptrl	equ	0xFF6
 21565                           tablat	equ	0xFF5
 21566                           prodh	equ	0xFF4
 21567                           prodl	equ	0xFF3
 21568                           intcon	equ	0xFF2
 21569                           intcon3	equ	0xFF0
 21570                           postinc0	equ	0xFEE
 21571                           wreg	equ	0xFE8
 21572                           indf1	equ	0xFE7
 21573                           postdec1	equ	0xFE5
 21574                           fsr1h	equ	0xFE2
 21575                           fsr1l	equ	0xFE1
 21576                           indf2	equ	0xFDF
 21577                           fsr2h	equ	0xFDA
 21578                           fsr2l	equ	0xFD9
 21579                           status	equ	0xFD8
 21580                           
 21581 ;; *************** function _moteApp_clearCommand *****************
 21582 ;; Defined at:
 21583 ;;		line 1257 in file "../Includes/Board/MOTEapp.c"
 21584 ;; Parameters:    Size  Location     Type
 21585 ;;		None
 21586 ;; Auto vars:     Size  Location     Type
 21587 ;;		None
 21588 ;; Return value:  Size  Location     Type
 21589 ;;                  1    wreg      void 
 21590 ;; Registers used:
 21591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21592 ;; Tracked objects:
 21593 ;;		On entry : 0/0
 21594 ;;		On exit  : 0/0
 21595 ;;		Unchanged: 0/0
 21596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21597 ;;      Params:         0       0       0       0       0       0       0       0       0
 21598 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21599 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21600 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21601 ;;Total ram usage:        0 bytes
 21602 ;; Hardware stack levels used:    1
 21603 ;; Hardware stack levels required when called:   14
 21604 ;; This function calls:
 21605 ;;		_sendCommand
 21606 ;; This function is called by:
 21607 ;;		_main
 21608 ;; This function uses a non-reentrant model
 21609 ;;
 21610                           
 21611                           	psect	text63
 21612  007244                     __ptext63:
 21613                           	opt stack 0
 21614  007244                     _moteApp_clearCommand:
 21615                           	opt stack 16
 21616                           
 21617                           ;MOTEapp.c: 1259: sendCommand("\r\n");
 21618                           
 21619                           ; BSR set to: 0
 21620                           ;incstack = 0
 21621  007244  0E05               	movlw	low (STR_177+23)
 21622  007246  0100               	movlb	0	; () banked
 21623  007248  6F61               	movwf	sendCommand@string& (0+255),b
 21624  00724A  0E7A               	movlw	high (STR_177+23)
 21625  00724C  0100               	movlb	0	; () banked
 21626  00724E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 21627  007250  EC66  F037         	call	_sendCommand	;wreg free
 21628  007254  0012               	return		;funcret
 21629  007256                     __end_of_moteApp_clearCommand:
 21630                           	opt stack 0
 21631                           tblptru	equ	0xFF8
 21632                           tblptrh	equ	0xFF7
 21633                           tblptrl	equ	0xFF6
 21634                           tablat	equ	0xFF5
 21635                           prodh	equ	0xFF4
 21636                           prodl	equ	0xFF3
 21637                           intcon	equ	0xFF2
 21638                           intcon3	equ	0xFF0
 21639                           postinc0	equ	0xFEE
 21640                           wreg	equ	0xFE8
 21641                           indf1	equ	0xFE7
 21642                           postdec1	equ	0xFE5
 21643                           fsr1h	equ	0xFE2
 21644                           fsr1l	equ	0xFE1
 21645                           indf2	equ	0xFDF
 21646                           fsr2h	equ	0xFDA
 21647                           fsr2l	equ	0xFD9
 21648                           status	equ	0xFD8
 21649                           
 21650 ;; *************** function _sendCommand *****************
 21651 ;; Defined at:
 21652 ;;		line 1112 in file "../Includes/Board/MOTEapp.c"
 21653 ;; Parameters:    Size  Location     Type
 21654 ;;  string          2    1[BANK0 ] PTR const unsigned char 
 21655 ;;		 -> STR_186(22), STR_185(22), STR_184(27), STR_183(27), 
 21656 ;;		 -> STR_178(26), STR_177(26), STR_176(26), STR_175(26), 
 21657 ;;		 -> STR_174(3), STR_173(9), STR_172(15), STR_171(13), 
 21658 ;;		 -> STR_170(13), STR_169(13), STR_168(13), STR_167(13), 
 21659 ;;		 -> STR_166(13), STR_165(13), STR_164(13), STR_163(16), 
 21660 ;;		 -> STR_70(11), STR_68(11), STR_66(14), STR_58(14), 
 21661 ;;		 -> STR_52(10), STR_48(13), STR_43(14), STR_41(13), 
 21662 ;;		 -> STR_39(10), STR_30(10), STR_22(20), STR_21(2), 
 21663 ;; Auto vars:     Size  Location     Type
 21664 ;;		None
 21665 ;; Return value:  Size  Location     Type
 21666 ;;                  1    wreg      void 
 21667 ;; Registers used:
 21668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21669 ;; Tracked objects:
 21670 ;;		On entry : 0/0
 21671 ;;		On exit  : 0/0
 21672 ;;		Unchanged: 0/0
 21673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21674 ;;      Params:         0       2       0       0       0       0       0       0       0
 21675 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21676 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21677 ;;      Totals:         0       2       0       0       0       0       0       0       0
 21678 ;;Total ram usage:        2 bytes
 21679 ;; Hardware stack levels used:    1
 21680 ;; Hardware stack levels required when called:   13
 21681 ;; This function calls:
 21682 ;;		_EUSART_Write
 21683 ;;		_EndLine
 21684 ;; This function is called by:
 21685 ;;		_moduleResync
 21686 ;;		_moduleSleep
 21687 ;;		_moteJoiningProcess
 21688 ;;		_MOTEapp_SetDataRateSetting
 21689 ;;		_moteApp_clearCommand
 21690 ;;		_moteApp_toggleLeds
 21691 ;;		_moteApp_setSensorsInput
 21692 ;;		_moteApp_getTempValue
 21693 ;;		_moteApp_getLightValue
 21694 ;; This function uses a non-reentrant model
 21695 ;;
 21696                           
 21697                           	psect	text64
 21698  006ECC                     __ptext64:
 21699                           	opt stack 0
 21700  006ECC                     _sendCommand:
 21701                           	opt stack 14
 21702                           
 21703                           ;MOTEapp.c: 1115: while (*string)
 21704                           
 21705                           ;incstack = 0
 21706  006ECC  D00C               	goto	l11995
 21707  006ECE                     l11991:
 21708                           
 21709                           ;MOTEapp.c: 1116: {
 21710                           ;MOTEapp.c: 1117: EUSART_Write(*string++);
 21711  006ECE  C061  FFF6         	movff	sendCommand@string,tblptrl
 21712  006ED2  C062  FFF7         	movff	sendCommand@string+1,tblptrh
 21713  006ED6                     	if	0	;tblptru may be non-zero
 21714  006ED6                     	endif
 21715  006ED6                     	if	0	;tblptru may be non-zero
 21716  006ED6                     	endif
 21717  006ED6  0008               	tblrd		*
 21718  006ED8  50F5               	movf	tablat,w,c
 21719  006EDA  ECC8  F034         	call	_EUSART_Write
 21720  006EDE  0100               	movlb	0	; () banked
 21721  006EE0  4B61               	infsnz	sendCommand@string& (0+255),f,b
 21722  006EE2  2B62               	incf	(sendCommand@string+1)& (0+255),f,b
 21723  006EE4  D000               	goto	l11995
 21724  006EE6                     l11995:
 21725  006EE6  C061  FFF6         	movff	sendCommand@string,tblptrl
 21726  006EEA  C062  FFF7         	movff	sendCommand@string+1,tblptrh
 21727  006EEE                     	if	0	;tblptru may be non-zero
 21728  006EEE                     	endif
 21729  006EEE                     	if	0	;tblptru may be non-zero
 21730  006EEE                     	endif
 21731  006EEE  0008               	tblrd		*
 21732  006EF0  50F5               	movf	tablat,w,c
 21733  006EF2  0900               	iorlw	0
 21734  006EF4  A4D8               	btfss	status,2,c
 21735  006EF6  D001               	goto	u10861
 21736  006EF8  D001               	goto	u10860
 21737  006EFA                     u10861:
 21738  006EFA  D7E9               	goto	l11991
 21739  006EFC                     u10860:
 21740  006EFC  D000               	goto	l11997
 21741  006EFE                     l11997:
 21742                           
 21743                           ;MOTEapp.c: 1118: }
 21744                           ;MOTEapp.c: 1119: EndLine();
 21745  006EFE  EC3C  F039         	call	_EndLine	;wreg free
 21746  006F02  0012               	return		;funcret
 21747  006F04                     __end_of_sendCommand:
 21748                           	opt stack 0
 21749                           tblptru	equ	0xFF8
 21750                           tblptrh	equ	0xFF7
 21751                           tblptrl	equ	0xFF6
 21752                           tablat	equ	0xFF5
 21753                           prodh	equ	0xFF4
 21754                           prodl	equ	0xFF3
 21755                           intcon	equ	0xFF2
 21756                           intcon3	equ	0xFF0
 21757                           postinc0	equ	0xFEE
 21758                           wreg	equ	0xFE8
 21759                           indf1	equ	0xFE7
 21760                           postdec1	equ	0xFE5
 21761                           fsr1h	equ	0xFE2
 21762                           fsr1l	equ	0xFE1
 21763                           indf2	equ	0xFDF
 21764                           fsr2h	equ	0xFDA
 21765                           fsr2l	equ	0xFD9
 21766                           status	equ	0xFD8
 21767                           
 21768 ;; *************** function _EndLine *****************
 21769 ;; Defined at:
 21770 ;;		line 1106 in file "../Includes/Board/MOTEapp.c"
 21771 ;; Parameters:    Size  Location     Type
 21772 ;;		None
 21773 ;; Auto vars:     Size  Location     Type
 21774 ;;		None
 21775 ;; Return value:  Size  Location     Type
 21776 ;;                  1    wreg      void 
 21777 ;; Registers used:
 21778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21779 ;; Tracked objects:
 21780 ;;		On entry : 0/0
 21781 ;;		On exit  : 0/0
 21782 ;;		Unchanged: 0/0
 21783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21784 ;;      Params:         0       0       0       0       0       0       0       0       0
 21785 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21786 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21787 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21788 ;;Total ram usage:        0 bytes
 21789 ;; Hardware stack levels used:    1
 21790 ;; Hardware stack levels required when called:   12
 21791 ;; This function calls:
 21792 ;;		_EUSART_Write
 21793 ;; This function is called by:
 21794 ;;		_sendCommand
 21795 ;;		_sendDataCommand
 21796 ;; This function uses a non-reentrant model
 21797 ;;
 21798                           
 21799                           	psect	text65
 21800  007278                     __ptext65:
 21801                           	opt stack 0
 21802  007278                     _EndLine:
 21803                           	opt stack 14
 21804                           
 21805                           ;MOTEapp.c: 1108: EUSART_Write(0x0D);
 21806                           
 21807                           ;incstack = 0
 21808  007278  0E0D               	movlw	13
 21809  00727A  ECC8  F034         	call	_EUSART_Write
 21810                           
 21811                           ;MOTEapp.c: 1109: EUSART_Write(0x0A);
 21812  00727E  0E0A               	movlw	10
 21813  007280  ECC8  F034         	call	_EUSART_Write
 21814  007284  0012               	return		;funcret
 21815  007286                     __end_of_EndLine:
 21816                           	opt stack 0
 21817                           tblptru	equ	0xFF8
 21818                           tblptrh	equ	0xFF7
 21819                           tblptrl	equ	0xFF6
 21820                           tablat	equ	0xFF5
 21821                           prodh	equ	0xFF4
 21822                           prodl	equ	0xFF3
 21823                           intcon	equ	0xFF2
 21824                           intcon3	equ	0xFF0
 21825                           postinc0	equ	0xFEE
 21826                           wreg	equ	0xFE8
 21827                           indf1	equ	0xFE7
 21828                           postdec1	equ	0xFE5
 21829                           fsr1h	equ	0xFE2
 21830                           fsr1l	equ	0xFE1
 21831                           indf2	equ	0xFDF
 21832                           fsr2h	equ	0xFDA
 21833                           fsr2l	equ	0xFD9
 21834                           status	equ	0xFD8
 21835                           
 21836 ;; *************** function _USBapp_handlerState *****************
 21837 ;; Defined at:
 21838 ;;		line 78 in file "../Includes/Board/USBapp.c"
 21839 ;; Parameters:    Size  Location     Type
 21840 ;;  state           1    wreg     enum E5829
 21841 ;; Auto vars:     Size  Location     Type
 21842 ;;  state           1    0[BANK0 ] enum E5829
 21843 ;; Return value:  Size  Location     Type
 21844 ;;                  1    wreg      void 
 21845 ;; Registers used:
 21846 ;;		wreg
 21847 ;; Tracked objects:
 21848 ;;		On entry : 0/0
 21849 ;;		On exit  : 0/0
 21850 ;;		Unchanged: 0/0
 21851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21852 ;;      Params:         0       0       0       0       0       0       0       0       0
 21853 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21854 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21855 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21856 ;;Total ram usage:        1 bytes
 21857 ;; Hardware stack levels used:    1
 21858 ;; Hardware stack levels required when called:   11
 21859 ;; This function calls:
 21860 ;;		Nothing
 21861 ;; This function is called by:
 21862 ;;		_main
 21863 ;; This function uses a non-reentrant model
 21864 ;;
 21865                           
 21866                           	psect	text66
 21867  0072A8                     __ptext66:
 21868                           	opt stack 0
 21869  0072A8                     _USBapp_handlerState:
 21870                           	opt stack 19
 21871                           
 21872                           ;incstack = 0
 21873                           ;USBapp_handlerState@state stored from wreg
 21874  0072A8  0100               	movlb	0	; () banked
 21875  0072AA  6F60               	movwf	USBapp_handlerState@state& (0+255),b
 21876                           
 21877                           ;USBapp.c: 80: usbState = state;
 21878  0072AC  C060  F0DD         	movff	USBapp_handlerState@state,_usbState
 21879  0072B0  0012               	return		;funcret
 21880  0072B2                     __end_of_USBapp_handlerState:
 21881                           	opt stack 0
 21882                           tblptru	equ	0xFF8
 21883                           tblptrh	equ	0xFF7
 21884                           tblptrl	equ	0xFF6
 21885                           tablat	equ	0xFF5
 21886                           prodh	equ	0xFF4
 21887                           prodl	equ	0xFF3
 21888                           intcon	equ	0xFF2
 21889                           intcon3	equ	0xFF0
 21890                           postinc0	equ	0xFEE
 21891                           wreg	equ	0xFE8
 21892                           indf1	equ	0xFE7
 21893                           postdec1	equ	0xFE5
 21894                           fsr1h	equ	0xFE2
 21895                           fsr1l	equ	0xFE1
 21896                           indf2	equ	0xFDF
 21897                           fsr2h	equ	0xFDA
 21898                           fsr2l	equ	0xFD9
 21899                           status	equ	0xFD8
 21900                           
 21901 ;; *************** function _USBapp_Handler *****************
 21902 ;; Defined at:
 21903 ;;		line 86 in file "../Includes/Board/USBapp.c"
 21904 ;; Parameters:    Size  Location     Type
 21905 ;;		None
 21906 ;; Auto vars:     Size  Location     Type
 21907 ;;  buttonPress     1   22[BANK0 ] enum E5863
 21908 ;; Return value:  Size  Location     Type
 21909 ;;                  1    wreg      void 
 21910 ;; Registers used:
 21911 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21912 ;; Tracked objects:
 21913 ;;		On entry : 0/0
 21914 ;;		On exit  : 0/0
 21915 ;;		Unchanged: 0/0
 21916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21917 ;;      Params:         0       0       0       0       0       0       0       0       0
 21918 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21919 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21920 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21921 ;;Total ram usage:        1 bytes
 21922 ;; Hardware stack levels used:    1
 21923 ;; Hardware stack levels required when called:   16
 21924 ;; This function calls:
 21925 ;;		_USBapp_DeviceCdcEmulatorHandler
 21926 ;;		_oled_clear
 21927 ;;		_oled_putString
 21928 ;;		_service_pushbutton
 21929 ;; This function is called by:
 21930 ;;		_main
 21931 ;; This function uses a non-reentrant model
 21932 ;;
 21933                           
 21934                           	psect	text67
 21935  004ECC                     __ptext67:
 21936                           	opt stack 0
 21937  004ECC                     _USBapp_Handler:
 21938                           	opt stack 14
 21939  004ECC                     l839:
 21940                           
 21941                           ;USBapp.c: 90: {
 21942                           ;USBapp.c: 91: switch(usbState)
 21943  004ECC  D054               	goto	l14703
 21944  004ECE                     l842:
 21945  004ECE  D7FF               	goto	l842
 21946                           
 21947                           ;USBapp.c: 95: break;
 21948  004ED0  D05E               	goto	l849
 21949  004ED2                     l14675:
 21950                           
 21951                           ;USBapp.c: 98: oled_clear();
 21952  004ED2  ECA6  F038         	call	_oled_clear	;wreg free
 21953                           
 21954                           ;USBapp.c: 99: oled_putString("CDC Mode",1,0);
 21955  004ED6  0E10               	movlw	low STR_187
 21956  004ED8  0100               	movlb	0	; () banked
 21957  004EDA  6F71               	movwf	oled_putString@string& (0+255),b
 21958  004EDC  0E7F               	movlw	high STR_187
 21959  004EDE  0100               	movlb	0	; () banked
 21960  004EE0  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 21961  004EE2  0E01               	movlw	1
 21962  004EE4  0100               	movlb	0	; () banked
 21963  004EE6  6F73               	movwf	oled_putString@station_dot& (0+255),b
 21964  004EE8  0E00               	movlw	0
 21965  004EEA  0100               	movlb	0	; () banked
 21966  004EEC  6F74               	movwf	oled_putString@start_page& (0+255),b
 21967  004EEE  EC8D  F030         	call	_oled_putString	;wreg free
 21968                           
 21969                           ;USBapp.c: 100: oled_putString("Command",2,1);
 21970  004EF2  0E61               	movlw	low STR_188
 21971  004EF4  0100               	movlb	0	; () banked
 21972  004EF6  6F71               	movwf	oled_putString@string& (0+255),b
 21973  004EF8  0E7F               	movlw	high STR_188
 21974  004EFA  0100               	movlb	0	; () banked
 21975  004EFC  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 21976  004EFE  0E02               	movlw	2
 21977  004F00  0100               	movlb	0	; () banked
 21978  004F02  6F73               	movwf	oled_putString@station_dot& (0+255),b
 21979  004F04  0E01               	movlw	1
 21980  004F06  0100               	movlb	0	; () banked
 21981  004F08  6F74               	movwf	oled_putString@start_page& (0+255),b
 21982  004F0A  EC8D  F030         	call	_oled_putString	;wreg free
 21983                           
 21984                           ;USBapp.c: 101: oled_putString("USB Handler",0,2);
 21985  004F0E  0E28               	movlw	low STR_189
 21986  004F10  0100               	movlb	0	; () banked
 21987  004F12  6F71               	movwf	oled_putString@string& (0+255),b
 21988  004F14  0E7E               	movlw	high STR_189
 21989  004F16  0100               	movlb	0	; () banked
 21990  004F18  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 21991  004F1A  0E00               	movlw	0
 21992  004F1C  0100               	movlb	0	; () banked
 21993  004F1E  6F73               	movwf	oled_putString@station_dot& (0+255),b
 21994  004F20  0E02               	movlw	2
 21995  004F22  0100               	movlb	0	; () banked
 21996  004F24  6F74               	movwf	oled_putString@start_page& (0+255),b
 21997  004F26  EC8D  F030         	call	_oled_putString	;wreg free
 21998                           
 21999                           ;USBapp.c: 103: usbState = USB_RUNNING;
 22000  004F2A  0E01               	movlw	1
 22001  004F2C  0100               	movlb	0	; () banked
 22002  004F2E  6FDD               	movwf	_usbState& (0+255),b
 22003                           
 22004                           ;USBapp.c: 104: break;
 22005  004F30  D02E               	goto	l849
 22006  004F32                     l14685:
 22007                           
 22008                           ; BSR set to: 0
 22009                           ;USBapp.c: 107: if( USBDeviceState < CONFIGURED_STATE )
 22010  004F32  0E20               	movlw	32
 22011  004F34  0100               	movlb	0	; () banked
 22012  004F36  61DE               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 22013  004F38  D001               	goto	u14141
 22014  004F3A  D001               	goto	u14140
 22015  004F3C                     u14141:
 22016  004F3C  D002               	goto	l14689
 22017  004F3E                     u14140:
 22018  004F3E  D027               	goto	l849
 22019                           
 22020                           ; BSR set to: 0
 22021                           ;USBapp.c: 108: {
 22022                           ;USBapp.c: 110: continue;
 22023  004F40  D026               	goto	l849
 22024  004F42                     l14689:
 22025                           
 22026                           ; BSR set to: 0
 22027                           ;USBapp.c: 111: }
 22028                           ;USBapp.c: 112: usbState = USB_CDC;
 22029  004F42  0E02               	movlw	2
 22030  004F44  0100               	movlb	0	; () banked
 22031  004F46  6FDD               	movwf	_usbState& (0+255),b
 22032                           
 22033                           ;USBapp.c: 113: break;
 22034  004F48  D022               	goto	l849
 22035  004F4A                     l14691:
 22036                           
 22037                           ; BSR set to: 0
 22038                           ;USBapp.c: 116: USBapp_DeviceCdcEmulatorHandler();
 22039  004F4A  ECC7  F020         	call	_USBapp_DeviceCdcEmulatorHandler	;wreg free
 22040                           
 22041                           ;USBapp.c: 120: buttonStates_t buttonPress = Released;
 22042  004F4E  0E03               	movlw	3
 22043  004F50  0100               	movlb	0	; () banked
 22044  004F52  6F76               	movwf	USBapp_Handler@buttonPress& (0+255),b
 22045                           
 22046                           ; BSR set to: 0
 22047                           ;USBapp.c: 121: buttonPress = service_pushbutton();
 22048  004F54  ECB4  F02E         	call	_service_pushbutton	;wreg free
 22049  004F58  0100               	movlb	0	; () banked
 22050  004F5A  6F76               	movwf	USBapp_Handler@buttonPress& (0+255),b
 22051                           
 22052                           ; BSR set to: 0
 22053                           ;USBapp.c: 122: if (buttonPress != Released )
 22054  004F5C  0E03               	movlw	3
 22055  004F5E  0100               	movlb	0	; () banked
 22056  004F60  1976               	xorwf	USBapp_Handler@buttonPress& (0+255),w,b
 22057  004F62  B4D8               	btfsc	status,2,c
 22058  004F64  D001               	goto	u14151
 22059  004F66  D001               	goto	u14150
 22060  004F68                     u14151:
 22061  004F68  D012               	goto	l849
 22062  004F6A                     u14150:
 22063                           
 22064                           ; BSR set to: 0
 22065                           ;USBapp.c: 123: {
 22066                           ;USBapp.c: 124: exitUSB = USB_BAT;
 22067  004F6A  0E02               	movlw	2
 22068  004F6C  0100               	movlb	0	; () banked
 22069  004F6E  6FF7               	movwf	_exitUSB& (0+255),b
 22070  004F70  D00E               	goto	l849
 22071                           
 22072                           ; BSR set to: 0
 22073                           ;USBapp.c: 125: }
 22074                           ;USBapp.c: 126: break;
 22075  004F72  D00D               	goto	l849
 22076                           
 22077                           ; BSR set to: 0
 22078                           ;USBapp.c: 127: }
 22079  004F74  D00C               	goto	l849
 22080  004F76                     l14703:
 22081  004F76  0100               	movlb	0	; () banked
 22082  004F78  51DD               	movf	_usbState& (0+255),w,b
 22083                           
 22084                           ; Switch size 1, requested type "space"
 22085                           ; Number of cases is 3, Range of values is 0 to 2
 22086                           ; switch strategies available:
 22087                           ; Name         Instructions Cycles
 22088                           ; simple_byte           10     6 (average)
 22089                           ;	Chosen strategy is simple_byte
 22090  004F7A  0A00               	xorlw	0	; case 0
 22091  004F7C  B4D8               	btfsc	status,2,c
 22092  004F7E  D7A9               	goto	l14675
 22093  004F80  0A01               	xorlw	1	; case 1
 22094  004F82  B4D8               	btfsc	status,2,c
 22095  004F84  D7D6               	goto	l14685
 22096  004F86  0A03               	xorlw	3	; case 2
 22097  004F88  B4D8               	btfsc	status,2,c
 22098  004F8A  D7DF               	goto	l14691
 22099  004F8C  D7A0               	goto	l842
 22100  004F8E                     l849:
 22101                           
 22102                           ;USBapp.c: 128: }while((PORTAbits.RA0) && (exitUSB == NO_USB));
 22103  004F8E  A080               	btfss	3968,0,c	;volatile
 22104  004F90  D001               	goto	u14161
 22105  004F92  D001               	goto	u14160
 22106  004F94                     u14161:
 22107  004F94  D007               	goto	l854
 22108  004F96                     u14160:
 22109  004F96  0100               	movlb	0	; () banked
 22110  004F98  51F7               	movf	_exitUSB& (0+255),w,b
 22111  004F9A  B4D8               	btfsc	status,2,c
 22112  004F9C  D001               	goto	u14171
 22113  004F9E  D001               	goto	u14170
 22114  004FA0                     u14171:
 22115  004FA0  D795               	goto	l839
 22116  004FA2                     u14170:
 22117  004FA2  D000               	goto	l854
 22118  004FA4                     l854:
 22119                           
 22120                           ;USBapp.c: 129: __nop();
 22121  004FA4  F000               	nop	
 22122                           
 22123                           ;USBapp.c: 130: if (exitUSB != USB_BAT)
 22124  004FA6  0E02               	movlw	2
 22125  004FA8  0100               	movlb	0	; () banked
 22126  004FAA  19F7               	xorwf	_exitUSB& (0+255),w,b
 22127  004FAC  B4D8               	btfsc	status,2,c
 22128  004FAE  D001               	goto	u14181
 22129  004FB0  D001               	goto	u14180
 22130  004FB2                     u14181:
 22131  004FB2  D004               	goto	l856
 22132  004FB4                     u14180:
 22133                           
 22134                           ; BSR set to: 0
 22135                           ;USBapp.c: 131: exitUSB = NO_USB;
 22136  004FB4  0E00               	movlw	0
 22137  004FB6  0100               	movlb	0	; () banked
 22138  004FB8  6FF7               	movwf	_exitUSB& (0+255),b
 22139  004FBA  D000               	goto	l856
 22140  004FBC                     l856:
 22141                           
 22142                           ; BSR set to: 0
 22143  004FBC  0012               	return		;funcret
 22144  004FBE                     __end_of_USBapp_Handler:
 22145                           	opt stack 0
 22146                           tblptru	equ	0xFF8
 22147                           tblptrh	equ	0xFF7
 22148                           tblptrl	equ	0xFF6
 22149                           tablat	equ	0xFF5
 22150                           prodh	equ	0xFF4
 22151                           prodl	equ	0xFF3
 22152                           intcon	equ	0xFF2
 22153                           intcon3	equ	0xFF0
 22154                           postinc0	equ	0xFEE
 22155                           wreg	equ	0xFE8
 22156                           indf1	equ	0xFE7
 22157                           postdec1	equ	0xFE5
 22158                           fsr1h	equ	0xFE2
 22159                           fsr1l	equ	0xFE1
 22160                           indf2	equ	0xFDF
 22161                           fsr2h	equ	0xFDA
 22162                           fsr2l	equ	0xFD9
 22163                           status	equ	0xFD8
 22164                           
 22165 ;; *************** function _service_pushbutton *****************
 22166 ;; Defined at:
 22167 ;;		line 49 in file "../Includes/Drivers/buttons.c"
 22168 ;; Parameters:    Size  Location     Type
 22169 ;;		None
 22170 ;; Auto vars:     Size  Location     Type
 22171 ;;  bs              1    0[BANK0 ] enum E5744
 22172 ;; Return value:  Size  Location     Type
 22173 ;;                  1    wreg      enum E5832
 22174 ;; Registers used:
 22175 ;;		wreg, status,2, status,0
 22176 ;; Tracked objects:
 22177 ;;		On entry : 0/0
 22178 ;;		On exit  : 0/0
 22179 ;;		Unchanged: 0/0
 22180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22181 ;;      Params:         0       0       0       0       0       0       0       0       0
 22182 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22183 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22184 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22185 ;;Total ram usage:        1 bytes
 22186 ;; Hardware stack levels used:    1
 22187 ;; Hardware stack levels required when called:   11
 22188 ;; This function calls:
 22189 ;;		Nothing
 22190 ;; This function is called by:
 22191 ;;		_moteHandler
 22192 ;;		_USBapp_Handler
 22193 ;; This function uses a non-reentrant model
 22194 ;;
 22195                           
 22196                           	psect	text68
 22197  005D68                     __ptext68:
 22198                           	opt stack 0
 22199  005D68                     _service_pushbutton:
 22200                           	opt stack 18
 22201                           
 22202                           ;buttons.c: 51: static uint32_t PB_Timer = 0;
 22203                           ;buttons.c: 52: static uint8_t Release_Timer = 0;
 22204                           ;buttons.c: 53: buttonStates_t bs = NoButton;
 22205                           
 22206                           ; BSR set to: 0
 22207                           ;incstack = 0
 22208  005D68  0E00               	movlw	0
 22209  005D6A  0100               	movlb	0	; () banked
 22210  005D6C  6F60               	movwf	service_pushbutton@bs& (0+255),b
 22211                           
 22212                           ; BSR set to: 0
 22213                           ;buttons.c: 55: if ((PORTBbits.RB1 == 0) || (PORTBbits.RB0 == 0) )
 22214  005D6E  A281               	btfss	3969,1,c	;volatile
 22215  005D70  D001               	goto	u13111
 22216  005D72  D001               	goto	u13110
 22217  005D74                     u13111:
 22218  005D74  D005               	goto	l13679
 22219  005D76                     u13110:
 22220                           
 22221                           ; BSR set to: 0
 22222  005D76  B081               	btfsc	3969,0,c	;volatile
 22223  005D78  D001               	goto	u13121
 22224  005D7A  D001               	goto	u13120
 22225  005D7C                     u13121:
 22226  005D7C  D02A               	goto	l13691
 22227  005D7E                     u13120:
 22228  005D7E  D000               	goto	l13679
 22229  005D80                     l13679:
 22230                           
 22231                           ; BSR set to: 0
 22232                           ;buttons.c: 56: {
 22233                           ;buttons.c: 57: ++PB_Timer;
 22234  005D80  0E01               	movlw	1
 22235  005D82  0101               	movlb	1	; () banked
 22236  005D84  274A               	addwf	service_pushbutton@PB_Timer& (0+255),f,b
 22237  005D86  0E00               	movlw	0
 22238  005D88  234B               	addwfc	(service_pushbutton@PB_Timer+1)& (0+255),f,b
 22239  005D8A  234C               	addwfc	(service_pushbutton@PB_Timer+2)& (0+255),f,b
 22240  005D8C  234D               	addwfc	(service_pushbutton@PB_Timer+3)& (0+255),f,b
 22241                           
 22242                           ;buttons.c: 61: if (PB_Timer == 55)
 22243  005D8E  0E37               	movlw	55
 22244  005D90  0101               	movlb	1	; () banked
 22245  005D92  194A               	xorwf	service_pushbutton@PB_Timer& (0+255),w,b
 22246  005D94  0101               	movlb	1	; () banked
 22247  005D96  114B               	iorwf	(service_pushbutton@PB_Timer+1)& (0+255),w,b
 22248  005D98  0101               	movlb	1	; () banked
 22249  005D9A  114C               	iorwf	(service_pushbutton@PB_Timer+2)& (0+255),w,b
 22250  005D9C  0101               	movlb	1	; () banked
 22251  005D9E  114D               	iorwf	(service_pushbutton@PB_Timer+3)& (0+255),w,b
 22252  005DA0  A4D8               	btfss	status,2,c
 22253  005DA2  D001               	goto	u13131
 22254  005DA4  D001               	goto	u13130
 22255  005DA6                     u13131:
 22256  005DA6  D010               	goto	l13689
 22257  005DA8                     u13130:
 22258                           
 22259                           ; BSR set to: 1
 22260                           ;buttons.c: 62: {
 22261                           ;buttons.c: 63: Release_Timer = 0;
 22262  005DA8  0E00               	movlw	0
 22263  005DAA  0100               	movlb	0	; () banked
 22264  005DAC  6FDC               	movwf	service_pushbutton@Release_Timer& (0+255),b
 22265                           
 22266                           ; BSR set to: 0
 22267                           ;buttons.c: 65: if (PORTBbits.RB1 == 0)
 22268  005DAE  B281               	btfsc	3969,1,c	;volatile
 22269  005DB0  D001               	goto	u13141
 22270  005DB2  D001               	goto	u13140
 22271  005DB4                     u13141:
 22272  005DB4  D004               	goto	l13687
 22273  005DB6                     u13140:
 22274                           
 22275                           ; BSR set to: 0
 22276                           ;buttons.c: 66: {
 22277                           ;buttons.c: 67: bs = ShortPress1;
 22278  005DB6  0E01               	movlw	1
 22279  005DB8  0100               	movlb	0	; () banked
 22280  005DBA  6F60               	movwf	service_pushbutton@bs& (0+255),b
 22281                           
 22282                           ;buttons.c: 68: }
 22283  005DBC  D025               	goto	l13699
 22284  005DBE                     l13687:
 22285                           
 22286                           ; BSR set to: 0
 22287                           ;buttons.c: 69: else
 22288                           ;buttons.c: 70: {
 22289                           ;buttons.c: 71: bs = ShortPress2;
 22290  005DBE  0E02               	movlw	2
 22291  005DC0  0100               	movlb	0	; () banked
 22292  005DC2  6F60               	movwf	service_pushbutton@bs& (0+255),b
 22293  005DC4  D021               	goto	l13699
 22294                           
 22295                           ; BSR set to: 0
 22296                           ;buttons.c: 72: }
 22297                           ;buttons.c: 73: }
 22298  005DC6  D020               	goto	l13699
 22299  005DC8                     l13689:
 22300                           
 22301                           ;buttons.c: 74: else
 22302                           ;buttons.c: 75: {
 22303                           ;buttons.c: 76: bs = NoButton;
 22304  005DC8  0E00               	movlw	0
 22305  005DCA  0100               	movlb	0	; () banked
 22306  005DCC  6F60               	movwf	service_pushbutton@bs& (0+255),b
 22307  005DCE  D01C               	goto	l13699
 22308                           
 22309                           ; BSR set to: 0
 22310                           ;buttons.c: 77: }
 22311                           ;buttons.c: 78: }
 22312  005DD0  D01B               	goto	l13699
 22313  005DD2                     l13691:
 22314                           
 22315                           ; BSR set to: 0
 22316                           ;buttons.c: 79: else
 22317                           ;buttons.c: 80: {
 22318                           ;buttons.c: 81: if (Release_Timer == 20)
 22319  005DD2  0E14               	movlw	20
 22320  005DD4  0100               	movlb	0	; () banked
 22321  005DD6  19DC               	xorwf	service_pushbutton@Release_Timer& (0+255),w,b
 22322  005DD8  A4D8               	btfss	status,2,c
 22323  005DDA  D001               	goto	u13151
 22324  005DDC  D001               	goto	u13150
 22325  005DDE                     u13151:
 22326  005DDE  D00D               	goto	l13695
 22327  005DE0                     u13150:
 22328                           
 22329                           ; BSR set to: 0
 22330                           ;buttons.c: 82: {
 22331                           ;buttons.c: 83: PB_Timer = 0;
 22332  005DE0  0E00               	movlw	0
 22333  005DE2  0101               	movlb	1	; () banked
 22334  005DE4  6F4A               	movwf	service_pushbutton@PB_Timer& (0+255),b
 22335  005DE6  0E00               	movlw	0
 22336  005DE8  6F4B               	movwf	(service_pushbutton@PB_Timer+1)& (0+255),b
 22337  005DEA  0E00               	movlw	0
 22338  005DEC  6F4C               	movwf	(service_pushbutton@PB_Timer+2)& (0+255),b
 22339  005DEE  0E00               	movlw	0
 22340  005DF0  6F4D               	movwf	(service_pushbutton@PB_Timer+3)& (0+255),b
 22341                           
 22342                           ;buttons.c: 84: Release_Timer = 0;
 22343  005DF2  0E00               	movlw	0
 22344  005DF4  0100               	movlb	0	; () banked
 22345  005DF6  6FDC               	movwf	service_pushbutton@Release_Timer& (0+255),b
 22346                           
 22347                           ;buttons.c: 85: }
 22348  005DF8  D003               	goto	l13697
 22349  005DFA                     l13695:
 22350                           
 22351                           ; BSR set to: 0
 22352                           ;buttons.c: 86: else
 22353                           ;buttons.c: 87: {
 22354                           ;buttons.c: 88: Release_Timer++;
 22355  005DFA  0100               	movlb	0	; () banked
 22356  005DFC  2BDC               	incf	service_pushbutton@Release_Timer& (0+255),f,b
 22357  005DFE  D000               	goto	l13697
 22358  005E00                     l13697:
 22359                           
 22360                           ; BSR set to: 0
 22361                           ;buttons.c: 89: }
 22362                           ;buttons.c: 90: bs = Released;
 22363  005E00  0E03               	movlw	3
 22364  005E02  0100               	movlb	0	; () banked
 22365  005E04  6F60               	movwf	service_pushbutton@bs& (0+255),b
 22366  005E06  D000               	goto	l13699
 22367  005E08                     l13699:
 22368                           
 22369                           ; BSR set to: 0
 22370                           ;buttons.c: 91: }
 22371                           ;buttons.c: 93: return bs;
 22372  005E08  0100               	movlb	0	; () banked
 22373  005E0A  5160               	movf	service_pushbutton@bs& (0+255),w,b
 22374  005E0C  D000               	goto	l943
 22375  005E0E                     l943:
 22376                           
 22377                           ; BSR set to: 0
 22378  005E0E  0012               	return		;funcret
 22379  005E10                     __end_of_service_pushbutton:
 22380                           	opt stack 0
 22381                           tblptru	equ	0xFF8
 22382                           tblptrh	equ	0xFF7
 22383                           tblptrl	equ	0xFF6
 22384                           tablat	equ	0xFF5
 22385                           prodh	equ	0xFF4
 22386                           prodl	equ	0xFF3
 22387                           intcon	equ	0xFF2
 22388                           intcon3	equ	0xFF0
 22389                           postinc0	equ	0xFEE
 22390                           wreg	equ	0xFE8
 22391                           indf1	equ	0xFE7
 22392                           postdec1	equ	0xFE5
 22393                           fsr1h	equ	0xFE2
 22394                           fsr1l	equ	0xFE1
 22395                           indf2	equ	0xFDF
 22396                           fsr2h	equ	0xFDA
 22397                           fsr2l	equ	0xFD9
 22398                           status	equ	0xFD8
 22399                           
 22400 ;; *************** function _oled_putString *****************
 22401 ;; Defined at:
 22402 ;;		line 331 in file "../Includes/Drivers/SSD1306oLED.c"
 22403 ;; Parameters:    Size  Location     Type
 22404 ;;  string          2   17[BANK0 ] PTR const unsigned char 
 22405 ;;		 -> oled_putUint16@numData(6), oled_putint8@numData(6), oled_putUint8@numData(6), STR_189(12), 
 22406 ;;		 -> STR_188(8), STR_187(9), storedLight(5), STR_182(5), 
 22407 ;;		 -> STR_181(8), STR_180(8), STR_179(9), STR_162(16), 
 22408 ;;		 -> STR_161(17), STR_160(17), STR_159(4), STR_158(4), 
 22409 ;;		 -> STR_157(4), STR_156(4), STR_155(4), STR_154(4), 
 22410 ;;		 -> STR_153(4), STR_152(16), STR_151(17), STR_150(4), 
 22411 ;;		 -> STR_149(4), STR_148(4), STR_147(4), STR_146(4), 
 22412 ;;		 -> STR_145(4), STR_144(4), STR_143(4), STR_142(4), 
 22413 ;;		 -> STR_141(4), STR_140(4), STR_139(4), STR_138(4), 
 22414 ;;		 -> STR_137(16), STR_136(12), STR_135(17), STR_134(16), 
 22415 ;;		 -> STR_133(16), STR_132(16), STR_131(15), STR_130(15), 
 22416 ;;		 -> STR_129(16), STR_128(4), STR_127(3), STR_126(3), 
 22417 ;;		 -> STR_125(3), STR_124(3), STR_123(2), STR_122(5), 
 22418 ;;		 -> STR_121(7), STR_120(17), STR_119(17), STR_118(2), 
 22419 ;;		 -> STR_117(7), STR_116(7), STR_115(16), STR_114(16), 
 22420 ;;		 -> STR_113(15), STR_112(15), STR_111(17), STR_110(16), 
 22421 ;;		 -> STR_109(17), STR_108(17), STR_107(7), STR_106(10), 
 22422 ;;		 -> STR_105(17), STR_104(16), STR_103(16), STR_102(16), 
 22423 ;;		 -> STR_101(16), STR_100(17), STR_99(17), STR_98(16), 
 22424 ;;		 -> STR_96(19), STR_94(17), STR_92(17), STR_91(17), 
 22425 ;;		 -> responseData(32), responsePortNum(3), STR_88(13), STR_87(12), 
 22426 ;;		 -> STR_86(12), STR_83(18), STR_82(13), STR_81(17), 
 22427 ;;		 -> STR_80(16), STR_79(17), STR_78(17), STR_77(16), 
 22428 ;;		 -> STR_76(17), STR_75(17), STR_73(13), STR_72(12), 
 22429 ;;		 -> STR_71(17), STR_65(7), STR_64(10), STR_62(11), 
 22430 ;;		 -> STR_61(11), STR_56(9), STR_55(11), STR_51(11), 
 22431 ;;		 -> STR_50(10), STR_47(9), STR_46(11), STR_42(17), 
 22432 ;;		 -> STR_40(17), STR_38(17), STR_37(17), STR_36(17), 
 22433 ;;		 -> STR_34(17), STR_33(17), STR_32(17), moduleResonseBuffer(64), 
 22434 ;;		 -> STR_29(17), STR_28(17), STR_27(17), STR_26(17), 
 22435 ;;		 -> STR_25(9), STR_24(10), STR_23(5), STR_20(9), 
 22436 ;;		 -> STR_19(8), STR_18(8), STR_17(9), STR_16(10), 
 22437 ;;		 -> STR_15(11), STR_14(13), STR_13(13), STR_12(13), 
 22438 ;;		 -> STR_11(12), STR_10(13), STR_9(9), STR_8(12), 
 22439 ;;		 -> STR_7(16), STR_6(2), STR_5(2), STR_4(9), 
 22440 ;;		 -> STR_3(15), STR_2(15), STR_1(15), 
 22441 ;;  station_dot     1   19[BANK0 ] unsigned char 
 22442 ;;  start_page      1   20[BANK0 ] unsigned char 
 22443 ;; Auto vars:     Size  Location     Type
 22444 ;;  index           1   21[BANK0 ] unsigned char 
 22445 ;; Return value:  Size  Location     Type
 22446 ;;                  1    wreg      void 
 22447 ;; Registers used:
 22448 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22449 ;; Tracked objects:
 22450 ;;		On entry : 0/0
 22451 ;;		On exit  : 0/0
 22452 ;;		Unchanged: 0/0
 22453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22454 ;;      Params:         0       4       0       0       0       0       0       0       0
 22455 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22456 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22457 ;;      Totals:         0       5       0       0       0       0       0       0       0
 22458 ;;Total ram usage:        5 bytes
 22459 ;; Hardware stack levels used:    1
 22460 ;; Hardware stack levels required when called:   14
 22461 ;; This function calls:
 22462 ;;		_oled_putChar
 22463 ;; This function is called by:
 22464 ;;		_main
 22465 ;;		_test_oled
 22466 ;;		_test_switch
 22467 ;;		_test_comms
 22468 ;;		_test_leds
 22469 ;;		_moteHandler
 22470 ;;		_moteJoiningProcess
 22471 ;;		_moteRunningProcess
 22472 ;;		_moteApp_testSensors
 22473 ;;		_USBapp_Handler
 22474 ;;		_oled_putUint8
 22475 ;;		_oled_putint8
 22476 ;;		_test_adc
 22477 ;;		_test_rf
 22478 ;;		_oled_putUint16
 22479 ;; This function uses a non-reentrant model
 22480 ;;
 22481                           
 22482                           	psect	text69
 22483  00611A                     __ptext69:
 22484                           	opt stack 0
 22485  00611A                     _oled_putString:
 22486                           	opt stack 14
 22487                           
 22488                           ;SSD1306oLED.c: 333: uint8_t index;
 22489                           ;SSD1306oLED.c: 334: for(index = station_dot; index < 16; index++)
 22490                           
 22491                           ; BSR set to: 0
 22492                           ;incstack = 0
 22493  00611A  C073  F075         	movff	oled_putString@station_dot,oled_putString@index
 22494  00611E  0E0F               	movlw	15
 22495  006120  0100               	movlb	0	; () banked
 22496  006122  6575               	cpfsgt	oled_putString@index& (0+255),b
 22497  006124  D001               	goto	u10981
 22498  006126  D001               	goto	u10980
 22499  006128                     u10981:
 22500  006128  D002               	goto	l12119
 22501  00612A                     u10980:
 22502  00612A  D03A               	goto	l1044
 22503                           
 22504                           ; BSR set to: 0
 22505  00612C  D039               	goto	l1044
 22506  00612E                     l12119:
 22507                           
 22508                           ; BSR set to: 0
 22509                           ;SSD1306oLED.c: 335: {
 22510                           ;SSD1306oLED.c: 336: if (*string != 0)
 22511  00612E  C071  FFF6         	movff	oled_putString@string,tblptrl
 22512  006132  C072  FFF7         	movff	oled_putString@string+1,tblptrh
 22513  006136  6AF8               	clrf	tblptru,c
 22514  006138  0E07               	movlw	(high __ramtop+-1)
 22515  00613A  64F7               	cpfsgt	tblptrh,c
 22516  00613C  D003               	bra	u10997
 22517  00613E  0008               	tblrd		*
 22518  006140  50F5               	movf	tablat,w,c
 22519  006142  D005               	bra	u10990
 22520  006144                     u10997:
 22521  006144  CFF6 FFE9          	movff	tblptrl,fsr0l
 22522  006148  CFF7 FFEA          	movff	tblptrh,fsr0h
 22523  00614C  50EF               	movf	indf0,w,c
 22524  00614E                     u10990:
 22525  00614E  0900               	iorlw	0
 22526  006150  B4D8               	btfsc	status,2,c
 22527  006152  D001               	goto	u11001
 22528  006154  D001               	goto	u11000
 22529  006156                     u11001:
 22530  006156  D024               	goto	l1044
 22531  006158                     u11000:
 22532                           
 22533                           ;SSD1306oLED.c: 337: {
 22534                           ;SSD1306oLED.c: 338: oled_putChar(*string, index, start_page);
 22535  006158  C075  F062         	movff	oled_putString@index,oled_putChar@station_dot
 22536  00615C  C074  F063         	movff	oled_putString@start_page,oled_putChar@start_page
 22537  006160  C071  FFF6         	movff	oled_putString@string,tblptrl
 22538  006164  C072  FFF7         	movff	oled_putString@string+1,tblptrh
 22539  006168  6AF8               	clrf	tblptru,c
 22540  00616A  0E07               	movlw	(high __ramtop+-1)
 22541  00616C  64F7               	cpfsgt	tblptrh,c
 22542  00616E  D003               	bra	u11017
 22543  006170  0008               	tblrd		*
 22544  006172  50F5               	movf	tablat,w,c
 22545  006174  D005               	bra	u11010
 22546  006176                     u11017:
 22547  006176  CFF6 FFE9          	movff	tblptrl,fsr0l
 22548  00617A  CFF7 FFEA          	movff	tblptrh,fsr0h
 22549  00617E  50EF               	movf	indf0,w,c
 22550  006180                     u11010:
 22551  006180  ECA4  F02C         	call	_oled_putChar
 22552                           
 22553                           ;SSD1306oLED.c: 339: *string++;
 22554  006184  0100               	movlb	0	; () banked
 22555  006186  4B71               	infsnz	oled_putString@string& (0+255),f,b
 22556  006188  2B72               	incf	(oled_putString@string+1)& (0+255),f,b
 22557                           
 22558                           ;SSD1306oLED.c: 340: }
 22559  00618A  D001               	goto	l12125
 22560                           
 22561                           ; BSR set to: 0
 22562                           ;SSD1306oLED.c: 341: else
 22563                           ;SSD1306oLED.c: 342: {
 22564                           ;SSD1306oLED.c: 343: break;
 22565  00618C  D009               	goto	l1044
 22566  00618E                     l12125:
 22567                           
 22568                           ; BSR set to: 0
 22569  00618E  0100               	movlb	0	; () banked
 22570  006190  2B75               	incf	oled_putString@index& (0+255),f,b
 22571                           
 22572                           ; BSR set to: 0
 22573  006192  0E0F               	movlw	15
 22574  006194  0100               	movlb	0	; () banked
 22575  006196  6575               	cpfsgt	oled_putString@index& (0+255),b
 22576  006198  D001               	goto	u11021
 22577  00619A  D001               	goto	u11020
 22578  00619C                     u11021:
 22579  00619C  D7C8               	goto	l12119
 22580  00619E                     u11020:
 22581  00619E  D000               	goto	l1044
 22582  0061A0                     l1044:
 22583  0061A0  0012               	return		;funcret
 22584  0061A2                     __end_of_oled_putString:
 22585                           	opt stack 0
 22586                           tblptru	equ	0xFF8
 22587                           tblptrh	equ	0xFF7
 22588                           tblptrl	equ	0xFF6
 22589                           tablat	equ	0xFF5
 22590                           prodh	equ	0xFF4
 22591                           prodl	equ	0xFF3
 22592                           intcon	equ	0xFF2
 22593                           intcon3	equ	0xFF0
 22594                           indf0	equ	0xFEF
 22595                           postinc0	equ	0xFEE
 22596                           fsr0h	equ	0xFEA
 22597                           fsr0l	equ	0xFE9
 22598                           wreg	equ	0xFE8
 22599                           indf1	equ	0xFE7
 22600                           postdec1	equ	0xFE5
 22601                           fsr1h	equ	0xFE2
 22602                           fsr1l	equ	0xFE1
 22603                           indf2	equ	0xFDF
 22604                           fsr2h	equ	0xFDA
 22605                           fsr2l	equ	0xFD9
 22606                           status	equ	0xFD8
 22607                           
 22608 ;; *************** function _oled_clear *****************
 22609 ;; Defined at:
 22610 ;;		line 348 in file "../Includes/Drivers/SSD1306oLED.c"
 22611 ;; Parameters:    Size  Location     Type
 22612 ;;		None
 22613 ;; Auto vars:     Size  Location     Type
 22614 ;;		None
 22615 ;; Return value:  Size  Location     Type
 22616 ;;                  1    wreg      void 
 22617 ;; Registers used:
 22618 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22619 ;; Tracked objects:
 22620 ;;		On entry : 0/0
 22621 ;;		On exit  : 0/0
 22622 ;;		Unchanged: 0/0
 22623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22624 ;;      Params:         0       0       0       0       0       0       0       0       0
 22625 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22626 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22627 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22628 ;;Total ram usage:        0 bytes
 22629 ;; Hardware stack levels used:    1
 22630 ;; Hardware stack levels required when called:   15
 22631 ;; This function calls:
 22632 ;;		_oled_clearRow
 22633 ;; This function is called by:
 22634 ;;		_main
 22635 ;;		_test_powerup
 22636 ;;		_test_oled
 22637 ;;		_test_switch
 22638 ;;		_moteHandler
 22639 ;;		_moteJoiningProcess
 22640 ;;		_moteRunningProcess
 22641 ;;		_moteApp_testSensors
 22642 ;;		_USBapp_Handler
 22643 ;;		_oled_init
 22644 ;;		_test_adc
 22645 ;;		_test_rf
 22646 ;; This function uses a non-reentrant model
 22647 ;;
 22648                           
 22649                           	psect	text70
 22650  00714C                     __ptext70:
 22651                           	opt stack 0
 22652  00714C                     _oled_clear:
 22653                           	opt stack 13
 22654                           
 22655                           ;SSD1306oLED.c: 350: oled_clearRow(0);
 22656                           
 22657                           ;incstack = 0
 22658  00714C  0E00               	movlw	0
 22659  00714E  EC0E  F037         	call	_oled_clearRow
 22660                           
 22661                           ;SSD1306oLED.c: 351: oled_clearRow(1);
 22662  007152  0E01               	movlw	1
 22663  007154  EC0E  F037         	call	_oled_clearRow
 22664                           
 22665                           ;SSD1306oLED.c: 352: oled_clearRow(2);
 22666  007158  0E02               	movlw	2
 22667  00715A  EC0E  F037         	call	_oled_clearRow
 22668                           
 22669                           ;SSD1306oLED.c: 353: oled_clearRow(3);
 22670  00715E  0E03               	movlw	3
 22671  007160  EC0E  F037         	call	_oled_clearRow
 22672  007164  0012               	return		;funcret
 22673  007166                     __end_of_oled_clear:
 22674                           	opt stack 0
 22675                           tblptru	equ	0xFF8
 22676                           tblptrh	equ	0xFF7
 22677                           tblptrl	equ	0xFF6
 22678                           tablat	equ	0xFF5
 22679                           prodh	equ	0xFF4
 22680                           prodl	equ	0xFF3
 22681                           intcon	equ	0xFF2
 22682                           intcon3	equ	0xFF0
 22683                           indf0	equ	0xFEF
 22684                           postinc0	equ	0xFEE
 22685                           fsr0h	equ	0xFEA
 22686                           fsr0l	equ	0xFE9
 22687                           wreg	equ	0xFE8
 22688                           indf1	equ	0xFE7
 22689                           postdec1	equ	0xFE5
 22690                           fsr1h	equ	0xFE2
 22691                           fsr1l	equ	0xFE1
 22692                           indf2	equ	0xFDF
 22693                           fsr2h	equ	0xFDA
 22694                           fsr2l	equ	0xFD9
 22695                           status	equ	0xFD8
 22696                           
 22697 ;; *************** function _oled_clearRow *****************
 22698 ;; Defined at:
 22699 ;;		line 356 in file "../Includes/Drivers/SSD1306oLED.c"
 22700 ;; Parameters:    Size  Location     Type
 22701 ;;  page            1    wreg     unsigned char 
 22702 ;; Auto vars:     Size  Location     Type
 22703 ;;  page            1   12[BANK0 ] unsigned char 
 22704 ;;  index           1   13[BANK0 ] unsigned char 
 22705 ;; Return value:  Size  Location     Type
 22706 ;;                  1    wreg      void 
 22707 ;; Registers used:
 22708 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22709 ;; Tracked objects:
 22710 ;;		On entry : 0/0
 22711 ;;		On exit  : 0/0
 22712 ;;		Unchanged: 0/0
 22713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22714 ;;      Params:         0       0       0       0       0       0       0       0       0
 22715 ;;      Locals:         0       2       0       0       0       0       0       0       0
 22716 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22717 ;;      Totals:         0       2       0       0       0       0       0       0       0
 22718 ;;Total ram usage:        2 bytes
 22719 ;; Hardware stack levels used:    1
 22720 ;; Hardware stack levels required when called:   14
 22721 ;; This function calls:
 22722 ;;		_oled_putChar
 22723 ;; This function is called by:
 22724 ;;		_oled_clear
 22725 ;; This function uses a non-reentrant model
 22726 ;;
 22727                           
 22728                           	psect	text71
 22729  006E1C                     __ptext71:
 22730                           	opt stack 0
 22731  006E1C                     _oled_clearRow:
 22732                           	opt stack 13
 22733                           
 22734                           ;incstack = 0
 22735                           ;oled_clearRow@page stored from wreg
 22736  006E1C  0100               	movlb	0	; () banked
 22737  006E1E  6F6C               	movwf	oled_clearRow@page& (0+255),b
 22738                           
 22739                           ;SSD1306oLED.c: 358: uint8_t index;
 22740                           ;SSD1306oLED.c: 360: for(index = 0; index < 16; index++)
 22741  006E20  0E00               	movlw	0
 22742  006E22  0100               	movlb	0	; () banked
 22743  006E24  6F6D               	movwf	oled_clearRow@index& (0+255),b
 22744                           
 22745                           ; BSR set to: 0
 22746  006E26  0E0F               	movlw	15
 22747  006E28  0100               	movlb	0	; () banked
 22748  006E2A  656D               	cpfsgt	oled_clearRow@index& (0+255),b
 22749  006E2C  D001               	goto	u10831
 22750  006E2E  D001               	goto	u10830
 22751  006E30                     u10831:
 22752  006E30  D002               	goto	l11955
 22753  006E32                     u10830:
 22754  006E32  D011               	goto	l1052
 22755                           
 22756                           ; BSR set to: 0
 22757  006E34  D010               	goto	l1052
 22758  006E36                     l11955:
 22759                           
 22760                           ; BSR set to: 0
 22761                           ;SSD1306oLED.c: 361: {
 22762                           ;SSD1306oLED.c: 362: oled_putChar( ' ', index, page);
 22763  006E36  C06D  F062         	movff	oled_clearRow@index,oled_putChar@station_dot
 22764  006E3A  C06C  F063         	movff	oled_clearRow@page,oled_putChar@start_page
 22765  006E3E  0E20               	movlw	32
 22766  006E40  ECA4  F02C         	call	_oled_putChar
 22767  006E44  0100               	movlb	0	; () banked
 22768  006E46  2B6D               	incf	oled_clearRow@index& (0+255),f,b
 22769                           
 22770                           ; BSR set to: 0
 22771  006E48  0E0F               	movlw	15
 22772  006E4A  0100               	movlb	0	; () banked
 22773  006E4C  656D               	cpfsgt	oled_clearRow@index& (0+255),b
 22774  006E4E  D001               	goto	u10841
 22775  006E50  D001               	goto	u10840
 22776  006E52                     u10841:
 22777  006E52  D7F1               	goto	l11955
 22778  006E54                     u10840:
 22779  006E54  D000               	goto	l1052
 22780  006E56                     l1052:
 22781                           
 22782                           ; BSR set to: 0
 22783  006E56  0012               	return		;funcret
 22784  006E58                     __end_of_oled_clearRow:
 22785                           	opt stack 0
 22786                           tblptru	equ	0xFF8
 22787                           tblptrh	equ	0xFF7
 22788                           tblptrl	equ	0xFF6
 22789                           tablat	equ	0xFF5
 22790                           prodh	equ	0xFF4
 22791                           prodl	equ	0xFF3
 22792                           intcon	equ	0xFF2
 22793                           intcon3	equ	0xFF0
 22794                           indf0	equ	0xFEF
 22795                           postinc0	equ	0xFEE
 22796                           fsr0h	equ	0xFEA
 22797                           fsr0l	equ	0xFE9
 22798                           wreg	equ	0xFE8
 22799                           indf1	equ	0xFE7
 22800                           postdec1	equ	0xFE5
 22801                           fsr1h	equ	0xFE2
 22802                           fsr1l	equ	0xFE1
 22803                           indf2	equ	0xFDF
 22804                           fsr2h	equ	0xFDA
 22805                           fsr2l	equ	0xFD9
 22806                           status	equ	0xFD8
 22807                           
 22808 ;; *************** function _oled_putChar *****************
 22809 ;; Defined at:
 22810 ;;		line 318 in file "../Includes/Drivers/SSD1306oLED.c"
 22811 ;; Parameters:    Size  Location     Type
 22812 ;;  k               1    wreg     unsigned char 
 22813 ;;  station_dot     1    2[BANK0 ] unsigned char 
 22814 ;;  start_page      1    3[BANK0 ] unsigned char 
 22815 ;; Auto vars:     Size  Location     Type
 22816 ;;  k               1   10[BANK0 ] unsigned char 
 22817 ;;  index           1   11[BANK0 ] unsigned char 
 22818 ;; Return value:  Size  Location     Type
 22819 ;;                  1    wreg      void 
 22820 ;; Registers used:
 22821 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22822 ;; Tracked objects:
 22823 ;;		On entry : 0/0
 22824 ;;		On exit  : 0/0
 22825 ;;		Unchanged: 0/0
 22826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22827 ;;      Params:         0       2       0       0       0       0       0       0       0
 22828 ;;      Locals:         0       2       0       0       0       0       0       0       0
 22829 ;;      Temps:          0       6       0       0       0       0       0       0       0
 22830 ;;      Totals:         0      10       0       0       0       0       0       0       0
 22831 ;;Total ram usage:       10 bytes
 22832 ;; Hardware stack levels used:    1
 22833 ;; Hardware stack levels required when called:   13
 22834 ;; This function calls:
 22835 ;;		_Set_Column_Address
 22836 ;;		_Set_Page_Address
 22837 ;;		_oled_writeData
 22838 ;; This function is called by:
 22839 ;;		_moteApp_testSensors
 22840 ;;		_oled_putString
 22841 ;;		_oled_clearRow
 22842 ;;		_test_adc
 22843 ;; This function uses a non-reentrant model
 22844 ;;
 22845                           
 22846                           	psect	text72
 22847  005948                     __ptext72:
 22848                           	opt stack 0
 22849  005948                     _oled_putChar:
 22850                           	opt stack 14
 22851                           
 22852                           ; BSR set to: 0
 22853                           ;incstack = 0
 22854                           ;oled_putChar@k stored from wreg
 22855  005948  0100               	movlb	0	; () banked
 22856  00594A  6F6A               	movwf	oled_putChar@k& (0+255),b
 22857                           
 22858                           ;SSD1306oLED.c: 320: uint8_t index;
 22859                           ;SSD1306oLED.c: 322: Set_Page_Address(start_page);
 22860  00594C  0100               	movlb	0	; () banked
 22861  00594E  5163               	movf	oled_putChar@start_page& (0+255),w,b
 22862  005950  ECB3  F038         	call	_Set_Page_Address
 22863                           
 22864                           ;SSD1306oLED.c: 323: Set_Column_Address(0x00 + station_dot * 8 + 4);
 22865  005954  0100               	movlb	0	; () banked
 22866  005956  5162               	movf	oled_putChar@station_dot& (0+255),w,b
 22867  005958  0D08               	mullw	8
 22868  00595A  50F3               	movf	prodl,w,c
 22869  00595C  0F04               	addlw	4
 22870  00595E  EC7A  F038         	call	_Set_Column_Address
 22871                           
 22872                           ;SSD1306oLED.c: 325: for(index = 0; index < 8; index++)
 22873  005962  0E00               	movlw	0
 22874  005964  0100               	movlb	0	; () banked
 22875  005966  6F6B               	movwf	oled_putChar@index& (0+255),b
 22876                           
 22877                           ; BSR set to: 0
 22878  005968  0E07               	movlw	7
 22879  00596A  0100               	movlb	0	; () banked
 22880  00596C  656B               	cpfsgt	oled_putChar@index& (0+255),b
 22881  00596E  D001               	goto	u10761
 22882  005970  D001               	goto	u10760
 22883  005972                     u10761:
 22884  005972  D002               	goto	l11903
 22885  005974                     u10760:
 22886  005974  D046               	goto	l1037
 22887                           
 22888                           ; BSR set to: 0
 22889  005976  D045               	goto	l1037
 22890  005978                     l11903:
 22891                           
 22892                           ; BSR set to: 0
 22893                           ;SSD1306oLED.c: 326: {
 22894                           ;SSD1306oLED.c: 327: oled_writeData(*(selectedFont + 8 * (k - 0x20) + index));
 22895  005978  0100               	movlb	0	; () banked
 22896  00597A  516B               	movf	oled_putChar@index& (0+255),w,b
 22897  00597C  0D01               	mullw	1
 22898  00597E  0E00               	movlw	0
 22899  005980  0100               	movlb	0	; () banked
 22900  005982  6F64               	movwf	??_oled_putChar& (0+255),b
 22901  005984  0EFF               	movlw	255
 22902  005986  0100               	movlb	0	; () banked
 22903  005988  6F65               	movwf	(??_oled_putChar+1)& (0+255),b
 22904  00598A  0100               	movlb	0	; () banked
 22905  00598C  516A               	movf	oled_putChar@k& (0+255),w,b
 22906  00598E  0100               	movlb	0	; () banked
 22907  005990  6F66               	movwf	(??_oled_putChar+2)& (0+255),b
 22908  005992  6B67               	clrf	(??_oled_putChar+3)& (0+255),b
 22909  005994  0100               	movlb	0	; () banked
 22910  005996  90D8               	bcf	status,0,c
 22911  005998  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 22912  00599A  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 22913  00599C  0100               	movlb	0	; () banked
 22914  00599E  90D8               	bcf	status,0,c
 22915  0059A0  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 22916  0059A2  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 22917  0059A4  0100               	movlb	0	; () banked
 22918  0059A6  90D8               	bcf	status,0,c
 22919  0059A8  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 22920  0059AA  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 22921  0059AC  0100               	movlb	0	; () banked
 22922  0059AE  5164               	movf	??_oled_putChar& (0+255),w,b
 22923  0059B0  0100               	movlb	0	; () banked
 22924  0059B2  2766               	addwf	(??_oled_putChar+2)& (0+255),f,b
 22925  0059B4  0100               	movlb	0	; () banked
 22926  0059B6  5165               	movf	(??_oled_putChar+1)& (0+255),w,b
 22927  0059B8  0100               	movlb	0	; () banked
 22928  0059BA  2367               	addwfc	(??_oled_putChar+3)& (0+255),f,b
 22929  0059BC  C1F8  F068         	movff	_selectedFont,??_oled_putChar+4
 22930  0059C0  C1F9  F069         	movff	_selectedFont+1,??_oled_putChar+5
 22931  0059C4  0100               	movlb	0	; () banked
 22932  0059C6  5166               	movf	(??_oled_putChar+2)& (0+255),w,b
 22933  0059C8  0100               	movlb	0	; () banked
 22934  0059CA  2768               	addwf	(??_oled_putChar+4)& (0+255),f,b
 22935  0059CC  0100               	movlb	0	; () banked
 22936  0059CE  5167               	movf	(??_oled_putChar+3)& (0+255),w,b
 22937  0059D0  0100               	movlb	0	; () banked
 22938  0059D2  2369               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 22939  0059D4  50F3               	movf	prodl,w,c
 22940  0059D6  0100               	movlb	0	; () banked
 22941  0059D8  2768               	addwf	(??_oled_putChar+4)& (0+255),f,b
 22942  0059DA  50F4               	movf	prodh,w,c
 22943  0059DC  0100               	movlb	0	; () banked
 22944  0059DE  2369               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 22945  0059E0  C068  FFF6         	movff	??_oled_putChar+4,tblptrl
 22946  0059E4  C069  FFF7         	movff	??_oled_putChar+5,tblptrh
 22947  0059E8                     	if	0	;tblptru may be non-zero
 22948  0059E8                     	endif
 22949  0059E8                     	if	0	;tblptru may be non-zero
 22950  0059E8                     	endif
 22951  0059E8  0008               	tblrd		*
 22952  0059EA  50F5               	movf	tablat,w,c
 22953  0059EC  ECCD  F038         	call	_oled_writeData
 22954  0059F0  0100               	movlb	0	; () banked
 22955  0059F2  2B6B               	incf	oled_putChar@index& (0+255),f,b
 22956                           
 22957                           ; BSR set to: 0
 22958  0059F4  0E07               	movlw	7
 22959  0059F6  0100               	movlb	0	; () banked
 22960  0059F8  656B               	cpfsgt	oled_putChar@index& (0+255),b
 22961  0059FA  D001               	goto	u10771
 22962  0059FC  D001               	goto	u10770
 22963  0059FE                     u10771:
 22964  0059FE  D7BC               	goto	l11903
 22965  005A00                     u10770:
 22966  005A00  D000               	goto	l1037
 22967  005A02                     l1037:
 22968                           
 22969                           ; BSR set to: 0
 22970  005A02  0012               	return		;funcret
 22971  005A04                     __end_of_oled_putChar:
 22972                           	opt stack 0
 22973                           tblptru	equ	0xFF8
 22974                           tblptrh	equ	0xFF7
 22975                           tblptrl	equ	0xFF6
 22976                           tablat	equ	0xFF5
 22977                           prodh	equ	0xFF4
 22978                           prodl	equ	0xFF3
 22979                           intcon	equ	0xFF2
 22980                           intcon3	equ	0xFF0
 22981                           indf0	equ	0xFEF
 22982                           postinc0	equ	0xFEE
 22983                           fsr0h	equ	0xFEA
 22984                           fsr0l	equ	0xFE9
 22985                           wreg	equ	0xFE8
 22986                           indf1	equ	0xFE7
 22987                           postdec1	equ	0xFE5
 22988                           fsr1h	equ	0xFE2
 22989                           fsr1l	equ	0xFE1
 22990                           indf2	equ	0xFDF
 22991                           fsr2h	equ	0xFDA
 22992                           fsr2l	equ	0xFD9
 22993                           status	equ	0xFD8
 22994                           
 22995 ;; *************** function _oled_writeData *****************
 22996 ;; Defined at:
 22997 ;;		line 442 in file "../Includes/Drivers/SSD1306oLED.c"
 22998 ;; Parameters:    Size  Location     Type
 22999 ;;  data            1    wreg     unsigned char 
 23000 ;; Auto vars:     Size  Location     Type
 23001 ;;  data            1    0[BANK0 ] unsigned char 
 23002 ;; Return value:  Size  Location     Type
 23003 ;;                  1    wreg      void 
 23004 ;; Registers used:
 23005 ;;		wreg
 23006 ;; Tracked objects:
 23007 ;;		On entry : 0/0
 23008 ;;		On exit  : 0/0
 23009 ;;		Unchanged: 0/0
 23010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23011 ;;      Params:         0       0       0       0       0       0       0       0       0
 23012 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23013 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23014 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23015 ;;Total ram usage:        1 bytes
 23016 ;; Hardware stack levels used:    1
 23017 ;; Hardware stack levels required when called:   11
 23018 ;; This function calls:
 23019 ;;		Nothing
 23020 ;; This function is called by:
 23021 ;;		_oled_putChar
 23022 ;; This function uses a non-reentrant model
 23023 ;;
 23024                           
 23025                           	psect	text73
 23026  00719A                     __ptext73:
 23027                           	opt stack 0
 23028  00719A                     _oled_writeData:
 23029                           	opt stack 15
 23030                           
 23031                           ; BSR set to: 0
 23032                           ;incstack = 0
 23033                           ;oled_writeData@data stored from wreg
 23034  00719A  0100               	movlb	0	; () banked
 23035  00719C  6F60               	movwf	oled_writeData@data& (0+255),b
 23036                           
 23037                           ;SSD1306oLED.c: 444: LATBbits.LATB4=0;
 23038  00719E  988A               	bcf	3978,4,c	;volatile
 23039                           
 23040                           ;SSD1306oLED.c: 445: LATCbits.LATC0=1;
 23041  0071A0  808B               	bsf	3979,0,c	;volatile
 23042                           
 23043                           ;SSD1306oLED.c: 446: LATD=data;
 23044  0071A2  C060  FF8C         	movff	oled_writeData@data,3980	;volatile
 23045                           
 23046                           ;SSD1306oLED.c: 447: LATCbits.LATC1=0;
 23047  0071A6  928B               	bcf	3979,1,c	;volatile
 23048                           
 23049                           ;SSD1306oLED.c: 448: __nop();
 23050  0071A8  F000               	nop	
 23051                           
 23052                           ;SSD1306oLED.c: 449: LATCbits.LATC1=1;
 23053  0071AA  828B               	bsf	3979,1,c	;volatile
 23054                           
 23055                           ;SSD1306oLED.c: 450: LATBbits.LATB4=1;
 23056  0071AC  888A               	bsf	3978,4,c	;volatile
 23057  0071AE  D000               	goto	l1072
 23058  0071B0                     l1072:
 23059  0071B0  0012               	return		;funcret
 23060  0071B2                     __end_of_oled_writeData:
 23061                           	opt stack 0
 23062                           tblptru	equ	0xFF8
 23063                           tblptrh	equ	0xFF7
 23064                           tblptrl	equ	0xFF6
 23065                           tablat	equ	0xFF5
 23066                           prodh	equ	0xFF4
 23067                           prodl	equ	0xFF3
 23068                           intcon	equ	0xFF2
 23069                           intcon3	equ	0xFF0
 23070                           indf0	equ	0xFEF
 23071                           postinc0	equ	0xFEE
 23072                           fsr0h	equ	0xFEA
 23073                           fsr0l	equ	0xFE9
 23074                           wreg	equ	0xFE8
 23075                           indf1	equ	0xFE7
 23076                           postdec1	equ	0xFE5
 23077                           fsr1h	equ	0xFE2
 23078                           fsr1l	equ	0xFE1
 23079                           indf2	equ	0xFDF
 23080                           fsr2h	equ	0xFDA
 23081                           fsr2l	equ	0xFD9
 23082                           status	equ	0xFD8
 23083                           
 23084 ;; *************** function _Set_Page_Address *****************
 23085 ;; Defined at:
 23086 ;;		line 241 in file "../Includes/Drivers/SSD1306oLED.c"
 23087 ;; Parameters:    Size  Location     Type
 23088 ;;  address         1    wreg     unsigned char 
 23089 ;; Auto vars:     Size  Location     Type
 23090 ;;  address         1    1[BANK0 ] unsigned char 
 23091 ;; Return value:  Size  Location     Type
 23092 ;;                  1    wreg      void 
 23093 ;; Registers used:
 23094 ;;		wreg, status,2, status,0, cstack
 23095 ;; Tracked objects:
 23096 ;;		On entry : 0/0
 23097 ;;		On exit  : 0/0
 23098 ;;		Unchanged: 0/0
 23099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23100 ;;      Params:         0       0       0       0       0       0       0       0       0
 23101 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23102 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23103 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23104 ;;Total ram usage:        1 bytes
 23105 ;; Hardware stack levels used:    1
 23106 ;; Hardware stack levels required when called:   12
 23107 ;; This function calls:
 23108 ;;		_oled_writeCommand
 23109 ;; This function is called by:
 23110 ;;		_oled_putChar
 23111 ;; This function uses a non-reentrant model
 23112 ;;
 23113                           
 23114                           	psect	text74
 23115  007166                     __ptext74:
 23116                           	opt stack 0
 23117  007166                     _Set_Page_Address:
 23118                           	opt stack 14
 23119                           
 23120                           ;incstack = 0
 23121                           ;Set_Page_Address@address stored from wreg
 23122  007166  0100               	movlb	0	; () banked
 23123  007168  6F61               	movwf	Set_Page_Address@address& (0+255),b
 23124                           
 23125                           ;SSD1306oLED.c: 243: address = 0xb0 | address;
 23126  00716A  0100               	movlb	0	; () banked
 23127  00716C  5161               	movf	Set_Page_Address@address& (0+255),w,b
 23128  00716E  09B0               	iorlw	176
 23129  007170  0100               	movlb	0	; () banked
 23130  007172  6F61               	movwf	Set_Page_Address@address& (0+255),b
 23131                           
 23132                           ; BSR set to: 0
 23133                           ;SSD1306oLED.c: 244: oled_writeCommand(address);
 23134  007174  0100               	movlb	0	; () banked
 23135  007176  5161               	movf	Set_Page_Address@address& (0+255),w,b
 23136  007178  ECD9  F038         	call	_oled_writeCommand
 23137  00717C  D000               	goto	l1014
 23138  00717E                     l1014:
 23139  00717E  0012               	return		;funcret
 23140  007180                     __end_of_Set_Page_Address:
 23141                           	opt stack 0
 23142                           tblptru	equ	0xFF8
 23143                           tblptrh	equ	0xFF7
 23144                           tblptrl	equ	0xFF6
 23145                           tablat	equ	0xFF5
 23146                           prodh	equ	0xFF4
 23147                           prodl	equ	0xFF3
 23148                           intcon	equ	0xFF2
 23149                           intcon3	equ	0xFF0
 23150                           indf0	equ	0xFEF
 23151                           postinc0	equ	0xFEE
 23152                           fsr0h	equ	0xFEA
 23153                           fsr0l	equ	0xFE9
 23154                           wreg	equ	0xFE8
 23155                           indf1	equ	0xFE7
 23156                           postdec1	equ	0xFE5
 23157                           fsr1h	equ	0xFE2
 23158                           fsr1l	equ	0xFE1
 23159                           indf2	equ	0xFDF
 23160                           fsr2h	equ	0xFDA
 23161                           fsr2l	equ	0xFD9
 23162                           status	equ	0xFD8
 23163                           
 23164 ;; *************** function _Set_Column_Address *****************
 23165 ;; Defined at:
 23166 ;;		line 249 in file "../Includes/Drivers/SSD1306oLED.c"
 23167 ;; Parameters:    Size  Location     Type
 23168 ;;  address         1    wreg     unsigned char 
 23169 ;; Auto vars:     Size  Location     Type
 23170 ;;  address         1    1[BANK0 ] unsigned char 
 23171 ;; Return value:  Size  Location     Type
 23172 ;;                  1    wreg      void 
 23173 ;; Registers used:
 23174 ;;		wreg, status,2, status,0, cstack
 23175 ;; Tracked objects:
 23176 ;;		On entry : 0/0
 23177 ;;		On exit  : 0/0
 23178 ;;		Unchanged: 0/0
 23179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23180 ;;      Params:         0       0       0       0       0       0       0       0       0
 23181 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23182 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23183 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23184 ;;Total ram usage:        1 bytes
 23185 ;; Hardware stack levels used:    1
 23186 ;; Hardware stack levels required when called:   12
 23187 ;; This function calls:
 23188 ;;		_oled_writeCommand
 23189 ;; This function is called by:
 23190 ;;		_oled_putChar
 23191 ;; This function uses a non-reentrant model
 23192 ;;
 23193                           
 23194                           	psect	text75
 23195  0070F4                     __ptext75:
 23196                           	opt stack 0
 23197  0070F4                     _Set_Column_Address:
 23198                           	opt stack 14
 23199                           
 23200                           ;incstack = 0
 23201                           ;Set_Column_Address@address stored from wreg
 23202  0070F4  0100               	movlb	0	; () banked
 23203  0070F6  6F61               	movwf	Set_Column_Address@address& (0+255),b
 23204                           
 23205                           ;SSD1306oLED.c: 251: oled_writeCommand((0x10|(address>>4)));
 23206  0070F8  0100               	movlb	0	; () banked
 23207  0070FA  3961               	swapf	Set_Column_Address@address& (0+255),w,b
 23208  0070FC  0B0F               	andlw	15
 23209  0070FE  0910               	iorlw	16
 23210  007100  ECD9  F038         	call	_oled_writeCommand
 23211                           
 23212                           ;SSD1306oLED.c: 252: oled_writeCommand((0x0f&address));
 23213  007104  0100               	movlb	0	; () banked
 23214  007106  5161               	movf	Set_Column_Address@address& (0+255),w,b
 23215  007108  0B0F               	andlw	15
 23216  00710A  ECD9  F038         	call	_oled_writeCommand
 23217  00710E  D000               	goto	l1017
 23218  007110                     l1017:
 23219  007110  0012               	return		;funcret
 23220  007112                     __end_of_Set_Column_Address:
 23221                           	opt stack 0
 23222                           tblptru	equ	0xFF8
 23223                           tblptrh	equ	0xFF7
 23224                           tblptrl	equ	0xFF6
 23225                           tablat	equ	0xFF5
 23226                           prodh	equ	0xFF4
 23227                           prodl	equ	0xFF3
 23228                           intcon	equ	0xFF2
 23229                           intcon3	equ	0xFF0
 23230                           indf0	equ	0xFEF
 23231                           postinc0	equ	0xFEE
 23232                           fsr0h	equ	0xFEA
 23233                           fsr0l	equ	0xFE9
 23234                           wreg	equ	0xFE8
 23235                           indf1	equ	0xFE7
 23236                           postdec1	equ	0xFE5
 23237                           fsr1h	equ	0xFE2
 23238                           fsr1l	equ	0xFE1
 23239                           indf2	equ	0xFDF
 23240                           fsr2h	equ	0xFDA
 23241                           fsr2l	equ	0xFD9
 23242                           status	equ	0xFD8
 23243                           
 23244 ;; *************** function _oled_writeCommand *****************
 23245 ;; Defined at:
 23246 ;;		line 430 in file "../Includes/Drivers/SSD1306oLED.c"
 23247 ;; Parameters:    Size  Location     Type
 23248 ;;  command         1    wreg     unsigned char 
 23249 ;; Auto vars:     Size  Location     Type
 23250 ;;  command         1    0[BANK0 ] unsigned char 
 23251 ;; Return value:  Size  Location     Type
 23252 ;;                  1    wreg      void 
 23253 ;; Registers used:
 23254 ;;		wreg
 23255 ;; Tracked objects:
 23256 ;;		On entry : 0/0
 23257 ;;		On exit  : 0/0
 23258 ;;		Unchanged: 0/0
 23259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23260 ;;      Params:         0       0       0       0       0       0       0       0       0
 23261 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23262 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23263 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23264 ;;Total ram usage:        1 bytes
 23265 ;; Hardware stack levels used:    1
 23266 ;; Hardware stack levels required when called:   11
 23267 ;; This function calls:
 23268 ;;		Nothing
 23269 ;; This function is called by:
 23270 ;;		_Set_Page_Address
 23271 ;;		_Set_Column_Address
 23272 ;;		_oled_devInit
 23273 ;;		_oled_setDisplay
 23274 ;;		_oled_displayOff
 23275 ;;		_oled_setContrastControlRegister
 23276 ;;		_oled_initialDispayLine
 23277 ;;		_oled_powerControl
 23278 ;;		_oled_regulorResistorSelect
 23279 ;; This function uses a non-reentrant model
 23280 ;;
 23281                           
 23282                           	psect	text76
 23283  0071B2                     __ptext76:
 23284                           	opt stack 0
 23285  0071B2                     _oled_writeCommand:
 23286                           	opt stack 14
 23287                           
 23288                           ;incstack = 0
 23289                           ;oled_writeCommand@command stored from wreg
 23290  0071B2  0100               	movlb	0	; () banked
 23291  0071B4  6F60               	movwf	oled_writeCommand@command& (0+255),b
 23292                           
 23293                           ;SSD1306oLED.c: 432: LATBbits.LATB4=0;
 23294  0071B6  988A               	bcf	3978,4,c	;volatile
 23295                           
 23296                           ;SSD1306oLED.c: 433: LATCbits.LATC0=0;
 23297  0071B8  908B               	bcf	3979,0,c	;volatile
 23298                           
 23299                           ;SSD1306oLED.c: 434: LATD=command;
 23300  0071BA  C060  FF8C         	movff	oled_writeCommand@command,3980	;volatile
 23301                           
 23302                           ;SSD1306oLED.c: 435: LATCbits.LATC1=0;
 23303  0071BE  928B               	bcf	3979,1,c	;volatile
 23304                           
 23305                           ;SSD1306oLED.c: 436: __nop();
 23306  0071C0  F000               	nop	
 23307                           
 23308                           ;SSD1306oLED.c: 437: LATCbits.LATC1=1;
 23309  0071C2  828B               	bsf	3979,1,c	;volatile
 23310                           
 23311                           ;SSD1306oLED.c: 438: LATBbits.LATB4=1;
 23312  0071C4  888A               	bsf	3978,4,c	;volatile
 23313  0071C6  D000               	goto	l1069
 23314  0071C8                     l1069:
 23315  0071C8  0012               	return		;funcret
 23316  0071CA                     __end_of_oled_writeCommand:
 23317                           	opt stack 0
 23318                           tblptru	equ	0xFF8
 23319                           tblptrh	equ	0xFF7
 23320                           tblptrl	equ	0xFF6
 23321                           tablat	equ	0xFF5
 23322                           prodh	equ	0xFF4
 23323                           prodl	equ	0xFF3
 23324                           intcon	equ	0xFF2
 23325                           intcon3	equ	0xFF0
 23326                           indf0	equ	0xFEF
 23327                           postinc0	equ	0xFEE
 23328                           fsr0h	equ	0xFEA
 23329                           fsr0l	equ	0xFE9
 23330                           wreg	equ	0xFE8
 23331                           indf1	equ	0xFE7
 23332                           postdec1	equ	0xFE5
 23333                           fsr1h	equ	0xFE2
 23334                           fsr1l	equ	0xFE1
 23335                           indf2	equ	0xFDF
 23336                           fsr2h	equ	0xFDA
 23337                           fsr2l	equ	0xFD9
 23338                           status	equ	0xFD8
 23339                           
 23340 ;; *************** function _USBapp_DeviceCdcEmulatorHandler *****************
 23341 ;; Defined at:
 23342 ;;		line 162 in file "../Includes/Board/USBapp.c"
 23343 ;; Parameters:    Size  Location     Type
 23344 ;;		None
 23345 ;; Auto vars:     Size  Location     Type
 23346 ;;		None
 23347 ;; Return value:  Size  Location     Type
 23348 ;;                  1    wreg      void 
 23349 ;; Registers used:
 23350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23351 ;; Tracked objects:
 23352 ;;		On entry : 0/0
 23353 ;;		On exit  : 0/0
 23354 ;;		Unchanged: 0/0
 23355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23356 ;;      Params:         0       0       0       0       0       0       0       0       0
 23357 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23358 ;;      Temps:          0       1       0       0       0       0       0       0       0
 23359 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23360 ;;Total ram usage:        1 bytes
 23361 ;; Hardware stack levels used:    1
 23362 ;; Hardware stack levels required when called:   13
 23363 ;; This function calls:
 23364 ;;		_CDCTxService
 23365 ;;		_EUSART_Read
 23366 ;;		_EUSART_Write
 23367 ;;		_MOTEapp_setResponseReady
 23368 ;;		_USBapp_getrxByteFlag
 23369 ;;		_getsUSBUSART
 23370 ;;		_putUSBUSART
 23371 ;; This function is called by:
 23372 ;;		_USBapp_Handler
 23373 ;; This function uses a non-reentrant model
 23374 ;;
 23375                           
 23376                           	psect	text77
 23377  00418E                     __ptext77:
 23378                           	opt stack 0
 23379  00418E                     _USBapp_DeviceCdcEmulatorHandler:
 23380                           	opt stack 16
 23381                           
 23382                           ;USBapp.c: 165: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 23383                           
 23384                           ;incstack = 0
 23385  00418E  0E1F               	movlw	31
 23386  004190  0100               	movlb	0	; () banked
 23387  004192  65DE               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
 23388  004194  D001               	goto	u13931
 23389  004196  D001               	goto	u13930
 23390  004198                     u13931:
 23391  004198  D089               	goto	l873
 23392  00419A                     u13930:
 23393                           
 23394                           ; BSR set to: 0
 23395  00419A  A260               	btfss	3936,1,c	;volatile
 23396  00419C  D001               	goto	u13941
 23397  00419E  D001               	goto	u13940
 23398  0041A0                     u13941:
 23399  0041A0  D002               	goto	l14427
 23400  0041A2                     u13940:
 23401  0041A2  D084               	goto	l873
 23402                           
 23403                           ; BSR set to: 0
 23404                           ;USBapp.c: 166: return;
 23405  0041A4  D083               	goto	l873
 23406  0041A6                     l14427:
 23407                           
 23408                           ; BSR set to: 0
 23409                           ;USBapp.c: 168: if (RS232_Out_Data_Rdy == 0)
 23410  0041A6  5052               	movf	_RS232_Out_Data_Rdy,w,c
 23411  0041A8  A4D8               	btfss	status,2,c
 23412  0041AA  D001               	goto	u13951
 23413  0041AC  D001               	goto	u13950
 23414  0041AE                     u13951:
 23415  0041AE  D016               	goto	l874
 23416  0041B0                     u13950:
 23417                           
 23418                           ; BSR set to: 0
 23419                           ;USBapp.c: 169: {
 23420                           ;USBapp.c: 170: LastRS232Out = getsUSBUSART(USB_Buffer,64);
 23421  0041B0  0E80               	movlw	low _USB_Buffer
 23422  0041B2  0100               	movlb	0	; () banked
 23423  0041B4  6F67               	movwf	getsUSBUSART@buffer& (0+255),b
 23424  0041B6  0E02               	movlw	high _USB_Buffer
 23425  0041B8  0100               	movlb	0	; () banked
 23426  0041BA  6F68               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 23427  0041BC  0E40               	movlw	64
 23428  0041BE  0100               	movlb	0	; () banked
 23429  0041C0  6F69               	movwf	getsUSBUSART@len& (0+255),b
 23430  0041C2  EC79  F023         	call	_getsUSBUSART	;wreg free
 23431  0041C6  6E51               	movwf	_LastRS232Out,c
 23432                           
 23433                           ;USBapp.c: 171: if(LastRS232Out > 0)
 23434  0041C8  5051               	movf	_LastRS232Out,w,c
 23435  0041CA  B4D8               	btfsc	status,2,c
 23436  0041CC  D001               	goto	u13961
 23437  0041CE  D001               	goto	u13960
 23438  0041D0                     u13961:
 23439  0041D0  D005               	goto	l874
 23440  0041D2                     u13960:
 23441                           
 23442                           ;USBapp.c: 172: {
 23443                           ;USBapp.c: 173: RS232_Out_Data_Rdy = 1;
 23444  0041D2  0E01               	movlw	1
 23445  0041D4  6E52               	movwf	_RS232_Out_Data_Rdy,c
 23446                           
 23447                           ;USBapp.c: 174: RS232cp = 0;
 23448  0041D6  0E00               	movlw	0
 23449  0041D8  6E50               	movwf	_RS232cp,c
 23450  0041DA  D000               	goto	l874
 23451  0041DC                     l874:
 23452                           
 23453                           ;USBapp.c: 175: }
 23454                           ;USBapp.c: 176: }
 23455                           ;USBapp.c: 179: if(RS232_Out_Data_Rdy && TXSTAbits.TRMT)
 23456  0041DC  5052               	movf	_RS232_Out_Data_Rdy,w,c
 23457  0041DE  B4D8               	btfsc	status,2,c
 23458  0041E0  D001               	goto	u13971
 23459  0041E2  D001               	goto	u13970
 23460  0041E4                     u13971:
 23461  0041E4  D019               	goto	l876
 23462  0041E6                     u13970:
 23463  0041E6  A2AC               	btfss	4012,1,c	;volatile
 23464  0041E8  D001               	goto	u13981
 23465  0041EA  D001               	goto	u13980
 23466  0041EC                     u13981:
 23467  0041EC  D015               	goto	l876
 23468  0041EE                     u13980:
 23469                           
 23470                           ;USBapp.c: 180: {
 23471                           ;USBapp.c: 182: EUSART_Write(USB_Buffer[RS232cp]);
 23472  0041EE  5050               	movf	_RS232cp,w,c
 23473  0041F0  0D01               	mullw	1
 23474  0041F2  0E80               	movlw	low _USB_Buffer
 23475  0041F4  24F3               	addwf	prodl,w,c
 23476  0041F6  6ED9               	movwf	fsr2l,c
 23477  0041F8  0E02               	movlw	high _USB_Buffer
 23478  0041FA  20F4               	addwfc	prodh,w,c
 23479  0041FC  6EDA               	movwf	fsr2h,c
 23480  0041FE  50DF               	movf	indf2,w,c
 23481  004200  ECC8  F034         	call	_EUSART_Write
 23482                           
 23483                           ;USBapp.c: 183: ++RS232cp;
 23484  004204  2A50               	incf	_RS232cp,f,c
 23485                           
 23486                           ;USBapp.c: 184: if (RS232cp == LastRS232Out)
 23487  004206  5051               	movf	_LastRS232Out,w,c
 23488  004208  1850               	xorwf	_RS232cp,w,c
 23489  00420A  A4D8               	btfss	status,2,c
 23490  00420C  D001               	goto	u13991
 23491  00420E  D001               	goto	u13990
 23492  004210                     u13991:
 23493  004210  D003               	goto	l876
 23494  004212                     u13990:
 23495                           
 23496                           ;USBapp.c: 185: RS232_Out_Data_Rdy = 0;
 23497  004212  0E00               	movlw	0
 23498  004214  6E52               	movwf	_RS232_Out_Data_Rdy,c
 23499  004216  D000               	goto	l876
 23500  004218                     l876:
 23501                           
 23502                           ;USBapp.c: 186: }
 23503                           ;USBapp.c: 189: if ((eusartRxCount))
 23504  004218  5057               	movf	_eusartRxCount,w,c	;volatile
 23505  00421A  B4D8               	btfsc	status,2,c
 23506  00421C  D001               	goto	u14001
 23507  00421E  D001               	goto	u14000
 23508  004220                     u14001:
 23509  004220  D02A               	goto	l14459
 23510  004222                     u14000:
 23511                           
 23512                           ;USBapp.c: 190: {
 23513                           ;USBapp.c: 191: if(USBapp_getrxByteFlag() && (NextUSBOut < (64 - 1)))
 23514  004222  EC77  F039         	call	_USBapp_getrxByteFlag	;wreg free
 23515  004226  0900               	iorlw	0
 23516  004228  B4D8               	btfsc	status,2,c
 23517  00422A  D001               	goto	u14011
 23518  00422C  D001               	goto	u14010
 23519  00422E                     u14011:
 23520  00422E  D023               	goto	l14459
 23521  004230                     u14010:
 23522  004230  0E3F               	movlw	63
 23523  004232  6053               	cpfslt	_NextUSBOut,c
 23524  004234  D001               	goto	u14021
 23525  004236  D001               	goto	u14020
 23526  004238                     u14021:
 23527  004238  D01E               	goto	l14459
 23528  00423A                     u14020:
 23529                           
 23530                           ;USBapp.c: 192: {
 23531                           ;USBapp.c: 193: __nop();
 23532  00423A  F000               	nop	
 23533                           
 23534                           ;USBapp.c: 194: USB_Buffer[NextUSBOut] = EUSART_Read();
 23535  00423C  EC4A  F035         	call	_EUSART_Read	;wreg free
 23536  004240  0100               	movlb	0	; () banked
 23537  004242  6F6D               	movwf	??_USBapp_DeviceCdcEmulatorHandler& (0+255),b
 23538  004244  5053               	movf	_NextUSBOut,w,c
 23539  004246  0D01               	mullw	1
 23540  004248  0E80               	movlw	low _USB_Buffer
 23541  00424A  24F3               	addwf	prodl,w,c
 23542  00424C  6ED9               	movwf	fsr2l,c
 23543  00424E  0E02               	movlw	high _USB_Buffer
 23544  004250  20F4               	addwfc	prodh,w,c
 23545  004252  6EDA               	movwf	fsr2h,c
 23546  004254  C06D  FFDF         	movff	??_USBapp_DeviceCdcEmulatorHandler,indf2
 23547                           
 23548                           ; BSR set to: 0
 23549                           ;USBapp.c: 195: ++NextUSBOut;
 23550  004258  2A53               	incf	_NextUSBOut,f,c
 23551                           
 23552                           ; BSR set to: 0
 23553                           ;USBapp.c: 196: USB_Buffer[NextUSBOut] = 0;
 23554  00425A  5053               	movf	_NextUSBOut,w,c
 23555  00425C  0D01               	mullw	1
 23556  00425E  0E80               	movlw	low _USB_Buffer
 23557  004260  24F3               	addwf	prodl,w,c
 23558  004262  6ED9               	movwf	fsr2l,c
 23559  004264  0E02               	movlw	high _USB_Buffer
 23560  004266  20F4               	addwfc	prodh,w,c
 23561  004268  6EDA               	movwf	fsr2h,c
 23562  00426A  0E00               	movlw	0
 23563  00426C  6EDF               	movwf	indf2,c
 23564                           
 23565                           ; BSR set to: 0
 23566                           ;USBapp.c: 197: rxByteFlag = 0;
 23567  00426E  0E00               	movlw	0
 23568  004270  6E54               	movwf	_rxByteFlag,c	;volatile
 23569  004272  D001               	goto	l14459
 23570                           
 23571                           ; BSR set to: 0
 23572  004274  D000               	goto	l14459
 23573  004276                     l14459:
 23574                           
 23575                           ;USBapp.c: 198: }
 23576                           ;USBapp.c: 199: }
 23577                           ;USBapp.c: 203: if(((cdc_trf_state == 0)) && (NextUSBOut > 0))
 23578  004276  5055               	movf	_cdc_trf_state,w,c
 23579  004278  A4D8               	btfss	status,2,c
 23580  00427A  D001               	goto	u14031
 23581  00427C  D001               	goto	u14030
 23582  00427E                     u14031:
 23583  00427E  D014               	goto	l14469
 23584  004280                     u14030:
 23585  004280  5053               	movf	_NextUSBOut,w,c
 23586  004282  B4D8               	btfsc	status,2,c
 23587  004284  D001               	goto	u14041
 23588  004286  D001               	goto	u14040
 23589  004288                     u14041:
 23590  004288  D00F               	goto	l14469
 23591  00428A                     u14040:
 23592                           
 23593                           ;USBapp.c: 204: {
 23594                           ;USBapp.c: 205: putUSBUSART(&USB_Buffer[0], NextUSBOut);
 23595  00428A  0E80               	movlw	low _USB_Buffer
 23596  00428C  0100               	movlb	0	; () banked
 23597  00428E  6F60               	movwf	putUSBUSART@data& (0+255),b
 23598  004290  0E02               	movlw	high _USB_Buffer
 23599  004292  0100               	movlb	0	; () banked
 23600  004294  6F61               	movwf	(putUSBUSART@data+1)& (0+255),b
 23601  004296  C053  F062         	movff	_NextUSBOut,putUSBUSART@length
 23602  00429A  EC32  F038         	call	_putUSBUSART	;wreg free
 23603                           
 23604                           ;USBapp.c: 206: MOTEapp_setResponseReady();
 23605  00429E  EC73  F039         	call	_MOTEapp_setResponseReady	;wreg free
 23606                           
 23607                           ;USBapp.c: 207: NextUSBOut = 0;
 23608  0042A2  0E00               	movlw	0
 23609  0042A4  6E53               	movwf	_NextUSBOut,c
 23610  0042A6  D000               	goto	l14469
 23611  0042A8                     l14469:
 23612                           
 23613                           ;USBapp.c: 208: }
 23614                           ;USBapp.c: 210: CDCTxService();
 23615  0042A8  ECE5  F019         	call	_CDCTxService	;wreg free
 23616  0042AC                     l873:
 23617  0042AC  0012               	return		;funcret
 23618  0042AE                     __end_of_USBapp_DeviceCdcEmulatorHandler:
 23619                           	opt stack 0
 23620                           tblptru	equ	0xFF8
 23621                           tblptrh	equ	0xFF7
 23622                           tblptrl	equ	0xFF6
 23623                           tablat	equ	0xFF5
 23624                           prodh	equ	0xFF4
 23625                           prodl	equ	0xFF3
 23626                           intcon	equ	0xFF2
 23627                           intcon3	equ	0xFF0
 23628                           indf0	equ	0xFEF
 23629                           postinc0	equ	0xFEE
 23630                           fsr0h	equ	0xFEA
 23631                           fsr0l	equ	0xFE9
 23632                           wreg	equ	0xFE8
 23633                           indf1	equ	0xFE7
 23634                           postdec1	equ	0xFE5
 23635                           fsr1h	equ	0xFE2
 23636                           fsr1l	equ	0xFE1
 23637                           indf2	equ	0xFDF
 23638                           fsr2h	equ	0xFDA
 23639                           fsr2l	equ	0xFD9
 23640                           status	equ	0xFD8
 23641                           
 23642 ;; *************** function _putUSBUSART *****************
 23643 ;; Defined at:
 23644 ;;		line 503 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 23645 ;; Parameters:    Size  Location     Type
 23646 ;;  data            2    0[BANK0 ] PTR unsigned char 
 23647 ;;		 -> USB_Buffer(64), 
 23648 ;;  length          1    2[BANK0 ] unsigned char 
 23649 ;; Auto vars:     Size  Location     Type
 23650 ;;		None
 23651 ;; Return value:  Size  Location     Type
 23652 ;;                  1    wreg      void 
 23653 ;; Registers used:
 23654 ;;		wreg, status,2, status,0
 23655 ;; Tracked objects:
 23656 ;;		On entry : 0/0
 23657 ;;		On exit  : 0/0
 23658 ;;		Unchanged: 0/0
 23659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23660 ;;      Params:         0       3       0       0       0       0       0       0       0
 23661 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23662 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23663 ;;      Totals:         0       3       0       0       0       0       0       0       0
 23664 ;;Total ram usage:        3 bytes
 23665 ;; Hardware stack levels used:    1
 23666 ;; Hardware stack levels required when called:   11
 23667 ;; This function calls:
 23668 ;;		Nothing
 23669 ;; This function is called by:
 23670 ;;		_USBapp_DeviceCdcEmulatorHandler
 23671 ;; This function uses a non-reentrant model
 23672 ;;
 23673                           
 23674                           	psect	text78
 23675  007064                     __ptext78:
 23676                           	opt stack 0
 23677  007064                     _putUSBUSART:
 23678                           	opt stack 17
 23679                           
 23680                           ;usb_device_cdc.c: 528: {PIE3bits.USBIE = 0;};
 23681                           
 23682                           ;incstack = 0
 23683  007064  94A3               	bcf	4003,2,c	;volatile
 23684                           
 23685                           ;usb_device_cdc.c: 529: if(cdc_trf_state == 0)
 23686  007066  5055               	movf	_cdc_trf_state,w,c
 23687  007068  A4D8               	btfss	status,2,c
 23688  00706A  D001               	goto	u12721
 23689  00706C  D001               	goto	u12720
 23690  00706E                     u12721:
 23691  00706E  D00C               	goto	l13367
 23692  007070                     u12720:
 23693                           
 23694                           ;usb_device_cdc.c: 530: {
 23695                           ;usb_device_cdc.c: 531: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 23696  007070  C060  F151         	movff	putUSBUSART@data,_pCDCSrc
 23697  007074  C061  F152         	movff	putUSBUSART@data+1,_pCDCSrc+1
 23698  007078  C062  F0CF         	movff	putUSBUSART@length,_cdc_tx_len
 23699  00707C  0E01               	movlw	1
 23700  00707E  0100               	movlb	0	; () banked
 23701  007080  6FCE               	movwf	_cdc_mem_type& (0+255),b
 23702                           
 23703                           ; BSR set to: 0
 23704  007082  0E01               	movlw	1
 23705  007084  6E55               	movwf	_cdc_trf_state,c
 23706  007086  D000               	goto	l13367
 23707  007088                     l13367:
 23708                           
 23709                           ;usb_device_cdc.c: 532: }
 23710                           ;usb_device_cdc.c: 533: {PIE3bits.USBIE = 1;};
 23711  007088  84A3               	bsf	4003,2,c	;volatile
 23712  00708A  0012               	return		;funcret
 23713  00708C                     __end_of_putUSBUSART:
 23714                           	opt stack 0
 23715                           tblptru	equ	0xFF8
 23716                           tblptrh	equ	0xFF7
 23717                           tblptrl	equ	0xFF6
 23718                           tablat	equ	0xFF5
 23719                           prodh	equ	0xFF4
 23720                           prodl	equ	0xFF3
 23721                           intcon	equ	0xFF2
 23722                           intcon3	equ	0xFF0
 23723                           indf0	equ	0xFEF
 23724                           postinc0	equ	0xFEE
 23725                           fsr0h	equ	0xFEA
 23726                           fsr0l	equ	0xFE9
 23727                           wreg	equ	0xFE8
 23728                           indf1	equ	0xFE7
 23729                           postdec1	equ	0xFE5
 23730                           fsr1h	equ	0xFE2
 23731                           fsr1l	equ	0xFE1
 23732                           indf2	equ	0xFDF
 23733                           fsr2h	equ	0xFDA
 23734                           fsr2l	equ	0xFD9
 23735                           status	equ	0xFD8
 23736                           
 23737 ;; *************** function _getsUSBUSART *****************
 23738 ;; Defined at:
 23739 ;;		line 432 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 23740 ;; Parameters:    Size  Location     Type
 23741 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 23742 ;;		 -> USB_Buffer(64), 
 23743 ;;  len             1    9[BANK0 ] unsigned char 
 23744 ;; Auto vars:     Size  Location     Type
 23745 ;;		None
 23746 ;; Return value:  Size  Location     Type
 23747 ;;                  1    wreg      unsigned char 
 23748 ;; Registers used:
 23749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23750 ;; Tracked objects:
 23751 ;;		On entry : 0/0
 23752 ;;		On exit  : 0/0
 23753 ;;		Unchanged: 0/0
 23754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23755 ;;      Params:         0       3       0       0       0       0       0       0       0
 23756 ;;      Locals:         0       2       0       0       0       0       0       0       0
 23757 ;;      Temps:          0       1       0       0       0       0       0       0       0
 23758 ;;      Totals:         0       6       0       0       0       0       0       0       0
 23759 ;;Total ram usage:        6 bytes
 23760 ;; Hardware stack levels used:    1
 23761 ;; Hardware stack levels required when called:   12
 23762 ;; This function calls:
 23763 ;;		_USBTransferOnePacket
 23764 ;; This function is called by:
 23765 ;;		_USBapp_DeviceCdcEmulatorHandler
 23766 ;; This function uses a non-reentrant model
 23767 ;;
 23768                           
 23769                           	psect	text79
 23770  0046F2                     __ptext79:
 23771                           	opt stack 0
 23772  0046F2                     _getsUSBUSART:
 23773                           	opt stack 16
 23774                           
 23775                           ;usb_device_cdc.c: 434: cdc_rx_len = 0;
 23776                           
 23777                           ;incstack = 0
 23778  0046F2  0E00               	movlw	0
 23779  0046F4  0100               	movlb	0	; () banked
 23780  0046F6  6FD0               	movwf	_cdc_rx_len& (0+255),b
 23781                           
 23782                           ; BSR set to: 0
 23783                           ;usb_device_cdc.c: 436: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 23784  0046F8  0100               	movlb	0	; () banked
 23785  0046FA  51BF               	movf	_CDCDataOutHandle& (0+255),w,b
 23786  0046FC  0100               	movlb	0	; () banked
 23787  0046FE  11C0               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 23788  004700  B4D8               	btfsc	status,2,c
 23789  004702  D001               	goto	u12671
 23790  004704  D001               	goto	u12670
 23791  004706                     u12671:
 23792  004706  D014               	goto	l13329
 23793  004708                     u12670:
 23794                           
 23795                           ; BSR set to: 0
 23796  004708  C0BF  FFD9         	movff	_CDCDataOutHandle,fsr2l
 23797  00470C  C0C0  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 23798  004710  0100               	movlb	0	; () banked
 23799  004712  BEDF               	btfsc	indf2,7,c
 23800  004714  D001               	goto	u12681
 23801  004716  D004               	goto	u12680
 23802  004718                     u12681:
 23803  004718  0100               	movlb	0	; () banked
 23804  00471A  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 23805  00471C  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 23806  00471E  D002               	goto	u12688
 23807  004720                     u12680:
 23808  004720  0100               	movlb	0	; () banked
 23809  004722  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 23810  004724                     u12688:
 23811  004724  0100               	movlb	0	; () banked
 23812  004726  516A               	movf	??_getsUSBUSART& (0+255),w,b
 23813  004728  0100               	movlb	0	; () banked
 23814  00472A  6F6B               	movwf	_getsUSBUSART$5876& (0+255),b
 23815  00472C  6B6C               	clrf	(_getsUSBUSART$5876+1)& (0+255),b
 23816  00472E  D006               	goto	l13331
 23817  004730                     l13329:
 23818                           
 23819                           ; BSR set to: 0
 23820  004730  0E00               	movlw	0
 23821  004732  0100               	movlb	0	; () banked
 23822  004734  6F6C               	movwf	(_getsUSBUSART$5876+1)& (0+255),b
 23823  004736  0E00               	movlw	0
 23824  004738  6F6B               	movwf	_getsUSBUSART$5876& (0+255),b
 23825  00473A  D000               	goto	l13331
 23826  00473C                     l13331:
 23827                           
 23828                           ; BSR set to: 0
 23829  00473C  0100               	movlb	0	; () banked
 23830  00473E  516B               	movf	_getsUSBUSART$5876& (0+255),w,b
 23831  004740  0100               	movlb	0	; () banked
 23832  004742  116C               	iorwf	(_getsUSBUSART$5876+1)& (0+255),w,b
 23833  004744  A4D8               	btfss	status,2,c
 23834  004746  D001               	goto	u12691
 23835  004748  D001               	goto	u12690
 23836  00474A                     u12691:
 23837  00474A  D053               	goto	l13347
 23838  00474C                     u12690:
 23839                           
 23840                           ; BSR set to: 0
 23841                           ;usb_device_cdc.c: 437: {
 23842                           ;usb_device_cdc.c: 442: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 23843  00474C  0100               	movlb	0	; () banked
 23844  00474E  EE20 F001          	lfsr	2,1
 23845  004752  51BF               	movf	_CDCDataOutHandle& (0+255),w,b
 23846  004754  26D9               	addwf	fsr2l,f,c
 23847  004756  51C0               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 23848  004758  22DA               	addwfc	fsr2h,f,c
 23849  00475A  0100               	movlb	0	; () banked
 23850  00475C  5169               	movf	getsUSBUSART@len& (0+255),w,b
 23851  00475E  5CDE               	subwf	postinc2,w,c
 23852  004760  B0D8               	btfsc	status,0,c
 23853  004762  D001               	goto	u12701
 23854  004764  D001               	goto	u12700
 23855  004766                     u12701:
 23856  004766  D00B               	goto	l13337
 23857  004768                     u12700:
 23858                           
 23859                           ; BSR set to: 0
 23860                           ;usb_device_cdc.c: 443: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 23861  004768  0100               	movlb	0	; () banked
 23862  00476A  EE20 F001          	lfsr	2,1
 23863  00476E  51BF               	movf	_CDCDataOutHandle& (0+255),w,b
 23864  004770  26D9               	addwf	fsr2l,f,c
 23865  004772  51C0               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 23866  004774  22DA               	addwfc	fsr2h,f,c
 23867  004776  50DF               	movf	indf2,w,c
 23868  004778  0100               	movlb	0	; () banked
 23869  00477A  6F69               	movwf	getsUSBUSART@len& (0+255),b
 23870  00477C  D000               	goto	l13337
 23871  00477E                     l13337:
 23872                           
 23873                           ; BSR set to: 0
 23874                           ;usb_device_cdc.c: 448: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 23875  00477E  0E00               	movlw	0
 23876  004780  0100               	movlb	0	; () banked
 23877  004782  6FD0               	movwf	_cdc_rx_len& (0+255),b
 23878  004784  D019               	goto	l13343
 23879  004786                     l13339:
 23880                           
 23881                           ; BSR set to: 0
 23882                           ;usb_device_cdc.c: 449: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 23883  004786  0100               	movlb	0	; () banked
 23884  004788  51D0               	movf	_cdc_rx_len& (0+255),w,b
 23885  00478A  0D01               	mullw	1
 23886  00478C  0E40               	movlw	64
 23887  00478E  24F3               	addwf	prodl,w,c
 23888  004790  6ED9               	movwf	fsr2l,c
 23889  004792  0E05               	movlw	5
 23890  004794  20F4               	addwfc	prodh,w,c
 23891  004796  6EDA               	movwf	fsr2h,c
 23892  004798  0100               	movlb	0	; () banked
 23893  00479A  51D0               	movf	_cdc_rx_len& (0+255),w,b
 23894  00479C  0D01               	mullw	1
 23895  00479E  50F3               	movf	prodl,w,c
 23896  0047A0  0100               	movlb	0	; () banked
 23897  0047A2  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 23898  0047A4  6EE1               	movwf	fsr1l,c
 23899  0047A6  50F4               	movf	prodh,w,c
 23900  0047A8  0100               	movlb	0	; () banked
 23901  0047AA  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 23902  0047AC  6EE2               	movwf	fsr1h,c
 23903  0047AE  CFDF FFE7          	movff	indf2,indf1
 23904                           
 23905                           ; BSR set to: 0
 23906  0047B2  0100               	movlb	0	; () banked
 23907  0047B4  2BD0               	incf	_cdc_rx_len& (0+255),f,b
 23908  0047B6  D000               	goto	l13343
 23909  0047B8                     l13343:
 23910                           
 23911                           ; BSR set to: 0
 23912  0047B8  0100               	movlb	0	; () banked
 23913  0047BA  5169               	movf	getsUSBUSART@len& (0+255),w,b
 23914  0047BC  0100               	movlb	0	; () banked
 23915  0047BE  5DD0               	subwf	_cdc_rx_len& (0+255),w,b
 23916  0047C0  A0D8               	btfss	status,0,c
 23917  0047C2  D001               	goto	u12711
 23918  0047C4  D001               	goto	u12710
 23919  0047C6                     u12711:
 23920  0047C6  D7DF               	goto	l13339
 23921  0047C8                     u12710:
 23922  0047C8  D000               	goto	l13345
 23923  0047CA                     l13345:
 23924                           
 23925                           ; BSR set to: 0
 23926                           ;usb_device_cdc.c: 455: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 23927  0047CA  0E00               	movlw	0
 23928  0047CC  0100               	movlb	0	; () banked
 23929  0047CE  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 23930  0047D0  0E40               	movlw	64
 23931  0047D2  0100               	movlb	0	; () banked
 23932  0047D4  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 23933  0047D6  0E05               	movlw	5
 23934  0047D8  0100               	movlb	0	; () banked
 23935  0047DA  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 23936  0047DC  0E40               	movlw	64
 23937  0047DE  0100               	movlb	0	; () banked
 23938  0047E0  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 23939  0047E2  0E02               	movlw	2
 23940  0047E4  ECFD  F023         	call	_USBTransferOnePacket
 23941  0047E8  C060  F0BF         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 23942  0047EC  C061  F0C0         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 23943  0047F0  D000               	goto	l13347
 23944  0047F2                     l13347:
 23945                           
 23946                           ;usb_device_cdc.c: 457: }
 23947                           ;usb_device_cdc.c: 459: return cdc_rx_len;
 23948  0047F2  0100               	movlb	0	; () banked
 23949  0047F4  51D0               	movf	_cdc_rx_len& (0+255),w,b
 23950  0047F6  D000               	goto	l2045
 23951  0047F8                     l2045:
 23952                           
 23953                           ; BSR set to: 0
 23954  0047F8  0012               	return		;funcret
 23955  0047FA                     __end_of_getsUSBUSART:
 23956                           	opt stack 0
 23957                           tblptru	equ	0xFF8
 23958                           tblptrh	equ	0xFF7
 23959                           tblptrl	equ	0xFF6
 23960                           tablat	equ	0xFF5
 23961                           prodh	equ	0xFF4
 23962                           prodl	equ	0xFF3
 23963                           intcon	equ	0xFF2
 23964                           intcon3	equ	0xFF0
 23965                           indf0	equ	0xFEF
 23966                           postinc0	equ	0xFEE
 23967                           fsr0h	equ	0xFEA
 23968                           fsr0l	equ	0xFE9
 23969                           wreg	equ	0xFE8
 23970                           indf1	equ	0xFE7
 23971                           postdec1	equ	0xFE5
 23972                           fsr1h	equ	0xFE2
 23973                           fsr1l	equ	0xFE1
 23974                           indf2	equ	0xFDF
 23975                           postinc2	equ	0xFDE
 23976                           fsr2h	equ	0xFDA
 23977                           fsr2l	equ	0xFD9
 23978                           status	equ	0xFD8
 23979                           
 23980 ;; *************** function _USBapp_getrxByteFlag *****************
 23981 ;; Defined at:
 23982 ;;		line 268 in file "../Includes/Board/USBapp.c"
 23983 ;; Parameters:    Size  Location     Type
 23984 ;;		None
 23985 ;; Auto vars:     Size  Location     Type
 23986 ;;		None
 23987 ;; Return value:  Size  Location     Type
 23988 ;;                  1    wreg      unsigned char 
 23989 ;; Registers used:
 23990 ;;		wreg, status,2
 23991 ;; Tracked objects:
 23992 ;;		On entry : 0/0
 23993 ;;		On exit  : 0/0
 23994 ;;		Unchanged: 0/0
 23995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23996 ;;      Params:         0       0       0       0       0       0       0       0       0
 23997 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23998 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23999 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24000 ;;Total ram usage:        0 bytes
 24001 ;; Hardware stack levels used:    1
 24002 ;; Hardware stack levels required when called:   11
 24003 ;; This function calls:
 24004 ;;		Nothing
 24005 ;; This function is called by:
 24006 ;;		_USBapp_DeviceCdcEmulatorHandler
 24007 ;; This function uses a non-reentrant model
 24008 ;;
 24009                           
 24010                           	psect	text80
 24011  0072EE                     __ptext80:
 24012                           	opt stack 0
 24013  0072EE                     _USBapp_getrxByteFlag:
 24014                           	opt stack 17
 24015                           
 24016                           ;USBapp.c: 270: return rxByteFlag;
 24017                           
 24018                           ; BSR set to: 0
 24019                           ;incstack = 0
 24020  0072EE  5054               	movf	_rxByteFlag,w,c	;volatile
 24021  0072F0  D000               	goto	l906
 24022  0072F2                     l906:
 24023  0072F2  0012               	return		;funcret
 24024  0072F4                     __end_of_USBapp_getrxByteFlag:
 24025                           	opt stack 0
 24026                           tblptru	equ	0xFF8
 24027                           tblptrh	equ	0xFF7
 24028                           tblptrl	equ	0xFF6
 24029                           tablat	equ	0xFF5
 24030                           prodh	equ	0xFF4
 24031                           prodl	equ	0xFF3
 24032                           intcon	equ	0xFF2
 24033                           intcon3	equ	0xFF0
 24034                           indf0	equ	0xFEF
 24035                           postinc0	equ	0xFEE
 24036                           fsr0h	equ	0xFEA
 24037                           fsr0l	equ	0xFE9
 24038                           wreg	equ	0xFE8
 24039                           indf1	equ	0xFE7
 24040                           postdec1	equ	0xFE5
 24041                           fsr1h	equ	0xFE2
 24042                           fsr1l	equ	0xFE1
 24043                           indf2	equ	0xFDF
 24044                           postinc2	equ	0xFDE
 24045                           fsr2h	equ	0xFDA
 24046                           fsr2l	equ	0xFD9
 24047                           status	equ	0xFD8
 24048                           
 24049 ;; *************** function _MOTEapp_setResponseReady *****************
 24050 ;; Defined at:
 24051 ;;		line 1101 in file "../Includes/Board/MOTEapp.c"
 24052 ;; Parameters:    Size  Location     Type
 24053 ;;		None
 24054 ;; Auto vars:     Size  Location     Type
 24055 ;;		None
 24056 ;; Return value:  Size  Location     Type
 24057 ;;                  1    wreg      void 
 24058 ;; Registers used:
 24059 ;;		wreg, status,2
 24060 ;; Tracked objects:
 24061 ;;		On entry : 0/0
 24062 ;;		On exit  : 0/0
 24063 ;;		Unchanged: 0/0
 24064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24065 ;;      Params:         0       0       0       0       0       0       0       0       0
 24066 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24067 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24068 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24069 ;;Total ram usage:        0 bytes
 24070 ;; Hardware stack levels used:    1
 24071 ;; Hardware stack levels required when called:   11
 24072 ;; This function calls:
 24073 ;;		Nothing
 24074 ;; This function is called by:
 24075 ;;		_USBapp_DeviceCdcEmulatorHandler
 24076 ;; This function uses a non-reentrant model
 24077 ;;
 24078                           
 24079                           	psect	text81
 24080  0072E6                     __ptext81:
 24081                           	opt stack 0
 24082  0072E6                     _MOTEapp_setResponseReady:
 24083                           	opt stack 17
 24084                           
 24085                           ;MOTEapp.c: 1103: responseReady = 1;
 24086                           
 24087                           ;incstack = 0
 24088  0072E6  0E01               	movlw	1
 24089  0072E8  0100               	movlb	0	; () banked
 24090  0072EA  6FEA               	movwf	_responseReady& (0+255),b
 24091                           
 24092                           ; BSR set to: 0
 24093  0072EC  0012               	return		;funcret
 24094  0072EE                     __end_of_MOTEapp_setResponseReady:
 24095                           	opt stack 0
 24096                           tblptru	equ	0xFF8
 24097                           tblptrh	equ	0xFF7
 24098                           tblptrl	equ	0xFF6
 24099                           tablat	equ	0xFF5
 24100                           prodh	equ	0xFF4
 24101                           prodl	equ	0xFF3
 24102                           intcon	equ	0xFF2
 24103                           intcon3	equ	0xFF0
 24104                           indf0	equ	0xFEF
 24105                           postinc0	equ	0xFEE
 24106                           fsr0h	equ	0xFEA
 24107                           fsr0l	equ	0xFE9
 24108                           wreg	equ	0xFE8
 24109                           indf1	equ	0xFE7
 24110                           postdec1	equ	0xFE5
 24111                           fsr1h	equ	0xFE2
 24112                           fsr1l	equ	0xFE1
 24113                           indf2	equ	0xFDF
 24114                           postinc2	equ	0xFDE
 24115                           fsr2h	equ	0xFDA
 24116                           fsr2l	equ	0xFD9
 24117                           status	equ	0xFD8
 24118                           
 24119 ;; *************** function _EUSART_Write *****************
 24120 ;; Defined at:
 24121 ;;		line 139 in file "../Includes/MccGenerated/eusart.c"
 24122 ;; Parameters:    Size  Location     Type
 24123 ;;  txData          1    wreg     unsigned char 
 24124 ;; Auto vars:     Size  Location     Type
 24125 ;;  txData          1    0[BANK0 ] unsigned char 
 24126 ;; Return value:  Size  Location     Type
 24127 ;;                  1    wreg      void 
 24128 ;; Registers used:
 24129 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24130 ;; Tracked objects:
 24131 ;;		On entry : 0/0
 24132 ;;		On exit  : 0/0
 24133 ;;		Unchanged: 0/0
 24134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24135 ;;      Params:         0       0       0       0       0       0       0       0       0
 24136 ;;      Locals:         0       1       0       0       0       0       0       0       0
 24137 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24138 ;;      Totals:         0       1       0       0       0       0       0       0       0
 24139 ;;Total ram usage:        1 bytes
 24140 ;; Hardware stack levels used:    1
 24141 ;; Hardware stack levels required when called:   11
 24142 ;; This function calls:
 24143 ;;		Nothing
 24144 ;; This function is called by:
 24145 ;;		_EndLine
 24146 ;;		_sendCommand
 24147 ;;		_sendDataCommand
 24148 ;;		_USBapp_DeviceCdcEmulatorHandler
 24149 ;; This function uses a non-reentrant model
 24150 ;;
 24151                           
 24152                           	psect	text82
 24153  006990                     __ptext82:
 24154                           	opt stack 0
 24155  006990                     _EUSART_Write:
 24156                           	opt stack 14
 24157                           
 24158                           ; BSR set to: 0
 24159                           ;incstack = 0
 24160                           ;EUSART_Write@txData stored from wreg
 24161  006990  0100               	movlb	0	; () banked
 24162  006992  6F60               	movwf	EUSART_Write@txData& (0+255),b
 24163                           
 24164                           ;eusart.c: 141: while(0 == eusartTxBufferRemaining)
 24165  006994  D001               	goto	l11911
 24166  006996  D000               	goto	l11911
 24167  006998                     l11911:
 24168  006998  504F               	movf	_eusartTxBufferRemaining,w,c	;volatile
 24169  00699A  B4D8               	btfsc	status,2,c
 24170  00699C  D001               	goto	u10781
 24171  00699E  D001               	goto	u10780
 24172  0069A0                     u10781:
 24173  0069A0  D7FB               	goto	l11911
 24174  0069A2                     u10780:
 24175                           
 24176                           ;eusart.c: 143: }
 24177                           ;eusart.c: 145: if(0 == PIE1bits.TXIE)
 24178  0069A2  B89D               	btfsc	3997,4,c	;volatile
 24179  0069A4  D001               	goto	u10791
 24180  0069A6  D001               	goto	u10790
 24181  0069A8                     u10791:
 24182  0069A8  D003               	goto	l1136
 24183  0069AA                     u10790:
 24184                           
 24185                           ;eusart.c: 146: {
 24186                           ;eusart.c: 147: TXREG = txData;
 24187  0069AA  C060  FFAD         	movff	EUSART_Write@txData,4013	;volatile
 24188                           
 24189                           ;eusart.c: 148: }
 24190  0069AE  D01A               	goto	l11925
 24191  0069B0                     l1136:
 24192                           
 24193                           ;eusart.c: 149: else
 24194                           ;eusart.c: 150: {
 24195                           ;eusart.c: 151: PIE1bits.TXIE = 0;
 24196  0069B0  989D               	bcf	3997,4,c	;volatile
 24197                           
 24198                           ;eusart.c: 152: eusartTxBuffer[eusartTxHead++] = txData;
 24199  0069B2  0100               	movlb	0	; () banked
 24200  0069B4  51DB               	movf	_eusartTxHead& (0+255),w,b
 24201  0069B6  0D01               	mullw	1
 24202  0069B8  0E40               	movlw	low _eusartTxBuffer
 24203  0069BA  24F3               	addwf	prodl,w,c
 24204  0069BC  6ED9               	movwf	fsr2l,c
 24205  0069BE  0E02               	movlw	high _eusartTxBuffer
 24206  0069C0  20F4               	addwfc	prodh,w,c
 24207  0069C2  6EDA               	movwf	fsr2h,c
 24208  0069C4  C060  FFDF         	movff	EUSART_Write@txData,indf2
 24209                           
 24210                           ; BSR set to: 0
 24211  0069C8  0100               	movlb	0	; () banked
 24212  0069CA  2BDB               	incf	_eusartTxHead& (0+255),f,b
 24213                           
 24214                           ; BSR set to: 0
 24215                           ;eusart.c: 153: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 24216  0069CC  0E3F               	movlw	63
 24217  0069CE  0100               	movlb	0	; () banked
 24218  0069D0  65DB               	cpfsgt	_eusartTxHead& (0+255),b
 24219  0069D2  D001               	goto	u10801
 24220  0069D4  D001               	goto	u10800
 24221  0069D6                     u10801:
 24222  0069D6  D004               	goto	l11923
 24223  0069D8                     u10800:
 24224                           
 24225                           ; BSR set to: 0
 24226                           ;eusart.c: 154: {
 24227                           ;eusart.c: 155: eusartTxHead = 0;
 24228  0069D8  0E00               	movlw	0
 24229  0069DA  0100               	movlb	0	; () banked
 24230  0069DC  6FDB               	movwf	_eusartTxHead& (0+255),b
 24231  0069DE  D000               	goto	l11923
 24232  0069E0                     l11923:
 24233                           
 24234                           ; BSR set to: 0
 24235                           ;eusart.c: 156: }
 24236                           ;eusart.c: 157: eusartTxBufferRemaining--;
 24237  0069E0  064F               	decf	_eusartTxBufferRemaining,f,c	;volatile
 24238  0069E2  D000               	goto	l11925
 24239  0069E4                     l11925:
 24240                           
 24241                           ;eusart.c: 158: }
 24242                           ;eusart.c: 159: PIE1bits.TXIE = 1;
 24243  0069E4  889D               	bsf	3997,4,c	;volatile
 24244  0069E6  0012               	return		;funcret
 24245  0069E8                     __end_of_EUSART_Write:
 24246                           	opt stack 0
 24247                           tblptru	equ	0xFF8
 24248                           tblptrh	equ	0xFF7
 24249                           tblptrl	equ	0xFF6
 24250                           tablat	equ	0xFF5
 24251                           prodh	equ	0xFF4
 24252                           prodl	equ	0xFF3
 24253                           intcon	equ	0xFF2
 24254                           intcon3	equ	0xFF0
 24255                           indf0	equ	0xFEF
 24256                           postinc0	equ	0xFEE
 24257                           fsr0h	equ	0xFEA
 24258                           fsr0l	equ	0xFE9
 24259                           wreg	equ	0xFE8
 24260                           indf1	equ	0xFE7
 24261                           postdec1	equ	0xFE5
 24262                           fsr1h	equ	0xFE2
 24263                           fsr1l	equ	0xFE1
 24264                           indf2	equ	0xFDF
 24265                           postinc2	equ	0xFDE
 24266                           fsr2h	equ	0xFDA
 24267                           fsr2l	equ	0xFD9
 24268                           status	equ	0xFD8
 24269                           
 24270 ;; *************** function _EUSART_Read *****************
 24271 ;; Defined at:
 24272 ;;		line 117 in file "../Includes/MccGenerated/eusart.c"
 24273 ;; Parameters:    Size  Location     Type
 24274 ;;		None
 24275 ;; Auto vars:     Size  Location     Type
 24276 ;;  readValue       1    0[BANK0 ] unsigned char 
 24277 ;; Return value:  Size  Location     Type
 24278 ;;                  1    wreg      unsigned char 
 24279 ;; Registers used:
 24280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24281 ;; Tracked objects:
 24282 ;;		On entry : 0/0
 24283 ;;		On exit  : 0/0
 24284 ;;		Unchanged: 0/0
 24285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24286 ;;      Params:         0       0       0       0       0       0       0       0       0
 24287 ;;      Locals:         0       1       0       0       0       0       0       0       0
 24288 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24289 ;;      Totals:         0       1       0       0       0       0       0       0       0
 24290 ;;Total ram usage:        1 bytes
 24291 ;; Hardware stack levels used:    1
 24292 ;; Hardware stack levels required when called:   11
 24293 ;; This function calls:
 24294 ;;		Nothing
 24295 ;; This function is called by:
 24296 ;;		_MOTEapp_getModuleResponse
 24297 ;;		_USBapp_DeviceCdcEmulatorHandler
 24298 ;; This function uses a non-reentrant model
 24299 ;;
 24300                           
 24301                           	psect	text83
 24302  006A94                     __ptext83:
 24303                           	opt stack 0
 24304  006A94                     _EUSART_Read:
 24305                           	opt stack 15
 24306                           
 24307                           ;eusart.c: 119: uint8_t readValue = 0;
 24308                           
 24309                           ;incstack = 0
 24310  006A94  0E00               	movlw	0
 24311  006A96  0100               	movlb	0	; () banked
 24312  006A98  6F60               	movwf	EUSART_Read@readValue& (0+255),b
 24313                           
 24314                           ;eusart.c: 121: while(0 == eusartRxCount)
 24315  006A9A  D002               	goto	l11929
 24316  006A9C                     l1127:
 24317                           
 24318                           ;eusart.c: 122: {
 24319                           ;eusart.c: 123: LATAbits.LATA7 = 1;
 24320  006A9C  8E89               	bsf	3977,7,c	;volatile
 24321  006A9E  D000               	goto	l11929
 24322  006AA0                     l11929:
 24323  006AA0  5057               	movf	_eusartRxCount,w,c	;volatile
 24324  006AA2  B4D8               	btfsc	status,2,c
 24325  006AA4  D001               	goto	u10811
 24326  006AA6  D001               	goto	u10810
 24327  006AA8                     u10811:
 24328  006AA8  D7F9               	goto	l1127
 24329  006AAA                     u10810:
 24330                           
 24331                           ;eusart.c: 124: }
 24332                           ;eusart.c: 126: PIE1bits.RCIE = 0;
 24333  006AAA  9A9D               	bcf	3997,5,c	;volatile
 24334                           
 24335                           ;eusart.c: 128: readValue = eusartRxBuffer[eusartRxTail++];
 24336  006AAC  0100               	movlb	0	; () banked
 24337  006AAE  51D8               	movf	_eusartRxTail& (0+255),w,b
 24338  006AB0  0D01               	mullw	1
 24339  006AB2  0E00               	movlw	low _eusartRxBuffer
 24340  006AB4  24F3               	addwf	prodl,w,c
 24341  006AB6  6ED9               	movwf	fsr2l,c
 24342  006AB8  0E02               	movlw	high _eusartRxBuffer
 24343  006ABA  20F4               	addwfc	prodh,w,c
 24344  006ABC  6EDA               	movwf	fsr2h,c
 24345  006ABE  50DF               	movf	indf2,w,c
 24346  006AC0  0100               	movlb	0	; () banked
 24347  006AC2  6F60               	movwf	EUSART_Read@readValue& (0+255),b
 24348                           
 24349                           ; BSR set to: 0
 24350  006AC4  0100               	movlb	0	; () banked
 24351  006AC6  2BD8               	incf	_eusartRxTail& (0+255),f,b
 24352                           
 24353                           ; BSR set to: 0
 24354                           ;eusart.c: 129: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 24355  006AC8  0E3F               	movlw	63
 24356  006ACA  0100               	movlb	0	; () banked
 24357  006ACC  65D8               	cpfsgt	_eusartRxTail& (0+255),b
 24358  006ACE  D001               	goto	u10821
 24359  006AD0  D001               	goto	u10820
 24360  006AD2                     u10821:
 24361  006AD2  D004               	goto	l11939
 24362  006AD4                     u10820:
 24363                           
 24364                           ; BSR set to: 0
 24365                           ;eusart.c: 130: {
 24366                           ;eusart.c: 131: eusartRxTail = 0;
 24367  006AD4  0E00               	movlw	0
 24368  006AD6  0100               	movlb	0	; () banked
 24369  006AD8  6FD8               	movwf	_eusartRxTail& (0+255),b
 24370  006ADA  D000               	goto	l11939
 24371  006ADC                     l11939:
 24372                           
 24373                           ; BSR set to: 0
 24374                           ;eusart.c: 132: }
 24375                           ;eusart.c: 133: eusartRxCount--;
 24376  006ADC  0657               	decf	_eusartRxCount,f,c	;volatile
 24377                           
 24378                           ; BSR set to: 0
 24379                           ;eusart.c: 134: PIE1bits.RCIE = 1;
 24380  006ADE  8A9D               	bsf	3997,5,c	;volatile
 24381                           
 24382                           ; BSR set to: 0
 24383                           ;eusart.c: 136: return readValue;
 24384  006AE0  0100               	movlb	0	; () banked
 24385  006AE2  5160               	movf	EUSART_Read@readValue& (0+255),w,b
 24386  006AE4  D000               	goto	l1130
 24387  006AE6                     l1130:
 24388                           
 24389                           ; BSR set to: 0
 24390  006AE6  0012               	return		;funcret
 24391  006AE8                     __end_of_EUSART_Read:
 24392                           	opt stack 0
 24393                           tblptru	equ	0xFF8
 24394                           tblptrh	equ	0xFF7
 24395                           tblptrl	equ	0xFF6
 24396                           tablat	equ	0xFF5
 24397                           prodh	equ	0xFF4
 24398                           prodl	equ	0xFF3
 24399                           intcon	equ	0xFF2
 24400                           intcon3	equ	0xFF0
 24401                           indf0	equ	0xFEF
 24402                           postinc0	equ	0xFEE
 24403                           fsr0h	equ	0xFEA
 24404                           fsr0l	equ	0xFE9
 24405                           wreg	equ	0xFE8
 24406                           indf1	equ	0xFE7
 24407                           postdec1	equ	0xFE5
 24408                           fsr1h	equ	0xFE2
 24409                           fsr1l	equ	0xFE1
 24410                           indf2	equ	0xFDF
 24411                           postinc2	equ	0xFDE
 24412                           fsr2h	equ	0xFDA
 24413                           fsr2l	equ	0xFD9
 24414                           status	equ	0xFD8
 24415                           
 24416 ;; *************** function _CDCTxService *****************
 24417 ;; Defined at:
 24418 ;;		line 783 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 24419 ;; Parameters:    Size  Location     Type
 24420 ;;		None
 24421 ;; Auto vars:     Size  Location     Type
 24422 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 24423 ;;  i               1   10[BANK0 ] unsigned char 
 24424 ;; Return value:  Size  Location     Type
 24425 ;;                  1    wreg      void 
 24426 ;; Registers used:
 24427 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24428 ;; Tracked objects:
 24429 ;;		On entry : 0/0
 24430 ;;		On exit  : 0/0
 24431 ;;		Unchanged: 0/0
 24432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24433 ;;      Params:         0       0       0       0       0       0       0       0       0
 24434 ;;      Locals:         0       4       0       0       0       0       0       0       0
 24435 ;;      Temps:          0       1       0       0       0       0       0       0       0
 24436 ;;      Totals:         0       5       0       0       0       0       0       0       0
 24437 ;;Total ram usage:        5 bytes
 24438 ;; Hardware stack levels used:    1
 24439 ;; Hardware stack levels required when called:   12
 24440 ;; This function calls:
 24441 ;;		_USBTransferOnePacket
 24442 ;; This function is called by:
 24443 ;;		_USBapp_DeviceCdcEmulatorHandler
 24444 ;; This function uses a non-reentrant model
 24445 ;;
 24446                           
 24447                           	psect	text84
 24448  0033CA                     __ptext84:
 24449                           	opt stack 0
 24450  0033CA                     _CDCTxService:
 24451                           	opt stack 16
 24452                           
 24453                           ;usb_device_cdc.c: 785: uint8_t byte_to_send;
 24454                           ;usb_device_cdc.c: 786: uint8_t i;
 24455                           ;usb_device_cdc.c: 788: {PIE3bits.USBIE = 0;};
 24456                           
 24457                           ; BSR set to: 0
 24458                           ;incstack = 0
 24459  0033CA  94A3               	bcf	4003,2,c	;volatile
 24460                           
 24461                           ;usb_device_cdc.c: 790: {};
 24462                           ;usb_device_cdc.c: 792: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 24463  0033CC  0100               	movlb	0	; () banked
 24464  0033CE  51BD               	movf	_CDCDataInHandle& (0+255),w,b
 24465  0033D0  0100               	movlb	0	; () banked
 24466  0033D2  11BE               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 24467  0033D4  B4D8               	btfsc	status,2,c
 24468  0033D6  D001               	goto	u12731
 24469  0033D8  D001               	goto	u12730
 24470  0033DA                     u12731:
 24471  0033DA  D014               	goto	l13375
 24472  0033DC                     u12730:
 24473                           
 24474                           ; BSR set to: 0
 24475  0033DC  C0BD  FFD9         	movff	_CDCDataInHandle,fsr2l
 24476  0033E0  C0BE  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 24477  0033E4  0100               	movlb	0	; () banked
 24478  0033E6  BEDF               	btfsc	indf2,7,c
 24479  0033E8  D001               	goto	u12741
 24480  0033EA  D004               	goto	u12740
 24481  0033EC                     u12741:
 24482  0033EC  0100               	movlb	0	; () banked
 24483  0033EE  6B67               	clrf	??_CDCTxService& (0+255),b
 24484  0033F0  2B67               	incf	??_CDCTxService& (0+255),f,b
 24485  0033F2  D002               	goto	u12748
 24486  0033F4                     u12740:
 24487  0033F4  0100               	movlb	0	; () banked
 24488  0033F6  6B67               	clrf	??_CDCTxService& (0+255),b
 24489  0033F8                     u12748:
 24490  0033F8  0100               	movlb	0	; () banked
 24491  0033FA  5167               	movf	??_CDCTxService& (0+255),w,b
 24492  0033FC  0100               	movlb	0	; () banked
 24493  0033FE  6F68               	movwf	_CDCTxService$5924& (0+255),b
 24494  003400  6B69               	clrf	(_CDCTxService$5924+1)& (0+255),b
 24495  003402  D006               	goto	l13377
 24496  003404                     l13375:
 24497                           
 24498                           ; BSR set to: 0
 24499  003404  0E00               	movlw	0
 24500  003406  0100               	movlb	0	; () banked
 24501  003408  6F69               	movwf	(_CDCTxService$5924+1)& (0+255),b
 24502  00340A  0E00               	movlw	0
 24503  00340C  6F68               	movwf	_CDCTxService$5924& (0+255),b
 24504  00340E  D000               	goto	l13377
 24505  003410                     l13377:
 24506                           
 24507                           ; BSR set to: 0
 24508  003410  0100               	movlb	0	; () banked
 24509  003412  5168               	movf	_CDCTxService$5924& (0+255),w,b
 24510  003414  0100               	movlb	0	; () banked
 24511  003416  1169               	iorwf	(_CDCTxService$5924+1)& (0+255),w,b
 24512  003418  B4D8               	btfsc	status,2,c
 24513  00341A  D001               	goto	u12751
 24514  00341C  D001               	goto	u12750
 24515  00341E                     u12751:
 24516  00341E  D002               	goto	l13381
 24517  003420                     u12750:
 24518                           
 24519                           ; BSR set to: 0
 24520                           ;usb_device_cdc.c: 793: {
 24521                           ;usb_device_cdc.c: 794: {PIE3bits.USBIE = 1;};
 24522  003420  84A3               	bsf	4003,2,c	;volatile
 24523                           
 24524                           ;usb_device_cdc.c: 795: return;
 24525  003422  D0B6               	goto	l2071
 24526  003424                     l13381:
 24527                           
 24528                           ; BSR set to: 0
 24529                           ;usb_device_cdc.c: 796: }
 24530                           ;usb_device_cdc.c: 803: if(cdc_trf_state == 3)
 24531  003424  0E03               	movlw	3
 24532  003426  1855               	xorwf	_cdc_trf_state,w,c
 24533  003428  A4D8               	btfss	status,2,c
 24534  00342A  D001               	goto	u12761
 24535  00342C  D001               	goto	u12760
 24536  00342E                     u12761:
 24537  00342E  D002               	goto	l2072
 24538  003430                     u12760:
 24539                           
 24540                           ; BSR set to: 0
 24541                           ;usb_device_cdc.c: 804: cdc_trf_state = 0;
 24542  003430  0E00               	movlw	0
 24543  003432  6E55               	movwf	_cdc_trf_state,c
 24544  003434                     l2072:
 24545                           
 24546                           ; BSR set to: 0
 24547                           ;usb_device_cdc.c: 809: if(cdc_trf_state == 0)
 24548  003434  5055               	movf	_cdc_trf_state,w,c
 24549  003436  A4D8               	btfss	status,2,c
 24550  003438  D001               	goto	u12771
 24551  00343A  D001               	goto	u12770
 24552  00343C                     u12771:
 24553  00343C  D002               	goto	l13387
 24554  00343E                     u12770:
 24555                           
 24556                           ; BSR set to: 0
 24557                           ;usb_device_cdc.c: 810: {
 24558                           ;usb_device_cdc.c: 811: {PIE3bits.USBIE = 1;};
 24559  00343E  84A3               	bsf	4003,2,c	;volatile
 24560                           
 24561                           ;usb_device_cdc.c: 812: return;
 24562  003440  D0A7               	goto	l2071
 24563  003442                     l13387:
 24564                           
 24565                           ; BSR set to: 0
 24566                           ;usb_device_cdc.c: 813: }
 24567                           ;usb_device_cdc.c: 818: if(cdc_trf_state == 2)
 24568  003442  0E02               	movlw	2
 24569  003444  1855               	xorwf	_cdc_trf_state,w,c
 24570  003446  A4D8               	btfss	status,2,c
 24571  003448  D001               	goto	u12781
 24572  00344A  D001               	goto	u12780
 24573  00344C                     u12781:
 24574  00344C  D016               	goto	l13393
 24575  00344E                     u12780:
 24576                           
 24577                           ; BSR set to: 0
 24578                           ;usb_device_cdc.c: 819: {
 24579                           ;usb_device_cdc.c: 820: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 24580  00344E  0E01               	movlw	1
 24581  003450  0100               	movlb	0	; () banked
 24582  003452  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 24583  003454  0E00               	movlw	0
 24584  003456  0100               	movlb	0	; () banked
 24585  003458  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 24586  00345A  0E00               	movlw	0
 24587  00345C  0100               	movlb	0	; () banked
 24588  00345E  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 24589  003460  0E00               	movlw	0
 24590  003462  0100               	movlb	0	; () banked
 24591  003464  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 24592  003466  0E02               	movlw	2
 24593  003468  ECFD  F023         	call	_USBTransferOnePacket
 24594  00346C  C060  F0BD         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 24595  003470  C061  F0BE         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 24596                           
 24597                           ;usb_device_cdc.c: 822: cdc_trf_state = 3;
 24598  003474  0E03               	movlw	3
 24599  003476  6E55               	movwf	_cdc_trf_state,c
 24600                           
 24601                           ;usb_device_cdc.c: 823: }
 24602  003478  D08A               	goto	l13437
 24603  00347A                     l13393:
 24604                           
 24605                           ;usb_device_cdc.c: 824: else if(cdc_trf_state == 1)
 24606  00347A  0455               	decf	_cdc_trf_state,w,c
 24607  00347C  A4D8               	btfss	status,2,c
 24608  00347E  D001               	goto	u12791
 24609  003480  D001               	goto	u12790
 24610  003482                     u12791:
 24611  003482  D085               	goto	l13437
 24612  003484                     u12790:
 24613                           
 24614                           ;usb_device_cdc.c: 825: {
 24615                           ;usb_device_cdc.c: 829: if(cdc_tx_len > sizeof(cdc_data_tx))
 24616  003484  0E40               	movlw	64
 24617  003486  0100               	movlb	0	; () banked
 24618  003488  65CF               	cpfsgt	_cdc_tx_len& (0+255),b
 24619  00348A  D001               	goto	u12801
 24620  00348C  D001               	goto	u12800
 24621  00348E                     u12801:
 24622  00348E  D004               	goto	l2077
 24623  003490                     u12800:
 24624                           
 24625                           ; BSR set to: 0
 24626                           ;usb_device_cdc.c: 830: byte_to_send = sizeof(cdc_data_tx);
 24627  003490  0E40               	movlw	64
 24628  003492  0100               	movlb	0	; () banked
 24629  003494  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 24630  003496  D003               	goto	l13399
 24631  003498                     l2077:
 24632                           
 24633                           ; BSR set to: 0
 24634                           ;usb_device_cdc.c: 831: else
 24635                           ;usb_device_cdc.c: 832: byte_to_send = cdc_tx_len;
 24636  003498  C0CF  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 24637  00349C  D000               	goto	l13399
 24638  00349E                     l13399:
 24639                           
 24640                           ; BSR set to: 0
 24641                           ;usb_device_cdc.c: 837: cdc_tx_len = cdc_tx_len - byte_to_send;
 24642  00349E  0100               	movlb	0	; () banked
 24643  0034A0  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 24644  0034A2  0800               	sublw	0
 24645  0034A4  0100               	movlb	0	; () banked
 24646  0034A6  25CF               	addwf	_cdc_tx_len& (0+255),w,b
 24647  0034A8  0100               	movlb	0	; () banked
 24648  0034AA  6FCF               	movwf	_cdc_tx_len& (0+255),b
 24649                           
 24650                           ;usb_device_cdc.c: 839: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 24651  0034AC  0E00               	movlw	0
 24652  0034AE  0101               	movlb	1	; () banked
 24653  0034B0  6F4E               	movwf	_pCDCDst& (0+255),b
 24654  0034B2  0E05               	movlw	5
 24655  0034B4  0101               	movlb	1	; () banked
 24656  0034B6  6F4F               	movwf	(_pCDCDst+1)& (0+255),b
 24657                           
 24658                           ; BSR set to: 1
 24659                           ;usb_device_cdc.c: 841: i = byte_to_send;
 24660  0034B8  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 24661                           
 24662                           ; BSR set to: 1
 24663                           ;usb_device_cdc.c: 842: if(cdc_mem_type == 0x00)
 24664  0034BC  0100               	movlb	0	; () banked
 24665  0034BE  51CE               	movf	_cdc_mem_type& (0+255),w,b
 24666  0034C0  A4D8               	btfss	status,2,c
 24667  0034C2  D001               	goto	u12811
 24668  0034C4  D001               	goto	u12810
 24669  0034C6                     u12811:
 24670  0034C6  D032               	goto	l13425
 24671  0034C8                     u12810:
 24672  0034C8  D014               	goto	l13415
 24673                           
 24674                           ; BSR set to: 0
 24675                           ;usb_device_cdc.c: 843: {
 24676                           ;usb_device_cdc.c: 844: while(i)
 24677  0034CA  D013               	goto	l13415
 24678  0034CC                     l13407:
 24679                           
 24680                           ; BSR set to: 0
 24681                           ;usb_device_cdc.c: 845: {
 24682                           ;usb_device_cdc.c: 846: *pCDCDst.bRam = *pCDCSrc.bRom;
 24683  0034CC  C151  FFD9         	movff	_pCDCSrc,fsr2l
 24684  0034D0  C152  FFDA         	movff	_pCDCSrc+1,fsr2h
 24685  0034D4  C14E  FFE1         	movff	_pCDCDst,fsr1l
 24686  0034D8  C14F  FFE2         	movff	_pCDCDst+1,fsr1h
 24687  0034DC  CFDF FFE7          	movff	indf2,indf1
 24688                           
 24689                           ; BSR set to: 0
 24690                           ;usb_device_cdc.c: 847: pCDCDst.bRam++;
 24691  0034E0  0101               	movlb	1	; () banked
 24692  0034E2  4B4E               	infsnz	_pCDCDst& (0+255),f,b
 24693  0034E4  2B4F               	incf	(_pCDCDst+1)& (0+255),f,b
 24694                           
 24695                           ; BSR set to: 1
 24696                           ;usb_device_cdc.c: 848: pCDCSrc.bRom++;
 24697  0034E6  0101               	movlb	1	; () banked
 24698  0034E8  4B51               	infsnz	_pCDCSrc& (0+255),f,b
 24699  0034EA  2B52               	incf	(_pCDCSrc+1)& (0+255),f,b
 24700                           
 24701                           ; BSR set to: 1
 24702                           ;usb_device_cdc.c: 849: i--;
 24703  0034EC  0100               	movlb	0	; () banked
 24704  0034EE  076A               	decf	CDCTxService@i& (0+255),f,b
 24705  0034F0  D000               	goto	l13415
 24706  0034F2                     l13415:
 24707                           
 24708                           ; BSR set to: 0
 24709  0034F2  0100               	movlb	0	; () banked
 24710  0034F4  516A               	movf	CDCTxService@i& (0+255),w,b
 24711  0034F6  0100               	movlb	0	; () banked
 24712  0034F8  A4D8               	btfss	status,2,c
 24713  0034FA  D001               	goto	u12821
 24714  0034FC  D001               	goto	u12820
 24715  0034FE                     u12821:
 24716  0034FE  D7E6               	goto	l13407
 24717  003500                     u12820:
 24718  003500  D01E               	goto	l13427
 24719                           
 24720                           ; BSR set to: 0
 24721                           ;usb_device_cdc.c: 850: }
 24722                           ;usb_device_cdc.c: 851: }
 24723  003502  D01D               	goto	l13427
 24724                           
 24725                           ; BSR set to: 0
 24726                           ;usb_device_cdc.c: 852: else
 24727                           ;usb_device_cdc.c: 853: {
 24728                           ;usb_device_cdc.c: 854: while(i)
 24729  003504  D013               	goto	l13425
 24730  003506                     l13417:
 24731                           
 24732                           ; BSR set to: 0
 24733                           ;usb_device_cdc.c: 855: {
 24734                           ;usb_device_cdc.c: 856: *pCDCDst.bRam = *pCDCSrc.bRam;
 24735  003506  C151  FFD9         	movff	_pCDCSrc,fsr2l
 24736  00350A  C152  FFDA         	movff	_pCDCSrc+1,fsr2h
 24737  00350E  C14E  FFE1         	movff	_pCDCDst,fsr1l
 24738  003512  C14F  FFE2         	movff	_pCDCDst+1,fsr1h
 24739  003516  CFDF FFE7          	movff	indf2,indf1
 24740                           
 24741                           ; BSR set to: 0
 24742                           ;usb_device_cdc.c: 857: pCDCDst.bRam++;
 24743  00351A  0101               	movlb	1	; () banked
 24744  00351C  4B4E               	infsnz	_pCDCDst& (0+255),f,b
 24745  00351E  2B4F               	incf	(_pCDCDst+1)& (0+255),f,b
 24746                           
 24747                           ; BSR set to: 1
 24748                           ;usb_device_cdc.c: 858: pCDCSrc.bRam++;
 24749  003520  0101               	movlb	1	; () banked
 24750  003522  4B51               	infsnz	_pCDCSrc& (0+255),f,b
 24751  003524  2B52               	incf	(_pCDCSrc+1)& (0+255),f,b
 24752                           
 24753                           ; BSR set to: 1
 24754                           ;usb_device_cdc.c: 859: i--;
 24755  003526  0100               	movlb	0	; () banked
 24756  003528  076A               	decf	CDCTxService@i& (0+255),f,b
 24757  00352A  D000               	goto	l13425
 24758  00352C                     l13425:
 24759                           
 24760                           ; BSR set to: 0
 24761  00352C  0100               	movlb	0	; () banked
 24762  00352E  516A               	movf	CDCTxService@i& (0+255),w,b
 24763  003530  0100               	movlb	0	; () banked
 24764  003532  A4D8               	btfss	status,2,c
 24765  003534  D001               	goto	u12831
 24766  003536  D001               	goto	u12830
 24767  003538                     u12831:
 24768  003538  D7E6               	goto	l13417
 24769  00353A                     u12830:
 24770  00353A  D001               	goto	l13427
 24771                           
 24772                           ; BSR set to: 0
 24773  00353C  D000               	goto	l13427
 24774  00353E                     l13427:
 24775                           
 24776                           ; BSR set to: 0
 24777                           ;usb_device_cdc.c: 860: }
 24778                           ;usb_device_cdc.c: 861: }
 24779                           ;usb_device_cdc.c: 867: if(cdc_tx_len == 0)
 24780  00353E  0100               	movlb	0	; () banked
 24781  003540  51CF               	movf	_cdc_tx_len& (0+255),w,b
 24782  003542  A4D8               	btfss	status,2,c
 24783  003544  D001               	goto	u12841
 24784  003546  D001               	goto	u12840
 24785  003548                     u12841:
 24786  003548  D00E               	goto	l13435
 24787  00354A                     u12840:
 24788                           
 24789                           ; BSR set to: 0
 24790                           ;usb_device_cdc.c: 868: {
 24791                           ;usb_device_cdc.c: 869: if(byte_to_send == 64)
 24792  00354A  0E40               	movlw	64
 24793  00354C  0100               	movlb	0	; () banked
 24794  00354E  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 24795  003550  A4D8               	btfss	status,2,c
 24796  003552  D001               	goto	u12851
 24797  003554  D001               	goto	u12850
 24798  003556                     u12851:
 24799  003556  D003               	goto	l13433
 24800  003558                     u12850:
 24801                           
 24802                           ; BSR set to: 0
 24803                           ;usb_device_cdc.c: 870: cdc_trf_state = 2;
 24804  003558  0E02               	movlw	2
 24805  00355A  6E55               	movwf	_cdc_trf_state,c
 24806  00355C  D004               	goto	l13435
 24807  00355E                     l13433:
 24808                           
 24809                           ; BSR set to: 0
 24810                           ;usb_device_cdc.c: 871: else
 24811                           ;usb_device_cdc.c: 872: cdc_trf_state = 3;
 24812  00355E  0E03               	movlw	3
 24813  003560  6E55               	movwf	_cdc_trf_state,c
 24814  003562  D001               	goto	l13435
 24815                           
 24816                           ; BSR set to: 0
 24817  003564  D000               	goto	l13435
 24818  003566                     l13435:
 24819                           
 24820                           ; BSR set to: 0
 24821                           ;usb_device_cdc.c: 873: }
 24822                           ;usb_device_cdc.c: 874: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 24823  003566  0E01               	movlw	1
 24824  003568  0100               	movlb	0	; () banked
 24825  00356A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 24826  00356C  0E00               	movlw	0
 24827  00356E  0100               	movlb	0	; () banked
 24828  003570  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 24829  003572  0E05               	movlw	5
 24830  003574  0100               	movlb	0	; () banked
 24831  003576  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 24832  003578  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 24833  00357C  0E02               	movlw	2
 24834  00357E  ECFD  F023         	call	_USBTransferOnePacket
 24835  003582  C060  F0BD         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 24836  003586  C061  F0BE         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 24837  00358A  D001               	goto	l13437
 24838  00358C  D000               	goto	l13437
 24839  00358E                     l13437:
 24840                           
 24841                           ;usb_device_cdc.c: 876: }
 24842                           ;usb_device_cdc.c: 878: {PIE3bits.USBIE = 1;};
 24843  00358E  84A3               	bsf	4003,2,c	;volatile
 24844  003590                     l2071:
 24845  003590  0012               	return		;funcret
 24846  003592                     __end_of_CDCTxService:
 24847                           	opt stack 0
 24848                           tblptru	equ	0xFF8
 24849                           tblptrh	equ	0xFF7
 24850                           tblptrl	equ	0xFF6
 24851                           tablat	equ	0xFF5
 24852                           prodh	equ	0xFF4
 24853                           prodl	equ	0xFF3
 24854                           intcon	equ	0xFF2
 24855                           intcon3	equ	0xFF0
 24856                           indf0	equ	0xFEF
 24857                           postinc0	equ	0xFEE
 24858                           fsr0h	equ	0xFEA
 24859                           fsr0l	equ	0xFE9
 24860                           wreg	equ	0xFE8
 24861                           indf1	equ	0xFE7
 24862                           postdec1	equ	0xFE5
 24863                           fsr1h	equ	0xFE2
 24864                           fsr1l	equ	0xFE1
 24865                           indf2	equ	0xFDF
 24866                           postinc2	equ	0xFDE
 24867                           fsr2h	equ	0xFDA
 24868                           fsr2l	equ	0xFD9
 24869                           status	equ	0xFD8
 24870                           
 24871 ;; *************** function _USBTransferOnePacket *****************
 24872 ;; Defined at:
 24873 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 24874 ;; Parameters:    Size  Location     Type
 24875 ;;  ep              1    wreg     unsigned char 
 24876 ;;  dir             1    0[BANK0 ] unsigned char 
 24877 ;;  data            2    1[BANK0 ] PTR unsigned char 
 24878 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 24879 ;;  len             1    3[BANK0 ] unsigned char 
 24880 ;; Auto vars:     Size  Location     Type
 24881 ;;  ep              1    4[BANK0 ] unsigned char 
 24882 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 24883 ;;		 -> BDT(48), NULL(0), 
 24884 ;; Return value:  Size  Location     Type
 24885 ;;                  2    0[BANK0 ] PTR void 
 24886 ;; Registers used:
 24887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24888 ;; Tracked objects:
 24889 ;;		On entry : 0/0
 24890 ;;		On exit  : 0/0
 24891 ;;		Unchanged: 0/0
 24892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24893 ;;      Params:         0       4       0       0       0       0       0       0       0
 24894 ;;      Locals:         0       3       0       0       0       0       0       0       0
 24895 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24896 ;;      Totals:         0       7       0       0       0       0       0       0       0
 24897 ;;Total ram usage:        7 bytes
 24898 ;; Hardware stack levels used:    1
 24899 ;; Hardware stack levels required when called:   11
 24900 ;; This function calls:
 24901 ;;		Nothing
 24902 ;; This function is called by:
 24903 ;;		_getsUSBUSART
 24904 ;;		_CDCTxService
 24905 ;;		_USBCDCEventHandler
 24906 ;; This function uses a non-reentrant model
 24907 ;;
 24908                           
 24909                           	psect	text85
 24910  0047FA                     __ptext85:
 24911                           	opt stack 0
 24912  0047FA                     _USBTransferOnePacket:
 24913                           	opt stack 16
 24914                           
 24915                           ;incstack = 0
 24916                           ;USBTransferOnePacket@ep stored from wreg
 24917  0047FA  0100               	movlb	0	; () banked
 24918  0047FC  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 24919                           
 24920                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 24921                           ;usb_device.c: 762: if(dir != 0)
 24922  0047FE  0100               	movlb	0	; () banked
 24923  004800  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 24924  004802  0100               	movlb	0	; () banked
 24925  004804  B4D8               	btfsc	status,2,c
 24926  004806  D001               	goto	u11121
 24927  004808  D001               	goto	u11120
 24928  00480A                     u11121:
 24929  00480A  D00E               	goto	l12225
 24930  00480C                     u11120:
 24931                           
 24932                           ; BSR set to: 0
 24933                           ;usb_device.c: 763: {
 24934                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 24935  00480C  0100               	movlb	0	; () banked
 24936  00480E  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 24937  004810  0D02               	mullw	2
 24938  004812  0E3C               	movlw	low _pBDTEntryIn
 24939  004814  24F3               	addwf	prodl,w,c
 24940  004816  6ED9               	movwf	fsr2l,c
 24941  004818  0E00               	movlw	high _pBDTEntryIn
 24942  00481A  20F4               	addwfc	prodh,w,c
 24943  00481C  6EDA               	movwf	fsr2h,c
 24944  00481E  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 24945  004822  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 24946                           
 24947                           ;usb_device.c: 766: }
 24948  004826  D00E               	goto	l12227
 24949  004828                     l12225:
 24950                           
 24951                           ; BSR set to: 0
 24952                           ;usb_device.c: 767: else
 24953                           ;usb_device.c: 768: {
 24954                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 24955  004828  0100               	movlb	0	; () banked
 24956  00482A  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 24957  00482C  0D02               	mullw	2
 24958  00482E  0E40               	movlw	low _pBDTEntryOut
 24959  004830  24F3               	addwf	prodl,w,c
 24960  004832  6ED9               	movwf	fsr2l,c
 24961  004834  0E01               	movlw	high _pBDTEntryOut
 24962  004836  20F4               	addwfc	prodh,w,c
 24963  004838  6EDA               	movwf	fsr2h,c
 24964  00483A  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 24965  00483E  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 24966  004842  D000               	goto	l12227
 24967  004844                     l12227:
 24968                           
 24969                           ; BSR set to: 0
 24970                           ;usb_device.c: 771: }
 24971                           ;usb_device.c: 775: if(handle == 0)
 24972  004844  0100               	movlb	0	; () banked
 24973  004846  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 24974  004848  0100               	movlb	0	; () banked
 24975  00484A  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 24976  00484C  A4D8               	btfss	status,2,c
 24977  00484E  D001               	goto	u11131
 24978  004850  D001               	goto	u11130
 24979  004852                     u11131:
 24980  004852  D008               	goto	l12233
 24981  004854                     u11130:
 24982                           
 24983                           ; BSR set to: 0
 24984                           ;usb_device.c: 776: {
 24985                           ;usb_device.c: 777: return 0;
 24986  004854  0E00               	movlw	0
 24987  004856  0100               	movlb	0	; () banked
 24988  004858  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 24989  00485A  0E00               	movlw	0
 24990  00485C  0100               	movlb	0	; () banked
 24991  00485E  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 24992  004860  D04B               	goto	l1754
 24993                           
 24994                           ; BSR set to: 0
 24995  004862  D04A               	goto	l1754
 24996  004864                     l12233:
 24997                           
 24998                           ; BSR set to: 0
 24999                           ;usb_device.c: 778: }
 25000                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 25001  004864  0100               	movlb	0	; () banked
 25002  004866  EE20 F002          	lfsr	2,2
 25003  00486A  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 25004  00486C  26D9               	addwf	fsr2l,f,c
 25005  00486E  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 25006  004870  22DA               	addwfc	fsr2h,f,c
 25007  004872  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 25008  004876  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 25009                           
 25010                           ;usb_device.c: 781: handle->CNT = len;
 25011  00487A  0100               	movlb	0	; () banked
 25012  00487C  EE20 F001          	lfsr	2,1
 25013  004880  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 25014  004882  26D9               	addwf	fsr2l,f,c
 25015  004884  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 25016  004886  22DA               	addwfc	fsr2h,f,c
 25017  004888  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 25018                           
 25019                           ; BSR set to: 0
 25020                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 25021  00488C  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 25022  004890  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 25023  004894  0E40               	movlw	64
 25024  004896  16DF               	andwf	indf2,f,c
 25025                           
 25026                           ; BSR set to: 0
 25027                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 25028  004898  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 25029  00489C  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 25030  0048A0  0E00               	movlw	0
 25031  0048A2  86DB               	bsf	plusw2,3,c
 25032                           
 25033                           ; BSR set to: 0
 25034                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 25035  0048A4  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 25036  0048A8  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 25037  0048AC  0E00               	movlw	0
 25038  0048AE  8EDB               	bsf	plusw2,7,c
 25039                           
 25040                           ; BSR set to: 0
 25041                           ;usb_device.c: 787: if(dir != 0)
 25042  0048B0  0100               	movlb	0	; () banked
 25043  0048B2  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 25044  0048B4  0100               	movlb	0	; () banked
 25045  0048B6  B4D8               	btfsc	status,2,c
 25046  0048B8  D001               	goto	u11141
 25047  0048BA  D001               	goto	u11140
 25048  0048BC                     u11141:
 25049  0048BC  D00C               	goto	l12245
 25050  0048BE                     u11140:
 25051                           
 25052                           ; BSR set to: 0
 25053                           ;usb_device.c: 788: {
 25054                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 25055  0048BE  0100               	movlb	0	; () banked
 25056  0048C0  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 25057  0048C2  0D02               	mullw	2
 25058  0048C4  0E3C               	movlw	low _pBDTEntryIn
 25059  0048C6  24F3               	addwf	prodl,w,c
 25060  0048C8  6ED9               	movwf	fsr2l,c
 25061  0048CA  0E00               	movlw	high _pBDTEntryIn
 25062  0048CC  20F4               	addwfc	prodh,w,c
 25063  0048CE  6EDA               	movwf	fsr2h,c
 25064  0048D0  0E04               	movlw	4
 25065  0048D2  1ADF               	xorwf	indf2,f,c
 25066                           
 25067                           ;usb_device.c: 791: }
 25068  0048D4  D00C               	goto	l12247
 25069  0048D6                     l12245:
 25070                           
 25071                           ; BSR set to: 0
 25072                           ;usb_device.c: 792: else
 25073                           ;usb_device.c: 793: {
 25074                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 25075  0048D6  0100               	movlb	0	; () banked
 25076  0048D8  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 25077  0048DA  0D02               	mullw	2
 25078  0048DC  0E40               	movlw	low _pBDTEntryOut
 25079  0048DE  24F3               	addwf	prodl,w,c
 25080  0048E0  6ED9               	movwf	fsr2l,c
 25081  0048E2  0E01               	movlw	high _pBDTEntryOut
 25082  0048E4  20F4               	addwfc	prodh,w,c
 25083  0048E6  6EDA               	movwf	fsr2h,c
 25084  0048E8  0E04               	movlw	4
 25085  0048EA  1ADF               	xorwf	indf2,f,c
 25086  0048EC  D000               	goto	l12247
 25087  0048EE                     l12247:
 25088                           
 25089                           ; BSR set to: 0
 25090                           ;usb_device.c: 796: }
 25091                           ;usb_device.c: 797: return (void*)handle;
 25092  0048EE  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 25093  0048F2  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 25094  0048F6  D000               	goto	l1754
 25095  0048F8                     l1754:
 25096                           
 25097                           ; BSR set to: 0
 25098  0048F8  0012               	return		;funcret
 25099  0048FA                     __end_of_USBTransferOnePacket:
 25100                           	opt stack 0
 25101                           tblptru	equ	0xFF8
 25102                           tblptrh	equ	0xFF7
 25103                           tblptrl	equ	0xFF6
 25104                           tablat	equ	0xFF5
 25105                           prodh	equ	0xFF4
 25106                           prodl	equ	0xFF3
 25107                           intcon	equ	0xFF2
 25108                           intcon3	equ	0xFF0
 25109                           indf0	equ	0xFEF
 25110                           postinc0	equ	0xFEE
 25111                           fsr0h	equ	0xFEA
 25112                           fsr0l	equ	0xFE9
 25113                           wreg	equ	0xFE8
 25114                           indf1	equ	0xFE7
 25115                           postdec1	equ	0xFE5
 25116                           fsr1h	equ	0xFE2
 25117                           fsr1l	equ	0xFE1
 25118                           indf2	equ	0xFDF
 25119                           postinc2	equ	0xFDE
 25120                           postdec2	equ	0xFDD
 25121                           plusw2	equ	0xFDB
 25122                           fsr2h	equ	0xFDA
 25123                           fsr2l	equ	0xFD9
 25124                           status	equ	0xFD8
 25125                           
 25126 ;; *************** function _USBDeviceInit *****************
 25127 ;; Defined at:
 25128 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 25129 ;; Parameters:    Size  Location     Type
 25130 ;;		None
 25131 ;; Auto vars:     Size  Location     Type
 25132 ;;  i               1    8[BANK0 ] unsigned char 
 25133 ;; Return value:  Size  Location     Type
 25134 ;;                  1    wreg      void 
 25135 ;; Registers used:
 25136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25137 ;; Tracked objects:
 25138 ;;		On entry : 0/0
 25139 ;;		On exit  : 0/0
 25140 ;;		Unchanged: 0/0
 25141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25142 ;;      Params:         0       0       0       0       0       0       0       0       0
 25143 ;;      Locals:         0       1       0       0       0       0       0       0       0
 25144 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25145 ;;      Totals:         0       1       0       0       0       0       0       0       0
 25146 ;;Total ram usage:        1 bytes
 25147 ;; Hardware stack levels used:    1
 25148 ;; Hardware stack levels required when called:   12
 25149 ;; This function calls:
 25150 ;;		_memset
 25151 ;; This function is called by:
 25152 ;;		_main
 25153 ;; This function uses a non-reentrant model
 25154 ;;
 25155                           
 25156                           	psect	text86
 25157  003716                     __ptext86:
 25158                           	opt stack 0
 25159  003716                     _USBDeviceInit:
 25160                           	opt stack 18
 25161                           
 25162                           ;usb_device.c: 239: uint8_t i;
 25163                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 25164                           
 25165                           ; BSR set to: 0
 25166                           ;incstack = 0
 25167  003716  94A3               	bcf	4003,2,c	;volatile
 25168                           
 25169                           ;usb_device.c: 244: {UEIR = 0;};
 25170  003718  0E00               	movlw	0
 25171  00371A  6E67               	movwf	3943,c	;volatile
 25172                           
 25173                           ;usb_device.c: 247: {UIR = 0;};
 25174  00371C  0E00               	movlw	0
 25175  00371E  6E65               	movwf	3941,c	;volatile
 25176                           
 25177                           ;usb_device.c: 250: UEP0 = 0;
 25178  003720  0E00               	movlw	0
 25179  003722  6E6A               	movwf	3946,c	;volatile
 25180                           
 25181                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 25182  003724  0E6B               	movlw	107
 25183  003726  0100               	movlb	0	; () banked
 25184  003728  6F60               	movwf	memset@p1& (0+255),b
 25185  00372A  0E0F               	movlw	15
 25186  00372C  0100               	movlb	0	; () banked
 25187  00372E  6F61               	movwf	(memset@p1+1)& (0+255),b
 25188  003730  0E00               	movlw	0
 25189  003732  0100               	movlb	0	; () banked
 25190  003734  6F63               	movwf	(memset@c+1)& (0+255),b
 25191  003736  0E00               	movlw	0
 25192  003738  6F62               	movwf	memset@c& (0+255),b
 25193  00373A  0E00               	movlw	0
 25194  00373C  0100               	movlb	0	; () banked
 25195  00373E  6F65               	movwf	(memset@n+1)& (0+255),b
 25196  003740  0E02               	movlw	2
 25197  003742  6F64               	movwf	memset@n& (0+255),b
 25198  003744  EC2C  F037         	call	_memset	;wreg free
 25199                           
 25200                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 25201  003748  0E16               	movlw	22
 25202  00374A  6E62               	movwf	3938,c	;volatile
 25203  00374C  0E9F               	movlw	159
 25204  00374E  6E66               	movwf	3942,c	;volatile
 25205  003750  0E7B               	movlw	123
 25206  003752  6E64               	movwf	3940,c	;volatile
 25207                           
 25208                           ;usb_device.c: 257: ;
 25209                           ;usb_device.c: 260: ;
 25210                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 25211  003754  0E00               	movlw	0
 25212  003756  0100               	movlb	0	; () banked
 25213  003758  6F68               	movwf	USBDeviceInit@i& (0+255),b
 25214                           
 25215                           ; BSR set to: 0
 25216  00375A  0E0B               	movlw	11
 25217  00375C  0100               	movlb	0	; () banked
 25218  00375E  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 25219  003760  D001               	goto	u14071
 25220  003762  D001               	goto	u14070
 25221  003764                     u14071:
 25222  003764  D002               	goto	l14565
 25223  003766                     u14070:
 25224  003766  D016               	goto	l1712
 25225                           
 25226                           ; BSR set to: 0
 25227  003768  D015               	goto	l1712
 25228  00376A                     l14565:
 25229                           
 25230                           ; BSR set to: 0
 25231                           ;usb_device.c: 264: {
 25232                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 25233  00376A  0100               	movlb	0	; () banked
 25234  00376C  5168               	movf	USBDeviceInit@i& (0+255),w,b
 25235  00376E  0D04               	mullw	4
 25236  003770  0E00               	movlw	0
 25237  003772  24F3               	addwf	prodl,w,c
 25238  003774  6ED9               	movwf	fsr2l,c
 25239  003776  0E04               	movlw	4
 25240  003778  20F4               	addwfc	prodh,w,c
 25241  00377A  6EDA               	movwf	fsr2h,c
 25242  00377C  6ADE               	clrf	postinc2,c
 25243  00377E  6ADE               	clrf	postinc2,c
 25244  003780  6ADE               	clrf	postinc2,c
 25245  003782  6ADD               	clrf	postdec2,c
 25246                           
 25247                           ; BSR set to: 0
 25248  003784  0100               	movlb	0	; () banked
 25249  003786  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 25250                           
 25251                           ; BSR set to: 0
 25252  003788  0E0B               	movlw	11
 25253  00378A  0100               	movlb	0	; () banked
 25254  00378C  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 25255  00378E  D001               	goto	u14081
 25256  003790  D001               	goto	u14080
 25257  003792                     u14081:
 25258  003792  D7EB               	goto	l14565
 25259  003794                     u14080:
 25260  003794                     l1712:
 25261                           
 25262                           ; BSR set to: 0
 25263                           ;usb_device.c: 266: }
 25264                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 25265  003794  8C60               	bsf	3936,6,c	;volatile
 25266                           
 25267                           ; BSR set to: 0
 25268                           ;usb_device.c: 272: UADDR = 0x00;
 25269  003796  0E00               	movlw	0
 25270  003798  6E63               	movwf	3939,c	;volatile
 25271                           
 25272                           ; BSR set to: 0
 25273                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 25274  00379A  9860               	bcf	3936,4,c	;volatile
 25275                           
 25276                           ; BSR set to: 0
 25277                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 25278  00379C  9C60               	bcf	3936,6,c	;volatile
 25279                           
 25280                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 25281  00379E  D00A               	goto	l14585
 25282  0037A0                     l14577:
 25283                           
 25284                           ;usb_device.c: 282: {
 25285                           ;usb_device.c: 283: (UIR &= 0xF7);
 25286  0037A0  9665               	bcf	3941,3,c	;volatile
 25287                           
 25288                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 25289  0037A2  0E00               	movlw	0
 25290  0037A4  6E39               	movwf	_inPipes+3,c	;volatile
 25291                           
 25292                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 25293  0037A6  0E00               	movlw	0
 25294  0037A8  6E31               	movwf	_outPipes+3,c	;volatile
 25295                           
 25296                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 25297  0037AA  0E00               	movlw	0
 25298  0037AC  6E33               	movwf	_outPipes+5,c	;volatile
 25299  0037AE  0E00               	movlw	0
 25300  0037B0  6E32               	movwf	_outPipes+4,c	;volatile
 25301  0037B2  D000               	goto	l14585
 25302  0037B4                     l14585:
 25303  0037B4  B665               	btfsc	3941,3,c	;volatile
 25304  0037B6  D001               	goto	u14091
 25305  0037B8  D001               	goto	u14090
 25306  0037BA                     u14091:
 25307  0037BA  D7F2               	goto	l14577
 25308  0037BC                     u14090:
 25309  0037BC  D000               	goto	l14587
 25310  0037BE                     l14587:
 25311                           
 25312                           ;usb_device.c: 288: }
 25313                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 25314  0037BE  0E01               	movlw	1
 25315  0037C0  0100               	movlb	0	; () banked
 25316  0037C2  6FD4               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 25317                           
 25318                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 25319  0037C4  0E01               	movlw	1
 25320  0037C6  0100               	movlb	0	; () banked
 25321  0037C8  6FD3               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 25322                           
 25323                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 25324  0037CA  0E00               	movlw	0
 25325  0037CC  0100               	movlb	0	; () banked
 25326  0037CE  6FD2               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 25327                           
 25328                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 25329  0037D0  0E00               	movlw	0
 25330  0037D2  0100               	movlb	0	; () banked
 25331  0037D4  6FD1               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 25332                           
 25333                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 25334  0037D6  0E00               	movlw	0
 25335  0037D8  0100               	movlb	0	; () banked
 25336  0037DA  6FD6               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25337                           
 25338                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 25339  0037DC  0E00               	movlw	0
 25340  0037DE  0100               	movlb	0	; () banked
 25341  0037E0  6F68               	movwf	USBDeviceInit@i& (0+255),b
 25342                           
 25343                           ; BSR set to: 0
 25344  0037E2  0E02               	movlw	2
 25345  0037E4  0100               	movlb	0	; () banked
 25346  0037E6  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 25347  0037E8  D001               	goto	u14101
 25348  0037EA  D001               	goto	u14100
 25349  0037EC                     u14101:
 25350  0037EC  D002               	goto	l14593
 25351  0037EE                     u14100:
 25352  0037EE  D03A               	goto	l14599
 25353                           
 25354                           ; BSR set to: 0
 25355  0037F0  D039               	goto	l14599
 25356  0037F2                     l14593:
 25357                           
 25358                           ; BSR set to: 0
 25359                           ;usb_device.c: 302: {
 25360                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 25361  0037F2  0100               	movlb	0	; () banked
 25362  0037F4  5168               	movf	USBDeviceInit@i& (0+255),w,b
 25363  0037F6  0D02               	mullw	2
 25364  0037F8  0E3C               	movlw	low _pBDTEntryIn
 25365  0037FA  24F3               	addwf	prodl,w,c
 25366  0037FC  6ED9               	movwf	fsr2l,c
 25367  0037FE  0E00               	movlw	high _pBDTEntryIn
 25368  003800  20F4               	addwfc	prodh,w,c
 25369  003802  6EDA               	movwf	fsr2h,c
 25370  003804  0E00               	movlw	0
 25371  003806  6EDE               	movwf	postinc2,c
 25372  003808  0E00               	movlw	0
 25373  00380A  6EDD               	movwf	postdec2,c
 25374                           
 25375                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 25376  00380C  0100               	movlb	0	; () banked
 25377  00380E  5168               	movf	USBDeviceInit@i& (0+255),w,b
 25378  003810  0D02               	mullw	2
 25379  003812  0E40               	movlw	low _pBDTEntryOut
 25380  003814  24F3               	addwf	prodl,w,c
 25381  003816  6ED9               	movwf	fsr2l,c
 25382  003818  0E01               	movlw	high _pBDTEntryOut
 25383  00381A  20F4               	addwfc	prodh,w,c
 25384  00381C  6EDA               	movwf	fsr2h,c
 25385  00381E  0E00               	movlw	0
 25386  003820  6EDE               	movwf	postinc2,c
 25387  003822  0E00               	movlw	0
 25388  003824  6EDD               	movwf	postdec2,c
 25389                           
 25390                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 25391  003826  0100               	movlb	0	; () banked
 25392  003828  5168               	movf	USBDeviceInit@i& (0+255),w,b
 25393  00382A  0D01               	mullw	1
 25394  00382C  0EBA               	movlw	low _ep_data_in
 25395  00382E  24F3               	addwf	prodl,w,c
 25396  003830  6ED9               	movwf	fsr2l,c
 25397  003832  0E00               	movlw	high _ep_data_in
 25398  003834  20F4               	addwfc	prodh,w,c
 25399  003836  6EDA               	movwf	fsr2h,c
 25400  003838  0E00               	movlw	0
 25401  00383A  6EDF               	movwf	indf2,c
 25402                           
 25403                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 25404  00383C  0100               	movlb	0	; () banked
 25405  00383E  5168               	movf	USBDeviceInit@i& (0+255),w,b
 25406  003840  0D01               	mullw	1
 25407  003842  0EB7               	movlw	low _ep_data_out
 25408  003844  24F3               	addwf	prodl,w,c
 25409  003846  6ED9               	movwf	fsr2l,c
 25410  003848  0E00               	movlw	high _ep_data_out
 25411  00384A  20F4               	addwfc	prodh,w,c
 25412  00384C  6EDA               	movwf	fsr2h,c
 25413  00384E  0E00               	movlw	0
 25414  003850  6EDF               	movwf	indf2,c
 25415                           
 25416                           ; BSR set to: 0
 25417  003852  0100               	movlb	0	; () banked
 25418  003854  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 25419                           
 25420                           ; BSR set to: 0
 25421  003856  0E02               	movlw	2
 25422  003858  0100               	movlb	0	; () banked
 25423  00385A  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 25424  00385C  D001               	goto	u14111
 25425  00385E  D001               	goto	u14110
 25426  003860                     u14111:
 25427  003860  D7C8               	goto	l14593
 25428  003862                     u14110:
 25429  003862  D000               	goto	l14599
 25430  003864                     l14599:
 25431                           
 25432                           ; BSR set to: 0
 25433                           ;usb_device.c: 307: }
 25434                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 25435  003864  0E08               	movlw	8
 25436  003866  6E3C               	movwf	_pBDTEntryIn,c
 25437  003868  0E04               	movlw	4
 25438  00386A  6E3D               	movwf	_pBDTEntryIn+1,c
 25439                           
 25440                           ; BSR set to: 0
 25441                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 25442  00386C  0E16               	movlw	22
 25443  00386E  6E6A               	movwf	3946,c	;volatile
 25444                           
 25445                           ; BSR set to: 0
 25446                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 25447  003870  0E04               	movlw	4
 25448  003872  0104               	movlb	4	; () banked
 25449  003874  6F03               	movwf	3,b	;volatile
 25450  003876  0E30               	movlw	48
 25451  003878  6F02               	movwf	2,b	;volatile
 25452                           
 25453                           ; BSR set to: 4
 25454                           ;usb_device.c: 315: BDT[0].CNT = 8;
 25455  00387A  0E08               	movlw	8
 25456  00387C  0104               	movlb	4	; () banked
 25457  00387E  6F01               	movwf	1,b	;volatile
 25458                           
 25459                           ; BSR set to: 4
 25460                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 25461  003880  0E04               	movlw	4
 25462  003882  0104               	movlb	4	; () banked
 25463  003884  6F00               	movwf	0,b	;volatile
 25464                           
 25465                           ; BSR set to: 4
 25466                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 25467  003886  0104               	movlb	4	; () banked
 25468  003888  8F00               	bsf	0,7,b	;volatile
 25469                           
 25470                           ; BSR set to: 4
 25471                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 25472  00388A  0E00               	movlw	0
 25473  00388C  6E59               	movwf	_USBActiveConfiguration,c	;volatile
 25474                           
 25475                           ; BSR set to: 4
 25476                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 25477  00388E  0E00               	movlw	0
 25478  003890  0100               	movlb	0	; () banked
 25479  003892  6FDE               	movwf	_USBDeviceState& (0+255),b	;volatile
 25480                           
 25481                           ; BSR set to: 0
 25482  003894  0012               	return		;funcret
 25483  003896                     __end_of_USBDeviceInit:
 25484                           	opt stack 0
 25485                           tblptru	equ	0xFF8
 25486                           tblptrh	equ	0xFF7
 25487                           tblptrl	equ	0xFF6
 25488                           tablat	equ	0xFF5
 25489                           prodh	equ	0xFF4
 25490                           prodl	equ	0xFF3
 25491                           intcon	equ	0xFF2
 25492                           intcon3	equ	0xFF0
 25493                           indf0	equ	0xFEF
 25494                           postinc0	equ	0xFEE
 25495                           fsr0h	equ	0xFEA
 25496                           fsr0l	equ	0xFE9
 25497                           wreg	equ	0xFE8
 25498                           indf1	equ	0xFE7
 25499                           postdec1	equ	0xFE5
 25500                           fsr1h	equ	0xFE2
 25501                           fsr1l	equ	0xFE1
 25502                           indf2	equ	0xFDF
 25503                           postinc2	equ	0xFDE
 25504                           postdec2	equ	0xFDD
 25505                           plusw2	equ	0xFDB
 25506                           fsr2h	equ	0xFDA
 25507                           fsr2l	equ	0xFD9
 25508                           status	equ	0xFD8
 25509                           
 25510 ;; *************** function _memset *****************
 25511 ;; Defined at:
 25512 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memset.c"
 25513 ;; Parameters:    Size  Location     Type
 25514 ;;  p1              2    0[BANK0 ] PTR void 
 25515 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 25516 ;;  c               2    2[BANK0 ] int 
 25517 ;;  n               2    4[BANK0 ] unsigned int 
 25518 ;; Auto vars:     Size  Location     Type
 25519 ;;  p               2    6[BANK0 ] PTR unsigned char 
 25520 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 25521 ;; Return value:  Size  Location     Type
 25522 ;;                  2    0[BANK0 ] PTR void 
 25523 ;; Registers used:
 25524 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25525 ;; Tracked objects:
 25526 ;;		On entry : 0/0
 25527 ;;		On exit  : 0/0
 25528 ;;		Unchanged: 0/0
 25529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25530 ;;      Params:         0       6       0       0       0       0       0       0       0
 25531 ;;      Locals:         0       2       0       0       0       0       0       0       0
 25532 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25533 ;;      Totals:         0       8       0       0       0       0       0       0       0
 25534 ;;Total ram usage:        8 bytes
 25535 ;; Hardware stack levels used:    1
 25536 ;; Hardware stack levels required when called:   11
 25537 ;; This function calls:
 25538 ;;		Nothing
 25539 ;; This function is called by:
 25540 ;;		_USBDeviceInit
 25541 ;; This function uses a non-reentrant model
 25542 ;;
 25543                           
 25544                           	psect	text87
 25545  006E58                     __ptext87:
 25546                           	opt stack 0
 25547  006E58                     _memset:
 25548                           	opt stack 18
 25549                           
 25550                           ; BSR set to: 0
 25551                           ;incstack = 0
 25552  006E58  C060  F066         	movff	memset@p1,memset@p
 25553  006E5C  C061  F067         	movff	memset@p1+1,memset@p+1
 25554  006E60  D00A               	goto	l14531
 25555  006E62                     l14527:
 25556  006E62  C066  FFD9         	movff	memset@p,fsr2l
 25557  006E66  C067  FFDA         	movff	memset@p+1,fsr2h
 25558  006E6A  C062  FFDF         	movff	memset@c,indf2
 25559  006E6E  0100               	movlb	0	; () banked
 25560  006E70  4B66               	infsnz	memset@p& (0+255),f,b
 25561  006E72  2B67               	incf	(memset@p+1)& (0+255),f,b
 25562  006E74  D000               	goto	l14531
 25563  006E76                     l14531:
 25564  006E76  0100               	movlb	0	; () banked
 25565  006E78  0764               	decf	memset@n& (0+255),f,b
 25566  006E7A  A0D8               	btfss	status,0,c
 25567  006E7C  0765               	decf	(memset@n+1)& (0+255),f,b
 25568  006E7E  0100               	movlb	0	; () banked
 25569  006E80  2964               	incf	memset@n& (0+255),w,b
 25570  006E82  E105               	bnz	u14061
 25571  006E84  0100               	movlb	0	; () banked
 25572  006E86  2965               	incf	(memset@n+1)& (0+255),w,b
 25573  006E88  A4D8               	btfss	status,2,c
 25574  006E8A  D001               	goto	u14061
 25575  006E8C  D001               	goto	u14060
 25576  006E8E                     u14061:
 25577  006E8E  D7E9               	goto	l14527
 25578  006E90                     u14060:
 25579  006E90  D000               	goto	l2603
 25580  006E92                     l2603:
 25581                           
 25582                           ; BSR set to: 0
 25583  006E92  0012               	return		;funcret
 25584  006E94                     __end_of_memset:
 25585                           	opt stack 0
 25586                           tblptru	equ	0xFF8
 25587                           tblptrh	equ	0xFF7
 25588                           tblptrl	equ	0xFF6
 25589                           tablat	equ	0xFF5
 25590                           prodh	equ	0xFF4
 25591                           prodl	equ	0xFF3
 25592                           intcon	equ	0xFF2
 25593                           intcon3	equ	0xFF0
 25594                           indf0	equ	0xFEF
 25595                           postinc0	equ	0xFEE
 25596                           fsr0h	equ	0xFEA
 25597                           fsr0l	equ	0xFE9
 25598                           wreg	equ	0xFE8
 25599                           indf1	equ	0xFE7
 25600                           postdec1	equ	0xFE5
 25601                           fsr1h	equ	0xFE2
 25602                           fsr1l	equ	0xFE1
 25603                           indf2	equ	0xFDF
 25604                           postinc2	equ	0xFDE
 25605                           postdec2	equ	0xFDD
 25606                           plusw2	equ	0xFDB
 25607                           fsr2h	equ	0xFDA
 25608                           fsr2l	equ	0xFD9
 25609                           status	equ	0xFD8
 25610                           
 25611 ;; *************** function _USBDeviceAttach *****************
 25612 ;; Defined at:
 25613 ;;		line 1046 in file "../Includes/Usb/Framework/usb_device.c"
 25614 ;; Parameters:    Size  Location     Type
 25615 ;;		None
 25616 ;; Auto vars:     Size  Location     Type
 25617 ;;		None
 25618 ;; Return value:  Size  Location     Type
 25619 ;;                  1    wreg      void 
 25620 ;; Registers used:
 25621 ;;		wreg, status,2
 25622 ;; Tracked objects:
 25623 ;;		On entry : 0/0
 25624 ;;		On exit  : 0/0
 25625 ;;		Unchanged: 0/0
 25626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25627 ;;      Params:         0       0       0       0       0       0       0       0       0
 25628 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25629 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25630 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25631 ;;Total ram usage:        0 bytes
 25632 ;; Hardware stack levels used:    1
 25633 ;; Hardware stack levels required when called:   11
 25634 ;; This function calls:
 25635 ;;		Nothing
 25636 ;; This function is called by:
 25637 ;;		_main
 25638 ;; This function uses a non-reentrant model
 25639 ;;
 25640                           
 25641                           	psect	text88
 25642  006C5C                     __ptext88:
 25643                           	opt stack 0
 25644  006C5C                     _USBDeviceAttach:
 25645                           	opt stack 19
 25646                           
 25647                           ;usb_device.c: 1050: {
 25648                           ;usb_device.c: 1051: if(1 == 1)
 25649                           
 25650                           ; BSR set to: 0
 25651                           ;incstack = 0
 25652  006C5C  0100               	movlb	0	; () banked
 25653  006C5E  51DE               	movf	_USBDeviceState& (0+255),w,b	;volatile
 25654  006C60  A4D8               	btfss	status,2,c
 25655  006C62  D001               	goto	u14121
 25656  006C64  D001               	goto	u14120
 25657  006C66                     u14121:
 25658  006C66  D01A               	goto	l1776
 25659  006C68                     u14120:
 25660                           
 25661                           ; BSR set to: 0
 25662                           ;usb_device.c: 1052: {
 25663                           ;usb_device.c: 1054: UCON = 0;
 25664  006C68  0E00               	movlw	0
 25665  006C6A  6E60               	movwf	3936,c	;volatile
 25666                           
 25667                           ;usb_device.c: 1057: UIE = 0;
 25668  006C6C  0E00               	movlw	0
 25669  006C6E  6E64               	movwf	3940,c	;volatile
 25670                           
 25671                           ;usb_device.c: 1061: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 25672  006C70  0E16               	movlw	22
 25673  006C72  6E62               	movwf	3938,c	;volatile
 25674  006C74  0E9F               	movlw	159
 25675  006C76  6E66               	movwf	3942,c	;volatile
 25676  006C78  0E7B               	movlw	123
 25677  006C7A  6E64               	movwf	3940,c	;volatile
 25678                           
 25679                           ; BSR set to: 0
 25680                           ;usb_device.c: 1063: {RCONbits.IPEN = 1;IPR3bits.USBIP = 1;PIE3bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 25681  006C7C  8ED0               	bsf	4048,7,c	;volatile
 25682                           
 25683                           ; BSR set to: 0
 25684  006C7E  84A5               	bsf	4005,2,c	;volatile
 25685                           
 25686                           ; BSR set to: 0
 25687  006C80  84A3               	bsf	4003,2,c	;volatile
 25688                           
 25689                           ; BSR set to: 0
 25690  006C82  8EF2               	bsf	intcon,7,c	;volatile
 25691                           
 25692                           ;usb_device.c: 1066: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 25693  006C84  D001               	goto	l1773
 25694  006C86                     l1774:
 25695  006C86  8660               	bsf	3936,3,c	;volatile
 25696  006C88                     l1773:
 25697  006C88  A660               	btfss	3936,3,c	;volatile
 25698  006C8A  D001               	goto	u14131
 25699  006C8C  D001               	goto	u14130
 25700  006C8E                     u14131:
 25701  006C8E  D7FB               	goto	l1774
 25702  006C90                     u14130:
 25703  006C90  D000               	goto	l14627
 25704  006C92                     l14627:
 25705                           
 25706                           ;usb_device.c: 1069: USBDeviceState = ATTACHED_STATE;
 25707  006C92  0E01               	movlw	1
 25708  006C94  0100               	movlb	0	; () banked
 25709  006C96  6FDE               	movwf	_USBDeviceState& (0+255),b	;volatile
 25710  006C98  D001               	goto	l1776
 25711                           
 25712                           ; BSR set to: 0
 25713  006C9A  D000               	goto	l1776
 25714  006C9C                     l1776:
 25715                           
 25716                           ; BSR set to: 0
 25717  006C9C  0012               	return		;funcret
 25718  006C9E                     __end_of_USBDeviceAttach:
 25719                           	opt stack 0
 25720                           tblptru	equ	0xFF8
 25721                           tblptrh	equ	0xFF7
 25722                           tblptrl	equ	0xFF6
 25723                           tablat	equ	0xFF5
 25724                           prodh	equ	0xFF4
 25725                           prodl	equ	0xFF3
 25726                           intcon	equ	0xFF2
 25727                           intcon3	equ	0xFF0
 25728                           indf0	equ	0xFEF
 25729                           postinc0	equ	0xFEE
 25730                           fsr0h	equ	0xFEA
 25731                           fsr0l	equ	0xFE9
 25732                           wreg	equ	0xFE8
 25733                           indf1	equ	0xFE7
 25734                           postdec1	equ	0xFE5
 25735                           fsr1h	equ	0xFE2
 25736                           fsr1l	equ	0xFE1
 25737                           indf2	equ	0xFDF
 25738                           postinc2	equ	0xFDE
 25739                           postdec2	equ	0xFDD
 25740                           plusw2	equ	0xFDB
 25741                           fsr2h	equ	0xFDA
 25742                           fsr2l	equ	0xFD9
 25743                           status	equ	0xFD8
 25744                           
 25745 ;; *************** function _SYSTEM_Initialize *****************
 25746 ;; Defined at:
 25747 ;;		line 93 in file "../Includes/MccGenerated/mcc.c"
 25748 ;; Parameters:    Size  Location     Type
 25749 ;;		None
 25750 ;; Auto vars:     Size  Location     Type
 25751 ;;		None
 25752 ;; Return value:  Size  Location     Type
 25753 ;;                  1    wreg      void 
 25754 ;; Registers used:
 25755 ;;		wreg, status,2, status,0, cstack
 25756 ;; Tracked objects:
 25757 ;;		On entry : 0/0
 25758 ;;		On exit  : 0/0
 25759 ;;		Unchanged: 0/0
 25760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25761 ;;      Params:         0       0       0       0       0       0       0       0       0
 25762 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25763 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25764 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25765 ;;Total ram usage:        0 bytes
 25766 ;; Hardware stack levels used:    1
 25767 ;; Hardware stack levels required when called:   13
 25768 ;; This function calls:
 25769 ;;		_ADC_Initialize
 25770 ;;		_CMP1_Initialize
 25771 ;;		_EUSART_Initialize
 25772 ;;		_OSCILLATOR_Initialize
 25773 ;;		_PIN_MANAGER_Initialize
 25774 ;;		_TMR1_Initialize
 25775 ;;		_TMR2_Initialize
 25776 ;;		_TMR3_Initialize
 25777 ;; This function is called by:
 25778 ;;		_main
 25779 ;; This function uses a non-reentrant model
 25780 ;;
 25781                           
 25782                           	psect	text89
 25783  0070B0                     __ptext89:
 25784                           	opt stack 0
 25785  0070B0                     _SYSTEM_Initialize:
 25786                           	opt stack 17
 25787                           
 25788                           ;mcc.c: 95: OSCILLATOR_Initialize();
 25789                           
 25790                           ; BSR set to: 0
 25791                           ;incstack = 0
 25792  0070B0  EC89  F038         	call	_OSCILLATOR_Initialize	;wreg free
 25793                           
 25794                           ;mcc.c: 96: PIN_MANAGER_Initialize();
 25795  0070B4  ECF4  F034         	call	_PIN_MANAGER_Initialize	;wreg free
 25796                           
 25797                           ;mcc.c: 98: TMR1_Initialize();
 25798  0070B8  EC82  F037         	call	_TMR1_Initialize	;wreg free
 25799                           
 25800                           ;mcc.c: 99: TMR2_Initialize();
 25801  0070BC  EC06  F039         	call	_TMR2_Initialize	;wreg free
 25802                           
 25803                           ;mcc.c: 100: TMR3_Initialize();
 25804  0070C0  EC69  F038         	call	_TMR3_Initialize	;wreg free
 25805                           
 25806                           ;mcc.c: 101: EUSART_Initialize();
 25807  0070C4  ECD0  F036         	call	_EUSART_Initialize	;wreg free
 25808                           
 25809                           ;mcc.c: 102: ADC_Initialize();
 25810  0070C8  ECC0  F038         	call	_ADC_Initialize	;wreg free
 25811                           
 25812                           ;mcc.c: 103: CMP1_Initialize();
 25813  0070CC  EC2B  F039         	call	_CMP1_Initialize	;wreg free
 25814  0070D0  0012               	return		;funcret
 25815  0070D2                     __end_of_SYSTEM_Initialize:
 25816                           	opt stack 0
 25817                           tblptru	equ	0xFF8
 25818                           tblptrh	equ	0xFF7
 25819                           tblptrl	equ	0xFF6
 25820                           tablat	equ	0xFF5
 25821                           prodh	equ	0xFF4
 25822                           prodl	equ	0xFF3
 25823                           intcon	equ	0xFF2
 25824                           intcon3	equ	0xFF0
 25825                           indf0	equ	0xFEF
 25826                           postinc0	equ	0xFEE
 25827                           fsr0h	equ	0xFEA
 25828                           fsr0l	equ	0xFE9
 25829                           wreg	equ	0xFE8
 25830                           indf1	equ	0xFE7
 25831                           postdec1	equ	0xFE5
 25832                           fsr1h	equ	0xFE2
 25833                           fsr1l	equ	0xFE1
 25834                           indf2	equ	0xFDF
 25835                           postinc2	equ	0xFDE
 25836                           postdec2	equ	0xFDD
 25837                           plusw2	equ	0xFDB
 25838                           fsr2h	equ	0xFDA
 25839                           fsr2l	equ	0xFD9
 25840                           status	equ	0xFD8
 25841                           
 25842 ;; *************** function _TMR3_Initialize *****************
 25843 ;; Defined at:
 25844 ;;		line 67 in file "../Includes/MccGenerated/tmr3.c"
 25845 ;; Parameters:    Size  Location     Type
 25846 ;;		None
 25847 ;; Auto vars:     Size  Location     Type
 25848 ;;		None
 25849 ;; Return value:  Size  Location     Type
 25850 ;;                  1    wreg      void 
 25851 ;; Registers used:
 25852 ;;		wreg, status,2, cstack
 25853 ;; Tracked objects:
 25854 ;;		On entry : 0/0
 25855 ;;		On exit  : 0/0
 25856 ;;		Unchanged: 0/0
 25857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25858 ;;      Params:         0       0       0       0       0       0       0       0       0
 25859 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25860 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25861 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25862 ;;Total ram usage:        0 bytes
 25863 ;; Hardware stack levels used:    1
 25864 ;; Hardware stack levels required when called:   12
 25865 ;; This function calls:
 25866 ;;		_TMR3_StartTimer
 25867 ;; This function is called by:
 25868 ;;		_SYSTEM_Initialize
 25869 ;; This function uses a non-reentrant model
 25870 ;;
 25871                           
 25872                           	psect	text90
 25873  0070D2                     __ptext90:
 25874                           	opt stack 0
 25875  0070D2                     _TMR3_Initialize:
 25876                           	opt stack 17
 25877                           
 25878                           ;tmr3.c: 72: T3CON = 0x04;
 25879                           
 25880                           ;incstack = 0
 25881  0070D2  0E04               	movlw	4
 25882  0070D4  6EB1               	movwf	4017,c	;volatile
 25883                           
 25884                           ;tmr3.c: 75: T3GCON = 0x00;
 25885  0070D6  0E00               	movlw	0
 25886  0070D8  6EB4               	movwf	4020,c	;volatile
 25887                           
 25888                           ;tmr3.c: 78: TMR3H = 0xD5;
 25889  0070DA  0ED5               	movlw	213
 25890  0070DC  6EB3               	movwf	4019,c	;volatile
 25891                           
 25892                           ;tmr3.c: 81: TMR3L = 0xD0;
 25893  0070DE  0ED0               	movlw	208
 25894  0070E0  6EB2               	movwf	4018,c	;volatile
 25895                           
 25896                           ;tmr3.c: 84: timer3ReloadVal=TMR3;
 25897  0070E2  CFB2 F0C1          	movff	4018,_timer3ReloadVal	;volatile
 25898  0070E6  CFB3 F0C2          	movff	4019,_timer3ReloadVal+1	;volatile
 25899                           
 25900                           ;tmr3.c: 87: PIR2bits.TMR3IF = 0;
 25901  0070EA  92A1               	bcf	4001,1,c	;volatile
 25902                           
 25903                           ;tmr3.c: 90: PIE2bits.TMR3IE = 1;
 25904  0070EC  82A0               	bsf	4000,1,c	;volatile
 25905                           
 25906                           ;tmr3.c: 93: TMR3_StartTimer();
 25907  0070EE  EC80  F039         	call	_TMR3_StartTimer	;wreg free
 25908  0070F2  0012               	return		;funcret
 25909  0070F4                     __end_of_TMR3_Initialize:
 25910                           	opt stack 0
 25911                           tblptru	equ	0xFF8
 25912                           tblptrh	equ	0xFF7
 25913                           tblptrl	equ	0xFF6
 25914                           tablat	equ	0xFF5
 25915                           prodh	equ	0xFF4
 25916                           prodl	equ	0xFF3
 25917                           intcon	equ	0xFF2
 25918                           intcon3	equ	0xFF0
 25919                           indf0	equ	0xFEF
 25920                           postinc0	equ	0xFEE
 25921                           fsr0h	equ	0xFEA
 25922                           fsr0l	equ	0xFE9
 25923                           wreg	equ	0xFE8
 25924                           indf1	equ	0xFE7
 25925                           postdec1	equ	0xFE5
 25926                           fsr1h	equ	0xFE2
 25927                           fsr1l	equ	0xFE1
 25928                           indf2	equ	0xFDF
 25929                           postinc2	equ	0xFDE
 25930                           postdec2	equ	0xFDD
 25931                           plusw2	equ	0xFDB
 25932                           fsr2h	equ	0xFDA
 25933                           fsr2l	equ	0xFD9
 25934                           status	equ	0xFD8
 25935                           
 25936 ;; *************** function _TMR3_StartTimer *****************
 25937 ;; Defined at:
 25938 ;;		line 96 in file "../Includes/MccGenerated/tmr3.c"
 25939 ;; Parameters:    Size  Location     Type
 25940 ;;		None
 25941 ;; Auto vars:     Size  Location     Type
 25942 ;;		None
 25943 ;; Return value:  Size  Location     Type
 25944 ;;                  1    wreg      void 
 25945 ;; Registers used:
 25946 ;;		None
 25947 ;; Tracked objects:
 25948 ;;		On entry : 0/0
 25949 ;;		On exit  : 0/0
 25950 ;;		Unchanged: 0/0
 25951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25952 ;;      Params:         0       0       0       0       0       0       0       0       0
 25953 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25954 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25955 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25956 ;;Total ram usage:        0 bytes
 25957 ;; Hardware stack levels used:    1
 25958 ;; Hardware stack levels required when called:   11
 25959 ;; This function calls:
 25960 ;;		Nothing
 25961 ;; This function is called by:
 25962 ;;		_TMR3_Initialize
 25963 ;; This function uses a non-reentrant model
 25964 ;;
 25965                           
 25966                           	psect	text91
 25967  007300                     __ptext91:
 25968                           	opt stack 0
 25969  007300                     _TMR3_StartTimer:
 25970                           	opt stack 17
 25971                           
 25972                           ;tmr3.c: 99: T3CONbits.TMR3ON = 1;
 25973                           
 25974                           ;incstack = 0
 25975  007300  80B1               	bsf	4017,0,c	;volatile
 25976  007302  0012               	return		;funcret
 25977  007304                     __end_of_TMR3_StartTimer:
 25978                           	opt stack 0
 25979                           tblptru	equ	0xFF8
 25980                           tblptrh	equ	0xFF7
 25981                           tblptrl	equ	0xFF6
 25982                           tablat	equ	0xFF5
 25983                           prodh	equ	0xFF4
 25984                           prodl	equ	0xFF3
 25985                           intcon	equ	0xFF2
 25986                           intcon3	equ	0xFF0
 25987                           indf0	equ	0xFEF
 25988                           postinc0	equ	0xFEE
 25989                           fsr0h	equ	0xFEA
 25990                           fsr0l	equ	0xFE9
 25991                           wreg	equ	0xFE8
 25992                           indf1	equ	0xFE7
 25993                           postdec1	equ	0xFE5
 25994                           fsr1h	equ	0xFE2
 25995                           fsr1l	equ	0xFE1
 25996                           indf2	equ	0xFDF
 25997                           postinc2	equ	0xFDE
 25998                           postdec2	equ	0xFDD
 25999                           plusw2	equ	0xFDB
 26000                           fsr2h	equ	0xFDA
 26001                           fsr2l	equ	0xFD9
 26002                           status	equ	0xFD8
 26003                           
 26004 ;; *************** function _TMR2_Initialize *****************
 26005 ;; Defined at:
 26006 ;;		line 58 in file "../Includes/MccGenerated/tmr2.c"
 26007 ;; Parameters:    Size  Location     Type
 26008 ;;		None
 26009 ;; Auto vars:     Size  Location     Type
 26010 ;;		None
 26011 ;; Return value:  Size  Location     Type
 26012 ;;                  1    wreg      void 
 26013 ;; Registers used:
 26014 ;;		wreg, status,2, cstack
 26015 ;; Tracked objects:
 26016 ;;		On entry : 0/0
 26017 ;;		On exit  : 0/0
 26018 ;;		Unchanged: 0/0
 26019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26020 ;;      Params:         0       0       0       0       0       0       0       0       0
 26021 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26022 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26023 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26024 ;;Total ram usage:        0 bytes
 26025 ;; Hardware stack levels used:    1
 26026 ;; Hardware stack levels required when called:   12
 26027 ;; This function calls:
 26028 ;;		_TMR2_StartTimer
 26029 ;; This function is called by:
 26030 ;;		_SYSTEM_Initialize
 26031 ;; This function uses a non-reentrant model
 26032 ;;
 26033                           
 26034                           	psect	text92
 26035  00720C                     __ptext92:
 26036                           	opt stack 0
 26037  00720C                     _TMR2_Initialize:
 26038                           	opt stack 17
 26039                           
 26040                           ;tmr2.c: 62: T2CON = 0x7A;
 26041                           
 26042                           ;incstack = 0
 26043  00720C  0E7A               	movlw	122
 26044  00720E  6EBA               	movwf	4026,c	;volatile
 26045                           
 26046                           ;tmr2.c: 65: PR2 = 0x9B;
 26047  007210  0E9B               	movlw	155
 26048  007212  6EBB               	movwf	4027,c	;volatile
 26049                           
 26050                           ;tmr2.c: 68: TMR2 = 0x00;
 26051  007214  0E00               	movlw	0
 26052  007216  6EBC               	movwf	4028,c	;volatile
 26053                           
 26054                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
 26055  007218  929E               	bcf	3998,1,c	;volatile
 26056                           
 26057                           ;tmr2.c: 74: TMR2_StartTimer();
 26058  00721A  EC82  F039         	call	_TMR2_StartTimer	;wreg free
 26059  00721E  0012               	return		;funcret
 26060  007220                     __end_of_TMR2_Initialize:
 26061                           	opt stack 0
 26062                           tblptru	equ	0xFF8
 26063                           tblptrh	equ	0xFF7
 26064                           tblptrl	equ	0xFF6
 26065                           tablat	equ	0xFF5
 26066                           prodh	equ	0xFF4
 26067                           prodl	equ	0xFF3
 26068                           intcon	equ	0xFF2
 26069                           intcon3	equ	0xFF0
 26070                           indf0	equ	0xFEF
 26071                           postinc0	equ	0xFEE
 26072                           fsr0h	equ	0xFEA
 26073                           fsr0l	equ	0xFE9
 26074                           wreg	equ	0xFE8
 26075                           indf1	equ	0xFE7
 26076                           postdec1	equ	0xFE5
 26077                           fsr1h	equ	0xFE2
 26078                           fsr1l	equ	0xFE1
 26079                           indf2	equ	0xFDF
 26080                           postinc2	equ	0xFDE
 26081                           postdec2	equ	0xFDD
 26082                           plusw2	equ	0xFDB
 26083                           fsr2h	equ	0xFDA
 26084                           fsr2l	equ	0xFD9
 26085                           status	equ	0xFD8
 26086                           
 26087 ;; *************** function _TMR2_StartTimer *****************
 26088 ;; Defined at:
 26089 ;;		line 77 in file "../Includes/MccGenerated/tmr2.c"
 26090 ;; Parameters:    Size  Location     Type
 26091 ;;		None
 26092 ;; Auto vars:     Size  Location     Type
 26093 ;;		None
 26094 ;; Return value:  Size  Location     Type
 26095 ;;                  1    wreg      void 
 26096 ;; Registers used:
 26097 ;;		None
 26098 ;; Tracked objects:
 26099 ;;		On entry : 0/0
 26100 ;;		On exit  : 0/0
 26101 ;;		Unchanged: 0/0
 26102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26103 ;;      Params:         0       0       0       0       0       0       0       0       0
 26104 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26105 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26106 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26107 ;;Total ram usage:        0 bytes
 26108 ;; Hardware stack levels used:    1
 26109 ;; Hardware stack levels required when called:   11
 26110 ;; This function calls:
 26111 ;;		Nothing
 26112 ;; This function is called by:
 26113 ;;		_TMR2_Initialize
 26114 ;; This function uses a non-reentrant model
 26115 ;;
 26116                           
 26117                           	psect	text93
 26118  007304                     __ptext93:
 26119                           	opt stack 0
 26120  007304                     _TMR2_StartTimer:
 26121                           	opt stack 17
 26122                           
 26123                           ;tmr2.c: 79: T2CONbits.TMR2ON = 1;
 26124                           
 26125                           ;incstack = 0
 26126  007304  84BA               	bsf	4026,2,c	;volatile
 26127  007306  0012               	return		;funcret
 26128  007308                     __end_of_TMR2_StartTimer:
 26129                           	opt stack 0
 26130                           tblptru	equ	0xFF8
 26131                           tblptrh	equ	0xFF7
 26132                           tblptrl	equ	0xFF6
 26133                           tablat	equ	0xFF5
 26134                           prodh	equ	0xFF4
 26135                           prodl	equ	0xFF3
 26136                           intcon	equ	0xFF2
 26137                           intcon3	equ	0xFF0
 26138                           indf0	equ	0xFEF
 26139                           postinc0	equ	0xFEE
 26140                           fsr0h	equ	0xFEA
 26141                           fsr0l	equ	0xFE9
 26142                           wreg	equ	0xFE8
 26143                           indf1	equ	0xFE7
 26144                           postdec1	equ	0xFE5
 26145                           fsr1h	equ	0xFE2
 26146                           fsr1l	equ	0xFE1
 26147                           indf2	equ	0xFDF
 26148                           postinc2	equ	0xFDE
 26149                           postdec2	equ	0xFDD
 26150                           plusw2	equ	0xFDB
 26151                           fsr2h	equ	0xFDA
 26152                           fsr2l	equ	0xFD9
 26153                           status	equ	0xFD8
 26154                           
 26155 ;; *************** function _TMR1_Initialize *****************
 26156 ;; Defined at:
 26157 ;;		line 63 in file "../Includes/MccGenerated/tmr1.c"
 26158 ;; Parameters:    Size  Location     Type
 26159 ;;		None
 26160 ;; Auto vars:     Size  Location     Type
 26161 ;;		None
 26162 ;; Return value:  Size  Location     Type
 26163 ;;                  1    wreg      void 
 26164 ;; Registers used:
 26165 ;;		wreg, status,2, status,0, cstack
 26166 ;; Tracked objects:
 26167 ;;		On entry : 0/0
 26168 ;;		On exit  : 0/0
 26169 ;;		Unchanged: 0/0
 26170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26171 ;;      Params:         0       0       0       0       0       0       0       0       0
 26172 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26173 ;;      Temps:          0       2       0       0       0       0       0       0       0
 26174 ;;      Totals:         0       2       0       0       0       0       0       0       0
 26175 ;;Total ram usage:        2 bytes
 26176 ;; Hardware stack levels used:    1
 26177 ;; Hardware stack levels required when called:   12
 26178 ;; This function calls:
 26179 ;;		_TMR1_StartTimer
 26180 ;; This function is called by:
 26181 ;;		_SYSTEM_Initialize
 26182 ;; This function uses a non-reentrant model
 26183 ;;
 26184                           
 26185                           	psect	text94
 26186  006F04                     __ptext94:
 26187                           	opt stack 0
 26188  006F04                     _TMR1_Initialize:
 26189                           	opt stack 17
 26190                           
 26191                           ;tmr1.c: 68: T1CON = 0x00;
 26192                           
 26193                           ;incstack = 0
 26194  006F04  0E00               	movlw	0
 26195  006F06  6ECD               	movwf	4045,c	;volatile
 26196                           
 26197                           ;tmr1.c: 71: T1GCON = 0x00;
 26198  006F08  0E00               	movlw	0
 26199  006F0A  6ECC               	movwf	4044,c	;volatile
 26200                           
 26201                           ;tmr1.c: 74: TMR1H = 0xD0;
 26202  006F0C  0ED0               	movlw	208
 26203  006F0E  6ECF               	movwf	4047,c	;volatile
 26204                           
 26205                           ;tmr1.c: 77: TMR1L = 0x20;
 26206  006F10  0E20               	movlw	32
 26207  006F12  6ECE               	movwf	4046,c	;volatile
 26208                           
 26209                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
 26210  006F14  50CE               	movf	4046,w,c	;volatile
 26211  006F16  CFCF F060          	movff	4047,??_TMR1_Initialize	;volatile
 26212  006F1A  0100               	movlb	0	; () banked
 26213  006F1C  6B61               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 26214  006F1E  C060  F061         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 26215  006F22  0100               	movlb	0	; () banked
 26216  006F24  6B60               	clrf	??_TMR1_Initialize& (0+255),b
 26217  006F26  0100               	movlb	0	; () banked
 26218  006F28  1160               	iorwf	??_TMR1_Initialize& (0+255),w,b
 26219  006F2A  6E46               	movwf	_timer1ReloadVal,c	;volatile
 26220  006F2C  0100               	movlb	0	; () banked
 26221  006F2E  5161               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 26222  006F30  6E47               	movwf	_timer1ReloadVal+1,c	;volatile
 26223                           
 26224                           ; BSR set to: 0
 26225                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
 26226  006F32  909E               	bcf	3998,0,c	;volatile
 26227                           
 26228                           ; BSR set to: 0
 26229                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
 26230  006F34  809D               	bsf	3997,0,c	;volatile
 26231                           
 26232                           ; BSR set to: 0
 26233                           ;tmr1.c: 89: TMR1_StartTimer();
 26234  006F36  EC84  F039         	call	_TMR1_StartTimer	;wreg free
 26235  006F3A  0012               	return		;funcret
 26236  006F3C                     __end_of_TMR1_Initialize:
 26237                           	opt stack 0
 26238                           tblptru	equ	0xFF8
 26239                           tblptrh	equ	0xFF7
 26240                           tblptrl	equ	0xFF6
 26241                           tablat	equ	0xFF5
 26242                           prodh	equ	0xFF4
 26243                           prodl	equ	0xFF3
 26244                           intcon	equ	0xFF2
 26245                           intcon3	equ	0xFF0
 26246                           indf0	equ	0xFEF
 26247                           postinc0	equ	0xFEE
 26248                           fsr0h	equ	0xFEA
 26249                           fsr0l	equ	0xFE9
 26250                           wreg	equ	0xFE8
 26251                           indf1	equ	0xFE7
 26252                           postdec1	equ	0xFE5
 26253                           fsr1h	equ	0xFE2
 26254                           fsr1l	equ	0xFE1
 26255                           indf2	equ	0xFDF
 26256                           postinc2	equ	0xFDE
 26257                           postdec2	equ	0xFDD
 26258                           plusw2	equ	0xFDB
 26259                           fsr2h	equ	0xFDA
 26260                           fsr2l	equ	0xFD9
 26261                           status	equ	0xFD8
 26262                           
 26263 ;; *************** function _TMR1_StartTimer *****************
 26264 ;; Defined at:
 26265 ;;		line 92 in file "../Includes/MccGenerated/tmr1.c"
 26266 ;; Parameters:    Size  Location     Type
 26267 ;;		None
 26268 ;; Auto vars:     Size  Location     Type
 26269 ;;		None
 26270 ;; Return value:  Size  Location     Type
 26271 ;;                  1    wreg      void 
 26272 ;; Registers used:
 26273 ;;		None
 26274 ;; Tracked objects:
 26275 ;;		On entry : 0/0
 26276 ;;		On exit  : 0/0
 26277 ;;		Unchanged: 0/0
 26278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26279 ;;      Params:         0       0       0       0       0       0       0       0       0
 26280 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26281 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26282 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26283 ;;Total ram usage:        0 bytes
 26284 ;; Hardware stack levels used:    1
 26285 ;; Hardware stack levels required when called:   11
 26286 ;; This function calls:
 26287 ;;		Nothing
 26288 ;; This function is called by:
 26289 ;;		_TMR1_Initialize
 26290 ;; This function uses a non-reentrant model
 26291 ;;
 26292                           
 26293                           	psect	text95
 26294  007308                     __ptext95:
 26295                           	opt stack 0
 26296  007308                     _TMR1_StartTimer:
 26297                           	opt stack 17
 26298                           
 26299                           ;tmr1.c: 95: T1CONbits.TMR1ON = 1;
 26300                           
 26301                           ;incstack = 0
 26302  007308  80CD               	bsf	4045,0,c	;volatile
 26303  00730A  0012               	return		;funcret
 26304  00730C                     __end_of_TMR1_StartTimer:
 26305                           	opt stack 0
 26306                           tblptru	equ	0xFF8
 26307                           tblptrh	equ	0xFF7
 26308                           tblptrl	equ	0xFF6
 26309                           tablat	equ	0xFF5
 26310                           prodh	equ	0xFF4
 26311                           prodl	equ	0xFF3
 26312                           intcon	equ	0xFF2
 26313                           intcon3	equ	0xFF0
 26314                           indf0	equ	0xFEF
 26315                           postinc0	equ	0xFEE
 26316                           fsr0h	equ	0xFEA
 26317                           fsr0l	equ	0xFE9
 26318                           wreg	equ	0xFE8
 26319                           indf1	equ	0xFE7
 26320                           postdec1	equ	0xFE5
 26321                           fsr1h	equ	0xFE2
 26322                           fsr1l	equ	0xFE1
 26323                           indf2	equ	0xFDF
 26324                           postinc2	equ	0xFDE
 26325                           postdec2	equ	0xFDD
 26326                           plusw2	equ	0xFDB
 26327                           fsr2h	equ	0xFDA
 26328                           fsr2l	equ	0xFD9
 26329                           status	equ	0xFD8
 26330                           
 26331 ;; *************** function _PIN_MANAGER_Initialize *****************
 26332 ;; Defined at:
 26333 ;;		line 51 in file "../Includes/MccGenerated/pin_manager.c"
 26334 ;; Parameters:    Size  Location     Type
 26335 ;;		None
 26336 ;; Auto vars:     Size  Location     Type
 26337 ;;		None
 26338 ;; Return value:  Size  Location     Type
 26339 ;;                  1    wreg      void 
 26340 ;; Registers used:
 26341 ;;		wreg, status,2
 26342 ;; Tracked objects:
 26343 ;;		On entry : 0/0
 26344 ;;		On exit  : 0/0
 26345 ;;		Unchanged: 0/0
 26346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26347 ;;      Params:         0       0       0       0       0       0       0       0       0
 26348 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26349 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26350 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26351 ;;Total ram usage:        0 bytes
 26352 ;; Hardware stack levels used:    1
 26353 ;; Hardware stack levels required when called:   11
 26354 ;; This function calls:
 26355 ;;		Nothing
 26356 ;; This function is called by:
 26357 ;;		_moteApp_GoToSleep
 26358 ;;		_SYSTEM_Initialize
 26359 ;; This function uses a non-reentrant model
 26360 ;;
 26361                           
 26362                           	psect	text96
 26363  0069E8                     __ptext96:
 26364                           	opt stack 0
 26365  0069E8                     _PIN_MANAGER_Initialize:
 26366                           	opt stack 16
 26367                           
 26368                           ;pin_manager.c: 55: TRISAbits.TRISA0 = 1;
 26369                           
 26370                           ;incstack = 0
 26371  0069E8  8092               	bsf	3986,0,c	;volatile
 26372                           
 26373                           ;pin_manager.c: 56: TRISAbits.TRISA1 = 1;
 26374  0069EA  8292               	bsf	3986,1,c	;volatile
 26375                           
 26376                           ;pin_manager.c: 57: TRISAbits.TRISA2 = 1;
 26377  0069EC  8492               	bsf	3986,2,c	;volatile
 26378                           
 26379                           ;pin_manager.c: 58: TRISAbits.TRISA3 = 1;
 26380  0069EE  8692               	bsf	3986,3,c	;volatile
 26381                           
 26382                           ;pin_manager.c: 60: LATEbits.LATE2 = 0;
 26383  0069F0  948D               	bcf	3981,2,c	;volatile
 26384                           
 26385                           ;pin_manager.c: 61: TRISEbits.TRISE2 = 0;
 26386  0069F2  9496               	bcf	3990,2,c	;volatile
 26387                           
 26388                           ;pin_manager.c: 62: TRISAbits.TRISA5 = 0;
 26389  0069F4  9A92               	bcf	3986,5,c	;volatile
 26390                           
 26391                           ;pin_manager.c: 63: TRISAbits.TRISA6 = 0;
 26392  0069F6  9C92               	bcf	3986,6,c	;volatile
 26393                           
 26394                           ;pin_manager.c: 64: TRISAbits.TRISA7 = 0;
 26395  0069F8  9E92               	bcf	3986,7,c	;volatile
 26396                           
 26397                           ;pin_manager.c: 66: TRISBbits.TRISB1 = 1;
 26398  0069FA  8293               	bsf	3987,1,c	;volatile
 26399                           
 26400                           ;pin_manager.c: 67: TRISBbits.TRISB0 = 1;
 26401  0069FC  8093               	bsf	3987,0,c	;volatile
 26402                           
 26403                           ;pin_manager.c: 68: TRISBbits.TRISB7 = 1;
 26404  0069FE  8E93               	bsf	3987,7,c	;volatile
 26405                           
 26406                           ;pin_manager.c: 69: TRISBbits.TRISB2 = 0;
 26407  006A00  9493               	bcf	3987,2,c	;volatile
 26408                           
 26409                           ;pin_manager.c: 70: TRISBbits.TRISB3 = 0;
 26410  006A02  9693               	bcf	3987,3,c	;volatile
 26411                           
 26412                           ;pin_manager.c: 71: TRISBbits.TRISB4 = 0;
 26413  006A04  9893               	bcf	3987,4,c	;volatile
 26414                           
 26415                           ;pin_manager.c: 72: TRISBbits.TRISB5 = 0;
 26416  006A06  9A93               	bcf	3987,5,c	;volatile
 26417                           
 26418                           ;pin_manager.c: 74: TRISCbits.TRISC0 = 0;
 26419  006A08  9094               	bcf	3988,0,c	;volatile
 26420                           
 26421                           ;pin_manager.c: 75: TRISCbits.TRISC1 = 0;
 26422  006A0A  9294               	bcf	3988,1,c	;volatile
 26423                           
 26424                           ;pin_manager.c: 76: TRISCbits.TRISC2 = 1;
 26425  006A0C  8494               	bsf	3988,2,c	;volatile
 26426                           
 26427                           ;pin_manager.c: 77: TRISCbits.TRISC6 = 0;
 26428  006A0E  9C94               	bcf	3988,6,c	;volatile
 26429                           
 26430                           ;pin_manager.c: 78: TRISCbits.TRISC7 = 1;
 26431  006A10  8E94               	bsf	3988,7,c	;volatile
 26432                           
 26433                           ;pin_manager.c: 80: TRISD = 0b00000000;
 26434  006A12  0E00               	movlw	0
 26435  006A14  6E95               	movwf	3989,c	;volatile
 26436                           
 26437                           ;pin_manager.c: 82: TRISEbits.TRISE2 = 0;
 26438  006A16  9496               	bcf	3990,2,c	;volatile
 26439                           
 26440                           ;pin_manager.c: 85: LATAbits.LATA5 = 0;
 26441  006A18  9A89               	bcf	3977,5,c	;volatile
 26442                           
 26443                           ;pin_manager.c: 86: LATAbits.LATA6 = 0;
 26444  006A1A  9C89               	bcf	3977,6,c	;volatile
 26445                           
 26446                           ;pin_manager.c: 87: LATAbits.LATA7 = 0;
 26447  006A1C  9E89               	bcf	3977,7,c	;volatile
 26448                           
 26449                           ;pin_manager.c: 89: LATBbits.LATB2 = 0;
 26450  006A1E  948A               	bcf	3978,2,c	;volatile
 26451                           
 26452                           ;pin_manager.c: 91: LATCbits.LATC2 = 0;
 26453  006A20  948B               	bcf	3979,2,c	;volatile
 26454                           
 26455                           ;pin_manager.c: 92: LATCbits.LATC6 = 0;
 26456  006A22  9C8B               	bcf	3979,6,c	;volatile
 26457                           
 26458                           ;pin_manager.c: 94: LATEbits.LATE2 = 1;
 26459  006A24  848D               	bsf	3981,2,c	;volatile
 26460                           
 26461                           ;pin_manager.c: 96: ANSELAbits.ANSA0 = 0;
 26462  006A26  010F               	movlb	15	; () banked
 26463  006A28  915B               	bcf	91,0,b	;volatile
 26464                           
 26465                           ; BSR set to: 15
 26466                           ;pin_manager.c: 97: ANSELAbits.ANSA1 = 1;
 26467  006A2A  010F               	movlb	15	; () banked
 26468  006A2C  835B               	bsf	91,1,b	;volatile
 26469                           
 26470                           ; BSR set to: 15
 26471                           ;pin_manager.c: 98: ANSELAbits.ANSA2 = 1;
 26472  006A2E  010F               	movlb	15	; () banked
 26473  006A30  855B               	bsf	91,2,b	;volatile
 26474                           
 26475                           ; BSR set to: 15
 26476                           ;pin_manager.c: 99: ANSELAbits.ANSA3 = 1;
 26477  006A32  010F               	movlb	15	; () banked
 26478  006A34  875B               	bsf	91,3,b	;volatile
 26479                           
 26480                           ; BSR set to: 15
 26481                           ;pin_manager.c: 100: ANSELCbits.ANSC7 = 0;
 26482  006A36  010F               	movlb	15	; () banked
 26483  006A38  9F5D               	bcf	93,7,b	;volatile
 26484                           
 26485                           ; BSR set to: 15
 26486                           ;pin_manager.c: 101: ANSELCbits.ANSC6 = 0;
 26487  006A3A  010F               	movlb	15	; () banked
 26488  006A3C  9D5D               	bcf	93,6,b	;volatile
 26489                           
 26490                           ; BSR set to: 15
 26491  006A3E  0012               	return		;funcret
 26492  006A40                     __end_of_PIN_MANAGER_Initialize:
 26493                           	opt stack 0
 26494                           tblptru	equ	0xFF8
 26495                           tblptrh	equ	0xFF7
 26496                           tblptrl	equ	0xFF6
 26497                           tablat	equ	0xFF5
 26498                           prodh	equ	0xFF4
 26499                           prodl	equ	0xFF3
 26500                           intcon	equ	0xFF2
 26501                           intcon3	equ	0xFF0
 26502                           indf0	equ	0xFEF
 26503                           postinc0	equ	0xFEE
 26504                           fsr0h	equ	0xFEA
 26505                           fsr0l	equ	0xFE9
 26506                           wreg	equ	0xFE8
 26507                           indf1	equ	0xFE7
 26508                           postdec1	equ	0xFE5
 26509                           fsr1h	equ	0xFE2
 26510                           fsr1l	equ	0xFE1
 26511                           indf2	equ	0xFDF
 26512                           postinc2	equ	0xFDE
 26513                           postdec2	equ	0xFDD
 26514                           plusw2	equ	0xFDB
 26515                           fsr2h	equ	0xFDA
 26516                           fsr2l	equ	0xFD9
 26517                           status	equ	0xFD8
 26518                           
 26519 ;; *************** function _OSCILLATOR_Initialize *****************
 26520 ;; Defined at:
 26521 ;;		line 106 in file "../Includes/MccGenerated/mcc.c"
 26522 ;; Parameters:    Size  Location     Type
 26523 ;;		None
 26524 ;; Auto vars:     Size  Location     Type
 26525 ;;		None
 26526 ;; Return value:  Size  Location     Type
 26527 ;;                  1    wreg      void 
 26528 ;; Registers used:
 26529 ;;		wreg, status,2
 26530 ;; Tracked objects:
 26531 ;;		On entry : 0/0
 26532 ;;		On exit  : 0/0
 26533 ;;		Unchanged: 0/0
 26534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26535 ;;      Params:         0       0       0       0       0       0       0       0       0
 26536 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26537 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26538 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26539 ;;Total ram usage:        0 bytes
 26540 ;; Hardware stack levels used:    1
 26541 ;; Hardware stack levels required when called:   11
 26542 ;; This function calls:
 26543 ;;		Nothing
 26544 ;; This function is called by:
 26545 ;;		_SYSTEM_Initialize
 26546 ;; This function uses a non-reentrant model
 26547 ;;
 26548                           
 26549                           	psect	text97
 26550  007112                     __ptext97:
 26551                           	opt stack 0
 26552  007112                     _OSCILLATOR_Initialize:
 26553                           	opt stack 18
 26554                           
 26555                           ;mcc.c: 108: OSCTUNE = 0x80;
 26556                           
 26557                           ; BSR set to: 15
 26558                           ;incstack = 0
 26559  007112  0E80               	movlw	128
 26560  007114  6E9B               	movwf	3995,c	;volatile
 26561                           
 26562                           ;mcc.c: 109: OSCCON = 0x70;
 26563  007116  0E70               	movlw	112
 26564  007118  6ED3               	movwf	4051,c	;volatile
 26565                           
 26566                           ;mcc.c: 110: OSCCON2 = 0x10;
 26567  00711A  0E10               	movlw	16
 26568  00711C  6ED2               	movwf	4050,c	;volatile
 26569                           
 26570                           ;mcc.c: 111: while(OSCCON2bits.PLLRDY != 1);
 26571  00711E  D000               	goto	l1232
 26572  007120                     l1232:
 26573  007120  AED2               	btfss	4050,7,c	;volatile
 26574  007122  D001               	goto	u14051
 26575  007124  D001               	goto	u14050
 26576  007126                     u14051:
 26577  007126  D7FC               	goto	l1232
 26578  007128                     u14050:
 26579  007128  D000               	goto	l14481
 26580  00712A                     l14481:
 26581                           
 26582                           ;mcc.c: 112: ACTCON = 0x90;
 26583  00712A  0E90               	movlw	144
 26584  00712C  6EB5               	movwf	4021,c	;volatile
 26585  00712E  0012               	return		;funcret
 26586  007130                     __end_of_OSCILLATOR_Initialize:
 26587                           	opt stack 0
 26588                           tblptru	equ	0xFF8
 26589                           tblptrh	equ	0xFF7
 26590                           tblptrl	equ	0xFF6
 26591                           tablat	equ	0xFF5
 26592                           prodh	equ	0xFF4
 26593                           prodl	equ	0xFF3
 26594                           intcon	equ	0xFF2
 26595                           intcon3	equ	0xFF0
 26596                           indf0	equ	0xFEF
 26597                           postinc0	equ	0xFEE
 26598                           fsr0h	equ	0xFEA
 26599                           fsr0l	equ	0xFE9
 26600                           wreg	equ	0xFE8
 26601                           indf1	equ	0xFE7
 26602                           postdec1	equ	0xFE5
 26603                           fsr1h	equ	0xFE2
 26604                           fsr1l	equ	0xFE1
 26605                           indf2	equ	0xFDF
 26606                           postinc2	equ	0xFDE
 26607                           postdec2	equ	0xFDD
 26608                           plusw2	equ	0xFDB
 26609                           fsr2h	equ	0xFDA
 26610                           fsr2l	equ	0xFD9
 26611                           status	equ	0xFD8
 26612                           
 26613 ;; *************** function _EUSART_Initialize *****************
 26614 ;; Defined at:
 26615 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 26616 ;; Parameters:    Size  Location     Type
 26617 ;;		None
 26618 ;; Auto vars:     Size  Location     Type
 26619 ;;		None
 26620 ;; Return value:  Size  Location     Type
 26621 ;;                  1    wreg      void 
 26622 ;; Registers used:
 26623 ;;		wreg, status,2
 26624 ;; Tracked objects:
 26625 ;;		On entry : 0/0
 26626 ;;		On exit  : 0/0
 26627 ;;		Unchanged: 0/0
 26628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26629 ;;      Params:         0       0       0       0       0       0       0       0       0
 26630 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26631 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26632 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26633 ;;Total ram usage:        0 bytes
 26634 ;; Hardware stack levels used:    1
 26635 ;; Hardware stack levels required when called:   11
 26636 ;; This function calls:
 26637 ;;		Nothing
 26638 ;; This function is called by:
 26639 ;;		_SYSTEM_Initialize
 26640 ;; This function uses a non-reentrant model
 26641 ;;
 26642                           
 26643                           	psect	text98
 26644  006DA0                     __ptext98:
 26645                           	opt stack 0
 26646  006DA0                     _EUSART_Initialize:
 26647                           	opt stack 18
 26648                           
 26649                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 26650                           
 26651                           ;incstack = 0
 26652  006DA0  9A9D               	bcf	3997,5,c	;volatile
 26653                           
 26654                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 26655  006DA2  989D               	bcf	3997,4,c	;volatile
 26656                           
 26657                           ;eusart.c: 85: BAUDCON = 0x48;
 26658  006DA4  0E48               	movlw	72
 26659  006DA6  6EB8               	movwf	4024,c	;volatile
 26660                           
 26661                           ;eusart.c: 88: RCSTA = 0x90;
 26662  006DA8  0E90               	movlw	144
 26663  006DAA  6EAB               	movwf	4011,c	;volatile
 26664                           
 26665                           ;eusart.c: 91: TXSTA = 0x26;
 26666  006DAC  0E26               	movlw	38
 26667  006DAE  6EAC               	movwf	4012,c	;volatile
 26668                           
 26669                           ;eusart.c: 95: SPBRG = 0xD0;
 26670  006DB0  0ED0               	movlw	208
 26671  006DB2  6EAF               	movwf	4015,c	;volatile
 26672                           
 26673                           ;eusart.c: 100: SPBRGH = 0x00;
 26674  006DB4  0E00               	movlw	0
 26675  006DB6  6EB0               	movwf	4016,c	;volatile
 26676                           
 26677                           ;eusart.c: 103: eusartTxHead = 0;
 26678  006DB8  0E00               	movlw	0
 26679  006DBA  0100               	movlb	0	; () banked
 26680  006DBC  6FDB               	movwf	_eusartTxHead& (0+255),b
 26681                           
 26682                           ;eusart.c: 104: eusartTxTail = 0;
 26683  006DBE  0E00               	movlw	0
 26684  006DC0  0100               	movlb	0	; () banked
 26685  006DC2  6FDA               	movwf	_eusartTxTail& (0+255),b
 26686                           
 26687                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 26688  006DC4  0E40               	movlw	64
 26689  006DC6  6E4F               	movwf	_eusartTxBufferRemaining,c	;volatile
 26690                           
 26691                           ;eusart.c: 107: eusartRxHead = 0;
 26692  006DC8  0E00               	movlw	0
 26693  006DCA  0100               	movlb	0	; () banked
 26694  006DCC  6FD9               	movwf	_eusartRxHead& (0+255),b
 26695                           
 26696                           ;eusart.c: 108: eusartRxTail = 0;
 26697  006DCE  0E00               	movlw	0
 26698  006DD0  0100               	movlb	0	; () banked
 26699  006DD2  6FD8               	movwf	_eusartRxTail& (0+255),b
 26700                           
 26701                           ;eusart.c: 109: eusartRxCount = 0;
 26702  006DD4  0E00               	movlw	0
 26703  006DD6  6E57               	movwf	_eusartRxCount,c	;volatile
 26704                           
 26705                           ; BSR set to: 0
 26706                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 26707  006DD8  8A9D               	bsf	3997,5,c	;volatile
 26708                           
 26709                           ; BSR set to: 0
 26710                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 26711  006DDA  88AB               	bsf	4011,4,c	;volatile
 26712                           
 26713                           ; BSR set to: 0
 26714  006DDC  0012               	return		;funcret
 26715  006DDE                     __end_of_EUSART_Initialize:
 26716                           	opt stack 0
 26717                           tblptru	equ	0xFF8
 26718                           tblptrh	equ	0xFF7
 26719                           tblptrl	equ	0xFF6
 26720                           tablat	equ	0xFF5
 26721                           prodh	equ	0xFF4
 26722                           prodl	equ	0xFF3
 26723                           intcon	equ	0xFF2
 26724                           intcon3	equ	0xFF0
 26725                           indf0	equ	0xFEF
 26726                           postinc0	equ	0xFEE
 26727                           fsr0h	equ	0xFEA
 26728                           fsr0l	equ	0xFE9
 26729                           wreg	equ	0xFE8
 26730                           indf1	equ	0xFE7
 26731                           postdec1	equ	0xFE5
 26732                           fsr1h	equ	0xFE2
 26733                           fsr1l	equ	0xFE1
 26734                           indf2	equ	0xFDF
 26735                           postinc2	equ	0xFDE
 26736                           postdec2	equ	0xFDD
 26737                           plusw2	equ	0xFDB
 26738                           fsr2h	equ	0xFDA
 26739                           fsr2l	equ	0xFD9
 26740                           status	equ	0xFD8
 26741                           
 26742 ;; *************** function _CMP1_Initialize *****************
 26743 ;; Defined at:
 26744 ;;		line 58 in file "../Includes/MccGenerated/cmp1.c"
 26745 ;; Parameters:    Size  Location     Type
 26746 ;;		None
 26747 ;; Auto vars:     Size  Location     Type
 26748 ;;		None
 26749 ;; Return value:  Size  Location     Type
 26750 ;;                  1    wreg      void 
 26751 ;; Registers used:
 26752 ;;		wreg, status,2
 26753 ;; Tracked objects:
 26754 ;;		On entry : 0/0
 26755 ;;		On exit  : 0/0
 26756 ;;		Unchanged: 0/0
 26757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26758 ;;      Params:         0       0       0       0       0       0       0       0       0
 26759 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26760 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26761 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26762 ;;Total ram usage:        0 bytes
 26763 ;; Hardware stack levels used:    1
 26764 ;; Hardware stack levels required when called:   11
 26765 ;; This function calls:
 26766 ;;		Nothing
 26767 ;; This function is called by:
 26768 ;;		_SYSTEM_Initialize
 26769 ;; This function uses a non-reentrant model
 26770 ;;
 26771                           
 26772                           	psect	text99
 26773  007256                     __ptext99:
 26774                           	opt stack 0
 26775  007256                     _CMP1_Initialize:
 26776                           	opt stack 18
 26777                           
 26778                           ;cmp1.c: 65: PIE2bits.C1IE = 0;
 26779                           
 26780                           ; BSR set to: 0
 26781                           ;incstack = 0
 26782  007256  9CA0               	bcf	4000,6,c	;volatile
 26783                           
 26784                           ;cmp1.c: 70: CM1CON0 = 0x9C;
 26785  007258  0E9C               	movlw	156
 26786  00725A  6E98               	movwf	3992,c	;volatile
 26787                           
 26788                           ;cmp1.c: 73: CM2CON1bits.C1RSEL = 0x1;
 26789  00725C  8A9A               	bsf	3994,5,c	;volatile
 26790                           
 26791                           ;cmp1.c: 76: CM2CON1bits.C1SYNC = 0x0;
 26792  00725E  929A               	bcf	3994,1,c	;volatile
 26793                           
 26794                           ;cmp1.c: 79: CM2CON1bits.C1HYS = 0x0;
 26795  007260  969A               	bcf	3994,3,c	;volatile
 26796                           
 26797                           ;cmp1.c: 83: PIR2bits.C1IF = 0;
 26798  007262  9CA1               	bcf	4001,6,c	;volatile
 26799                           
 26800                           ;cmp1.c: 86: PIE2bits.C1IE = 0;
 26801  007264  9CA0               	bcf	4000,6,c	;volatile
 26802  007266  0012               	return		;funcret
 26803  007268                     __end_of_CMP1_Initialize:
 26804                           	opt stack 0
 26805                           tblptru	equ	0xFF8
 26806                           tblptrh	equ	0xFF7
 26807                           tblptrl	equ	0xFF6
 26808                           tablat	equ	0xFF5
 26809                           prodh	equ	0xFF4
 26810                           prodl	equ	0xFF3
 26811                           intcon	equ	0xFF2
 26812                           intcon3	equ	0xFF0
 26813                           indf0	equ	0xFEF
 26814                           postinc0	equ	0xFEE
 26815                           fsr0h	equ	0xFEA
 26816                           fsr0l	equ	0xFE9
 26817                           wreg	equ	0xFE8
 26818                           indf1	equ	0xFE7
 26819                           postdec1	equ	0xFE5
 26820                           fsr1h	equ	0xFE2
 26821                           fsr1l	equ	0xFE1
 26822                           indf2	equ	0xFDF
 26823                           postinc2	equ	0xFDE
 26824                           postdec2	equ	0xFDD
 26825                           plusw2	equ	0xFDB
 26826                           fsr2h	equ	0xFDA
 26827                           fsr2l	equ	0xFD9
 26828                           status	equ	0xFD8
 26829                           
 26830 ;; *************** function _ADC_Initialize *****************
 26831 ;; Defined at:
 26832 ;;		line 65 in file "../Includes/MccGenerated/adc.c"
 26833 ;; Parameters:    Size  Location     Type
 26834 ;;		None
 26835 ;; Auto vars:     Size  Location     Type
 26836 ;;		None
 26837 ;; Return value:  Size  Location     Type
 26838 ;;                  1    wreg      void 
 26839 ;; Registers used:
 26840 ;;		wreg, status,2
 26841 ;; Tracked objects:
 26842 ;;		On entry : 0/0
 26843 ;;		On exit  : 0/0
 26844 ;;		Unchanged: 0/0
 26845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26846 ;;      Params:         0       0       0       0       0       0       0       0       0
 26847 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26848 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26849 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26850 ;;Total ram usage:        0 bytes
 26851 ;; Hardware stack levels used:    1
 26852 ;; Hardware stack levels required when called:   11
 26853 ;; This function calls:
 26854 ;;		Nothing
 26855 ;; This function is called by:
 26856 ;;		_SYSTEM_Initialize
 26857 ;; This function uses a non-reentrant model
 26858 ;;
 26859                           
 26860                           	psect	text100
 26861  007180                     __ptext100:
 26862                           	opt stack 0
 26863  007180                     _ADC_Initialize:
 26864                           	opt stack 18
 26865                           
 26866                           ;adc.c: 68: VREFCON0 = 0b10100000;
 26867                           
 26868                           ;incstack = 0
 26869  007180  0EA0               	movlw	160
 26870  007182  6E7D               	movwf	3965,c	;volatile
 26871                           
 26872                           ;adc.c: 70: ADCON0 = 0x01;
 26873  007184  0E01               	movlw	1
 26874  007186  6EC2               	movwf	4034,c	;volatile
 26875                           
 26876                           ;adc.c: 73: ADCON1 = 0x08;
 26877  007188  0E08               	movlw	8
 26878  00718A  6EC1               	movwf	4033,c	;volatile
 26879                           
 26880                           ;adc.c: 76: ADCON2 = 0b10001110;
 26881  00718C  0E8E               	movlw	142
 26882  00718E  6EC0               	movwf	4032,c	;volatile
 26883                           
 26884                           ;adc.c: 79: ADRESL = 0x00;
 26885  007190  0E00               	movlw	0
 26886  007192  6EC3               	movwf	4035,c	;volatile
 26887                           
 26888                           ;adc.c: 82: ADRESH = 0x00;
 26889  007194  0E00               	movlw	0
 26890  007196  6EC4               	movwf	4036,c	;volatile
 26891  007198  0012               	return		;funcret
 26892  00719A                     __end_of_ADC_Initialize:
 26893                           	opt stack 0
 26894                           tblptru	equ	0xFF8
 26895                           tblptrh	equ	0xFF7
 26896                           tblptrl	equ	0xFF6
 26897                           tablat	equ	0xFF5
 26898                           prodh	equ	0xFF4
 26899                           prodl	equ	0xFF3
 26900                           intcon	equ	0xFF2
 26901                           intcon3	equ	0xFF0
 26902                           indf0	equ	0xFEF
 26903                           postinc0	equ	0xFEE
 26904                           fsr0h	equ	0xFEA
 26905                           fsr0l	equ	0xFE9
 26906                           wreg	equ	0xFE8
 26907                           indf1	equ	0xFE7
 26908                           postdec1	equ	0xFE5
 26909                           fsr1h	equ	0xFE2
 26910                           fsr1l	equ	0xFE1
 26911                           indf2	equ	0xFDF
 26912                           postinc2	equ	0xFDE
 26913                           postdec2	equ	0xFDD
 26914                           plusw2	equ	0xFDB
 26915                           fsr2h	equ	0xFDA
 26916                           fsr2l	equ	0xFD9
 26917                           status	equ	0xFD8
 26918                           
 26919 ;; *************** function _MOTEapp_handlerState *****************
 26920 ;; Defined at:
 26921 ;;		line 181 in file "../Includes/Board/MOTEapp.c"
 26922 ;; Parameters:    Size  Location     Type
 26923 ;;  state           1    wreg     enum E5860
 26924 ;; Auto vars:     Size  Location     Type
 26925 ;;  state           1    0[BANK0 ] enum E5860
 26926 ;; Return value:  Size  Location     Type
 26927 ;;                  1    wreg      void 
 26928 ;; Registers used:
 26929 ;;		wreg
 26930 ;; Tracked objects:
 26931 ;;		On entry : 0/0
 26932 ;;		On exit  : 0/0
 26933 ;;		Unchanged: 0/0
 26934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26935 ;;      Params:         0       0       0       0       0       0       0       0       0
 26936 ;;      Locals:         0       1       0       0       0       0       0       0       0
 26937 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26938 ;;      Totals:         0       1       0       0       0       0       0       0       0
 26939 ;;Total ram usage:        1 bytes
 26940 ;; Hardware stack levels used:    1
 26941 ;; Hardware stack levels required when called:   11
 26942 ;; This function calls:
 26943 ;;		Nothing
 26944 ;; This function is called by:
 26945 ;;		_main
 26946 ;; This function uses a non-reentrant model
 26947 ;;
 26948                           
 26949                           	psect	text101
 26950  0072B2                     __ptext101:
 26951                           	opt stack 0
 26952  0072B2                     _MOTEapp_handlerState:
 26953                           	opt stack 19
 26954                           
 26955                           ;incstack = 0
 26956                           ;MOTEapp_handlerState@state stored from wreg
 26957  0072B2  0100               	movlb	0	; () banked
 26958  0072B4  6F60               	movwf	MOTEapp_handlerState@state& (0+255),b
 26959                           
 26960                           ;MOTEapp.c: 183: moteState = state;
 26961  0072B6  C060  F0FE         	movff	MOTEapp_handlerState@state,_moteState
 26962  0072BA  0012               	return		;funcret
 26963  0072BC                     __end_of_MOTEapp_handlerState:
 26964                           	opt stack 0
 26965                           tblptru	equ	0xFF8
 26966                           tblptrh	equ	0xFF7
 26967                           tblptrl	equ	0xFF6
 26968                           tablat	equ	0xFF5
 26969                           prodh	equ	0xFF4
 26970                           prodl	equ	0xFF3
 26971                           intcon	equ	0xFF2
 26972                           intcon3	equ	0xFF0
 26973                           indf0	equ	0xFEF
 26974                           postinc0	equ	0xFEE
 26975                           fsr0h	equ	0xFEA
 26976                           fsr0l	equ	0xFE9
 26977                           wreg	equ	0xFE8
 26978                           indf1	equ	0xFE7
 26979                           postdec1	equ	0xFE5
 26980                           fsr1h	equ	0xFE2
 26981                           fsr1l	equ	0xFE1
 26982                           indf2	equ	0xFDF
 26983                           postinc2	equ	0xFDE
 26984                           postdec2	equ	0xFDD
 26985                           plusw2	equ	0xFDB
 26986                           fsr2h	equ	0xFDA
 26987                           fsr2l	equ	0xFD9
 26988                           status	equ	0xFD8
 26989                           
 26990 ;; *************** function _DATAEE_ReadByte *****************
 26991 ;; Defined at:
 26992 ;;		line 188 in file "../Includes/MccGenerated/memory.c"
 26993 ;; Parameters:    Size  Location     Type
 26994 ;;  bAdd            1    wreg     unsigned char 
 26995 ;; Auto vars:     Size  Location     Type
 26996 ;;  bAdd            1    0[BANK0 ] unsigned char 
 26997 ;; Return value:  Size  Location     Type
 26998 ;;                  1    wreg      unsigned char 
 26999 ;; Registers used:
 27000 ;;		wreg, status,2
 27001 ;; Tracked objects:
 27002 ;;		On entry : 0/0
 27003 ;;		On exit  : 0/0
 27004 ;;		Unchanged: 0/0
 27005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27006 ;;      Params:         0       0       0       0       0       0       0       0       0
 27007 ;;      Locals:         0       1       0       0       0       0       0       0       0
 27008 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27009 ;;      Totals:         0       1       0       0       0       0       0       0       0
 27010 ;;Total ram usage:        1 bytes
 27011 ;; Hardware stack levels used:    1
 27012 ;; Hardware stack levels required when called:   11
 27013 ;; This function calls:
 27014 ;;		Nothing
 27015 ;; This function is called by:
 27016 ;;		_main
 27017 ;; This function uses a non-reentrant model
 27018 ;;
 27019                           
 27020                           	psect	text102
 27021  0071CA                     __ptext102:
 27022                           	opt stack 0
 27023  0071CA                     _DATAEE_ReadByte:
 27024                           	opt stack 19
 27025                           
 27026                           ;incstack = 0
 27027                           ;DATAEE_ReadByte@bAdd stored from wreg
 27028  0071CA  0100               	movlb	0	; () banked
 27029  0071CC  6F60               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 27030                           
 27031                           ;memory.c: 190: EEADR = (bAdd & 0xFF);
 27032  0071CE  C060  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
 27033                           
 27034                           ;memory.c: 191: EECON1bits.CFGS = 0;
 27035  0071D2  9CA6               	bcf	4006,6,c	;volatile
 27036                           
 27037                           ;memory.c: 192: EECON1bits.EEPGD = 0;
 27038  0071D4  9EA6               	bcf	4006,7,c	;volatile
 27039                           
 27040                           ;memory.c: 193: EECON1bits.RD = 1;
 27041  0071D6  80A6               	bsf	4006,0,c	;volatile
 27042                           
 27043                           ;memory.c: 194: __nop();
 27044  0071D8  F000               	nop	
 27045                           
 27046                           ;memory.c: 195: __nop();
 27047  0071DA  F000               	nop	
 27048                           
 27049                           ;memory.c: 197: return (EEDATA);
 27050  0071DC  50A8               	movf	4008,w,c	;volatile
 27051  0071DE  D000               	goto	l1450
 27052  0071E0                     l1450:
 27053  0071E0  0012               	return		;funcret
 27054  0071E2                     __end_of_DATAEE_ReadByte:
 27055                           	opt stack 0
 27056                           tblptru	equ	0xFF8
 27057                           tblptrh	equ	0xFF7
 27058                           tblptrl	equ	0xFF6
 27059                           tablat	equ	0xFF5
 27060                           prodh	equ	0xFF4
 27061                           prodl	equ	0xFF3
 27062                           intcon	equ	0xFF2
 27063                           intcon3	equ	0xFF0
 27064                           indf0	equ	0xFEF
 27065                           postinc0	equ	0xFEE
 27066                           fsr0h	equ	0xFEA
 27067                           fsr0l	equ	0xFE9
 27068                           wreg	equ	0xFE8
 27069                           indf1	equ	0xFE7
 27070                           postdec1	equ	0xFE5
 27071                           fsr1h	equ	0xFE2
 27072                           fsr1l	equ	0xFE1
 27073                           indf2	equ	0xFDF
 27074                           postinc2	equ	0xFDE
 27075                           postdec2	equ	0xFDD
 27076                           plusw2	equ	0xFDB
 27077                           fsr2h	equ	0xFDA
 27078                           fsr2l	equ	0xFD9
 27079                           status	equ	0xFD8
 27080                           
 27081 ;; *************** function _INTERRUPT_InterruptManager *****************
 27082 ;; Defined at:
 27083 ;;		line 55 in file "../Includes/MccGenerated/interrupt_manager.c"
 27084 ;; Parameters:    Size  Location     Type
 27085 ;;		None
 27086 ;; Auto vars:     Size  Location     Type
 27087 ;;		None
 27088 ;; Return value:  Size  Location     Type
 27089 ;;                  1    wreg      void 
 27090 ;; Registers used:
 27091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 27092 ;; Tracked objects:
 27093 ;;		On entry : 0/0
 27094 ;;		On exit  : 0/0
 27095 ;;		Unchanged: 0/0
 27096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27097 ;;      Params:         0       0       0       0       0       0       0       0       0
 27098 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27099 ;;      Temps:         14       0       0       0       0       0       0       0       0
 27100 ;;      Totals:        14       0       0       0       0       0       0       0       0
 27101 ;;Total ram usage:       14 bytes
 27102 ;; Hardware stack levels used:    1
 27103 ;; Hardware stack levels required when called:   10
 27104 ;; This function calls:
 27105 ;;		_CMP1_ISR
 27106 ;;		_EUSART_Receive_ISR
 27107 ;;		_EUSART_Transmit_ISR
 27108 ;;		_TMR1_ISR
 27109 ;;		_TMR3_ISR
 27110 ;;		_TMRapp_Tick
 27111 ;;		_USBDeviceTasks
 27112 ;;		_USBapp_setrxByteFlag
 27113 ;; This function is called by:
 27114 ;;		Interrupt level 2
 27115 ;; This function uses a non-reentrant model
 27116 ;;
 27117                           
 27118                           	psect	intcode
 27119  000008                     __pintcode:
 27120                           	opt stack 0
 27121  000008                     _INTERRUPT_InterruptManager:
 27122                           	opt stack 11
 27123                           
 27124                           ;incstack = 0
 27125  000008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 27126  00000A  CFFA F020          	movff	pclath,??_INTERRUPT_InterruptManager
 27127  00000E  CFFB F021          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 27128  000012  CFE9 F022          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 27129  000016  CFEA F023          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 27130  00001A  CFE1 F024          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 27131  00001E  CFE2 F025          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 27132  000022  CFD9 F026          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 27133  000026  CFDA F027          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 27134  00002A  CFF3 F028          	movff	prodl,??_INTERRUPT_InterruptManager+8
 27135  00002E  CFF4 F029          	movff	prodh,??_INTERRUPT_InterruptManager+9
 27136  000032  CFF6 F02A          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 27137  000036  CFF7 F02B          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 27138  00003A  CFF8 F02C          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 27139  00003E  CFF5 F02D          	movff	tablat,??_INTERRUPT_InterruptManager+13
 27140                           
 27141                           ;interrupt_manager.c: 58: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 27142  000042  A09D               	btfss	3997,0,c	;volatile
 27143  000044  D001               	goto	i2u1045_41
 27144  000046  D001               	goto	i2u1045_40
 27145  000048                     i2u1045_41:
 27146  000048  D009               	goto	i2l11613
 27147  00004A                     i2u1045_40:
 27148  00004A  A09E               	btfss	3998,0,c	;volatile
 27149  00004C  D001               	goto	i2u1046_41
 27150  00004E  D001               	goto	i2u1046_40
 27151  000050                     i2u1046_41:
 27152  000050  D005               	goto	i2l11613
 27153  000052                     i2u1046_40:
 27154                           
 27155                           ;interrupt_manager.c: 59: {
 27156                           ;interrupt_manager.c: 60: TMR1_ISR();
 27157  000052  EC49  F039         	call	_TMR1_ISR	;wreg free
 27158                           
 27159                           ;interrupt_manager.c: 62: TMRapp_Tick();
 27160  000056  EC7D  F039         	call	_TMRapp_Tick	;wreg free
 27161  00005A  D000               	goto	i2l11613
 27162  00005C                     i2l11613:
 27163                           
 27164                           ;interrupt_manager.c: 63: }
 27165                           ;interrupt_manager.c: 64: if(PIE2bits.TMR3IE == 1 && PIR2bits.TMR3IF == 1)
 27166  00005C  A2A0               	btfss	4000,1,c	;volatile
 27167  00005E  D001               	goto	i2u1047_41
 27168  000060  D001               	goto	i2u1047_40
 27169  000062                     i2u1047_41:
 27170  000062  D007               	goto	i2l1190
 27171  000064                     i2u1047_40:
 27172  000064  A2A1               	btfss	4001,1,c	;volatile
 27173  000066  D001               	goto	i2u1048_41
 27174  000068  D001               	goto	i2u1048_40
 27175  00006A                     i2u1048_41:
 27176  00006A  D003               	goto	i2l1190
 27177  00006C                     i2u1048_40:
 27178                           
 27179                           ;interrupt_manager.c: 65: {
 27180                           ;interrupt_manager.c: 66: TMR3_ISR();
 27181  00006C  EC46  F038         	call	_TMR3_ISR	;wreg free
 27182                           
 27183                           ;interrupt_manager.c: 67: }
 27184  000070  D038               	goto	i2l1200
 27185  000072                     i2l1190:
 27186                           
 27187                           ;interrupt_manager.c: 68: else if( (PIE1bits.RCIE == 1) && (PIR1bits.RCIF == 1) )
 27188  000072  AA9D               	btfss	3997,5,c	;volatile
 27189  000074  D001               	goto	i2u1049_41
 27190  000076  D001               	goto	i2u1049_40
 27191  000078                     i2u1049_41:
 27192  000078  D009               	goto	i2l1192
 27193  00007A                     i2u1049_40:
 27194  00007A  AA9E               	btfss	3998,5,c	;volatile
 27195  00007C  D001               	goto	i2u1050_41
 27196  00007E  D001               	goto	i2u1050_40
 27197  000080                     i2u1050_41:
 27198  000080  D005               	goto	i2l1192
 27199  000082                     i2u1050_40:
 27200                           
 27201                           ;interrupt_manager.c: 69: {
 27202                           ;interrupt_manager.c: 70: USBapp_setrxByteFlag();
 27203  000082  EC7A  F039         	call	_USBapp_setrxByteFlag	;wreg free
 27204                           
 27205                           ;interrupt_manager.c: 71: EUSART_Receive_ISR();
 27206  000086  EC70  F036         	call	_EUSART_Receive_ISR	;wreg free
 27207                           
 27208                           ;interrupt_manager.c: 72: }
 27209  00008A  D02B               	goto	i2l1200
 27210  00008C                     i2l1192:
 27211                           
 27212                           ;interrupt_manager.c: 73: else if( (PIE1bits.TXIE == 1) && (PIR1bits.TXIF == 1) )
 27213  00008C  A89D               	btfss	3997,4,c	;volatile
 27214  00008E  D001               	goto	i2u1051_41
 27215  000090  D001               	goto	i2u1051_40
 27216  000092                     i2u1051_41:
 27217  000092  D007               	goto	i2l1194
 27218  000094                     i2u1051_40:
 27219  000094  A89E               	btfss	3998,4,c	;volatile
 27220  000096  D001               	goto	i2u1052_41
 27221  000098  D001               	goto	i2u1052_40
 27222  00009A                     i2u1052_41:
 27223  00009A  D003               	goto	i2l1194
 27224  00009C                     i2u1052_40:
 27225                           
 27226                           ;interrupt_manager.c: 74: {
 27227                           ;interrupt_manager.c: 75: EUSART_Transmit_ISR();
 27228  00009C  EC4F  F036         	call	_EUSART_Transmit_ISR	;wreg free
 27229                           
 27230                           ;interrupt_manager.c: 76: }
 27231  0000A0  D020               	goto	i2l1200
 27232  0000A2                     i2l1194:
 27233                           
 27234                           ;interrupt_manager.c: 77: else if(PIE2bits.C1IE == 1 && PIR2bits.C1IF == 1)
 27235  0000A2  ACA0               	btfss	4000,6,c	;volatile
 27236  0000A4  D001               	goto	i2u1053_41
 27237  0000A6  D001               	goto	i2u1053_40
 27238  0000A8                     i2u1053_41:
 27239  0000A8  D007               	goto	i2l1196
 27240  0000AA                     i2u1053_40:
 27241  0000AA  ACA1               	btfss	4001,6,c	;volatile
 27242  0000AC  D001               	goto	i2u1054_41
 27243  0000AE  D001               	goto	i2u1054_40
 27244  0000B0                     i2u1054_41:
 27245  0000B0  D003               	goto	i2l1196
 27246  0000B2                     i2u1054_40:
 27247                           
 27248                           ;interrupt_manager.c: 78: {
 27249                           ;interrupt_manager.c: 79: CMP1_ISR();
 27250  0000B2  EC86  F039         	call	_CMP1_ISR	;wreg free
 27251                           
 27252                           ;interrupt_manager.c: 80: }
 27253  0000B6  D015               	goto	i2l1200
 27254  0000B8                     i2l1196:
 27255                           
 27256                           ;interrupt_manager.c: 81: else if(INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1 && IOCB
      +                          bits.IOCB7 == 1)
 27257  0000B8  A6F2               	btfss	intcon,3,c	;volatile
 27258  0000BA  D001               	goto	i2u1055_41
 27259  0000BC  D001               	goto	i2u1055_40
 27260  0000BE                     i2u1055_41:
 27261  0000BE  D00A               	goto	i2l11639
 27262  0000C0                     i2u1055_40:
 27263  0000C0  A0F2               	btfss	intcon,0,c	;volatile
 27264  0000C2  D001               	goto	i2u1056_41
 27265  0000C4  D001               	goto	i2u1056_40
 27266  0000C6                     i2u1056_41:
 27267  0000C6  D006               	goto	i2l11639
 27268  0000C8                     i2u1056_40:
 27269  0000C8  AE86               	btfss	3974,7,c	;volatile
 27270  0000CA  D001               	goto	i2u1057_41
 27271  0000CC  D001               	goto	i2u1057_40
 27272  0000CE                     i2u1057_41:
 27273  0000CE  D002               	goto	i2l11639
 27274  0000D0                     i2u1057_40:
 27275  0000D0  D008               	goto	i2l1200
 27276                           
 27277                           ;interrupt_manager.c: 82: {
 27278                           ;interrupt_manager.c: 84: }
 27279  0000D2  D007               	goto	i2l1200
 27280  0000D4                     i2l11639:
 27281                           
 27282                           ;interrupt_manager.c: 85: else
 27283                           ;interrupt_manager.c: 86: {
 27284                           ;interrupt_manager.c: 88: USBDeviceTasks();
 27285  0000D4  ECFC  F018         	call	_USBDeviceTasks	;wreg free
 27286  0000D8  D004               	goto	i2l1200
 27287  0000DA  D003               	goto	i2l1200
 27288  0000DC  D002               	goto	i2l1200
 27289  0000DE  D001               	goto	i2l1200
 27290  0000E0  D000               	goto	i2l1200
 27291  0000E2                     i2l1200:
 27292  0000E2  C02D  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 27293  0000E6  C02C  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 27294  0000EA  C02B  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 27295  0000EE  C02A  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 27296  0000F2  C029  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 27297  0000F6  C028  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 27298  0000FA  C027  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 27299  0000FE  C026  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 27300  000102  C025  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 27301  000106  C024  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 27302  00010A  C023  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 27303  00010E  C022  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 27304  000112  C021  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 27305  000116  C020  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 27306  00011A  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 27307  00011C  0011               	retfie		f
 27308  00011E                     __end_of_INTERRUPT_InterruptManager:
 27309                           	opt stack 0
 27310                           pclatu	equ	0xFFB
 27311                           pclath	equ	0xFFA
 27312                           tblptru	equ	0xFF8
 27313                           tblptrh	equ	0xFF7
 27314                           tblptrl	equ	0xFF6
 27315                           tablat	equ	0xFF5
 27316                           prodh	equ	0xFF4
 27317                           prodl	equ	0xFF3
 27318                           intcon	equ	0xFF2
 27319                           intcon3	equ	0xFF0
 27320                           indf0	equ	0xFEF
 27321                           postinc0	equ	0xFEE
 27322                           fsr0h	equ	0xFEA
 27323                           fsr0l	equ	0xFE9
 27324                           wreg	equ	0xFE8
 27325                           indf1	equ	0xFE7
 27326                           postdec1	equ	0xFE5
 27327                           fsr1h	equ	0xFE2
 27328                           fsr1l	equ	0xFE1
 27329                           indf2	equ	0xFDF
 27330                           postinc2	equ	0xFDE
 27331                           postdec2	equ	0xFDD
 27332                           plusw2	equ	0xFDB
 27333                           fsr2h	equ	0xFDA
 27334                           fsr2l	equ	0xFD9
 27335                           status	equ	0xFD8
 27336                           
 27337 ;; *************** function _USBapp_setrxByteFlag *****************
 27338 ;; Defined at:
 27339 ;;		line 263 in file "../Includes/Board/USBapp.c"
 27340 ;; Parameters:    Size  Location     Type
 27341 ;;		None
 27342 ;; Auto vars:     Size  Location     Type
 27343 ;;		None
 27344 ;; Return value:  Size  Location     Type
 27345 ;;                  1    wreg      void 
 27346 ;; Registers used:
 27347 ;;		wreg, status,2
 27348 ;; Tracked objects:
 27349 ;;		On entry : 0/0
 27350 ;;		On exit  : 0/0
 27351 ;;		Unchanged: 0/0
 27352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27353 ;;      Params:         0       0       0       0       0       0       0       0       0
 27354 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27355 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27356 ;;      Totals:         0       0       0       0       0       0       0       0       0
 27357 ;;Total ram usage:        0 bytes
 27358 ;; Hardware stack levels used:    1
 27359 ;; This function calls:
 27360 ;;		Nothing
 27361 ;; This function is called by:
 27362 ;;		_INTERRUPT_InterruptManager
 27363 ;; This function uses a non-reentrant model
 27364 ;;
 27365                           
 27366                           	psect	text104
 27367  0072F4                     __ptext104:
 27368                           	opt stack 0
 27369  0072F4                     _USBapp_setrxByteFlag:
 27370                           	opt stack 20
 27371                           
 27372                           ;USBapp.c: 265: rxByteFlag = 1;
 27373                           
 27374                           ;incstack = 0
 27375  0072F4  0E01               	movlw	1
 27376  0072F6  6E54               	movwf	_rxByteFlag,c	;volatile
 27377  0072F8  0012               	return		;funcret
 27378  0072FA                     __end_of_USBapp_setrxByteFlag:
 27379                           	opt stack 0
 27380                           pclatu	equ	0xFFB
 27381                           pclath	equ	0xFFA
 27382                           tblptru	equ	0xFF8
 27383                           tblptrh	equ	0xFF7
 27384                           tblptrl	equ	0xFF6
 27385                           tablat	equ	0xFF5
 27386                           prodh	equ	0xFF4
 27387                           prodl	equ	0xFF3
 27388                           intcon	equ	0xFF2
 27389                           intcon3	equ	0xFF0
 27390                           indf0	equ	0xFEF
 27391                           postinc0	equ	0xFEE
 27392                           fsr0h	equ	0xFEA
 27393                           fsr0l	equ	0xFE9
 27394                           wreg	equ	0xFE8
 27395                           indf1	equ	0xFE7
 27396                           postdec1	equ	0xFE5
 27397                           fsr1h	equ	0xFE2
 27398                           fsr1l	equ	0xFE1
 27399                           indf2	equ	0xFDF
 27400                           postinc2	equ	0xFDE
 27401                           postdec2	equ	0xFDD
 27402                           plusw2	equ	0xFDB
 27403                           fsr2h	equ	0xFDA
 27404                           fsr2l	equ	0xFD9
 27405                           status	equ	0xFD8
 27406                           
 27407 ;; *************** function _USBDeviceTasks *****************
 27408 ;; Defined at:
 27409 ;;		line 428 in file "../Includes/Usb/Framework/usb_device.c"
 27410 ;; Parameters:    Size  Location     Type
 27411 ;;		None
 27412 ;; Auto vars:     Size  Location     Type
 27413 ;;  i               1   30[COMRAM] unsigned char 
 27414 ;; Return value:  Size  Location     Type
 27415 ;;                  1    wreg      void 
 27416 ;; Registers used:
 27417 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 27418 ;; Tracked objects:
 27419 ;;		On entry : 0/0
 27420 ;;		On exit  : 0/0
 27421 ;;		Unchanged: 0/0
 27422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27423 ;;      Params:         0       0       0       0       0       0       0       0       0
 27424 ;;      Locals:         1       0       0       0       0       0       0       0       0
 27425 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27426 ;;      Totals:         1       0       0       0       0       0       0       0       0
 27427 ;;Total ram usage:        1 bytes
 27428 ;; Hardware stack levels used:    1
 27429 ;; Hardware stack levels required when called:    9
 27430 ;; This function calls:
 27431 ;;		_USBCtrlEPAllowStatusStage
 27432 ;;		_USBCtrlEPService
 27433 ;;		_USBStallHandler
 27434 ;;		_USBSuspend
 27435 ;;		_USBWakeFromSuspend
 27436 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27437 ;;		i2_USBDeviceInit
 27438 ;; This function is called by:
 27439 ;;		_INTERRUPT_InterruptManager
 27440 ;; This function uses a non-reentrant model
 27441 ;;
 27442                           
 27443                           	psect	text105
 27444  0031F8                     __ptext105:
 27445                           	opt stack 0
 27446  0031F8                     _USBDeviceTasks:
 27447                           	opt stack 11
 27448                           
 27449                           ;usb_device.c: 430: uint8_t i;
 27450                           ;usb_device.c: 432: if(USBDeviceState == ATTACHED_STATE)
 27451                           
 27452                           ;incstack = 0
 27453  0031F8  0100               	movlb	0	; () banked
 27454  0031FA  05DE               	decf	_USBDeviceState& (0+255),w,b	;volatile
 27455  0031FC  A4D8               	btfss	status,2,c
 27456  0031FE  D001               	goto	i2u1008_41
 27457  003200  D001               	goto	i2u1008_40
 27458  003202                     i2u1008_41:
 27459  003202  D00D               	goto	i2l11325
 27460  003204                     i2u1008_40:
 27461                           
 27462                           ; BSR set to: 0
 27463                           ;usb_device.c: 433: {
 27464                           ;usb_device.c: 443: if(!UCONbits.SE0)
 27465  003204  BA60               	btfsc	3936,5,c	;volatile
 27466  003206  D001               	goto	i2u1009_41
 27467  003208  D001               	goto	i2u1009_40
 27468  00320A                     i2u1009_41:
 27469  00320A  D009               	goto	i2l11325
 27470  00320C                     i2u1009_40:
 27471                           
 27472                           ; BSR set to: 0
 27473                           ;usb_device.c: 444: {
 27474                           ;usb_device.c: 445: {UIR = 0;};
 27475  00320C  0E00               	movlw	0
 27476  00320E  6E65               	movwf	3941,c	;volatile
 27477                           
 27478                           ; BSR set to: 0
 27479                           ;usb_device.c: 446: UIEbits.URSTIE = 1;
 27480  003210  8064               	bsf	3940,0,c	;volatile
 27481                           
 27482                           ; BSR set to: 0
 27483                           ;usb_device.c: 447: UIEbits.IDLEIE = 1;
 27484  003212  8864               	bsf	3940,4,c	;volatile
 27485                           
 27486                           ;usb_device.c: 448: USBDeviceState = POWERED_STATE;
 27487  003214  0E02               	movlw	2
 27488  003216  0100               	movlb	0	; () banked
 27489  003218  6FDE               	movwf	_USBDeviceState& (0+255),b	;volatile
 27490  00321A  D001               	goto	i2l11325
 27491                           
 27492                           ; BSR set to: 0
 27493  00321C  D000               	goto	i2l11325
 27494  00321E                     i2l11325:
 27495                           
 27496                           ; BSR set to: 0
 27497                           ;usb_device.c: 449: }
 27498                           ;usb_device.c: 450: }
 27499                           ;usb_device.c: 454: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 27500  00321E  A465               	btfss	3941,2,c	;volatile
 27501  003220  D001               	goto	i2u1010_41
 27502  003222  D001               	goto	i2u1010_40
 27503  003224                     i2u1010_41:
 27504  003224  D008               	goto	i2l11333
 27505  003226                     i2u1010_40:
 27506                           
 27507                           ; BSR set to: 0
 27508  003226  A464               	btfss	3940,2,c	;volatile
 27509  003228  D001               	goto	i2u1011_41
 27510  00322A  D001               	goto	i2u1011_40
 27511  00322C                     i2u1011_41:
 27512  00322C  D004               	goto	i2l11333
 27513  00322E                     i2u1011_40:
 27514                           
 27515                           ; BSR set to: 0
 27516                           ;usb_device.c: 455: {
 27517                           ;usb_device.c: 456: (UIR &= 0xFB);
 27518  00322E  9465               	bcf	3941,2,c	;volatile
 27519                           
 27520                           ; BSR set to: 0
 27521                           ;usb_device.c: 457: USBWakeFromSuspend();
 27522  003230  EC9E  F037         	call	_USBWakeFromSuspend	;wreg free
 27523  003234  D000               	goto	i2l11333
 27524  003236                     i2l11333:
 27525                           
 27526                           ;usb_device.c: 458: }
 27527                           ;usb_device.c: 463: if(UCONbits.SUSPND==1)
 27528  003236  A260               	btfss	3936,1,c	;volatile
 27529  003238  D001               	goto	i2u1012_41
 27530  00323A  D001               	goto	i2u1012_40
 27531  00323C                     i2u1012_41:
 27532  00323C  D002               	goto	i2l1724
 27533  00323E                     i2u1012_40:
 27534                           
 27535                           ;usb_device.c: 464: {
 27536                           ;usb_device.c: 465: PIR3bits.USBIF = 0;;
 27537  00323E  94A4               	bcf	4004,2,c	;volatile
 27538                           
 27539                           ;usb_device.c: 466: return;
 27540  003240  D0C3               	goto	i2l1725
 27541  003242                     i2l1724:
 27542                           
 27543                           ;usb_device.c: 467: }
 27544                           ;usb_device.c: 479: if(UIRbits.URSTIF && UIEbits.URSTIE)
 27545  003242  A065               	btfss	3941,0,c	;volatile
 27546  003244  D001               	goto	i2u1013_41
 27547  003246  D001               	goto	i2u1013_40
 27548  003248                     i2u1013_41:
 27549  003248  D00C               	goto	i2l11347
 27550  00324A                     i2u1013_40:
 27551  00324A  A064               	btfss	3940,0,c	;volatile
 27552  00324C  D001               	goto	i2u1014_41
 27553  00324E  D001               	goto	i2u1014_40
 27554  003250                     i2u1014_41:
 27555  003250  D008               	goto	i2l11347
 27556  003252                     i2u1014_40:
 27557                           
 27558                           ;usb_device.c: 480: {
 27559                           ;usb_device.c: 481: USBDeviceInit();
 27560  003252  EC01  F01D         	call	i2_USBDeviceInit	;wreg free
 27561                           
 27562                           ;usb_device.c: 485: {PIE3bits.USBIE = 1;};
 27563  003256  84A3               	bsf	4003,2,c	;volatile
 27564                           
 27565                           ;usb_device.c: 487: USBDeviceState = DEFAULT_STATE;
 27566  003258  0E04               	movlw	4
 27567  00325A  0100               	movlb	0	; () banked
 27568  00325C  6FDE               	movwf	_USBDeviceState& (0+255),b	;volatile
 27569                           
 27570                           ; BSR set to: 0
 27571                           ;usb_device.c: 489: (UIR &= 0xFE);
 27572  00325E  9065               	bcf	3941,0,c	;volatile
 27573  003260  D000               	goto	i2l11347
 27574  003262                     i2l11347:
 27575                           
 27576                           ;usb_device.c: 490: }
 27577                           ;usb_device.c: 495: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 27578  003262  A865               	btfss	3941,4,c	;volatile
 27579  003264  D001               	goto	i2u1015_41
 27580  003266  D001               	goto	i2u1015_40
 27581  003268                     i2u1015_41:
 27582  003268  D008               	goto	i2l11355
 27583  00326A                     i2u1015_40:
 27584  00326A  A864               	btfss	3940,4,c	;volatile
 27585  00326C  D001               	goto	i2u1016_41
 27586  00326E  D001               	goto	i2u1016_40
 27587  003270                     i2u1016_41:
 27588  003270  D004               	goto	i2l11355
 27589  003272                     i2u1016_40:
 27590                           
 27591                           ;usb_device.c: 496: {
 27592                           ;usb_device.c: 497: USBSuspend();
 27593  003272  EC1D  F038         	call	_USBSuspend	;wreg free
 27594                           
 27595                           ;usb_device.c: 498: (UIR &= 0xEF);
 27596  003276  9865               	bcf	3941,4,c	;volatile
 27597  003278  D000               	goto	i2l11355
 27598  00327A                     i2l11355:
 27599                           
 27600                           ;usb_device.c: 499: }
 27601                           ;usb_device.c: 501: if(UIRbits.SOFIF)
 27602  00327A  AC65               	btfss	3941,6,c	;volatile
 27603  00327C  D001               	goto	i2u1017_41
 27604  00327E  D001               	goto	i2u1017_40
 27605  003280                     i2u1017_41:
 27606  003280  D024               	goto	i2l11371
 27607  003282                     i2u1017_40:
 27608                           
 27609                           ;usb_device.c: 502: {
 27610                           ;usb_device.c: 503: if(UIEbits.SOFIE)
 27611  003282  AC64               	btfss	3940,6,c	;volatile
 27612  003284  D001               	goto	i2u1018_41
 27613  003286  D001               	goto	i2u1018_40
 27614  003288                     i2u1018_41:
 27615  003288  D00F               	goto	i2l11361
 27616  00328A                     i2u1018_40:
 27617                           
 27618                           ;usb_device.c: 504: {
 27619                           ;usb_device.c: 505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 27620  00328A  0E00               	movlw	0
 27621  00328C  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27622  00328E  0E73               	movlw	115
 27623  003290  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27624  003292  0E00               	movlw	0
 27625  003294  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 27626  003296  0E00               	movlw	0
 27627  003298  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 27628  00329A  0E00               	movlw	0
 27629  00329C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27630  00329E  0E01               	movlw	1
 27631  0032A0  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27632  0032A2  EC16  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27633  0032A6  D000               	goto	i2l11361
 27634  0032A8                     i2l11361:
 27635                           
 27636                           ;usb_device.c: 506: }
 27637                           ;usb_device.c: 507: (UIR &= 0xBF);
 27638  0032A8  9C65               	bcf	3941,6,c	;volatile
 27639                           
 27640                           ;usb_device.c: 512: if(USBStatusStageTimeoutCounter != 0u)
 27641  0032AA  504B               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 27642  0032AC  B4D8               	btfsc	status,2,c
 27643  0032AE  D001               	goto	i2u1019_41
 27644  0032B0  D001               	goto	i2u1019_40
 27645  0032B2                     i2u1019_41:
 27646  0032B2  D002               	goto	i2l11367
 27647  0032B4                     i2u1019_40:
 27648                           
 27649                           ;usb_device.c: 513: {
 27650                           ;usb_device.c: 514: USBStatusStageTimeoutCounter--;
 27651  0032B4  064B               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 27652  0032B6  D000               	goto	i2l11367
 27653  0032B8                     i2l11367:
 27654                           
 27655                           ;usb_device.c: 515: }
 27656                           ;usb_device.c: 521: if(USBStatusStageTimeoutCounter == 0)
 27657  0032B8  504B               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 27658  0032BA  A4D8               	btfss	status,2,c
 27659  0032BC  D001               	goto	i2u1020_41
 27660  0032BE  D001               	goto	i2u1020_40
 27661  0032C0                     i2u1020_41:
 27662  0032C0  D004               	goto	i2l11371
 27663  0032C2                     i2u1020_40:
 27664                           
 27665                           ;usb_device.c: 522: {
 27666                           ;usb_device.c: 523: USBCtrlEPAllowStatusStage();
 27667  0032C2  EC46  F029         	call	_USBCtrlEPAllowStatusStage	;wreg free
 27668  0032C6  D001               	goto	i2l11371
 27669  0032C8  D000               	goto	i2l11371
 27670  0032CA                     i2l11371:
 27671                           
 27672                           ;usb_device.c: 524: }
 27673                           ;usb_device.c: 525: }
 27674                           ;usb_device.c: 527: if(UIRbits.STALLIF && UIEbits.STALLIE)
 27675  0032CA  AA65               	btfss	3941,5,c	;volatile
 27676  0032CC  D001               	goto	i2u1021_41
 27677  0032CE  D001               	goto	i2u1021_40
 27678  0032D0                     i2u1021_41:
 27679  0032D0  D007               	goto	i2l11377
 27680  0032D2                     i2u1021_40:
 27681  0032D2  AA64               	btfss	3940,5,c	;volatile
 27682  0032D4  D001               	goto	i2u1022_41
 27683  0032D6  D001               	goto	i2u1022_40
 27684  0032D8                     i2u1022_41:
 27685  0032D8  D003               	goto	i2l11377
 27686  0032DA                     i2u1022_40:
 27687                           
 27688                           ;usb_device.c: 528: {
 27689                           ;usb_device.c: 529: USBStallHandler();
 27690  0032DA  EC9D  F035         	call	_USBStallHandler	;wreg free
 27691  0032DE  D000               	goto	i2l11377
 27692  0032E0                     i2l11377:
 27693                           
 27694                           ;usb_device.c: 530: }
 27695                           ;usb_device.c: 532: if(UIRbits.UERRIF && UIEbits.UERRIE)
 27696  0032E0  A265               	btfss	3941,1,c	;volatile
 27697  0032E2  D001               	goto	i2u1023_41
 27698  0032E4  D001               	goto	i2u1023_40
 27699  0032E6                     i2u1023_41:
 27700  0032E6  D014               	goto	i2l11385
 27701  0032E8                     i2u1023_40:
 27702  0032E8  A264               	btfss	3940,1,c	;volatile
 27703  0032EA  D001               	goto	i2u1024_41
 27704  0032EC  D001               	goto	i2u1024_40
 27705  0032EE                     i2u1024_41:
 27706  0032EE  D010               	goto	i2l11385
 27707  0032F0                     i2u1024_40:
 27708                           
 27709                           ;usb_device.c: 533: {
 27710                           ;usb_device.c: 534: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 27711  0032F0  0E7F               	movlw	127
 27712  0032F2  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27713  0032F4  680E               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27714  0032F6  0E00               	movlw	0
 27715  0032F8  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 27716  0032FA  0E00               	movlw	0
 27717  0032FC  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 27718  0032FE  0E00               	movlw	0
 27719  003300  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27720  003302  0E01               	movlw	1
 27721  003304  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27722  003306  EC16  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27723                           
 27724                           ;usb_device.c: 535: {UEIR = 0;};
 27725  00330A  0E00               	movlw	0
 27726  00330C  6E67               	movwf	3943,c	;volatile
 27727  00330E  D000               	goto	i2l11385
 27728  003310                     i2l11385:
 27729                           
 27730                           ;usb_device.c: 536: }
 27731                           ;usb_device.c: 543: if(USBDeviceState < DEFAULT_STATE)
 27732  003310  0E04               	movlw	4
 27733  003312  0100               	movlb	0	; () banked
 27734  003314  61DE               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 27735  003316  D001               	goto	i2u1025_41
 27736  003318  D001               	goto	i2u1025_40
 27737  00331A                     i2u1025_41:
 27738  00331A  D002               	goto	i2l1734
 27739  00331C                     i2u1025_40:
 27740                           
 27741                           ; BSR set to: 0
 27742                           ;usb_device.c: 544: {
 27743                           ;usb_device.c: 545: PIR3bits.USBIF = 0;;
 27744  00331C  94A4               	bcf	4004,2,c	;volatile
 27745                           
 27746                           ;usb_device.c: 546: return;
 27747  00331E  D054               	goto	i2l1725
 27748  003320                     i2l1734:
 27749                           
 27750                           ; BSR set to: 0
 27751                           ;usb_device.c: 547: }
 27752                           ;usb_device.c: 552: if(UIEbits.TRNIE)
 27753  003320  A664               	btfss	3940,3,c	;volatile
 27754  003322  D001               	goto	i2u1026_41
 27755  003324  D001               	goto	i2u1026_40
 27756  003326                     i2u1026_41:
 27757  003326  D04F               	goto	i2l1735
 27758  003328                     i2u1026_40:
 27759                           
 27760                           ; BSR set to: 0
 27761                           ;usb_device.c: 553: {
 27762                           ;usb_device.c: 554: for(i = 0; i < 4u; i++)
 27763  003328  0E00               	movlw	0
 27764  00332A  6E1F               	movwf	USBDeviceTasks@i,c
 27765                           
 27766                           ; BSR set to: 0
 27767  00332C  0E03               	movlw	3
 27768  00332E  641F               	cpfsgt	USBDeviceTasks@i,c
 27769  003330  D001               	goto	i2u1027_41
 27770  003332  D001               	goto	i2u1027_40
 27771  003334                     i2u1027_41:
 27772  003334  D002               	goto	i2l1736
 27773  003336                     i2u1027_40:
 27774  003336  D047               	goto	i2l1735
 27775                           
 27776                           ; BSR set to: 0
 27777  003338  D046               	goto	i2l1735
 27778  00333A                     i2l1736:
 27779                           
 27780                           ;usb_device.c: 555: {
 27781                           ;usb_device.c: 556: if(UIRbits.TRNIF)
 27782  00333A  A665               	btfss	3941,3,c	;volatile
 27783  00333C  D001               	goto	i2u1028_41
 27784  00333E  D001               	goto	i2u1028_40
 27785  003340                     i2u1028_41:
 27786  003340  D042               	goto	i2l1735
 27787  003342                     i2u1028_40:
 27788                           
 27789                           ;usb_device.c: 557: {
 27790                           ;usb_device.c: 559: USTATcopy.Val = USTAT;
 27791  003342  CF61 F058          	movff	3937,_USTATcopy	;volatile
 27792                           
 27793                           ;usb_device.c: 560: endpoint_number = USTATcopy.endpoint_number;
 27794  003346  3058               	rrcf	_USTATcopy,w,c	;volatile
 27795  003348  32E8               	rrcf	wreg,f,c
 27796  00334A  32E8               	rrcf	wreg,f,c
 27797  00334C  0B0F               	andlw	15
 27798  00334E  6E4C               	movwf	_endpoint_number,c	;volatile
 27799                           
 27800                           ;usb_device.c: 562: (UIR &= 0xF7);
 27801  003350  9665               	bcf	3941,3,c	;volatile
 27802                           
 27803                           ;usb_device.c: 566: if(USTATcopy.direction == 0)
 27804  003352  B458               	btfsc	_USTATcopy,2,c	;volatile
 27805  003354  D001               	goto	i2u1029_41
 27806  003356  D001               	goto	i2u1029_40
 27807  003358                     i2u1029_41:
 27808  003358  D00B               	goto	i2l11405
 27809  00335A                     i2u1029_40:
 27810                           
 27811                           ;usb_device.c: 567: {
 27812                           ;usb_device.c: 568: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 27813  00335A  504C               	movf	_endpoint_number,w,c	;volatile
 27814  00335C  0D01               	mullw	1
 27815  00335E  0EB7               	movlw	low _ep_data_out
 27816  003360  24F3               	addwf	prodl,w,c
 27817  003362  6ED9               	movwf	fsr2l,c
 27818  003364  0E00               	movlw	high _ep_data_out
 27819  003366  20F4               	addwfc	prodh,w,c
 27820  003368  6EDA               	movwf	fsr2h,c
 27821  00336A  0100               	movlb	0	; () banked
 27822  00336C  70DF               	btg	indf2,0,c
 27823                           
 27824                           ;usb_device.c: 569: }
 27825  00336E  D00B               	goto	i2l11407
 27826  003370                     i2l11405:
 27827                           
 27828                           ;usb_device.c: 570: else
 27829                           ;usb_device.c: 571: {
 27830                           ;usb_device.c: 572: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 27831  003370  504C               	movf	_endpoint_number,w,c	;volatile
 27832  003372  0D01               	mullw	1
 27833  003374  0EBA               	movlw	low _ep_data_in
 27834  003376  24F3               	addwf	prodl,w,c
 27835  003378  6ED9               	movwf	fsr2l,c
 27836  00337A  0E00               	movlw	high _ep_data_in
 27837  00337C  20F4               	addwfc	prodh,w,c
 27838  00337E  6EDA               	movwf	fsr2h,c
 27839  003380  0100               	movlb	0	; () banked
 27840  003382  70DF               	btg	indf2,0,c
 27841  003384  D000               	goto	i2l11407
 27842  003386                     i2l11407:
 27843                           
 27844                           ; BSR set to: 0
 27845                           ;usb_device.c: 573: }
 27846                           ;usb_device.c: 577: if(endpoint_number == 0)
 27847  003386  504C               	movf	_endpoint_number,w,c	;volatile
 27848  003388  A4D8               	btfss	status,2,c
 27849  00338A  D001               	goto	i2u1030_41
 27850  00338C  D001               	goto	i2u1030_40
 27851  00338E                     i2u1030_41:
 27852  00338E  D003               	goto	i2l11411
 27853  003390                     i2u1030_40:
 27854                           
 27855                           ; BSR set to: 0
 27856                           ;usb_device.c: 578: {
 27857                           ;usb_device.c: 579: USBCtrlEPService();
 27858  003390  EC58  F028         	call	_USBCtrlEPService	;wreg free
 27859                           
 27860                           ;usb_device.c: 580: }
 27861  003394  D011               	goto	i2l11413
 27862  003396                     i2l11411:
 27863                           
 27864                           ;usb_device.c: 581: else
 27865                           ;usb_device.c: 582: {
 27866                           ;usb_device.c: 583: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 27867  003396  0E00               	movlw	0
 27868  003398  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27869  00339A  0E72               	movlw	114
 27870  00339C  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27871  00339E  0E58               	movlw	low _USTATcopy
 27872  0033A0  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 27873  0033A2  0E00               	movlw	high _USTATcopy
 27874  0033A4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 27875  0033A6  0E00               	movlw	0
 27876  0033A8  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27877  0033AA  0E00               	movlw	0
 27878  0033AC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27879  0033AE  EC16  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27880  0033B2  D002               	goto	i2l11413
 27881                           
 27882                           ;usb_device.c: 584: }
 27883                           ;usb_device.c: 585: }
 27884  0033B4  D001               	goto	i2l11413
 27885                           
 27886                           ;usb_device.c: 586: else
 27887                           ;usb_device.c: 587: {
 27888                           ;usb_device.c: 588: break;
 27889  0033B6  D007               	goto	i2l1735
 27890  0033B8                     i2l11413:
 27891  0033B8  2A1F               	incf	USBDeviceTasks@i,f,c
 27892  0033BA  0E03               	movlw	3
 27893  0033BC  641F               	cpfsgt	USBDeviceTasks@i,c
 27894  0033BE  D001               	goto	i2u1031_41
 27895  0033C0  D001               	goto	i2u1031_40
 27896  0033C2                     i2u1031_41:
 27897  0033C2  D7BB               	goto	i2l1736
 27898  0033C4                     i2u1031_40:
 27899  0033C4  D000               	goto	i2l1735
 27900  0033C6                     i2l1735:
 27901                           
 27902                           ;usb_device.c: 589: }
 27903                           ;usb_device.c: 590: }
 27904                           ;usb_device.c: 591: }
 27905                           ;usb_device.c: 593: PIR3bits.USBIF = 0;;
 27906  0033C6  94A4               	bcf	4004,2,c	;volatile
 27907  0033C8                     i2l1725:
 27908  0033C8  0012               	return		;funcret
 27909  0033CA                     __end_of_USBDeviceTasks:
 27910                           	opt stack 0
 27911                           pclatu	equ	0xFFB
 27912                           pclath	equ	0xFFA
 27913                           tblptru	equ	0xFF8
 27914                           tblptrh	equ	0xFF7
 27915                           tblptrl	equ	0xFF6
 27916                           tablat	equ	0xFF5
 27917                           prodh	equ	0xFF4
 27918                           prodl	equ	0xFF3
 27919                           intcon	equ	0xFF2
 27920                           intcon3	equ	0xFF0
 27921                           indf0	equ	0xFEF
 27922                           postinc0	equ	0xFEE
 27923                           fsr0h	equ	0xFEA
 27924                           fsr0l	equ	0xFE9
 27925                           wreg	equ	0xFE8
 27926                           indf1	equ	0xFE7
 27927                           postdec1	equ	0xFE5
 27928                           fsr1h	equ	0xFE2
 27929                           fsr1l	equ	0xFE1
 27930                           indf2	equ	0xFDF
 27931                           postinc2	equ	0xFDE
 27932                           postdec2	equ	0xFDD
 27933                           plusw2	equ	0xFDB
 27934                           fsr2h	equ	0xFDA
 27935                           fsr2l	equ	0xFD9
 27936                           status	equ	0xFD8
 27937                           
 27938 ;; *************** function i2_USBDeviceInit *****************
 27939 ;; Defined at:
 27940 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 27941 ;; Parameters:    Size  Location     Type
 27942 ;;		None
 27943 ;; Auto vars:     Size  Location     Type
 27944 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 27945 ;; Return value:  Size  Location     Type
 27946 ;;                  1    wreg      void 
 27947 ;; Registers used:
 27948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27949 ;; Tracked objects:
 27950 ;;		On entry : 0/0
 27951 ;;		On exit  : 0/0
 27952 ;;		Unchanged: 0/0
 27953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27954 ;;      Params:         0       0       0       0       0       0       0       0       0
 27955 ;;      Locals:         1       0       0       0       0       0       0       0       0
 27956 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27957 ;;      Totals:         1       0       0       0       0       0       0       0       0
 27958 ;;Total ram usage:        1 bytes
 27959 ;; Hardware stack levels used:    1
 27960 ;; Hardware stack levels required when called:    1
 27961 ;; This function calls:
 27962 ;;		i2_memset
 27963 ;; This function is called by:
 27964 ;;		_USBDeviceTasks
 27965 ;; This function uses a non-reentrant model
 27966 ;;
 27967                           
 27968                           	psect	text106
 27969  003A02                     __ptext106:
 27970                           	opt stack 0
 27971  003A02                     i2_USBDeviceInit:
 27972                           	opt stack 18
 27973                           
 27974                           ;usb_device.c: 239: uint8_t i;
 27975                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 27976                           
 27977                           ;incstack = 0
 27978  003A02  94A3               	bcf	4003,2,c	;volatile
 27979                           
 27980                           ;usb_device.c: 244: {UEIR = 0;};
 27981  003A04  0E00               	movlw	0
 27982  003A06  6E67               	movwf	3943,c	;volatile
 27983                           
 27984                           ;usb_device.c: 247: {UIR = 0;};
 27985  003A08  0E00               	movlw	0
 27986  003A0A  6E65               	movwf	3941,c	;volatile
 27987                           
 27988                           ;usb_device.c: 250: UEP0 = 0;
 27989  003A0C  0E00               	movlw	0
 27990  003A0E  6E6A               	movwf	3946,c	;volatile
 27991                           
 27992                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 27993  003A10  0E6B               	movlw	107
 27994  003A12  6E01               	movwf	i2memset@p1,c
 27995  003A14  0E0F               	movlw	15
 27996  003A16  6E02               	movwf	i2memset@p1+1,c
 27997  003A18  0E00               	movlw	0
 27998  003A1A  6E04               	movwf	i2memset@c+1,c
 27999  003A1C  0E00               	movlw	0
 28000  003A1E  6E03               	movwf	i2memset@c,c
 28001  003A20  0E00               	movlw	0
 28002  003A22  6E06               	movwf	i2memset@n+1,c
 28003  003A24  0E02               	movlw	2
 28004  003A26  6E05               	movwf	i2memset@n,c
 28005  003A28  ECBA  F037         	call	i2_memset	;wreg free
 28006                           
 28007                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 28008  003A2C  0E16               	movlw	22
 28009  003A2E  6E62               	movwf	3938,c	;volatile
 28010  003A30  0E9F               	movlw	159
 28011  003A32  6E66               	movwf	3942,c	;volatile
 28012  003A34  0E7B               	movlw	123
 28013  003A36  6E64               	movwf	3940,c	;volatile
 28014                           
 28015                           ;usb_device.c: 257: ;
 28016                           ;usb_device.c: 260: ;
 28017                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 28018  003A38  0E00               	movlw	0
 28019  003A3A  6E09               	movwf	i2USBDeviceInit@i,c
 28020  003A3C  0E0B               	movlw	11
 28021  003A3E  6409               	cpfsgt	i2USBDeviceInit@i,c
 28022  003A40  D001               	goto	i2u975_41
 28023  003A42  D001               	goto	i2u975_40
 28024  003A44                     i2u975_41:
 28025  003A44  D002               	goto	i2l10961
 28026  003A46                     i2u975_40:
 28027  003A46  D013               	goto	i2l1712
 28028  003A48  D012               	goto	i2l1712
 28029  003A4A                     i2l10961:
 28030                           
 28031                           ;usb_device.c: 264: {
 28032                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 28033  003A4A  5009               	movf	i2USBDeviceInit@i,w,c
 28034  003A4C  0D04               	mullw	4
 28035  003A4E  0E00               	movlw	0
 28036  003A50  24F3               	addwf	prodl,w,c
 28037  003A52  6ED9               	movwf	fsr2l,c
 28038  003A54  0E04               	movlw	4
 28039  003A56  20F4               	addwfc	prodh,w,c
 28040  003A58  6EDA               	movwf	fsr2h,c
 28041  003A5A  6ADE               	clrf	postinc2,c
 28042  003A5C  6ADE               	clrf	postinc2,c
 28043  003A5E  6ADE               	clrf	postinc2,c
 28044  003A60  6ADD               	clrf	postdec2,c
 28045  003A62  2A09               	incf	i2USBDeviceInit@i,f,c
 28046  003A64  0E0B               	movlw	11
 28047  003A66  6409               	cpfsgt	i2USBDeviceInit@i,c
 28048  003A68  D001               	goto	i2u976_41
 28049  003A6A  D001               	goto	i2u976_40
 28050  003A6C                     i2u976_41:
 28051  003A6C  D7EE               	goto	i2l10961
 28052  003A6E                     i2u976_40:
 28053  003A6E                     i2l1712:
 28054                           
 28055                           ;usb_device.c: 266: }
 28056                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 28057  003A6E  8C60               	bsf	3936,6,c	;volatile
 28058                           
 28059                           ;usb_device.c: 272: UADDR = 0x00;
 28060  003A70  0E00               	movlw	0
 28061  003A72  6E63               	movwf	3939,c	;volatile
 28062                           
 28063                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 28064  003A74  9860               	bcf	3936,4,c	;volatile
 28065                           
 28066                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 28067  003A76  9C60               	bcf	3936,6,c	;volatile
 28068                           
 28069                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 28070  003A78  D00A               	goto	i2l10981
 28071  003A7A                     i2l10973:
 28072                           
 28073                           ;usb_device.c: 282: {
 28074                           ;usb_device.c: 283: (UIR &= 0xF7);
 28075  003A7A  9665               	bcf	3941,3,c	;volatile
 28076                           
 28077                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 28078  003A7C  0E00               	movlw	0
 28079  003A7E  6E39               	movwf	_inPipes+3,c	;volatile
 28080                           
 28081                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 28082  003A80  0E00               	movlw	0
 28083  003A82  6E31               	movwf	_outPipes+3,c	;volatile
 28084                           
 28085                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 28086  003A84  0E00               	movlw	0
 28087  003A86  6E33               	movwf	_outPipes+5,c	;volatile
 28088  003A88  0E00               	movlw	0
 28089  003A8A  6E32               	movwf	_outPipes+4,c	;volatile
 28090  003A8C  D000               	goto	i2l10981
 28091  003A8E                     i2l10981:
 28092  003A8E  B665               	btfsc	3941,3,c	;volatile
 28093  003A90  D001               	goto	i2u977_41
 28094  003A92  D001               	goto	i2u977_40
 28095  003A94                     i2u977_41:
 28096  003A94  D7F2               	goto	i2l10973
 28097  003A96                     i2u977_40:
 28098  003A96  D000               	goto	i2l10983
 28099  003A98                     i2l10983:
 28100                           
 28101                           ;usb_device.c: 288: }
 28102                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 28103  003A98  0E01               	movlw	1
 28104  003A9A  0100               	movlb	0	; () banked
 28105  003A9C  6FD4               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 28106                           
 28107                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 28108  003A9E  0E01               	movlw	1
 28109  003AA0  0100               	movlb	0	; () banked
 28110  003AA2  6FD3               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 28111                           
 28112                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 28113  003AA4  0E00               	movlw	0
 28114  003AA6  0100               	movlb	0	; () banked
 28115  003AA8  6FD2               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 28116                           
 28117                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 28118  003AAA  0E00               	movlw	0
 28119  003AAC  0100               	movlb	0	; () banked
 28120  003AAE  6FD1               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 28121                           
 28122                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 28123  003AB0  0E00               	movlw	0
 28124  003AB2  0100               	movlb	0	; () banked
 28125  003AB4  6FD6               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 28126                           
 28127                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 28128  003AB6  0E00               	movlw	0
 28129  003AB8  6E09               	movwf	i2USBDeviceInit@i,c
 28130                           
 28131                           ; BSR set to: 0
 28132  003ABA  0E02               	movlw	2
 28133  003ABC  6409               	cpfsgt	i2USBDeviceInit@i,c
 28134  003ABE  D001               	goto	i2u978_41
 28135  003AC0  D001               	goto	i2u978_40
 28136  003AC2                     i2u978_41:
 28137  003AC2  D002               	goto	i2l10989
 28138  003AC4                     i2u978_40:
 28139  003AC4  D034               	goto	i2l10995
 28140                           
 28141                           ; BSR set to: 0
 28142  003AC6  D033               	goto	i2l10995
 28143  003AC8                     i2l10989:
 28144                           
 28145                           ;usb_device.c: 302: {
 28146                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 28147  003AC8  5009               	movf	i2USBDeviceInit@i,w,c
 28148  003ACA  0D02               	mullw	2
 28149  003ACC  0E3C               	movlw	low _pBDTEntryIn
 28150  003ACE  24F3               	addwf	prodl,w,c
 28151  003AD0  6ED9               	movwf	fsr2l,c
 28152  003AD2  0E00               	movlw	high _pBDTEntryIn
 28153  003AD4  20F4               	addwfc	prodh,w,c
 28154  003AD6  6EDA               	movwf	fsr2h,c
 28155  003AD8  0E00               	movlw	0
 28156  003ADA  6EDE               	movwf	postinc2,c
 28157  003ADC  0E00               	movlw	0
 28158  003ADE  6EDD               	movwf	postdec2,c
 28159                           
 28160                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 28161  003AE0  5009               	movf	i2USBDeviceInit@i,w,c
 28162  003AE2  0D02               	mullw	2
 28163  003AE4  0E40               	movlw	low _pBDTEntryOut
 28164  003AE6  24F3               	addwf	prodl,w,c
 28165  003AE8  6ED9               	movwf	fsr2l,c
 28166  003AEA  0E01               	movlw	high _pBDTEntryOut
 28167  003AEC  20F4               	addwfc	prodh,w,c
 28168  003AEE  6EDA               	movwf	fsr2h,c
 28169  003AF0  0E00               	movlw	0
 28170  003AF2  6EDE               	movwf	postinc2,c
 28171  003AF4  0E00               	movlw	0
 28172  003AF6  6EDD               	movwf	postdec2,c
 28173                           
 28174                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 28175  003AF8  5009               	movf	i2USBDeviceInit@i,w,c
 28176  003AFA  0D01               	mullw	1
 28177  003AFC  0EBA               	movlw	low _ep_data_in
 28178  003AFE  24F3               	addwf	prodl,w,c
 28179  003B00  6ED9               	movwf	fsr2l,c
 28180  003B02  0E00               	movlw	high _ep_data_in
 28181  003B04  20F4               	addwfc	prodh,w,c
 28182  003B06  6EDA               	movwf	fsr2h,c
 28183  003B08  0E00               	movlw	0
 28184  003B0A  6EDF               	movwf	indf2,c
 28185                           
 28186                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 28187  003B0C  5009               	movf	i2USBDeviceInit@i,w,c
 28188  003B0E  0D01               	mullw	1
 28189  003B10  0EB7               	movlw	low _ep_data_out
 28190  003B12  24F3               	addwf	prodl,w,c
 28191  003B14  6ED9               	movwf	fsr2l,c
 28192  003B16  0E00               	movlw	high _ep_data_out
 28193  003B18  20F4               	addwfc	prodh,w,c
 28194  003B1A  6EDA               	movwf	fsr2h,c
 28195  003B1C  0E00               	movlw	0
 28196  003B1E  6EDF               	movwf	indf2,c
 28197  003B20  2A09               	incf	i2USBDeviceInit@i,f,c
 28198  003B22  0E02               	movlw	2
 28199  003B24  6409               	cpfsgt	i2USBDeviceInit@i,c
 28200  003B26  D001               	goto	i2u979_41
 28201  003B28  D001               	goto	i2u979_40
 28202  003B2A                     i2u979_41:
 28203  003B2A  D7CE               	goto	i2l10989
 28204  003B2C                     i2u979_40:
 28205  003B2C  D000               	goto	i2l10995
 28206  003B2E                     i2l10995:
 28207                           
 28208                           ;usb_device.c: 307: }
 28209                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 28210  003B2E  0E08               	movlw	8
 28211  003B30  6E3C               	movwf	_pBDTEntryIn,c
 28212  003B32  0E04               	movlw	4
 28213  003B34  6E3D               	movwf	_pBDTEntryIn+1,c
 28214                           
 28215                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 28216  003B36  0E16               	movlw	22
 28217  003B38  6E6A               	movwf	3946,c	;volatile
 28218                           
 28219                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 28220  003B3A  0E04               	movlw	4
 28221  003B3C  0104               	movlb	4	; () banked
 28222  003B3E  6F03               	movwf	3,b	;volatile
 28223  003B40  0E30               	movlw	48
 28224  003B42  6F02               	movwf	2,b	;volatile
 28225                           
 28226                           ; BSR set to: 4
 28227                           ;usb_device.c: 315: BDT[0].CNT = 8;
 28228  003B44  0E08               	movlw	8
 28229  003B46  0104               	movlb	4	; () banked
 28230  003B48  6F01               	movwf	1,b	;volatile
 28231                           
 28232                           ; BSR set to: 4
 28233                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 28234  003B4A  0E04               	movlw	4
 28235  003B4C  0104               	movlb	4	; () banked
 28236  003B4E  6F00               	movwf	0,b	;volatile
 28237                           
 28238                           ; BSR set to: 4
 28239                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 28240  003B50  0104               	movlb	4	; () banked
 28241  003B52  8F00               	bsf	0,7,b	;volatile
 28242                           
 28243                           ; BSR set to: 4
 28244                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 28245  003B54  0E00               	movlw	0
 28246  003B56  6E59               	movwf	_USBActiveConfiguration,c	;volatile
 28247                           
 28248                           ; BSR set to: 4
 28249                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 28250  003B58  0E00               	movlw	0
 28251  003B5A  0100               	movlb	0	; () banked
 28252  003B5C  6FDE               	movwf	_USBDeviceState& (0+255),b	;volatile
 28253                           
 28254                           ; BSR set to: 0
 28255  003B5E  0012               	return		;funcret
 28256  003B60                     __end_ofi2_USBDeviceInit:
 28257                           	opt stack 0
 28258                           pclatu	equ	0xFFB
 28259                           pclath	equ	0xFFA
 28260                           tblptru	equ	0xFF8
 28261                           tblptrh	equ	0xFF7
 28262                           tblptrl	equ	0xFF6
 28263                           tablat	equ	0xFF5
 28264                           prodh	equ	0xFF4
 28265                           prodl	equ	0xFF3
 28266                           intcon	equ	0xFF2
 28267                           intcon3	equ	0xFF0
 28268                           indf0	equ	0xFEF
 28269                           postinc0	equ	0xFEE
 28270                           fsr0h	equ	0xFEA
 28271                           fsr0l	equ	0xFE9
 28272                           wreg	equ	0xFE8
 28273                           indf1	equ	0xFE7
 28274                           postdec1	equ	0xFE5
 28275                           fsr1h	equ	0xFE2
 28276                           fsr1l	equ	0xFE1
 28277                           indf2	equ	0xFDF
 28278                           postinc2	equ	0xFDE
 28279                           postdec2	equ	0xFDD
 28280                           plusw2	equ	0xFDB
 28281                           fsr2h	equ	0xFDA
 28282                           fsr2l	equ	0xFD9
 28283                           status	equ	0xFD8
 28284                           
 28285 ;; *************** function _USBWakeFromSuspend *****************
 28286 ;; Defined at:
 28287 ;;		line 1944 in file "../Includes/Usb/Framework/usb_device.c"
 28288 ;; Parameters:    Size  Location     Type
 28289 ;;		None
 28290 ;; Auto vars:     Size  Location     Type
 28291 ;;		None
 28292 ;; Return value:  Size  Location     Type
 28293 ;;                  1    wreg      void 
 28294 ;; Registers used:
 28295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28296 ;; Tracked objects:
 28297 ;;		On entry : 0/0
 28298 ;;		On exit  : 0/0
 28299 ;;		Unchanged: 0/0
 28300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28301 ;;      Params:         0       0       0       0       0       0       0       0       0
 28302 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28303 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28304 ;;      Totals:         0       0       0       0       0       0       0       0       0
 28305 ;;Total ram usage:        0 bytes
 28306 ;; Hardware stack levels used:    1
 28307 ;; Hardware stack levels required when called:    5
 28308 ;; This function calls:
 28309 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28310 ;; This function is called by:
 28311 ;;		_USBDeviceTasks
 28312 ;; This function uses a non-reentrant model
 28313 ;;
 28314                           
 28315                           	psect	text107
 28316  006F3C                     __ptext107:
 28317                           	opt stack 0
 28318  006F3C                     _USBWakeFromSuspend:
 28319                           	opt stack 14
 28320                           
 28321                           ;usb_device.c: 1946: USBBusIsSuspended = 0;
 28322                           
 28323                           ; BSR set to: 0
 28324                           ;incstack = 0
 28325  006F3C  0E00               	movlw	0
 28326  006F3E  0100               	movlb	0	; () banked
 28327  006F40  6FD6               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 28328                           
 28329                           ; BSR set to: 0
 28330                           ;usb_device.c: 1952: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 28331  006F42  0E00               	movlw	0
 28332  006F44  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 28333  006F46  0E74               	movlw	116
 28334  006F48  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 28335  006F4A  0E00               	movlw	0
 28336  006F4C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 28337  006F4E  0E00               	movlw	0
 28338  006F50  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 28339  006F52  0E00               	movlw	0
 28340  006F54  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 28341  006F56  0E00               	movlw	0
 28342  006F58  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 28343  006F5A  EC16  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 28344                           
 28345                           ;usb_device.c: 1958: UCONbits.SUSPND = 0;
 28346  006F5E  9260               	bcf	3936,1,c	;volatile
 28347                           
 28348                           ;usb_device.c: 1960: UIEbits.ACTVIE = 0;
 28349  006F60  9464               	bcf	3940,2,c	;volatile
 28350                           
 28351                           ;usb_device.c: 1976: while(UIRbits.ACTVIF)
 28352  006F62  D002               	goto	i2l10883
 28353  006F64                     i2l10881:
 28354                           
 28355                           ;usb_device.c: 1977: {
 28356                           ;usb_device.c: 1978: (UIR &= 0xFB);
 28357  006F64  9465               	bcf	3941,2,c	;volatile
 28358  006F66  D000               	goto	i2l10883
 28359  006F68                     i2l10883:
 28360  006F68  B465               	btfsc	3941,2,c	;volatile
 28361  006F6A  D001               	goto	i2u966_41
 28362  006F6C  D001               	goto	i2u966_40
 28363  006F6E                     i2u966_41:
 28364  006F6E  D7FA               	goto	i2l10881
 28365  006F70                     i2u966_40:
 28366  006F70  D000               	goto	i2l1885
 28367  006F72                     i2l1885:
 28368  006F72  0012               	return		;funcret
 28369  006F74                     __end_of_USBWakeFromSuspend:
 28370                           	opt stack 0
 28371                           pclatu	equ	0xFFB
 28372                           pclath	equ	0xFFA
 28373                           tblptru	equ	0xFF8
 28374                           tblptrh	equ	0xFF7
 28375                           tblptrl	equ	0xFF6
 28376                           tablat	equ	0xFF5
 28377                           prodh	equ	0xFF4
 28378                           prodl	equ	0xFF3
 28379                           intcon	equ	0xFF2
 28380                           intcon3	equ	0xFF0
 28381                           indf0	equ	0xFEF
 28382                           postinc0	equ	0xFEE
 28383                           fsr0h	equ	0xFEA
 28384                           fsr0l	equ	0xFE9
 28385                           wreg	equ	0xFE8
 28386                           indf1	equ	0xFE7
 28387                           postdec1	equ	0xFE5
 28388                           fsr1h	equ	0xFE2
 28389                           fsr1l	equ	0xFE1
 28390                           indf2	equ	0xFDF
 28391                           postinc2	equ	0xFDE
 28392                           postdec2	equ	0xFDD
 28393                           plusw2	equ	0xFDB
 28394                           fsr2h	equ	0xFDA
 28395                           fsr2l	equ	0xFD9
 28396                           status	equ	0xFD8
 28397                           
 28398 ;; *************** function _USBSuspend *****************
 28399 ;; Defined at:
 28400 ;;		line 1889 in file "../Includes/Usb/Framework/usb_device.c"
 28401 ;; Parameters:    Size  Location     Type
 28402 ;;		None
 28403 ;; Auto vars:     Size  Location     Type
 28404 ;;		None
 28405 ;; Return value:  Size  Location     Type
 28406 ;;                  1    wreg      void 
 28407 ;; Registers used:
 28408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28409 ;; Tracked objects:
 28410 ;;		On entry : 0/0
 28411 ;;		On exit  : 0/0
 28412 ;;		Unchanged: 0/0
 28413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28414 ;;      Params:         0       0       0       0       0       0       0       0       0
 28415 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28416 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28417 ;;      Totals:         0       0       0       0       0       0       0       0       0
 28418 ;;Total ram usage:        0 bytes
 28419 ;; Hardware stack levels used:    1
 28420 ;; Hardware stack levels required when called:    5
 28421 ;; This function calls:
 28422 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28423 ;; This function is called by:
 28424 ;;		_USBDeviceTasks
 28425 ;; This function uses a non-reentrant model
 28426 ;;
 28427                           
 28428                           	psect	text108
 28429  00703A                     __ptext108:
 28430                           	opt stack 0
 28431  00703A                     _USBSuspend:
 28432                           	opt stack 14
 28433                           
 28434                           ;usb_device.c: 1914: UIEbits.ACTVIE = 1;
 28435                           
 28436                           ;incstack = 0
 28437  00703A  8464               	bsf	3940,2,c	;volatile
 28438                           
 28439                           ;usb_device.c: 1915: (UIR &= 0xEF);
 28440  00703C  9865               	bcf	3941,4,c	;volatile
 28441                           
 28442                           ;usb_device.c: 1917: UCONbits.SUSPND = 1;
 28443  00703E  8260               	bsf	3936,1,c	;volatile
 28444                           
 28445                           ;usb_device.c: 1919: USBBusIsSuspended = 1;
 28446  007040  0E01               	movlw	1
 28447  007042  0100               	movlb	0	; () banked
 28448  007044  6FD6               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 28449                           
 28450                           ; BSR set to: 0
 28451                           ;usb_device.c: 1926: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 28452  007046  0E00               	movlw	0
 28453  007048  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 28454  00704A  0E75               	movlw	117
 28455  00704C  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 28456  00704E  0E00               	movlw	0
 28457  007050  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 28458  007052  0E00               	movlw	0
 28459  007054  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 28460  007056  0E00               	movlw	0
 28461  007058  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 28462  00705A  0E00               	movlw	0
 28463  00705C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 28464  00705E  EC16  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 28465  007062  0012               	return		;funcret
 28466  007064                     __end_of_USBSuspend:
 28467                           	opt stack 0
 28468                           pclatu	equ	0xFFB
 28469                           pclath	equ	0xFFA
 28470                           tblptru	equ	0xFF8
 28471                           tblptrh	equ	0xFF7
 28472                           tblptrl	equ	0xFF6
 28473                           tablat	equ	0xFF5
 28474                           prodh	equ	0xFF4
 28475                           prodl	equ	0xFF3
 28476                           intcon	equ	0xFF2
 28477                           intcon3	equ	0xFF0
 28478                           indf0	equ	0xFEF
 28479                           postinc0	equ	0xFEE
 28480                           fsr0h	equ	0xFEA
 28481                           fsr0l	equ	0xFE9
 28482                           wreg	equ	0xFE8
 28483                           indf1	equ	0xFE7
 28484                           postdec1	equ	0xFE5
 28485                           fsr1h	equ	0xFE2
 28486                           fsr1l	equ	0xFE1
 28487                           indf2	equ	0xFDF
 28488                           postinc2	equ	0xFDE
 28489                           postdec2	equ	0xFDD
 28490                           plusw2	equ	0xFDB
 28491                           fsr2h	equ	0xFDA
 28492                           fsr2l	equ	0xFD9
 28493                           status	equ	0xFD8
 28494                           
 28495 ;; *************** function _USBStallHandler *****************
 28496 ;; Defined at:
 28497 ;;		line 1846 in file "../Includes/Usb/Framework/usb_device.c"
 28498 ;; Parameters:    Size  Location     Type
 28499 ;;		None
 28500 ;; Auto vars:     Size  Location     Type
 28501 ;;		None
 28502 ;; Return value:  Size  Location     Type
 28503 ;;                  1    wreg      void 
 28504 ;; Registers used:
 28505 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28506 ;; Tracked objects:
 28507 ;;		On entry : 0/0
 28508 ;;		On exit  : 0/0
 28509 ;;		Unchanged: 0/0
 28510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28511 ;;      Params:         0       0       0       0       0       0       0       0       0
 28512 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28513 ;;      Temps:          1       0       0       0       0       0       0       0       0
 28514 ;;      Totals:         1       0       0       0       0       0       0       0       0
 28515 ;;Total ram usage:        1 bytes
 28516 ;; Hardware stack levels used:    1
 28517 ;; This function calls:
 28518 ;;		Nothing
 28519 ;; This function is called by:
 28520 ;;		_USBDeviceTasks
 28521 ;; This function uses a non-reentrant model
 28522 ;;
 28523                           
 28524                           	psect	text109
 28525  006B3A                     __ptext109:
 28526                           	opt stack 0
 28527  006B3A                     _USBStallHandler:
 28528                           	opt stack 19
 28529                           
 28530                           ;usb_device.c: 1858: if(UEP0bits.EPSTALL == 1)
 28531                           
 28532                           ;incstack = 0
 28533  006B3A  A06A               	btfss	3946,0,c	;volatile
 28534  006B3C  D001               	goto	i2u967_41
 28535  006B3E  D001               	goto	i2u967_40
 28536  006B40                     i2u967_41:
 28537  006B40  D022               	goto	i2l1874
 28538  006B42                     i2u967_40:
 28539                           
 28540                           ;usb_device.c: 1859: {
 28541                           ;usb_device.c: 1861: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 28542  006B42  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 28543  006B46  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 28544  006B4A  0E80               	movlw	128
 28545  006B4C  18DE               	xorwf	postinc2,w,c
 28546  006B4E  A4D8               	btfss	status,2,c
 28547  006B50  D001               	goto	i2u968_41
 28548  006B52  D001               	goto	i2u968_40
 28549  006B54                     i2u968_41:
 28550  006B54  D017               	goto	i2l10905
 28551  006B56                     i2u968_40:
 28552  006B56  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 28553  006B5A  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28554  006B5E  0E84               	movlw	132
 28555  006B60  18DE               	xorwf	postinc2,w,c
 28556  006B62  A4D8               	btfss	status,2,c
 28557  006B64  D001               	goto	i2u969_41
 28558  006B66  D001               	goto	i2u969_40
 28559  006B68                     i2u969_41:
 28560  006B68  D00D               	goto	i2l10905
 28561  006B6A                     i2u969_40:
 28562                           
 28563                           ;usb_device.c: 1862: {
 28564                           ;usb_device.c: 1864: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 28565  006B6A  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 28566  006B6E  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 28567  006B72  0E0C               	movlw	12
 28568  006B74  6EDF               	movwf	indf2,c
 28569                           
 28570                           ;usb_device.c: 1865: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 28571  006B76  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 28572  006B7A  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 28573  006B7E  0E00               	movlw	0
 28574  006B80  8EDB               	bsf	plusw2,7,c
 28575  006B82  D000               	goto	i2l10905
 28576  006B84                     i2l10905:
 28577                           
 28578                           ;usb_device.c: 1866: }
 28579                           ;usb_device.c: 1867: UEP0bits.EPSTALL = 0;
 28580  006B84  906A               	bcf	3946,0,c	;volatile
 28581  006B86                     i2l1874:
 28582                           
 28583                           ;usb_device.c: 1868: }
 28584                           ;usb_device.c: 1870: (UIR &= 0xDF);
 28585  006B86  9A65               	bcf	3941,5,c	;volatile
 28586  006B88  0012               	return		;funcret
 28587  006B8A                     __end_of_USBStallHandler:
 28588                           	opt stack 0
 28589                           pclatu	equ	0xFFB
 28590                           pclath	equ	0xFFA
 28591                           tblptru	equ	0xFF8
 28592                           tblptrh	equ	0xFF7
 28593                           tblptrl	equ	0xFF6
 28594                           tablat	equ	0xFF5
 28595                           prodh	equ	0xFF4
 28596                           prodl	equ	0xFF3
 28597                           intcon	equ	0xFF2
 28598                           intcon3	equ	0xFF0
 28599                           indf0	equ	0xFEF
 28600                           postinc0	equ	0xFEE
 28601                           fsr0h	equ	0xFEA
 28602                           fsr0l	equ	0xFE9
 28603                           wreg	equ	0xFE8
 28604                           indf1	equ	0xFE7
 28605                           postdec1	equ	0xFE5
 28606                           fsr1h	equ	0xFE2
 28607                           fsr1l	equ	0xFE1
 28608                           indf2	equ	0xFDF
 28609                           postinc2	equ	0xFDE
 28610                           postdec2	equ	0xFDD
 28611                           plusw2	equ	0xFDB
 28612                           fsr2h	equ	0xFDA
 28613                           fsr2l	equ	0xFD9
 28614                           status	equ	0xFD8
 28615                           
 28616 ;; *************** function _USBCtrlEPService *****************
 28617 ;; Defined at:
 28618 ;;		line 2004 in file "../Includes/Usb/Framework/usb_device.c"
 28619 ;; Parameters:    Size  Location     Type
 28620 ;;		None
 28621 ;; Auto vars:     Size  Location     Type
 28622 ;;  setup_cnt       1   29[COMRAM] unsigned char 
 28623 ;; Return value:  Size  Location     Type
 28624 ;;                  1    wreg      void 
 28625 ;; Registers used:
 28626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 28627 ;; Tracked objects:
 28628 ;;		On entry : 0/0
 28629 ;;		On exit  : 0/0
 28630 ;;		Unchanged: 0/0
 28631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28632 ;;      Params:         0       0       0       0       0       0       0       0       0
 28633 ;;      Locals:         1       0       0       0       0       0       0       0       0
 28634 ;;      Temps:          2       0       0       0       0       0       0       0       0
 28635 ;;      Totals:         3       0       0       0       0       0       0       0       0
 28636 ;;Total ram usage:        3 bytes
 28637 ;; Hardware stack levels used:    1
 28638 ;; Hardware stack levels required when called:    8
 28639 ;; This function calls:
 28640 ;;		_USBCtrlTrfInHandler
 28641 ;;		_USBCtrlTrfOutHandler
 28642 ;;		_USBCtrlTrfSetupHandler
 28643 ;; This function is called by:
 28644 ;;		_USBDeviceTasks
 28645 ;; This function uses a non-reentrant model
 28646 ;;
 28647                           
 28648                           	psect	text110
 28649  0050B0                     __ptext110:
 28650                           	opt stack 0
 28651  0050B0                     _USBCtrlEPService:
 28652                           	opt stack 11
 28653                           
 28654                           ;usb_device.c: 2009: USBStatusStageTimeoutCounter = (uint8_t)45;
 28655                           
 28656                           ;incstack = 0
 28657  0050B0  0E2D               	movlw	45
 28658  0050B2  6E4B               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 28659                           
 28660                           ;usb_device.c: 2012: if((USTATcopy.Val & ~0x02) == 0x00)
 28661  0050B4  C058  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 28662  0050B8  0EFD               	movlw	253
 28663  0050BA  161C               	andwf	??_USBCtrlEPService,f,c
 28664  0050BC  A4D8               	btfss	status,2,c
 28665  0050BE  D001               	goto	i2u970_41
 28666  0050C0  D001               	goto	i2u970_40
 28667  0050C2                     i2u970_41:
 28668  0050C2  D062               	goto	i2l10939
 28669  0050C4                     i2u970_40:
 28670                           
 28671                           ;usb_device.c: 2013: {
 28672                           ;usb_device.c: 2015: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 28673  0050C4  C058  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 28674  0050C8  90D8               	bcf	status,0,c
 28675  0050CA  321C               	rrcf	??_USBCtrlEPService,f,c
 28676  0050CC  0E3F               	movlw	63
 28677  0050CE  161C               	andwf	??_USBCtrlEPService,f,c
 28678  0050D0  501C               	movf	??_USBCtrlEPService,w,c
 28679  0050D2  0D04               	mullw	4
 28680  0050D4  0E00               	movlw	0
 28681  0050D6  24F3               	addwf	prodl,w,c
 28682  0050D8  6E44               	movwf	_pBDTEntryEP0OutCurrent,c
 28683  0050DA  0E04               	movlw	4
 28684  0050DC  20F4               	addwfc	prodh,w,c
 28685  0050DE  6E45               	movwf	_pBDTEntryEP0OutCurrent+1,c
 28686                           
 28687                           ;usb_device.c: 2019: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 28688  0050E0  C044  F042         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 28689  0050E4  C045  F043         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 28690                           
 28691                           ;usb_device.c: 2021: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 28692  0050E8  0E04               	movlw	4
 28693  0050EA  1A42               	xorwf	_pBDTEntryEP0OutNext,f,c
 28694                           
 28695                           ;usb_device.c: 2024: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 28696  0050EC  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 28697  0050F0  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 28698  0050F4  30DF               	rrcf	indf2,w,c
 28699  0050F6  32E8               	rrcf	wreg,f,c
 28700  0050F8  0B0F               	andlw	15
 28701  0050FA  0A0D               	xorlw	13
 28702  0050FC  A4D8               	btfss	status,2,c
 28703  0050FE  D001               	goto	i2u971_41
 28704  005100  D001               	goto	i2u971_40
 28705  005102                     i2u971_41:
 28706  005102  D03E               	goto	i2l10937
 28707  005104                     i2u971_40:
 28708                           
 28709                           ;usb_device.c: 2025: {
 28710                           ;usb_device.c: 2026: unsigned char setup_cnt;
 28711                           ;usb_device.c: 2032: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 28712  005104  0E00               	movlw	0
 28713  005106  6E1E               	movwf	USBCtrlEPService@setup_cnt,c
 28714  005108  0E07               	movlw	7
 28715  00510A  641E               	cpfsgt	USBCtrlEPService@setup_cnt,c
 28716  00510C  D001               	goto	i2u972_41
 28717  00510E  D001               	goto	i2u972_40
 28718  005110                     i2u972_41:
 28719  005110  D002               	goto	i2l10925
 28720  005112                     i2u972_40:
 28721  005112  D029               	goto	i2l10933
 28722  005114  D028               	goto	i2l10933
 28723  005116                     i2l10925:
 28724                           
 28725                           ;usb_device.c: 2033: {
 28726                           ;usb_device.c: 2034: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 28727  005116  EE20 F002          	lfsr	2,2
 28728  00511A  5044               	movf	_pBDTEntryEP0OutCurrent,w,c
 28729  00511C  26D9               	addwf	fsr2l,f,c
 28730  00511E  5045               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 28731  005120  22DA               	addwfc	fsr2h,f,c
 28732  005122  CFDE F01C          	movff	postinc2,??_USBCtrlEPService
 28733  005126  CFDD F01D          	movff	postdec2,??_USBCtrlEPService+1
 28734  00512A  C01C  FFD9         	movff	??_USBCtrlEPService,fsr2l
 28735  00512E  C01D  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 28736  005132  501E               	movf	USBCtrlEPService@setup_cnt,w,c
 28737  005134  0D01               	mullw	1
 28738  005136  0E30               	movlw	48
 28739  005138  24F3               	addwf	prodl,w,c
 28740  00513A  6EE1               	movwf	fsr1l,c
 28741  00513C  0E04               	movlw	4
 28742  00513E  20F4               	addwfc	prodh,w,c
 28743  005140  6EE2               	movwf	fsr1h,c
 28744  005142  CFDF FFE7          	movff	indf2,indf1
 28745                           
 28746                           ;usb_device.c: 2035: pBDTEntryEP0OutCurrent->ADR++;
 28747  005146  EE20 F002          	lfsr	2,2
 28748  00514A  5044               	movf	_pBDTEntryEP0OutCurrent,w,c
 28749  00514C  26D9               	addwf	fsr2l,f,c
 28750  00514E  5045               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 28751  005150  22DA               	addwfc	fsr2h,f,c
 28752  005152  2ADE               	incf	postinc2,f,c
 28753  005154  0E00               	movlw	0
 28754  005156  22DD               	addwfc	postdec2,f,c
 28755  005158  2A1E               	incf	USBCtrlEPService@setup_cnt,f,c
 28756  00515A  0E07               	movlw	7
 28757  00515C  641E               	cpfsgt	USBCtrlEPService@setup_cnt,c
 28758  00515E  D001               	goto	i2u973_41
 28759  005160  D001               	goto	i2u973_40
 28760  005162                     i2u973_41:
 28761  005162  D7D9               	goto	i2l10925
 28762  005164                     i2u973_40:
 28763  005164  D000               	goto	i2l10933
 28764  005166                     i2l10933:
 28765                           
 28766                           ;usb_device.c: 2036: }
 28767                           ;usb_device.c: 2037: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 28768  005166  EE20 F002          	lfsr	2,2
 28769  00516A  5044               	movf	_pBDTEntryEP0OutCurrent,w,c
 28770  00516C  26D9               	addwf	fsr2l,f,c
 28771  00516E  5045               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 28772  005170  22DA               	addwfc	fsr2h,f,c
 28773  005172  0E30               	movlw	48
 28774  005174  6EDE               	movwf	postinc2,c
 28775  005176  0E04               	movlw	4
 28776  005178  6EDD               	movwf	postdec2,c
 28777                           
 28778                           ;usb_device.c: 2040: USBCtrlTrfSetupHandler();
 28779  00517A  ECD1  F030         	call	_USBCtrlTrfSetupHandler	;wreg free
 28780                           
 28781                           ;usb_device.c: 2041: }
 28782  00517E  D00F               	goto	i2l1895
 28783  005180                     i2l10937:
 28784                           
 28785                           ;usb_device.c: 2042: else
 28786                           ;usb_device.c: 2043: {
 28787                           ;usb_device.c: 2045: USBCtrlTrfOutHandler();
 28788  005180  EC6A  F033         	call	_USBCtrlTrfOutHandler	;wreg free
 28789  005184  D00C               	goto	i2l1895
 28790                           
 28791                           ;usb_device.c: 2046: }
 28792                           ;usb_device.c: 2047: }
 28793  005186  D00B               	goto	i2l1895
 28794  005188                     i2l10939:
 28795                           
 28796                           ;usb_device.c: 2048: else if((USTATcopy.Val & ~0x02) == 0x04)
 28797  005188  5058               	movf	_USTATcopy,w,c	;volatile
 28798  00518A  0BFD               	andlw	253
 28799  00518C  0A04               	xorlw	4
 28800  00518E  A4D8               	btfss	status,2,c
 28801  005190  D001               	goto	i2u974_41
 28802  005192  D001               	goto	i2u974_40
 28803  005194                     i2u974_41:
 28804  005194  D004               	goto	i2l1895
 28805  005196                     i2u974_40:
 28806                           
 28807                           ;usb_device.c: 2049: {
 28808                           ;usb_device.c: 2052: USBCtrlTrfInHandler();
 28809  005196  ECE6  F021         	call	_USBCtrlTrfInHandler	;wreg free
 28810  00519A  D001               	goto	i2l1895
 28811  00519C  D000               	goto	i2l1895
 28812  00519E                     i2l1895:
 28813  00519E  0012               	return		;funcret
 28814  0051A0                     __end_of_USBCtrlEPService:
 28815                           	opt stack 0
 28816                           pclatu	equ	0xFFB
 28817                           pclath	equ	0xFFA
 28818                           tblptru	equ	0xFF8
 28819                           tblptrh	equ	0xFF7
 28820                           tblptrl	equ	0xFF6
 28821                           tablat	equ	0xFF5
 28822                           prodh	equ	0xFF4
 28823                           prodl	equ	0xFF3
 28824                           intcon	equ	0xFF2
 28825                           intcon3	equ	0xFF0
 28826                           indf0	equ	0xFEF
 28827                           postinc0	equ	0xFEE
 28828                           fsr0h	equ	0xFEA
 28829                           fsr0l	equ	0xFE9
 28830                           wreg	equ	0xFE8
 28831                           indf1	equ	0xFE7
 28832                           postdec1	equ	0xFE5
 28833                           fsr1h	equ	0xFE2
 28834                           fsr1l	equ	0xFE1
 28835                           indf2	equ	0xFDF
 28836                           postinc2	equ	0xFDE
 28837                           postdec2	equ	0xFDD
 28838                           plusw2	equ	0xFDB
 28839                           fsr2h	equ	0xFDA
 28840                           fsr2l	equ	0xFD9
 28841                           status	equ	0xFD8
 28842                           
 28843 ;; *************** function _USBCtrlTrfSetupHandler *****************
 28844 ;; Defined at:
 28845 ;;		line 2097 in file "../Includes/Usb/Framework/usb_device.c"
 28846 ;; Parameters:    Size  Location     Type
 28847 ;;		None
 28848 ;; Auto vars:     Size  Location     Type
 28849 ;;		None
 28850 ;; Return value:  Size  Location     Type
 28851 ;;                  1    wreg      void 
 28852 ;; Registers used:
 28853 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28854 ;; Tracked objects:
 28855 ;;		On entry : 0/0
 28856 ;;		On exit  : 0/0
 28857 ;;		Unchanged: 0/0
 28858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28859 ;;      Params:         0       0       0       0       0       0       0       0       0
 28860 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28861 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28862 ;;      Totals:         0       0       0       0       0       0       0       0       0
 28863 ;;Total ram usage:        0 bytes
 28864 ;; Hardware stack levels used:    1
 28865 ;; Hardware stack levels required when called:    7
 28866 ;; This function calls:
 28867 ;;		_USBCheckStdRequest
 28868 ;;		_USBCtrlEPServiceComplete
 28869 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28870 ;; This function is called by:
 28871 ;;		_USBCtrlEPService
 28872 ;; This function uses a non-reentrant model
 28873 ;;
 28874                           
 28875                           	psect	text111
 28876  0061A2                     __ptext111:
 28877                           	opt stack 0
 28878  0061A2                     _USBCtrlTrfSetupHandler:
 28879                           	opt stack 11
 28880                           
 28881                           ;usb_device.c: 2102: shortPacketStatus = 0;
 28882                           
 28883                           ;incstack = 0
 28884  0061A2  0E00               	movlw	0
 28885  0061A4  6E4E               	movwf	_shortPacketStatus,c	;volatile
 28886                           
 28887                           ;usb_device.c: 2103: USBDeferStatusStagePacket = 0;
 28888  0061A6  0E00               	movlw	0
 28889  0061A8  6E4A               	movwf	_USBDeferStatusStagePacket,c	;volatile
 28890                           
 28891                           ;usb_device.c: 2104: USBDeferINDataStagePackets = 0;
 28892  0061AA  0E00               	movlw	0
 28893  0061AC  0100               	movlb	0	; () banked
 28894  0061AE  6FD2               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 28895                           
 28896                           ;usb_device.c: 2105: USBDeferOUTDataStagePackets = 0;
 28897  0061B0  0E00               	movlw	0
 28898  0061B2  0100               	movlb	0	; () banked
 28899  0061B4  6FD1               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 28900                           
 28901                           ;usb_device.c: 2106: BothEP0OutUOWNsSet = 0;
 28902  0061B6  0E00               	movlw	0
 28903  0061B8  0100               	movlb	0	; () banked
 28904  0061BA  6FD5               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 28905                           
 28906                           ;usb_device.c: 2107: controlTransferState = 0;
 28907  0061BC  0E00               	movlw	0
 28908  0061BE  6E4D               	movwf	_controlTransferState,c	;volatile
 28909                           
 28910                           ; BSR set to: 0
 28911                           ;usb_device.c: 2116: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 28912  0061C0  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 28913  0061C4  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28914  0061C8  0E7F               	movlw	127
 28915  0061CA  16DF               	andwf	indf2,f,c
 28916                           
 28917                           ; BSR set to: 0
 28918                           ;usb_device.c: 2117: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 28919  0061CC  0E04               	movlw	4
 28920  0061CE  1A3C               	xorwf	_pBDTEntryIn,f,c
 28921                           
 28922                           ; BSR set to: 0
 28923                           ;usb_device.c: 2118: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 28924  0061D0  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 28925  0061D4  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28926  0061D8  0E7F               	movlw	127
 28927  0061DA  16DF               	andwf	indf2,f,c
 28928                           
 28929                           ; BSR set to: 0
 28930                           ;usb_device.c: 2119: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 28931  0061DC  0E04               	movlw	4
 28932  0061DE  1A3C               	xorwf	_pBDTEntryIn,f,c
 28933                           
 28934                           ; BSR set to: 0
 28935                           ;usb_device.c: 2120: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 28936  0061E0  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28937  0061E4  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28938  0061E8  0E7F               	movlw	127
 28939  0061EA  16DF               	andwf	indf2,f,c
 28940                           
 28941                           ; BSR set to: 0
 28942                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 28943  0061EC  0E00               	movlw	0
 28944  0061EE  6E39               	movwf	_inPipes+3,c	;volatile
 28945                           
 28946                           ; BSR set to: 0
 28947                           ;usb_device.c: 2123: inPipes[0].wCount.Val = 0;
 28948  0061F0  0E00               	movlw	0
 28949  0061F2  6E3B               	movwf	_inPipes+5,c	;volatile
 28950  0061F4  0E00               	movlw	0
 28951  0061F6  6E3A               	movwf	_inPipes+4,c	;volatile
 28952                           
 28953                           ; BSR set to: 0
 28954                           ;usb_device.c: 2124: outPipes[0].info.Val = 0;
 28955  0061F8  0E00               	movlw	0
 28956  0061FA  6E31               	movwf	_outPipes+3,c	;volatile
 28957                           
 28958                           ; BSR set to: 0
 28959                           ;usb_device.c: 2125: outPipes[0].wCount.Val = 0;
 28960  0061FC  0E00               	movlw	0
 28961  0061FE  6E33               	movwf	_outPipes+5,c	;volatile
 28962  006200  0E00               	movlw	0
 28963  006202  6E32               	movwf	_outPipes+4,c	;volatile
 28964                           
 28965                           ; BSR set to: 0
 28966                           ;usb_device.c: 2131: USBCheckStdRequest();
 28967  006204  ECDF  F027         	call	_USBCheckStdRequest	;wreg free
 28968                           
 28969                           ;usb_device.c: 2132: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 28970  006208  0E00               	movlw	0
 28971  00620A  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 28972  00620C  0E03               	movlw	3
 28973  00620E  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 28974  006210  0E00               	movlw	0
 28975  006212  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 28976  006214  0E00               	movlw	0
 28977  006216  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 28978  006218  0E00               	movlw	0
 28979  00621A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 28980  00621C  0E00               	movlw	0
 28981  00621E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 28982  006220  EC16  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 28983                           
 28984                           ;usb_device.c: 2145: USBCtrlEPServiceComplete();
 28985  006224  EC30  F020         	call	_USBCtrlEPServiceComplete	;wreg free
 28986  006228  0012               	return		;funcret
 28987  00622A                     __end_of_USBCtrlTrfSetupHandler:
 28988                           	opt stack 0
 28989                           pclatu	equ	0xFFB
 28990                           pclath	equ	0xFFA
 28991                           tblptru	equ	0xFF8
 28992                           tblptrh	equ	0xFF7
 28993                           tblptrl	equ	0xFF6
 28994                           tablat	equ	0xFF5
 28995                           prodh	equ	0xFF4
 28996                           prodl	equ	0xFF3
 28997                           intcon	equ	0xFF2
 28998                           intcon3	equ	0xFF0
 28999                           indf0	equ	0xFEF
 29000                           postinc0	equ	0xFEE
 29001                           fsr0h	equ	0xFEA
 29002                           fsr0l	equ	0xFE9
 29003                           wreg	equ	0xFE8
 29004                           indf1	equ	0xFE7
 29005                           postdec1	equ	0xFE5
 29006                           fsr1h	equ	0xFE2
 29007                           fsr1l	equ	0xFE1
 29008                           indf2	equ	0xFDF
 29009                           postinc2	equ	0xFDE
 29010                           postdec2	equ	0xFDD
 29011                           plusw2	equ	0xFDB
 29012                           fsr2h	equ	0xFDA
 29013                           fsr2l	equ	0xFD9
 29014                           status	equ	0xFD8
 29015                           
 29016 ;; *************** function _USBCtrlEPServiceComplete *****************
 29017 ;; Defined at:
 29018 ;;		line 1282 in file "../Includes/Usb/Framework/usb_device.c"
 29019 ;; Parameters:    Size  Location     Type
 29020 ;;		None
 29021 ;; Auto vars:     Size  Location     Type
 29022 ;;		None
 29023 ;; Return value:  Size  Location     Type
 29024 ;;                  1    wreg      void 
 29025 ;; Registers used:
 29026 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29027 ;; Tracked objects:
 29028 ;;		On entry : 0/0
 29029 ;;		On exit  : 0/0
 29030 ;;		Unchanged: 0/0
 29031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29032 ;;      Params:         0       0       0       0       0       0       0       0       0
 29033 ;;      Locals:         0       0       0       0       0       0       0       0       0
 29034 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29035 ;;      Totals:         0       0       0       0       0       0       0       0       0
 29036 ;;Total ram usage:        0 bytes
 29037 ;; Hardware stack levels used:    1
 29038 ;; Hardware stack levels required when called:    2
 29039 ;; This function calls:
 29040 ;;		_USBCtrlEPAllowDataStage
 29041 ;;		_USBCtrlEPAllowStatusStage
 29042 ;; This function is called by:
 29043 ;;		_USBCtrlTrfSetupHandler
 29044 ;; This function uses a non-reentrant model
 29045 ;;
 29046                           
 29047                           	psect	text112
 29048  004060                     __ptext112:
 29049                           	opt stack 0
 29050  004060                     _USBCtrlEPServiceComplete:
 29051                           	opt stack 15
 29052                           
 29053                           ;usb_device.c: 1288: UCONbits.PKTDIS = 0;
 29054                           
 29055                           ;incstack = 0
 29056  004060  9860               	bcf	3936,4,c	;volatile
 29057                           
 29058                           ;usb_device.c: 1294: if(inPipes[0].info.bits.busy == 0)
 29059  004062  BE39               	btfsc	_inPipes+3,7,c	;volatile
 29060  004064  D001               	goto	i2u649_41
 29061  004066  D001               	goto	i2u649_40
 29062  004068                     i2u649_41:
 29063  004068  D042               	goto	i2l1798
 29064  00406A                     i2u649_40:
 29065                           
 29066                           ;usb_device.c: 1295: {
 29067                           ;usb_device.c: 1296: if(outPipes[0].info.bits.busy == 1)
 29068  00406A  AE31               	btfss	_outPipes+3,7,c	;volatile
 29069  00406C  D001               	goto	i2u650_41
 29070  00406E  D001               	goto	i2u650_40
 29071  004070                     i2u650_41:
 29072  004070  D012               	goto	i2l8383
 29073  004072                     i2u650_40:
 29074                           
 29075                           ;usb_device.c: 1297: {
 29076                           ;usb_device.c: 1298: controlTransferState = 2;
 29077  004072  0E02               	movlw	2
 29078  004074  6E4D               	movwf	_controlTransferState,c	;volatile
 29079                           
 29080                           ;usb_device.c: 1309: if(USBDeferOUTDataStagePackets == 0)
 29081  004076  0100               	movlb	0	; () banked
 29082  004078  51D1               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 29083  00407A  A4D8               	btfss	status,2,c
 29084  00407C  D001               	goto	i2u651_41
 29085  00407E  D001               	goto	i2u651_40
 29086  004080                     i2u651_41:
 29087  004080  D003               	goto	i2l8379
 29088  004082                     i2u651_40:
 29089                           
 29090                           ; BSR set to: 0
 29091                           ;usb_device.c: 1310: {
 29092                           ;usb_device.c: 1311: USBCtrlEPAllowDataStage();
 29093  004082  EC08  F02F         	call	_USBCtrlEPAllowDataStage	;wreg free
 29094  004086  D000               	goto	i2l8379
 29095  004088                     i2l8379:
 29096                           
 29097                           ;usb_device.c: 1312: }
 29098                           ;usb_device.c: 1316: USBStatusStageEnabledFlag2 = 0;
 29099  004088  0E00               	movlw	0
 29100  00408A  0100               	movlb	0	; () banked
 29101  00408C  6FD3               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 29102                           
 29103                           ; BSR set to: 0
 29104                           ;usb_device.c: 1317: USBStatusStageEnabledFlag1 = 0;
 29105  00408E  0E00               	movlw	0
 29106  004090  0100               	movlb	0	; () banked
 29107  004092  6FD4               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 29108                           
 29109                           ;usb_device.c: 1318: }
 29110  004094  D07B               	goto	i2l1808
 29111  004096                     i2l8383:
 29112                           
 29113                           ;usb_device.c: 1319: else
 29114                           ;usb_device.c: 1320: {
 29115                           ;usb_device.c: 1325: pBDTEntryEP0OutNext->CNT = 8;
 29116  004096  EE20 F001          	lfsr	2,1
 29117  00409A  5042               	movf	_pBDTEntryEP0OutNext,w,c
 29118  00409C  26D9               	addwf	fsr2l,f,c
 29119  00409E  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 29120  0040A0  22DA               	addwfc	fsr2h,f,c
 29121  0040A2  0E08               	movlw	8
 29122  0040A4  6EDF               	movwf	indf2,c
 29123                           
 29124                           ;usb_device.c: 1326: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29125  0040A6  EE20 F002          	lfsr	2,2
 29126  0040AA  5042               	movf	_pBDTEntryEP0OutNext,w,c
 29127  0040AC  26D9               	addwf	fsr2l,f,c
 29128  0040AE  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 29129  0040B0  22DA               	addwfc	fsr2h,f,c
 29130  0040B2  0E30               	movlw	48
 29131  0040B4  6EDE               	movwf	postinc2,c
 29132  0040B6  0E04               	movlw	4
 29133  0040B8  6EDD               	movwf	postdec2,c
 29134                           
 29135                           ;usb_device.c: 1327: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 29136  0040BA  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29137  0040BE  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29138  0040C2  0E0C               	movlw	12
 29139  0040C4  6EDF               	movwf	indf2,c
 29140                           
 29141                           ;usb_device.c: 1328: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29142  0040C6  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29143  0040CA  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29144  0040CE  0E00               	movlw	0
 29145  0040D0  8EDB               	bsf	plusw2,7,c
 29146                           
 29147                           ;usb_device.c: 1329: pBDTEntryIn[0]->STAT.Val = 0x04;
 29148  0040D2  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 29149  0040D6  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29150  0040DA  0E04               	movlw	4
 29151  0040DC  6EDF               	movwf	indf2,c
 29152                           
 29153                           ;usb_device.c: 1330: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29154  0040DE  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 29155  0040E2  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29156  0040E6  0E00               	movlw	0
 29157  0040E8  8EDB               	bsf	plusw2,7,c
 29158  0040EA  D050               	goto	i2l1808
 29159                           
 29160                           ;usb_device.c: 1331: }
 29161                           ;usb_device.c: 1332: }
 29162  0040EC  D04F               	goto	i2l1808
 29163  0040EE                     i2l1798:
 29164                           
 29165                           ;usb_device.c: 1333: else
 29166                           ;usb_device.c: 1334: {
 29167                           ;usb_device.c: 1335: if(SetupPkt.DataDir == (0x80>>7))
 29168  0040EE  0104               	movlb	4	; () banked
 29169  0040F0  AF30               	btfss	48,7,b	;volatile
 29170  0040F2  D001               	goto	i2u652_41
 29171  0040F4  D001               	goto	i2u652_40
 29172  0040F6                     i2u652_41:
 29173  0040F6  D01A               	goto	i2l8403
 29174  0040F8                     i2u652_40:
 29175                           
 29176                           ; BSR set to: 4
 29177                           ;usb_device.c: 1336: {
 29178                           ;usb_device.c: 1337: controlTransferState = 1;
 29179  0040F8  0E01               	movlw	1
 29180  0040FA  6E4D               	movwf	_controlTransferState,c	;volatile
 29181                           
 29182                           ;usb_device.c: 1351: if(USBDeferINDataStagePackets == 0)
 29183  0040FC  0100               	movlb	0	; () banked
 29184  0040FE  51D2               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 29185  004100  A4D8               	btfss	status,2,c
 29186  004102  D001               	goto	i2u653_41
 29187  004104  D001               	goto	i2u653_40
 29188  004106                     i2u653_41:
 29189  004106  D003               	goto	i2l8395
 29190  004108                     i2u653_40:
 29191                           
 29192                           ; BSR set to: 0
 29193                           ;usb_device.c: 1352: {
 29194                           ;usb_device.c: 1353: USBCtrlEPAllowDataStage();
 29195  004108  EC08  F02F         	call	_USBCtrlEPAllowDataStage	;wreg free
 29196  00410C  D000               	goto	i2l8395
 29197  00410E                     i2l8395:
 29198                           
 29199                           ;usb_device.c: 1354: }
 29200                           ;usb_device.c: 1376: USBStatusStageEnabledFlag2 = 0;
 29201  00410E  0E00               	movlw	0
 29202  004110  0100               	movlb	0	; () banked
 29203  004112  6FD3               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 29204                           
 29205                           ; BSR set to: 0
 29206                           ;usb_device.c: 1377: USBStatusStageEnabledFlag1 = 0;
 29207  004114  0E00               	movlw	0
 29208  004116  0100               	movlb	0	; () banked
 29209  004118  6FD4               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 29210                           
 29211                           ; BSR set to: 0
 29212                           ;usb_device.c: 1378: if(USBDeferStatusStagePacket == 0)
 29213  00411A  504A               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 29214  00411C  A4D8               	btfss	status,2,c
 29215  00411E  D001               	goto	i2u654_41
 29216  004120  D001               	goto	i2u654_40
 29217  004122                     i2u654_41:
 29218  004122  D034               	goto	i2l1808
 29219  004124                     i2u654_40:
 29220                           
 29221                           ; BSR set to: 0
 29222                           ;usb_device.c: 1379: {
 29223                           ;usb_device.c: 1380: USBCtrlEPAllowStatusStage();
 29224  004124  EC46  F029         	call	_USBCtrlEPAllowStatusStage	;wreg free
 29225  004128  D031               	goto	i2l1808
 29226                           
 29227                           ;usb_device.c: 1381: }
 29228                           ;usb_device.c: 1382: }
 29229  00412A  D030               	goto	i2l1808
 29230  00412C                     i2l8403:
 29231                           
 29232                           ;usb_device.c: 1383: else
 29233                           ;usb_device.c: 1384: {
 29234                           ;usb_device.c: 1395: controlTransferState = 2;
 29235  00412C  0E02               	movlw	2
 29236  00412E  6E4D               	movwf	_controlTransferState,c	;volatile
 29237                           
 29238                           ;usb_device.c: 1398: pBDTEntryEP0OutNext->CNT = 8;
 29239  004130  EE20 F001          	lfsr	2,1
 29240  004134  5042               	movf	_pBDTEntryEP0OutNext,w,c
 29241  004136  26D9               	addwf	fsr2l,f,c
 29242  004138  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 29243  00413A  22DA               	addwfc	fsr2h,f,c
 29244  00413C  0E08               	movlw	8
 29245  00413E  6EDF               	movwf	indf2,c
 29246                           
 29247                           ;usb_device.c: 1399: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29248  004140  EE20 F002          	lfsr	2,2
 29249  004144  5042               	movf	_pBDTEntryEP0OutNext,w,c
 29250  004146  26D9               	addwf	fsr2l,f,c
 29251  004148  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 29252  00414A  22DA               	addwfc	fsr2h,f,c
 29253  00414C  0E30               	movlw	48
 29254  00414E  6EDE               	movwf	postinc2,c
 29255  004150  0E04               	movlw	4
 29256  004152  6EDD               	movwf	postdec2,c
 29257                           
 29258                           ;usb_device.c: 1400: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 29259  004154  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29260  004158  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29261  00415C  0E04               	movlw	4
 29262  00415E  6EDF               	movwf	indf2,c
 29263                           
 29264                           ;usb_device.c: 1401: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29265  004160  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29266  004164  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29267  004168  0E00               	movlw	0
 29268  00416A  8EDB               	bsf	plusw2,7,c
 29269                           
 29270                           ;usb_device.c: 1404: USBStatusStageEnabledFlag2 = 0;
 29271  00416C  0E00               	movlw	0
 29272  00416E  0100               	movlb	0	; () banked
 29273  004170  6FD3               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 29274                           
 29275                           ; BSR set to: 0
 29276                           ;usb_device.c: 1405: USBStatusStageEnabledFlag1 = 0;
 29277  004172  0E00               	movlw	0
 29278  004174  0100               	movlb	0	; () banked
 29279  004176  6FD4               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 29280                           
 29281                           ; BSR set to: 0
 29282                           ;usb_device.c: 1406: if(USBDeferStatusStagePacket == 0)
 29283  004178  504A               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 29284  00417A  A4D8               	btfss	status,2,c
 29285  00417C  D001               	goto	i2u655_41
 29286  00417E  D001               	goto	i2u655_40
 29287  004180                     i2u655_41:
 29288  004180  D005               	goto	i2l1808
 29289  004182                     i2u655_40:
 29290                           
 29291                           ; BSR set to: 0
 29292                           ;usb_device.c: 1407: {
 29293                           ;usb_device.c: 1408: USBCtrlEPAllowStatusStage();
 29294  004182  EC46  F029         	call	_USBCtrlEPAllowStatusStage	;wreg free
 29295  004186  D002               	goto	i2l1808
 29296  004188  D001               	goto	i2l1808
 29297  00418A  D000               	goto	i2l1808
 29298  00418C                     i2l1808:
 29299  00418C  0012               	return		;funcret
 29300  00418E                     __end_of_USBCtrlEPServiceComplete:
 29301                           	opt stack 0
 29302                           pclatu	equ	0xFFB
 29303                           pclath	equ	0xFFA
 29304                           tblptru	equ	0xFF8
 29305                           tblptrh	equ	0xFF7
 29306                           tblptrl	equ	0xFF6
 29307                           tablat	equ	0xFF5
 29308                           prodh	equ	0xFF4
 29309                           prodl	equ	0xFF3
 29310                           intcon	equ	0xFF2
 29311                           intcon3	equ	0xFF0
 29312                           indf0	equ	0xFEF
 29313                           postinc0	equ	0xFEE
 29314                           fsr0h	equ	0xFEA
 29315                           fsr0l	equ	0xFE9
 29316                           wreg	equ	0xFE8
 29317                           indf1	equ	0xFE7
 29318                           postdec1	equ	0xFE5
 29319                           fsr1h	equ	0xFE2
 29320                           fsr1l	equ	0xFE1
 29321                           indf2	equ	0xFDF
 29322                           postinc2	equ	0xFDE
 29323                           postdec2	equ	0xFDD
 29324                           plusw2	equ	0xFDB
 29325                           fsr2h	equ	0xFDA
 29326                           fsr2l	equ	0xFD9
 29327                           status	equ	0xFD8
 29328                           
 29329 ;; *************** function _USBCtrlEPAllowDataStage *****************
 29330 ;; Defined at:
 29331 ;;		line 1173 in file "../Includes/Usb/Framework/usb_device.c"
 29332 ;; Parameters:    Size  Location     Type
 29333 ;;		None
 29334 ;; Auto vars:     Size  Location     Type
 29335 ;;		None
 29336 ;; Return value:  Size  Location     Type
 29337 ;;                  1    wreg      void 
 29338 ;; Registers used:
 29339 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29340 ;; Tracked objects:
 29341 ;;		On entry : 0/0
 29342 ;;		On exit  : 0/0
 29343 ;;		Unchanged: 0/0
 29344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29345 ;;      Params:         0       0       0       0       0       0       0       0       0
 29346 ;;      Locals:         0       0       0       0       0       0       0       0       0
 29347 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29348 ;;      Totals:         0       0       0       0       0       0       0       0       0
 29349 ;;Total ram usage:        0 bytes
 29350 ;; Hardware stack levels used:    1
 29351 ;; Hardware stack levels required when called:    1
 29352 ;; This function calls:
 29353 ;;		_USBCtrlTrfTxService
 29354 ;; This function is called by:
 29355 ;;		_USBCtrlEPServiceComplete
 29356 ;; This function uses a non-reentrant model
 29357 ;;
 29358                           
 29359                           	psect	text113
 29360  005E10                     __ptext113:
 29361                           	opt stack 0
 29362  005E10                     _USBCtrlEPAllowDataStage:
 29363                           	opt stack 15
 29364                           
 29365                           ;usb_device.c: 1175: USBDeferINDataStagePackets = 0;
 29366                           
 29367                           ;incstack = 0
 29368  005E10  0E00               	movlw	0
 29369  005E12  0100               	movlb	0	; () banked
 29370  005E14  6FD2               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 29371                           
 29372                           ;usb_device.c: 1176: USBDeferOUTDataStagePackets = 0;
 29373  005E16  0E00               	movlw	0
 29374  005E18  0100               	movlb	0	; () banked
 29375  005E1A  6FD1               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 29376                           
 29377                           ; BSR set to: 0
 29378                           ;usb_device.c: 1178: if(controlTransferState == 2)
 29379  005E1C  0E02               	movlw	2
 29380  005E1E  184D               	xorwf	_controlTransferState,w,c	;volatile
 29381  005E20  A4D8               	btfss	status,2,c
 29382  005E22  D001               	goto	i2u594_41
 29383  005E24  D001               	goto	i2u594_40
 29384  005E26                     i2u594_41:
 29385  005E26  D01F               	goto	i2l8005
 29386  005E28                     i2u594_40:
 29387                           
 29388                           ; BSR set to: 0
 29389                           ;usb_device.c: 1179: {
 29390                           ;usb_device.c: 1181: pBDTEntryEP0OutNext->CNT = 8;
 29391  005E28  EE20 F001          	lfsr	2,1
 29392  005E2C  5042               	movf	_pBDTEntryEP0OutNext,w,c
 29393  005E2E  26D9               	addwf	fsr2l,f,c
 29394  005E30  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 29395  005E32  22DA               	addwfc	fsr2h,f,c
 29396  005E34  0E08               	movlw	8
 29397  005E36  6EDF               	movwf	indf2,c
 29398                           
 29399                           ;usb_device.c: 1182: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 29400  005E38  EE20 F002          	lfsr	2,2
 29401  005E3C  5042               	movf	_pBDTEntryEP0OutNext,w,c
 29402  005E3E  26D9               	addwf	fsr2l,f,c
 29403  005E40  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 29404  005E42  22DA               	addwfc	fsr2h,f,c
 29405  005E44  0E38               	movlw	56
 29406  005E46  6EDE               	movwf	postinc2,c
 29407  005E48  0E04               	movlw	4
 29408  005E4A  6EDD               	movwf	postdec2,c
 29409                           
 29410                           ; BSR set to: 0
 29411                           ;usb_device.c: 1183: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 29412  005E4C  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29413  005E50  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29414  005E54  0E48               	movlw	72
 29415  005E56  6EDF               	movwf	indf2,c
 29416                           
 29417                           ; BSR set to: 0
 29418                           ;usb_device.c: 1184: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29419  005E58  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29420  005E5C  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29421  005E60  0E00               	movlw	0
 29422  005E62  8EDB               	bsf	plusw2,7,c
 29423                           
 29424                           ;usb_device.c: 1185: }
 29425  005E64  D028               	goto	i2l1790
 29426  005E66                     i2l8005:
 29427                           
 29428                           ; BSR set to: 0
 29429                           ;usb_device.c: 1186: else
 29430                           ;usb_device.c: 1187: {
 29431                           ;usb_device.c: 1190: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 29432  005E66  503A               	movf	_inPipes+4,w,c	;volatile
 29433  005E68  0104               	movlb	4	; () banked
 29434  005E6A  5D36               	subwf	54,w,b	;volatile
 29435  005E6C  503B               	movf	_inPipes+5,w,c	;volatile
 29436  005E6E  0104               	movlb	4	; () banked
 29437  005E70  5937               	subwfb	55,w,b	;volatile
 29438  005E72  B0D8               	btfsc	status,0,c
 29439  005E74  D001               	goto	i2u595_41
 29440  005E76  D001               	goto	i2u595_40
 29441  005E78                     i2u595_41:
 29442  005E78  D005               	goto	i2l8009
 29443  005E7A                     i2u595_40:
 29444                           
 29445                           ; BSR set to: 4
 29446                           ;usb_device.c: 1191: {
 29447                           ;usb_device.c: 1192: inPipes[0].wCount.Val = SetupPkt.wLength;
 29448  005E7A  C436 F03A          	movff	1078,_inPipes+4	;volatile
 29449  005E7E  C437 F03B          	movff	1079,_inPipes+5	;volatile
 29450  005E82  D000               	goto	i2l8009
 29451  005E84                     i2l8009:
 29452                           
 29453                           ; BSR set to: 4
 29454                           ;usb_device.c: 1193: }
 29455                           ;usb_device.c: 1194: USBCtrlTrfTxService();
 29456  005E84  ECFB  F024         	call	_USBCtrlTrfTxService	;wreg free
 29457                           
 29458                           ;usb_device.c: 1199: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 29459  005E88  EE20 F002          	lfsr	2,2
 29460  005E8C  503C               	movf	_pBDTEntryIn,w,c
 29461  005E8E  26D9               	addwf	fsr2l,f,c
 29462  005E90  503D               	movf	_pBDTEntryIn+1,w,c
 29463  005E92  22DA               	addwfc	fsr2h,f,c
 29464  005E94  0E38               	movlw	56
 29465  005E96  6EDE               	movwf	postinc2,c
 29466  005E98  0E04               	movlw	4
 29467  005E9A  6EDD               	movwf	postdec2,c
 29468                           
 29469                           ;usb_device.c: 1200: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 29470  005E9C  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 29471  005EA0  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29472  005EA4  0E48               	movlw	72
 29473  005EA6  6EDF               	movwf	indf2,c
 29474                           
 29475                           ;usb_device.c: 1201: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29476  005EA8  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 29477  005EAC  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29478  005EB0  0E00               	movlw	0
 29479  005EB2  8EDB               	bsf	plusw2,7,c
 29480  005EB4  D000               	goto	i2l1790
 29481  005EB6                     i2l1790:
 29482  005EB6  0012               	return		;funcret
 29483  005EB8                     __end_of_USBCtrlEPAllowDataStage:
 29484                           	opt stack 0
 29485                           pclatu	equ	0xFFB
 29486                           pclath	equ	0xFFA
 29487                           tblptru	equ	0xFF8
 29488                           tblptrh	equ	0xFF7
 29489                           tblptrl	equ	0xFF6
 29490                           tablat	equ	0xFF5
 29491                           prodh	equ	0xFF4
 29492                           prodl	equ	0xFF3
 29493                           intcon	equ	0xFF2
 29494                           intcon3	equ	0xFF0
 29495                           indf0	equ	0xFEF
 29496                           postinc0	equ	0xFEE
 29497                           fsr0h	equ	0xFEA
 29498                           fsr0l	equ	0xFE9
 29499                           wreg	equ	0xFE8
 29500                           indf1	equ	0xFE7
 29501                           postdec1	equ	0xFE5
 29502                           fsr1h	equ	0xFE2
 29503                           fsr1l	equ	0xFE1
 29504                           indf2	equ	0xFDF
 29505                           postinc2	equ	0xFDE
 29506                           postdec2	equ	0xFDD
 29507                           plusw2	equ	0xFDB
 29508                           fsr2h	equ	0xFDA
 29509                           fsr2l	equ	0xFD9
 29510                           status	equ	0xFD8
 29511                           
 29512 ;; *************** function _USBCheckStdRequest *****************
 29513 ;; Defined at:
 29514 ;;		line 2317 in file "../Includes/Usb/Framework/usb_device.c"
 29515 ;; Parameters:    Size  Location     Type
 29516 ;;		None
 29517 ;; Auto vars:     Size  Location     Type
 29518 ;;		None
 29519 ;; Return value:  Size  Location     Type
 29520 ;;                  1    wreg      void 
 29521 ;; Registers used:
 29522 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29523 ;; Tracked objects:
 29524 ;;		On entry : 0/0
 29525 ;;		On exit  : 0/0
 29526 ;;		Unchanged: 0/0
 29527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29528 ;;      Params:         0       0       0       0       0       0       0       0       0
 29529 ;;      Locals:         0       0       0       0       0       0       0       0       0
 29530 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29531 ;;      Totals:         0       0       0       0       0       0       0       0       0
 29532 ;;Total ram usage:        0 bytes
 29533 ;; Hardware stack levels used:    1
 29534 ;; Hardware stack levels required when called:    6
 29535 ;; This function calls:
 29536 ;;		_USBStdFeatureReqHandler
 29537 ;;		_USBStdGetDscHandler
 29538 ;;		_USBStdGetStatusHandler
 29539 ;;		_USBStdSetCfgHandler
 29540 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 29541 ;; This function is called by:
 29542 ;;		_USBCtrlTrfSetupHandler
 29543 ;; This function uses a non-reentrant model
 29544 ;;
 29545                           
 29546                           	psect	text114
 29547  004FBE                     __ptext114:
 29548                           	opt stack 0
 29549  004FBE                     _USBCheckStdRequest:
 29550                           	opt stack 11
 29551                           
 29552                           ;usb_device.c: 2319: if(SetupPkt.RequestType != (0x00>>5)) return;
 29553                           
 29554                           ;incstack = 0
 29555  004FBE  0104               	movlb	4	; () banked
 29556  004FC0  3930               	swapf	48,w,b	;volatile
 29557  004FC2  32E8               	rrcf	wreg,f,c
 29558  004FC4  0B03               	andlw	3
 29559  004FC6  0900               	iorlw	0
 29560  004FC8  B4D8               	btfsc	status,2,c
 29561  004FCA  D001               	goto	i2u663_41
 29562  004FCC  D001               	goto	i2u663_40
 29563  004FCE                     i2u663_41:
 29564  004FCE  D04B               	goto	i2l8505
 29565  004FD0                     i2u663_40:
 29566  004FD0  D06E               	goto	i2l1923
 29567                           
 29568                           ; BSR set to: 4
 29569  004FD2  D06D               	goto	i2l1923
 29570                           
 29571                           ; BSR set to: 4
 29572                           ;usb_device.c: 2321: switch(SetupPkt.bRequest)
 29573  004FD4  D048               	goto	i2l8505
 29574  004FD6                     i2l1925:
 29575                           
 29576                           ; BSR set to: 4
 29577                           ;usb_device.c: 2324: inPipes[0].info.bits.busy = 1;
 29578  004FD6  8E39               	bsf	_inPipes+3,7,c	;volatile
 29579                           
 29580                           ; BSR set to: 4
 29581                           ;usb_device.c: 2325: USBDeviceState = ADR_PENDING_STATE;
 29582  004FD8  0E08               	movlw	8
 29583  004FDA  0100               	movlb	0	; () banked
 29584  004FDC  6FDE               	movwf	_USBDeviceState& (0+255),b	;volatile
 29585                           
 29586                           ;usb_device.c: 2327: break;
 29587  004FDE  D067               	goto	i2l1923
 29588  004FE0                     i2l8475:
 29589                           
 29590                           ;usb_device.c: 2329: USBStdGetDscHandler();
 29591  004FE0  EC95  F01F         	call	_USBStdGetDscHandler	;wreg free
 29592                           
 29593                           ;usb_device.c: 2330: break;
 29594  004FE4  D064               	goto	i2l1923
 29595  004FE6                     i2l8477:
 29596                           
 29597                           ;usb_device.c: 2332: USBStdSetCfgHandler();
 29598  004FE6  EC71  F026         	call	_USBStdSetCfgHandler	;wreg free
 29599                           
 29600                           ;usb_device.c: 2333: break;
 29601  004FEA  D061               	goto	i2l1923
 29602  004FEC                     i2l8479:
 29603                           
 29604                           ;usb_device.c: 2335: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 29605  004FEC  0E59               	movlw	low _USBActiveConfiguration
 29606  004FEE  6E36               	movwf	_inPipes,c	;volatile
 29607  004FF0  0E00               	movlw	high _USBActiveConfiguration
 29608  004FF2  6E37               	movwf	_inPipes+1,c	;volatile
 29609                           
 29610                           ;usb_device.c: 2336: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 29611  004FF4  8039               	bsf	_inPipes+3,0,c	;volatile
 29612                           
 29613                           ;usb_device.c: 2337: inPipes[0].wCount.v[0] = 1;
 29614  004FF6  0E01               	movlw	1
 29615  004FF8  6E3A               	movwf	_inPipes+4,c	;volatile
 29616                           
 29617                           ;usb_device.c: 2338: inPipes[0].info.bits.busy = 1;
 29618  004FFA  8E39               	bsf	_inPipes+3,7,c	;volatile
 29619                           
 29620                           ;usb_device.c: 2339: break;
 29621  004FFC  D058               	goto	i2l1923
 29622  004FFE                     i2l8487:
 29623                           
 29624                           ;usb_device.c: 2341: USBStdGetStatusHandler();
 29625  004FFE  EC2A  F02A         	call	_USBStdGetStatusHandler	;wreg free
 29626                           
 29627                           ;usb_device.c: 2342: break;
 29628  005002  D055               	goto	i2l1923
 29629                           
 29630                           ;usb_device.c: 2343: case 1:
 29631  005004  D000               	goto	i2l8489
 29632  005006                     i2l8489:
 29633                           
 29634                           ;usb_device.c: 2344: case 3:
 29635                           ;usb_device.c: 2345: USBStdFeatureReqHandler();
 29636  005006  EC2F  F015         	call	_USBStdFeatureReqHandler	;wreg free
 29637                           
 29638                           ;usb_device.c: 2346: break;
 29639  00500A  D051               	goto	i2l1923
 29640  00500C                     i2l8491:
 29641                           
 29642                           ;usb_device.c: 2348: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 29643  00500C  0104               	movlb	4	; () banked
 29644  00500E  5134               	movf	52,w,b	;volatile
 29645  005010  0D01               	mullw	1
 29646  005012  0EF3               	movlw	low _USBAlternateInterface
 29647  005014  24F3               	addwf	prodl,w,c
 29648  005016  6E36               	movwf	_inPipes,c	;volatile
 29649  005018  0E00               	movlw	high _USBAlternateInterface
 29650  00501A  20F4               	addwfc	prodh,w,c
 29651  00501C  6E37               	movwf	_inPipes+1,c	;volatile
 29652                           
 29653                           ; BSR set to: 4
 29654                           ;usb_device.c: 2349: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 29655  00501E  8039               	bsf	_inPipes+3,0,c	;volatile
 29656                           
 29657                           ; BSR set to: 4
 29658                           ;usb_device.c: 2350: inPipes[0].wCount.v[0] = 1;
 29659  005020  0E01               	movlw	1
 29660  005022  6E3A               	movwf	_inPipes+4,c	;volatile
 29661                           
 29662                           ; BSR set to: 4
 29663                           ;usb_device.c: 2351: inPipes[0].info.bits.busy = 1;
 29664  005024  8E39               	bsf	_inPipes+3,7,c	;volatile
 29665                           
 29666                           ;usb_device.c: 2352: break;
 29667  005026  D043               	goto	i2l1923
 29668  005028                     i2l1934:
 29669                           
 29670                           ; BSR set to: 4
 29671                           ;usb_device.c: 2354: inPipes[0].info.bits.busy = 1;
 29672  005028  8E39               	bsf	_inPipes+3,7,c	;volatile
 29673                           
 29674                           ; BSR set to: 4
 29675                           ;usb_device.c: 2355: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 29676  00502A  0104               	movlb	4	; () banked
 29677  00502C  5134               	movf	52,w,b	;volatile
 29678  00502E  0D01               	mullw	1
 29679  005030  0EF3               	movlw	low _USBAlternateInterface
 29680  005032  24F3               	addwf	prodl,w,c
 29681  005034  6ED9               	movwf	fsr2l,c
 29682  005036  0E00               	movlw	high _USBAlternateInterface
 29683  005038  20F4               	addwfc	prodh,w,c
 29684  00503A  6EDA               	movwf	fsr2h,c
 29685  00503C  C432 FFDF          	movff	1074,indf2	;volatile
 29686                           
 29687                           ;usb_device.c: 2356: break;
 29688  005040  D036               	goto	i2l1923
 29689  005042                     i2l8501:
 29690                           
 29691                           ; BSR set to: 4
 29692                           ;usb_device.c: 2358: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 29693  005042  0E00               	movlw	0
 29694  005044  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 29695  005046  0E02               	movlw	2
 29696  005048  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 29697  00504A  0E00               	movlw	0
 29698  00504C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 29699  00504E  0E00               	movlw	0
 29700  005050  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 29701  005052  0E00               	movlw	0
 29702  005054  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 29703  005056  0E00               	movlw	0
 29704  005058  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 29705  00505A  EC16  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 29706                           
 29707                           ;usb_device.c: 2359: break;
 29708  00505E  D027               	goto	i2l1923
 29709                           
 29710                           ;usb_device.c: 2360: case 12:
 29711  005060  D026               	goto	i2l1923
 29712                           
 29713                           ;usb_device.c: 2362: break;
 29714                           
 29715                           ;usb_device.c: 2361: default:
 29716  005062  D025               	goto	i2l1923
 29717                           
 29718                           ;usb_device.c: 2363: }
 29719  005064  D024               	goto	i2l1923
 29720  005066                     i2l8505:
 29721  005066  0104               	movlb	4	; () banked
 29722  005068  5131               	movf	49,w,b	;volatile
 29723                           
 29724                           ; Switch size 1, requested type "space"
 29725                           ; Number of cases is 11, Range of values is 0 to 12
 29726                           ; switch strategies available:
 29727                           ; Name         Instructions Cycles
 29728                           ; simple_byte           34    18 (average)
 29729                           ;	Chosen strategy is simple_byte
 29730  00506A  0A00               	xorlw	0	; case 0
 29731  00506C  B4D8               	btfsc	status,2,c
 29732  00506E  D7C7               	goto	i2l8487
 29733  005070  0A01               	xorlw	1	; case 1
 29734  005072  B4D8               	btfsc	status,2,c
 29735  005074  D7C8               	goto	i2l8489
 29736  005076  0A02               	xorlw	2	; case 3
 29737  005078  B4D8               	btfsc	status,2,c
 29738  00507A  D7C5               	goto	i2l8489
 29739  00507C  0A06               	xorlw	6	; case 5
 29740  00507E  B4D8               	btfsc	status,2,c
 29741  005080  D7AA               	goto	i2l1925
 29742  005082  0A03               	xorlw	3	; case 6
 29743  005084  B4D8               	btfsc	status,2,c
 29744  005086  D7AC               	goto	i2l8475
 29745  005088  0A01               	xorlw	1	; case 7
 29746  00508A  B4D8               	btfsc	status,2,c
 29747  00508C  D7DA               	goto	i2l8501
 29748  00508E  0A0F               	xorlw	15	; case 8
 29749  005090  B4D8               	btfsc	status,2,c
 29750  005092  D7AC               	goto	i2l8479
 29751  005094  0A01               	xorlw	1	; case 9
 29752  005096  B4D8               	btfsc	status,2,c
 29753  005098  D7A6               	goto	i2l8477
 29754  00509A  0A03               	xorlw	3	; case 10
 29755  00509C  B4D8               	btfsc	status,2,c
 29756  00509E  D7B6               	goto	i2l8491
 29757  0050A0  0A01               	xorlw	1	; case 11
 29758  0050A2  B4D8               	btfsc	status,2,c
 29759  0050A4  D7C1               	goto	i2l1934
 29760  0050A6  0A07               	xorlw	7	; case 12
 29761  0050A8  B4D8               	btfsc	status,2,c
 29762  0050AA  D001               	goto	i2l1923
 29763  0050AC  D000               	goto	i2l1923
 29764  0050AE                     i2l1923:
 29765  0050AE  0012               	return		;funcret
 29766  0050B0                     __end_of_USBCheckStdRequest:
 29767                           	opt stack 0
 29768                           pclatu	equ	0xFFB
 29769                           pclath	equ	0xFFA
 29770                           tblptru	equ	0xFF8
 29771                           tblptrh	equ	0xFF7
 29772                           tblptrl	equ	0xFF6
 29773                           tablat	equ	0xFF5
 29774                           prodh	equ	0xFF4
 29775                           prodl	equ	0xFF3
 29776                           intcon	equ	0xFF2
 29777                           intcon3	equ	0xFF0
 29778                           indf0	equ	0xFEF
 29779                           postinc0	equ	0xFEE
 29780                           fsr0h	equ	0xFEA
 29781                           fsr0l	equ	0xFE9
 29782                           wreg	equ	0xFE8
 29783                           indf1	equ	0xFE7
 29784                           postdec1	equ	0xFE5
 29785                           fsr1h	equ	0xFE2
 29786                           fsr1l	equ	0xFE1
 29787                           indf2	equ	0xFDF
 29788                           postinc2	equ	0xFDE
 29789                           postdec2	equ	0xFDD
 29790                           plusw2	equ	0xFDB
 29791                           fsr2h	equ	0xFDA
 29792                           fsr2l	equ	0xFD9
 29793                           status	equ	0xFD8
 29794                           
 29795 ;; *************** function _USBStdSetCfgHandler *****************
 29796 ;; Defined at:
 29797 ;;		line 1629 in file "../Includes/Usb/Framework/usb_device.c"
 29798 ;; Parameters:    Size  Location     Type
 29799 ;;		None
 29800 ;; Auto vars:     Size  Location     Type
 29801 ;;  i               1   21[COMRAM] unsigned char 
 29802 ;; Return value:  Size  Location     Type
 29803 ;;                  1    wreg      void 
 29804 ;; Registers used:
 29805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29806 ;; Tracked objects:
 29807 ;;		On entry : 0/0
 29808 ;;		On exit  : 0/0
 29809 ;;		Unchanged: 0/0
 29810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29811 ;;      Params:         0       0       0       0       0       0       0       0       0
 29812 ;;      Locals:         1       0       0       0       0       0       0       0       0
 29813 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29814 ;;      Totals:         1       0       0       0       0       0       0       0       0
 29815 ;;Total ram usage:        1 bytes
 29816 ;; Hardware stack levels used:    1
 29817 ;; Hardware stack levels required when called:    5
 29818 ;; This function calls:
 29819 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 29820 ;;		i2_memset
 29821 ;; This function is called by:
 29822 ;;		_USBCheckStdRequest
 29823 ;; This function uses a non-reentrant model
 29824 ;;
 29825                           
 29826                           	psect	text115
 29827  004CE2                     __ptext115:
 29828                           	opt stack 0
 29829  004CE2                     _USBStdSetCfgHandler:
 29830                           	opt stack 11
 29831                           
 29832                           ;usb_device.c: 1631: uint8_t i;
 29833                           ;usb_device.c: 1634: inPipes[0].info.bits.busy = 1;
 29834                           
 29835                           ;incstack = 0
 29836  004CE2  8E39               	bsf	_inPipes+3,7,c	;volatile
 29837                           
 29838                           ;usb_device.c: 1637: memset((void*)&UEP1,0x00,(2));;
 29839  004CE4  0E6B               	movlw	107
 29840  004CE6  6E01               	movwf	i2memset@p1,c
 29841  004CE8  0E0F               	movlw	15
 29842  004CEA  6E02               	movwf	i2memset@p1+1,c
 29843  004CEC  0E00               	movlw	0
 29844  004CEE  6E04               	movwf	i2memset@c+1,c
 29845  004CF0  0E00               	movlw	0
 29846  004CF2  6E03               	movwf	i2memset@c,c
 29847  004CF4  0E00               	movlw	0
 29848  004CF6  6E06               	movwf	i2memset@n+1,c
 29849  004CF8  0E02               	movlw	2
 29850  004CFA  6E05               	movwf	i2memset@n,c
 29851  004CFC  ECBA  F037         	call	i2_memset	;wreg free
 29852                           
 29853                           ;usb_device.c: 1640: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 29854  004D00  0E00               	movlw	0
 29855  004D02  6E01               	movwf	i2memset@p1,c
 29856  004D04  0E04               	movlw	4
 29857  004D06  6E02               	movwf	i2memset@p1+1,c
 29858  004D08  0E00               	movlw	0
 29859  004D0A  6E04               	movwf	i2memset@c+1,c
 29860  004D0C  0E00               	movlw	0
 29861  004D0E  6E03               	movwf	i2memset@c,c
 29862  004D10  0E00               	movlw	0
 29863  004D12  6E06               	movwf	i2memset@n+1,c
 29864  004D14  0E30               	movlw	48
 29865  004D16  6E05               	movwf	i2memset@n,c
 29866  004D18  ECBA  F037         	call	i2_memset	;wreg free
 29867                           
 29868                           ;usb_device.c: 1643: UCONbits.PPBRST = 1;
 29869  004D1C  8C60               	bsf	3936,6,c	;volatile
 29870                           
 29871                           ;usb_device.c: 1648: for(i = 0; i < (uint8_t)(2+1u); i++)
 29872  004D1E  0E00               	movlw	0
 29873  004D20  6E16               	movwf	USBStdSetCfgHandler@i,c
 29874  004D22  0E02               	movlw	2
 29875  004D24  6416               	cpfsgt	USBStdSetCfgHandler@i,c
 29876  004D26  D001               	goto	i2u596_41
 29877  004D28  D001               	goto	i2u596_40
 29878  004D2A                     i2u596_41:
 29879  004D2A  D002               	goto	i2l8029
 29880  004D2C                     i2u596_40:
 29881  004D2C  D01C               	goto	i2l8035
 29882  004D2E  D01B               	goto	i2l8035
 29883  004D30                     i2l8029:
 29884                           
 29885                           ;usb_device.c: 1649: {
 29886                           ;usb_device.c: 1650: ep_data_in[i].Val = 0u;
 29887  004D30  5016               	movf	USBStdSetCfgHandler@i,w,c
 29888  004D32  0D01               	mullw	1
 29889  004D34  0EBA               	movlw	low _ep_data_in
 29890  004D36  24F3               	addwf	prodl,w,c
 29891  004D38  6ED9               	movwf	fsr2l,c
 29892  004D3A  0E00               	movlw	high _ep_data_in
 29893  004D3C  20F4               	addwfc	prodh,w,c
 29894  004D3E  6EDA               	movwf	fsr2h,c
 29895  004D40  0E00               	movlw	0
 29896  004D42  6EDF               	movwf	indf2,c
 29897                           
 29898                           ;usb_device.c: 1651: ep_data_out[i].Val = 0u;
 29899  004D44  5016               	movf	USBStdSetCfgHandler@i,w,c
 29900  004D46  0D01               	mullw	1
 29901  004D48  0EB7               	movlw	low _ep_data_out
 29902  004D4A  24F3               	addwf	prodl,w,c
 29903  004D4C  6ED9               	movwf	fsr2l,c
 29904  004D4E  0E00               	movlw	high _ep_data_out
 29905  004D50  20F4               	addwfc	prodh,w,c
 29906  004D52  6EDA               	movwf	fsr2h,c
 29907  004D54  0E00               	movlw	0
 29908  004D56  6EDF               	movwf	indf2,c
 29909  004D58  2A16               	incf	USBStdSetCfgHandler@i,f,c
 29910  004D5A  0E02               	movlw	2
 29911  004D5C  6416               	cpfsgt	USBStdSetCfgHandler@i,c
 29912  004D5E  D001               	goto	i2u597_41
 29913  004D60  D001               	goto	i2u597_40
 29914  004D62                     i2u597_41:
 29915  004D62  D7E6               	goto	i2l8029
 29916  004D64                     i2u597_40:
 29917  004D64  D000               	goto	i2l8035
 29918  004D66                     i2l8035:
 29919                           
 29920                           ;usb_device.c: 1652: }
 29921                           ;usb_device.c: 1655: memset((void*)&USBAlternateInterface,0x00,2);
 29922  004D66  0EF3               	movlw	low _USBAlternateInterface
 29923  004D68  6E01               	movwf	i2memset@p1,c
 29924  004D6A  0E00               	movlw	high _USBAlternateInterface
 29925  004D6C  6E02               	movwf	i2memset@p1+1,c
 29926  004D6E  0E00               	movlw	0
 29927  004D70  6E04               	movwf	i2memset@c+1,c
 29928  004D72  0E00               	movlw	0
 29929  004D74  6E03               	movwf	i2memset@c,c
 29930  004D76  0E00               	movlw	0
 29931  004D78  6E06               	movwf	i2memset@n+1,c
 29932  004D7A  0E02               	movlw	2
 29933  004D7C  6E05               	movwf	i2memset@n,c
 29934  004D7E  ECBA  F037         	call	i2_memset	;wreg free
 29935                           
 29936                           ;usb_device.c: 1658: UCONbits.PPBRST = 0;
 29937  004D82  9C60               	bcf	3936,6,c	;volatile
 29938                           
 29939                           ;usb_device.c: 1660: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 29940  004D84  0E08               	movlw	8
 29941  004D86  6E3C               	movwf	_pBDTEntryIn,c
 29942  004D88  0E04               	movlw	4
 29943  004D8A  6E3D               	movwf	_pBDTEntryIn+1,c
 29944                           
 29945                           ;usb_device.c: 1663: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 29946  004D8C  0E00               	movlw	0
 29947  004D8E  6E44               	movwf	_pBDTEntryEP0OutCurrent,c
 29948  004D90  0E04               	movlw	4
 29949  004D92  6E45               	movwf	_pBDTEntryEP0OutCurrent+1,c
 29950                           
 29951                           ;usb_device.c: 1664: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 29952  004D94  C044  F042         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 29953  004D98  C045  F043         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 29954                           
 29955                           ;usb_device.c: 1667: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 29956  004D9C  C432 F059          	movff	1074,_USBActiveConfiguration	;volatile
 29957                           
 29958                           ;usb_device.c: 1670: if(USBActiveConfiguration == 0)
 29959  004DA0  5059               	movf	_USBActiveConfiguration,w,c	;volatile
 29960  004DA2  A4D8               	btfss	status,2,c
 29961  004DA4  D001               	goto	i2u598_41
 29962  004DA6  D001               	goto	i2u598_40
 29963  004DA8                     i2u598_41:
 29964  004DA8  D004               	goto	i2l8051
 29965  004DAA                     i2u598_40:
 29966                           
 29967                           ;usb_device.c: 1671: {
 29968                           ;usb_device.c: 1673: USBDeviceState = ADDRESS_STATE;
 29969  004DAA  0E10               	movlw	16
 29970  004DAC  0100               	movlb	0	; () banked
 29971  004DAE  6FDE               	movwf	_USBDeviceState& (0+255),b	;volatile
 29972                           
 29973                           ;usb_device.c: 1674: }
 29974  004DB0  D012               	goto	i2l1843
 29975  004DB2                     i2l8051:
 29976                           
 29977                           ;usb_device.c: 1675: else
 29978                           ;usb_device.c: 1676: {
 29979                           ;usb_device.c: 1678: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 29980  004DB2  0E00               	movlw	0
 29981  004DB4  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 29982  004DB6  0E01               	movlw	1
 29983  004DB8  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 29984  004DBA  0E59               	movlw	low _USBActiveConfiguration
 29985  004DBC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 29986  004DBE  0E00               	movlw	high _USBActiveConfiguration
 29987  004DC0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 29988  004DC2  0E00               	movlw	0
 29989  004DC4  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 29990  004DC6  0E01               	movlw	1
 29991  004DC8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 29992  004DCA  EC16  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 29993                           
 29994                           ;usb_device.c: 1683: USBDeviceState = CONFIGURED_STATE;
 29995  004DCE  0E20               	movlw	32
 29996  004DD0  0100               	movlb	0	; () banked
 29997  004DD2  6FDE               	movwf	_USBDeviceState& (0+255),b	;volatile
 29998  004DD4  D000               	goto	i2l1843
 29999  004DD6                     i2l1843:
 30000                           
 30001                           ; BSR set to: 0
 30002  004DD6  0012               	return		;funcret
 30003  004DD8                     __end_of_USBStdSetCfgHandler:
 30004                           	opt stack 0
 30005                           pclatu	equ	0xFFB
 30006                           pclath	equ	0xFFA
 30007                           tblptru	equ	0xFF8
 30008                           tblptrh	equ	0xFF7
 30009                           tblptrl	equ	0xFF6
 30010                           tablat	equ	0xFF5
 30011                           prodh	equ	0xFF4
 30012                           prodl	equ	0xFF3
 30013                           intcon	equ	0xFF2
 30014                           intcon3	equ	0xFF0
 30015                           indf0	equ	0xFEF
 30016                           postinc0	equ	0xFEE
 30017                           fsr0h	equ	0xFEA
 30018                           fsr0l	equ	0xFE9
 30019                           wreg	equ	0xFE8
 30020                           indf1	equ	0xFE7
 30021                           postdec1	equ	0xFE5
 30022                           fsr1h	equ	0xFE2
 30023                           fsr1l	equ	0xFE1
 30024                           indf2	equ	0xFDF
 30025                           postinc2	equ	0xFDE
 30026                           postdec2	equ	0xFDD
 30027                           plusw2	equ	0xFDB
 30028                           fsr2h	equ	0xFDA
 30029                           fsr2l	equ	0xFD9
 30030                           status	equ	0xFD8
 30031                           
 30032 ;; *************** function i2_memset *****************
 30033 ;; Defined at:
 30034 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memset.c"
 30035 ;; Parameters:    Size  Location     Type
 30036 ;;  p1              2    0[COMRAM] PTR void 
 30037 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 30038 ;;  c               2    2[COMRAM] int 
 30039 ;;  n               2    4[COMRAM] unsigned int 
 30040 ;; Auto vars:     Size  Location     Type
 30041 ;;  memset          2    6[COMRAM] PTR unsigned char 
 30042 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 30043 ;; Return value:  Size  Location     Type
 30044 ;;                  2    0[COMRAM] PTR void 
 30045 ;; Registers used:
 30046 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30047 ;; Tracked objects:
 30048 ;;		On entry : 0/0
 30049 ;;		On exit  : 0/0
 30050 ;;		Unchanged: 0/0
 30051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30052 ;;      Params:         6       0       0       0       0       0       0       0       0
 30053 ;;      Locals:         2       0       0       0       0       0       0       0       0
 30054 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30055 ;;      Totals:         8       0       0       0       0       0       0       0       0
 30056 ;;Total ram usage:        8 bytes
 30057 ;; Hardware stack levels used:    1
 30058 ;; This function calls:
 30059 ;;		Nothing
 30060 ;; This function is called by:
 30061 ;;		_USBStdSetCfgHandler
 30062 ;;		i2_USBDeviceInit
 30063 ;; This function uses a non-reentrant model
 30064 ;;
 30065                           
 30066                           	psect	text116
 30067  006F74                     __ptext116:
 30068                           	opt stack 0
 30069  006F74                     i2_memset:
 30070                           	opt stack 18
 30071                           
 30072                           ; BSR set to: 0
 30073                           ;incstack = 0
 30074  006F74  C001  F007         	movff	i2memset@p1,i2memset@p
 30075  006F78  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 30076  006F7C  D009               	goto	i2l7851
 30077  006F7E                     i2l7847:
 30078  006F7E  C007  FFD9         	movff	i2memset@p,fsr2l
 30079  006F82  C008  FFDA         	movff	i2memset@p+1,fsr2h
 30080  006F86  C003  FFDF         	movff	i2memset@c,indf2
 30081  006F8A  4A07               	infsnz	i2memset@p,f,c
 30082  006F8C  2A08               	incf	i2memset@p+1,f,c
 30083  006F8E  D000               	goto	i2l7851
 30084  006F90                     i2l7851:
 30085  006F90  0605               	decf	i2memset@n,f,c
 30086  006F92  A0D8               	btfss	status,0,c
 30087  006F94  0606               	decf	i2memset@n+1,f,c
 30088  006F96  2805               	incf	i2memset@n,w,c
 30089  006F98  E104               	bnz	i2u580_41
 30090  006F9A  2806               	incf	i2memset@n+1,w,c
 30091  006F9C  A4D8               	btfss	status,2,c
 30092  006F9E  D001               	goto	i2u580_41
 30093  006FA0  D001               	goto	i2u580_40
 30094  006FA2                     i2u580_41:
 30095  006FA2  D7ED               	goto	i2l7847
 30096  006FA4                     i2u580_40:
 30097  006FA4  D000               	goto	i2l2603
 30098  006FA6                     i2l2603:
 30099  006FA6  0012               	return		;funcret
 30100  006FA8                     __end_ofi2_memset:
 30101                           	opt stack 0
 30102                           pclatu	equ	0xFFB
 30103                           pclath	equ	0xFFA
 30104                           tblptru	equ	0xFF8
 30105                           tblptrh	equ	0xFF7
 30106                           tblptrl	equ	0xFF6
 30107                           tablat	equ	0xFF5
 30108                           prodh	equ	0xFF4
 30109                           prodl	equ	0xFF3
 30110                           intcon	equ	0xFF2
 30111                           intcon3	equ	0xFF0
 30112                           indf0	equ	0xFEF
 30113                           postinc0	equ	0xFEE
 30114                           fsr0h	equ	0xFEA
 30115                           fsr0l	equ	0xFE9
 30116                           wreg	equ	0xFE8
 30117                           indf1	equ	0xFE7
 30118                           postdec1	equ	0xFE5
 30119                           fsr1h	equ	0xFE2
 30120                           fsr1l	equ	0xFE1
 30121                           indf2	equ	0xFDF
 30122                           postinc2	equ	0xFDE
 30123                           postdec2	equ	0xFDD
 30124                           plusw2	equ	0xFDB
 30125                           fsr2h	equ	0xFDA
 30126                           fsr2l	equ	0xFD9
 30127                           status	equ	0xFD8
 30128                           
 30129 ;; *************** function _USBStdGetStatusHandler *****************
 30130 ;; Defined at:
 30131 ;;		line 1773 in file "../Includes/Usb/Framework/usb_device.c"
 30132 ;; Parameters:    Size  Location     Type
 30133 ;;		None
 30134 ;; Auto vars:     Size  Location     Type
 30135 ;;  p               2    1[COMRAM] PTR struct __BDT
 30136 ;;		 -> BDT(48), NULL(0), 
 30137 ;; Return value:  Size  Location     Type
 30138 ;;                  1    wreg      void 
 30139 ;; Registers used:
 30140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30141 ;; Tracked objects:
 30142 ;;		On entry : 0/0
 30143 ;;		On exit  : 0/0
 30144 ;;		Unchanged: 0/0
 30145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30146 ;;      Params:         0       0       0       0       0       0       0       0       0
 30147 ;;      Locals:         2       0       0       0       0       0       0       0       0
 30148 ;;      Temps:          1       0       0       0       0       0       0       0       0
 30149 ;;      Totals:         3       0       0       0       0       0       0       0       0
 30150 ;;Total ram usage:        3 bytes
 30151 ;; Hardware stack levels used:    1
 30152 ;; This function calls:
 30153 ;;		Nothing
 30154 ;; This function is called by:
 30155 ;;		_USBCheckStdRequest
 30156 ;; This function uses a non-reentrant model
 30157 ;;
 30158                           
 30159                           	psect	text117
 30160  005454                     __ptext117:
 30161                           	opt stack 0
 30162  005454                     _USBStdGetStatusHandler:
 30163                           	opt stack 16
 30164                           
 30165                           ;usb_device.c: 1775: CtrlTrfData[0] = 0;
 30166                           
 30167                           ;incstack = 0
 30168  005454  0E00               	movlw	0
 30169  005456  0104               	movlb	4	; () banked
 30170  005458  6F38               	movwf	56,b	;volatile
 30171                           
 30172                           ;usb_device.c: 1776: CtrlTrfData[1] = 0;
 30173  00545A  0E00               	movlw	0
 30174  00545C  0104               	movlb	4	; () banked
 30175  00545E  6F39               	movwf	57,b	;volatile
 30176                           
 30177                           ;usb_device.c: 1778: switch(SetupPkt.Recipient)
 30178  005460  D04F               	goto	i2l8107
 30179  005462                     i2l1861:
 30180                           
 30181                           ; BSR set to: 4
 30182                           ;usb_device.c: 1781: inPipes[0].info.bits.busy = 1;
 30183  005462  8E39               	bsf	_inPipes+3,7,c	;volatile
 30184                           
 30185                           ;usb_device.c: 1786: if(0 == 1)
 30186  005464  D003               	goto	i2l8091
 30187                           
 30188                           ; BSR set to: 4
 30189                           ;usb_device.c: 1787: {
 30190                           ;usb_device.c: 1788: CtrlTrfData[0]|=0x01;
 30191  005466  0104               	movlb	4	; () banked
 30192  005468  8138               	bsf	56,0,b	;volatile
 30193  00546A  D000               	goto	i2l8091
 30194  00546C                     i2l8091:
 30195                           
 30196                           ; BSR set to: 4
 30197                           ;usb_device.c: 1789: }
 30198                           ;usb_device.c: 1791: if(RemoteWakeup == 1)
 30199  00546C  0100               	movlb	0	; () banked
 30200  00546E  05D7               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 30201  005470  A4D8               	btfss	status,2,c
 30202  005472  D001               	goto	i2u605_41
 30203  005474  D001               	goto	i2u605_40
 30204  005476                     i2u605_41:
 30205  005476  D051               	goto	i2l1864
 30206  005478                     i2u605_40:
 30207                           
 30208                           ; BSR set to: 0
 30209                           ;usb_device.c: 1792: {
 30210                           ;usb_device.c: 1793: CtrlTrfData[0]|=0x02;
 30211  005478  0104               	movlb	4	; () banked
 30212  00547A  8338               	bsf	56,1,b	;volatile
 30213  00547C  D04E               	goto	i2l1864
 30214                           
 30215                           ; BSR set to: 4
 30216                           ;usb_device.c: 1794: }
 30217                           ;usb_device.c: 1795: break;
 30218  00547E  D04D               	goto	i2l1864
 30219  005480                     i2l1865:
 30220                           
 30221                           ; BSR set to: 4
 30222                           ;usb_device.c: 1797: inPipes[0].info.bits.busy = 1;
 30223  005480  8E39               	bsf	_inPipes+3,7,c	;volatile
 30224                           
 30225                           ;usb_device.c: 1798: break;
 30226  005482  D04B               	goto	i2l1864
 30227  005484                     i2l1866:
 30228                           
 30229                           ; BSR set to: 4
 30230                           ;usb_device.c: 1800: inPipes[0].info.bits.busy = 1;
 30231  005484  8E39               	bsf	_inPipes+3,7,c	;volatile
 30232                           
 30233                           ;usb_device.c: 1804: {
 30234                           ;usb_device.c: 1805: BDT_ENTRY *p;
 30235                           ;usb_device.c: 1807: if(SetupPkt.EPDir == 0)
 30236  005486  0104               	movlb	4	; () banked
 30237  005488  BF34               	btfsc	52,7,b	;volatile
 30238  00548A  D001               	goto	i2u606_41
 30239  00548C  D001               	goto	i2u606_40
 30240  00548E                     i2u606_41:
 30241  00548E  D011               	goto	i2l8097
 30242  005490                     i2u606_40:
 30243                           
 30244                           ; BSR set to: 4
 30245                           ;usb_device.c: 1808: {
 30246                           ;usb_device.c: 1809: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 30247  005490  0104               	movlb	4	; () banked
 30248  005492  5134               	movf	52,w,b	;volatile
 30249  005494  0B0F               	andlw	15
 30250  005496  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 30251  005498  5001               	movf	??_USBStdGetStatusHandler,w,c
 30252  00549A  0D02               	mullw	2
 30253  00549C  0E40               	movlw	low _pBDTEntryOut
 30254  00549E  24F3               	addwf	prodl,w,c
 30255  0054A0  6ED9               	movwf	fsr2l,c
 30256  0054A2  0E01               	movlw	high _pBDTEntryOut
 30257  0054A4  20F4               	addwfc	prodh,w,c
 30258  0054A6  6EDA               	movwf	fsr2h,c
 30259  0054A8  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 30260  0054AC  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 30261                           
 30262                           ;usb_device.c: 1810: }
 30263  0054B0  D011               	goto	i2l8099
 30264  0054B2                     i2l8097:
 30265                           
 30266                           ; BSR set to: 4
 30267                           ;usb_device.c: 1811: else
 30268                           ;usb_device.c: 1812: {
 30269                           ;usb_device.c: 1813: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 30270  0054B2  0104               	movlb	4	; () banked
 30271  0054B4  5134               	movf	52,w,b	;volatile
 30272  0054B6  0B0F               	andlw	15
 30273  0054B8  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 30274  0054BA  5001               	movf	??_USBStdGetStatusHandler,w,c
 30275  0054BC  0D02               	mullw	2
 30276  0054BE  0E3C               	movlw	low _pBDTEntryIn
 30277  0054C0  24F3               	addwf	prodl,w,c
 30278  0054C2  6ED9               	movwf	fsr2l,c
 30279  0054C4  0E00               	movlw	high _pBDTEntryIn
 30280  0054C6  20F4               	addwfc	prodh,w,c
 30281  0054C8  6EDA               	movwf	fsr2h,c
 30282  0054CA  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 30283  0054CE  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 30284  0054D2  D000               	goto	i2l8099
 30285  0054D4                     i2l8099:
 30286                           
 30287                           ; BSR set to: 4
 30288                           ;usb_device.c: 1814: }
 30289                           ;usb_device.c: 1816: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 30290  0054D4  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 30291  0054D8  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 30292  0054DC  AEDF               	btfss	indf2,7,c
 30293  0054DE  D001               	goto	i2u607_41
 30294  0054E0  D001               	goto	i2u607_40
 30295  0054E2                     i2u607_41:
 30296  0054E2  D01B               	goto	i2l1864
 30297  0054E4                     i2u607_40:
 30298                           
 30299                           ; BSR set to: 4
 30300  0054E4  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 30301  0054E8  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 30302  0054EC  A4DF               	btfss	indf2,2,c
 30303  0054EE  D001               	goto	i2u608_41
 30304  0054F0  D001               	goto	i2u608_40
 30305  0054F2                     i2u608_41:
 30306  0054F2  D013               	goto	i2l1864
 30307  0054F4                     i2u608_40:
 30308                           
 30309                           ; BSR set to: 4
 30310                           ;usb_device.c: 1817: CtrlTrfData[0]=0x01;
 30311  0054F4  0E01               	movlw	1
 30312  0054F6  0104               	movlb	4	; () banked
 30313  0054F8  6F38               	movwf	56,b	;volatile
 30314  0054FA  D00F               	goto	i2l1864
 30315                           
 30316                           ; BSR set to: 4
 30317                           ;usb_device.c: 1818: break;
 30318  0054FC  D00E               	goto	i2l1864
 30319                           
 30320                           ; BSR set to: 4
 30321                           ;usb_device.c: 1819: }
 30322                           ;usb_device.c: 1820: }
 30323  0054FE  D00D               	goto	i2l1864
 30324  005500                     i2l8107:
 30325                           
 30326                           ; BSR set to: 4
 30327  005500  0104               	movlb	4	; () banked
 30328  005502  5130               	movf	48,w,b	;volatile
 30329  005504  0B1F               	andlw	31
 30330                           
 30331                           ; Switch size 1, requested type "space"
 30332                           ; Number of cases is 3, Range of values is 0 to 2
 30333                           ; switch strategies available:
 30334                           ; Name         Instructions Cycles
 30335                           ; simple_byte           10     6 (average)
 30336                           ;	Chosen strategy is simple_byte
 30337  005506  0A00               	xorlw	0	; case 0
 30338  005508  B4D8               	btfsc	status,2,c
 30339  00550A  D7AB               	goto	i2l1861
 30340  00550C  0A01               	xorlw	1	; case 1
 30341  00550E  B4D8               	btfsc	status,2,c
 30342  005510  D7B7               	goto	i2l1865
 30343  005512  0A03               	xorlw	3	; case 2
 30344  005514  B4D8               	btfsc	status,2,c
 30345  005516  D7B6               	goto	i2l1866
 30346  005518  D000               	goto	i2l1864
 30347  00551A                     i2l1864:
 30348                           
 30349                           ;usb_device.c: 1822: if(inPipes[0].info.bits.busy == 1)
 30350  00551A  AE39               	btfss	_inPipes+3,7,c	;volatile
 30351  00551C  D001               	goto	i2u609_41
 30352  00551E  D001               	goto	i2u609_40
 30353  005520                     i2u609_41:
 30354  005520  D008               	goto	i2l1871
 30355  005522                     i2u609_40:
 30356                           
 30357                           ;usb_device.c: 1823: {
 30358                           ;usb_device.c: 1824: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 30359  005522  0E38               	movlw	56
 30360  005524  6E36               	movwf	_inPipes,c	;volatile
 30361  005526  0E04               	movlw	4
 30362  005528  6E37               	movwf	_inPipes+1,c	;volatile
 30363                           
 30364                           ;usb_device.c: 1825: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 30365  00552A  8039               	bsf	_inPipes+3,0,c	;volatile
 30366                           
 30367                           ;usb_device.c: 1826: inPipes[0].wCount.v[0] = 2;
 30368  00552C  0E02               	movlw	2
 30369  00552E  6E3A               	movwf	_inPipes+4,c	;volatile
 30370  005530  D000               	goto	i2l1871
 30371  005532                     i2l1871:
 30372  005532  0012               	return		;funcret
 30373  005534                     __end_of_USBStdGetStatusHandler:
 30374                           	opt stack 0
 30375                           pclatu	equ	0xFFB
 30376                           pclath	equ	0xFFA
 30377                           tblptru	equ	0xFF8
 30378                           tblptrh	equ	0xFF7
 30379                           tblptrl	equ	0xFF6
 30380                           tablat	equ	0xFF5
 30381                           prodh	equ	0xFF4
 30382                           prodl	equ	0xFF3
 30383                           intcon	equ	0xFF2
 30384                           intcon3	equ	0xFF0
 30385                           indf0	equ	0xFEF
 30386                           postinc0	equ	0xFEE
 30387                           fsr0h	equ	0xFEA
 30388                           fsr0l	equ	0xFE9
 30389                           wreg	equ	0xFE8
 30390                           indf1	equ	0xFE7
 30391                           postdec1	equ	0xFE5
 30392                           fsr1h	equ	0xFE2
 30393                           fsr1l	equ	0xFE1
 30394                           indf2	equ	0xFDF
 30395                           postinc2	equ	0xFDE
 30396                           postdec2	equ	0xFDD
 30397                           plusw2	equ	0xFDB
 30398                           fsr2h	equ	0xFDA
 30399                           fsr2l	equ	0xFD9
 30400                           status	equ	0xFD8
 30401                           
 30402 ;; *************** function _USBStdGetDscHandler *****************
 30403 ;; Defined at:
 30404 ;;		line 1704 in file "../Includes/Usb/Framework/usb_device.c"
 30405 ;; Parameters:    Size  Location     Type
 30406 ;;		None
 30407 ;; Auto vars:     Size  Location     Type
 30408 ;;		None
 30409 ;; Return value:  Size  Location     Type
 30410 ;;                  1    wreg      void 
 30411 ;; Registers used:
 30412 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 30413 ;; Tracked objects:
 30414 ;;		On entry : 0/0
 30415 ;;		On exit  : 0/0
 30416 ;;		Unchanged: 0/0
 30417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30418 ;;      Params:         0       0       0       0       0       0       0       0       0
 30419 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30420 ;;      Temps:          2       0       0       0       0       0       0       0       0
 30421 ;;      Totals:         2       0       0       0       0       0       0       0       0
 30422 ;;Total ram usage:        2 bytes
 30423 ;; Hardware stack levels used:    1
 30424 ;; This function calls:
 30425 ;;		Nothing
 30426 ;; This function is called by:
 30427 ;;		_USBCheckStdRequest
 30428 ;; This function uses a non-reentrant model
 30429 ;;
 30430                           
 30431                           	psect	text118
 30432  003F2A                     __ptext118:
 30433                           	opt stack 0
 30434  003F2A                     _USBStdGetDscHandler:
 30435                           	opt stack 16
 30436                           
 30437                           ;usb_device.c: 1706: if(SetupPkt.bmRequestType == 0x80)
 30438                           
 30439                           ;incstack = 0
 30440  003F2A  0E80               	movlw	128
 30441  003F2C  0104               	movlb	4	; () banked
 30442  003F2E  1930               	xorwf	48,w,b	;volatile
 30443  003F30  A4D8               	btfss	status,2,c
 30444  003F32  D001               	goto	i2u599_41
 30445  003F34  D001               	goto	i2u599_40
 30446  003F36                     i2u599_41:
 30447  003F36  D093               	goto	i2l1857
 30448  003F38                     i2u599_40:
 30449                           
 30450                           ; BSR set to: 4
 30451                           ;usb_device.c: 1707: {
 30452                           ;usb_device.c: 1708: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 30453  003F38  0EC0               	movlw	192
 30454  003F3A  6E39               	movwf	_inPipes+3,c	;volatile
 30455                           
 30456                           ;usb_device.c: 1710: switch(SetupPkt.bDescriptorType)
 30457  003F3C  D083               	goto	i2l8085
 30458  003F3E                     i2l8059:
 30459                           
 30460                           ; BSR set to: 4
 30461                           ;usb_device.c: 1713: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 30462  003F3E  0EA2               	movlw	low _device_dsc
 30463  003F40  6E36               	movwf	_inPipes,c	;volatile
 30464  003F42  0E79               	movlw	high _device_dsc
 30465  003F44  6E37               	movwf	_inPipes+1,c	;volatile
 30466                           
 30467                           ; BSR set to: 4
 30468                           ;usb_device.c: 1714: inPipes[0].wCount.Val = sizeof(device_dsc);
 30469  003F46  0E00               	movlw	0
 30470  003F48  6E3B               	movwf	_inPipes+5,c	;volatile
 30471  003F4A  0E12               	movlw	18
 30472  003F4C  6E3A               	movwf	_inPipes+4,c	;volatile
 30473                           
 30474                           ;usb_device.c: 1715: break;
 30475  003F4E  D087               	goto	i2l1857
 30476  003F50                     i2l8063:
 30477                           
 30478                           ; BSR set to: 4
 30479                           ;usb_device.c: 1720: if(SetupPkt.bDscIndex < 1)
 30480  003F50  0104               	movlb	4	; () banked
 30481  003F52  5132               	movf	50,w,b	;volatile
 30482  003F54  A4D8               	btfss	status,2,c
 30483  003F56  D001               	goto	i2u600_41
 30484  003F58  D001               	goto	i2u600_40
 30485  003F5A                     i2u600_41:
 30486  003F5A  D03E               	goto	i2l8071
 30487  003F5C                     i2u600_40:
 30488                           
 30489                           ; BSR set to: 4
 30490                           ;usb_device.c: 1721: {
 30491                           ;usb_device.c: 1722: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 30492  003F5C  0104               	movlb	4	; () banked
 30493  003F5E  5132               	movf	50,w,b	;volatile
 30494  003F60  0D02               	mullw	2
 30495  003F62  0EF5               	movlw	low _USB_CD_Ptr
 30496  003F64  24F3               	addwf	prodl,w,c
 30497  003F66  6EF6               	movwf	tblptrl,c
 30498  003F68  0E75               	movlw	high _USB_CD_Ptr
 30499  003F6A  20F4               	addwfc	prodh,w,c
 30500  003F6C  6EF7               	movwf	tblptrh,c
 30501  003F6E                     	if	0	;There are less than 3 active tblptr bytes
 30502  003F6E                     	endif
 30503  003F6E  0009               	tblrd		*+
 30504  003F70  CFF5 F036          	movff	tablat,_inPipes	;volatile
 30505  003F74  000A               	tblrd		*-
 30506  003F76  CFF5 F037          	movff	tablat,_inPipes+1	;volatile
 30507                           
 30508                           ; BSR set to: 4
 30509                           ;usb_device.c: 1727: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 30510  003F7A  0E02               	movlw	2
 30511  003F7C  2436               	addwf	_inPipes,w,c	;volatile
 30512  003F7E  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 30513  003F80  0E00               	movlw	0
 30514  003F82  2037               	addwfc	_inPipes+1,w,c	;volatile
 30515  003F84  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 30516  003F86  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 30517  003F8A  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 30518  003F8E  6AF8               	clrf	tblptru,c
 30519  003F90  0E07               	movlw	(high __ramtop+-1)
 30520  003F92  64F7               	cpfsgt	tblptrh,c
 30521  003F94  D003               	bra	i2u601_47
 30522  003F96  0008               	tblrd		*
 30523  003F98  50F5               	movf	tablat,w,c
 30524  003F9A  D005               	bra	i2u601_40
 30525  003F9C                     i2u601_47:
 30526  003F9C  CFF6 FFE9          	movff	tblptrl,fsr0l
 30527  003FA0  CFF7 FFEA          	movff	tblptrh,fsr0h
 30528  003FA4  50EF               	movf	indf0,w,c
 30529  003FA6                     i2u601_40:
 30530  003FA6  6E3A               	movwf	_inPipes+4,c	;volatile
 30531                           
 30532                           ;usb_device.c: 1728: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 30533  003FA8  0E03               	movlw	3
 30534  003FAA  2436               	addwf	_inPipes,w,c	;volatile
 30535  003FAC  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 30536  003FAE  0E00               	movlw	0
 30537  003FB0  2037               	addwfc	_inPipes+1,w,c	;volatile
 30538  003FB2  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 30539  003FB4  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 30540  003FB8  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 30541  003FBC  6AF8               	clrf	tblptru,c
 30542  003FBE  0E07               	movlw	(high __ramtop+-1)
 30543  003FC0  64F7               	cpfsgt	tblptrh,c
 30544  003FC2  D003               	bra	i2u602_47
 30545  003FC4  0008               	tblrd		*
 30546  003FC6  50F5               	movf	tablat,w,c
 30547  003FC8  D005               	bra	i2u602_40
 30548  003FCA                     i2u602_47:
 30549  003FCA  CFF6 FFE9          	movff	tblptrl,fsr0l
 30550  003FCE  CFF7 FFEA          	movff	tblptrh,fsr0h
 30551  003FD2  50EF               	movf	indf0,w,c
 30552  003FD4                     i2u602_40:
 30553  003FD4  6E3B               	movwf	_inPipes+5,c	;volatile
 30554                           
 30555                           ;usb_device.c: 1729: }
 30556  003FD6  D043               	goto	i2l1857
 30557  003FD8                     i2l8071:
 30558                           
 30559                           ;usb_device.c: 1730: else
 30560                           ;usb_device.c: 1731: {
 30561                           ;usb_device.c: 1732: inPipes[0].info.Val = 0;
 30562  003FD8  0E00               	movlw	0
 30563  003FDA  6E39               	movwf	_inPipes+3,c	;volatile
 30564  003FDC  D040               	goto	i2l1857
 30565                           
 30566                           ;usb_device.c: 1733: }
 30567                           ;usb_device.c: 1734: break;
 30568  003FDE  D03F               	goto	i2l1857
 30569  003FE0                     i2l8073:
 30570                           
 30571                           ;usb_device.c: 1739: if(SetupPkt.bDscIndex<3)
 30572  003FE0  0E03               	movlw	3
 30573  003FE2  0104               	movlb	4	; () banked
 30574  003FE4  6132               	cpfslt	50,b	;volatile
 30575  003FE6  D001               	goto	i2u603_41
 30576  003FE8  D001               	goto	i2u603_40
 30577  003FEA                     i2u603_41:
 30578  003FEA  D024               	goto	i2l8079
 30579  003FEC                     i2u603_40:
 30580                           
 30581                           ; BSR set to: 4
 30582                           ;usb_device.c: 1740: {
 30583                           ;usb_device.c: 1742: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 30584  003FEC  0104               	movlb	4	; () banked
 30585  003FEE  5132               	movf	50,w,b	;volatile
 30586  003FF0  0D02               	mullw	2
 30587  003FF2  0EEF               	movlw	low _USB_SD_Ptr
 30588  003FF4  24F3               	addwf	prodl,w,c
 30589  003FF6  6EF6               	movwf	tblptrl,c
 30590  003FF8  0E75               	movlw	high _USB_SD_Ptr
 30591  003FFA  20F4               	addwfc	prodh,w,c
 30592  003FFC  6EF7               	movwf	tblptrh,c
 30593  003FFE                     	if	0	;There are less than 3 active tblptr bytes
 30594  003FFE                     	endif
 30595  003FFE  0009               	tblrd		*+
 30596  004000  CFF5 F036          	movff	tablat,_inPipes	;volatile
 30597  004004  000A               	tblrd		*-
 30598  004006  CFF5 F037          	movff	tablat,_inPipes+1	;volatile
 30599                           
 30600                           ; BSR set to: 4
 30601                           ;usb_device.c: 1744: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 30602  00400A  C036  FFF6         	movff	_inPipes,tblptrl	;volatile
 30603  00400E  C037  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 30604  004012  6AF8               	clrf	tblptru,c
 30605  004014  0E07               	movlw	(high __ramtop+-1)
 30606  004016  64F7               	cpfsgt	tblptrh,c
 30607  004018  D003               	bra	i2u604_47
 30608  00401A  0008               	tblrd		*
 30609  00401C  50F5               	movf	tablat,w,c
 30610  00401E  D005               	bra	i2u604_40
 30611  004020                     i2u604_47:
 30612  004020  CFF6 FFE9          	movff	tblptrl,fsr0l
 30613  004024  CFF7 FFEA          	movff	tblptrh,fsr0h
 30614  004028  50EF               	movf	indf0,w,c
 30615  00402A                     i2u604_40:
 30616  00402A  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 30617  00402C  5001               	movf	??_USBStdGetDscHandler,w,c
 30618  00402E  6E3A               	movwf	_inPipes+4,c	;volatile
 30619  004030  6A3B               	clrf	_inPipes+5,c	;volatile
 30620                           
 30621                           ;usb_device.c: 1745: }
 30622  004032  D015               	goto	i2l1857
 30623  004034                     i2l8079:
 30624                           
 30625                           ;usb_device.c: 1746: else
 30626                           ;usb_device.c: 1747: {
 30627                           ;usb_device.c: 1748: inPipes[0].info.Val = 0;
 30628  004034  0E00               	movlw	0
 30629  004036  6E39               	movwf	_inPipes+3,c	;volatile
 30630  004038  D012               	goto	i2l1857
 30631                           
 30632                           ;usb_device.c: 1749: }
 30633                           ;usb_device.c: 1750: break;
 30634  00403A  D011               	goto	i2l1857
 30635  00403C                     i2l8081:
 30636                           
 30637                           ;usb_device.c: 1752: inPipes[0].info.Val = 0;
 30638  00403C  0E00               	movlw	0
 30639  00403E  6E39               	movwf	_inPipes+3,c	;volatile
 30640                           
 30641                           ;usb_device.c: 1753: break;
 30642  004040  D00E               	goto	i2l1857
 30643                           
 30644                           ;usb_device.c: 1754: }
 30645  004042  D00D               	goto	i2l1857
 30646  004044                     i2l8085:
 30647  004044  0104               	movlb	4	; () banked
 30648  004046  5133               	movf	51,w,b	;volatile
 30649                           
 30650                           ; Switch size 1, requested type "space"
 30651                           ; Number of cases is 3, Range of values is 1 to 3
 30652                           ; switch strategies available:
 30653                           ; Name         Instructions Cycles
 30654                           ; simple_byte           10     6 (average)
 30655                           ;	Chosen strategy is simple_byte
 30656  004048  0A01               	xorlw	1	; case 1
 30657  00404A  B4D8               	btfsc	status,2,c
 30658  00404C  D778               	goto	i2l8059
 30659  00404E  0A03               	xorlw	3	; case 2
 30660  004050  B4D8               	btfsc	status,2,c
 30661  004052  D77E               	goto	i2l8063
 30662  004054  0A01               	xorlw	1	; case 3
 30663  004056  B4D8               	btfsc	status,2,c
 30664  004058  D7C3               	goto	i2l8073
 30665  00405A  D7F0               	goto	i2l8081
 30666                           
 30667                           ; BSR set to: 4
 30668  00405C  D000               	goto	i2l1857
 30669  00405E                     i2l1857:
 30670  00405E  0012               	return		;funcret
 30671  004060                     __end_of_USBStdGetDscHandler:
 30672                           	opt stack 0
 30673                           pclatu	equ	0xFFB
 30674                           pclath	equ	0xFFA
 30675                           tblptru	equ	0xFF8
 30676                           tblptrh	equ	0xFF7
 30677                           tblptrl	equ	0xFF6
 30678                           tablat	equ	0xFF5
 30679                           prodh	equ	0xFF4
 30680                           prodl	equ	0xFF3
 30681                           intcon	equ	0xFF2
 30682                           intcon3	equ	0xFF0
 30683                           indf0	equ	0xFEF
 30684                           postinc0	equ	0xFEE
 30685                           fsr0h	equ	0xFEA
 30686                           fsr0l	equ	0xFE9
 30687                           wreg	equ	0xFE8
 30688                           indf1	equ	0xFE7
 30689                           postdec1	equ	0xFE5
 30690                           fsr1h	equ	0xFE2
 30691                           fsr1l	equ	0xFE1
 30692                           indf2	equ	0xFDF
 30693                           postinc2	equ	0xFDE
 30694                           postdec2	equ	0xFDD
 30695                           plusw2	equ	0xFDB
 30696                           fsr2h	equ	0xFDA
 30697                           fsr2l	equ	0xFD9
 30698                           status	equ	0xFD8
 30699                           
 30700 ;; *************** function _USBStdFeatureReqHandler *****************
 30701 ;; Defined at:
 30702 ;;		line 2385 in file "../Includes/Usb/Framework/usb_device.c"
 30703 ;; Parameters:    Size  Location     Type
 30704 ;;		None
 30705 ;; Auto vars:     Size  Location     Type
 30706 ;;  p               2   25[COMRAM] PTR struct __BDT
 30707 ;;		 -> BDT(48), NULL(0), 
 30708 ;;  pUEP            2   22[COMRAM] PTR unsigned char 
 30709 ;;		 -> UEP0(1), 
 30710 ;;  current_ep_d    1   24[COMRAM] struct .
 30711 ;; Return value:  Size  Location     Type
 30712 ;;                  1    wreg      void 
 30713 ;; Registers used:
 30714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30715 ;; Tracked objects:
 30716 ;;		On entry : 0/0
 30717 ;;		On exit  : 0/0
 30718 ;;		Unchanged: 0/0
 30719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30720 ;;      Params:         0       0       0       0       0       0       0       0       0
 30721 ;;      Locals:         5       0       0       0       0       0       0       0       0
 30722 ;;      Temps:          1       0       0       0       0       0       0       0       0
 30723 ;;      Totals:         6       0       0       0       0       0       0       0       0
 30724 ;;Total ram usage:        6 bytes
 30725 ;; Hardware stack levels used:    1
 30726 ;; Hardware stack levels required when called:    5
 30727 ;; This function calls:
 30728 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 30729 ;; This function is called by:
 30730 ;;		_USBCheckStdRequest
 30731 ;; This function uses a non-reentrant model
 30732 ;;
 30733                           
 30734                           	psect	text119
 30735  002A5E                     __ptext119:
 30736                           	opt stack 0
 30737  002A5E                     _USBStdFeatureReqHandler:
 30738                           	opt stack 11
 30739                           
 30740                           ;usb_device.c: 2387: BDT_ENTRY *p;
 30741                           ;usb_device.c: 2388: EP_STATUS current_ep_data;
 30742                           ;usb_device.c: 2390: unsigned char* pUEP;
 30743                           ;usb_device.c: 2393: if((SetupPkt.bFeature == 1)&&
 30744                           ;usb_device.c: 2394: (SetupPkt.Recipient == (0x00)))
 30745                           
 30746                           ;incstack = 0
 30747  002A5E  0104               	movlb	4	; () banked
 30748  002A60  0532               	decf	50,w,b	;volatile
 30749  002A62  A4D8               	btfss	status,2,c
 30750  002A64  D001               	goto	i2u610_41
 30751  002A66  D001               	goto	i2u610_40
 30752  002A68                     i2u610_41:
 30753  002A68  D018               	goto	i2l1940
 30754  002A6A                     i2u610_40:
 30755                           
 30756                           ; BSR set to: 4
 30757  002A6A  0104               	movlb	4	; () banked
 30758  002A6C  5130               	movf	48,w,b	;volatile
 30759  002A6E  0B1F               	andlw	31
 30760  002A70  0900               	iorlw	0
 30761  002A72  A4D8               	btfss	status,2,c
 30762  002A74  D001               	goto	i2u611_41
 30763  002A76  D001               	goto	i2u611_40
 30764  002A78                     i2u611_41:
 30765  002A78  D010               	goto	i2l1940
 30766  002A7A                     i2u611_40:
 30767                           
 30768                           ; BSR set to: 4
 30769                           ;usb_device.c: 2395: {
 30770                           ;usb_device.c: 2396: inPipes[0].info.bits.busy = 1;
 30771  002A7A  8E39               	bsf	_inPipes+3,7,c	;volatile
 30772                           
 30773                           ; BSR set to: 4
 30774                           ;usb_device.c: 2397: if(SetupPkt.bRequest == 3)
 30775  002A7C  0E03               	movlw	3
 30776  002A7E  0104               	movlb	4	; () banked
 30777  002A80  1931               	xorwf	49,w,b	;volatile
 30778  002A82  A4D8               	btfss	status,2,c
 30779  002A84  D001               	goto	i2u612_41
 30780  002A86  D001               	goto	i2u612_40
 30781  002A88                     i2u612_41:
 30782  002A88  D004               	goto	i2l8125
 30783  002A8A                     i2u612_40:
 30784                           
 30785                           ; BSR set to: 4
 30786                           ;usb_device.c: 2398: RemoteWakeup = 1;
 30787  002A8A  0E01               	movlw	1
 30788  002A8C  0100               	movlb	0	; () banked
 30789  002A8E  6FD7               	movwf	_RemoteWakeup& (0+255),b	;volatile
 30790  002A90  D004               	goto	i2l1940
 30791  002A92                     i2l8125:
 30792                           
 30793                           ;usb_device.c: 2399: else
 30794                           ;usb_device.c: 2400: RemoteWakeup = 0;
 30795  002A92  0E00               	movlw	0
 30796  002A94  0100               	movlb	0	; () banked
 30797  002A96  6FD7               	movwf	_RemoteWakeup& (0+255),b	;volatile
 30798  002A98  D000               	goto	i2l1940
 30799  002A9A                     i2l1940:
 30800                           
 30801                           ;usb_device.c: 2401: }
 30802                           ;usb_device.c: 2404: if((SetupPkt.bFeature == 0)&&
 30803                           ;usb_device.c: 2405: (SetupPkt.Recipient == (0x02))&&
 30804                           ;usb_device.c: 2406: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 30805                           ;usb_device.c: 2407: (USBDeviceState == CONFIGURED_STATE))
 30806  002A9A  0104               	movlb	4	; () banked
 30807  002A9C  5132               	movf	50,w,b	;volatile
 30808  002A9E  A4D8               	btfss	status,2,c
 30809  002AA0  D001               	goto	i2u613_41
 30810  002AA2  D001               	goto	i2u613_40
 30811  002AA4                     i2u613_41:
 30812  002AA4  D160               	goto	i2l1963
 30813  002AA6                     i2u613_40:
 30814                           
 30815                           ; BSR set to: 4
 30816  002AA6  0104               	movlb	4	; () banked
 30817  002AA8  5130               	movf	48,w,b	;volatile
 30818  002AAA  0B1F               	andlw	31
 30819  002AAC  0A02               	xorlw	2
 30820  002AAE  A4D8               	btfss	status,2,c
 30821  002AB0  D001               	goto	i2u614_41
 30822  002AB2  D001               	goto	i2u614_40
 30823  002AB4                     i2u614_41:
 30824  002AB4  D158               	goto	i2l1963
 30825  002AB6                     i2u614_40:
 30826                           
 30827                           ; BSR set to: 4
 30828  002AB6  0104               	movlb	4	; () banked
 30829  002AB8  5134               	movf	52,w,b	;volatile
 30830  002ABA  0B0F               	andlw	15
 30831  002ABC  0900               	iorlw	0
 30832  002ABE  B4D8               	btfsc	status,2,c
 30833  002AC0  D001               	goto	i2u615_41
 30834  002AC2  D001               	goto	i2u615_40
 30835  002AC4                     i2u615_41:
 30836  002AC4  D150               	goto	i2l1963
 30837  002AC6                     i2u615_40:
 30838                           
 30839                           ; BSR set to: 4
 30840  002AC6  0104               	movlb	4	; () banked
 30841  002AC8  5134               	movf	52,w,b	;volatile
 30842  002ACA  0B0F               	andlw	15
 30843  002ACC  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 30844  002ACE  0E03               	movlw	3
 30845  002AD0  6016               	cpfslt	??_USBStdFeatureReqHandler,c
 30846  002AD2  D001               	goto	i2u616_41
 30847  002AD4  D001               	goto	i2u616_40
 30848  002AD6                     i2u616_41:
 30849  002AD6  D147               	goto	i2l1963
 30850  002AD8                     i2u616_40:
 30851                           
 30852                           ; BSR set to: 4
 30853  002AD8  0E20               	movlw	32
 30854  002ADA  0100               	movlb	0	; () banked
 30855  002ADC  19DE               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 30856  002ADE  A4D8               	btfss	status,2,c
 30857  002AE0  D001               	goto	i2u617_41
 30858  002AE2  D001               	goto	i2u617_40
 30859  002AE4                     i2u617_41:
 30860  002AE4  D140               	goto	i2l1963
 30861  002AE6                     i2u617_40:
 30862                           
 30863                           ; BSR set to: 0
 30864                           ;usb_device.c: 2408: {
 30865                           ;usb_device.c: 2411: inPipes[0].info.bits.busy = 1;
 30866  002AE6  8E39               	bsf	_inPipes+3,7,c	;volatile
 30867                           
 30868                           ;usb_device.c: 2414: if(SetupPkt.EPDir == 0)
 30869  002AE8  0104               	movlb	4	; () banked
 30870  002AEA  BF34               	btfsc	52,7,b	;volatile
 30871  002AEC  D001               	goto	i2u618_41
 30872  002AEE  D001               	goto	i2u618_40
 30873  002AF0                     i2u618_41:
 30874  002AF0  D01F               	goto	i2l8139
 30875  002AF2                     i2u618_40:
 30876                           
 30877                           ; BSR set to: 4
 30878                           ;usb_device.c: 2415: {
 30879                           ;usb_device.c: 2416: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 30880  002AF2  0104               	movlb	4	; () banked
 30881  002AF4  5134               	movf	52,w,b	;volatile
 30882  002AF6  0B0F               	andlw	15
 30883  002AF8  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 30884  002AFA  5016               	movf	??_USBStdFeatureReqHandler,w,c
 30885  002AFC  0D02               	mullw	2
 30886  002AFE  0E40               	movlw	low _pBDTEntryOut
 30887  002B00  24F3               	addwf	prodl,w,c
 30888  002B02  6ED9               	movwf	fsr2l,c
 30889  002B04  0E01               	movlw	high _pBDTEntryOut
 30890  002B06  20F4               	addwfc	prodh,w,c
 30891  002B08  6EDA               	movwf	fsr2h,c
 30892  002B0A  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 30893  002B0E  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 30894                           
 30895                           ;usb_device.c: 2417: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 30896  002B12  0104               	movlb	4	; () banked
 30897  002B14  5134               	movf	52,w,b	;volatile
 30898  002B16  0B0F               	andlw	15
 30899  002B18  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 30900  002B1A  5016               	movf	??_USBStdFeatureReqHandler,w,c
 30901  002B1C  0D01               	mullw	1
 30902  002B1E  0EB7               	movlw	low _ep_data_out
 30903  002B20  24F3               	addwf	prodl,w,c
 30904  002B22  6ED9               	movwf	fsr2l,c
 30905  002B24  0E00               	movlw	high _ep_data_out
 30906  002B26  20F4               	addwfc	prodh,w,c
 30907  002B28  6EDA               	movwf	fsr2h,c
 30908  002B2A  50DF               	movf	indf2,w,c
 30909  002B2C  6E19               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 30910                           
 30911                           ;usb_device.c: 2418: }
 30912  002B2E  D01F               	goto	i2l8141
 30913  002B30                     i2l8139:
 30914                           
 30915                           ; BSR set to: 4
 30916                           ;usb_device.c: 2419: else
 30917                           ;usb_device.c: 2420: {
 30918                           ;usb_device.c: 2421: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 30919  002B30  0104               	movlb	4	; () banked
 30920  002B32  5134               	movf	52,w,b	;volatile
 30921  002B34  0B0F               	andlw	15
 30922  002B36  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 30923  002B38  5016               	movf	??_USBStdFeatureReqHandler,w,c
 30924  002B3A  0D02               	mullw	2
 30925  002B3C  0E3C               	movlw	low _pBDTEntryIn
 30926  002B3E  24F3               	addwf	prodl,w,c
 30927  002B40  6ED9               	movwf	fsr2l,c
 30928  002B42  0E00               	movlw	high _pBDTEntryIn
 30929  002B44  20F4               	addwfc	prodh,w,c
 30930  002B46  6EDA               	movwf	fsr2h,c
 30931  002B48  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 30932  002B4C  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 30933                           
 30934                           ;usb_device.c: 2422: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 30935  002B50  0104               	movlb	4	; () banked
 30936  002B52  5134               	movf	52,w,b	;volatile
 30937  002B54  0B0F               	andlw	15
 30938  002B56  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 30939  002B58  5016               	movf	??_USBStdFeatureReqHandler,w,c
 30940  002B5A  0D01               	mullw	1
 30941  002B5C  0EBA               	movlw	low _ep_data_in
 30942  002B5E  24F3               	addwf	prodl,w,c
 30943  002B60  6ED9               	movwf	fsr2l,c
 30944  002B62  0E00               	movlw	high _ep_data_in
 30945  002B64  20F4               	addwfc	prodh,w,c
 30946  002B66  6EDA               	movwf	fsr2h,c
 30947  002B68  50DF               	movf	indf2,w,c
 30948  002B6A  6E19               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 30949  002B6C  D000               	goto	i2l8141
 30950  002B6E                     i2l8141:
 30951                           
 30952                           ; BSR set to: 4
 30953                           ;usb_device.c: 2423: }
 30954                           ;usb_device.c: 2428: if(current_ep_data.bits.ping_pong_state == 0)
 30955  002B6E  B019               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 30956  002B70  D001               	goto	i2u619_41
 30957  002B72  D001               	goto	i2u619_40
 30958  002B74                     i2u619_41:
 30959  002B74  D002               	goto	i2l8145
 30960  002B76                     i2u619_40:
 30961                           
 30962                           ; BSR set to: 4
 30963                           ;usb_device.c: 2429: {
 30964                           ;usb_device.c: 2430: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 30965  002B76  941A               	bcf	USBStdFeatureReqHandler@p,2,c
 30966                           
 30967                           ;usb_device.c: 2431: }
 30968  002B78  D002               	goto	i2l8147
 30969  002B7A                     i2l8145:
 30970                           
 30971                           ; BSR set to: 4
 30972                           ;usb_device.c: 2432: else
 30973                           ;usb_device.c: 2433: {
 30974                           ;usb_device.c: 2434: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 30975  002B7A  841A               	bsf	USBStdFeatureReqHandler@p,2,c
 30976  002B7C  D000               	goto	i2l8147
 30977  002B7E                     i2l8147:
 30978                           
 30979                           ; BSR set to: 4
 30980                           ;usb_device.c: 2435: }
 30981                           ;usb_device.c: 2439: if(SetupPkt.EPDir == 0)
 30982  002B7E  0104               	movlb	4	; () banked
 30983  002B80  BF34               	btfsc	52,7,b	;volatile
 30984  002B82  D001               	goto	i2u620_41
 30985  002B84  D001               	goto	i2u620_40
 30986  002B86                     i2u620_41:
 30987  002B86  D011               	goto	i2l8151
 30988  002B88                     i2u620_40:
 30989                           
 30990                           ; BSR set to: 4
 30991                           ;usb_device.c: 2440: {
 30992                           ;usb_device.c: 2441: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 30993  002B88  0104               	movlb	4	; () banked
 30994  002B8A  5134               	movf	52,w,b	;volatile
 30995  002B8C  0B0F               	andlw	15
 30996  002B8E  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 30997  002B90  5016               	movf	??_USBStdFeatureReqHandler,w,c
 30998  002B92  0D02               	mullw	2
 30999  002B94  0E40               	movlw	low _pBDTEntryOut
 31000  002B96  24F3               	addwf	prodl,w,c
 31001  002B98  6ED9               	movwf	fsr2l,c
 31002  002B9A  0E01               	movlw	high _pBDTEntryOut
 31003  002B9C  20F4               	addwfc	prodh,w,c
 31004  002B9E  6EDA               	movwf	fsr2h,c
 31005  002BA0  C01A  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 31006  002BA4  C01B  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 31007                           
 31008                           ;usb_device.c: 2442: }
 31009  002BA8  D011               	goto	i2l8153
 31010  002BAA                     i2l8151:
 31011                           
 31012                           ; BSR set to: 4
 31013                           ;usb_device.c: 2443: else
 31014                           ;usb_device.c: 2444: {
 31015                           ;usb_device.c: 2445: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 31016  002BAA  0104               	movlb	4	; () banked
 31017  002BAC  5134               	movf	52,w,b	;volatile
 31018  002BAE  0B0F               	andlw	15
 31019  002BB0  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 31020  002BB2  5016               	movf	??_USBStdFeatureReqHandler,w,c
 31021  002BB4  0D02               	mullw	2
 31022  002BB6  0E3C               	movlw	low _pBDTEntryIn
 31023  002BB8  24F3               	addwf	prodl,w,c
 31024  002BBA  6ED9               	movwf	fsr2l,c
 31025  002BBC  0E00               	movlw	high _pBDTEntryIn
 31026  002BBE  20F4               	addwfc	prodh,w,c
 31027  002BC0  6EDA               	movwf	fsr2h,c
 31028  002BC2  C01A  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 31029  002BC6  C01B  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 31030  002BCA  D000               	goto	i2l8153
 31031  002BCC                     i2l8153:
 31032                           
 31033                           ; BSR set to: 4
 31034                           ;usb_device.c: 2446: }
 31035                           ;usb_device.c: 2449: if(SetupPkt.bRequest == 3)
 31036  002BCC  0E03               	movlw	3
 31037  002BCE  0104               	movlb	4	; () banked
 31038  002BD0  1931               	xorwf	49,w,b	;volatile
 31039  002BD2  A4D8               	btfss	status,2,c
 31040  002BD4  D001               	goto	i2u621_41
 31041  002BD6  D001               	goto	i2u621_40
 31042  002BD8                     i2u621_41:
 31043  002BD8  D039               	goto	i2l8167
 31044  002BDA                     i2u621_40:
 31045                           
 31046                           ; BSR set to: 4
 31047                           ;usb_device.c: 2450: {
 31048                           ;usb_device.c: 2451: if(p->STAT.UOWN == 1)
 31049  002BDA  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 31050  002BDE  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 31051  002BE2  AEDF               	btfss	indf2,7,c
 31052  002BE4  D001               	goto	i2u622_41
 31053  002BE6  D001               	goto	i2u622_40
 31054  002BE8                     i2u622_41:
 31055  002BE8  D024               	goto	i2l8163
 31056  002BEA                     i2u622_40:
 31057                           
 31058                           ; BSR set to: 4
 31059                           ;usb_device.c: 2452: {
 31060                           ;usb_device.c: 2455: if(SetupPkt.EPDir == 0)
 31061  002BEA  0104               	movlb	4	; () banked
 31062  002BEC  BF34               	btfsc	52,7,b	;volatile
 31063  002BEE  D001               	goto	i2u623_41
 31064  002BF0  D001               	goto	i2u623_40
 31065  002BF2                     i2u623_41:
 31066  002BF2  D00F               	goto	i2l8161
 31067  002BF4                     i2u623_40:
 31068                           
 31069                           ; BSR set to: 4
 31070                           ;usb_device.c: 2456: {
 31071                           ;usb_device.c: 2457: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 31072  002BF4  0104               	movlb	4	; () banked
 31073  002BF6  5134               	movf	52,w,b	;volatile
 31074  002BF8  0B0F               	andlw	15
 31075  002BFA  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 31076  002BFC  5016               	movf	??_USBStdFeatureReqHandler,w,c
 31077  002BFE  0D01               	mullw	1
 31078  002C00  0EB7               	movlw	low _ep_data_out
 31079  002C02  24F3               	addwf	prodl,w,c
 31080  002C04  6ED9               	movwf	fsr2l,c
 31081  002C06  0E00               	movlw	high _ep_data_out
 31082  002C08  20F4               	addwfc	prodh,w,c
 31083  002C0A  6EDA               	movwf	fsr2h,c
 31084  002C0C  0100               	movlb	0	; () banked
 31085  002C0E  82DF               	bsf	indf2,1,c
 31086                           
 31087                           ;usb_device.c: 2458: }
 31088  002C10  D010               	goto	i2l8163
 31089  002C12                     i2l8161:
 31090                           
 31091                           ;usb_device.c: 2459: else
 31092                           ;usb_device.c: 2460: {
 31093                           ;usb_device.c: 2461: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 31094  002C12  0104               	movlb	4	; () banked
 31095  002C14  5134               	movf	52,w,b	;volatile
 31096  002C16  0B0F               	andlw	15
 31097  002C18  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 31098  002C1A  5016               	movf	??_USBStdFeatureReqHandler,w,c
 31099  002C1C  0D01               	mullw	1
 31100  002C1E  0EBA               	movlw	low _ep_data_in
 31101  002C20  24F3               	addwf	prodl,w,c
 31102  002C22  6ED9               	movwf	fsr2l,c
 31103  002C24  0E00               	movlw	high _ep_data_in
 31104  002C26  20F4               	addwfc	prodh,w,c
 31105  002C28  6EDA               	movwf	fsr2h,c
 31106  002C2A  0100               	movlb	0	; () banked
 31107  002C2C  82DF               	bsf	indf2,1,c
 31108  002C2E  D001               	goto	i2l8163
 31109                           
 31110                           ; BSR set to: 0
 31111  002C30  D000               	goto	i2l8163
 31112  002C32                     i2l8163:
 31113                           
 31114                           ;usb_device.c: 2462: }
 31115                           ;usb_device.c: 2463: }
 31116                           ;usb_device.c: 2466: p->STAT.Val |= 0x04;
 31117  002C32  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 31118  002C36  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 31119  002C3A  0E00               	movlw	0
 31120  002C3C  84DB               	bsf	plusw2,2,c
 31121                           
 31122                           ;usb_device.c: 2467: p->STAT.Val |= 0x80;
 31123  002C3E  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 31124  002C42  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 31125  002C46  0E00               	movlw	0
 31126  002C48  8EDB               	bsf	plusw2,7,c
 31127                           
 31128                           ;usb_device.c: 2468: }
 31129  002C4A  D08D               	goto	i2l1963
 31130  002C4C                     i2l8167:
 31131                           
 31132                           ;usb_device.c: 2469: else
 31133                           ;usb_device.c: 2470: {
 31134                           ;usb_device.c: 2473: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 31135  002C4C  0E04               	movlw	4
 31136  002C4E  1A1A               	xorwf	USBStdFeatureReqHandler@p,f,c
 31137                           
 31138                           ;usb_device.c: 2475: if(p->STAT.UOWN == 1)
 31139  002C50  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 31140  002C54  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 31141  002C58  AEDF               	btfss	indf2,7,c
 31142  002C5A  D001               	goto	i2u624_41
 31143  002C5C  D001               	goto	i2u624_40
 31144  002C5E                     i2u624_41:
 31145  002C5E  D01B               	goto	i2l8177
 31146  002C60                     i2u624_40:
 31147                           
 31148                           ;usb_device.c: 2476: {
 31149                           ;usb_device.c: 2479: p->STAT.Val &= (~0x80);
 31150  002C60  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 31151  002C64  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 31152  002C68  0E7F               	movlw	127
 31153  002C6A  16DF               	andwf	indf2,f,c
 31154                           
 31155                           ;usb_device.c: 2480: p->STAT.Val |= 0x40;
 31156  002C6C  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 31157  002C70  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 31158  002C74  0E00               	movlw	0
 31159  002C76  8CDB               	bsf	plusw2,6,c
 31160                           
 31161                           ;usb_device.c: 2481: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 31162  002C78  0E00               	movlw	0
 31163  002C7A  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 31164  002C7C  0E05               	movlw	5
 31165  002C7E  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 31166  002C80  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 31167  002C84  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 31168  002C88  0E00               	movlw	0
 31169  002C8A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 31170  002C8C  0E02               	movlw	2
 31171  002C8E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 31172  002C90  EC16  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 31173                           
 31174                           ;usb_device.c: 2482: }
 31175  002C94  D007               	goto	i2l8179
 31176  002C96                     i2l8177:
 31177                           
 31178                           ;usb_device.c: 2483: else
 31179                           ;usb_device.c: 2484: {
 31180                           ;usb_device.c: 2486: p->STAT.Val |= 0x40;
 31181  002C96  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 31182  002C9A  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 31183  002C9E  0E00               	movlw	0
 31184  002CA0  8CDB               	bsf	plusw2,6,c
 31185  002CA2  D000               	goto	i2l8179
 31186  002CA4                     i2l8179:
 31187                           
 31188                           ;usb_device.c: 2487: }
 31189                           ;usb_device.c: 2491: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 31190  002CA4  0E04               	movlw	4
 31191  002CA6  1A1A               	xorwf	USBStdFeatureReqHandler@p,f,c
 31192                           
 31193                           ;usb_device.c: 2497: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 31194  002CA8  B219               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 31195  002CAA  D001               	goto	i2u625_41
 31196  002CAC  D001               	goto	i2u625_40
 31197  002CAE                     i2u625_41:
 31198  002CAE  D008               	goto	i2l1959
 31199  002CB0                     i2u625_40:
 31200  002CB0  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 31201  002CB4  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 31202  002CB8  AEDF               	btfss	indf2,7,c
 31203  002CBA  D001               	goto	i2u626_41
 31204  002CBC  D001               	goto	i2u626_40
 31205  002CBE                     i2u626_41:
 31206  002CBE  D038               	goto	i2l8193
 31207  002CC0                     i2u626_40:
 31208  002CC0                     i2l1959:
 31209                           
 31210                           ;usb_device.c: 2498: {
 31211                           ;usb_device.c: 2499: if(SetupPkt.EPDir == 0)
 31212  002CC0  0104               	movlb	4	; () banked
 31213  002CC2  BF34               	btfsc	52,7,b	;volatile
 31214  002CC4  D001               	goto	i2u627_41
 31215  002CC6  D001               	goto	i2u627_40
 31216  002CC8                     i2u627_41:
 31217  002CC8  D00F               	goto	i2l8187
 31218  002CCA                     i2u627_40:
 31219                           
 31220                           ; BSR set to: 4
 31221                           ;usb_device.c: 2500: {
 31222                           ;usb_device.c: 2501: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 31223  002CCA  0104               	movlb	4	; () banked
 31224  002CCC  5134               	movf	52,w,b	;volatile
 31225  002CCE  0B0F               	andlw	15
 31226  002CD0  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 31227  002CD2  5016               	movf	??_USBStdFeatureReqHandler,w,c
 31228  002CD4  0D01               	mullw	1
 31229  002CD6  0EB7               	movlw	low _ep_data_out
 31230  002CD8  24F3               	addwf	prodl,w,c
 31231  002CDA  6ED9               	movwf	fsr2l,c
 31232  002CDC  0E00               	movlw	high _ep_data_out
 31233  002CDE  20F4               	addwfc	prodh,w,c
 31234  002CE0  6EDA               	movwf	fsr2h,c
 31235  002CE2  0100               	movlb	0	; () banked
 31236  002CE4  92DF               	bcf	indf2,1,c
 31237                           
 31238                           ;usb_device.c: 2502: }
 31239  002CE6  D00F               	goto	i2l8189
 31240  002CE8                     i2l8187:
 31241                           
 31242                           ;usb_device.c: 2503: else
 31243                           ;usb_device.c: 2504: {
 31244                           ;usb_device.c: 2505: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 31245  002CE8  0104               	movlb	4	; () banked
 31246  002CEA  5134               	movf	52,w,b	;volatile
 31247  002CEC  0B0F               	andlw	15
 31248  002CEE  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 31249  002CF0  5016               	movf	??_USBStdFeatureReqHandler,w,c
 31250  002CF2  0D01               	mullw	1
 31251  002CF4  0EBA               	movlw	low _ep_data_in
 31252  002CF6  24F3               	addwf	prodl,w,c
 31253  002CF8  6ED9               	movwf	fsr2l,c
 31254  002CFA  0E00               	movlw	high _ep_data_in
 31255  002CFC  20F4               	addwfc	prodh,w,c
 31256  002CFE  6EDA               	movwf	fsr2h,c
 31257  002D00  0100               	movlb	0	; () banked
 31258  002D02  92DF               	bcf	indf2,1,c
 31259  002D04  D000               	goto	i2l8189
 31260  002D06                     i2l8189:
 31261                           
 31262                           ; BSR set to: 0
 31263                           ;usb_device.c: 2506: }
 31264                           ;usb_device.c: 2508: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 31265  002D06  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 31266  002D0A  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 31267  002D0E  0E3B               	movlw	59
 31268  002D10  16DF               	andwf	indf2,f,c
 31269                           
 31270                           ; BSR set to: 0
 31271                           ;usb_device.c: 2511: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 31272  002D12  0E00               	movlw	0
 31273  002D14  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 31274  002D16  0E05               	movlw	5
 31275  002D18  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 31276  002D1A  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 31277  002D1E  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 31278  002D22  0E00               	movlw	0
 31279  002D24  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 31280  002D26  0E02               	movlw	2
 31281  002D28  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 31282  002D2A  EC16  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 31283                           
 31284                           ;usb_device.c: 2512: }
 31285  002D2E  D007               	goto	i2l8195
 31286  002D30                     i2l8193:
 31287                           
 31288                           ;usb_device.c: 2513: else
 31289                           ;usb_device.c: 2514: {
 31290                           ;usb_device.c: 2516: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 31291  002D30  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 31292  002D34  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 31293  002D38  0E3B               	movlw	59
 31294  002D3A  16DF               	andwf	indf2,f,c
 31295  002D3C  D000               	goto	i2l8195
 31296  002D3E                     i2l8195:
 31297                           
 31298                           ;usb_device.c: 2517: }
 31299                           ;usb_device.c: 2519: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 31300  002D3E  0104               	movlb	4	; () banked
 31301  002D40  5134               	movf	52,w,b	;volatile
 31302  002D42  0B0F               	andlw	15
 31303  002D44  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 31304  002D46  5016               	movf	??_USBStdFeatureReqHandler,w,c
 31305  002D48  0D01               	mullw	1
 31306  002D4A  0E6A               	movlw	106
 31307  002D4C  24F3               	addwf	prodl,w,c
 31308  002D4E  6E17               	movwf	USBStdFeatureReqHandler@pUEP,c
 31309  002D50  0E0F               	movlw	15
 31310  002D52  20F4               	addwfc	prodh,w,c
 31311  002D54  6E18               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 31312                           
 31313                           ; BSR set to: 4
 31314                           ;usb_device.c: 2522: *pUEP &= ~0x0001;
 31315  002D56  C017  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 31316  002D5A  C018  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 31317  002D5E  0EFE               	movlw	254
 31318  002D60  16DF               	andwf	indf2,f,c
 31319  002D62  D001               	goto	i2l1963
 31320                           
 31321                           ; BSR set to: 4
 31322  002D64  D000               	goto	i2l1963
 31323  002D66                     i2l1963:
 31324  002D66  0012               	return		;funcret
 31325  002D68                     __end_of_USBStdFeatureReqHandler:
 31326                           	opt stack 0
 31327                           pclatu	equ	0xFFB
 31328                           pclath	equ	0xFFA
 31329                           tblptru	equ	0xFF8
 31330                           tblptrh	equ	0xFF7
 31331                           tblptrl	equ	0xFF6
 31332                           tablat	equ	0xFF5
 31333                           prodh	equ	0xFF4
 31334                           prodl	equ	0xFF3
 31335                           intcon	equ	0xFF2
 31336                           intcon3	equ	0xFF0
 31337                           indf0	equ	0xFEF
 31338                           postinc0	equ	0xFEE
 31339                           fsr0h	equ	0xFEA
 31340                           fsr0l	equ	0xFE9
 31341                           wreg	equ	0xFE8
 31342                           indf1	equ	0xFE7
 31343                           postdec1	equ	0xFE5
 31344                           fsr1h	equ	0xFE2
 31345                           fsr1l	equ	0xFE1
 31346                           indf2	equ	0xFDF
 31347                           postinc2	equ	0xFDE
 31348                           postdec2	equ	0xFDD
 31349                           plusw2	equ	0xFDB
 31350                           fsr2h	equ	0xFDA
 31351                           fsr2l	equ	0xFD9
 31352                           status	equ	0xFD8
 31353                           
 31354 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 31355 ;; Defined at:
 31356 ;;		line 308 in file "../Includes/Board/USBapp.c"
 31357 ;; Parameters:    Size  Location     Type
 31358 ;;  event           2   13[COMRAM] enum E5977
 31359 ;;  pdata           2   15[COMRAM] PTR void 
 31360 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(48), NULL(0), 
 31361 ;;  size            2   17[COMRAM] unsigned int 
 31362 ;; Auto vars:     Size  Location     Type
 31363 ;;		None
 31364 ;; Return value:  Size  Location     Type
 31365 ;;                  1    wreg      unsigned char 
 31366 ;; Registers used:
 31367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31368 ;; Tracked objects:
 31369 ;;		On entry : 0/0
 31370 ;;		On exit  : 0/0
 31371 ;;		Unchanged: 0/0
 31372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31373 ;;      Params:         6       0       0       0       0       0       0       0       0
 31374 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31375 ;;      Temps:          2       0       0       0       0       0       0       0       0
 31376 ;;      Totals:         8       0       0       0       0       0       0       0       0
 31377 ;;Total ram usage:        8 bytes
 31378 ;; Hardware stack levels used:    1
 31379 ;; Hardware stack levels required when called:    4
 31380 ;; This function calls:
 31381 ;;		_USBCheckCDCRequest
 31382 ;;		_USBapp_CdcEmulatorInitialize
 31383 ;; This function is called by:
 31384 ;;		_USBDeviceTasks
 31385 ;;		_USBStdSetCfgHandler
 31386 ;;		_USBSuspend
 31387 ;;		_USBWakeFromSuspend
 31388 ;;		_USBCtrlTrfSetupHandler
 31389 ;;		_USBCheckStdRequest
 31390 ;;		_USBStdFeatureReqHandler
 31391 ;; This function uses a non-reentrant model
 31392 ;;
 31393                           
 31394                           	psect	text120
 31395  00642C                     __ptext120:
 31396                           	opt stack 0
 31397  00642C                     _USER_USB_CALLBACK_EVENT_HANDLER:
 31398                           	opt stack 15
 31399                           
 31400                           ;USBapp.c: 310: switch( (int) event )
 31401                           
 31402                           ;incstack = 0
 31403  00642C  D00F               	goto	i2l7737
 31404                           
 31405                           ;USBapp.c: 313: break;
 31406                           
 31407                           ;USBapp.c: 311: {
 31408                           ;USBapp.c: 312: case EVENT_TRANSFER:
 31409  00642E  D039               	goto	i2l924
 31410                           
 31411                           ;USBapp.c: 319: break;
 31412                           
 31413                           ;USBapp.c: 315: case EVENT_SOF:
 31414  006430  D038               	goto	i2l924
 31415                           
 31416                           ;USBapp.c: 324: break;
 31417                           
 31418                           ;USBapp.c: 321: case EVENT_SUSPEND:
 31419  006432  D037               	goto	i2l924
 31420                           
 31421                           ;USBapp.c: 329: break;
 31422                           
 31423                           ;USBapp.c: 326: case EVENT_RESUME:
 31424  006434  D036               	goto	i2l924
 31425  006436                     i2l7731:
 31426                           
 31427                           ;USBapp.c: 334: USBapp_CdcEmulatorInitialize();
 31428  006436  ECA0  F033         	call	_USBapp_CdcEmulatorInitialize	;wreg free
 31429                           
 31430                           ;USBapp.c: 335: break;
 31431  00643A  D033               	goto	i2l924
 31432                           
 31433                           ;USBapp.c: 338: break;
 31434                           
 31435                           ;USBapp.c: 337: case EVENT_SET_DESCRIPTOR:
 31436  00643C  D032               	goto	i2l924
 31437  00643E                     i2l7733:
 31438                           
 31439                           ;USBapp.c: 343: USBCheckCDCRequest();
 31440  00643E  ECDF  F02B         	call	_USBCheckCDCRequest	;wreg free
 31441                           
 31442                           ;USBapp.c: 344: break;
 31443  006442  D02F               	goto	i2l924
 31444                           
 31445                           ;USBapp.c: 347: break;
 31446                           
 31447                           ;USBapp.c: 346: case EVENT_BUS_ERROR:
 31448  006444  D02E               	goto	i2l924
 31449                           
 31450                           ;USBapp.c: 350: break;
 31451                           
 31452                           ;USBapp.c: 349: case EVENT_TRANSFER_TERMINATED:
 31453  006446  D02D               	goto	i2l924
 31454                           
 31455                           ;USBapp.c: 353: break;
 31456                           
 31457                           ;USBapp.c: 352: default:
 31458  006448  D02C               	goto	i2l924
 31459                           
 31460                           ;USBapp.c: 354: }
 31461  00644A  D02B               	goto	i2l924
 31462  00644C                     i2l7737:
 31463  00644C  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 31464  006450  C00F  F015         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 31465                           
 31466                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 31467                           ; Switch size 1, requested type "space"
 31468                           ; Number of cases is 2, Range of values is 0 to 127
 31469                           ; switch strategies available:
 31470                           ; Name         Instructions Cycles
 31471                           ; simple_byte            7     4 (average)
 31472                           ;	Chosen strategy is simple_byte
 31473  006454  5015               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 31474  006456  0A00               	xorlw	0	; case 0
 31475  006458  B4D8               	btfsc	status,2,c
 31476  00645A  D004               	goto	i2l14997
 31477  00645C  0A7F               	xorlw	127	; case 127
 31478  00645E  B4D8               	btfsc	status,2,c
 31479  006460  D01B               	goto	i2l14999
 31480  006462  D01F               	goto	i2l924
 31481  006464                     i2l14997:
 31482                           
 31483                           ; Switch size 1, requested type "space"
 31484                           ; Number of cases is 8, Range of values is 1 to 117
 31485                           ; switch strategies available:
 31486                           ; Name         Instructions Cycles
 31487                           ; simple_byte           25    13 (average)
 31488                           ;	Chosen strategy is simple_byte
 31489  006464  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 31490  006466  0A01               	xorlw	1	; case 1
 31491  006468  B4D8               	btfsc	status,2,c
 31492  00646A  D7E5               	goto	i2l7731
 31493  00646C  0A03               	xorlw	3	; case 2
 31494  00646E  B4D8               	btfsc	status,2,c
 31495  006470  D018               	goto	i2l924
 31496  006472  0A01               	xorlw	1	; case 3
 31497  006474  B4D8               	btfsc	status,2,c
 31498  006476  D7E3               	goto	i2l7733
 31499  006478  0A06               	xorlw	6	; case 5
 31500  00647A  B4D8               	btfsc	status,2,c
 31501  00647C  D012               	goto	i2l924
 31502  00647E  0A77               	xorlw	119	; case 114
 31503  006480  B4D8               	btfsc	status,2,c
 31504  006482  D00F               	goto	i2l924
 31505  006484  0A01               	xorlw	1	; case 115
 31506  006486  B4D8               	btfsc	status,2,c
 31507  006488  D00C               	goto	i2l924
 31508  00648A  0A07               	xorlw	7	; case 116
 31509  00648C  B4D8               	btfsc	status,2,c
 31510  00648E  D009               	goto	i2l924
 31511  006490  0A01               	xorlw	1	; case 117
 31512  006492  B4D8               	btfsc	status,2,c
 31513  006494  D006               	goto	i2l924
 31514  006496  D005               	goto	i2l924
 31515  006498                     i2l14999:
 31516                           
 31517                           ; Switch size 1, requested type "space"
 31518                           ; Number of cases is 1, Range of values is 255 to 255
 31519                           ; switch strategies available:
 31520                           ; Name         Instructions Cycles
 31521                           ; simple_byte            4     3 (average)
 31522                           ;	Chosen strategy is simple_byte
 31523  006498  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 31524  00649A  0AFF               	xorlw	255	; case 255
 31525  00649C  B4D8               	btfsc	status,2,c
 31526  00649E  D001               	goto	i2l924
 31527  0064A0  D000               	goto	i2l924
 31528  0064A2                     i2l924:
 31529  0064A2  0012               	return		;funcret
 31530  0064A4                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 31531                           	opt stack 0
 31532                           pclatu	equ	0xFFB
 31533                           pclath	equ	0xFFA
 31534                           tblptru	equ	0xFF8
 31535                           tblptrh	equ	0xFF7
 31536                           tblptrl	equ	0xFF6
 31537                           tablat	equ	0xFF5
 31538                           prodh	equ	0xFF4
 31539                           prodl	equ	0xFF3
 31540                           intcon	equ	0xFF2
 31541                           intcon3	equ	0xFF0
 31542                           indf0	equ	0xFEF
 31543                           postinc0	equ	0xFEE
 31544                           fsr0h	equ	0xFEA
 31545                           fsr0l	equ	0xFE9
 31546                           wreg	equ	0xFE8
 31547                           indf1	equ	0xFE7
 31548                           postdec1	equ	0xFE5
 31549                           fsr1h	equ	0xFE2
 31550                           fsr1l	equ	0xFE1
 31551                           indf2	equ	0xFDF
 31552                           postinc2	equ	0xFDE
 31553                           postdec2	equ	0xFDD
 31554                           plusw2	equ	0xFDB
 31555                           fsr2h	equ	0xFDA
 31556                           fsr2l	equ	0xFD9
 31557                           status	equ	0xFD8
 31558                           
 31559 ;; *************** function _USBapp_CdcEmulatorInitialize *****************
 31560 ;; Defined at:
 31561 ;;		line 144 in file "../Includes/Board/USBapp.c"
 31562 ;; Parameters:    Size  Location     Type
 31563 ;;		None
 31564 ;; Auto vars:     Size  Location     Type
 31565 ;;  i               1   12[COMRAM] unsigned char 
 31566 ;; Return value:  Size  Location     Type
 31567 ;;                  1    wreg      void 
 31568 ;; Registers used:
 31569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31570 ;; Tracked objects:
 31571 ;;		On entry : 0/0
 31572 ;;		On exit  : 0/0
 31573 ;;		Unchanged: 0/0
 31574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31575 ;;      Params:         0       0       0       0       0       0       0       0       0
 31576 ;;      Locals:         1       0       0       0       0       0       0       0       0
 31577 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31578 ;;      Totals:         1       0       0       0       0       0       0       0       0
 31579 ;;Total ram usage:        1 bytes
 31580 ;; Hardware stack levels used:    1
 31581 ;; Hardware stack levels required when called:    3
 31582 ;; This function calls:
 31583 ;;		_CDCInitEP
 31584 ;;		i2_EUSART_Initialize
 31585 ;; This function is called by:
 31586 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 31587 ;; This function uses a non-reentrant model
 31588 ;;
 31589                           
 31590                           	psect	text121
 31591  006740                     __ptext121:
 31592                           	opt stack 0
 31593  006740                     _USBapp_CdcEmulatorInitialize:
 31594                           	opt stack 15
 31595                           
 31596                           ;USBapp.c: 147: CDCInitEP();
 31597                           
 31598                           ;incstack = 0
 31599  006740  ECFD  F032         	call	_CDCInitEP	;wreg free
 31600                           
 31601                           ;USBapp.c: 148: line_coding.bCharFormat = 0;
 31602  006744  0E00               	movlw	0
 31603  006746  0101               	movlb	1	; () banked
 31604  006748  6FE3               	movwf	(_line_coding+4)& (0+255),b
 31605                           
 31606                           ; BSR set to: 1
 31607                           ;USBapp.c: 149: line_coding.bDataBits = 8;
 31608  00674A  0E08               	movlw	8
 31609  00674C  0101               	movlb	1	; () banked
 31610  00674E  6FE5               	movwf	(_line_coding+6)& (0+255),b
 31611                           
 31612                           ; BSR set to: 1
 31613                           ;USBapp.c: 150: line_coding.bParityType = 0;
 31614  006750  0E00               	movlw	0
 31615  006752  0101               	movlb	1	; () banked
 31616  006754  6FE4               	movwf	(_line_coding+5)& (0+255),b
 31617                           
 31618                           ; BSR set to: 1
 31619                           ;USBapp.c: 151: line_coding.dwDTERate = 19200;
 31620  006756  0E00               	movlw	0
 31621  006758  0101               	movlb	1	; () banked
 31622  00675A  6FDF               	movwf	_line_coding& (0+255),b
 31623  00675C  0E4B               	movlw	75
 31624  00675E  6FE0               	movwf	(_line_coding+1)& (0+255),b
 31625  006760  0E00               	movlw	0
 31626  006762  6FE1               	movwf	(_line_coding+2)& (0+255),b
 31627  006764  0E00               	movlw	0
 31628  006766  6FE2               	movwf	(_line_coding+3)& (0+255),b
 31629                           
 31630                           ; BSR set to: 1
 31631                           ;USBapp.c: 152: EUSART_Initialize();
 31632  006768  ECEF  F036         	call	i2_EUSART_Initialize	;wreg free
 31633                           
 31634                           ;USBapp.c: 154: for (unsigned char i = 0; i <sizeof (USB_Buffer); i++)
 31635  00676C  0E00               	movlw	0
 31636  00676E  6E0D               	movwf	USBapp_CdcEmulatorInitialize@i,c
 31637  006770  0E3F               	movlw	63
 31638  006772  640D               	cpfsgt	USBapp_CdcEmulatorInitialize@i,c
 31639  006774  D001               	goto	i2u559_41
 31640  006776  D001               	goto	i2u559_40
 31641  006778                     i2u559_41:
 31642  006778  D002               	goto	i2l7659
 31643  00677A                     i2u559_40:
 31644  00677A  D012               	goto	i2l7665
 31645  00677C  D011               	goto	i2l7665
 31646  00677E                     i2l7659:
 31647                           
 31648                           ;USBapp.c: 155: {
 31649                           ;USBapp.c: 156: USB_Buffer[i] = 0;
 31650  00677E  500D               	movf	USBapp_CdcEmulatorInitialize@i,w,c
 31651  006780  0D01               	mullw	1
 31652  006782  0E80               	movlw	low _USB_Buffer
 31653  006784  24F3               	addwf	prodl,w,c
 31654  006786  6ED9               	movwf	fsr2l,c
 31655  006788  0E02               	movlw	high _USB_Buffer
 31656  00678A  20F4               	addwfc	prodh,w,c
 31657  00678C  6EDA               	movwf	fsr2h,c
 31658  00678E  0E00               	movlw	0
 31659  006790  6EDF               	movwf	indf2,c
 31660  006792  2A0D               	incf	USBapp_CdcEmulatorInitialize@i,f,c
 31661  006794  0E3F               	movlw	63
 31662  006796  640D               	cpfsgt	USBapp_CdcEmulatorInitialize@i,c
 31663  006798  D001               	goto	i2u560_41
 31664  00679A  D001               	goto	i2u560_40
 31665  00679C                     i2u560_41:
 31666  00679C  D7F0               	goto	i2l7659
 31667  00679E                     i2u560_40:
 31668  00679E  D000               	goto	i2l7665
 31669  0067A0                     i2l7665:
 31670                           
 31671                           ;USBapp.c: 157: }
 31672                           ;USBapp.c: 158: NextUSBOut = 0;
 31673  0067A0  0E00               	movlw	0
 31674  0067A2  6E53               	movwf	_NextUSBOut,c
 31675                           
 31676                           ;USBapp.c: 159: LastRS232Out = 0;
 31677  0067A4  0E00               	movlw	0
 31678  0067A6  6E51               	movwf	_LastRS232Out,c
 31679  0067A8  0012               	return		;funcret
 31680  0067AA                     __end_of_USBapp_CdcEmulatorInitialize:
 31681                           	opt stack 0
 31682                           pclatu	equ	0xFFB
 31683                           pclath	equ	0xFFA
 31684                           tblptru	equ	0xFF8
 31685                           tblptrh	equ	0xFF7
 31686                           tblptrl	equ	0xFF6
 31687                           tablat	equ	0xFF5
 31688                           prodh	equ	0xFF4
 31689                           prodl	equ	0xFF3
 31690                           intcon	equ	0xFF2
 31691                           intcon3	equ	0xFF0
 31692                           indf0	equ	0xFEF
 31693                           postinc0	equ	0xFEE
 31694                           fsr0h	equ	0xFEA
 31695                           fsr0l	equ	0xFE9
 31696                           wreg	equ	0xFE8
 31697                           indf1	equ	0xFE7
 31698                           postdec1	equ	0xFE5
 31699                           fsr1h	equ	0xFE2
 31700                           fsr1l	equ	0xFE1
 31701                           indf2	equ	0xFDF
 31702                           postinc2	equ	0xFDE
 31703                           postdec2	equ	0xFDD
 31704                           plusw2	equ	0xFDB
 31705                           fsr2h	equ	0xFDA
 31706                           fsr2l	equ	0xFD9
 31707                           status	equ	0xFD8
 31708                           
 31709 ;; *************** function _CDCInitEP *****************
 31710 ;; Defined at:
 31711 ;;		line 296 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 31712 ;; Parameters:    Size  Location     Type
 31713 ;;		None
 31714 ;; Auto vars:     Size  Location     Type
 31715 ;;		None
 31716 ;; Return value:  Size  Location     Type
 31717 ;;                  1    wreg      void 
 31718 ;; Registers used:
 31719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31720 ;; Tracked objects:
 31721 ;;		On entry : 0/0
 31722 ;;		On exit  : 0/0
 31723 ;;		Unchanged: 0/0
 31724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31725 ;;      Params:         0       0       0       0       0       0       0       0       0
 31726 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31727 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31728 ;;      Totals:         0       0       0       0       0       0       0       0       0
 31729 ;;Total ram usage:        0 bytes
 31730 ;; Hardware stack levels used:    1
 31731 ;; Hardware stack levels required when called:    2
 31732 ;; This function calls:
 31733 ;;		_USBEnableEndpoint
 31734 ;;		i2_USBTransferOnePacket
 31735 ;; This function is called by:
 31736 ;;		_USBapp_CdcEmulatorInitialize
 31737 ;; This function uses a non-reentrant model
 31738 ;;
 31739                           
 31740                           	psect	text122
 31741  0065FA                     __ptext122:
 31742                           	opt stack 0
 31743  0065FA                     _CDCInitEP:
 31744                           	opt stack 15
 31745                           
 31746                           ;usb_device_cdc.c: 299: line_coding.dwDTERate = 19200;
 31747                           
 31748                           ;incstack = 0
 31749  0065FA  0E00               	movlw	0
 31750  0065FC  0101               	movlb	1	; () banked
 31751  0065FE  6FDF               	movwf	_line_coding& (0+255),b
 31752  006600  0E4B               	movlw	75
 31753  006602  6FE0               	movwf	(_line_coding+1)& (0+255),b
 31754  006604  0E00               	movlw	0
 31755  006606  6FE1               	movwf	(_line_coding+2)& (0+255),b
 31756  006608  0E00               	movlw	0
 31757  00660A  6FE2               	movwf	(_line_coding+3)& (0+255),b
 31758                           
 31759                           ;usb_device_cdc.c: 300: line_coding.bCharFormat = 0x00;
 31760  00660C  0E00               	movlw	0
 31761  00660E  0101               	movlb	1	; () banked
 31762  006610  6FE3               	movwf	(_line_coding+4)& (0+255),b
 31763                           
 31764                           ;usb_device_cdc.c: 301: line_coding.bParityType = 0x00;
 31765  006612  0E00               	movlw	0
 31766  006614  0101               	movlb	1	; () banked
 31767  006616  6FE4               	movwf	(_line_coding+5)& (0+255),b
 31768                           
 31769                           ;usb_device_cdc.c: 302: line_coding.bDataBits = 0x08;
 31770  006618  0E08               	movlw	8
 31771  00661A  0101               	movlb	1	; () banked
 31772  00661C  6FE5               	movwf	(_line_coding+6)& (0+255),b
 31773                           
 31774                           ;usb_device_cdc.c: 304: cdc_rx_len = 0;
 31775  00661E  0E00               	movlw	0
 31776  006620  0100               	movlb	0	; () banked
 31777  006622  6FD0               	movwf	_cdc_rx_len& (0+255),b
 31778                           
 31779                           ; BSR set to: 0
 31780                           ;usb_device_cdc.c: 317: USBEnableEndpoint(1,0x02|0x10|0x08);
 31781  006624  0E1A               	movlw	26
 31782  006626  6E09               	movwf	USBEnableEndpoint@options,c
 31783  006628  0E01               	movlw	1
 31784  00662A  ECE9  F035         	call	_USBEnableEndpoint
 31785                           
 31786                           ;usb_device_cdc.c: 318: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 31787  00662E  0E1E               	movlw	30
 31788  006630  6E09               	movwf	USBEnableEndpoint@options,c
 31789  006632  0E02               	movlw	2
 31790  006634  ECE9  F035         	call	_USBEnableEndpoint
 31791                           
 31792                           ;usb_device_cdc.c: 320: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 31793  006638  0E00               	movlw	0
 31794  00663A  6E01               	movwf	i2USBTransferOnePacket@dir,c
 31795  00663C  0E40               	movlw	64
 31796  00663E  6E02               	movwf	i2USBTransferOnePacket@data,c
 31797  006640  0E05               	movlw	5
 31798  006642  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 31799  006644  0E40               	movlw	64
 31800  006646  6E04               	movwf	i2USBTransferOnePacket@len,c
 31801  006648  0E02               	movlw	2
 31802  00664A  ECB9  F029         	call	i2_USBTransferOnePacket
 31803  00664E  C001  F0BF         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 31804  006652  C002  F0C0         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 31805                           
 31806                           ;usb_device_cdc.c: 321: CDCDataInHandle = (0);
 31807  006656  0E00               	movlw	0
 31808  006658  0100               	movlb	0	; () banked
 31809  00665A  6FBD               	movwf	_CDCDataInHandle& (0+255),b
 31810  00665C  0E00               	movlw	0
 31811  00665E  0100               	movlb	0	; () banked
 31812  006660  6FBE               	movwf	(_CDCDataInHandle+1)& (0+255),b
 31813                           
 31814                           ; BSR set to: 0
 31815                           ;usb_device_cdc.c: 326: cdc_trf_state = 0;
 31816  006662  0E00               	movlw	0
 31817  006664  6E55               	movwf	_cdc_trf_state,c
 31818                           
 31819                           ; BSR set to: 0
 31820  006666  0012               	return		;funcret
 31821  006668                     __end_of_CDCInitEP:
 31822                           	opt stack 0
 31823                           pclatu	equ	0xFFB
 31824                           pclath	equ	0xFFA
 31825                           tblptru	equ	0xFF8
 31826                           tblptrh	equ	0xFF7
 31827                           tblptrl	equ	0xFF6
 31828                           tablat	equ	0xFF5
 31829                           prodh	equ	0xFF4
 31830                           prodl	equ	0xFF3
 31831                           intcon	equ	0xFF2
 31832                           intcon3	equ	0xFF0
 31833                           indf0	equ	0xFEF
 31834                           postinc0	equ	0xFEE
 31835                           fsr0h	equ	0xFEA
 31836                           fsr0l	equ	0xFE9
 31837                           wreg	equ	0xFE8
 31838                           indf1	equ	0xFE7
 31839                           postdec1	equ	0xFE5
 31840                           fsr1h	equ	0xFE2
 31841                           fsr1l	equ	0xFE1
 31842                           indf2	equ	0xFDF
 31843                           postinc2	equ	0xFDE
 31844                           postdec2	equ	0xFDD
 31845                           plusw2	equ	0xFDB
 31846                           fsr2h	equ	0xFDA
 31847                           fsr2l	equ	0xFD9
 31848                           status	equ	0xFD8
 31849                           
 31850 ;; *************** function i2_USBTransferOnePacket *****************
 31851 ;; Defined at:
 31852 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 31853 ;; Parameters:    Size  Location     Type
 31854 ;;  ep              1    wreg     unsigned char 
 31855 ;;  dir             1    0[COMRAM] unsigned char 
 31856 ;;  data            2    1[COMRAM] PTR unsigned char 
 31857 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 31858 ;;  len             1    3[COMRAM] unsigned char 
 31859 ;; Auto vars:     Size  Location     Type
 31860 ;;  ep              1    4[COMRAM] unsigned char 
 31861 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 31862 ;;		 -> BDT(48), NULL(0), 
 31863 ;; Return value:  Size  Location     Type
 31864 ;;                  2    0[COMRAM] PTR void 
 31865 ;; Registers used:
 31866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31867 ;; Tracked objects:
 31868 ;;		On entry : 0/0
 31869 ;;		On exit  : 0/0
 31870 ;;		Unchanged: 0/0
 31871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31872 ;;      Params:         4       0       0       0       0       0       0       0       0
 31873 ;;      Locals:         3       0       0       0       0       0       0       0       0
 31874 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31875 ;;      Totals:         7       0       0       0       0       0       0       0       0
 31876 ;;Total ram usage:        7 bytes
 31877 ;; Hardware stack levels used:    1
 31878 ;; This function calls:
 31879 ;;		Nothing
 31880 ;; This function is called by:
 31881 ;;		_CDCInitEP
 31882 ;; This function uses a non-reentrant model
 31883 ;;
 31884                           
 31885                           	psect	text123
 31886  005372                     __ptext123:
 31887                           	opt stack 0
 31888  005372                     i2_USBTransferOnePacket:
 31889                           	opt stack 16
 31890                           
 31891                           ; BSR set to: 0
 31892                           ;incstack = 0
 31893                           ;i2USBTransferOnePacket@ep stored from wreg
 31894  005372  6E05               	movwf	i2USBTransferOnePacket@ep,c
 31895                           
 31896                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 31897                           ;usb_device.c: 762: if(dir != 0)
 31898  005374  5001               	movf	i2USBTransferOnePacket@dir,w,c
 31899  005376  B4D8               	btfsc	status,2,c
 31900  005378  D001               	goto	i2u551_41
 31901  00537A  D001               	goto	i2u551_40
 31902  00537C                     i2u551_41:
 31903  00537C  D00D               	goto	i2l7537
 31904  00537E                     i2u551_40:
 31905                           
 31906                           ;usb_device.c: 763: {
 31907                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 31908  00537E  5005               	movf	i2USBTransferOnePacket@ep,w,c
 31909  005380  0D02               	mullw	2
 31910  005382  0E3C               	movlw	low _pBDTEntryIn
 31911  005384  24F3               	addwf	prodl,w,c
 31912  005386  6ED9               	movwf	fsr2l,c
 31913  005388  0E00               	movlw	high _pBDTEntryIn
 31914  00538A  20F4               	addwfc	prodh,w,c
 31915  00538C  6EDA               	movwf	fsr2h,c
 31916  00538E  CFDE F006          	movff	postinc2,i2USBTransferOnePacket@handle
 31917  005392  CFDD F007          	movff	postdec2,i2USBTransferOnePacket@handle+1
 31918                           
 31919                           ;usb_device.c: 766: }
 31920  005396  D00D               	goto	i2l7539
 31921  005398                     i2l7537:
 31922                           
 31923                           ;usb_device.c: 767: else
 31924                           ;usb_device.c: 768: {
 31925                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 31926  005398  5005               	movf	i2USBTransferOnePacket@ep,w,c
 31927  00539A  0D02               	mullw	2
 31928  00539C  0E40               	movlw	low _pBDTEntryOut
 31929  00539E  24F3               	addwf	prodl,w,c
 31930  0053A0  6ED9               	movwf	fsr2l,c
 31931  0053A2  0E01               	movlw	high _pBDTEntryOut
 31932  0053A4  20F4               	addwfc	prodh,w,c
 31933  0053A6  6EDA               	movwf	fsr2h,c
 31934  0053A8  CFDE F006          	movff	postinc2,i2USBTransferOnePacket@handle
 31935  0053AC  CFDD F007          	movff	postdec2,i2USBTransferOnePacket@handle+1
 31936  0053B0  D000               	goto	i2l7539
 31937  0053B2                     i2l7539:
 31938                           
 31939                           ;usb_device.c: 771: }
 31940                           ;usb_device.c: 775: if(handle == 0)
 31941  0053B2  5006               	movf	i2USBTransferOnePacket@handle,w,c
 31942  0053B4  1007               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 31943  0053B6  A4D8               	btfss	status,2,c
 31944  0053B8  D001               	goto	i2u552_41
 31945  0053BA  D001               	goto	i2u552_40
 31946  0053BC                     i2u552_41:
 31947  0053BC  D006               	goto	i2l7545
 31948  0053BE                     i2u552_40:
 31949                           
 31950                           ;usb_device.c: 776: {
 31951                           ;usb_device.c: 777: return 0;
 31952  0053BE  0E00               	movlw	0
 31953  0053C0  6E01               	movwf	?i2_USBTransferOnePacket,c
 31954  0053C2  0E00               	movlw	0
 31955  0053C4  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 31956  0053C6  D045               	goto	i2l1754
 31957  0053C8  D044               	goto	i2l1754
 31958  0053CA                     i2l7545:
 31959                           
 31960                           ;usb_device.c: 778: }
 31961                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 31962  0053CA  EE20 F002          	lfsr	2,2
 31963  0053CE  5006               	movf	i2USBTransferOnePacket@handle,w,c
 31964  0053D0  26D9               	addwf	fsr2l,f,c
 31965  0053D2  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 31966  0053D4  22DA               	addwfc	fsr2h,f,c
 31967  0053D6  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 31968  0053DA  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 31969                           
 31970                           ;usb_device.c: 781: handle->CNT = len;
 31971  0053DE  EE20 F001          	lfsr	2,1
 31972  0053E2  5006               	movf	i2USBTransferOnePacket@handle,w,c
 31973  0053E4  26D9               	addwf	fsr2l,f,c
 31974  0053E6  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 31975  0053E8  22DA               	addwfc	fsr2h,f,c
 31976  0053EA  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 31977                           
 31978                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 31979  0053EE  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 31980  0053F2  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 31981  0053F6  0E40               	movlw	64
 31982  0053F8  16DF               	andwf	indf2,f,c
 31983                           
 31984                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 31985  0053FA  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 31986  0053FE  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 31987  005402  0E00               	movlw	0
 31988  005404  86DB               	bsf	plusw2,3,c
 31989                           
 31990                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 31991  005406  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 31992  00540A  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 31993  00540E  0E00               	movlw	0
 31994  005410  8EDB               	bsf	plusw2,7,c
 31995                           
 31996                           ;usb_device.c: 787: if(dir != 0)
 31997  005412  5001               	movf	i2USBTransferOnePacket@dir,w,c
 31998  005414  B4D8               	btfsc	status,2,c
 31999  005416  D001               	goto	i2u553_41
 32000  005418  D001               	goto	i2u553_40
 32001  00541A                     i2u553_41:
 32002  00541A  D00B               	goto	i2l7557
 32003  00541C                     i2u553_40:
 32004                           
 32005                           ;usb_device.c: 788: {
 32006                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 32007  00541C  5005               	movf	i2USBTransferOnePacket@ep,w,c
 32008  00541E  0D02               	mullw	2
 32009  005420  0E3C               	movlw	low _pBDTEntryIn
 32010  005422  24F3               	addwf	prodl,w,c
 32011  005424  6ED9               	movwf	fsr2l,c
 32012  005426  0E00               	movlw	high _pBDTEntryIn
 32013  005428  20F4               	addwfc	prodh,w,c
 32014  00542A  6EDA               	movwf	fsr2h,c
 32015  00542C  0E04               	movlw	4
 32016  00542E  1ADF               	xorwf	indf2,f,c
 32017                           
 32018                           ;usb_device.c: 791: }
 32019  005430  D00B               	goto	i2l7559
 32020  005432                     i2l7557:
 32021                           
 32022                           ;usb_device.c: 792: else
 32023                           ;usb_device.c: 793: {
 32024                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 32025  005432  5005               	movf	i2USBTransferOnePacket@ep,w,c
 32026  005434  0D02               	mullw	2
 32027  005436  0E40               	movlw	low _pBDTEntryOut
 32028  005438  24F3               	addwf	prodl,w,c
 32029  00543A  6ED9               	movwf	fsr2l,c
 32030  00543C  0E01               	movlw	high _pBDTEntryOut
 32031  00543E  20F4               	addwfc	prodh,w,c
 32032  005440  6EDA               	movwf	fsr2h,c
 32033  005442  0E04               	movlw	4
 32034  005444  1ADF               	xorwf	indf2,f,c
 32035  005446  D000               	goto	i2l7559
 32036  005448                     i2l7559:
 32037                           
 32038                           ;usb_device.c: 796: }
 32039                           ;usb_device.c: 797: return (void*)handle;
 32040  005448  C006  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 32041  00544C  C007  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 32042  005450  D000               	goto	i2l1754
 32043  005452                     i2l1754:
 32044  005452  0012               	return		;funcret
 32045  005454                     __end_ofi2_USBTransferOnePacket:
 32046                           	opt stack 0
 32047                           pclatu	equ	0xFFB
 32048                           pclath	equ	0xFFA
 32049                           tblptru	equ	0xFF8
 32050                           tblptrh	equ	0xFF7
 32051                           tblptrl	equ	0xFF6
 32052                           tablat	equ	0xFF5
 32053                           prodh	equ	0xFF4
 32054                           prodl	equ	0xFF3
 32055                           intcon	equ	0xFF2
 32056                           intcon3	equ	0xFF0
 32057                           indf0	equ	0xFEF
 32058                           postinc0	equ	0xFEE
 32059                           fsr0h	equ	0xFEA
 32060                           fsr0l	equ	0xFE9
 32061                           wreg	equ	0xFE8
 32062                           indf1	equ	0xFE7
 32063                           postdec1	equ	0xFE5
 32064                           fsr1h	equ	0xFE2
 32065                           fsr1l	equ	0xFE1
 32066                           indf2	equ	0xFDF
 32067                           postinc2	equ	0xFDE
 32068                           postdec2	equ	0xFDD
 32069                           plusw2	equ	0xFDB
 32070                           fsr2h	equ	0xFDA
 32071                           fsr2l	equ	0xFD9
 32072                           status	equ	0xFD8
 32073                           
 32074 ;; *************** function _USBEnableEndpoint *****************
 32075 ;; Defined at:
 32076 ;;		line 645 in file "../Includes/Usb/Framework/usb_device.c"
 32077 ;; Parameters:    Size  Location     Type
 32078 ;;  ep              1    wreg     unsigned char 
 32079 ;;  options         1    8[COMRAM] unsigned char 
 32080 ;; Auto vars:     Size  Location     Type
 32081 ;;  ep              1   11[COMRAM] unsigned char 
 32082 ;;  p               2    9[COMRAM] PTR unsigned char 
 32083 ;;		 -> UEP0(1), 
 32084 ;; Return value:  Size  Location     Type
 32085 ;;                  1    wreg      void 
 32086 ;; Registers used:
 32087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32088 ;; Tracked objects:
 32089 ;;		On entry : 0/0
 32090 ;;		On exit  : 0/0
 32091 ;;		Unchanged: 0/0
 32092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32093 ;;      Params:         1       0       0       0       0       0       0       0       0
 32094 ;;      Locals:         3       0       0       0       0       0       0       0       0
 32095 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32096 ;;      Totals:         4       0       0       0       0       0       0       0       0
 32097 ;;Total ram usage:        4 bytes
 32098 ;; Hardware stack levels used:    1
 32099 ;; Hardware stack levels required when called:    1
 32100 ;; This function calls:
 32101 ;;		_USBConfigureEndpoint
 32102 ;; This function is called by:
 32103 ;;		_CDCInitEP
 32104 ;; This function uses a non-reentrant model
 32105 ;;
 32106                           
 32107                           	psect	text124
 32108  006BD2                     __ptext124:
 32109                           	opt stack 0
 32110  006BD2                     _USBEnableEndpoint:
 32111                           	opt stack 15
 32112                           
 32113                           ;incstack = 0
 32114                           ;USBEnableEndpoint@ep stored from wreg
 32115  006BD2  6E0C               	movwf	USBEnableEndpoint@ep,c
 32116                           
 32117                           ;usb_device.c: 647: unsigned char* p;
 32118                           ;usb_device.c: 651: if(options & 0x04)
 32119  006BD4  A409               	btfss	USBEnableEndpoint@options,2,c
 32120  006BD6  D001               	goto	i2u549_41
 32121  006BD8  D001               	goto	i2u549_40
 32122  006BDA                     i2u549_41:
 32123  006BDA  D006               	goto	i2l7525
 32124  006BDC                     i2u549_40:
 32125                           
 32126                           ;usb_device.c: 652: {
 32127                           ;usb_device.c: 653: USBConfigureEndpoint(ep, 0);
 32128  006BDC  0E00               	movlw	0
 32129  006BDE  6E01               	movwf	USBConfigureEndpoint@direction,c
 32130  006BE0  500C               	movf	USBEnableEndpoint@ep,w,c
 32131  006BE2  EC5C  F02F         	call	_USBConfigureEndpoint
 32132  006BE6  D000               	goto	i2l7525
 32133  006BE8                     i2l7525:
 32134                           
 32135                           ;usb_device.c: 654: }
 32136                           ;usb_device.c: 655: if(options & 0x02)
 32137  006BE8  A209               	btfss	USBEnableEndpoint@options,1,c
 32138  006BEA  D001               	goto	i2u550_41
 32139  006BEC  D001               	goto	i2u550_40
 32140  006BEE                     i2u550_41:
 32141  006BEE  D006               	goto	i2l7529
 32142  006BF0                     i2u550_40:
 32143                           
 32144                           ;usb_device.c: 656: {
 32145                           ;usb_device.c: 657: USBConfigureEndpoint(ep, 1);
 32146  006BF0  0E01               	movlw	1
 32147  006BF2  6E01               	movwf	USBConfigureEndpoint@direction,c
 32148  006BF4  500C               	movf	USBEnableEndpoint@ep,w,c
 32149  006BF6  EC5C  F02F         	call	_USBConfigureEndpoint
 32150  006BFA  D000               	goto	i2l7529
 32151  006BFC                     i2l7529:
 32152                           
 32153                           ;usb_device.c: 658: }
 32154                           ;usb_device.c: 663: p = (unsigned char*)(&UEP0+ep);
 32155  006BFC  500C               	movf	USBEnableEndpoint@ep,w,c
 32156  006BFE  0D01               	mullw	1
 32157  006C00  0E6A               	movlw	106
 32158  006C02  24F3               	addwf	prodl,w,c
 32159  006C04  6E0A               	movwf	USBEnableEndpoint@p,c
 32160  006C06  0E0F               	movlw	15
 32161  006C08  20F4               	addwfc	prodh,w,c
 32162  006C0A  6E0B               	movwf	USBEnableEndpoint@p+1,c
 32163                           
 32164                           ;usb_device.c: 664: *p = options;
 32165  006C0C  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 32166  006C10  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 32167  006C14  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 32168  006C18  0012               	return		;funcret
 32169  006C1A                     __end_of_USBEnableEndpoint:
 32170                           	opt stack 0
 32171                           pclatu	equ	0xFFB
 32172                           pclath	equ	0xFFA
 32173                           tblptru	equ	0xFF8
 32174                           tblptrh	equ	0xFF7
 32175                           tblptrl	equ	0xFF6
 32176                           tablat	equ	0xFF5
 32177                           prodh	equ	0xFF4
 32178                           prodl	equ	0xFF3
 32179                           intcon	equ	0xFF2
 32180                           intcon3	equ	0xFF0
 32181                           indf0	equ	0xFEF
 32182                           postinc0	equ	0xFEE
 32183                           fsr0h	equ	0xFEA
 32184                           fsr0l	equ	0xFE9
 32185                           wreg	equ	0xFE8
 32186                           indf1	equ	0xFE7
 32187                           postdec1	equ	0xFE5
 32188                           fsr1h	equ	0xFE2
 32189                           fsr1l	equ	0xFE1
 32190                           indf2	equ	0xFDF
 32191                           postinc2	equ	0xFDE
 32192                           postdec2	equ	0xFDD
 32193                           plusw2	equ	0xFDB
 32194                           fsr2h	equ	0xFDA
 32195                           fsr2l	equ	0xFD9
 32196                           status	equ	0xFD8
 32197                           
 32198 ;; *************** function _USBConfigureEndpoint *****************
 32199 ;; Defined at:
 32200 ;;		line 1228 in file "../Includes/Usb/Framework/usb_device.c"
 32201 ;; Parameters:    Size  Location     Type
 32202 ;;  EPNum           1    wreg     unsigned char 
 32203 ;;  direction       1    0[COMRAM] unsigned char 
 32204 ;; Auto vars:     Size  Location     Type
 32205 ;;  EPNum           1    5[COMRAM] unsigned char 
 32206 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 32207 ;;		 -> BDT(48), 
 32208 ;; Return value:  Size  Location     Type
 32209 ;;                  1    wreg      void 
 32210 ;; Registers used:
 32211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32212 ;; Tracked objects:
 32213 ;;		On entry : 0/0
 32214 ;;		On exit  : 0/0
 32215 ;;		Unchanged: 0/0
 32216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32217 ;;      Params:         1       0       0       0       0       0       0       0       0
 32218 ;;      Locals:         3       0       0       0       0       0       0       0       0
 32219 ;;      Temps:          4       0       0       0       0       0       0       0       0
 32220 ;;      Totals:         8       0       0       0       0       0       0       0       0
 32221 ;;Total ram usage:        8 bytes
 32222 ;; Hardware stack levels used:    1
 32223 ;; This function calls:
 32224 ;;		Nothing
 32225 ;; This function is called by:
 32226 ;;		_USBEnableEndpoint
 32227 ;; This function uses a non-reentrant model
 32228 ;;
 32229                           
 32230                           	psect	text125
 32231  005EB8                     __ptext125:
 32232                           	opt stack 0
 32233  005EB8                     _USBConfigureEndpoint:
 32234                           	opt stack 15
 32235                           
 32236                           ;incstack = 0
 32237                           ;USBConfigureEndpoint@EPNum stored from wreg
 32238  005EB8  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 32239                           
 32240                           ;usb_device.c: 1230: volatile BDT_ENTRY* handle;
 32241                           ;usb_device.c: 1234: handle = (volatile BDT_ENTRY*)&BDT[0];
 32242  005EBA  0E00               	movlw	0
 32243  005EBC  6E07               	movwf	USBConfigureEndpoint@handle,c
 32244  005EBE  0E04               	movlw	4
 32245  005EC0  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 32246                           
 32247                           ;usb_device.c: 1235: handle += (4*EPNum+2*direction+0u);
 32248  005EC2  5001               	movf	USBConfigureEndpoint@direction,w,c
 32249  005EC4  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 32250  005EC6  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 32251  005EC8  90D8               	bcf	status,0,c
 32252  005ECA  3602               	rlcf	??_USBConfigureEndpoint,f,c
 32253  005ECC  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 32254  005ECE  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 32255  005ED0  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 32256  005ED2  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 32257  005ED4  90D8               	bcf	status,0,c
 32258  005ED6  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 32259  005ED8  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 32260  005EDA  90D8               	bcf	status,0,c
 32261  005EDC  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 32262  005EDE  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 32263  005EE0  5002               	movf	??_USBConfigureEndpoint,w,c
 32264  005EE2  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 32265  005EE4  5003               	movf	??_USBConfigureEndpoint+1,w,c
 32266  005EE6  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 32267  005EE8  90D8               	bcf	status,0,c
 32268  005EEA  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 32269  005EEC  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 32270  005EEE  90D8               	bcf	status,0,c
 32271  005EF0  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 32272  005EF2  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 32273  005EF4  5004               	movf	??_USBConfigureEndpoint+2,w,c
 32274  005EF6  2607               	addwf	USBConfigureEndpoint@handle,f,c
 32275  005EF8  5005               	movf	??_USBConfigureEndpoint+3,w,c
 32276  005EFA  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 32277                           
 32278                           ;usb_device.c: 1237: handle->STAT.UOWN = 0;
 32279  005EFC  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 32280  005F00  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 32281  005F04  9EDF               	bcf	indf2,7,c
 32282                           
 32283                           ;usb_device.c: 1242: if(direction == 0)
 32284  005F06  5001               	movf	USBConfigureEndpoint@direction,w,c
 32285  005F08  A4D8               	btfss	status,2,c
 32286  005F0A  D001               	goto	i2u548_41
 32287  005F0C  D001               	goto	i2u548_40
 32288  005F0E                     i2u548_41:
 32289  005F0E  D00D               	goto	i2l7501
 32290  005F10                     i2u548_40:
 32291                           
 32292                           ;usb_device.c: 1243: {
 32293                           ;usb_device.c: 1244: pBDTEntryOut[EPNum] = handle;
 32294  005F10  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 32295  005F12  0D02               	mullw	2
 32296  005F14  0E40               	movlw	low _pBDTEntryOut
 32297  005F16  24F3               	addwf	prodl,w,c
 32298  005F18  6ED9               	movwf	fsr2l,c
 32299  005F1A  0E01               	movlw	high _pBDTEntryOut
 32300  005F1C  20F4               	addwfc	prodh,w,c
 32301  005F1E  6EDA               	movwf	fsr2h,c
 32302  005F20  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 32303  005F24  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 32304                           
 32305                           ;usb_device.c: 1245: }
 32306  005F28  D00D               	goto	i2l7503
 32307  005F2A                     i2l7501:
 32308                           
 32309                           ;usb_device.c: 1246: else
 32310                           ;usb_device.c: 1247: {
 32311                           ;usb_device.c: 1248: pBDTEntryIn[EPNum] = handle;
 32312  005F2A  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 32313  005F2C  0D02               	mullw	2
 32314  005F2E  0E3C               	movlw	low _pBDTEntryIn
 32315  005F30  24F3               	addwf	prodl,w,c
 32316  005F32  6ED9               	movwf	fsr2l,c
 32317  005F34  0E00               	movlw	high _pBDTEntryIn
 32318  005F36  20F4               	addwfc	prodh,w,c
 32319  005F38  6EDA               	movwf	fsr2h,c
 32320  005F3A  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 32321  005F3E  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 32322  005F42  D000               	goto	i2l7503
 32323  005F44                     i2l7503:
 32324                           
 32325                           ;usb_device.c: 1249: }
 32326                           ;usb_device.c: 1250: handle->STAT.DTS = 0;
 32327  005F44  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 32328  005F48  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 32329  005F4C  9CDF               	bcf	indf2,6,c
 32330                           
 32331                           ;usb_device.c: 1251: (handle+1)->STAT.DTS = 1;
 32332  005F4E  EE20 F004          	lfsr	2,4
 32333  005F52  5007               	movf	USBConfigureEndpoint@handle,w,c
 32334  005F54  26D9               	addwf	fsr2l,f,c
 32335  005F56  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 32336  005F58  22DA               	addwfc	fsr2h,f,c
 32337  005F5A  8CDF               	bsf	indf2,6,c
 32338  005F5C  0012               	return		;funcret
 32339  005F5E                     __end_of_USBConfigureEndpoint:
 32340                           	opt stack 0
 32341                           pclatu	equ	0xFFB
 32342                           pclath	equ	0xFFA
 32343                           tblptru	equ	0xFF8
 32344                           tblptrh	equ	0xFF7
 32345                           tblptrl	equ	0xFF6
 32346                           tablat	equ	0xFF5
 32347                           prodh	equ	0xFF4
 32348                           prodl	equ	0xFF3
 32349                           intcon	equ	0xFF2
 32350                           intcon3	equ	0xFF0
 32351                           indf0	equ	0xFEF
 32352                           postinc0	equ	0xFEE
 32353                           fsr0h	equ	0xFEA
 32354                           fsr0l	equ	0xFE9
 32355                           wreg	equ	0xFE8
 32356                           indf1	equ	0xFE7
 32357                           postdec1	equ	0xFE5
 32358                           fsr1h	equ	0xFE2
 32359                           fsr1l	equ	0xFE1
 32360                           indf2	equ	0xFDF
 32361                           postinc2	equ	0xFDE
 32362                           postdec2	equ	0xFDD
 32363                           plusw2	equ	0xFDB
 32364                           fsr2h	equ	0xFDA
 32365                           fsr2l	equ	0xFD9
 32366                           status	equ	0xFD8
 32367                           
 32368 ;; *************** function _USBCheckCDCRequest *****************
 32369 ;; Defined at:
 32370 ;;		line 184 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 32371 ;; Parameters:    Size  Location     Type
 32372 ;;		None
 32373 ;; Auto vars:     Size  Location     Type
 32374 ;;		None
 32375 ;; Return value:  Size  Location     Type
 32376 ;;                  1    wreg      void 
 32377 ;; Registers used:
 32378 ;;		wreg, status,2, status,0
 32379 ;; Tracked objects:
 32380 ;;		On entry : 0/0
 32381 ;;		On exit  : 0/0
 32382 ;;		Unchanged: 0/0
 32383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32384 ;;      Params:         0       0       0       0       0       0       0       0       0
 32385 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32386 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32387 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32388 ;;Total ram usage:        0 bytes
 32389 ;; Hardware stack levels used:    1
 32390 ;; This function calls:
 32391 ;;		Nothing
 32392 ;; This function is called by:
 32393 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 32394 ;; This function uses a non-reentrant model
 32395 ;;
 32396                           
 32397                           	psect	text126
 32398  0057BE                     __ptext126:
 32399                           	opt stack 0
 32400  0057BE                     _USBCheckCDCRequest:
 32401                           	opt stack 18
 32402                           
 32403                           ;usb_device_cdc.c: 189: if(SetupPkt.Recipient != (0x01)) return;
 32404                           
 32405                           ;incstack = 0
 32406  0057BE  0104               	movlb	4	; () banked
 32407  0057C0  5130               	movf	48,w,b	;volatile
 32408  0057C2  0B1F               	andlw	31
 32409  0057C4  06E8               	decf	wreg,f,c
 32410  0057C6  B4D8               	btfsc	status,2,c
 32411  0057C8  D001               	goto	i2u561_41
 32412  0057CA  D001               	goto	i2u561_40
 32413  0057CC                     i2u561_41:
 32414  0057CC  D002               	goto	i2l7671
 32415  0057CE                     i2u561_40:
 32416  0057CE  D05D               	goto	i2l2011
 32417                           
 32418                           ; BSR set to: 4
 32419  0057D0  D05C               	goto	i2l2011
 32420  0057D2                     i2l7671:
 32421                           
 32422                           ; BSR set to: 4
 32423                           ;usb_device_cdc.c: 194: if(SetupPkt.RequestType != (0x20>>5)) return;
 32424  0057D2  0104               	movlb	4	; () banked
 32425  0057D4  3930               	swapf	48,w,b	;volatile
 32426  0057D6  32E8               	rrcf	wreg,f,c
 32427  0057D8  0B03               	andlw	3
 32428  0057DA  06E8               	decf	wreg,f,c
 32429  0057DC  B4D8               	btfsc	status,2,c
 32430  0057DE  D001               	goto	i2u562_41
 32431  0057E0  D001               	goto	i2u562_40
 32432  0057E2                     i2u562_41:
 32433  0057E2  D002               	goto	i2l7675
 32434  0057E4                     i2u562_40:
 32435  0057E4  D052               	goto	i2l2011
 32436                           
 32437                           ; BSR set to: 4
 32438  0057E6  D051               	goto	i2l2011
 32439  0057E8                     i2l7675:
 32440                           
 32441                           ; BSR set to: 4
 32442                           ;usb_device_cdc.c: 200: if((SetupPkt.bIntfID != 0x0)&&
 32443                           ;usb_device_cdc.c: 201: (SetupPkt.bIntfID != 0x01)) return;
 32444  0057E8  0104               	movlb	4	; () banked
 32445  0057EA  5134               	movf	52,w,b	;volatile
 32446  0057EC  B4D8               	btfsc	status,2,c
 32447  0057EE  D001               	goto	i2u563_41
 32448  0057F0  D001               	goto	i2u563_40
 32449  0057F2                     i2u563_41:
 32450  0057F2  D039               	goto	i2l7705
 32451  0057F4                     i2u563_40:
 32452                           
 32453                           ; BSR set to: 4
 32454  0057F4  0104               	movlb	4	; () banked
 32455  0057F6  0534               	decf	52,w,b	;volatile
 32456  0057F8  B4D8               	btfsc	status,2,c
 32457  0057FA  D001               	goto	i2u564_41
 32458  0057FC  D001               	goto	i2u564_40
 32459  0057FE                     i2u564_41:
 32460  0057FE  D033               	goto	i2l7705
 32461  005800                     i2u564_40:
 32462  005800  D044               	goto	i2l2011
 32463                           
 32464                           ; BSR set to: 4
 32465  005802  D043               	goto	i2l2011
 32466                           
 32467                           ; BSR set to: 4
 32468                           ;usb_device_cdc.c: 203: switch(SetupPkt.bRequest)
 32469  005804  D030               	goto	i2l7705
 32470  005806                     i2l7681:
 32471                           
 32472                           ; BSR set to: 4
 32473                           ;usb_device_cdc.c: 208: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 32474  005806  0ED7               	movlw	low _dummy_encapsulated_cmd_response
 32475  005808  6E36               	movwf	_inPipes,c	;volatile
 32476  00580A  0E01               	movlw	high _dummy_encapsulated_cmd_response
 32477  00580C  6E37               	movwf	_inPipes+1,c	;volatile
 32478                           
 32479                           ; BSR set to: 4
 32480                           ;usb_device_cdc.c: 209: inPipes[0].wCount.Val = 0x08;
 32481  00580E  0E00               	movlw	0
 32482  005810  6E3B               	movwf	_inPipes+5,c	;volatile
 32483  005812  0E08               	movlw	8
 32484  005814  6E3A               	movwf	_inPipes+4,c	;volatile
 32485                           
 32486                           ; BSR set to: 4
 32487                           ;usb_device_cdc.c: 210: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 32488  005816  8039               	bsf	_inPipes+3,0,c	;volatile
 32489                           
 32490                           ; BSR set to: 4
 32491                           ;usb_device_cdc.c: 211: inPipes[0].info.bits.busy = 1;
 32492  005818  8E39               	bsf	_inPipes+3,7,c	;volatile
 32493                           
 32494                           ;usb_device_cdc.c: 212: break;
 32495  00581A  D037               	goto	i2l2011
 32496  00581C                     i2l7689:
 32497                           
 32498                           ; BSR set to: 4
 32499                           ;usb_device_cdc.c: 215: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 32500  00581C  0ED7               	movlw	low _dummy_encapsulated_cmd_response
 32501  00581E  6E36               	movwf	_inPipes,c	;volatile
 32502  005820  0E01               	movlw	high _dummy_encapsulated_cmd_response
 32503  005822  6E37               	movwf	_inPipes+1,c	;volatile
 32504                           
 32505                           ; BSR set to: 4
 32506                           ;usb_device_cdc.c: 216: inPipes[0].info.bits.busy = 1;
 32507  005824  8E39               	bsf	_inPipes+3,7,c	;volatile
 32508                           
 32509                           ;usb_device_cdc.c: 217: break;
 32510  005826  D031               	goto	i2l2011
 32511  005828                     i2l2018:
 32512                           
 32513                           ; BSR set to: 4
 32514                           ;usb_device_cdc.c: 220: outPipes[0].wCount.Val = SetupPkt.wLength;
 32515  005828  C436 F032          	movff	1078,_outPipes+4	;volatile
 32516  00582C  C437 F033          	movff	1079,_outPipes+5	;volatile
 32517                           
 32518                           ; BSR set to: 4
 32519                           ;usb_device_cdc.c: 221: outPipes[0].pDst.bRam = (uint8_t*)&cdc_notice.SetLineCoding._byt
      +                          e[0];
 32520  005830  0ECD               	movlw	low _cdc_notice
 32521  005832  6E2E               	movwf	_outPipes,c	;volatile
 32522  005834  0E01               	movlw	high _cdc_notice
 32523  005836  6E2F               	movwf	_outPipes+1,c	;volatile
 32524                           
 32525                           ;usb_device_cdc.c: 222: outPipes[0].pFunc = &USART_mySetLineCodingHandler;
 32526  005838  0E36               	movlw	low _USART_mySetLineCodingHandler
 32527  00583A  6E34               	movwf	_outPipes+6,c	;volatile
 32528  00583C  0E69               	movlw	high _USART_mySetLineCodingHandler
 32529  00583E  6E35               	movwf	_outPipes+7,c	;volatile
 32530                           
 32531                           ; BSR set to: 4
 32532                           ;usb_device_cdc.c: 223: outPipes[0].info.bits.busy = 1;
 32533  005840  8E31               	bsf	_outPipes+3,7,c	;volatile
 32534                           
 32535                           ;usb_device_cdc.c: 224: break;
 32536  005842  D023               	goto	i2l2011
 32537  005844                     i2l7697:
 32538                           
 32539                           ; BSR set to: 4
 32540                           ;usb_device_cdc.c: 227: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 32541  005844  0EDF               	movlw	low _line_coding
 32542  005846  6E36               	movwf	_inPipes,c	;volatile
 32543  005848  0E01               	movlw	high _line_coding
 32544  00584A  6E37               	movwf	_inPipes+1,c	;volatile
 32545                           
 32546                           ; BSR set to: 4
 32547  00584C  0E00               	movlw	0
 32548  00584E  6E3B               	movwf	_inPipes+5,c	;volatile
 32549  005850  0E07               	movlw	7
 32550  005852  6E3A               	movwf	_inPipes+4,c	;volatile
 32551                           
 32552                           ; BSR set to: 4
 32553  005854  0EC1               	movlw	193
 32554  005856  6E39               	movwf	_inPipes+3,c	;volatile
 32555                           
 32556                           ;usb_device_cdc.c: 231: break;
 32557  005858  D018               	goto	i2l2011
 32558  00585A                     i2l2020:
 32559                           
 32560                           ; BSR set to: 4
 32561                           ;usb_device_cdc.c: 234: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 32562  00585A  C432 F0CD          	movff	1074,_control_signal_bitmap	;volatile
 32563                           
 32564                           ;usb_device_cdc.c: 255: inPipes[0].info.bits.busy = 1;
 32565  00585E  8E39               	bsf	_inPipes+3,7,c	;volatile
 32566                           
 32567                           ;usb_device_cdc.c: 256: break;
 32568  005860  D014               	goto	i2l2011
 32569                           
 32570                           ; BSR set to: 4
 32571                           ;usb_device_cdc.c: 259: break;
 32572                           
 32573                           ;usb_device_cdc.c: 258: default:
 32574  005862  D013               	goto	i2l2011
 32575                           
 32576                           ; BSR set to: 4
 32577                           ;usb_device_cdc.c: 260: }
 32578  005864  D012               	goto	i2l2011
 32579  005866                     i2l7705:
 32580                           
 32581                           ; BSR set to: 4
 32582  005866  0104               	movlb	4	; () banked
 32583  005868  5131               	movf	49,w,b	;volatile
 32584                           
 32585                           ; Switch size 1, requested type "space"
 32586                           ; Number of cases is 5, Range of values is 0 to 34
 32587                           ; switch strategies available:
 32588                           ; Name         Instructions Cycles
 32589                           ; simple_byte           16     9 (average)
 32590                           ;	Chosen strategy is simple_byte
 32591  00586A  0A00               	xorlw	0	; case 0
 32592  00586C  B4D8               	btfsc	status,2,c
 32593  00586E  D7CB               	goto	i2l7681
 32594  005870  0A01               	xorlw	1	; case 1
 32595  005872  B4D8               	btfsc	status,2,c
 32596  005874  D7D3               	goto	i2l7689
 32597  005876  0A21               	xorlw	33	; case 32
 32598  005878  B4D8               	btfsc	status,2,c
 32599  00587A  D7D6               	goto	i2l2018
 32600  00587C  0A01               	xorlw	1	; case 33
 32601  00587E  B4D8               	btfsc	status,2,c
 32602  005880  D7E1               	goto	i2l7697
 32603  005882  0A03               	xorlw	3	; case 34
 32604  005884  B4D8               	btfsc	status,2,c
 32605  005886  D7E9               	goto	i2l2020
 32606  005888  D000               	goto	i2l2011
 32607  00588A                     i2l2011:
 32608                           
 32609                           ; BSR set to: 4
 32610  00588A  0012               	return		;funcret
 32611  00588C                     __end_of_USBCheckCDCRequest:
 32612                           	opt stack 0
 32613                           pclatu	equ	0xFFB
 32614                           pclath	equ	0xFFA
 32615                           tblptru	equ	0xFF8
 32616                           tblptrh	equ	0xFF7
 32617                           tblptrl	equ	0xFF6
 32618                           tablat	equ	0xFF5
 32619                           prodh	equ	0xFF4
 32620                           prodl	equ	0xFF3
 32621                           intcon	equ	0xFF2
 32622                           intcon3	equ	0xFF0
 32623                           indf0	equ	0xFEF
 32624                           postinc0	equ	0xFEE
 32625                           fsr0h	equ	0xFEA
 32626                           fsr0l	equ	0xFE9
 32627                           wreg	equ	0xFE8
 32628                           indf1	equ	0xFE7
 32629                           postdec1	equ	0xFE5
 32630                           fsr1h	equ	0xFE2
 32631                           fsr1l	equ	0xFE1
 32632                           indf2	equ	0xFDF
 32633                           postinc2	equ	0xFDE
 32634                           postdec2	equ	0xFDD
 32635                           plusw2	equ	0xFDB
 32636                           fsr2h	equ	0xFDA
 32637                           fsr2l	equ	0xFD9
 32638                           status	equ	0xFD8
 32639                           
 32640 ;; *************** function _USBCtrlTrfOutHandler *****************
 32641 ;; Defined at:
 32642 ;;		line 2169 in file "../Includes/Usb/Framework/usb_device.c"
 32643 ;; Parameters:    Size  Location     Type
 32644 ;;		None
 32645 ;; Auto vars:     Size  Location     Type
 32646 ;;		None
 32647 ;; Return value:  Size  Location     Type
 32648 ;;                  1    wreg      void 
 32649 ;; Registers used:
 32650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 32651 ;; Tracked objects:
 32652 ;;		On entry : 0/0
 32653 ;;		On exit  : 0/0
 32654 ;;		Unchanged: 0/0
 32655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32656 ;;      Params:         0       0       0       0       0       0       0       0       0
 32657 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32658 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32659 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32660 ;;Total ram usage:        0 bytes
 32661 ;; Hardware stack levels used:    1
 32662 ;; Hardware stack levels required when called:    3
 32663 ;; This function calls:
 32664 ;;		_USBCtrlTrfRxService
 32665 ;; This function is called by:
 32666 ;;		_USBCtrlEPService
 32667 ;; This function uses a non-reentrant model
 32668 ;;
 32669                           
 32670                           	psect	text127
 32671  0066D4                     __ptext127:
 32672                           	opt stack 0
 32673  0066D4                     _USBCtrlTrfOutHandler:
 32674                           	opt stack 15
 32675                           
 32676                           ;usb_device.c: 2171: if(controlTransferState == 2)
 32677                           
 32678                           ; BSR set to: 4
 32679                           ;incstack = 0
 32680  0066D4  0E02               	movlw	2
 32681  0066D6  184D               	xorwf	_controlTransferState,w,c	;volatile
 32682  0066D8  A4D8               	btfss	status,2,c
 32683  0066DA  D001               	goto	i2u835_41
 32684  0066DC  D001               	goto	i2u835_40
 32685  0066DE                     i2u835_41:
 32686  0066DE  D003               	goto	i2l9731
 32687  0066E0                     i2u835_40:
 32688                           
 32689                           ;usb_device.c: 2172: {
 32690                           ;usb_device.c: 2173: USBCtrlTrfRxService();
 32691  0066E0  ECB0  F01D         	call	_USBCtrlTrfRxService	;wreg free
 32692                           
 32693                           ;usb_device.c: 2174: }
 32694  0066E4  D02C               	goto	i2l1905
 32695  0066E6                     i2l9731:
 32696                           
 32697                           ;usb_device.c: 2175: else
 32698                           ;usb_device.c: 2176: {
 32699                           ;usb_device.c: 2179: controlTransferState = 0;
 32700  0066E6  0E00               	movlw	0
 32701  0066E8  6E4D               	movwf	_controlTransferState,c	;volatile
 32702                           
 32703                           ;usb_device.c: 2186: if(BothEP0OutUOWNsSet == 0)
 32704  0066EA  0100               	movlb	0	; () banked
 32705  0066EC  51D5               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 32706  0066EE  A4D8               	btfss	status,2,c
 32707  0066F0  D001               	goto	i2u836_41
 32708  0066F2  D001               	goto	i2u836_40
 32709  0066F4                     i2u836_41:
 32710  0066F4  D01F               	goto	i2l9739
 32711  0066F6                     i2u836_40:
 32712                           
 32713                           ; BSR set to: 0
 32714                           ;usb_device.c: 2187: {
 32715                           ;usb_device.c: 2188: pBDTEntryEP0OutNext->CNT = 8;
 32716  0066F6  EE20 F001          	lfsr	2,1
 32717  0066FA  5042               	movf	_pBDTEntryEP0OutNext,w,c
 32718  0066FC  26D9               	addwf	fsr2l,f,c
 32719  0066FE  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 32720  006700  22DA               	addwfc	fsr2h,f,c
 32721  006702  0E08               	movlw	8
 32722  006704  6EDF               	movwf	indf2,c
 32723                           
 32724                           ;usb_device.c: 2189: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 32725  006706  EE20 F002          	lfsr	2,2
 32726  00670A  5042               	movf	_pBDTEntryEP0OutNext,w,c
 32727  00670C  26D9               	addwf	fsr2l,f,c
 32728  00670E  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 32729  006710  22DA               	addwfc	fsr2h,f,c
 32730  006712  0E30               	movlw	48
 32731  006714  6EDE               	movwf	postinc2,c
 32732  006716  0E04               	movlw	4
 32733  006718  6EDD               	movwf	postdec2,c
 32734                           
 32735                           ; BSR set to: 0
 32736                           ;usb_device.c: 2190: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 32737  00671A  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32738  00671E  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32739  006722  0E0C               	movlw	12
 32740  006724  6EDF               	movwf	indf2,c
 32741                           
 32742                           ; BSR set to: 0
 32743                           ;usb_device.c: 2191: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 32744  006726  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32745  00672A  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32746  00672E  0E00               	movlw	0
 32747  006730  8EDB               	bsf	plusw2,7,c
 32748                           
 32749                           ;usb_device.c: 2192: }
 32750  006732  D005               	goto	i2l1905
 32751  006734                     i2l9739:
 32752                           
 32753                           ; BSR set to: 0
 32754                           ;usb_device.c: 2193: else
 32755                           ;usb_device.c: 2194: {
 32756                           ;usb_device.c: 2195: BothEP0OutUOWNsSet = 0;
 32757  006734  0E00               	movlw	0
 32758  006736  0100               	movlb	0	; () banked
 32759  006738  6FD5               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 32760  00673A  D001               	goto	i2l1905
 32761                           
 32762                           ; BSR set to: 0
 32763  00673C  D000               	goto	i2l1905
 32764  00673E                     i2l1905:
 32765  00673E  0012               	return		;funcret
 32766  006740                     __end_of_USBCtrlTrfOutHandler:
 32767                           	opt stack 0
 32768                           pclatu	equ	0xFFB
 32769                           pclath	equ	0xFFA
 32770                           tblptru	equ	0xFF8
 32771                           tblptrh	equ	0xFF7
 32772                           tblptrl	equ	0xFF6
 32773                           tablat	equ	0xFF5
 32774                           prodh	equ	0xFF4
 32775                           prodl	equ	0xFF3
 32776                           intcon	equ	0xFF2
 32777                           intcon3	equ	0xFF0
 32778                           indf0	equ	0xFEF
 32779                           postinc0	equ	0xFEE
 32780                           fsr0h	equ	0xFEA
 32781                           fsr0l	equ	0xFE9
 32782                           wreg	equ	0xFE8
 32783                           indf1	equ	0xFE7
 32784                           postdec1	equ	0xFE5
 32785                           fsr1h	equ	0xFE2
 32786                           fsr1l	equ	0xFE1
 32787                           indf2	equ	0xFDF
 32788                           postinc2	equ	0xFDE
 32789                           postdec2	equ	0xFDD
 32790                           plusw2	equ	0xFDB
 32791                           fsr2h	equ	0xFDA
 32792                           fsr2l	equ	0xFD9
 32793                           status	equ	0xFD8
 32794                           
 32795 ;; *************** function _USBCtrlTrfRxService *****************
 32796 ;; Defined at:
 32797 ;;		line 1518 in file "../Includes/Usb/Framework/usb_device.c"
 32798 ;; Parameters:    Size  Location     Type
 32799 ;;		None
 32800 ;; Auto vars:     Size  Location     Type
 32801 ;;  byteToRead      1   18[COMRAM] unsigned char 
 32802 ;;  i               1   17[COMRAM] unsigned char 
 32803 ;; Return value:  Size  Location     Type
 32804 ;;                  1    wreg      void 
 32805 ;; Registers used:
 32806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 32807 ;; Tracked objects:
 32808 ;;		On entry : 0/0
 32809 ;;		On exit  : 0/0
 32810 ;;		Unchanged: 0/0
 32811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32812 ;;      Params:         0       0       0       0       0       0       0       0       0
 32813 ;;      Locals:         2       0       0       0       0       0       0       0       0
 32814 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32815 ;;      Totals:         2       0       0       0       0       0       0       0       0
 32816 ;;Total ram usage:        2 bytes
 32817 ;; Hardware stack levels used:    1
 32818 ;; Hardware stack levels required when called:    2
 32819 ;; This function calls:
 32820 ;;		_USART_mySetLineCodingHandler
 32821 ;;		_USBCtrlEPAllowStatusStage
 32822 ;; This function is called by:
 32823 ;;		_USBCtrlTrfOutHandler
 32824 ;; This function uses a non-reentrant model
 32825 ;;
 32826                           
 32827                           	psect	text128
 32828  003B60                     __ptext128:
 32829                           	opt stack 0
 32830  003B60                     _USBCtrlTrfRxService:
 32831                           	opt stack 15
 32832                           
 32833                           ;usb_device.c: 1520: uint8_t byteToRead;
 32834                           ;usb_device.c: 1521: uint8_t i;
 32835                           ;usb_device.c: 1525: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 32836                           
 32837                           ;incstack = 0
 32838  003B60  EE20 F001          	lfsr	2,1
 32839  003B64  5044               	movf	_pBDTEntryEP0OutCurrent,w,c
 32840  003B66  26D9               	addwf	fsr2l,f,c
 32841  003B68  5045               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 32842  003B6A  22DA               	addwfc	fsr2h,f,c
 32843  003B6C  50DF               	movf	indf2,w,c
 32844  003B6E  6E13               	movwf	USBCtrlTrfRxService@byteToRead,c
 32845                           
 32846                           ;usb_device.c: 1531: if(byteToRead > outPipes[0].wCount.Val)
 32847  003B70  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 32848  003B72  5C32               	subwf	_outPipes+4,w,c	;volatile
 32849  003B74  0E00               	movlw	0
 32850  003B76  5833               	subwfb	_outPipes+5,w,c	;volatile
 32851  003B78  B0D8               	btfsc	status,0,c
 32852  003B7A  D001               	goto	i2u656_41
 32853  003B7C  D001               	goto	i2u656_40
 32854  003B7E                     i2u656_41:
 32855  003B7E  D003               	goto	i2l8427
 32856  003B80                     i2u656_40:
 32857                           
 32858                           ;usb_device.c: 1532: {
 32859                           ;usb_device.c: 1533: byteToRead = outPipes[0].wCount.Val;
 32860  003B80  C032  F013         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 32861  003B84  D000               	goto	i2l8427
 32862  003B86                     i2l8427:
 32863                           
 32864                           ;usb_device.c: 1534: }
 32865                           ;usb_device.c: 1536: outPipes[0].wCount.Val -= byteToRead;
 32866  003B86  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 32867  003B88  5E32               	subwf	_outPipes+4,f,c	;volatile
 32868  003B8A  0E00               	movlw	0
 32869  003B8C  5A33               	subwfb	_outPipes+5,f,c	;volatile
 32870                           
 32871                           ;usb_device.c: 1540: for(i=0;i<byteToRead;i++)
 32872  003B8E  0E00               	movlw	0
 32873  003B90  6E12               	movwf	USBCtrlTrfRxService@i,c
 32874  003B92  D012               	goto	i2l8437
 32875  003B94                     i2l8431:
 32876                           
 32877                           ;usb_device.c: 1541: {
 32878                           ;usb_device.c: 1542: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 32879  003B94  5012               	movf	USBCtrlTrfRxService@i,w,c
 32880  003B96  0D01               	mullw	1
 32881  003B98  0E38               	movlw	56
 32882  003B9A  24F3               	addwf	prodl,w,c
 32883  003B9C  6ED9               	movwf	fsr2l,c
 32884  003B9E  0E04               	movlw	4
 32885  003BA0  20F4               	addwfc	prodh,w,c
 32886  003BA2  6EDA               	movwf	fsr2h,c
 32887  003BA4  C02E  FFE1         	movff	_outPipes,fsr1l	;volatile
 32888  003BA8  C02F  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 32889  003BAC  CFDF FFE7          	movff	indf2,indf1
 32890  003BB0  4A2E               	infsnz	_outPipes,f,c	;volatile
 32891  003BB2  2A2F               	incf	_outPipes+1,f,c	;volatile
 32892  003BB4  2A12               	incf	USBCtrlTrfRxService@i,f,c
 32893  003BB6  D000               	goto	i2l8437
 32894  003BB8                     i2l8437:
 32895  003BB8  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 32896  003BBA  5C12               	subwf	USBCtrlTrfRxService@i,w,c
 32897  003BBC  A0D8               	btfss	status,0,c
 32898  003BBE  D001               	goto	i2u657_41
 32899  003BC0  D001               	goto	i2u657_40
 32900  003BC2                     i2u657_41:
 32901  003BC2  D7E8               	goto	i2l8431
 32902  003BC4                     i2u657_40:
 32903  003BC4  D000               	goto	i2l8439
 32904  003BC6                     i2l8439:
 32905                           
 32906                           ;usb_device.c: 1543: }
 32907                           ;usb_device.c: 1547: if(outPipes[0].wCount.Val > 0)
 32908  003BC6  5032               	movf	_outPipes+4,w,c	;volatile
 32909  003BC8  1033               	iorwf	_outPipes+5,w,c	;volatile
 32910  003BCA  B4D8               	btfsc	status,2,c
 32911  003BCC  D001               	goto	i2u658_41
 32912  003BCE  D001               	goto	i2u658_40
 32913  003BD0                     i2u658_41:
 32914  003BD0  D035               	goto	i2l8453
 32915  003BD2                     i2u658_40:
 32916                           
 32917                           ;usb_device.c: 1548: {
 32918                           ;usb_device.c: 1549: pBDTEntryEP0OutNext->CNT = 8;
 32919  003BD2  EE20 F001          	lfsr	2,1
 32920  003BD6  5042               	movf	_pBDTEntryEP0OutNext,w,c
 32921  003BD8  26D9               	addwf	fsr2l,f,c
 32922  003BDA  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 32923  003BDC  22DA               	addwfc	fsr2h,f,c
 32924  003BDE  0E08               	movlw	8
 32925  003BE0  6EDF               	movwf	indf2,c
 32926                           
 32927                           ;usb_device.c: 1550: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 32928  003BE2  EE20 F002          	lfsr	2,2
 32929  003BE6  5042               	movf	_pBDTEntryEP0OutNext,w,c
 32930  003BE8  26D9               	addwf	fsr2l,f,c
 32931  003BEA  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 32932  003BEC  22DA               	addwfc	fsr2h,f,c
 32933  003BEE  0E38               	movlw	56
 32934  003BF0  6EDE               	movwf	postinc2,c
 32935  003BF2  0E04               	movlw	4
 32936  003BF4  6EDD               	movwf	postdec2,c
 32937                           
 32938                           ;usb_device.c: 1551: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 32939  003BF6  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 32940  003BFA  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 32941  003BFE  BCDF               	btfsc	indf2,6,c
 32942  003C00  D001               	goto	i2u659_41
 32943  003C02  D001               	goto	i2u659_40
 32944  003C04                     i2u659_41:
 32945  003C04  D00D               	goto	i2l8449
 32946  003C06                     i2u659_40:
 32947                           
 32948                           ;usb_device.c: 1552: {
 32949                           ;usb_device.c: 1553: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 32950  003C06  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32951  003C0A  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32952  003C0E  0E48               	movlw	72
 32953  003C10  6EDF               	movwf	indf2,c
 32954                           
 32955                           ;usb_device.c: 1554: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 32956  003C12  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32957  003C16  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32958  003C1A  0E00               	movlw	0
 32959  003C1C  8EDB               	bsf	plusw2,7,c
 32960                           
 32961                           ;usb_device.c: 1555: }
 32962  003C1E  D04B               	goto	i2l1836
 32963  003C20                     i2l8449:
 32964                           
 32965                           ;usb_device.c: 1556: else
 32966                           ;usb_device.c: 1557: {
 32967                           ;usb_device.c: 1558: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 32968  003C20  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32969  003C24  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32970  003C28  0E08               	movlw	8
 32971  003C2A  6EDF               	movwf	indf2,c
 32972                           
 32973                           ;usb_device.c: 1559: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 32974  003C2C  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32975  003C30  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32976  003C34  0E00               	movlw	0
 32977  003C36  8EDB               	bsf	plusw2,7,c
 32978  003C38  D03E               	goto	i2l1836
 32979                           
 32980                           ;usb_device.c: 1560: }
 32981                           ;usb_device.c: 1561: }
 32982  003C3A  D03D               	goto	i2l1836
 32983  003C3C                     i2l8453:
 32984                           
 32985                           ;usb_device.c: 1562: else
 32986                           ;usb_device.c: 1563: {
 32987                           ;usb_device.c: 1567: pBDTEntryEP0OutNext->CNT = 8;
 32988  003C3C  EE20 F001          	lfsr	2,1
 32989  003C40  5042               	movf	_pBDTEntryEP0OutNext,w,c
 32990  003C42  26D9               	addwf	fsr2l,f,c
 32991  003C44  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 32992  003C46  22DA               	addwfc	fsr2h,f,c
 32993  003C48  0E08               	movlw	8
 32994  003C4A  6EDF               	movwf	indf2,c
 32995                           
 32996                           ;usb_device.c: 1568: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 32997  003C4C  EE20 F002          	lfsr	2,2
 32998  003C50  5042               	movf	_pBDTEntryEP0OutNext,w,c
 32999  003C52  26D9               	addwf	fsr2l,f,c
 33000  003C54  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 33001  003C56  22DA               	addwfc	fsr2h,f,c
 33002  003C58  0E30               	movlw	48
 33003  003C5A  6EDE               	movwf	postinc2,c
 33004  003C5C  0E04               	movlw	4
 33005  003C5E  6EDD               	movwf	postdec2,c
 33006                           
 33007                           ;usb_device.c: 1572: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 33008  003C60  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 33009  003C64  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 33010  003C68  0E04               	movlw	4
 33011  003C6A  6EDF               	movwf	indf2,c
 33012                           
 33013                           ;usb_device.c: 1573: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 33014  003C6C  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 33015  003C70  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 33016  003C74  0E00               	movlw	0
 33017  003C76  8EDB               	bsf	plusw2,7,c
 33018                           
 33019                           ;usb_device.c: 1580: if(outPipes[0].pFunc != (0))
 33020  003C78  5034               	movf	_outPipes+6,w,c	;volatile
 33021  003C7A  1035               	iorwf	_outPipes+7,w,c	;volatile
 33022  003C7C  B4D8               	btfsc	status,2,c
 33023  003C7E  D001               	goto	i2u660_41
 33024  003C80  D001               	goto	i2u660_40
 33025  003C82                     i2u660_41:
 33026  003C82  D00F               	goto	i2l8463
 33027  003C84                     i2u660_40:
 33028                           
 33029                           ;usb_device.c: 1581: {
 33030                           ;usb_device.c: 1586: outPipes[0].pFunc();
 33031  003C84  EE20  F034         	lfsr	2,_outPipes+6	;volatile
 33032  003C88  D801               	call	i2u661_48
 33033  003C8A  D00A               	goto	i2u661_49
 33034  003C8C                     i2u661_48:
 33035  003C8C  0005               	push	
 33036  003C8E  6EFA               	movwf	pclath,c
 33037  003C90  50DE               	movf	postinc2,w,c
 33038  003C92  6EFD               	movwf	tosl,c
 33039  003C94  50DE               	movf	postinc2,w,c
 33040  003C96  6EFE               	movwf	tosh,c
 33041  003C98  50F8               	movf	tblptru,w,c
 33042  003C9A  6EFF               	movwf	tosu,c
 33043  003C9C  50FA               	movf	pclath,w,c
 33044  003C9E  0012               	return		;indir
 33045  003CA0                     i2u661_49:
 33046  003CA0  D000               	goto	i2l8463
 33047  003CA2                     i2l8463:
 33048                           
 33049                           ;usb_device.c: 1588: }
 33050                           ;usb_device.c: 1589: outPipes[0].info.bits.busy = 0;
 33051  003CA2  9E31               	bcf	_outPipes+3,7,c	;volatile
 33052                           
 33053                           ;usb_device.c: 1603: if(USBDeferStatusStagePacket == 0)
 33054  003CA4  504A               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 33055  003CA6  A4D8               	btfss	status,2,c
 33056  003CA8  D001               	goto	i2u662_41
 33057  003CAA  D001               	goto	i2u662_40
 33058  003CAC                     i2u662_41:
 33059  003CAC  D004               	goto	i2l1836
 33060  003CAE                     i2u662_40:
 33061                           
 33062                           ;usb_device.c: 1604: {
 33063                           ;usb_device.c: 1605: USBCtrlEPAllowStatusStage();
 33064  003CAE  EC46  F029         	call	_USBCtrlEPAllowStatusStage	;wreg free
 33065  003CB2  D001               	goto	i2l1836
 33066  003CB4  D000               	goto	i2l1836
 33067  003CB6                     i2l1836:
 33068  003CB6  0012               	return		;funcret
 33069  003CB8                     __end_of_USBCtrlTrfRxService:
 33070                           	opt stack 0
 33071                           tosu	equ	0xFFF
 33072                           tosh	equ	0xFFE
 33073                           tosl	equ	0xFFD
 33074                           pclatu	equ	0xFFB
 33075                           pclath	equ	0xFFA
 33076                           tblptru	equ	0xFF8
 33077                           tblptrh	equ	0xFF7
 33078                           tblptrl	equ	0xFF6
 33079                           tablat	equ	0xFF5
 33080                           prodh	equ	0xFF4
 33081                           prodl	equ	0xFF3
 33082                           intcon	equ	0xFF2
 33083                           intcon3	equ	0xFF0
 33084                           indf0	equ	0xFEF
 33085                           postinc0	equ	0xFEE
 33086                           fsr0h	equ	0xFEA
 33087                           fsr0l	equ	0xFE9
 33088                           wreg	equ	0xFE8
 33089                           indf1	equ	0xFE7
 33090                           postdec1	equ	0xFE5
 33091                           fsr1h	equ	0xFE2
 33092                           fsr1l	equ	0xFE1
 33093                           indf2	equ	0xFDF
 33094                           postinc2	equ	0xFDE
 33095                           postdec2	equ	0xFDD
 33096                           plusw2	equ	0xFDB
 33097                           fsr2h	equ	0xFDA
 33098                           fsr2l	equ	0xFD9
 33099                           status	equ	0xFD8
 33100                           
 33101 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 33102 ;; Defined at:
 33103 ;;		line 1104 in file "../Includes/Usb/Framework/usb_device.c"
 33104 ;; Parameters:    Size  Location     Type
 33105 ;;		None
 33106 ;; Auto vars:     Size  Location     Type
 33107 ;;		None
 33108 ;; Return value:  Size  Location     Type
 33109 ;;                  1    wreg      void 
 33110 ;; Registers used:
 33111 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33112 ;; Tracked objects:
 33113 ;;		On entry : 0/0
 33114 ;;		On exit  : 0/0
 33115 ;;		Unchanged: 0/0
 33116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33117 ;;      Params:         0       0       0       0       0       0       0       0       0
 33118 ;;      Locals:         0       0       0       0       0       0       0       0       0
 33119 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33120 ;;      Totals:         0       0       0       0       0       0       0       0       0
 33121 ;;Total ram usage:        0 bytes
 33122 ;; Hardware stack levels used:    1
 33123 ;; This function calls:
 33124 ;;		Nothing
 33125 ;; This function is called by:
 33126 ;;		_USBDeviceTasks
 33127 ;;		_USBCtrlEPServiceComplete
 33128 ;;		_USBCtrlTrfRxService
 33129 ;; This function uses a non-reentrant model
 33130 ;;
 33131                           
 33132                           	psect	text129
 33133  00528C                     __ptext129:
 33134                           	opt stack 0
 33135  00528C                     _USBCtrlEPAllowStatusStage:
 33136                           	opt stack 16
 33137                           
 33138                           ;usb_device.c: 1111: if(USBStatusStageEnabledFlag1 == 0)
 33139                           
 33140                           ;incstack = 0
 33141  00528C  0100               	movlb	0	; () banked
 33142  00528E  51D4               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 33143  005290  A4D8               	btfss	status,2,c
 33144  005292  D001               	goto	i2u590_41
 33145  005294  D001               	goto	i2u590_40
 33146  005296                     i2u590_41:
 33147  005296  D06C               	goto	i2l1784
 33148  005298                     i2u590_40:
 33149                           
 33150                           ; BSR set to: 0
 33151                           ;usb_device.c: 1112: {
 33152                           ;usb_device.c: 1113: USBStatusStageEnabledFlag1 = 1;
 33153  005298  0E01               	movlw	1
 33154  00529A  0100               	movlb	0	; () banked
 33155  00529C  6FD4               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 33156                           
 33157                           ;usb_device.c: 1114: if(USBStatusStageEnabledFlag2 == 0)
 33158  00529E  0100               	movlb	0	; () banked
 33159  0052A0  51D3               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 33160  0052A2  A4D8               	btfss	status,2,c
 33161  0052A4  D001               	goto	i2u591_41
 33162  0052A6  D001               	goto	i2u591_40
 33163  0052A8                     i2u591_41:
 33164  0052A8  D063               	goto	i2l1784
 33165  0052AA                     i2u591_40:
 33166                           
 33167                           ; BSR set to: 0
 33168                           ;usb_device.c: 1115: {
 33169                           ;usb_device.c: 1116: USBStatusStageEnabledFlag2 = 1;
 33170  0052AA  0E01               	movlw	1
 33171  0052AC  0100               	movlb	0	; () banked
 33172  0052AE  6FD3               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 33173                           
 33174                           ; BSR set to: 0
 33175                           ;usb_device.c: 1120: if(controlTransferState == 2)
 33176  0052B0  0E02               	movlw	2
 33177  0052B2  184D               	xorwf	_controlTransferState,w,c	;volatile
 33178  0052B4  A4D8               	btfss	status,2,c
 33179  0052B6  D001               	goto	i2u592_41
 33180  0052B8  D001               	goto	i2u592_40
 33181  0052BA                     i2u592_41:
 33182  0052BA  D015               	goto	i2l7975
 33183  0052BC                     i2u592_40:
 33184                           
 33185                           ; BSR set to: 0
 33186                           ;usb_device.c: 1121: {
 33187                           ;usb_device.c: 1122: pBDTEntryIn[0]->CNT = 0;
 33188  0052BC  EE20 F001          	lfsr	2,1
 33189  0052C0  503C               	movf	_pBDTEntryIn,w,c
 33190  0052C2  26D9               	addwf	fsr2l,f,c
 33191  0052C4  503D               	movf	_pBDTEntryIn+1,w,c
 33192  0052C6  22DA               	addwfc	fsr2h,f,c
 33193  0052C8  0E00               	movlw	0
 33194  0052CA  6EDF               	movwf	indf2,c
 33195                           
 33196                           ; BSR set to: 0
 33197                           ;usb_device.c: 1123: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 33198  0052CC  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 33199  0052D0  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 33200  0052D4  0E48               	movlw	72
 33201  0052D6  6EDF               	movwf	indf2,c
 33202                           
 33203                           ; BSR set to: 0
 33204                           ;usb_device.c: 1124: pBDTEntryIn[0]->STAT.Val |= 0x80;
 33205  0052D8  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 33206  0052DC  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 33207  0052E0  0E00               	movlw	0
 33208  0052E2  8EDB               	bsf	plusw2,7,c
 33209                           
 33210                           ;usb_device.c: 1125: }
 33211  0052E4  D045               	goto	i2l1784
 33212  0052E6                     i2l7975:
 33213                           
 33214                           ; BSR set to: 0
 33215                           ;usb_device.c: 1126: else if(controlTransferState == 1)
 33216  0052E6  044D               	decf	_controlTransferState,w,c	;volatile
 33217  0052E8  A4D8               	btfss	status,2,c
 33218  0052EA  D001               	goto	i2u593_41
 33219  0052EC  D001               	goto	i2u593_40
 33220  0052EE                     i2u593_41:
 33221  0052EE  D040               	goto	i2l1784
 33222  0052F0                     i2u593_40:
 33223                           
 33224                           ; BSR set to: 0
 33225                           ;usb_device.c: 1127: {
 33226                           ;usb_device.c: 1128: BothEP0OutUOWNsSet = 0;
 33227  0052F0  0E00               	movlw	0
 33228  0052F2  0100               	movlb	0	; () banked
 33229  0052F4  6FD5               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 33230                           
 33231                           ; BSR set to: 0
 33232                           ;usb_device.c: 1132: pBDTEntryEP0OutCurrent->CNT = 8;
 33233  0052F6  EE20 F001          	lfsr	2,1
 33234  0052FA  5044               	movf	_pBDTEntryEP0OutCurrent,w,c
 33235  0052FC  26D9               	addwf	fsr2l,f,c
 33236  0052FE  5045               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 33237  005300  22DA               	addwfc	fsr2h,f,c
 33238  005302  0E08               	movlw	8
 33239  005304  6EDF               	movwf	indf2,c
 33240                           
 33241                           ; BSR set to: 0
 33242                           ;usb_device.c: 1133: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 33243  005306  EE20 F002          	lfsr	2,2
 33244  00530A  5044               	movf	_pBDTEntryEP0OutCurrent,w,c
 33245  00530C  26D9               	addwf	fsr2l,f,c
 33246  00530E  5045               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 33247  005310  22DA               	addwfc	fsr2h,f,c
 33248  005312  0E30               	movlw	48
 33249  005314  6EDE               	movwf	postinc2,c
 33250  005316  0E04               	movlw	4
 33251  005318  6EDD               	movwf	postdec2,c
 33252                           
 33253                           ; BSR set to: 0
 33254                           ;usb_device.c: 1134: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 33255  00531A  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 33256  00531E  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 33257  005322  0E04               	movlw	4
 33258  005324  6EDF               	movwf	indf2,c
 33259                           
 33260                           ; BSR set to: 0
 33261                           ;usb_device.c: 1135: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 33262  005326  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 33263  00532A  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 33264  00532E  0E00               	movlw	0
 33265  005330  8EDB               	bsf	plusw2,7,c
 33266                           
 33267                           ; BSR set to: 0
 33268                           ;usb_device.c: 1136: BothEP0OutUOWNsSet = 1;
 33269  005332  0E01               	movlw	1
 33270  005334  0100               	movlb	0	; () banked
 33271  005336  6FD5               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 33272                           
 33273                           ; BSR set to: 0
 33274                           ;usb_device.c: 1139: pBDTEntryEP0OutNext->CNT = 8;
 33275  005338  EE20 F001          	lfsr	2,1
 33276  00533C  5042               	movf	_pBDTEntryEP0OutNext,w,c
 33277  00533E  26D9               	addwf	fsr2l,f,c
 33278  005340  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 33279  005342  22DA               	addwfc	fsr2h,f,c
 33280  005344  0E08               	movlw	8
 33281  005346  6EDF               	movwf	indf2,c
 33282                           
 33283                           ; BSR set to: 0
 33284                           ;usb_device.c: 1140: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 33285  005348  EE20 F002          	lfsr	2,2
 33286  00534C  5042               	movf	_pBDTEntryEP0OutNext,w,c
 33287  00534E  26D9               	addwf	fsr2l,f,c
 33288  005350  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 33289  005352  22DA               	addwfc	fsr2h,f,c
 33290  005354  0E30               	movlw	48
 33291  005356  6EDE               	movwf	postinc2,c
 33292  005358  0E04               	movlw	4
 33293  00535A  6EDD               	movwf	postdec2,c
 33294                           
 33295                           ; BSR set to: 0
 33296                           ;usb_device.c: 1141: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 33297  00535C  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 33298  005360  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 33299  005364  0E80               	movlw	128
 33300  005366  6EDF               	movwf	indf2,c
 33301  005368  D003               	goto	i2l1784
 33302                           
 33303                           ; BSR set to: 0
 33304  00536A  D002               	goto	i2l1784
 33305                           
 33306                           ; BSR set to: 0
 33307  00536C  D001               	goto	i2l1784
 33308                           
 33309                           ; BSR set to: 0
 33310  00536E  D000               	goto	i2l1784
 33311  005370                     i2l1784:
 33312                           
 33313                           ; BSR set to: 0
 33314  005370  0012               	return		;funcret
 33315  005372                     __end_of_USBCtrlEPAllowStatusStage:
 33316                           	opt stack 0
 33317                           tosu	equ	0xFFF
 33318                           tosh	equ	0xFFE
 33319                           tosl	equ	0xFFD
 33320                           pclatu	equ	0xFFB
 33321                           pclath	equ	0xFFA
 33322                           tblptru	equ	0xFF8
 33323                           tblptrh	equ	0xFF7
 33324                           tblptrl	equ	0xFF6
 33325                           tablat	equ	0xFF5
 33326                           prodh	equ	0xFF4
 33327                           prodl	equ	0xFF3
 33328                           intcon	equ	0xFF2
 33329                           intcon3	equ	0xFF0
 33330                           indf0	equ	0xFEF
 33331                           postinc0	equ	0xFEE
 33332                           fsr0h	equ	0xFEA
 33333                           fsr0l	equ	0xFE9
 33334                           wreg	equ	0xFE8
 33335                           indf1	equ	0xFE7
 33336                           postdec1	equ	0xFE5
 33337                           fsr1h	equ	0xFE2
 33338                           fsr1l	equ	0xFE1
 33339                           indf2	equ	0xFDF
 33340                           postinc2	equ	0xFDE
 33341                           postdec2	equ	0xFDD
 33342                           plusw2	equ	0xFDB
 33343                           fsr2h	equ	0xFDA
 33344                           fsr2l	equ	0xFD9
 33345                           status	equ	0xFD8
 33346                           
 33347 ;; *************** function _USBCtrlTrfInHandler *****************
 33348 ;; Defined at:
 33349 ;;		line 2223 in file "../Includes/Usb/Framework/usb_device.c"
 33350 ;; Parameters:    Size  Location     Type
 33351 ;;		None
 33352 ;; Auto vars:     Size  Location     Type
 33353 ;;  lastDTS         1   17[COMRAM] unsigned char 
 33354 ;; Return value:  Size  Location     Type
 33355 ;;                  1    wreg      void 
 33356 ;; Registers used:
 33357 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 33358 ;; Tracked objects:
 33359 ;;		On entry : 0/0
 33360 ;;		On exit  : 0/0
 33361 ;;		Unchanged: 0/0
 33362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33363 ;;      Params:         0       0       0       0       0       0       0       0       0
 33364 ;;      Locals:         1       0       0       0       0       0       0       0       0
 33365 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33366 ;;      Totals:         1       0       0       0       0       0       0       0       0
 33367 ;;Total ram usage:        1 bytes
 33368 ;; Hardware stack levels used:    1
 33369 ;; Hardware stack levels required when called:    2
 33370 ;; This function calls:
 33371 ;;		_USART_mySetLineCodingHandler
 33372 ;;		_USBCtrlTrfTxService
 33373 ;; This function is called by:
 33374 ;;		_USBCtrlEPService
 33375 ;; This function uses a non-reentrant model
 33376 ;;
 33377                           
 33378                           	psect	text130
 33379  0043CC                     __ptext130:
 33380                           	opt stack 0
 33381  0043CC                     _USBCtrlTrfInHandler:
 33382                           	opt stack 16
 33383                           
 33384                           ;usb_device.c: 2225: uint8_t lastDTS;
 33385                           ;usb_device.c: 2227: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 33386                           
 33387                           ; BSR set to: 0
 33388                           ;incstack = 0
 33389  0043CC  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 33390  0043D0  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 33391  0043D4  0E00               	movlw	0
 33392  0043D6  BCDF               	btfsc	indf2,6,c
 33393  0043D8  0E01               	movlw	1
 33394  0043DA  6E12               	movwf	USBCtrlTrfInHandler@lastDTS,c
 33395                           
 33396                           ;usb_device.c: 2230: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 33397  0043DC  0E04               	movlw	4
 33398  0043DE  1A3C               	xorwf	_pBDTEntryIn,f,c
 33399                           
 33400                           ;usb_device.c: 2235: if(USBDeviceState == ADR_PENDING_STATE)
 33401  0043E0  0E08               	movlw	8
 33402  0043E2  0100               	movlb	0	; () banked
 33403  0043E4  19DE               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 33404  0043E6  A4D8               	btfss	status,2,c
 33405  0043E8  D001               	goto	i2u837_41
 33406  0043EA  D001               	goto	i2u837_40
 33407  0043EC                     i2u837_41:
 33408  0043EC  D012               	goto	i2l9755
 33409  0043EE                     i2u837_40:
 33410                           
 33411                           ; BSR set to: 0
 33412                           ;usb_device.c: 2236: {
 33413                           ;usb_device.c: 2237: UADDR = (SetupPkt.bDevADR & 0x7F);
 33414  0043EE  0104               	movlb	4	; () banked
 33415  0043F0  5132               	movf	50,w,b	;volatile
 33416  0043F2  0B7F               	andlw	127
 33417  0043F4  6E63               	movwf	3939,c	;volatile
 33418                           
 33419                           ; BSR set to: 4
 33420                           ;usb_device.c: 2238: if(UADDR != 0u)
 33421  0043F6  5063               	movf	3939,w,c	;volatile
 33422  0043F8  B4D8               	btfsc	status,2,c
 33423  0043FA  D001               	goto	i2u838_41
 33424  0043FC  D001               	goto	i2u838_40
 33425  0043FE                     i2u838_41:
 33426  0043FE  D004               	goto	i2l9753
 33427  004400                     i2u838_40:
 33428                           
 33429                           ; BSR set to: 4
 33430                           ;usb_device.c: 2239: {
 33431                           ;usb_device.c: 2240: USBDeviceState=ADDRESS_STATE;
 33432  004400  0E10               	movlw	16
 33433  004402  0100               	movlb	0	; () banked
 33434  004404  6FDE               	movwf	_USBDeviceState& (0+255),b	;volatile
 33435                           
 33436                           ;usb_device.c: 2241: }
 33437  004406  D005               	goto	i2l9755
 33438  004408                     i2l9753:
 33439                           
 33440                           ;usb_device.c: 2242: else
 33441                           ;usb_device.c: 2243: {
 33442                           ;usb_device.c: 2244: USBDeviceState=DEFAULT_STATE;
 33443  004408  0E04               	movlw	4
 33444  00440A  0100               	movlb	0	; () banked
 33445  00440C  6FDE               	movwf	_USBDeviceState& (0+255),b	;volatile
 33446  00440E  D001               	goto	i2l9755
 33447                           
 33448                           ; BSR set to: 0
 33449  004410  D000               	goto	i2l9755
 33450  004412                     i2l9755:
 33451                           
 33452                           ; BSR set to: 0
 33453                           ;usb_device.c: 2245: }
 33454                           ;usb_device.c: 2246: }
 33455                           ;usb_device.c: 2249: if(controlTransferState == 1)
 33456  004412  044D               	decf	_controlTransferState,w,c	;volatile
 33457  004414  A4D8               	btfss	status,2,c
 33458  004416  D001               	goto	i2u839_41
 33459  004418  D001               	goto	i2u839_40
 33460  00441A                     i2u839_41:
 33461  00441A  D040               	goto	i2l1911
 33462  00441C                     i2u839_40:
 33463                           
 33464                           ; BSR set to: 0
 33465                           ;usb_device.c: 2250: {
 33466                           ;usb_device.c: 2251: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 33467  00441C  EE20 F002          	lfsr	2,2
 33468  004420  503C               	movf	_pBDTEntryIn,w,c
 33469  004422  26D9               	addwf	fsr2l,f,c
 33470  004424  503D               	movf	_pBDTEntryIn+1,w,c
 33471  004426  22DA               	addwfc	fsr2h,f,c
 33472  004428  0E38               	movlw	56
 33473  00442A  6EDE               	movwf	postinc2,c
 33474  00442C  0E04               	movlw	4
 33475  00442E  6EDD               	movwf	postdec2,c
 33476                           
 33477                           ; BSR set to: 0
 33478                           ;usb_device.c: 2252: USBCtrlTrfTxService();
 33479  004430  ECFB  F024         	call	_USBCtrlTrfTxService	;wreg free
 33480                           
 33481                           ;usb_device.c: 2258: if(shortPacketStatus == 2)
 33482  004434  0E02               	movlw	2
 33483  004436  184E               	xorwf	_shortPacketStatus,w,c	;volatile
 33484  004438  A4D8               	btfss	status,2,c
 33485  00443A  D001               	goto	i2u840_41
 33486  00443C  D001               	goto	i2u840_40
 33487  00443E                     i2u840_41:
 33488  00443E  D00D               	goto	i2l9767
 33489  004440                     i2u840_40:
 33490                           
 33491                           ;usb_device.c: 2259: {
 33492                           ;usb_device.c: 2262: pBDTEntryIn[0]->STAT.Val = 0x04;
 33493  004440  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 33494  004444  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 33495  004448  0E04               	movlw	4
 33496  00444A  6EDF               	movwf	indf2,c
 33497                           
 33498                           ;usb_device.c: 2263: pBDTEntryIn[0]->STAT.Val |= 0x80;
 33499  00444C  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 33500  004450  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 33501  004454  0E00               	movlw	0
 33502  004456  8EDB               	bsf	plusw2,7,c
 33503                           
 33504                           ;usb_device.c: 2264: }
 33505  004458  D03F               	goto	i2l1919
 33506  00445A                     i2l9767:
 33507                           
 33508                           ;usb_device.c: 2265: else
 33509                           ;usb_device.c: 2266: {
 33510                           ;usb_device.c: 2267: if(lastDTS == 0)
 33511  00445A  5012               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 33512  00445C  A4D8               	btfss	status,2,c
 33513  00445E  D001               	goto	i2u841_41
 33514  004460  D001               	goto	i2u841_40
 33515  004462                     i2u841_41:
 33516  004462  D00D               	goto	i2l9773
 33517  004464                     i2u841_40:
 33518                           
 33519                           ;usb_device.c: 2268: {
 33520                           ;usb_device.c: 2269: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 33521  004464  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 33522  004468  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 33523  00446C  0E48               	movlw	72
 33524  00446E  6EDF               	movwf	indf2,c
 33525                           
 33526                           ;usb_device.c: 2270: pBDTEntryIn[0]->STAT.Val |= 0x80;
 33527  004470  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 33528  004474  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 33529  004478  0E00               	movlw	0
 33530  00447A  8EDB               	bsf	plusw2,7,c
 33531                           
 33532                           ;usb_device.c: 2271: }
 33533  00447C  D02D               	goto	i2l1919
 33534  00447E                     i2l9773:
 33535                           
 33536                           ;usb_device.c: 2272: else
 33537                           ;usb_device.c: 2273: {
 33538                           ;usb_device.c: 2274: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 33539  00447E  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 33540  004482  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 33541  004486  0E08               	movlw	8
 33542  004488  6EDF               	movwf	indf2,c
 33543                           
 33544                           ;usb_device.c: 2275: pBDTEntryIn[0]->STAT.Val |= 0x80;
 33545  00448A  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 33546  00448E  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 33547  004492  0E00               	movlw	0
 33548  004494  8EDB               	bsf	plusw2,7,c
 33549  004496  D020               	goto	i2l1919
 33550  004498  D01F               	goto	i2l1919
 33551                           
 33552                           ;usb_device.c: 2276: }
 33553                           ;usb_device.c: 2277: }
 33554                           ;usb_device.c: 2278: }
 33555  00449A  D01E               	goto	i2l1919
 33556  00449C                     i2l1911:
 33557                           
 33558                           ; BSR set to: 0
 33559                           ;usb_device.c: 2279: else
 33560                           ;usb_device.c: 2280: {
 33561                           ;usb_device.c: 2284: if(outPipes[0].info.bits.busy == 1)
 33562  00449C  AE31               	btfss	_outPipes+3,7,c	;volatile
 33563  00449E  D001               	goto	i2u842_41
 33564  0044A0  D001               	goto	i2u842_40
 33565  0044A2                     i2u842_41:
 33566  0044A2  D017               	goto	i2l9783
 33567  0044A4                     i2u842_40:
 33568                           
 33569                           ; BSR set to: 0
 33570                           ;usb_device.c: 2285: {
 33571                           ;usb_device.c: 2286: if(outPipes[0].pFunc != (0))
 33572  0044A4  5034               	movf	_outPipes+6,w,c	;volatile
 33573  0044A6  1035               	iorwf	_outPipes+7,w,c	;volatile
 33574  0044A8  B4D8               	btfsc	status,2,c
 33575  0044AA  D001               	goto	i2u843_41
 33576  0044AC  D001               	goto	i2u843_40
 33577  0044AE                     i2u843_41:
 33578  0044AE  D00F               	goto	i2l9781
 33579  0044B0                     i2u843_40:
 33580                           
 33581                           ; BSR set to: 0
 33582                           ;usb_device.c: 2287: {
 33583                           ;usb_device.c: 2288: outPipes[0].pFunc();
 33584  0044B0  EE20  F034         	lfsr	2,_outPipes+6	;volatile
 33585  0044B4  D801               	call	i2u844_48
 33586  0044B6  D00A               	goto	i2u844_49
 33587  0044B8                     i2u844_48:
 33588  0044B8  0005               	push	
 33589  0044BA  6EFA               	movwf	pclath,c
 33590  0044BC  50DE               	movf	postinc2,w,c
 33591  0044BE  6EFD               	movwf	tosl,c
 33592  0044C0  50DE               	movf	postinc2,w,c
 33593  0044C2  6EFE               	movwf	tosh,c
 33594  0044C4  50F8               	movf	tblptru,w,c
 33595  0044C6  6EFF               	movwf	tosu,c
 33596  0044C8  50FA               	movf	pclath,w,c
 33597  0044CA  0012               	return		;indir
 33598  0044CC                     i2u844_49:
 33599  0044CC  D000               	goto	i2l9781
 33600  0044CE                     i2l9781:
 33601                           
 33602                           ;usb_device.c: 2289: }
 33603                           ;usb_device.c: 2290: outPipes[0].info.bits.busy = 0;
 33604  0044CE  9E31               	bcf	_outPipes+3,7,c	;volatile
 33605  0044D0  D000               	goto	i2l9783
 33606  0044D2                     i2l9783:
 33607                           
 33608                           ;usb_device.c: 2291: }
 33609                           ;usb_device.c: 2293: controlTransferState = 0;
 33610  0044D2  0E00               	movlw	0
 33611  0044D4  6E4D               	movwf	_controlTransferState,c	;volatile
 33612  0044D6  D000               	goto	i2l1919
 33613  0044D8                     i2l1919:
 33614  0044D8  0012               	return		;funcret
 33615  0044DA                     __end_of_USBCtrlTrfInHandler:
 33616                           	opt stack 0
 33617                           tosu	equ	0xFFF
 33618                           tosh	equ	0xFFE
 33619                           tosl	equ	0xFFD
 33620                           pclatu	equ	0xFFB
 33621                           pclath	equ	0xFFA
 33622                           tblptru	equ	0xFF8
 33623                           tblptrh	equ	0xFF7
 33624                           tblptrl	equ	0xFF6
 33625                           tablat	equ	0xFF5
 33626                           prodh	equ	0xFF4
 33627                           prodl	equ	0xFF3
 33628                           intcon	equ	0xFF2
 33629                           intcon3	equ	0xFF0
 33630                           indf0	equ	0xFEF
 33631                           postinc0	equ	0xFEE
 33632                           fsr0h	equ	0xFEA
 33633                           fsr0l	equ	0xFE9
 33634                           wreg	equ	0xFE8
 33635                           indf1	equ	0xFE7
 33636                           postdec1	equ	0xFE5
 33637                           fsr1h	equ	0xFE2
 33638                           fsr1l	equ	0xFE1
 33639                           indf2	equ	0xFDF
 33640                           postinc2	equ	0xFDE
 33641                           postdec2	equ	0xFDD
 33642                           plusw2	equ	0xFDB
 33643                           fsr2h	equ	0xFDA
 33644                           fsr2l	equ	0xFD9
 33645                           status	equ	0xFD8
 33646                           
 33647 ;; *************** function _USBCtrlTrfTxService *****************
 33648 ;; Defined at:
 33649 ;;		line 1437 in file "../Includes/Usb/Framework/usb_device.c"
 33650 ;; Parameters:    Size  Location     Type
 33651 ;;		None
 33652 ;; Auto vars:     Size  Location     Type
 33653 ;;  byteToSend      1    0[COMRAM] unsigned char 
 33654 ;; Return value:  Size  Location     Type
 33655 ;;                  1    wreg      void 
 33656 ;; Registers used:
 33657 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 33658 ;; Tracked objects:
 33659 ;;		On entry : 0/0
 33660 ;;		On exit  : 0/0
 33661 ;;		Unchanged: 0/0
 33662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33663 ;;      Params:         0       0       0       0       0       0       0       0       0
 33664 ;;      Locals:         1       0       0       0       0       0       0       0       0
 33665 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33666 ;;      Totals:         1       0       0       0       0       0       0       0       0
 33667 ;;Total ram usage:        1 bytes
 33668 ;; Hardware stack levels used:    1
 33669 ;; This function calls:
 33670 ;;		Nothing
 33671 ;; This function is called by:
 33672 ;;		_USBCtrlEPAllowDataStage
 33673 ;;		_USBCtrlTrfInHandler
 33674 ;; This function uses a non-reentrant model
 33675 ;;
 33676                           
 33677                           	psect	text131
 33678  0049F6                     __ptext131:
 33679                           	opt stack 0
 33680  0049F6                     _USBCtrlTrfTxService:
 33681                           	opt stack 15
 33682                           
 33683                           ;usb_device.c: 1439: uint8_t byteToSend;
 33684                           ;usb_device.c: 1443: byteToSend = 8;
 33685                           
 33686                           ;incstack = 0
 33687  0049F6  0E08               	movlw	8
 33688  0049F8  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 33689                           
 33690                           ;usb_device.c: 1444: if(inPipes[0].wCount.Val < (uint8_t)8)
 33691  0049FA  503B               	movf	_inPipes+5,w,c	;volatile
 33692  0049FC  E105               	bnz	i2u569_41
 33693  0049FE  0E08               	movlw	8
 33694  004A00  5C3A               	subwf	_inPipes+4,w,c	;volatile
 33695  004A02  B0D8               	btfsc	status,0,c
 33696  004A04  D001               	goto	i2u569_41
 33697  004A06  D001               	goto	i2u569_40
 33698  004A08                     i2u569_41:
 33699  004A08  D014               	goto	i2l7793
 33700  004A0A                     i2u569_40:
 33701                           
 33702                           ;usb_device.c: 1445: {
 33703                           ;usb_device.c: 1446: byteToSend = inPipes[0].wCount.Val;
 33704  004A0A  C03A  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 33705                           
 33706                           ;usb_device.c: 1453: if(shortPacketStatus == 0)
 33707  004A0E  504E               	movf	_shortPacketStatus,w,c	;volatile
 33708  004A10  A4D8               	btfss	status,2,c
 33709  004A12  D001               	goto	i2u570_41
 33710  004A14  D001               	goto	i2u570_40
 33711  004A16                     i2u570_41:
 33712  004A16  D003               	goto	i2l7789
 33713  004A18                     i2u570_40:
 33714                           
 33715                           ;usb_device.c: 1454: {
 33716                           ;usb_device.c: 1455: shortPacketStatus = 1;
 33717  004A18  0E01               	movlw	1
 33718  004A1A  6E4E               	movwf	_shortPacketStatus,c	;volatile
 33719                           
 33720                           ;usb_device.c: 1456: }
 33721  004A1C  D00A               	goto	i2l7793
 33722  004A1E                     i2l7789:
 33723                           
 33724                           ;usb_device.c: 1457: else if(shortPacketStatus == 1)
 33725  004A1E  044E               	decf	_shortPacketStatus,w,c	;volatile
 33726  004A20  A4D8               	btfss	status,2,c
 33727  004A22  D001               	goto	i2u571_41
 33728  004A24  D001               	goto	i2u571_40
 33729  004A26                     i2u571_41:
 33730  004A26  D005               	goto	i2l7793
 33731  004A28                     i2u571_40:
 33732                           
 33733                           ;usb_device.c: 1458: {
 33734                           ;usb_device.c: 1459: shortPacketStatus = 2;
 33735  004A28  0E02               	movlw	2
 33736  004A2A  6E4E               	movwf	_shortPacketStatus,c	;volatile
 33737  004A2C  D002               	goto	i2l7793
 33738  004A2E  D001               	goto	i2l7793
 33739  004A30  D000               	goto	i2l7793
 33740  004A32                     i2l7793:
 33741                           
 33742                           ;usb_device.c: 1460: }
 33743                           ;usb_device.c: 1461: }
 33744                           ;usb_device.c: 1465: inPipes[0].wCount.Val -= byteToSend;
 33745  004A32  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 33746  004A34  5E3A               	subwf	_inPipes+4,f,c	;volatile
 33747  004A36  0E00               	movlw	0
 33748  004A38  5A3B               	subwfb	_inPipes+5,f,c	;volatile
 33749                           
 33750                           ;usb_device.c: 1470: pBDTEntryIn[0]->CNT = byteToSend;
 33751  004A3A  EE20 F001          	lfsr	2,1
 33752  004A3E  503C               	movf	_pBDTEntryIn,w,c
 33753  004A40  26D9               	addwf	fsr2l,f,c
 33754  004A42  503D               	movf	_pBDTEntryIn+1,w,c
 33755  004A44  22DA               	addwfc	fsr2h,f,c
 33756  004A46  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 33757                           
 33758                           ;usb_device.c: 1474: pDst = (volatile uint8_t*)CtrlTrfData;
 33759  004A4A  0E38               	movlw	56
 33760  004A4C  0101               	movlb	1	; () banked
 33761  004A4E  6F54               	movwf	_pDst& (0+255),b
 33762  004A50  0E04               	movlw	4
 33763  004A52  0101               	movlb	1	; () banked
 33764  004A54  6F55               	movwf	(_pDst+1)& (0+255),b
 33765                           
 33766                           ; BSR set to: 1
 33767                           ;usb_device.c: 1475: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 33768  004A56  B039               	btfsc	_inPipes+3,0,c	;volatile
 33769  004A58  D001               	goto	i2u572_41
 33770  004A5A  D001               	goto	i2u572_40
 33771  004A5C                     i2u572_41:
 33772  004A5C  D042               	goto	i2l7821
 33773  004A5E                     i2u572_40:
 33774  004A5E  D01D               	goto	i2l7811
 33775                           
 33776                           ; BSR set to: 1
 33777                           ;usb_device.c: 1476: {
 33778                           ;usb_device.c: 1477: while(byteToSend)
 33779  004A60  D01C               	goto	i2l7811
 33780  004A62                     i2l7803:
 33781                           
 33782                           ; BSR set to: 1
 33783                           ;usb_device.c: 1478: {
 33784                           ;usb_device.c: 1479: *pDst++ = *inPipes[0].pSrc.bRom++;
 33785  004A62  C036  FFF6         	movff	_inPipes,tblptrl	;volatile
 33786  004A66  C037  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 33787  004A6A  6AF8               	clrf	tblptru,c
 33788  004A6C  C154  FFD9         	movff	_pDst,fsr2l
 33789  004A70  C155  FFDA         	movff	_pDst+1,fsr2h
 33790  004A74  0E07               	movlw	(high __ramtop+-1)
 33791  004A76  64F7               	cpfsgt	tblptrh,c
 33792  004A78  D003               	bra	i2u573_47
 33793  004A7A  0008               	tblrd		*
 33794  004A7C  50F5               	movf	tablat,w,c
 33795  004A7E  D005               	bra	i2u573_40
 33796  004A80                     i2u573_47:
 33797  004A80  CFF6 FFE9          	movff	tblptrl,fsr0l
 33798  004A84  CFF7 FFEA          	movff	tblptrh,fsr0h
 33799  004A88  50EF               	movf	indf0,w,c
 33800  004A8A                     i2u573_40:
 33801  004A8A  6EDF               	movwf	indf2,c
 33802  004A8C  4A36               	infsnz	_inPipes,f,c	;volatile
 33803  004A8E  2A37               	incf	_inPipes+1,f,c	;volatile
 33804  004A90  0101               	movlb	1	; () banked
 33805  004A92  4B54               	infsnz	_pDst& (0+255),f,b
 33806  004A94  2B55               	incf	(_pDst+1)& (0+255),f,b
 33807                           
 33808                           ; BSR set to: 1
 33809                           ;usb_device.c: 1480: byteToSend--;
 33810  004A96  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 33811  004A98  D000               	goto	i2l7811
 33812  004A9A                     i2l7811:
 33813                           
 33814                           ; BSR set to: 1
 33815  004A9A  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 33816  004A9C  A4D8               	btfss	status,2,c
 33817  004A9E  D001               	goto	i2u574_41
 33818  004AA0  D001               	goto	i2u574_40
 33819  004AA2                     i2u574_41:
 33820  004AA2  D7DF               	goto	i2l7803
 33821  004AA4                     i2u574_40:
 33822  004AA4  D025               	goto	i2l1823
 33823                           
 33824                           ; BSR set to: 1
 33825                           ;usb_device.c: 1481: }
 33826                           ;usb_device.c: 1482: }
 33827  004AA6  D024               	goto	i2l1823
 33828                           
 33829                           ; BSR set to: 1
 33830                           ;usb_device.c: 1483: else
 33831                           ;usb_device.c: 1484: {
 33832                           ;usb_device.c: 1485: while(byteToSend)
 33833  004AA8  D01C               	goto	i2l7821
 33834  004AAA                     i2l7813:
 33835                           
 33836                           ; BSR set to: 1
 33837                           ;usb_device.c: 1486: {
 33838                           ;usb_device.c: 1487: *pDst++ = *inPipes[0].pSrc.bRam++;
 33839  004AAA  C036  FFF6         	movff	_inPipes,tblptrl	;volatile
 33840  004AAE  C037  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 33841  004AB2  6AF8               	clrf	tblptru,c
 33842  004AB4  C154  FFD9         	movff	_pDst,fsr2l
 33843  004AB8  C155  FFDA         	movff	_pDst+1,fsr2h
 33844  004ABC  0E07               	movlw	(high __ramtop+-1)
 33845  004ABE  64F7               	cpfsgt	tblptrh,c
 33846  004AC0  D003               	bra	i2u575_47
 33847  004AC2  0008               	tblrd		*
 33848  004AC4  50F5               	movf	tablat,w,c
 33849  004AC6  D005               	bra	i2u575_40
 33850  004AC8                     i2u575_47:
 33851  004AC8  CFF6 FFE9          	movff	tblptrl,fsr0l
 33852  004ACC  CFF7 FFEA          	movff	tblptrh,fsr0h
 33853  004AD0  50EF               	movf	indf0,w,c
 33854  004AD2                     i2u575_40:
 33855  004AD2  6EDF               	movwf	indf2,c
 33856  004AD4  4A36               	infsnz	_inPipes,f,c	;volatile
 33857  004AD6  2A37               	incf	_inPipes+1,f,c	;volatile
 33858  004AD8  0101               	movlb	1	; () banked
 33859  004ADA  4B54               	infsnz	_pDst& (0+255),f,b
 33860  004ADC  2B55               	incf	(_pDst+1)& (0+255),f,b
 33861                           
 33862                           ; BSR set to: 1
 33863                           ;usb_device.c: 1488: byteToSend--;
 33864  004ADE  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 33865  004AE0  D000               	goto	i2l7821
 33866  004AE2                     i2l7821:
 33867                           
 33868                           ; BSR set to: 1
 33869  004AE2  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 33870  004AE4  A4D8               	btfss	status,2,c
 33871  004AE6  D001               	goto	i2u576_41
 33872  004AE8  D001               	goto	i2u576_40
 33873  004AEA                     i2u576_41:
 33874  004AEA  D7DF               	goto	i2l7813
 33875  004AEC                     i2u576_40:
 33876  004AEC  D001               	goto	i2l1823
 33877                           
 33878                           ; BSR set to: 1
 33879  004AEE  D000               	goto	i2l1823
 33880  004AF0                     i2l1823:
 33881                           
 33882                           ; BSR set to: 1
 33883  004AF0  0012               	return		;funcret
 33884  004AF2                     __end_of_USBCtrlTrfTxService:
 33885                           	opt stack 0
 33886                           tosu	equ	0xFFF
 33887                           tosh	equ	0xFFE
 33888                           tosl	equ	0xFFD
 33889                           pclatu	equ	0xFFB
 33890                           pclath	equ	0xFFA
 33891                           tblptru	equ	0xFF8
 33892                           tblptrh	equ	0xFF7
 33893                           tblptrl	equ	0xFF6
 33894                           tablat	equ	0xFF5
 33895                           prodh	equ	0xFF4
 33896                           prodl	equ	0xFF3
 33897                           intcon	equ	0xFF2
 33898                           intcon3	equ	0xFF0
 33899                           indf0	equ	0xFEF
 33900                           postinc0	equ	0xFEE
 33901                           fsr0h	equ	0xFEA
 33902                           fsr0l	equ	0xFE9
 33903                           wreg	equ	0xFE8
 33904                           indf1	equ	0xFE7
 33905                           postdec1	equ	0xFE5
 33906                           fsr1h	equ	0xFE2
 33907                           fsr1l	equ	0xFE1
 33908                           indf2	equ	0xFDF
 33909                           postinc2	equ	0xFDE
 33910                           postdec2	equ	0xFDD
 33911                           plusw2	equ	0xFDB
 33912                           fsr2h	equ	0xFDA
 33913                           fsr2l	equ	0xFD9
 33914                           status	equ	0xFD8
 33915                           
 33916 ;; *************** function _USART_mySetLineCodingHandler *****************
 33917 ;; Defined at:
 33918 ;;		line 273 in file "../Includes/Board/USBapp.c"
 33919 ;; Parameters:    Size  Location     Type
 33920 ;;		None
 33921 ;; Auto vars:     Size  Location     Type
 33922 ;;  dwBaud          4   13[COMRAM] unsigned long 
 33923 ;; Return value:  Size  Location     Type
 33924 ;;                  1    wreg      void 
 33925 ;; Registers used:
 33926 ;;		wreg, status,2, status,0, cstack
 33927 ;; Tracked objects:
 33928 ;;		On entry : 0/0
 33929 ;;		On exit  : 0/0
 33930 ;;		Unchanged: 0/0
 33931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33932 ;;      Params:         0       0       0       0       0       0       0       0       0
 33933 ;;      Locals:         4       0       0       0       0       0       0       0       0
 33934 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33935 ;;      Totals:         4       0       0       0       0       0       0       0       0
 33936 ;;Total ram usage:        4 bytes
 33937 ;; Hardware stack levels used:    1
 33938 ;; Hardware stack levels required when called:    1
 33939 ;; This function calls:
 33940 ;;		___lldiv
 33941 ;;		i2_EUSART_Initialize
 33942 ;; This function is called by:
 33943 ;;		_USBCheckCDCRequest
 33944 ;;		_USBCtrlTrfRxService
 33945 ;;		_USBCtrlTrfInHandler
 33946 ;; This function uses a non-reentrant model
 33947 ;;
 33948                           
 33949                           	psect	text132
 33950  006936                     __ptext132:
 33951                           	opt stack 0
 33952  006936                     _USART_mySetLineCodingHandler:
 33953                           	opt stack 15
 33954                           
 33955                           ;USBapp.c: 276: {line_coding.dwDTERate=cdc_notice.GetLineCoding.dwDTERate;};
 33956                           
 33957                           ; BSR set to: 1
 33958                           ;incstack = 0
 33959  006936  C1CD  F1DF         	movff	_cdc_notice,_line_coding
 33960  00693A  C1CE  F1E0         	movff	_cdc_notice+1,_line_coding+1
 33961  00693E  C1CF  F1E1         	movff	_cdc_notice+2,_line_coding+2
 33962  006942  C1D0  F1E2         	movff	_cdc_notice+3,_line_coding+3
 33963                           
 33964                           ;USBapp.c: 278: uint32_t dwBaud;
 33965                           ;USBapp.c: 279: dwBaud = ((48000000/4) / line_coding.dwDTERate) - 1;
 33966  006946  0E00               	movlw	0
 33967  006948  6E01               	movwf	___lldiv@dividend,c
 33968  00694A  0E1B               	movlw	27
 33969  00694C  6E02               	movwf	___lldiv@dividend+1,c
 33970  00694E  0EB7               	movlw	183
 33971  006950  6E03               	movwf	___lldiv@dividend+2,c
 33972  006952  0E00               	movlw	0
 33973  006954  6E04               	movwf	___lldiv@dividend+3,c
 33974  006956  C1DF  F005         	movff	_line_coding,___lldiv@divisor
 33975  00695A  C1E0  F006         	movff	_line_coding+1,___lldiv@divisor+1
 33976  00695E  C1E1  F007         	movff	_line_coding+2,___lldiv@divisor+2
 33977  006962  C1E2  F008         	movff	_line_coding+3,___lldiv@divisor+3
 33978  006966  ECAF  F02F         	call	___lldiv	;wreg free
 33979  00696A  0EFF               	movlw	255
 33980  00696C  2401               	addwf	?___lldiv,w,c
 33981  00696E  6E0E               	movwf	USART_mySetLineCodingHandler@dwBaud,c
 33982  006970  0EFF               	movlw	255
 33983  006972  2002               	addwfc	?___lldiv+1,w,c
 33984  006974  6E0F               	movwf	USART_mySetLineCodingHandler@dwBaud+1,c
 33985  006976  0EFF               	movlw	255
 33986  006978  2003               	addwfc	?___lldiv+2,w,c
 33987  00697A  6E10               	movwf	USART_mySetLineCodingHandler@dwBaud+2,c
 33988  00697C  0EFF               	movlw	255
 33989  00697E  2004               	addwfc	?___lldiv+3,w,c
 33990  006980  6E11               	movwf	USART_mySetLineCodingHandler@dwBaud+3,c
 33991                           
 33992                           ;USBapp.c: 280: SPBRG = (uint8_t) dwBaud;
 33993  006982  C00E  FFAF         	movff	USART_mySetLineCodingHandler@dwBaud,4015	;volatile
 33994                           
 33995                           ;USBapp.c: 281: SPBRGH = (uint8_t)((uint16_t) (dwBaud >> 8));
 33996  006986  C00F  FFB0         	movff	USART_mySetLineCodingHandler@dwBaud+1,4016	;volatile
 33997                           
 33998                           ;USBapp.c: 283: EUSART_Initialize();
 33999  00698A  ECEF  F036         	call	i2_EUSART_Initialize	;wreg free
 34000  00698E  0012               	return		;funcret
 34001  006990                     __end_of_USART_mySetLineCodingHandler:
 34002                           	opt stack 0
 34003                           tosu	equ	0xFFF
 34004                           tosh	equ	0xFFE
 34005                           tosl	equ	0xFFD
 34006                           pclatu	equ	0xFFB
 34007                           pclath	equ	0xFFA
 34008                           tblptru	equ	0xFF8
 34009                           tblptrh	equ	0xFF7
 34010                           tblptrl	equ	0xFF6
 34011                           tablat	equ	0xFF5
 34012                           prodh	equ	0xFF4
 34013                           prodl	equ	0xFF3
 34014                           intcon	equ	0xFF2
 34015                           intcon3	equ	0xFF0
 34016                           indf0	equ	0xFEF
 34017                           postinc0	equ	0xFEE
 34018                           fsr0h	equ	0xFEA
 34019                           fsr0l	equ	0xFE9
 34020                           wreg	equ	0xFE8
 34021                           indf1	equ	0xFE7
 34022                           postdec1	equ	0xFE5
 34023                           fsr1h	equ	0xFE2
 34024                           fsr1l	equ	0xFE1
 34025                           indf2	equ	0xFDF
 34026                           postinc2	equ	0xFDE
 34027                           postdec2	equ	0xFDD
 34028                           plusw2	equ	0xFDB
 34029                           fsr2h	equ	0xFDA
 34030                           fsr2l	equ	0xFD9
 34031                           status	equ	0xFD8
 34032                           
 34033 ;; *************** function i2_EUSART_Initialize *****************
 34034 ;; Defined at:
 34035 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 34036 ;; Parameters:    Size  Location     Type
 34037 ;;		None
 34038 ;; Auto vars:     Size  Location     Type
 34039 ;;		None
 34040 ;; Return value:  Size  Location     Type
 34041 ;;                  1    wreg      void 
 34042 ;; Registers used:
 34043 ;;		wreg, status,2
 34044 ;; Tracked objects:
 34045 ;;		On entry : 0/0
 34046 ;;		On exit  : 0/0
 34047 ;;		Unchanged: 0/0
 34048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34049 ;;      Params:         0       0       0       0       0       0       0       0       0
 34050 ;;      Locals:         0       0       0       0       0       0       0       0       0
 34051 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34052 ;;      Totals:         0       0       0       0       0       0       0       0       0
 34053 ;;Total ram usage:        0 bytes
 34054 ;; Hardware stack levels used:    1
 34055 ;; This function calls:
 34056 ;;		Nothing
 34057 ;; This function is called by:
 34058 ;;		_USBapp_CdcEmulatorInitialize
 34059 ;;		_USART_mySetLineCodingHandler
 34060 ;; This function uses a non-reentrant model
 34061 ;;
 34062                           
 34063                           	psect	text133
 34064  006DDE                     __ptext133:
 34065                           	opt stack 0
 34066  006DDE                     i2_EUSART_Initialize:
 34067                           	opt stack 17
 34068                           
 34069                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 34070                           
 34071                           ;incstack = 0
 34072  006DDE  9A9D               	bcf	3997,5,c	;volatile
 34073                           
 34074                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 34075  006DE0  989D               	bcf	3997,4,c	;volatile
 34076                           
 34077                           ;eusart.c: 85: BAUDCON = 0x48;
 34078  006DE2  0E48               	movlw	72
 34079  006DE4  6EB8               	movwf	4024,c	;volatile
 34080                           
 34081                           ;eusart.c: 88: RCSTA = 0x90;
 34082  006DE6  0E90               	movlw	144
 34083  006DE8  6EAB               	movwf	4011,c	;volatile
 34084                           
 34085                           ;eusart.c: 91: TXSTA = 0x26;
 34086  006DEA  0E26               	movlw	38
 34087  006DEC  6EAC               	movwf	4012,c	;volatile
 34088                           
 34089                           ;eusart.c: 95: SPBRG = 0xD0;
 34090  006DEE  0ED0               	movlw	208
 34091  006DF0  6EAF               	movwf	4015,c	;volatile
 34092                           
 34093                           ;eusart.c: 100: SPBRGH = 0x00;
 34094  006DF2  0E00               	movlw	0
 34095  006DF4  6EB0               	movwf	4016,c	;volatile
 34096                           
 34097                           ;eusart.c: 103: eusartTxHead = 0;
 34098  006DF6  0E00               	movlw	0
 34099  006DF8  0100               	movlb	0	; () banked
 34100  006DFA  6FDB               	movwf	_eusartTxHead& (0+255),b
 34101                           
 34102                           ;eusart.c: 104: eusartTxTail = 0;
 34103  006DFC  0E00               	movlw	0
 34104  006DFE  0100               	movlb	0	; () banked
 34105  006E00  6FDA               	movwf	_eusartTxTail& (0+255),b
 34106                           
 34107                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 34108  006E02  0E40               	movlw	64
 34109  006E04  6E4F               	movwf	_eusartTxBufferRemaining,c	;volatile
 34110                           
 34111                           ;eusart.c: 107: eusartRxHead = 0;
 34112  006E06  0E00               	movlw	0
 34113  006E08  0100               	movlb	0	; () banked
 34114  006E0A  6FD9               	movwf	_eusartRxHead& (0+255),b
 34115                           
 34116                           ;eusart.c: 108: eusartRxTail = 0;
 34117  006E0C  0E00               	movlw	0
 34118  006E0E  0100               	movlb	0	; () banked
 34119  006E10  6FD8               	movwf	_eusartRxTail& (0+255),b
 34120                           
 34121                           ;eusart.c: 109: eusartRxCount = 0;
 34122  006E12  0E00               	movlw	0
 34123  006E14  6E57               	movwf	_eusartRxCount,c	;volatile
 34124                           
 34125                           ; BSR set to: 0
 34126                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 34127  006E16  8A9D               	bsf	3997,5,c	;volatile
 34128                           
 34129                           ; BSR set to: 0
 34130                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 34131  006E18  88AB               	bsf	4011,4,c	;volatile
 34132                           
 34133                           ; BSR set to: 0
 34134  006E1A  0012               	return		;funcret
 34135  006E1C                     __end_ofi2_EUSART_Initialize:
 34136                           	opt stack 0
 34137                           tosu	equ	0xFFF
 34138                           tosh	equ	0xFFE
 34139                           tosl	equ	0xFFD
 34140                           pclatu	equ	0xFFB
 34141                           pclath	equ	0xFFA
 34142                           tblptru	equ	0xFF8
 34143                           tblptrh	equ	0xFF7
 34144                           tblptrl	equ	0xFF6
 34145                           tablat	equ	0xFF5
 34146                           prodh	equ	0xFF4
 34147                           prodl	equ	0xFF3
 34148                           intcon	equ	0xFF2
 34149                           intcon3	equ	0xFF0
 34150                           indf0	equ	0xFEF
 34151                           postinc0	equ	0xFEE
 34152                           fsr0h	equ	0xFEA
 34153                           fsr0l	equ	0xFE9
 34154                           wreg	equ	0xFE8
 34155                           indf1	equ	0xFE7
 34156                           postdec1	equ	0xFE5
 34157                           fsr1h	equ	0xFE2
 34158                           fsr1l	equ	0xFE1
 34159                           indf2	equ	0xFDF
 34160                           postinc2	equ	0xFDE
 34161                           postdec2	equ	0xFDD
 34162                           plusw2	equ	0xFDB
 34163                           fsr2h	equ	0xFDA
 34164                           fsr2l	equ	0xFD9
 34165                           status	equ	0xFD8
 34166                           
 34167 ;; *************** function ___lldiv *****************
 34168 ;; Defined at:
 34169 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
 34170 ;; Parameters:    Size  Location     Type
 34171 ;;  dividend        4    0[COMRAM] unsigned long 
 34172 ;;  divisor         4    4[COMRAM] unsigned long 
 34173 ;; Auto vars:     Size  Location     Type
 34174 ;;  quotient        4    8[COMRAM] unsigned long 
 34175 ;;  counter         1   12[COMRAM] unsigned char 
 34176 ;; Return value:  Size  Location     Type
 34177 ;;                  4    0[COMRAM] unsigned long 
 34178 ;; Registers used:
 34179 ;;		wreg, status,2, status,0
 34180 ;; Tracked objects:
 34181 ;;		On entry : 0/0
 34182 ;;		On exit  : 0/0
 34183 ;;		Unchanged: 0/0
 34184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34185 ;;      Params:         8       0       0       0       0       0       0       0       0
 34186 ;;      Locals:         5       0       0       0       0       0       0       0       0
 34187 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34188 ;;      Totals:        13       0       0       0       0       0       0       0       0
 34189 ;;Total ram usage:       13 bytes
 34190 ;; Hardware stack levels used:    1
 34191 ;; This function calls:
 34192 ;;		Nothing
 34193 ;; This function is called by:
 34194 ;;		_USART_mySetLineCodingHandler
 34195 ;; This function uses a non-reentrant model
 34196 ;;
 34197                           
 34198                           	psect	text134
 34199  005F5E                     __ptext134:
 34200                           	opt stack 0
 34201  005F5E                     ___lldiv:
 34202                           	opt stack 15
 34203                           
 34204                           ; BSR set to: 0
 34205                           ;incstack = 0
 34206  005F5E  0E00               	movlw	0
 34207  005F60  6E09               	movwf	___lldiv@quotient,c
 34208  005F62  0E00               	movlw	0
 34209  005F64  6E0A               	movwf	___lldiv@quotient+1,c
 34210  005F66  0E00               	movlw	0
 34211  005F68  6E0B               	movwf	___lldiv@quotient+2,c
 34212  005F6A  0E00               	movlw	0
 34213  005F6C  6E0C               	movwf	___lldiv@quotient+3,c
 34214  005F6E  5005               	movf	___lldiv@divisor,w,c
 34215  005F70  1006               	iorwf	___lldiv@divisor+1,w,c
 34216  005F72  1007               	iorwf	___lldiv@divisor+2,w,c
 34217  005F74  1008               	iorwf	___lldiv@divisor+3,w,c
 34218  005F76  B4D8               	btfsc	status,2,c
 34219  005F78  D001               	goto	i2u577_41
 34220  005F7A  D001               	goto	i2u577_40
 34221  005F7C                     i2u577_41:
 34222  005F7C  D033               	goto	i2l2516
 34223  005F7E                     i2u577_40:
 34224  005F7E  0E01               	movlw	1
 34225  005F80  6E0D               	movwf	___lldiv@counter,c
 34226  005F82  D007               	goto	i2l7831
 34227  005F84                     i2l7829:
 34228  005F84  90D8               	bcf	status,0,c
 34229  005F86  3605               	rlcf	___lldiv@divisor,f,c
 34230  005F88  3606               	rlcf	___lldiv@divisor+1,f,c
 34231  005F8A  3607               	rlcf	___lldiv@divisor+2,f,c
 34232  005F8C  3608               	rlcf	___lldiv@divisor+3,f,c
 34233  005F8E  2A0D               	incf	___lldiv@counter,f,c
 34234  005F90  D000               	goto	i2l7831
 34235  005F92                     i2l7831:
 34236  005F92  AE08               	btfss	___lldiv@divisor+3,7,c
 34237  005F94  D001               	goto	i2u578_41
 34238  005F96  D001               	goto	i2u578_40
 34239  005F98                     i2u578_41:
 34240  005F98  D7F5               	goto	i2l7829
 34241  005F9A                     i2u578_40:
 34242  005F9A  D001               	goto	i2l7833
 34243  005F9C  D000               	goto	i2l7833
 34244  005F9E                     i2l7833:
 34245  005F9E  90D8               	bcf	status,0,c
 34246  005FA0  3609               	rlcf	___lldiv@quotient,f,c
 34247  005FA2  360A               	rlcf	___lldiv@quotient+1,f,c
 34248  005FA4  360B               	rlcf	___lldiv@quotient+2,f,c
 34249  005FA6  360C               	rlcf	___lldiv@quotient+3,f,c
 34250  005FA8  5005               	movf	___lldiv@divisor,w,c
 34251  005FAA  5C01               	subwf	___lldiv@dividend,w,c
 34252  005FAC  5006               	movf	___lldiv@divisor+1,w,c
 34253  005FAE  5802               	subwfb	___lldiv@dividend+1,w,c
 34254  005FB0  5007               	movf	___lldiv@divisor+2,w,c
 34255  005FB2  5803               	subwfb	___lldiv@dividend+2,w,c
 34256  005FB4  5008               	movf	___lldiv@divisor+3,w,c
 34257  005FB6  5804               	subwfb	___lldiv@dividend+3,w,c
 34258  005FB8  A0D8               	btfss	status,0,c
 34259  005FBA  D001               	goto	i2u579_41
 34260  005FBC  D001               	goto	i2u579_40
 34261  005FBE                     i2u579_41:
 34262  005FBE  D00A               	goto	i2l7841
 34263  005FC0                     i2u579_40:
 34264  005FC0  5005               	movf	___lldiv@divisor,w,c
 34265  005FC2  5E01               	subwf	___lldiv@dividend,f,c
 34266  005FC4  5006               	movf	___lldiv@divisor+1,w,c
 34267  005FC6  5A02               	subwfb	___lldiv@dividend+1,f,c
 34268  005FC8  5007               	movf	___lldiv@divisor+2,w,c
 34269  005FCA  5A03               	subwfb	___lldiv@dividend+2,f,c
 34270  005FCC  5008               	movf	___lldiv@divisor+3,w,c
 34271  005FCE  5A04               	subwfb	___lldiv@dividend+3,f,c
 34272  005FD0  8009               	bsf	___lldiv@quotient,0,c
 34273  005FD2  D000               	goto	i2l7841
 34274  005FD4                     i2l7841:
 34275  005FD4  90D8               	bcf	status,0,c
 34276  005FD6  3208               	rrcf	___lldiv@divisor+3,f,c
 34277  005FD8  3207               	rrcf	___lldiv@divisor+2,f,c
 34278  005FDA  3206               	rrcf	___lldiv@divisor+1,f,c
 34279  005FDC  3205               	rrcf	___lldiv@divisor,f,c
 34280  005FDE  2E0D               	decfsz	___lldiv@counter,f,c
 34281  005FE0  D7DE               	goto	i2l7833
 34282  005FE2  D000               	goto	i2l2516
 34283  005FE4                     i2l2516:
 34284  005FE4  C009  F001         	movff	___lldiv@quotient,?___lldiv
 34285  005FE8  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 34286  005FEC  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 34287  005FF0  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 34288  005FF4  0012               	return		;funcret
 34289  005FF6                     __end_of___lldiv:
 34290                           	opt stack 0
 34291                           tosu	equ	0xFFF
 34292                           tosh	equ	0xFFE
 34293                           tosl	equ	0xFFD
 34294                           pclatu	equ	0xFFB
 34295                           pclath	equ	0xFFA
 34296                           tblptru	equ	0xFF8
 34297                           tblptrh	equ	0xFF7
 34298                           tblptrl	equ	0xFF6
 34299                           tablat	equ	0xFF5
 34300                           prodh	equ	0xFF4
 34301                           prodl	equ	0xFF3
 34302                           intcon	equ	0xFF2
 34303                           intcon3	equ	0xFF0
 34304                           indf0	equ	0xFEF
 34305                           postinc0	equ	0xFEE
 34306                           fsr0h	equ	0xFEA
 34307                           fsr0l	equ	0xFE9
 34308                           wreg	equ	0xFE8
 34309                           indf1	equ	0xFE7
 34310                           postdec1	equ	0xFE5
 34311                           fsr1h	equ	0xFE2
 34312                           fsr1l	equ	0xFE1
 34313                           indf2	equ	0xFDF
 34314                           postinc2	equ	0xFDE
 34315                           postdec2	equ	0xFDD
 34316                           plusw2	equ	0xFDB
 34317                           fsr2h	equ	0xFDA
 34318                           fsr2l	equ	0xFD9
 34319                           status	equ	0xFD8
 34320                           
 34321 ;; *************** function _TMRapp_Tick *****************
 34322 ;; Defined at:
 34323 ;;		line 45 in file "../Includes/Drivers/TMRapp.c"
 34324 ;; Parameters:    Size  Location     Type
 34325 ;;		None
 34326 ;; Auto vars:     Size  Location     Type
 34327 ;;		None
 34328 ;; Return value:  Size  Location     Type
 34329 ;;                  1    wreg      void 
 34330 ;; Registers used:
 34331 ;;		None
 34332 ;; Tracked objects:
 34333 ;;		On entry : 0/0
 34334 ;;		On exit  : 0/0
 34335 ;;		Unchanged: 0/0
 34336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34337 ;;      Params:         0       0       0       0       0       0       0       0       0
 34338 ;;      Locals:         0       0       0       0       0       0       0       0       0
 34339 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34340 ;;      Totals:         0       0       0       0       0       0       0       0       0
 34341 ;;Total ram usage:        0 bytes
 34342 ;; Hardware stack levels used:    1
 34343 ;; This function calls:
 34344 ;;		Nothing
 34345 ;; This function is called by:
 34346 ;;		_INTERRUPT_InterruptManager
 34347 ;; This function uses a non-reentrant model
 34348 ;;
 34349                           
 34350                           	psect	text135
 34351  0072FA                     __ptext135:
 34352                           	opt stack 0
 34353  0072FA                     _TMRapp_Tick:
 34354                           	opt stack 20
 34355                           
 34356                           ;TMRapp.c: 48: appTimer.mSecTick = 1;
 34357                           
 34358                           ;incstack = 0
 34359  0072FA  0100               	movlb	0	; () banked
 34360  0072FC  81F2               	bsf	_appTimer& (0+255),0,b
 34361                           
 34362                           ; BSR set to: 0
 34363  0072FE  0012               	return		;funcret
 34364  007300                     __end_of_TMRapp_Tick:
 34365                           	opt stack 0
 34366                           tosu	equ	0xFFF
 34367                           tosh	equ	0xFFE
 34368                           tosl	equ	0xFFD
 34369                           pclatu	equ	0xFFB
 34370                           pclath	equ	0xFFA
 34371                           tblptru	equ	0xFF8
 34372                           tblptrh	equ	0xFF7
 34373                           tblptrl	equ	0xFF6
 34374                           tablat	equ	0xFF5
 34375                           prodh	equ	0xFF4
 34376                           prodl	equ	0xFF3
 34377                           intcon	equ	0xFF2
 34378                           intcon3	equ	0xFF0
 34379                           indf0	equ	0xFEF
 34380                           postinc0	equ	0xFEE
 34381                           fsr0h	equ	0xFEA
 34382                           fsr0l	equ	0xFE9
 34383                           wreg	equ	0xFE8
 34384                           indf1	equ	0xFE7
 34385                           postdec1	equ	0xFE5
 34386                           fsr1h	equ	0xFE2
 34387                           fsr1l	equ	0xFE1
 34388                           indf2	equ	0xFDF
 34389                           postinc2	equ	0xFDE
 34390                           postdec2	equ	0xFDD
 34391                           plusw2	equ	0xFDB
 34392                           fsr2h	equ	0xFDA
 34393                           fsr2l	equ	0xFD9
 34394                           status	equ	0xFD8
 34395                           
 34396 ;; *************** function _TMR3_ISR *****************
 34397 ;; Defined at:
 34398 ;;		line 161 in file "../Includes/MccGenerated/tmr3.c"
 34399 ;; Parameters:    Size  Location     Type
 34400 ;;		None
 34401 ;; Auto vars:     Size  Location     Type
 34402 ;;		None
 34403 ;; Return value:  Size  Location     Type
 34404 ;;                  1    wreg      void 
 34405 ;; Registers used:
 34406 ;;		wreg, status,2
 34407 ;; Tracked objects:
 34408 ;;		On entry : 0/0
 34409 ;;		On exit  : 0/0
 34410 ;;		Unchanged: 0/0
 34411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34412 ;;      Params:         0       0       0       0       0       0       0       0       0
 34413 ;;      Locals:         0       0       0       0       0       0       0       0       0
 34414 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34415 ;;      Totals:         0       0       0       0       0       0       0       0       0
 34416 ;;Total ram usage:        0 bytes
 34417 ;; Hardware stack levels used:    1
 34418 ;; This function calls:
 34419 ;;		Nothing
 34420 ;; This function is called by:
 34421 ;;		_INTERRUPT_InterruptManager
 34422 ;; This function uses a non-reentrant model
 34423 ;;
 34424                           
 34425                           	psect	text136
 34426  00708C                     __ptext136:
 34427                           	opt stack 0
 34428  00708C                     _TMR3_ISR:
 34429                           	opt stack 20
 34430                           
 34431                           ;tmr3.c: 164: PIR2bits.TMR3IF = 0;
 34432                           
 34433                           ; BSR set to: 0
 34434                           ;incstack = 0
 34435  00708C  92A1               	bcf	4001,1,c	;volatile
 34436                           
 34437                           ;tmr3.c: 167: if(LATEbits.LATE2 == 1)
 34438  00708E  A48D               	btfss	3981,2,c	;volatile
 34439  007090  D001               	goto	i2u461_41
 34440  007092  D001               	goto	i2u461_40
 34441  007094                     i2u461_41:
 34442  007094  D006               	goto	i2l1578
 34443  007096                     i2u461_40:
 34444                           
 34445                           ;tmr3.c: 168: {
 34446                           ;tmr3.c: 169: LATEbits.LATE2 = 0;
 34447  007096  948D               	bcf	3981,2,c	;volatile
 34448                           
 34449                           ;tmr3.c: 170: TMR3H = 0xD5;
 34450  007098  0ED5               	movlw	213
 34451  00709A  6EB3               	movwf	4019,c	;volatile
 34452                           
 34453                           ;tmr3.c: 171: TMR3L = 0xD0;
 34454  00709C  0ED0               	movlw	208
 34455  00709E  6EB2               	movwf	4018,c	;volatile
 34456                           
 34457                           ;tmr3.c: 172: } else {
 34458  0070A0  D006               	goto	i2l1580
 34459  0070A2                     i2l1578:
 34460                           
 34461                           ;tmr3.c: 173: LATEbits.LATE2 = 1;
 34462  0070A2  848D               	bsf	3981,2,c	;volatile
 34463                           
 34464                           ;tmr3.c: 174: TMR3H = 0xFB;
 34465  0070A4  0EFB               	movlw	251
 34466  0070A6  6EB3               	movwf	4019,c	;volatile
 34467                           
 34468                           ;tmr3.c: 175: TMR3L = 0x50;
 34469  0070A8  0E50               	movlw	80
 34470  0070AA  6EB2               	movwf	4018,c	;volatile
 34471  0070AC  D000               	goto	i2l1580
 34472  0070AE                     i2l1580:
 34473  0070AE  0012               	return		;funcret
 34474  0070B0                     __end_of_TMR3_ISR:
 34475                           	opt stack 0
 34476                           tosu	equ	0xFFF
 34477                           tosh	equ	0xFFE
 34478                           tosl	equ	0xFFD
 34479                           pclatu	equ	0xFFB
 34480                           pclath	equ	0xFFA
 34481                           tblptru	equ	0xFF8
 34482                           tblptrh	equ	0xFF7
 34483                           tblptrl	equ	0xFF6
 34484                           tablat	equ	0xFF5
 34485                           prodh	equ	0xFF4
 34486                           prodl	equ	0xFF3
 34487                           intcon	equ	0xFF2
 34488                           intcon3	equ	0xFF0
 34489                           indf0	equ	0xFEF
 34490                           postinc0	equ	0xFEE
 34491                           fsr0h	equ	0xFEA
 34492                           fsr0l	equ	0xFE9
 34493                           wreg	equ	0xFE8
 34494                           indf1	equ	0xFE7
 34495                           postdec1	equ	0xFE5
 34496                           fsr1h	equ	0xFE2
 34497                           fsr1l	equ	0xFE1
 34498                           indf2	equ	0xFDF
 34499                           postinc2	equ	0xFDE
 34500                           postdec2	equ	0xFDD
 34501                           plusw2	equ	0xFDB
 34502                           fsr2h	equ	0xFDA
 34503                           fsr2l	equ	0xFD9
 34504                           status	equ	0xFD8
 34505                           
 34506 ;; *************** function _TMR1_ISR *****************
 34507 ;; Defined at:
 34508 ;;		line 152 in file "../Includes/MccGenerated/tmr1.c"
 34509 ;; Parameters:    Size  Location     Type
 34510 ;;		None
 34511 ;; Auto vars:     Size  Location     Type
 34512 ;;		None
 34513 ;; Return value:  Size  Location     Type
 34514 ;;                  1    wreg      void 
 34515 ;; Registers used:
 34516 ;;		wreg, status,2
 34517 ;; Tracked objects:
 34518 ;;		On entry : 0/0
 34519 ;;		On exit  : 0/0
 34520 ;;		Unchanged: 0/0
 34521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34522 ;;      Params:         0       0       0       0       0       0       0       0       0
 34523 ;;      Locals:         0       0       0       0       0       0       0       0       0
 34524 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34525 ;;      Totals:         0       0       0       0       0       0       0       0       0
 34526 ;;Total ram usage:        0 bytes
 34527 ;; Hardware stack levels used:    1
 34528 ;; This function calls:
 34529 ;;		Nothing
 34530 ;; This function is called by:
 34531 ;;		_INTERRUPT_InterruptManager
 34532 ;; This function uses a non-reentrant model
 34533 ;;
 34534                           
 34535                           	psect	text137
 34536  007292                     __ptext137:
 34537                           	opt stack 0
 34538  007292                     _TMR1_ISR:
 34539                           	opt stack 20
 34540                           
 34541                           ;tmr1.c: 156: PIR1bits.TMR1IF = 0;
 34542                           
 34543                           ;incstack = 0
 34544  007292  909E               	bcf	3998,0,c	;volatile
 34545                           
 34546                           ;tmr1.c: 158: TMR1H = (timer1ReloadVal >> 8);
 34547  007294  5047               	movf	_timer1ReloadVal+1,w,c	;volatile
 34548  007296  6ECF               	movwf	4047,c	;volatile
 34549                           
 34550                           ;tmr1.c: 159: TMR1L = timer1ReloadVal;
 34551  007298  C046  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 34552  00729C  0012               	return		;funcret
 34553  00729E                     __end_of_TMR1_ISR:
 34554                           	opt stack 0
 34555                           tosu	equ	0xFFF
 34556                           tosh	equ	0xFFE
 34557                           tosl	equ	0xFFD
 34558                           pclatu	equ	0xFFB
 34559                           pclath	equ	0xFFA
 34560                           tblptru	equ	0xFF8
 34561                           tblptrh	equ	0xFF7
 34562                           tblptrl	equ	0xFF6
 34563                           tablat	equ	0xFF5
 34564                           prodh	equ	0xFF4
 34565                           prodl	equ	0xFF3
 34566                           intcon	equ	0xFF2
 34567                           intcon3	equ	0xFF0
 34568                           indf0	equ	0xFEF
 34569                           postinc0	equ	0xFEE
 34570                           fsr0h	equ	0xFEA
 34571                           fsr0l	equ	0xFE9
 34572                           wreg	equ	0xFE8
 34573                           indf1	equ	0xFE7
 34574                           postdec1	equ	0xFE5
 34575                           fsr1h	equ	0xFE2
 34576                           fsr1l	equ	0xFE1
 34577                           indf2	equ	0xFDF
 34578                           postinc2	equ	0xFDE
 34579                           postdec2	equ	0xFDD
 34580                           plusw2	equ	0xFDB
 34581                           fsr2h	equ	0xFDA
 34582                           fsr2l	equ	0xFD9
 34583                           status	equ	0xFD8
 34584                           
 34585 ;; *************** function _EUSART_Transmit_ISR *****************
 34586 ;; Defined at:
 34587 ;;		line 162 in file "../Includes/MccGenerated/eusart.c"
 34588 ;; Parameters:    Size  Location     Type
 34589 ;;		None
 34590 ;; Auto vars:     Size  Location     Type
 34591 ;;		None
 34592 ;; Return value:  Size  Location     Type
 34593 ;;                  1    wreg      void 
 34594 ;; Registers used:
 34595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34596 ;; Tracked objects:
 34597 ;;		On entry : 0/0
 34598 ;;		On exit  : 0/0
 34599 ;;		Unchanged: 0/0
 34600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34601 ;;      Params:         0       0       0       0       0       0       0       0       0
 34602 ;;      Locals:         0       0       0       0       0       0       0       0       0
 34603 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34604 ;;      Totals:         0       0       0       0       0       0       0       0       0
 34605 ;;Total ram usage:        0 bytes
 34606 ;; Hardware stack levels used:    1
 34607 ;; This function calls:
 34608 ;;		Nothing
 34609 ;; This function is called by:
 34610 ;;		_INTERRUPT_InterruptManager
 34611 ;; This function uses a non-reentrant model
 34612 ;;
 34613                           
 34614                           	psect	text138
 34615  006C9E                     __ptext138:
 34616                           	opt stack 0
 34617  006C9E                     _EUSART_Transmit_ISR:
 34618                           	opt stack 20
 34619                           
 34620                           ;eusart.c: 166: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 34621                           
 34622                           ;incstack = 0
 34623  006C9E  0E40               	movlw	64
 34624  006CA0  604F               	cpfslt	_eusartTxBufferRemaining,c	;volatile
 34625  006CA2  D001               	goto	i2u1004_41
 34626  006CA4  D001               	goto	i2u1004_40
 34627  006CA6                     i2u1004_41:
 34628  006CA6  D019               	goto	i2l1142
 34629  006CA8                     i2u1004_40:
 34630                           
 34631                           ;eusart.c: 167: {
 34632                           ;eusart.c: 168: TXREG = eusartTxBuffer[eusartTxTail++];
 34633  006CA8  0100               	movlb	0	; () banked
 34634  006CAA  51DA               	movf	_eusartTxTail& (0+255),w,b
 34635  006CAC  0D01               	mullw	1
 34636  006CAE  0E40               	movlw	low _eusartTxBuffer
 34637  006CB0  24F3               	addwf	prodl,w,c
 34638  006CB2  6ED9               	movwf	fsr2l,c
 34639  006CB4  0E02               	movlw	high _eusartTxBuffer
 34640  006CB6  20F4               	addwfc	prodh,w,c
 34641  006CB8  6EDA               	movwf	fsr2h,c
 34642  006CBA  50DF               	movf	indf2,w,c
 34643  006CBC  6EAD               	movwf	4013,c	;volatile
 34644                           
 34645                           ; BSR set to: 0
 34646  006CBE  0100               	movlb	0	; () banked
 34647  006CC0  2BDA               	incf	_eusartTxTail& (0+255),f,b
 34648                           
 34649                           ; BSR set to: 0
 34650                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 34651  006CC2  0E3F               	movlw	63
 34652  006CC4  0100               	movlb	0	; () banked
 34653  006CC6  65DA               	cpfsgt	_eusartTxTail& (0+255),b
 34654  006CC8  D001               	goto	i2u1005_41
 34655  006CCA  D001               	goto	i2u1005_40
 34656  006CCC                     i2u1005_41:
 34657  006CCC  D004               	goto	i2l11299
 34658  006CCE                     i2u1005_40:
 34659                           
 34660                           ; BSR set to: 0
 34661                           ;eusart.c: 170: {
 34662                           ;eusart.c: 171: eusartTxTail = 0;
 34663  006CCE  0E00               	movlw	0
 34664  006CD0  0100               	movlb	0	; () banked
 34665  006CD2  6FDA               	movwf	_eusartTxTail& (0+255),b
 34666  006CD4  D000               	goto	i2l11299
 34667  006CD6                     i2l11299:
 34668                           
 34669                           ; BSR set to: 0
 34670                           ;eusart.c: 172: }
 34671                           ;eusart.c: 173: eusartTxBufferRemaining++;
 34672  006CD6  2A4F               	incf	_eusartTxBufferRemaining,f,c	;volatile
 34673                           
 34674                           ;eusart.c: 174: }
 34675  006CD8  D002               	goto	i2l1145
 34676  006CDA                     i2l1142:
 34677                           
 34678                           ;eusart.c: 175: else
 34679                           ;eusart.c: 176: {
 34680                           ;eusart.c: 177: PIE1bits.TXIE = 0;
 34681  006CDA  989D               	bcf	3997,4,c	;volatile
 34682  006CDC  D000               	goto	i2l1145
 34683  006CDE                     i2l1145:
 34684  006CDE  0012               	return		;funcret
 34685  006CE0                     __end_of_EUSART_Transmit_ISR:
 34686                           	opt stack 0
 34687                           tosu	equ	0xFFF
 34688                           tosh	equ	0xFFE
 34689                           tosl	equ	0xFFD
 34690                           pclatu	equ	0xFFB
 34691                           pclath	equ	0xFFA
 34692                           tblptru	equ	0xFF8
 34693                           tblptrh	equ	0xFF7
 34694                           tblptrl	equ	0xFF6
 34695                           tablat	equ	0xFF5
 34696                           prodh	equ	0xFF4
 34697                           prodl	equ	0xFF3
 34698                           intcon	equ	0xFF2
 34699                           intcon3	equ	0xFF0
 34700                           indf0	equ	0xFEF
 34701                           postinc0	equ	0xFEE
 34702                           fsr0h	equ	0xFEA
 34703                           fsr0l	equ	0xFE9
 34704                           wreg	equ	0xFE8
 34705                           indf1	equ	0xFE7
 34706                           postdec1	equ	0xFE5
 34707                           fsr1h	equ	0xFE2
 34708                           fsr1l	equ	0xFE1
 34709                           indf2	equ	0xFDF
 34710                           postinc2	equ	0xFDE
 34711                           postdec2	equ	0xFDD
 34712                           plusw2	equ	0xFDB
 34713                           fsr2h	equ	0xFDA
 34714                           fsr2l	equ	0xFD9
 34715                           status	equ	0xFD8
 34716                           
 34717 ;; *************** function _EUSART_Receive_ISR *****************
 34718 ;; Defined at:
 34719 ;;		line 181 in file "../Includes/MccGenerated/eusart.c"
 34720 ;; Parameters:    Size  Location     Type
 34721 ;;		None
 34722 ;; Auto vars:     Size  Location     Type
 34723 ;;		None
 34724 ;; Return value:  Size  Location     Type
 34725 ;;                  1    wreg      void 
 34726 ;; Registers used:
 34727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34728 ;; Tracked objects:
 34729 ;;		On entry : 0/0
 34730 ;;		On exit  : 0/0
 34731 ;;		Unchanged: 0/0
 34732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34733 ;;      Params:         0       0       0       0       0       0       0       0       0
 34734 ;;      Locals:         0       0       0       0       0       0       0       0       0
 34735 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34736 ;;      Totals:         0       0       0       0       0       0       0       0       0
 34737 ;;Total ram usage:        0 bytes
 34738 ;; Hardware stack levels used:    1
 34739 ;; This function calls:
 34740 ;;		Nothing
 34741 ;; This function is called by:
 34742 ;;		_INTERRUPT_InterruptManager
 34743 ;; This function uses a non-reentrant model
 34744 ;;
 34745                           
 34746                           	psect	text139
 34747  006CE0                     __ptext139:
 34748                           	opt stack 0
 34749  006CE0                     _EUSART_Receive_ISR:
 34750                           	opt stack 20
 34751                           
 34752                           ;eusart.c: 183: if(1 == RCSTAbits.OERR)
 34753                           
 34754                           ;incstack = 0
 34755  006CE0  A2AB               	btfss	4011,1,c	;volatile
 34756  006CE2  D001               	goto	i2u1006_41
 34757  006CE4  D001               	goto	i2u1006_40
 34758  006CE6                     i2u1006_41:
 34759  006CE6  D003               	goto	i2l11305
 34760  006CE8                     i2u1006_40:
 34761                           
 34762                           ;eusart.c: 184: {
 34763                           ;eusart.c: 187: RCSTAbits.CREN = 0;
 34764  006CE8  98AB               	bcf	4011,4,c	;volatile
 34765                           
 34766                           ;eusart.c: 188: RCSTAbits.CREN = 1;
 34767  006CEA  88AB               	bsf	4011,4,c	;volatile
 34768                           
 34769                           ;eusart.c: 189: }
 34770  006CEC  D019               	goto	i2l1151
 34771  006CEE                     i2l11305:
 34772                           
 34773                           ;eusart.c: 190: else
 34774                           ;eusart.c: 191: {
 34775                           ;eusart.c: 193: eusartRxBuffer[eusartRxHead++] = RCREG;
 34776  006CEE  0100               	movlb	0	; () banked
 34777  006CF0  51D9               	movf	_eusartRxHead& (0+255),w,b
 34778  006CF2  0D01               	mullw	1
 34779  006CF4  0E00               	movlw	low _eusartRxBuffer
 34780  006CF6  24F3               	addwf	prodl,w,c
 34781  006CF8  6ED9               	movwf	fsr2l,c
 34782  006CFA  0E02               	movlw	high _eusartRxBuffer
 34783  006CFC  20F4               	addwfc	prodh,w,c
 34784  006CFE  6EDA               	movwf	fsr2h,c
 34785  006D00  CFAE FFDF          	movff	4014,indf2	;volatile
 34786                           
 34787                           ; BSR set to: 0
 34788  006D04  0100               	movlb	0	; () banked
 34789  006D06  2BD9               	incf	_eusartRxHead& (0+255),f,b
 34790                           
 34791                           ; BSR set to: 0
 34792                           ;eusart.c: 194: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 34793  006D08  0E3F               	movlw	63
 34794  006D0A  0100               	movlb	0	; () banked
 34795  006D0C  65D9               	cpfsgt	_eusartRxHead& (0+255),b
 34796  006D0E  D001               	goto	i2u1007_41
 34797  006D10  D001               	goto	i2u1007_40
 34798  006D12                     i2u1007_41:
 34799  006D12  D004               	goto	i2l11313
 34800  006D14                     i2u1007_40:
 34801                           
 34802                           ; BSR set to: 0
 34803                           ;eusart.c: 195: {
 34804                           ;eusart.c: 196: eusartRxHead = 0;
 34805  006D14  0E00               	movlw	0
 34806  006D16  0100               	movlb	0	; () banked
 34807  006D18  6FD9               	movwf	_eusartRxHead& (0+255),b
 34808  006D1A  D000               	goto	i2l11313
 34809  006D1C                     i2l11313:
 34810                           
 34811                           ; BSR set to: 0
 34812                           ;eusart.c: 197: }
 34813                           ;eusart.c: 198: eusartRxCount++;
 34814  006D1C  2A57               	incf	_eusartRxCount,f,c	;volatile
 34815  006D1E  D000               	goto	i2l1151
 34816  006D20                     i2l1151:
 34817  006D20  0012               	return		;funcret
 34818  006D22                     __end_of_EUSART_Receive_ISR:
 34819                           	opt stack 0
 34820                           tosu	equ	0xFFF
 34821                           tosh	equ	0xFFE
 34822                           tosl	equ	0xFFD
 34823                           pclatu	equ	0xFFB
 34824                           pclath	equ	0xFFA
 34825                           tblptru	equ	0xFF8
 34826                           tblptrh	equ	0xFF7
 34827                           tblptrl	equ	0xFF6
 34828                           tablat	equ	0xFF5
 34829                           prodh	equ	0xFF4
 34830                           prodl	equ	0xFF3
 34831                           intcon	equ	0xFF2
 34832                           intcon3	equ	0xFF0
 34833                           indf0	equ	0xFEF
 34834                           postinc0	equ	0xFEE
 34835                           fsr0h	equ	0xFEA
 34836                           fsr0l	equ	0xFE9
 34837                           wreg	equ	0xFE8
 34838                           indf1	equ	0xFE7
 34839                           postdec1	equ	0xFE5
 34840                           fsr1h	equ	0xFE2
 34841                           fsr1l	equ	0xFE1
 34842                           indf2	equ	0xFDF
 34843                           postinc2	equ	0xFDE
 34844                           postdec2	equ	0xFDD
 34845                           plusw2	equ	0xFDB
 34846                           fsr2h	equ	0xFDA
 34847                           fsr2l	equ	0xFD9
 34848                           status	equ	0xFD8
 34849                           
 34850 ;; *************** function _CMP1_ISR *****************
 34851 ;; Defined at:
 34852 ;;		line 95 in file "../Includes/MccGenerated/cmp1.c"
 34853 ;; Parameters:    Size  Location     Type
 34854 ;;		None
 34855 ;; Auto vars:     Size  Location     Type
 34856 ;;		None
 34857 ;; Return value:  Size  Location     Type
 34858 ;;                  1    wreg      void 
 34859 ;; Registers used:
 34860 ;;		None
 34861 ;; Tracked objects:
 34862 ;;		On entry : 0/0
 34863 ;;		On exit  : 0/0
 34864 ;;		Unchanged: 0/0
 34865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34866 ;;      Params:         0       0       0       0       0       0       0       0       0
 34867 ;;      Locals:         0       0       0       0       0       0       0       0       0
 34868 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34869 ;;      Totals:         0       0       0       0       0       0       0       0       0
 34870 ;;Total ram usage:        0 bytes
 34871 ;; Hardware stack levels used:    1
 34872 ;; This function calls:
 34873 ;;		Nothing
 34874 ;; This function is called by:
 34875 ;;		_INTERRUPT_InterruptManager
 34876 ;; This function uses a non-reentrant model
 34877 ;;
 34878                           
 34879                           	psect	text140
 34880  00730C                     __ptext140:
 34881                           	opt stack 0
 34882  00730C                     _CMP1_ISR:
 34883                           	opt stack 20
 34884                           
 34885                           ;cmp1.c: 98: PIR2bits.C1IF = 0;
 34886                           
 34887                           ;incstack = 0
 34888  00730C  9CA1               	bcf	4001,6,c	;volatile
 34889  00730E  0012               	return		;funcret
 34890  007310                     __end_of_CMP1_ISR:
 34891                           	opt stack 0
 34892                           tosu	equ	0xFFF
 34893                           tosh	equ	0xFFE
 34894                           tosl	equ	0xFFD
 34895                           pclatu	equ	0xFFB
 34896                           pclath	equ	0xFFA
 34897                           tblptru	equ	0xFF8
 34898                           tblptrh	equ	0xFF7
 34899                           tblptrl	equ	0xFF6
 34900                           tablat	equ	0xFF5
 34901                           prodh	equ	0xFF4
 34902                           prodl	equ	0xFF3
 34903                           intcon	equ	0xFF2
 34904                           intcon3	equ	0xFF0
 34905                           indf0	equ	0xFEF
 34906                           postinc0	equ	0xFEE
 34907                           fsr0h	equ	0xFEA
 34908                           fsr0l	equ	0xFE9
 34909                           wreg	equ	0xFE8
 34910                           indf1	equ	0xFE7
 34911                           postdec1	equ	0xFE5
 34912                           fsr1h	equ	0xFE2
 34913                           fsr1l	equ	0xFE1
 34914                           indf2	equ	0xFDF
 34915                           postinc2	equ	0xFDE
 34916                           postdec2	equ	0xFDD
 34917                           plusw2	equ	0xFDB
 34918                           fsr2h	equ	0xFDA
 34919                           fsr2l	equ	0xFD9
 34920                           status	equ	0xFD8
 34921                           tosu	equ	0xFFF
 34922                           tosh	equ	0xFFE
 34923                           tosl	equ	0xFFD
 34924                           pclatu	equ	0xFFB
 34925                           pclath	equ	0xFFA
 34926                           tblptru	equ	0xFF8
 34927                           tblptrh	equ	0xFF7
 34928                           tblptrl	equ	0xFF6
 34929                           tablat	equ	0xFF5
 34930                           prodh	equ	0xFF4
 34931                           prodl	equ	0xFF3
 34932                           intcon	equ	0xFF2
 34933                           intcon3	equ	0xFF0
 34934                           indf0	equ	0xFEF
 34935                           postinc0	equ	0xFEE
 34936                           fsr0h	equ	0xFEA
 34937                           fsr0l	equ	0xFE9
 34938                           wreg	equ	0xFE8
 34939                           indf1	equ	0xFE7
 34940                           postdec1	equ	0xFE5
 34941                           fsr1h	equ	0xFE2
 34942                           fsr1l	equ	0xFE1
 34943                           indf2	equ	0xFDF
 34944                           postinc2	equ	0xFDE
 34945                           postdec2	equ	0xFDD
 34946                           plusw2	equ	0xFDB
 34947                           fsr2h	equ	0xFDA
 34948                           fsr2l	equ	0xFD9
 34949                           status	equ	0xFD8
 34950                           
 34951                           	psect	text141
 34952  000000                     __ptext141:
 34953                           	opt stack 0
 34954                           tosu	equ	0xFFF
 34955                           tosh	equ	0xFFE
 34956                           tosl	equ	0xFFD
 34957                           pclatu	equ	0xFFB
 34958                           pclath	equ	0xFFA
 34959                           tblptru	equ	0xFF8
 34960                           tblptrh	equ	0xFF7
 34961                           tblptrl	equ	0xFF6
 34962                           tablat	equ	0xFF5
 34963                           prodh	equ	0xFF4
 34964                           prodl	equ	0xFF3
 34965                           intcon	equ	0xFF2
 34966                           intcon3	equ	0xFF0
 34967                           indf0	equ	0xFEF
 34968                           postinc0	equ	0xFEE
 34969                           fsr0h	equ	0xFEA
 34970                           fsr0l	equ	0xFE9
 34971                           wreg	equ	0xFE8
 34972                           indf1	equ	0xFE7
 34973                           postdec1	equ	0xFE5
 34974                           fsr1h	equ	0xFE2
 34975                           fsr1l	equ	0xFE1
 34976                           indf2	equ	0xFDF
 34977                           postinc2	equ	0xFDE
 34978                           postdec2	equ	0xFDD
 34979                           plusw2	equ	0xFDB
 34980                           fsr2h	equ	0xFDA
 34981                           fsr2l	equ	0xFD9
 34982                           status	equ	0xFD8
 34983                           
 34984                           	psect	rparam
 34985  0000                     tosu	equ	0xFFF
 34986                           tosh	equ	0xFFE
 34987                           tosl	equ	0xFFD
 34988                           pclatu	equ	0xFFB
 34989                           pclath	equ	0xFFA
 34990                           tblptru	equ	0xFF8
 34991                           tblptrh	equ	0xFF7
 34992                           tblptrl	equ	0xFF6
 34993                           tablat	equ	0xFF5
 34994                           prodh	equ	0xFF4
 34995                           prodl	equ	0xFF3
 34996                           intcon	equ	0xFF2
 34997                           intcon3	equ	0xFF0
 34998                           indf0	equ	0xFEF
 34999                           postinc0	equ	0xFEE
 35000                           fsr0h	equ	0xFEA
 35001                           fsr0l	equ	0xFE9
 35002                           wreg	equ	0xFE8
 35003                           indf1	equ	0xFE7
 35004                           postdec1	equ	0xFE5
 35005                           fsr1h	equ	0xFE2
 35006                           fsr1l	equ	0xFE1
 35007                           indf2	equ	0xFDF
 35008                           postinc2	equ	0xFDE
 35009                           postdec2	equ	0xFDD
 35010                           plusw2	equ	0xFDB
 35011                           fsr2h	equ	0xFDA
 35012                           fsr2l	equ	0xFD9
 35013                           status	equ	0xFD8
 35014                           
 35015                           	psect	temp
 35016  00005B                     btemp:
 35017                           	opt stack 0
 35018  00005B                     	ds	1
 35019  0000                     int$flags	set	btemp
 35020                           tosu	equ	0xFFF
 35021                           tosh	equ	0xFFE
 35022                           tosl	equ	0xFFD
 35023                           pclatu	equ	0xFFB
 35024                           pclath	equ	0xFFA
 35025                           tblptru	equ	0xFF8
 35026                           tblptrh	equ	0xFF7
 35027                           tblptrl	equ	0xFF6
 35028                           tablat	equ	0xFF5
 35029                           prodh	equ	0xFF4
 35030                           prodl	equ	0xFF3
 35031                           intcon	equ	0xFF2
 35032                           intcon3	equ	0xFF0
 35033                           indf0	equ	0xFEF
 35034                           postinc0	equ	0xFEE
 35035                           fsr0h	equ	0xFEA
 35036                           fsr0l	equ	0xFE9
 35037                           wreg	equ	0xFE8
 35038                           indf1	equ	0xFE7
 35039                           postdec1	equ	0xFE5
 35040                           fsr1h	equ	0xFE2
 35041                           fsr1l	equ	0xFE1
 35042                           indf2	equ	0xFDF
 35043                           postinc2	equ	0xFDE
 35044                           postdec2	equ	0xFDD
 35045                           plusw2	equ	0xFDB
 35046                           fsr2h	equ	0xFDA
 35047                           fsr2l	equ	0xFD9
 35048                           status	equ	0xFD8


Data Sizes:
    Strings     1606
    Constant    969
    Data        11
    BSS         670
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160     87     159
    BANK1           256      5     250
    BANK2           256      0     192
    BANK3           256      0     128
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ReadyByteFrame$0	PTR char  size(2) Largest target is 128
		 -> buffer_rx(BANK3[128]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_97(CODE[7]), STR_95(CODE[7]), STR_93(CODE[7]), STR_90(CODE[7]), 
		 -> STR_35(CODE[5]), STR_31(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_89(CODE[3]), STR_69(CODE[14]), STR_67(CODE[11]), STR_63(CODE[7]), 
		 -> STR_60(CODE[9]), STR_59(CODE[11]), STR_57(CODE[14]), STR_54(CODE[14]), 
		 -> STR_53(CODE[3]), STR_49(CODE[9]), STR_45(CODE[14]), STR_44(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> clearLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> clearLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK2[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK2[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S5517_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S5517_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S5517_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S5517_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S4295$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    S4285$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S4285$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4261$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4261$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4261$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4261$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    oled_putString@string	PTR const unsigned char  size(2) Largest target is 64
		 -> oled_putUint16@numData(COMRAM[6]), oled_putint8@numData(BANK0[6]), oled_putUint8@numData(BANK0[6]), STR_189(CODE[12]), 
		 -> STR_188(CODE[8]), STR_187(CODE[9]), storedLight(BANK1[5]), STR_182(CODE[5]), 
		 -> STR_181(CODE[8]), STR_180(CODE[8]), STR_179(CODE[9]), STR_162(CODE[16]), 
		 -> STR_161(CODE[17]), STR_160(CODE[17]), STR_159(CODE[4]), STR_158(CODE[4]), 
		 -> STR_157(CODE[4]), STR_156(CODE[4]), STR_155(CODE[4]), STR_154(CODE[4]), 
		 -> STR_153(CODE[4]), STR_152(CODE[16]), STR_151(CODE[17]), STR_150(CODE[4]), 
		 -> STR_149(CODE[4]), STR_148(CODE[4]), STR_147(CODE[4]), STR_146(CODE[4]), 
		 -> STR_145(CODE[4]), STR_144(CODE[4]), STR_143(CODE[4]), STR_142(CODE[4]), 
		 -> STR_141(CODE[4]), STR_140(CODE[4]), STR_139(CODE[4]), STR_138(CODE[4]), 
		 -> STR_137(CODE[16]), STR_136(CODE[12]), STR_135(CODE[17]), STR_134(CODE[16]), 
		 -> STR_133(CODE[16]), STR_132(CODE[16]), STR_131(CODE[15]), STR_130(CODE[15]), 
		 -> STR_129(CODE[16]), STR_128(CODE[4]), STR_127(CODE[3]), STR_126(CODE[3]), 
		 -> STR_125(CODE[3]), STR_124(CODE[3]), STR_123(CODE[2]), STR_122(CODE[5]), 
		 -> STR_121(CODE[7]), STR_120(CODE[17]), STR_119(CODE[17]), STR_118(CODE[2]), 
		 -> STR_117(CODE[7]), STR_116(CODE[7]), STR_115(CODE[16]), STR_114(CODE[16]), 
		 -> STR_113(CODE[15]), STR_112(CODE[15]), STR_111(CODE[17]), STR_110(CODE[16]), 
		 -> STR_109(CODE[17]), STR_108(CODE[17]), STR_107(CODE[7]), STR_106(CODE[10]), 
		 -> STR_105(CODE[17]), STR_104(CODE[16]), STR_103(CODE[16]), STR_102(CODE[16]), 
		 -> STR_101(CODE[16]), STR_100(CODE[17]), STR_99(CODE[17]), STR_98(CODE[16]), 
		 -> STR_96(CODE[19]), STR_94(CODE[17]), STR_92(CODE[17]), STR_91(CODE[17]), 
		 -> responseData(BANK1[32]), responsePortNum(BANK1[3]), STR_88(CODE[13]), STR_87(CODE[12]), 
		 -> STR_86(CODE[12]), STR_83(CODE[18]), STR_82(CODE[13]), STR_81(CODE[17]), 
		 -> STR_80(CODE[16]), STR_79(CODE[17]), STR_78(CODE[17]), STR_77(CODE[16]), 
		 -> STR_76(CODE[17]), STR_75(CODE[17]), STR_73(CODE[13]), STR_72(CODE[12]), 
		 -> STR_71(CODE[17]), STR_65(CODE[7]), STR_64(CODE[10]), STR_62(CODE[11]), 
		 -> STR_61(CODE[11]), STR_56(CODE[9]), STR_55(CODE[11]), STR_51(CODE[11]), 
		 -> STR_50(CODE[10]), STR_47(CODE[9]), STR_46(CODE[11]), STR_42(CODE[17]), 
		 -> STR_40(CODE[17]), STR_38(CODE[17]), STR_37(CODE[17]), STR_36(CODE[17]), 
		 -> STR_34(CODE[17]), STR_33(CODE[17]), STR_32(CODE[17]), moduleResonseBuffer(BANK1[64]), 
		 -> STR_29(CODE[17]), STR_28(CODE[17]), STR_27(CODE[17]), STR_26(CODE[17]), 
		 -> STR_25(CODE[9]), STR_24(CODE[10]), STR_23(CODE[5]), STR_20(CODE[9]), 
		 -> STR_19(CODE[8]), STR_18(CODE[8]), STR_17(CODE[9]), STR_16(CODE[10]), 
		 -> STR_15(CODE[11]), STR_14(CODE[13]), STR_13(CODE[13]), STR_12(CODE[13]), 
		 -> STR_11(CODE[12]), STR_10(CODE[13]), STR_9(CODE[9]), STR_8(CODE[12]), 
		 -> STR_7(CODE[16]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[9]), 
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    oled_setFont@font	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    selectedFont	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    moteApp_setLightString@lightString	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    sp__memcpy	PTR void  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    moteApp_convertSensorValue@string	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    moteApp_addToDataBuffer@string	PTR const unsigned char  size(2) Largest target is 64
		 -> storedLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    sendDataCommand@appData	PTR unsigned char  size(2) Largest target is 16
		 -> dataBuffer(BANK1[16]), 

    sendDataCommand@string	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_85(CODE[12]), STR_84(CODE[14]), STR_74(CODE[14]), 

    sendCommand@string	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_186(CODE[22]), STR_185(CODE[22]), STR_184(CODE[27]), STR_183(CODE[27]), 
		 -> STR_178(CODE[26]), STR_177(CODE[26]), STR_176(CODE[26]), STR_175(CODE[26]), 
		 -> STR_174(CODE[3]), STR_173(CODE[9]), STR_172(CODE[15]), STR_171(CODE[13]), 
		 -> STR_170(CODE[13]), STR_169(CODE[13]), STR_168(CODE[13]), STR_167(CODE[13]), 
		 -> STR_166(CODE[13]), STR_165(CODE[13]), STR_164(CODE[13]), STR_163(CODE[16]), 
		 -> STR_70(CODE[11]), STR_68(CODE[11]), STR_66(CODE[14]), STR_58(CODE[14]), 
		 -> STR_52(CODE[10]), STR_48(CODE[13]), STR_43(CODE[14]), STR_41(CODE[13]), 
		 -> STR_39(CODE[10]), STR_30(CODE[10]), STR_22(CODE[20]), STR_21(CODE[2]), 

    sp__moteApp_getLightString	PTR unsigned char  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    sp__moteApp_getTempValue	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    sp__moteApp_getLightValue	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBapp_CdcEmulatorInitialize
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USART_mySetLineCodingHandler
    _USBCtrlTrfInHandler->_USART_mySetLineCodingHandler
    _USART_mySetLineCodingHandler->___lldiv

Critical Paths under _main in BANK0

    _main->_moteHandler
    _test_powerup->_moteApp_testSensors
    _test_switch->_oled_putString
    _test_oled->_oled_putString
    _test_leds->_oled_putString
    _test_comms->_oled_putString
    _moteApp_toggleLeds->_sendCommand
    _moteApp_testSensors->_ADC_TempConversion
    _moteHandler->_moteRunningProcess
    _moteRunningProcess->_ADC_TempConversion
    _sendDataCommand->_EUSART_Write
    _sendDataCommand->_hexToStr
    _oled_putint8->_oled_putString
    _oled_putUint8->_oled_putString
    _moteApp_setSensorsInput->_moteApp_delayms
    _moteApp_getTempValue->_MOTEapp_getModuleResponse
    _moteApp_getTempValue->_sendCommand
    _moteApp_getLightValue->_moteApp_setLightString
    _moteApp_setLightString->_memcpy
    _moteApp_convertSensorValue->_moteApp_getLightValue
    _moteApp_addToDataBuffer->_moteApp_getLightValue
    _moteApp_add8bToDataBuffer->___awmod
    _oled_setDisplay->_oled_writeCommand
    _oled_devInit->_oled_initialDispayLine
    _oled_devInit->_oled_powerControl
    _oled_devInit->_oled_regulorResistorSelect
    _oled_devInit->_oled_setContrastControlRegister
    _oled_setContrastControlRegister->_oled_writeCommand
    _oled_regulorResistorSelect->_oled_writeCommand
    _oled_powerControl->_oled_writeCommand
    _oled_initialDispayLine->_oled_writeCommand
    _oled_displayOff->_oled_writeCommand
    _moduleSleep->_sendCommand
    _moduleResync->_moteApp_delayms
    _MOTEapp_getModuleResponse->_EUSART_Read
    _MOTEapp_SetDataRateSetting->_sendCommand
    _ADC_TempConversion->___fldiv
    ___flmul->___fladd
    ___fldiv->___flmul
    _moteJoiningProcess->_oled_putString
    _TMRapp_Handler->___almod
    _moteApp_clearCommand->_sendCommand
    _sendCommand->_EUSART_Write
    _EndLine->_EUSART_Write
    _USBapp_Handler->_oled_putString
    _oled_putString->_moteApp_getLightValue
    _oled_clear->_oled_clearRow
    _oled_clearRow->_oled_putChar
    _oled_putChar->_Set_Column_Address
    _oled_putChar->_Set_Page_Address
    _Set_Page_Address->_oled_writeCommand
    _Set_Column_Address->_oled_writeCommand
    _USBapp_DeviceCdcEmulatorHandler->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_moteHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  861007
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
               _MOTEapp_handlerState
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _USBapp_Handler
                _USBapp_handlerState
                       _moduleResync
               _moteApp_clearCommand
                    _moteApp_delayms
                        _moteHandler
                         _oled_clear
                          _oled_init
                     _oled_putString
                       _test_powerup
 ---------------------------------------------------------------------------------
 (1) _test_powerup                                         0     0      0  335040
                 _EUSART_FlushBuffer
                    _moteApp_delayms
                _moteApp_testSensors
                         _oled_clear
                         _test_comms
                          _test_leds
                          _test_oled
                        _test_switch
 ---------------------------------------------------------------------------------
 (2) _test_switch                                          4     4      0   48844
                                             22 BANK0      4     4      0
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_oled                                            0     0      0   48708
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_leds                                            0     0      0   48234
                            _delayms
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_comms                                           0     0      0   51782
                            _delayms
                 _moteApp_toggleLeds
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_toggleLeds                                   2     2      0    3548
                                              3 BANK0      2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _delayms                                              5     3      2     900
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _moteApp_testSensors                                  3     3      0  133747
                                             76 BANK0      1     1      0
                 _ADC_TempConversion
         _moteApp_convertSensorValue
              _moteApp_getLightValue
               _moteApp_getTempValue
            _moteApp_setSensorsInput
                         _oled_clear
                       _oled_putChar
                     _oled_putString
                       _oled_putint8
 ---------------------------------------------------------------------------------
 (1) _moteHandler                                          6     6      0  408210
                                             86 BANK0      1     1      0
                                              0 BANK1      5     5      0
                 _ADC_TempConversion
             _MOTEapp_TimerBasedTask
          _MOTEapp_getModuleResponse
               _TMRapp_ClearBitFlags
                     _TMRapp_Handler
                     _USBapp_exitCDC
                _USBapp_exitCDCState
         _moteApp_convertSensorValue
              _moteApp_getLightValue
               _moteApp_getTempValue
                 _moteJoiningProcess
                 _moteRunningProcess
                         _oled_clear
                     _oled_putString
                       _oled_putint8
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _moteRunningProcess                                  10     7      3  216674
                                             76 BANK0     10     7      3
                 _ADC_TempConversion
         _MOTEapp_SetDataRateSetting
                     _TMR2_ReadTimer
                  _moteApp_GoToSleep
          _moteApp_add8bToDataBuffer
            _moteApp_addToDataBuffer
               _moteApp_clearBuffers
         _moteApp_convertSensorValue
                    _moteApp_delayms
             _moteApp_getLightString
              _moteApp_getLightValue
               _moteApp_getTempValue
            _moteApp_lightStringSize
            _moteApp_setSensorsInput
                         _oled_clear
                     _oled_putString
                      _oled_putUint8
                       _oled_putint8
                    _sendDataCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _sendDataCommand                                      8     3      5    1667
                                              1 BANK0      8     3      5
                       _EUSART_Write
                            _EndLine
                           _hexToStr
 ---------------------------------------------------------------------------------
 (4) _hexToStr                                             1     1      0     189
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putint8                                        10     8      2   51815
                                             22 BANK0     10     8      2
                            ___awmod
                            ___lbdiv
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _oled_putUint8                                        9     7      2   51710
                                             22 BANK0      9     7      2
                            ___awmod
                            ___lbdiv
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_setSensorsInput                              2     2      0    6041
                                              5 BANK0      2     2      0
          _MOTEapp_getModuleResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _moteApp_lightStringSize                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _moteApp_getTempValue                                 4     2      2    3755
                                              3 BANK0      4     2      2
          _MOTEapp_getModuleResponse
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _moteApp_getLightValue                                4     2      2    4818
                                             13 BANK0      4     2      2
          _MOTEapp_getModuleResponse
             _moteApp_setLightString
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _moteApp_setLightString                               3     1      2    1063
                                             10 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              10     4      6     798
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (3) _moteApp_getLightString                               2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _moteApp_convertSensorValue                           8     6      2    7958
                                             17 BANK0      8     6      2
                             ___wmul
              _moteApp_getLightValue (ARG)
               _moteApp_getTempValue (ARG)
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    7068
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_clearBuffers                                 4     4      0     396
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _moteApp_addToDataBuffer                              4     1      3     645
                                             17 BANK0      4     1      3
             _moteApp_getLightString (ARG)
              _moteApp_getLightValue (ARG)
 ---------------------------------------------------------------------------------
 (3) _moteApp_add8bToDataBuffer                            4     3      1    3840
                                              6 BANK0      4     3      1
                            ___awmod
                            ___lbdiv
            _moteApp_lightStringSize (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     865
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    2305
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_GoToSleep                                    1     1      0   13879
                                             14 BANK0      1     1      0
                 _EUSART_FlushBuffer
             _PIN_MANAGER_Initialize
                       _moduleResync
                        _moduleSleep
                    _moteApp_delayms
                    _oled_displayOff
                          _oled_init
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            0     0      0    1884
                         _oled_clear
                       _oled_devInit
                    _oled_setDisplay
                       _oled_setFont
 ---------------------------------------------------------------------------------
 (2) _oled_setFont                                         2     0      2     166
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _oled_setDisplay                                      1     1      0      62
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (2) _oled_devInit                                         1     1      0     282
                                              2 BANK0      1     1      0
             _oled_initialDispayLine
                  _oled_powerControl
         _oled_regulorResistorSelect
    _oled_setContrastControlRegister
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_setContrastControlRegister                      1     1      0      62
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_regulorResistorSelect                           1     1      0      62
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_powerControl                                    1     1      0      62
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_initialDispayLine                               1     1      0      65
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_displayOff                                      1     1      0      31
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _moduleSleep                                          1     1      0    3517
                                              3 BANK0      1     1      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _moduleResync                                         3     3      0    6047
                                              5 BANK0      3     3      0
          _MOTEapp_getModuleResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _MOTEapp_getModuleResponse                            2     2      0     204
                                              1 BANK0      2     2      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART_FlushBuffer                                   1     1      0      99
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_ReadTimer                                       1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_SetDataRateSetting                           2     2      0    3579
                                              3 BANK0      2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _ADC_TempConversion                                   6     6      0    9408
                                             70 BANK0      6     6      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     580
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     441
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    2777
                                             20 BANK0     25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    1991
                                             45 BANK0     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3486
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (2) _moteJoiningProcess                                   6     4      2   60063
                                             22 BANK0      6     4      2
                   _DATAEE_WriteByte
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                        _sendCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6    2064
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    2629
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _moteApp_delayms                                      5     3      2    2252
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     3     2      1     304
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDCState                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMRapp_Handler                                       0     0      0    4201
                            ___almod
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    3560
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     641
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (2) _TMRapp_ClearBitFlags                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MOTEapp_TimerBasedTask                               1     1      0     217
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _moteApp_clearCommand                                 0     0      0    3517
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _sendCommand                                          2     0      2    3517
                                              1 BANK0      2     0      2
                       _EUSART_Write
                            _EndLine
 ---------------------------------------------------------------------------------
 (5) _EndLine                                              0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (1) _USBapp_handlerState                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_Handler                                       1     1      0   53591
                                             22 BANK0      1     1      0
    _USBapp_DeviceCdcEmulatorHandler
                         _oled_clear
                     _oled_putString
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _service_pushbutton                                   1     1      0      46
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putString                                       5     1      4   47334
                                             17 BANK0      5     1      4
             _moteApp_getLightString (ARG)
              _moteApp_getLightValue (ARG)
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (3) _oled_clear                                           0     0      0    1374
                      _oled_clearRow
 ---------------------------------------------------------------------------------
 (4) _oled_clearRow                                        2     2      0    1374
                                             12 BANK0      2     2      0
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (4) _oled_putChar                                        10     8      2    1244
                                              2 BANK0     10     8      2
                 _Set_Column_Address
                   _Set_Page_Address
                     _oled_writeData
 ---------------------------------------------------------------------------------
 (5) _oled_writeData                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _Set_Page_Address                                     1     1      0      96
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (5) _Set_Column_Address                                   1     1      0      93
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (6) _oled_writeCommand                                    1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_DeviceCdcEmulatorHandler                      1     1      0    4800
                                             13 BANK0      1     1      0
                       _CDCTxService
                        _EUSART_Read
                       _EUSART_Write
           _MOTEapp_setResponseReady
               _USBapp_getrxByteFlag
                       _getsUSBUSART
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     270
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2267
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBapp_getrxByteFlag                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_setResponseReady                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Read                                          1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2164
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1926
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CMP1_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0       0
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              0 BANK0      2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOTEapp_handlerState                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                         14    14      0   30063
                                             31 COMRAM    14    14      0
                           _CMP1_ISR
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR1_ISR
                           _TMR3_ISR
                        _TMRapp_Tick
                     _USBDeviceTasks
               _USBapp_setrxByteFlag
 ---------------------------------------------------------------------------------
 (11) _USBapp_setrxByteFlag                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USBDeviceTasks                                      1     1      0   30063
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (12) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (12) _USBWakeFromSuspend                                  0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBSuspend                                          0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPService                                    3     3      0   17698
                                             27 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfSetupHandler                              0     0      0   16631
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (14) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (14) _USBCheckStdRequest                                  0     0      0   12636
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStdSetCfgHandler                                 1     1      0    4401
                                             21 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (15) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (15) _USBStdFeatureReqHandler                             6     6      0    4286
                                             21 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3903
                                             13 COMRAM     8     2      6
                 _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
 ---------------------------------------------------------------------------------
 (13) _USBapp_CdcEmulatorInitialize                        1     1      0    1211
                                             12 COMRAM     1     1      0
                          _CDCInitEP
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (13) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfOutHandler                                0     0      0     499
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfRxService                                 2     2      0     499
                                             17 COMRAM     2     2      0
       _USART_mySetLineCodingHandler *
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfInHandler                                 1     1      0     500
                                             17 COMRAM     1     1      0
       _USART_mySetLineCodingHandler *
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USART_mySetLineCodingHandler                        4     4      0     385
                                             13 COMRAM     4     4      0
                            ___lldiv
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (14) i2_EUSART_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) ___lldiv                                            13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (11) _TMRapp_Tick                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR3_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CMP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _MOTEapp_handlerState
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
     _TMR3_Initialize
       _TMR3_StartTimer
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _USBapp_Handler
     _USBapp_DeviceCdcEmulatorHandler
       _CDCTxService
         _USBTransferOnePacket
       _EUSART_Read
       _EUSART_Write
       _MOTEapp_setResponseReady
       _USBapp_getrxByteFlag
       _getsUSBUSART
         _USBTransferOnePacket
       _putUSBUSART
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_putString
       _moteApp_getLightString (ARG)
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putChar (ARG)
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
     _service_pushbutton
   _USBapp_handlerState
   _moduleResync
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _moteApp_delayms
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_clearCommand
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_delayms
   _moteHandler
     _ADC_TempConversion
       ___fladd
       ___fldiv
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
     _MOTEapp_TimerBasedTask
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _TMRapp_ClearBitFlags
     _TMRapp_Handler
       ___almod
       ___lwmod
     _USBapp_exitCDC
     _USBapp_exitCDCState
     _moteApp_convertSensorValue
       ___wmul
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
     _moteApp_getLightValue
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _moteApp_setLightString
         _memcpy
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _moteApp_getTempValue
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _moteJoiningProcess
       _DATAEE_WriteByte
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
       _strcmp
       _strncmp
     _moteRunningProcess
       _ADC_TempConversion
         ___fladd
         ___fldiv
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _MOTEapp_SetDataRateSetting
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _TMR2_ReadTimer
       _moteApp_GoToSleep
         _EUSART_FlushBuffer
         _PIN_MANAGER_Initialize
         _moduleResync
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moduleSleep
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_delayms
         _oled_displayOff
           _oled_writeCommand
         _oled_init
           _oled_clear
             _oled_clearRow
               _oled_putChar
                 _Set_Column_Address
                   _oled_writeCommand
                 _Set_Page_Address
                   _oled_writeCommand
                 _oled_writeData
           _oled_devInit
             _oled_initialDispayLine
               _oled_writeCommand
             _oled_powerControl
               _oled_writeCommand
             _oled_regulorResistorSelect
               _oled_writeCommand
             _oled_setContrastControlRegister
               _oled_writeCommand
             _oled_writeCommand
           _oled_setDisplay
             _oled_writeCommand
           _oled_setFont
       _moteApp_add8bToDataBuffer
         ___awmod
         ___lbdiv
         _moteApp_lightStringSize (ARG)
       _moteApp_addToDataBuffer
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_clearBuffers
       _moteApp_convertSensorValue
         ___wmul
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_getTempValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_delayms
       _moteApp_getLightString
       _moteApp_getLightValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_lightStringSize
       _moteApp_setSensorsInput
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _oled_putUint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _sendDataCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
         _hexToStr
       _strcmp
       _strncmp
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_putString
       _moteApp_getLightString (ARG)
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putChar (ARG)
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
     _oled_putint8
       ___awmod
       ___lbdiv
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _service_pushbutton
   _oled_clear
     _oled_clearRow
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
   _oled_init
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_devInit
       _oled_initialDispayLine
         _oled_writeCommand
       _oled_powerControl
         _oled_writeCommand
       _oled_regulorResistorSelect
         _oled_writeCommand
       _oled_setContrastControlRegister
         _oled_writeCommand
       _oled_writeCommand
     _oled_setDisplay
       _oled_writeCommand
     _oled_setFont
   _oled_putString
     _moteApp_getLightString (ARG)
     _moteApp_getLightValue (ARG)
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _moteApp_setLightString
         _memcpy
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _oled_putChar (ARG)
       _Set_Column_Address
         _oled_writeCommand
       _Set_Page_Address
         _oled_writeCommand
       _oled_writeData
   _test_powerup
     _EUSART_FlushBuffer
     _moteApp_delayms
     _moteApp_testSensors
       _ADC_TempConversion
         ___fladd
         ___fldiv
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _moteApp_convertSensorValue
         ___wmul
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_getTempValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_getLightValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_setSensorsInput
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _oled_putint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_comms
       _delayms
       _moteApp_toggleLeds
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_leds
       _delayms
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_oled
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_switch
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData

 _INTERRUPT_InterruptManager (ROOT)
   _CMP1_ISR
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR1_ISR
   _TMR3_ISR
   _TMRapp_Tick
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USART_mySetLineCodingHandler *
           ___lldiv
           i2_EUSART_Initialize
         _USBCtrlTrfTxService *
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USART_mySetLineCodingHandler *
             ___lldiv
             i2_EUSART_Initialize
           _USBCtrlEPAllowStatusStage *
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             _USBapp_CdcEmulatorInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               i2_EUSART_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           _USBapp_CdcEmulatorInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             i2_EUSART_Initialize
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         i2_EUSART_Initialize
     i2_USBDeviceInit
       i2_memset
   _USBapp_setrxByteFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      80      11       50.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C0       9       75.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      5      FA       7       97.7%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     57      9F       5       99.4%
BITBANK5            80      0       0      15        0.0%
BANK5               80      0       0      16        0.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     2D      5A       1       95.7%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     333      14        0.0%
DATA                 0      0     333       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Mar 27 14:31:59 2018

           __size_of_moteApp_lightStringSize 0008                                   _USB_SD_Ptr 75EF  
                               ___fldiv@aexp 00A5                                 ___fldiv@bexp 00A4  
                               ___fldiv@sign 0099                        ??_moteApp_testSensors 00AC  
                          ??_CMP1_Initialize 0060                                           l59 3EE4  
                                 _USB_Buffer 0280                    _MOTEapp_getModuleResponse 608A  
                                         _cs 015A               moteJoiningProcess@selectButton 0077  
                              _USBDeviceInit 3716                          ___wmul@multiplicand 0062  
                    EUSART_FlushBuffer@index 0060                       __end_of_oled_writeData 71B2  
                       ??_moteApp_toggleLeds 0063                           __size_of_CDCInitEP 006E  
                   USBapp_handlerState@state 0060                                 __CFG_CP0$OFF 000000  
                               __CFG_CP1$OFF 000000                                 __CFG_CP2$OFF 000000  
                               __CFG_CP3$OFF 000000               __end_of_moteApp_setLightString 608A  
       USER_USB_CALLBACK_EVENT_HANDLER@event 000E         USER_USB_CALLBACK_EVENT_HANDLER@pdata 0010  
                                        l109 6D86                                          l126 4552  
                __end_of_USBStdGetDscHandler 4060                                          l334 5BA2  
                                        l343 5C16                                          l440 1ABA  
                                        l352 701C                                          l337 5C06  
                                        l610 6BD0                                          l346 6D46  
                                        l349 6D60                                          l445 1B58  
                                        l517 0BC4                                          l390 13F2  
                                        l703 6330                                          l376 2ED4  
                                        l625 6118                                          l562 1112  
                                        l466 033E                                          l707 593E  
                                        l467 033E                                          l396 1422  
                                        l732 6934                                          l581 131C  
                                        l494 07FA                                          l671 46F0  
                                        l663 45EE                                          l657 6A92  
                                        l906 72F2                                          l842 4ECE  
                                        l666 4648                                          l690 4BEA  
                                        l754 72CC                                          l739 66D2  
                                        _BDT 000400                                          l669 468C  
                                        l757 7276                                          l749 6086  
                                        l854 4FA4                                          l943 5E0E  
                                        l839 4ECC                                          _CKE 007E3E  
                                        l856 4FBC                                          l873 42AC  
                                        l849 4F8E                                          l874 41DC  
                                        l859 72DC                                          l876 4218  
                                        l965 3A00                                          _CKP 007E34  
                                        _GIE 007F97                                 __CFG_CPB$OFF 000000  
                    ?_oled_initialDispayLine 0001                                          _PR2 000FBB  
                               __CFG_CPD$OFF 000000                           _moteJoiningProcess 13E6  
                                        _UIE 000F64                                          _UIR 000F65  
                            _timer1ReloadVal 0046                                          _log 02D0  
                                 _USBSuspend 703A                                 ___awmod@sign 0065  
               __end_of_moteApp_clearBuffers 4BEC                 __end_of_moteApp_clearCommand 7256  
                       USBStdSetCfgHandler@i 0016                              _TMR2_Initialize 720C  
                                        prod 000FF3                                          tosl 000FFD  
                                        wreg 000FE8                               _USBDeviceTasks 31F8  
                             _USBDeviceState 00DE                                 ___flmul@aexp 0081  
                               ___flmul@bexp 0086                                 ___flmul@sign 0080  
                               ___flmul@temp 008B                                 ___flmul@prod 0087  
                      moteApp_delayms@length 0060                 MOTEapp_SetDataRateSetting@dr 0064  
                      ??_USBCtrlTrfRxService 0012                     __size_ofi2_USBDeviceInit 015E  
                             ??_getsUSBUSART 006A                                 ?_EUSART_Read 0001  
                   USBEnableEndpoint@options 0009                                 __CFG_LVP$OFF 000000  
                        ?_moteJoiningProcess 0076                                 ___fltol@exp1 0069  
                                       l1021 714A                                         l1014 717E  
                                       l1017 7110                                         l1130 6AE6  
                                       l1052 6E56                                         l1044 61A0  
                                       l1028 55F2                                         l1037 5A02  
                                       l1127 6A9C                                         l1063 7008  
                                       l1232 7120                                         l1136 69B0  
                                       l1072 71B0                                         l1081 7242  
                                       l1075 71F6                                         l1084 7230  
                                       l2045 47F8                                         l1069 71C8  
                                       l1078 720A                                         l2071 3590  
                                       l2072 3434                                         l1272 4ECA  
                                       l1450 71E0                                         l1515 7290  
                            _timer3ReloadVal 00C1                                         l1444 6C44  
                                       l2077 3498                                         l2245 43CA  
                                       l2502 6518                                         l1712 3794  
                                       l2169 6ECA                                         l2603 6E92  
                                       l2620 1D3C                   USBConfigureEndpoint@handle 0007  
                                       l2357 57BC                                         l2711 2472  
                                       l2704 21C6                                         l2721 25BA  
                                       l2713 2500                                         l1754 48F8  
                                       l2618 1D8E                                         l2714 24EC  
                                       l2731 6810                                         l2635 1F28  
                                       l2627 20EE                                         l2619 1D7C  
                                       l2644 1FFE                                         l2708 2608  
                                       l1773 6C88                                         l2645 1FEA  
                                       l2397 3DF0                                         l1774 6C86  
                                       l2750 30FE                                         l2743 3042  
                                       l1776 6C9C                                         l2672 2A5C  
                                       l2674 287C                                         l2746 31F6  
                                       l2579 6422                                         l2739 5ABA  
                                       l2683 28C4                                         l2685 2952  
                                       l2677 281C                                         l2757 316C  
                                       l2597 6B38                                         l2686 293E  
                                       l2758 3188                                         STR_1 7D1E  
                                       STR_2 7D00                                         STR_3 7D0F  
                                       STR_4 7F3D                                         STR_5 7D8A  
                                       STR_6 7D97                                         STR_7 7CC3  
                                       STR_8 7E70                                         STR_9 7F46  
                            _lightStringSize 00DF                                         _LATD 000F8C  
            __size_of_MOTEapp_TimerBasedTask 0048                                         _PEIE 007F96  
                      ??_USBCtrlTrfTxService 0001                                         _UCFG 000F62  
                                       _UEP0 000F6A                                         _UEP1 000F6B  
                                       _UEIE 000F66                                         _UEIR 000F67  
                                       _UCON 000F60                                         _TMR2 000FBC  
                                       _TMR3 000FB2                              _CDCDataInHandle 00BD  
     USBStdFeatureReqHandler@current_ep_data 0019                                         _pDst 0154  
                                       _main 3DF2                     ??i2_USBTransferOnePacket 0005  
          __end_of_moteApp_add8bToDataBuffer 56F0                                         fsr0h 000FEA  
                                       fsr1h 000FE2                                         indf0 000FEF  
                                       fsr2h 000FDA                                         fsr0l 000FE9  
                                       indf1 000FE7                                  _BaudRateGen 0146  
                                       indf2 000FDF                                         fsr1l 000FE1  
                                       fsr2l 000FD9                              _USBDeviceAttach 6C5C  
                                       btemp 005B                                __CFG_BORV$190 000000  
               moteApp_addToDataBuffer@index 0074                                         prodh 000FF4  
                                       prodl 000FF3                         _USBapp_setrxByteFlag 72F4  
                                       start 011E                                __CFG_IESO$OFF 000000  
                            ___fldiv@new_exp 009E                              __end_of_EndLine 7286  
                            _TMR3_Initialize 70D2                                  _storedLight 01EB  
                __end_of_USBapp_exitCDCState 72A8                             __end_of_CMP1_ISR 7310  
                            ?_oled_putString 0071                   __end_of_USBCheckStdRequest 50B0  
                     ??_USBCtrlTrfOutHandler 0014                  __size_of_moteRunningProcess 12C4  
                           ?_oled_setDisplay 0001                                __CFG_MCLRE$ON 000000  
                               ___param_bank 000000                    ??_USBStdFeatureReqHandler 0016  
                                _TMRapp_Tick 72FA                         ??_moteJoiningProcess 0078  
                     moteApp_delayms@counter 0063                ?_USART_mySetLineCodingHandler 0001  
                     sendDataCommand@appData 0063                            sendCommand@string 0061  
                   ??_USBStdGetStatusHandler 0001                 __end_of_USBapp_getrxByteFlag 72F4  
                  __size_of_DATAEE_WriteByte 0042                               ?_USBDeviceInit 0001  
                     _moteApp_getLightString 7268                                ?_EUSART_Write 0001  
             __size_of_OSCILLATOR_Initialize 001E               __end_of_oled_initialDispayLine 720C  
                            ?_oled_writeData 0001                __end_of_OSCILLATOR_Initialize 7130  
                                      l12013 60D6                                        l12021 6112  
                                      l12101 5BAC                                        l12017 60F6  
                                      l12105 5BCC                                        l12033 6B1C  
                                      l12027 6AFA                                        l12125 618E  
                                      l13021 5A84                                        l13013 5A06  
                                      l12141 68B6                                        l12109 5BE2  
                                      l12213 6054                                        l12119 612E  
                                      l13031 67AC                                        l13023 5A92  
                                      l12135 688E                                        l13103 5D28  
                                      l12233 4864                                        l12225 4828  
                                      l13033 67BA                                        l13025 5AAE  
                                      l13017 5A40                                        l12305 1C76  
                                      l13201 3600                                        l13121 62C4  
                                      l12217 6076                                        l12227 4844  
                                      l12411 1F9C                                        l13211 365A  
                                      l13203 3612                                        l12147 7026  
                                      l13131 6318                                        l13107 5D48  
                                      l14011 04B2                                        l12245 48D6  
                                      l13037 6800                                        l12405 1F82  
                                      l13213 366C                                        l13205 3624  
                                      l13221 36CE                                        l12077 6FFA  
                                      l13053 4B30                                        l13109 5D58  
                                      l12157 6A66                                        l14013 04BE  
                                      l12247 48EE                                        l12415 1FB2  
                                      l12335 1CB4                                        l12263 1B7E  
                                      l13215 367E                                        l13207 3636  
                                      l13303 46B0                                        l13135 632A  
                                      l13071 4B84                                        l13047 4B08  
                                      l12167 6A8A                                        l14111 0796  
                                      l12409 1F94                                        l12417 1FC0  
                                      l12353 1D6C                                        l12281 1BEC  
                                      l12273 1BB8                                        l12601 2114  
                                      l13209 3648                                        l13129 6300  
                                      l13065 4B6E                                        l14121 07EA  
                                      l14009 04A6                                        l13331 473C  
                                      l12443 20AC                                        l12435 2066  
                                      l12371 1E02                                        l12363 1DBC  
                                      l12347 1D54                                        l12275 1BCC  
                                      l12515 276A                                        l12507 2736  
                                      l12611 215C                                        l13219 3692  
                                      l13227 45F8                                        l13083 4BC2  
                                      l13059 4B46                                        l13171 4942  
                                      l13163 4914                                        l14123 07F2  
                                      l14115 07A4                                        l12373 1E0A  
                                      l12381 1E2E                                        l12349 1D5C  
                                      l12293 1C34                                        l12269 1BAC  
                                      l12541 288A                                        l12533 282A  
                                      l12525 27E8                                        l13309 46C2  
                                      l13077 4BAC                                        l13093 5CDC  
                                      l13181 498C                                        l13165 492C  
                                      l14205 0B58                                        l14109 0790  
                                      l14061 0608                                        l14053 05C2  
                                      l13407 34CC                                        l13415 34F2  
                                      l11911 6998                                        l13343 47B8  
                                      l11903 5978                                        l12455 20DC  
                                      l12447 20BC                                        l12439 2082  
                                      l12391 1F08                                        l12287 1C06  
                                      l12551 28DA                                        l12471 265C  
                                      l12703 255C                                        l12631 21E4  
                                      l12607 2142                                        l13159 48FC  
                                      l14311 0F8E                                        l14215 0BA8  
                                      l14135 088A                                        l14143 092A  
                                      l13433 355E                                        l13417 3506  
                                      l13425 352C                                        l13345 47CA  
                                      l13337 477E                                        l13329 4730  
                                      l12449 20C2                                        l12377 1E1A  
                                      l12297 1C40                                        l12553 28E6  
                                      l12545 28AA                                        l12465 262E  
                                      l12625 21AE                                        l12609 2148  
                                      l12801 3DDE                                        l13097 5CFC  
                                      l13185 49DE                                        l13177 4970  
                                      l14401 12F8                                        l14313 0FAC  
                                      l14305 0F34                                        l14321 1006  
                                      l14129 0838                                        l14145 093E  
                                      l14057 05F0                                        l14049 0594  
                                      l13521 4516                                        l13435 3566  
                                      l13427 353E                                        l11923 69E0  
                                      l13339 4786                                        l13347 47F2  
                                      l12299 1C54                                        l12571 29AE  
                                      l12539 2878                                        l12491 26CE  
                                      l12475 2668                                        l12707 2588  
                                      l12635 21FA                                        l12627 21B4  
                                      l12619 2180                                        l12811 64C4  
                                      l13099 5D0C                                        l13187 49F0  
                                      l14331 105E                                        l14315 0FCA  
                                      l14307 0F52                                        l14323 1038  
                                      l14251 0D30                                        l14235 0C72  
                                      l14219 0BE8                                        l14171 0A20  
                                      l14139 08DA                                        l13523 4534  
                                      l13437 358E                                        l13381 3424  
                                      l11925 69E4                                        l13461 4316  
                                      l13453 42D8                                        l12485 26A0  
                                      l12477 267C                                        l12717 25E0  
                                      l12741 5740                                        l12733 5712  
                                      l14317 0FE8                                        l14309 0F70  
                                      l14253 0D4E                                        l14261 0DA8  
                                      l14149 0956                                        l14421 1386  
                                      l13541 45CA                                        l13375 3404  
                                      l13367 7088                                        l13463 4328  
                                      l12399 1F66                                        l12575 29E2  
                                      l12495 26DA                                        l12719 25EE  
                                      l13199 35EE                                        l12743 574E  
                                      l12823 6502                                        l12815 64D0  
                                      l14407 1314                                        l14343 10CA  
                                      l14335 1082                                        l14327 104E  
                                      l14255 0D6C                                        l14263 0DD2  
                                      l14247 0CF4                                        l14191 0AE0  
                                      l14159 09B6                                        l14087 06EA  
                                      l14079 06AE                                        l13535 45AA  
                                      l13393 347A                                        l13377 3410  
                                      l11929 6AA0                                        l13465 4336  
                                      l13473 4396                                        l13457 42F6  
                                      l13705 13F6                                        l12585 2A32  
                                      l12497 26EE                                        l12745 575C  
                                      l12753 5798                                        l12737 5728  
                                      l12817 64DE                                        l14329 1054  
                                      l14257 0D8A                                        l14249 0D12  
                                      l12913 4C88                                        l13529 457E  
                                      l14531 6E76                                        l13387 3442  
                                      l11939 6ADC                                        l14427 41A6  
                                      l11955 6E36                                        l13803 17A2  
                                      l12587 2A38                                        l12579 2A1E  
                                      l12683 2488                                        l12843 3082  
                                      l12827 6512                                        l14347 10EE  
                                      l14339 10A6                                        l14355 1134  
                                      l14283 0E68                                        l14275 0E2C  
                                      l14267 0DF6                                        l14195 0AF8  
                                      l13539 45B8                                        l13477 43B8  
                                      l13469 4380                                        l13493 6412  
                                      l13485 63CC                                        l13741 1568  
                                      l13709 140E                                        l12685 2494  
                                      l12677 2458                                        l12845 308A  
                                      l12837 3054                                        l12757 57B2  
                                      l12749 5786                                        l12941 6684  
                                      l14373 11CC                                        l14381 11EA  
                                      l14357 1160                                        l14293 0EC8  
                                      l14527 6E62                                        l13399 349E  
                                      l14703 4F76                                        l11991 6ECE  
                                      l13663 6BB4                                        l13487 63DA  
                                      l11983 6D2E                                        l13727 14CC  
                                      l12783 3D5E                                        l12767 3CE4  
                                      l12855 3142                                        l12847 309C  
                                      l14391 126C                                        l14383 11F4  
                                      l14279 0E50                                        l14481 712A  
                                      l13489 63E8                                        l13841 1954  
                                      l13825 1898                                        l13809 17E4  
                                      l12793 3D98                                        l12857 3154  
                                      l12849 30E0                                        l12945 66A4  
                                      l12961 6916                                        l14393 128A  
                                      l14385 1212                                        l14377 11E0  
                                      l14369 11B6                                        l14721 2D9C  
                                      l14627 6C92                                        l14459 4276  
                                      l13691 5DD2                                        l11995 6EE6  
                                      l13659 6BA4                                        l13819 1854  
                                      l13747 1594                                        l12795 3DAA  
                                      l12787 3D74                                        l12947 66B4  
                                      l12963 6926                                        l14395 12A8  
                                      l14387 1230                                        l14379 11E4  
                                      l14803 2FCC                                        l14731 2DBC  
                                      l14723 2DA4                                        l14565 376A  
                                      l14469 42A8                                        l11997 6EFE  
                                      l13861 1A28                                        l13853 19D4  
                                      l13829 18D6                                        l13773 167A  
                                      l13757 15E4                                        l12797 3DBC  
                                      l12869 31E4                                        l12973 58AC  
                                      l12957 68F6                                        l14389 124E  
                                      l14805 2FE8                                        l14741 2DF2  
                                      l13695 5DFA                                        l13687 5DBE  
                                      l13679 5D80                                        l13783 16EA  
                                      l13767 1638                                        l12983 592E  
                                      l14399 12C6                                        l13935 02A4  
                                      l12895 6D6E                                        l14593 37F2  
                                      l14577 37A0                                        l14585 37B4  
                                      l13697 5E00                                        l13689 5DC8  
                                      l13857 1A10                                        l12993 5550  
                                      l13961 0334                                        l13937 02B0  
                                      l13953 0318                                        l14745 2E00  
                                      l14737 2DDA                                        l14587 37BE  
                                      l13699 5E08                                        l14691 4F4A  
                                      l14675 4ED2                                        l13883 1ACE  
                                      l13875 1A94                                        l13787 1708  
                                      l12979 58EC                                        l13963 0342  
                                      l13939 02BC                                        l14747 2E08  
                                      l14685 4F32                                        l13869 1A7A  
                                      l14773 2ED8                                        l14765 2EAA  
                                      l14845 3E70                                        l14599 3864  
                                      l13879 1AAC                                        l13799 1786  
                                      l13887 1B0A                                        l13967 035A  
                                      l14689 4F42                                        l13889 1B52  
                                      l13977 03BA                                        l14785 2F3A  
                                      l14769 2EBE                                        l14865 3EFA  
                                      l14873 3F12                                        l14859 3EE8  
                                      l13989 0424                                        l14799 2FB6  
                              ___fltol@sign1 0068                              __end_of___almod 43CC  
                            __end_of___fladd 20F0                                        ?_main 0001  
                            __end_of___fldiv 2A5E                              __end_of___lbdiv 651A  
                                      _EEADR 000FA9                                        STR_10 7DF4  
                                      STR_11 7E7C                                        STR_20 7F4F  
                                      STR_12 7E1B                                        STR_21 7FFC  
                                      STR_13 7E01                                        STR_30 7EFC  
                                      STR_14 7E0E                                        STR_22 7A82  
                                      STR_23 7AC7                                        STR_31 7FB8  
                                      STR_15 7EBF                                        STR_16 7F06  
                                      STR_24 7EDE                                        STR_32 7B43  
                                      STR_40 7ABB                                        STR_17 7F58  
                                      STR_25 7F34                                        STR_41 7DE7  
                                      STR_33 7B98                                        STR_18 7F69  
                                      STR_50 7ED4                                        STR_26 7BA9  
                                      STR_34 7AEE                                        STR_42 7ADD  
                                      STR_35 7FBD                                        STR_19 7F71  
                                      STR_51 7E9E                                        STR_43 7D3B  
                                      STR_27 7BFE                                        STR_36 7B43  
                                      STR_60 7F22                                        STR_44 7FF7  
                                      STR_52 7EF2                                        STR_28 7C0F  
                            __end_of___awmod 57BE                                        STR_37 7B98  
                                      STR_53 7FF7                                        STR_61 7E88  
                                      STR_45 7D57                                        STR_29 7B32  
                                      STR_38 7AEE                                        STR_62 7E9E  
                                      STR_70 7EA9                                        STR_54 7D57  
                                      STR_46 7EB4                                        STR_55 7EB4  
                                      STR_39 7EFC                                        STR_63 7F95  
                                      STR_47 7F19                                        STR_71 7C31  
                                      STR_80 7C83                                        STR_56 7F19  
                                      STR_48 7DE7                                        STR_64 7EE8  
                                      STR_72 7E34                                        STR_65 7F8E  
                                      STR_49 7F22                                        STR_73 7D72  
                                      STR_57 7D49                                        STR_81 7BDC  
                                      STR_66 7D3B                                        STR_58 7D3B  
                                      STR_90 7FAA                                        STR_82 7D65  
                                      STR_74 7D2D                                        STR_67 7E93  
                                      STR_59 7E93                                        STR_91 7B54  
                                      STR_75 7B21                                        STR_83 7AA9  
                                      STR_84 7D2D                                        STR_68 7EA9  
                                      STR_76 7B87                                        STR_92 7ACC  
                                      STR_69 7D49                                        STR_93 7FB1  
                                      STR_85 7E64                                        STR_77 7C83  
                                      STR_86 7E4C                                        STR_94 7BBA  
                                      STR_78 7B10                                        STR_95 7FA3  
                                      STR_87 7E40                                        STR_79 7AFF  
                                      STR_88 7D72                                        STR_96 7A96  
                            __end_of___flmul 260A                                        STR_89 7FF7  
                                      STR_97 7F9C                                        STR_98 7CB3  
                                      STR_99 7B21            __size_of_USBCtrlEPServiceComplete 012E  
                            __end_of___fltol 3DF2                              _TMR1_StartTimer 7308  
                            __end_of___lldiv 5FF6                                        u11000 6158  
                                      u11001 6156                                        u11010 6180  
                                      u11020 619E                                        u11100 6070  
                                      u11021 619C                                        u11101 606E  
                                      u11030 688A                                        u11110 6086  
                                      u11031 6888                                        u11111 6084  
                                      u11120 480C                                        u11200 1C14  
                                      u11040 68B4                                        u12000 5774  
                                      u11121 480A                                        u11017 6176  
                                      u11201 1C12                                        u11041 68B2  
                                      u12001 5772                                        u11130 4854  
                                      u11210 1C20                                        u11050 7024  
                                      u12010 57A6                                        u11131 4852  
                                      u11211 1C1E                                        u11051 7022  
                                      u12011 57A4                                        u11140 48BE  
                                      u11300 1D98                                        u11220 1C64  
                                      u12020 3CCE                                        u12100 64DA  
                                      u11060 6A5A                                        u11141 48BC  
                                      u11301 1D96                                        u11221 1C62  
                                      u12021 3CCC                                        u12101 64D8  
                                      u11061 6A58                                        u11310 1DA6  
                                      u11230 1C6E                                        u11150 1B78  
                                      u12030 3D04                                        u12110 64F4  
                                      u11070 6A72                                        u11311 1DA4  
                                      u11231 1C6C                                        u11151 1B76  
                                      u12111 64F2                                        u11071 6A70  
                                      u11400 1F8C                                        u11320 1DE6  
                                      u11240 1D02                                        u11160 1B8C  
                                      u12040 3D36                                        u12200 31D4  
                                      u12120 3002                                        u11080 6A7E  
                                      u11401 1F8A                                        u11321 1DE4  
                                      u11241 1D00                                        u11161 1B8A  
                                      u12041 3D34                                        u12201 31D2  
                                      u12121 3000                                        u11081 6A7C  
                                      u13010 38C2                                        u11410 1FAA  
                                      u11330 1DF0                                        u11250 1D1C  
                                      u11170 1B98                                        u12050 3D46  
                                      u12210 31DE                                        u12130 300C  
                                      u11090 6050                                        u13011 38C0  
                                      u11411 1FA8                                        u11331 1DEE  
                                      u11251 1D18                                        u11171 1B96  
                                      u12051 3D44                                        u12035 3CF8  
                                      u12211 31DC                                        u12131 300A  
                                      u11091 604E                                        u13100 6BBE  
                                      u13020 38EC                                        u12220 6C4C  
                                      u11500 2080                                        u11420 1FBC  
                                      u11340 1E14                                        u11260 1D1E  
                                      u11180 1BE6                                        u12060 3D80  
                                      u12140 306C                                        u12300 58A8  
          __size_of_MOTEapp_setResponseReady 0008                                        u13101 6BBC  
                                      u13021 38EA                                        u12221 6C4A  
                                      u11501 207E                                        u11421 1FBA  
                                      u11341 1E12                                        u11181 1BE4  
                                      u12061 3D7E                                        u12141 306A  
                                      u12301 58A6                                        u13110 5D76  
                                      u13030 3916                                        u11510 20A2  
                                      u11430 1FD0                                        u11350 1E62  
                                      u11270 1D46                                        u11190 1C00  
                                      u12070 3DB8                                        u12150 30DC  
                                      u12310 58BE                                        u13111 5D74  
                                      u13031 3914                                        u11511 20A0  
                                      u11431 1FCE                                        u11351 1E60  
                                      u11271 1D44                                        u11191 1BFE  
                                      u12071 3DB6                                        u12151 30DA  
                                      u12311 58BC                                        u10800 69D8  
                                      u14000 4222                                        u13120 5D7E  
                                      u13040 3956                                        u12400 67FC  
                                      u13200 15A2                                        u11520 20B6  
                                      u11440 1FE2                                        u11360 1EF6  
                                      u11280 1D66                                        u11600 2706  
                                      u12080 3DCA                                        u12160 313E  
                                      u12320 58CC                                        _T1CON 000FCD  
                                      u10801 69D6                                        u14001 4220  
                                      u13121 5D7C                                        u13041 3954  
                                      u12401 67FA                                        u13201 15A0  
                                      u11521 20B4                                        u11441 1FE0  
                                      u11361 1EF4                                        u11281 1D64  
                                      u11601 2704                                        u12081 3DC8  
                                      u12161 313C                                        u12321 58CA  
                     __end_of_USBDeviceTasks 33CA                                        u10810 6AAA  
                                      u14010 4230                                        u13130 5DA8  
                                      u13050 3986                                        u13210 15F2  
                                      u11530 20D6                                        u11450 1FF4  
                                      u11370 1F40                                        u11290 1D8C  
                                      u11610 2744                                        u12170 315E  
                                      u12090 64BC                                        u12410 4B04  
                                      u12330 593E                                        u10811 6AA8  
                                      u14011 422E                                        u13131 5DA6  
                                      u13051 3984                                        u12235 6C58  
                                      u13211 15F0                                        u11531 20D4  
                                      u11451 1FF2                                        u11371 1F3E  
                                      u11291 1D8A                                        u11611 2742  
                                      u12171 315C                                        u12091 64BA  
                                      u12411 4B02                                        u12331 593C  
                                      u14100 37EE                                        u10820 6AD4  
                                      u14020 423A                                        u13140 5DB6  
                                      u13060 39B0                                        u12236 6C5A  
                                      u13300 1880                                        u13220 1646  
                                      u11460 200C                                        u11380 1F4E  
                                      u11700 2936                                        u11620 27F6  
                                      u11540 2628                                        u12180 316A  
                                      u10900 60F2                                        u12420 4B2E  
                                      u12260 669E                                        u12500 5D0A  
                                      u12340 5548                                        u14101 37EC  
                                      u10821 6AD2                                        u14021 4238  
                                      u13141 5DB4                                        u13061 39AE  
                                      u13301 187E                                        u13221 1644  
                                      u11461 200A                                        u11381 1F4C  
                                      u11701 2934                                        u11621 27F4  
                                      u11541 2626                                        u12181 3168  
                                      u10901 60F0                                        u12421 4B2C  
                                      u12261 669C                                        u12501 5D08  
                                      u12341 5546                                        u14110 3862  
                                      u14030 4280                                        u10830 6E32  
                                      u13150 5DE0                                        u13070 39DA  
                                      u13310 18C4                                        u13230 1672  
                                      u11470 2024                                        u11390 1F7C  
                                      u11710 2948                                        u11630 2818  
                                      u11550 263C                                        u12190 3176  
                                      u12430 4B42                                        u10910 6B36  
                                      u12270 66B2                                        u12510 5D42  
                                      u12350 55EC                                        u14111 3860  
                                      u14031 427E                                        u10831 6E30  
                                      u13151 5DDE                                        u13071 39D8  
                                      u13311 18C2                                        u13231 1670  
                                      u11471 2022                                        u11391 1F7A  
                                      u11711 2946                                        u11631 2816  
                                      u11551 263A                                        u12191 3174  
                                      u12431 4B40                                        u10911 6B34  
                                      u12271 66B0                                        u12511 5D40  
                                      u12351 55EA                                        u14120 6C68  
                                      u14040 428A                                        u10760 5974  
                                      u10840 6E54                                        u13080 6B98  
                                      u12360 5A18                                        u13400 1ACA  
                                      u13320 18E4                                        u13240 16A6  
                                      u13160 141C                                        u11480 205C  
                                      u11720 2960                                        u11640 2852  
                                      u11560 2648                                        u11800 217A  
                                      u12600 35A4                                        u10920 7140  
                                      u12440 4B6C                                        u12280 6910  
                                      u12520 5D56                                        _T2CON 000FBA  
                                      u14121 6C66                                        u14041 4288  
                                      u10761 5972                                        u10841 6E52  
                                      u13081 6B96                                        u12361 5A16  
                                      u13401 1AC8                                        u13321 18E2  
                                      u13241 16A4                                        u13161 141A  
                                      u11481 205A                                        u11721 295E  
                                      u11641 2850                                        u11561 2646  
                                      u11801 2178                                        u12601 35A2  
                                      u10921 713E                                        u12441 4B6A  
                                      u12281 690E                                        u12521 5D54  
                                      u14050 7128                                        u14130 6C90  
                                      u10770 5A00                                        u13090 6BAE  
                                      u10850 6D5E                                        u12370 5A3E  
                                      u13330 1910                                        u13250 1716  
                                      u13170 1430                                        u11490 2072  
                                      u11730 2978                                        u11650 2888  
                                      u11570 269A                                        u11810 218E  
                                      u10930 6FEC                                        u12610 45F6  
                                      u12530 62C0                                        u12450 4B80  
                                      u12290 6924                                        u14051 7126  
                                      u14131 6C8E                                        u10771 59FE  
                                      u13091 6BAC                                        u10851 6D5C  
                                      u12371 5A3C                                        u13331 190E  
                                      u13251 1714                                        u13171 142E  
                                      u11491 2070                                        u11731 2976  
                                      u11651 2886                                        u11571 2698  
                                      u11811 218C                                        u10931 6FEA  
                                      u12611 45F4                                        u12531 62BE  
                                      u12451 4B7E                                        u12291 6922  
                                      u14060 6E90                                        u10780 69A2  
                                      u12700 4768                                        u14140 4F3E  
                                      u10860 6EFC                                        u12380 5AAC  
                                      u13340 1980                                        u13260 1742  
                                      u13180 1466                                        u11740 29C6  
                                      u11660 28A2                                        u11580 26AE  
                                      u11900 24F6                                        u11820 219A  
                                      u10940 5BAA                                        u12620 4646  
                                      u12540 62D6                                        u12460 4BAA  
                                      u14061 6E8E                                        u10781 69A0  
                                      u12701 4766                                        u14141 4F3C  
                                      u10861 6EFA                                        u12381 5AAA  
                                      u13341 197E                                        u13261 1740  
                                      u13181 1464                                        u11741 29C4  
                                      u11661 28A0                                        u11581 26AC  
                                      u11901 24F4                                        u11821 2198  
                                      u10941 5BA8                                        u12621 4644  
                                      u12541 62D4                                        u12461 4BA8  
                                      u14070 3766                                        u10790 69AA  
                                      u12710 47C8                                        u14150 4F6A  
                                      u12390 67EA                                        u13350 1A00  
                                      u13270 17B0                                        u13190 1502  
                                      u11750 29FA                                        u11670 28C0  
                                      u11590 26BA                                        u11910 250E  
                                      u11830 21D4                                        u10870 609A  
                                      u10950 5BDA                                        u12630 4674  
                                      u12550 6328                                        u12470 4BBE  
                                      u14071 3764                                        u10791 69A8  
                                      u12711 47C6                                        u14151 4F68  
                                      u12391 67E8                                        u13351 19FE  
                                      u13271 17AE                                        u13191 1500  
                                      u11751 29F8                                        u11671 28BE  
                                      u11591 26B8                                        u11911 250C  
                                      u11831 21D2                                        u10871 6098  
                                      u10951 5BD8                                        u12631 4672  
                                      u12551 6326                                        u12471 4BBC  
                                      u14080 3794                                        u12800 3490  
                                      u12720 7070                                        u14160 4F96  
                                      u13360 1A36                                        u13280 17DC  
                                      u11760 2A2C                                        u11680 28E4  
                                      u11920 2526                                        u11840 21E2  
                                      u10880 60B6                                        u10960 5BFC  
                                      u12640 467C                                        u12480 4BE8  
                                      u12560 492A                      __end_of_sendDataCommand 49F6  
                                      _T3CON 000FB1                                        u14081 3792  
                                      u12801 348E                                        u12721 706E  
                                      u14161 4F94                                        u13361 1A34  
                                      u13281 17DA                                        u11761 2A2A  
                                      u11681 28E2                                        u11921 2524  
                                      u11841 21E0                                        u10881 60B4  
                                      u10961 5BFA                                        u12641 467A  
                                      u12481 4BE6                                        u12561 4928  
                                      u14090 37BC                                        u12810 34C8  
                                      u12730 33DC                                        u14170 4FA2  
                                      u13370 1A62                                        u13290 1810  
                                      u11690 28F6                                        u11930 2574  
                                      u11850 23FA                                        u11770 210E  
                                      u10890 60E4                                        u10970 5C14  
                                      u12650 4684                                        u12490 5CF6  
                                      u12570 493E                                        u14091 37BA  
                                      u12811 34C6                                        u12731 33DA  
                                      u14171 4FA0                                        u13371 1A60  
                                      u13291 180E                                        u11691 28F4  
                                      u11931 2572                                        u11771 210C  
                                      u10891 60E2                                        u10971 5C12  
                                      u12651 4682                                        u12491 5CF4  
                                      u12571 493C                                        u12820 3500  
                                      u12740 33F4                                        u10980 612A  
                                      u14180 4FB4                                        u12900 435E  
                                      u13380 1AA2                                        u11940 25A0  
                                      u11860 246E                                        u11780 2122  
                                      u12660 468C                                        u12580 496E  
                                      u14260 2E22                                        u12821 34FE  
                                      u12741 33EC                                        u10981 6128  
                                      u14181 4FB2                                        u12901 435C  
                                      u13381 1AA0                                        u11941 259E  
                                      u11861 246C                                        u11781 2120  
                                      u12661 468A                                        u12581 496C  
                                      u12830 353A                                        u12750 3420  
                                      u12670 4708                                        u10990 614E  
                                      u12910 43A4                                        u13390 1AC2  
                                      u11950 25DA                                        u11870 2492  
                                      u11790 212E                                        u12590 49EE  
                                      u12831 3538                                        u12751 341E  
                                      u12671 4706                                        u12911 43A2  
                                      u13391 1AC0                                        u11951 25D8  
                                      u11871 2490                                        u11855 23EE  
                                      u11791 212C                                        u12591 49EC  
                                      u14407 4C1C                                        u12840 354A  
                                      u12760 3430                                        u12680 4720  
                                      u12920 63C4                                        u11880 24A4  
                                      u11960 5700                                        u12841 3548  
                                      u12761 342E                                        u12681 4718  
                                      u12921 63C2                                        u11881 24A2  
                                      u11961 56FE                                        u14417 4C48  
                                      u12850 3558                                        u12770 343E  
                                      u12690 474C                                        u12930 63E4  
                                      u11890 24E4                                        u11970 571C  
                  ?_USBCtrlEPServiceComplete 0001                                        u12851 3556  
                                      u12771 343C                                        u12691 474A  
                                      u12931 63E2                                        u11891 24E2  
                                      u14507 6356                                        u11971 571A  
                                      u14427 4C5A                                        u12780 344E  
                                      u12748 33F8                                        u12860 42BE  
                                      u12940 6400                                        u11980 5738  
                                      u12781 344C                                        u10997 6144  
                                      u12861 42BC                                        u12941 63FE  
                                      u14517 636A                                        u11981 5736  
                                      u14437 4C6C                                        u12790 3484  
                                      u12870 42E2                                        u11990 5758  
                                      u12791 3482                                        u12871 42E0  
                                      u14607 1AE8                                        u14527 702E  
                                      u11991 5756                                        u14447 4CA0  
                                      u12688 4724                                        u12880 430E  
                                      u12881 430C                                        u14617 1AFA  
                                      u14537 35BC                                        u14457 4CB2  
                                      u14377 45C0                                        u13930 419A  
                                      u12890 4332                                        u13931 4198  
                                      u12891 4330                                        u14627 6D36  
                                      u14547 35CE                                        u14467 4CC4  
                                      u14387 4BF8                                        u13940 41A2  
                                      u13941 41A0                                        u14557 35E0  
                                      u14477 6D76                                        u14397 4C0A  
                                      u13950 41B0                                        u13951 41AE  
                                      u14567 36D6                                        u14487 0932  
                                      u13960 41D2                                        u13961 41D0  
                                      u14577 36E8                                        u14497 6342  
                                      u13970 41E6                                        u13971 41E4  
                                      u14587 36FA                                        u13980 41EE  
                                      u13981 41EC                                        u14597 1AD6  
                                      u13990 4212                                        u13991 4210  
                            __end_of___lwmod 642C                    ?_MOTEapp_setResponseReady 0001  
                        oled_putUint8@number 0078                                        i2l924 64A2  
                                      _UADDR 000F63                                        _RCREG 000FAE  
                                      _RCSTA 000FAB                                        _TMR1H 000FCF  
                                      _TMR3H 000FB3                                        _TMR1L 000FCE  
                                      _TMR3L 000FB2                                        _SPBRG 000FAF  
                                      _TRISD 000F95      moteApp_add8bToDataBuffer@bufferLocation 0066  
                                      _USTAT 000F61                                        _TXREG 000FAD  
                                      _TXSTA 000FAC                                __CFG_WRT0$OFF 000000  
         __size_of_USBCtrlEPAllowStatusStage 00E6                              __end_of_delayms 6DA0  
                              __CFG_WRT1$OFF 000000                                __CFG_WRT2$OFF 000000  
                              __CFG_WRT3$OFF 000000                               __CFG_EBTR0$OFF 000000  
                             __CFG_FCMEN$OFF 000000                               __CFG_EBTR1$OFF 000000  
                             __CFG_EBTR2$OFF 000000                               __CFG_EBTR3$OFF 000000  
            __end_of_USBCtrlEPAllowDataStage 5EB8                            oled_putChar@index 006B  
                           __end_of_TMR1_ISR 729E                                        _sd000 79B4  
                                      _sd001 796E              service_pushbutton@Release_Timer 00DC  
                                      _sd002 793A                                __CFG_WRTB$OFF 000000  
                           __end_of_TMR3_ISR 70B0                                __CFG_WRTC$OFF 000000  
                              __CFG_WRTD$OFF 000000                              _DATAEE_ReadByte 71CA  
                             __CFG_EBTRB$OFF 000000                                   i2memset@p1 0001  
                                      _n_bit 00F5                                        _light 0158  
                                      _stops 015B                               __pbitbssCOMRAM 02D0  
                    __end_of_TMR1_Initialize 6F3C                                 _runningState 00E9  
                                      pclath 000FFA                                        tablat 000FF5  
                                      plusw2 000FDB                            __end_of_CDCInitEP 6668  
                 oled_setDisplay@displayType 0061                                        status 000FD8  
                             __CFG_T3CMX$RC0 000000                              _TMR2_StartTimer 7304  
                            __end_of_strncmp 5ABC                              ___lbdiv@divisor 0060  
                             __CFG_ICPRT$OFF 000000                        ?_USBapp_setrxByteFlag 0001  
                           __end_ofi2_memset 6FA8                              ___lbdiv@counter 0062  
                               _m10SecTicker 0156                 __end_of_moteApp_getTempValue 6936  
                            putUSBUSART@data 0060           USART_mySetLineCodingHandler@dwBaud 000E  
               __size_of_USBStdSetCfgHandler 00F6                              __initialization 622A  
                      TMR2_ReadTimer@readVal 0060                __size_of_TMRapp_ClearBitFlags 0008  
                               __end_of_main 3F2A                        _control_signal_bitmap 00CD  
              __size_of_MOTEapp_handlerState 000A                       _MOTEapp_TimerBasedTask 6B8A  
                             ??_EUSART_Write 0060                      __end_of_TMR2_Initialize 7220  
                               ?_sendCommand 0061                  ?_INTERRUPT_InterruptManager 0001  
                  __size_of_USBCtrlEPService 00F0                                       ??_main 00B7  
                               ?_moduleSleep 0001                                 ?_moteHandler 0001  
           __size_of_moteApp_addToDataBuffer 0084                              _TMR3_StartTimer 7300  
                              __activetblptr 000002                              ?_USBDeviceTasks 0001  
                        i2_EUSART_Initialize 6DDE                    sendDataCommand@dataLength 0065  
                                ?_USBSuspend 0001                                   _NextUSBOut 0053  
                             __CFG_SDOMX$RB3 000000                              __CFG_CCP2MX$RC1 000000  
                               _cdc_mem_type 00CE             moteApp_convertSensorValue@string 0071  
                    __end_of_USBDeviceAttach 6C9E                                       _ADCON0 000FC2  
                                     _ADCON1 000FC1                                       _ADCON2 000FC0  
                           _CDCDataOutHandle 00BF                            _getsUSBUSART$5876 006B  
                                     _ACTCON 000FB5                                       STR_100 7B87  
                                     STR_101 7C83                                       STR_110 7C83  
                                     STR_102 7C63                                       STR_103 7C53  
                                     STR_111 7C20                                       STR_104 7C83  
                                     STR_112 7CD3                                       STR_120 7B65  
                                     STR_121 7F87                                       STR_113 7CE2  
                                     STR_105 7C42                                       STR_130 7CE2  
                                     STR_122 7FC2                                       STR_106 7ECA  
                                     STR_114 7C73                                       _ADRESH 000FC4  
                                     STR_131 7CD3                                       STR_115 7C63  
                                     STR_107 7E51                                       STR_123 7DCB  
                                     STR_132 7C63                                       STR_108 7B10  
                                     STR_124 7FE0                                       STR_140 7FCF  
                                     STR_116 7F80                                       STR_133 7C53  
                                     STR_109 7AFF                                       STR_125 7FEC  
                                     STR_141 7FD3                                       STR_117 7F79  
                                     STR_134 7C83                                       STR_126 7FE4  
                                     STR_150 7FEF                                       STR_118 7FFA  
                                     STR_142 7FD7                                       _ADRESL 000FC3  
                                     STR_127 7FE8                                       STR_143 7FDB  
                                     STR_135 7BED                                       STR_151 7BCB  
                                     STR_119 7B76                                       STR_160 7B21  
                                     STR_144 7FF3                                       STR_128 7FEF  
                                     STR_136 7E58                                       STR_152 7C93  
                                     STR_137 7C73                                       STR_129 7C73  
                                     STR_153 7FC7                                       STR_145 7FDB  
                                     STR_161 7B87                                       STR_162 7C83  
                                     STR_154 7FCB                                       STR_146 7FDF  
                                     STR_138 7FC7                                       STR_170 7DCD  
                                     STR_155 7FCF                                       STR_147 7FEB  
                                     STR_139 7FCB                                       STR_171 7DDA  
                                     STR_163 7CA3                                       STR_156 7FD3  
                                     STR_180 7F71                                       STR_148 7FE3  
                                     STR_164 7D7F                                       STR_172 7CF1  
                                     STR_157 7FD7                                       STR_181 7F69  
                                     STR_149 7FE7                                       STR_173 7F2B  
                                     STR_165 7D8C                                       _EEDATA 000FA8  
                                     STR_174 7A05                                       STR_182 7AC7  
                                     STR_158 7FDB                                       STR_166 7D99  
                                     STR_159 7FF3                                       STR_167 7DA6  
                                     STR_175 7A22                                       STR_183 79D3  
                                     STR_168 7DB3                                       STR_176 7A3C  
                                     STR_184 79B8                                       STR_169 7DC0  
                                     STR_185 7A56                                       STR_177 79EE  
                                     STR_186 7A6C                                       STR_178 7A08  
                                     STR_179 7F58                                       STR_187 7F10  
                                     STR_188 7F61                                       STR_189 7E28  
                                     _EECON2 000FA7                              getsUSBUSART@len 0069  
                                     _T1GCON 000FCC                         oled_putUint8@numData 0079  
                                     _T3GCON 000FB4                        __size_of_CDCTxService 01C8  
                                     i2l1200 00E2                                       i2l2011 588A  
                                     i2l2020 585A                      __end_of_TMR3_Initialize 70F4  
                                     i2l1142 6CDA                                       i2l1151 6D20  
                                     i2l1145 6CDE                                       i2l2018 5828  
                                     i2l1190 0072                                       i2l1192 008C  
                                     i2l1194 00A2                                       i2l1196 00B8  
                                     i2l1712 3A6E                                       i2l2603 6FA6  
                                     i2l1580 70AE                                       i2l2516 5FE4  
                                     i2l1724 3242                                       i2l1725 33C8  
                                     i2l1734 3320                                       i2l1823 4AF0  
                                     i2l1911 449C                                       i2l1735 33C6  
                                     i2l1808 418C                                       i2l1736 333A  
                                     i2l1905 673E                                       i2l1578 70A2  
                                     i2l1754 5452                                       i2l1843 4DD6  
                                     i2l1923 50AE                                       i2l1836 3CB6  
                                     i2l1940 2A9A                                       i2l1861 5462  
                                     i2l1925 4FD6                                       i2l1934 5028  
                                     i2l1790 5EB6                                       i2l1919 44D8  
                                     i2l1871 5532                                       i2l1784 5370  
                                     i2l1864 551A                                       i2l1857 405E  
                                     i2l1865 5480                                       i2l1866 5484  
                                     i2l1874 6B86                                       i2l1963 2D66  
                                     i2l1885 6F72                                       i2l1798 40EE  
                                     i2l1959 2CC0                                       i2l1895 519E  
                                     i2l8005 5E66                                       i2l8009 5E84  
                                     i2l8107 5500                                       i2l8051 4DB2  
                                     i2l8035 4D66                                       i2l7501 5F2A  
                                     i2l8141 2B6E                                       i2l8125 2A92  
                                     i2l8029 4D30                                       i2l7503 5F44  
                                     i2l8151 2BAA                                       i2l8071 3FD8  
                                     i2l8063 3F50                                       i2l8161 2C12  
                                     i2l8153 2BCC                                       i2l8145 2B7A  
                                     i2l8081 403C                                       i2l8073 3FE0  
                                     i2l8163 2C32                                       i2l8147 2B7E  
                                     i2l8139 2B30                                       i2l8059 3F3E  
                                     i2l8091 546C                                       i2l8403 412C  
                                     i2l7525 6BE8                                       i2l8085 4044  
                                     i2l8501 5042                                       _TABLAT 000FF5  
                                     i2l8431 3B94                                       i2l8167 2C4C  
                                     i2l8079 4034                                       i2l7705 5866  
                                     i2l7529 6BFC                                       i2l7545 53CA  
                                     i2l7537 5398                                       i2l8193 2D30  
                                     i2l8177 2C96                                       i2l8097 54B2  
                                     i2l8505 5066                                       i2l7803 4A62  
                                     i2l7811 4A9A                                       i2l8427 3B86  
                                     i2l7539 53B2                                       i2l7731 6436  
                                     i2l8195 2D3E                                       i2l8187 2CE8  
                                     i2l8179 2CA4                                       i2l8099 54D4  
                                     i2l7813 4AAA                                       i2l7821 4AE2  
                                     i2l8453 3C3C                                       i2l8437 3BB8  
                                     i2l7557 5432                                       i2l7733 643E  
                                     i2l8189 2D06                                       i2l7831 5F92  
                                     i2l8463 3CA2                                       i2l8439 3BC6  
                                     i2l7671 57D2                                       i2l7559 5448  
                                     i2l8383 4096                                       i2l7841 5FD4  
                                     i2l7833 5F9E                                       i2l8449 3C20  
                                     i2l7681 5806                                       i2l7665 67A0  
                                     i2l7737 644C                                       i2l7675 57E8  
                                     i2l7659 677E                                       i2l7851 6F90  
                                     i2l8491 500C                                       i2l8475 4FE0  
                                     i2l8395 410E                                       i2l8379 4088  
                                     i2l7829 5F84                                       i2l8477 4FE6  
                                     i2l7847 6F7E                                       i2l8487 4FFE  
                                     i2l8479 4FEC                                       i2l7793 4A32  
                                     i2l7697 5844                                       i2l7689 581C  
                                     i2l8489 5006                                       i2l9731 66E6  
                                     i2l7789 4A1E                                       i2l7975 52E6  
                                     i2l9753 4408                                       i2l9755 4412  
                                     i2l9739 6734                                       i2l9781 44CE  
                                     i2l9773 447E                                       i2l9783 44D2  
                                     i2l9767 445A                                    ??_EndLine 0061  
                                     _OSCCON 000FD3                                CDCTxService@i 006A  
                                     _SPBRGH 000FB0                                       _SSPBUF 000FC9  
                           __end_of___xxtofl 31F8                     i2USBTransferOnePacket@ep 0005  
                          ??i2_USBDeviceInit 0009              __size_ofi2_USBTransferOnePacket 00E2  
                       ?i2_EUSART_Initialize 0001                         oled_displayOff@state 0001  
                              oled_putChar@k 006A               __size_of_moteApp_getLightValue 006C  
              __end_of_moteApp_getLightValue 66D4                            _shortPacketStatus 004E  
             moteRunningProcess@changeStates 00B5                               __CFG_XINST$OFF 000000  
                       _moteApp_clearBuffers 4AF2                         _moteApp_clearCommand 7244  
                    _moteApp_lightStringSize 72C6                 ??_MOTEapp_SetDataRateSetting 0063  
                            USBDeviceTasks@i 001F                   __end_of_Set_Column_Address 7112  
                USBStdFeatureReqHandler@pUEP 0017                             __end_of_hexToStr 6A94  
                   USBTransferOnePacket@data 0061                   USBCtrlTrfInHandler@lastDTS 0012  
                            ??_USBDeviceInit 0068                    __size_of_Set_Page_Address 001A  
                    __end_of_TMR1_StartTimer 730C                                 ?_putUSBUSART 0060  
                                  ??___almod 0068                                    ??___fladd 0068  
                                     ___wmul 6E94                                    ??___fldiv 0095  
                                  ??___lbdiv 0061                               __CFG_STVREN$ON 000000  
                                  ??___awmod 0064                     ?_moteApp_setSensorsInput 0001  
                                  ??___flmul 007C                                    ??___fltol 0064  
                                  ??___lldiv 0009                                       _appKey 0100  
                       __end_of_getsUSBUSART 47FA                                    ??___lwmod 0064  
                          _USBEnableEndpoint 6BD2              __size_of_USBStdGetStatusHandler 00E0  
                        _EUSART_Transmit_ISR 6C9E                                       _memcpy 6AE8  
                                     _memset 6E58                                       clear_0 6268  
                                     clear_1 6274                                       clear_2 6280  
                                     clear_3 628C                                       clear_4 629A  
                                     _parity 015C                              ___awmod@divisor 0062  
                                  ??_delayms 0062                              ___awmod@counter 0064  
                         ?_USBEnableEndpoint 0009               ??_USART_mySetLineCodingHandler 000E  
                                     _status 00CC                      __end_of_DATAEE_ReadByte 71E2  
                                     _strcmp 67AA                   __end_of_ADC_TempConversion 4ECC  
              __size_of_USBTransferOnePacket 0100                             ?_sendDataCommand 0061  
                            _moteApp_delayms 6D22                  __size_of_service_pushbutton 00A8  
                               _CDCTxService 33CA                                 __mediumconst 75EE  
                                     tblptrh 000FF7                                       tblptrl 000FF6  
                                     tblptru 000FF8                          ??_USBEnableEndpoint 000A  
                                  ?_CMP1_ISR 0001                      __end_of_TMR2_StartTimer 7308  
                               _dataRateRead 00EC                                  _CtrlTrfData 000438  
                                  ??_strncmp 0066                             ___lbdiv@dividend 0061  
                              ?_oled_devInit 0001                         ?_EUSART_Transmit_ISR 0001  
                       _controlTransferState 004D                    USBapp_Handler@buttonPress 0076  
                       _USBapp_getrxByteFlag 72EE                             ?_TMR1_Initialize 0001  
                       __CFG_LS48MHZ$SYS48X8 000000          __size_of_MOTEapp_SetDataRateSetting 0184  
                               ___xxtofl@arg 006A                         __size_of_EUSART_Read 0054  
                               ___xxtofl@exp 0069                            _SYSTEM_Initialize 70B0  
                               ___xxtofl@val 0060                 __size_of_USBapp_handlerState 000A  
         moteApp_getLightValue@escapeCounter 006F                                   __accesstop 0060  
                    __end_of__initialization 62A0                       ??_USBapp_setrxByteFlag 0001  
                            __CFG_PBADEN$OFF 000000                                 ?_test_switch 0001  
                      ??i2_EUSART_Initialize 0001                              _CMP1_Initialize 7256  
                         ?_SYSTEM_Initialize 0001                           oled_writeData@data 0060  
                              ___rparam_used 000001                                ?_oled_setFont 0060  
                   __size_of_USBStallHandler 0050                                   ___fltol@f1 0060  
                              ?_oled_putChar 0062                        ?_moteApp_clearBuffers 0001  
                      ?_moteApp_clearCommand 0001                          __size_of_USBSuspend 002A  
                __size_of_EUSART_FlushBuffer 0062                                ?_oled_putint8 0076  
                             __pcstackCOMRAM 0001                    __end_of_USBEnableEndpoint 6C1A  
                           __CFG_nPWRTEN$OFF 000000                                __end_of_sd000 79B8  
                              __end_of_sd001 79A2                                __end_of_sd002 796E  
                               __pidataBANK0 72BC                                 __pidataBANK1 7310  
                        ??_SYSTEM_Initialize 0062                      __end_of_TMR3_StartTimer 7304  
                                  ?_TMR1_ISR 0001                                    ?_TMR3_ISR 0001  
           __size_of_USBCtrlEPAllowDataStage 00A8                             _DATAEE_WriteByte 6C1A  
              __size_of_USBConfigureEndpoint 00A6      __end_of_oled_setContrastControlRegister 71F8  
   __size_of_oled_setContrastControlRegister 0016             ?_oled_setContrastControlRegister 0001  
          ??_oled_setContrastControlRegister 0061              _oled_setContrastControlRegister 71E2  
                __end_of_USBCtrlTrfInHandler 44DA                             ?_TMR2_Initialize 0001  
                           ___lbdiv@quotient 0063         moteApp_setSensorsInput@escapeCounter 0065  
                     i2_USBTransferOnePacket 5372                              __CFG_PCLKEN$OFF 000000  
                             __CFG_nLPBOR$ON 000000                            __end_of_OledFont0 78F7  
                          _CDCTxService$5924 0068                                   _cdc_notice 01CD  
                                  ?i2_memset 0001                                   _cdc_rx_len 00D0  
                                 _cdc_tx_len 00CF                         _moteApp_getTempValue 68DA  
                                 ??_CMP1_ISR 0001                              _responsePortNum 01F0  
                   ??_USBCtrlTrfSetupHandler 001C                                   _dataBuffer 01BD  
                             ??_oled_devInit 0062                             ?_USBDeviceAttach 0001  
                  __end_of_SYSTEM_Initialize 70D2                        ??_EUSART_Transmit_ISR 0001  
                     _USBStdGetStatusHandler 5454                                ?_moduleResync 0001  
                      ?_USBapp_getrxByteFlag 0001                         service_pushbutton@bs 0060  
                                 __pbssBANK0 00B7                                   __pbssBANK1 0100  
                                 __pbssBANK2 0200                                   __pbssBANK3 0300  
                       __end_of_EUSART_Write 69E8                      __size_of_TMR2_ReadTimer 000C  
                           ?_TMR3_Initialize 0001                             ??_oled_putString 0075  
                oled_regulorResistorSelect@r 0061                      moduleResync@escapeEvent 0067  
                             ??_oled_setFont 0062                 ??_moteApp_convertSensorValue 0073  
                            _periodicUpValue 00FD                    ??_moteApp_lightStringSize 0060  
                __size_of_EUSART_Receive_ISR 0042                          oled_putString@index 0075  
                             ??_oled_putChar 0064                  __size_of_USBWakeFromSuspend 0038  
                                _pBDTEntryIn 003C                       __size_of_oled_clearRow 003C  
                                 _clearLight 01E6                  __end_of_moteApp_testSensors 528C  
                   sendDataCommand@byteCount 0067             __end_of_USBCtrlEPServiceComplete 418E  
           __end_of_MOTEapp_setResponseReady 72EE                               ??_oled_putint8 0078  
                     oled_putChar@start_page 0063                  __size_of_USBCheckCDCRequest 00CE  
                          __CFG_PLLSEL$PLL3X 000000                           __size_of_oled_init 0032  
                    ?_moteApp_getLightString 0060                             ??_oled_writeData 0060  
                       USBCtrlTrfRxService@i 0012                                 ?_TMRapp_Tick 0001  
                                    ?___wmul 0060                             ?_TMR1_StartTimer 0001  
                                 ??_TMR1_ISR 0001                                   ??_TMR3_ISR 0001  
                    __end_of_moteApp_delayms 6D62                                      _CM1CON0 000F98  
                    __size_of_USBapp_Handler 00F2                      __size_of_TMRapp_Handler 016C  
                                    ?_memcpy 0060                                      _BAUDCON 000FB8  
                                    ?_memset 0060                                   _device_dsc 79A2  
                  Set_Column_Address@address 0061                     __size_of_oled_displayOff 0008  
                           _USBCtrlEPService 50B0                      _moteApp_addToDataBuffer 62AE  
                __size_of_moteApp_toggleLeds 00F6                                   _ep_data_in 00BA  
                    __size_of_ADC_Initialize 001A                                      ?_strcmp 0060  
                           ?_DATAEE_ReadByte 0001                  __end_of_USBCtrlTrfRxService 3CB8  
                       __size_of_sendCommand 0038                           _USBCheckStdRequest 4FBE  
                              _eusartRxCount 0057                            _configDescriptor1 78F7  
                                    i2l11313 6D1C                                      i2l11305 6CEE  
                                    i2l11411 3396                                      i2l11413 33B8  
                                    i2l11405 3370                                      i2l11333 3236  
                                    i2l11325 321E                                      i2l11407 3386  
                                    i2l11361 32A8                                      i2l11371 32CA  
                                    i2l11355 327A                                      i2l11347 3262  
                                    i2l11613 005C                                      i2l11367 32B8  
                                    i2l10905 6B84                                      i2l11385 3310  
                                    i2l11377 32E0                                      i2l11299 6CD6  
                                    i2l10933 5166                                      i2l10925 5116  
                                    i2l11639 00D4                                      i2l10937 5180  
                                    i2l10881 6F64                                      i2l10961 3A4A  
                                    i2l10939 5188                                      i2l10883 6F68  
                                    i2l10973 3A7A                                      i2l10981 3A8E  
                                    i2l10983 3A98                                      i2l10995 3B2E  
                                    i2l10989 3AC8                                      i2l14997 6464  
                                    i2l14999 6498                                    ?___xxtofl 0060  
                                    _RS232cp 0050                              __CFG_WDTEN$SWON 000000  
                      ?_moteApp_getTempValue 0063                           __size_of_test_leds 0066  
                                 ??i2_memset 0007                           __size_of_test_oled 00AE  
                       __size_of_moduleSleep 0030                  __end_of_USBCtrlTrfTxService 4AF2  
                       __size_of_moteHandler 0288                          _USBStdSetCfgHandler 4CE2  
                                    _OSCCON2 000FD2                                      _TBLPTRH 000FF7  
                                    _TBLPTRL 000FF6                                      _TBLPTRU 000FF8  
                                    _OSCTUNE 000F9B                       __size_of_oled_putUint8 00A8  
             USBapp_LEDUpdateStatus@ledCount 0048                              __CFG_WDTPS$8192 000000  
        __size_of_moteApp_convertSensorValue 00BC                                      _SSP1ADD 000FC8  
                    __end_of_CMP1_Initialize 7268                               ??_moduleResync 0065  
                        ?_USBCheckStdRequest 0001                             ?_TMR2_StartTimer 0001  
               __size_of_USBStdGetDscHandler 0136                                      _UIEbits 000F64  
                                  ?_hexToStr 0001                        ADC_TempConversion@val 00A8  
                                    _UIRbits 000F65                       test_switch@buttonCheck 0079  
            moteRunningProcess@bufferReadPos 00B4                                      _EndLine 7278  
                              _cdc_trf_state 0055                         DATAEE_WriteByte@bAdd 0061  
                            _countBitsSilent 00C9                      __size_of_USBapp_exitCDC 0008  
                 __end_of_moteRunningProcess 13E6                       ??_moteApp_clearBuffers 0060  
                     ??_moteApp_clearCommand 0063                   ?_moteApp_add8bToDataBuffer 0066  
                                    _pCDCDst 014E                                      _pCDCSrc 0151  
                      __size_of_getsUSBUSART 0108               __end_of_moteApp_getLightString 7278  
         __end_of_MOTEapp_SetDataRateSetting 3716                   _MOTEapp_SetDataRateSetting 3592  
                                    __Hparam 0000                         ?_USBStdSetCfgHandler 0001  
                                  _CDCInitEP 65FA                      ?_MOTEapp_TimerBasedTask 0001  
                                    __Lparam 0000                   __size_of_USBEnableEndpoint 0048  
                USBapp_exitCDCState@usbState 0060                          moteHandler@s2Button 01F5  
                           _Set_Page_Address 7166                         ??_USBCheckStdRequest 001C  
               moteRunningProcess@sleepEvent 00AE                                      ___almod 42AE  
                                    ___fladd 1B5A                            _timerMinTickCount 00C3  
              __size_of_USBCtrlTrfOutHandler 006C                  __size_of_moteJoiningProcess 0774  
                                    ___fldiv 260A                                      ___lbdiv 64A4  
                                    ___awmod 56F0                                      ___flmul 20F0  
                           ?_TMR3_StartTimer 0001                                      ___fltol 3CB8  
                                    ___lldiv 5F5E                             ??_USBDeviceTasks 001F  
                            __size_of___wmul 0038                            ??_USBStallHandler 0001  
                                    ___lwmod 63B4                         oled_putint8@negative 0078  
         oled_setContrastControlRegister@mod 0061                         __size_of_putUSBUSART 0028  
                                    __pcinit 622A                           getsUSBUSART@buffer 0067  
                            __size_of_memcpy 0052                 __size_of_USBapp_exitCDCState 000A  
                            __size_of_memset 003C                    __end_of_configDescriptor1 793A  
                                    __ramtop 0800                                      _delayms 6D62  
                          hexToStr@character 0060                                      __ptext0 3DF2  
                                    __ptext1 651A                                      __ptext2 44DA  
                                    __ptext3 5ABC                                      __ptext4 6812  
                                    __ptext5 658C                                      __ptext6 4BEC  
                                    __ptext7 6D62                                      __ptext8 51A0  
                                    __ptext9 2D68                     __size_of_oled_setDisplay 0030  
                                    _inPipes 0036                  _USBDeferOUTDataStagePackets 00D1  
            __end_of_moteApp_lightStringSize 72CE                              __size_of_strcmp 0068  
                  moteRunningProcess@counter 00B3                             oled_setFont@font 0060  
                                    _countRX 00CA                                    _T1CONbits 000FCD  
                      _OSCILLATOR_Initialize 7112                                      _exitUSB 00F7  
                               ??_USBSuspend 0016                                _oled_clearRow 6E1C  
                                  _T2CONbits 000FBA              moteApp_add8bToDataBuffer@number 0069  
                                 ??___xxtofl 0064                                    _T3CONbits 000FB1  
                                 _oled_clear 714C                             ___awmod@dividend 0060  
                   ??_PIN_MANAGER_Initialize 0060                 __end_of_TMRapp_ClearBitFlags 72E6  
                               _LastRS232Out 0051                              i2_USBDeviceInit 3A02  
                           i2USBDeviceInit@i 0009                            __end_of_oled_init 6FDA  
                                    _rx_data 00CB                 __end_of_MOTEapp_handlerState 72BC  
                     ??_USBapp_getrxByteFlag 0060                           __end_of_USB_CD_Ptr 75F7  
                 moteRunningProcess@readByte 00B0                   __size_of_SYSTEM_Initialize 0022  
            __size_of_USBCtrlTrfSetupHandler 0088                                   ??_hexToStr 0060  
                                    _strncmp 5A04                         end_of_initialization 62A0  
                               _getsUSBUSART 46F2                sendDataCommand@byteCount_1623 0068  
                         __end_of_USB_SD_Ptr 75F5                                      memcpy@d 0066  
                                    memcpy@n 0064                                      memcpy@s 0068  
                        _pBDTEntryEP0OutNext 0042                                      memset@c 0062  
                                    memset@n 0064                                      memset@p 0066  
                              __Lmediumconst 75EE              _dummy_encapsulated_cmd_response 01D7  
                                  i2u1010_40 3226                                    i2u1010_41 3224  
                                  i2u1011_40 322E                                    i2u1011_41 322C  
                                  i2u1004_40 6CA8                                    i2u1020_40 32C2  
                                  i2u1012_40 323E                                    i2u1004_41 6CA6  
                                  i2u1020_41 32C0                                    i2u1012_41 323C  
                                  i2u1005_40 6CCE                                    i2u1021_40 32D2  
                                  i2u1013_40 324A                                    i2u1005_41 6CCC  
                                  i2u1021_41 32D0                                    i2u1013_41 3248  
                                  i2u1006_40 6CE8                                    i2u1030_40 3390  
                                  i2u1022_40 32DA                                    i2u1014_40 3252  
                                  i2u1006_41 6CE6                                    i2u1030_41 338E  
                                  i2u1022_41 32D8                                    i2u1014_41 3250  
   moteApp_convertSensorValue@convertedValue 0077                                    i2u1007_40 6D14  
                                  i2u1031_40 33C4                                    i2u1023_40 32E8  
                                  i2u1015_40 326A                                    i2u1007_41 6D12  
                                  i2u1031_41 33C2                                    i2u1023_41 32E6  
                                  i2u1015_41 3268                                    i2u1024_40 32F0  
                                  i2u1016_40 3272                                    i2u1008_40 3204  
                                  i2u1024_41 32EE                                    i2u1016_41 3270  
                                  i2u1008_41 3202                                    i2u1025_40 331C  
                                  i2u1017_40 3282                                    i2u1009_40 320C  
                                  i2u1025_41 331A                                    i2u1017_41 3280  
                                  i2u1009_41 320A                                    i2u1026_40 3328  
                                  i2u1018_40 328A                                    i2u1050_40 0082  
                                  i2u1026_41 3326                                    i2u1018_41 3288  
                                  i2u1050_41 0080                                    i2u1027_40 3336  
                                  i2u1019_40 32B4                                    i2u1051_40 0094  
                                  i2u1027_41 3334                                    i2u1019_41 32B2  
                                  i2u1051_41 0092                                    i2u1028_40 3342  
                                  i2u1052_40 009C                                    i2u1028_41 3340  
                                  i2u1052_41 009A                                    i2u1029_40 335A  
                                  i2u1053_40 00AA                                    i2u1045_40 004A  
                                  i2u1029_41 3358                                    i2u1053_41 00A8  
                                  i2u1045_41 0048                                    i2u1054_40 00B2  
                                  i2u1046_40 0052                                    i2u1054_41 00B0  
                                  i2u1046_41 0050                     ?_USBStdFeatureReqHandler 0001  
                                  i2u1055_40 00C0                                    i2u1047_40 0064  
                                  i2u1055_41 00BE                                    i2u1047_41 0062  
                                  i2u1056_40 00C8                                    i2u1048_40 006C  
                                  i2u1056_41 00C6                                    i2u1048_41 006A  
                                  i2u1057_40 00D0                                    i2u1049_40 007A  
                                  i2u1057_41 00CE                                    i2u1049_41 0078  
             __end_of_MOTEapp_TimerBasedTask 6BD2                            _EUSART_Initialize 6DA0  
                          _oled_powerControl 7232                                   _rxByteFlag 0054  
                      ??_USBStdSetCfgHandler 0016                              ___lldiv@divisor 0005  
                       __size_of_test_switch 010C                                   ?_CDCInitEP 0001  
                            ___lldiv@counter 000D                            __end_of_test_leds 6878  
                          __end_of_test_oled 5B6A               moteJoiningProcess@changeStates 0076  
                         ?_EUSART_Initialize 0001                           ?_oled_powerControl 0001  
                              _oled_putUint8 5C18                           __end_of_USBSuspend 7064  
             ??_USBapp_CdcEmulatorInitialize 000D                      _USBCtrlEPAllowDataStage 5E10  
                                  _RCSTAbits 000FAB                     ??_moteApp_setLightString 006C  
                         test_switch@timeout 0077                                      postdec1 000FE5  
                                    postdec2 000FDD                                      postinc0 000FEE  
                                    postinc2 000FDE                    ??_moteApp_addToDataBuffer 0074  
             moteApp_setLightString@stingPos 006C                         __end_of_oled_devInit 63B4  
                   _USBCtrlEPServiceComplete 4060                      moteApp_toggleLeds@state 0064  
                                 _responseId 0130                                   _retryCount 00E8  
                           ?_moteApp_delayms 0060                                _randomPortNum 00E7  
                   _MOTEapp_setResponseReady 72E6                                      strcmp@r 0065  
                 _USBStatusStageEnabledFlag1 00D4                   _USBStatusStageEnabledFlag2 00D3  
                              _dataRateValue 00FB                          _USBapp_handlerState 72A8  
                        ??_EUSART_Initialize 0060                          ??_oled_powerControl 0061  
                         USBEnableEndpoint@p 000A                                    _PORTAbits 000F80  
                                  _PORTBbits 000F81                                    _PORTCbits 000F82  
                    oled_putUint8@start_page 0077                               ?_oled_clearRow 0001  
                                 _test_comms 658C                       ??_moteApp_getTempValue 0065  
                       __end_of_oled_setFont 714C                                  ___fladd@grs 0073  
                         _Set_Column_Address 70F4                         __end_of_oled_putChar 5A04  
                              ___xxtofl@sign 0068                                    _TRISAbits 000F92  
                                  _TRISBbits 000F93                                    _TRISCbits 000F94  
                                  _TRISEbits 000F96                            ??_oled_displayOff 0061  
                      __size_of_EUSART_Write 0058                         __end_of_oled_putint8 5612  
                         _BothEP0OutUOWNsSet 00D5             __size_of_moteApp_setSensorsInput 00A8  
                              ?_test_powerup 0001                                  ___fldiv@grs 00A0  
                                ___fldiv@rem 009A                             ?_CMP1_Initialize 0001  
                  USBConfigureEndpoint@EPNum 0006                   ?_USBCtrlEPAllowStatusStage 0001  
                   __end_of_DATAEE_WriteByte 6C5C                          ?_Set_Column_Address 0001  
        USER_USB_CALLBACK_EVENT_HANDLER@size 0012                               _TMR2_ReadTimer 7286  
                                  _USTATcopy 0058                            __size_of_CMP1_ISR 0004  
                       ?_USBapp_handlerState 0001                           _ADC_TempConversion 4DD8  
                   oled_putString@start_page 0074                                  _CM1CON0bits 000F98  
                                ___flmul@grs 0082           __end_of_moteApp_convertSensorValue 5948  
                 _moteApp_convertSensorValue 588C                    __end_of_EUSART_Initialize 6DDE  
                  __end_of_oled_powerControl 7244                      oled_putint8@station_dot 0076  
               ??_oled_regulorResistorSelect 0061                 __end_of_USBTransferOnePacket 48FA  
                                _CM2CON1bits 000F9A                                    _TXSTAbits 000FAC  
                             ?_oled_putUint8 0076                            putUSBUSART@length 0062  
                        ?_ADC_TempConversion 0001                     ??_oled_initialDispayLine 0061  
                      _moteApp_getLightValue 6668                       _USBCtrlTrfSetupHandler 61A2  
                       ??_Set_Column_Address 0061                      ?i2_USBTransferOnePacket 0001  
                       __end_of_moduleResync 5C18                        __end_of_USBDeviceInit 3896  
                             _TMRapp_Handler 3896                               _USBapp_Handler 4ECC  
                       __size_of_TMRapp_Tick 0006          MOTEapp_getModuleResponse@bufferByte 0062  
                             __end_of___wmul 6ECC                                 _EUSART_Write 6990  
                      sendDataCommand@string 0061                      __end_ofi2_USBDeviceInit 3B60  
                          __size_of_TMR1_ISR 000C                   __end_of_service_pushbutton 5E10  
                          __size_of_TMR3_ISR 0024                               _ADC_Initialize 7180  
                moteApp_clearBuffers@counter 0060                      moteApp_GoToSleep@status 006E  
                                  i2memset@c 0003                                    i2memset@n 0005  
                                  i2memset@p 0007                               __end_of_memcpy 6B3A  
                     ?_OSCILLATOR_Initialize 0001                               __end_of_memset 6E94  
                          _USBBusIsSuspended 00D6                     oled_writeCommand@command 0060  
                             __end_of_strcmp 6812                                  ?_oled_clear 0001  
                        start_initialization 622A                         ??_ADC_TempConversion 00A6  
                    ?_USBStdGetStatusHandler 0001                USBCtrlTrfRxService@byteToRead 0013  
                             ??_test_powerup 00AD          __size_of_oled_regulorResistorSelect 0012  
            __size_of_PIN_MANAGER_Initialize 0058                            ??_oled_setDisplay 0061  
                              ??_EUSART_Read 0060                       __end_of_TMR2_ReadTimer 7292  
            __end_of_moteApp_addToDataBuffer 6332                                  _cdc_data_rx 000540  
                                _cdc_data_tx 000500                  __end_ofi2_EUSART_Initialize 6E1C  
                          __size_ofi2_memset 0034                                    _OledFont0 75F7  
               __end_of_USBConfigureEndpoint 5F5E              __end_of_USBStdFeatureReqHandler 2D68  
                   __size_of_sendDataCommand 00FC                        ??_USBapp_handlerState 0060  
            moteApp_convertSensorValue@index 0076            __end_of_USBCtrlEPAllowStatusStage 5372  
                              _periodicState 00F9                               _USBapp_exitCDC 72D6  
                   __end_of_USBCtrlEPService 51A0         __end_of_USART_mySetLineCodingHandler 6990  
      __size_of_USART_mySetLineCodingHandler 005A                 _USART_mySetLineCodingHandler 6936  
                 __end_of_EUSART_FlushBuffer 68DA                          DATAEE_ReadByte@bAdd 0060  
              __size_of_USBapp_setrxByteFlag 0006                                _moteModeState 00EE  
                  ??_USBCtrlEPAllowDataStage 0002                                  ??_CDCInitEP 000D  
                             USBDeviceInit@i 0068                           _periodicTimerValue 00FC  
                     _pBDTEntryEP0OutCurrent 0044                     __size_of_TMR1_Initialize 0038  
                    USBTransferOnePacket@dir 0060                      USBTransferOnePacket@len 0063  
                     __end_of_USBapp_Handler 4FBE                       __end_of_TMRapp_Handler 3A02  
             __end_ofi2_USBTransferOnePacket 5454                         _TMRapp_ClearBitFlags 72DE  
                                   ??___wmul 0064              __size_of_moteApp_setLightString 0094  
                        _USBStdGetDscHandler 3F2A                         _MOTEapp_handlerState 72B2  
                     __end_of_ADC_Initialize 719A                                  __pdataBANK0 00F6  
                                __pdataBANK1 01F8                                     ??_memcpy 0066  
                                   ??_memset 0066                              ??_oled_clearRow 006C  
            MOTEapp_TimerBasedTask@timerTask 0060                          _moduleResonseBuffer 015D  
                                   ??_strcmp 0064                                  ?_test_comms 0001  
                  oled_putString@station_dot 0073                                    ___fladd@a 0064  
                                  ___fladd@b 0060                       _USBActiveConfiguration 0059  
             __end_of_USBStdGetStatusHandler 5534                                    ___fldiv@a 0091  
                                  ___fldiv@b 008D                  __end_of_EUSART_Transmit_ISR 6CE0  
                                  ___flmul@a 0078                                    ___flmul@b 0074  
                                __pbssCOMRAM 002E                   service_pushbutton@PB_Timer 014A  
                              __pcstackBANK0 0060                                __pcstackBANK1 01F3  
               __size_of_USBCtrlTrfInHandler 010E                     __size_of_TMR2_Initialize 0014  
                   __end_of_Set_Page_Address 7180                            __size_of___xxtofl 0208  
                            ?_TMR2_ReadTimer 0001                                  _activeState 00EB  
                       ?_USBStdGetDscHandler 0001                       __end_of_USBapp_exitCDC 72DE  
         __size_of_MOTEapp_getModuleResponse 0090                   ?_MOTEapp_getModuleResponse 0001  
                  ADC_TempConversion@tempRaw 00A6                   __end_of_EUSART_Receive_ISR 6D22  
             moteRunningProcess@messageReady 00AD                                     ?_EndLine 0001  
                        _USBapp_exitCDCState 729E                   __end_of_USBWakeFromSuspend 6F74  
                 __size_of_EUSART_Initialize 003E                   __size_of_oled_powerControl 0012  
                          __size_of_hexToStr 0054                              _USBStallHandler 6B3A  
                               _pBDTEntryOut 0140                          __end_of_EUSART_Read 6AE8  
                 __end_of_USBCheckCDCRequest 588C                              ??_oled_putUint8 0078  
                       oled_putString@string 0071                     __size_of_USBDeviceAttach 0042  
                                  _appDevEui 0120                  ??_moteApp_add8bToDataBuffer 0067  
                          _oled_writeCommand 71B2                        __size_of_oled_devInit 0082  
                    oled_putChar@station_dot 0062                  ?_MOTEapp_SetDataRateSetting 0001  
                     _PIN_MANAGER_Initialize 69E8                       ?_moteApp_getLightValue 006D  
                        __size_of_oled_clear 001A                        ?_TMRapp_ClearBitFlags 0001  
                            _messageReceived 00E6                     __size_of_TMR3_Initialize 0022  
                       EUSART_Read@readValue 0060              __size_of_oled_initialDispayLine 0014  
                            ?_TMRapp_Handler 0001                              ?_USBapp_Handler 0001  
                                  __pintcode 0008                           ?_oled_writeCommand 0001  
                              __pmediumconst 75EE                                     ?___almod 0060  
                                   ?___fladd 0060                        ?_MOTEapp_handlerState 0001  
                                   ?___fldiv 008D                                    __ptext100 7180  
                                  __ptext101 72B2                                     ?___lbdiv 0060  
                                  __ptext110 50B0                                    __ptext102 71CA  
                                  __ptext111 61A2                                    __ptext120 642C  
                                  __ptext112 4060                                    __ptext104 72F4  
                                  __ptext121 6740                                    __ptext113 5E10  
                                  __ptext105 31F8                                    __ptext130 43CC  
                                  __ptext122 65FA                                    __ptext114 4FBE  
                                  __ptext106 3A02                                    __ptext131 49F6  
                                  __ptext123 5372                                    __ptext115 4CE2  
                                  __ptext107 6F3C                                    __ptext140 730C  
                                  __ptext132 6936                                    __ptext124 6BD2  
                                  __ptext116 6F74                                    __ptext108 703A  
                                  __ptext141 0000                                    __ptext133 6DDE  
                                  __ptext125 5EB8                                    __ptext117 5454  
                                  __ptext109 6B3A                                    __ptext134 5F5E  
                                  __ptext126 57BE                                    __ptext118 3F2A  
                                  __ptext135 72FA                                    __ptext127 66D4  
                                  __ptext119 2A5E                                    __ptext136 708C  
                                  __ptext128 3B60                                    __ptext137 7292  
                                  __ptext129 528C                                    __ptext138 6C9E  
                                  __ptext139 6CE0                                     ?___awmod 0060  
                                   ?___flmul 0074                                     ?___fltol 0060  
                 __end_of_moteApp_toggleLeds 4CE2                                     ?___lldiv 0001  
                                   ?___lwmod 0060                              ?_ADC_Initialize 0001  
                      __size_of_oled_setFont 001C                                 _eusartRxHead 00D9  
                              ??_sendCommand 0063            moteApp_getTempValue@escapeCounter 0065  
                               _eusartTxHead 00DB                                 _eusartRxTail 00D8  
               __size_of_moteApp_testSensors 00EC                                 _eusartTxTail 00DA  
                       ?_USBapp_exitCDCState 0001                        __size_of_oled_putChar 00BC  
                         _moteRunningProcess 0122                            _moduleBufferIndex 0056  
                                   ?_delayms 0060                                    _buffer_rx 0300  
               ??_INTERRUPT_InterruptManager 0020                             ___almod@dividend 0060  
                           ?i2_USBDeviceInit 0001                       moteHandler@readMessage 01F7  
                        ??_oled_writeCommand 0060                                ??_moduleSleep 0063  
                              ??_moteHandler 00B6                        __size_of_oled_putint8 00DE  
                    _eusartTxBufferRemaining 004F                         _USBTransferOnePacket 47FA  
                                  _mainState 00F0                     __size_of_TMR1_StartTimer 0004  
                    _moteApp_setSensorsInput 5CC0                       moteHandler@buttonPress 01F6  
                        ?_moteRunningProcess 00AC                 __end_of_USBCtrlTrfOutHandler 6740  
                                  _minTicker 00E4                        ??_USBStdGetDscHandler 0001  
                                   _CMP1_ISR 730C                       _moteApp_setLightString 5FF6  
                                _ep_data_out 00B7                 __size_of_USBCtrlTrfRxService 0158  
                                  _secTicker 00E5                              ?_USBapp_exitCDC 0001  
              USBConfigureEndpoint@direction 0001                     __size_of_DATAEE_ReadByte 0018  
                                   ?_strncmp 0060                          oled_putint8@numData 0079  
                   ?_moteApp_lightStringSize 0001                                 _oled_devInit 6332  
         __end_of_oled_regulorResistorSelect 7232                   _oled_regulorResistorSelect 7220  
                             _eusartRxBuffer 0200                moteApp_addToDataBuffer@string 0071  
                          _dataRateSelection 00F8                             _timerMsTickCount 00C5  
                                  _oled_init 6FA8                 __size_of_USBCtrlTrfTxService 00FC  
          __end_of_MOTEapp_getModuleResponse 611A                               _eusartTxBuffer 0240  
                             ___wmul@product 0064                                     _IOCBbits 000F86  
                                   _LATAbits 000F89                                     _IOCCbits 000F87  
                  __end_of_oled_writeCommand 71CA                                     _LATBbits 000F8A  
                                   _LATCbits 000F8B                                     _LATEbits 000F8D  
                 ??_USBCtrlEPServiceComplete 0002                   ??_MOTEapp_setResponseReady 0060  
                                   _PIE1bits 000F9D                                     _IPR3bits 000FA5  
                                   _PIE2bits 000FA0                                     _PIE3bits 000FA3  
                        __size_of_test_comms 006E                     __size_of_TMR2_StartTimer 0004  
                               _oled_setFont 7130                                    _moteState 00FE  
                          ??_sendDataCommand 0066                                _operationType 00F1  
                      __size_of_moduleResync 00AE                         ??_moteRunningProcess 00AF  
                 __end_of_moteJoiningProcess 1B5A          __size_of_INTERRUPT_InterruptManager 0116  
                               _oled_putChar 5948                                     i2u600_40 3F5C  
                                   i2u600_41 3F5A                                     i2u601_40 3FA6  
                                   _PIR1bits 000F9E                                     i2u601_47 3F9C  
                                   i2u610_40 2A6A                                     i2u602_40 3FD4  
                                   i2u610_41 2A68                                     i2u602_47 3FCA  
                                   i2u611_40 2A7A                                     i2u603_40 3FEC  
                                   i2u611_41 2A78                                     i2u603_41 3FEA  
                                   _PIR2bits 000FA1                __size_of_moteApp_clearBuffers 00FA  
                                   i2u620_40 2B88                                     i2u612_40 2A8A  
                                   i2u604_40 402A                __size_of_moteApp_clearCommand 0012  
                                   i2u620_41 2B86                                     i2u612_41 2A88  
                                   i2u604_47 4020                                     i2u461_40 7096  
                                   i2u621_40 2BDA                                     i2u613_40 2AA6  
                                   i2u605_40 5478                                     i2u461_41 7094  
                                   i2u621_41 2BD8                                     i2u613_41 2AA4  
                                   i2u605_41 5476                                     _PIR3bits 000FA4  
                                   i2u550_40 6BF0                                     i2u622_40 2BEA  
                                   i2u614_40 2AB6                                     i2u606_40 5490  
                                   i2u550_41 6BEE                                     i2u622_41 2BE8  
                                   i2u614_41 2AB4                                     i2u606_41 548E  
                                   i2u551_40 537E                                     i2u623_40 2BF4  
                                   i2u615_40 2AC6                                     i2u607_40 54E4  
                                   i2u551_41 537C                                     i2u623_41 2BF2  
                                   i2u615_41 2AC4                                     i2u607_41 54E2  
                                   i2u552_40 53BE                                     i2u560_40 679E  
                                   i2u624_40 2C60                                     i2u616_40 2AD8  
                                   i2u608_40 54F4                                     i2u552_41 53BC  
                                   i2u560_41 679C                                     i2u624_41 2C5E  
                                   i2u616_41 2AD6                                     i2u608_41 54F2  
                                   i2u561_40 57CE                                     i2u553_40 541C  
                                   i2u625_40 2CB0                                     i2u617_40 2AE6  
                                   i2u609_40 5522                                     i2u561_41 57CC  
                                   i2u553_41 541A                                     i2u625_41 2CAE  
                                   i2u617_41 2AE4                                     i2u609_41 5520  
                                   i2u570_40 4A18                                     i2u562_40 57E4  
                                   i2u626_40 2CC0                                     i2u618_40 2AF2  
                                   i2u650_40 4072                                     i2u570_41 4A16  
                                   i2u562_41 57E2                                     i2u626_41 2CBE  
                                   i2u618_41 2AF0                                     i2u650_41 4070  
                                   i2u571_40 4A28                                     i2u563_40 57F4  
                                   i2u627_40 2CCA                                     i2u619_40 2B76  
                                   i2u651_40 4082                                     i2u571_41 4A26  
                                   i2u563_41 57F2                                     i2u627_41 2CC8  
                                   i2u619_41 2B74                                     i2u651_41 4080  
                                   i2u572_40 4A5E                                     i2u660_40 3C84  
                                   i2u564_40 5800                                     i2u548_40 5F10  
                                   i2u580_40 6FA4                                     i2u652_40 40F8  
                                   i2u572_41 4A5C                                     i2u660_41 3C82  
                                   i2u564_41 57FE                                     i2u548_41 5F0E  
                                   i2u580_41 6FA2                                     i2u652_41 40F6  
                                   i2u573_40 4A8A                                     i2u549_40 6BDC  
                                   i2u653_40 4108                                     i2u549_41 6BDA  
                                   i2u653_41 4106                                     i2u573_47 4A80  
                                   i2u574_40 4AA4                                     i2u590_40 5298  
                                   i2u662_40 3CAE                                     i2u661_48 3C8C  
                                   i2u654_40 4124                                     i2u574_41 4AA2  
                                   i2u590_41 5296                                     i2u662_41 3CAC  
                                   i2u661_49 3CA0                                     i2u654_41 4122  
                                   i2u575_40 4AD2                                     i2u591_40 52AA  
                                   i2u559_40 677A                                     i2u663_40 4FD0  
                                   i2u655_40 4182                                     i2u591_41 52A8  
                                   i2u559_41 6778                                     i2u663_41 4FCE  
                                   i2u655_41 4180                                     i2u575_47 4AC8  
                                   i2u576_40 4AEC                                     i2u840_40 4440  
                                   i2u592_40 52BC                                     i2u656_40 3B80  
                  USBCtrlEPService@setup_cnt 001E                                     i2u576_41 4AEA  
                                   i2u840_41 443E                                     i2u592_41 52BA  
                                   i2u656_41 3B7E                                     i2u577_40 5F7E  
                                   i2u569_40 4A0A                                     i2u841_40 4464  
                                   i2u593_40 52F0                                     i2u657_40 3BC4  
                                   i2u649_40 406A                                     i2u577_41 5F7C  
                                   i2u569_41 4A08                                     i2u841_41 4462  
                                   i2u593_41 52EE                                     i2u657_41 3BC2  
                                   i2u649_41 4068                                     i2u578_40 5F9A  
                                   i2u842_40 44A4                                     i2u658_40 3BD2  
                                   i2u594_40 5E28                                     i2u578_41 5F98  
                                   i2u842_41 44A2                                     i2u658_41 3BD0  
                                   i2u594_41 5E26                                     i2u579_40 5FC0  
                                   i2u843_40 44B0                                     i2u659_40 3C06  
                                   i2u835_40 66E0                                     i2u595_40 5E7A  
                                   i2u579_41 5FBE                                     i2u843_41 44AE  
                                   i2u659_41 3C04                                     i2u835_41 66DE  
                                   i2u595_41 5E78                                     i2u836_40 66F6  
                                   i2u596_40 4D2C                                     i2u836_41 66F4  
                                   i2u596_41 4D2A                                     i2u844_48 44B8  
                                   i2u837_40 43EE                                     i2u597_40 4D64  
                                   i2u844_49 44CC                                     i2u837_41 43EC  
                                   i2u597_41 4D62                                     i2u838_40 4400  
                                   i2u598_40 4DAA                                     i2u838_41 43FE  
                                   i2u598_41 4DA8                                     i2u839_40 441C  
                                   i2u599_40 3F38                                     i2u839_41 441A  
                                   i2u599_41 3F36                                     i2u970_40 50C4  
                                   i2u970_41 50C2                                     i2u971_40 5104  
                                   i2u971_41 5102                                     i2u972_40 5112  
                                   i2u972_41 5110                                     i2u973_40 5164  
                                   i2u973_41 5162                                     i2u974_40 5196  
                                   i2u966_40 6F70                                     i2u974_41 5194  
                                   i2u966_41 6F6E                                     i2u967_40 6B42  
                                   i2u975_40 3A46                                     i2u967_41 6B40  
                                   i2u975_41 3A44                                     _RCONbits 000FD0  
                       __end_of_test_powerup 658C                                     i2u968_40 6B56  
                                   i2u976_40 3A6E                                     i2u968_41 6B54  
                                   i2u976_41 3A6C                                 _oled_putint8 5534  
                                   i2u969_40 6B6A                                     i2u977_40 3A96  
                                   i2u969_41 6B68                                     i2u977_41 3A94  
                                   i2u978_40 3AC4                                     i2u978_41 3AC2  
                                   i2u979_40 3B2C                                     i2u979_41 3B2A  
                              ??_putUSBUSART 0063                                     _UEP0bits 000F6A  
                 _USBDeferINDataStagePackets 00D2                                     _SSP1CON1 000FC6  
                __size_of_USBCheckStdRequest 00F2                                     _TMR1_ISR 7292  
                    __size_of_oled_putString 0088                                     _TMR3_ISR 708C  
                                   _SSP1STAT 000FC7                                     _UCONbits 000F60  
                            _oled_displayOff 72CE                                    _test_leds 6812  
                                   _VREFCON0 000F7D               moteRunningProcess@selectButton 00AC  
                       _USBConfigureEndpoint 5EB8                                    _test_oled 5ABC  
                      ??_USBapp_exitCDCState 0060             __size_of_USBStdFeatureReqHandler 030A  
                          ??_TMR1_Initialize 0060                                   _ADCON0bits 000FC2  
                    Set_Page_Address@address 0061                            ___wmul@multiplier 0060  
                      ?_USBTransferOnePacket 0060          moteRunningProcess@sizeOfUpdate_1493 00B2  
                     ADC_TempConversion@temp 00A7                       oled_putint8@start_page 0077  
                  _moteApp_add8bToDataBuffer 5612                      __size_of_oled_writeData 0018  
                              ?_CDCTxService 0001                     __size_of_TMR3_StartTimer 0004  
                   moteHandler@gotoNextState 01F4                                 _RemoteWakeup 00D7  
                        __end_of_sendCommand 6F04                                     i2_memset 6F74  
                          __CFG_CFGPLLEN$OFF 000000                       _oled_initialDispayLine 71F8  
                      DATAEE_WriteByte@bData 0060                           _RS232_Out_Data_Rdy 0052  
          moteApp_setLightString@lightString 006A                      __end_of_USBStallHandler 6B8A  
                        __end_of_moduleSleep 703A                          __end_of_moteHandler 2FF0  
                                _EUSART_Read 6A94                            _moteApp_GoToSleep 45E6  
                                _INTCON3bits 000FF0                                    copy_data0 6256  
                ??_USBCtrlEPAllowStatusStage 0001        moteApp_addToDataBuffer@bufferLocation 0073  
                               _moduleResync 5B6A                  __end_of_USBStdSetCfgHandler 4DD8  
                          ?_DATAEE_WriteByte 0060                __size_of_USBapp_getrxByteFlag 0006  
                         ?_moteApp_GoToSleep 0001                                   ?_oled_init 0001  
                          ??_TMR2_Initialize 0060                                ??_test_switch 0076  
MOTEapp_getModuleResponse@terminatorReceived 0061                  ?_moteApp_convertSensorValue 0071  
                           __size_of_EndLine 000E                           ??_DATAEE_WriteByte 0061  
                         __end_of_device_dsc 79B4                                   _EECON1bits 000FA6  
                    ?_USBCtrlTrfSetupHandler 0001                USBapp_CdcEmulatorInitialize@i 000D  
                     ??_TMRapp_ClearBitFlags 0060                      USBStdGetStatusHandler@p 0002  
                                   __Hrparam 0000                          ??_moteApp_GoToSleep 006E  
                                   __Lrparam 0000                       USBTransferOnePacket@ep 0064  
                     ??_MOTEapp_handlerState 0060                           __CFG_BOREN$SBORDIS 000000  
                                   _SetupPkt 000430                      ??_OSCILLATOR_Initialize 0060  
                      ?_USBConfigureEndpoint 0001                             __size_of___almod 011E  
                           __size_of___fladd 0596                            ??_USBDeviceAttach 0060  
                                 ?_test_leds 0001                             __size_of___fldiv 0454  
                           __size_of___lbdiv 0076                                   ?_test_oled 0001  
                           __size_of___awmod 00CE                             __size_of___flmul 051A  
                           __size_of___fltol 013A                   oled_initialDispayLine@line 0061  
             moteJoiningProcess@readDataRate 0079                                 _selectedFont 01F8  
                           __size_of___lldiv 0098                              _oled_setDisplay 6FDA  
           moteApp_clearBuffers@counter_1710 0061             moteApp_clearBuffers@counter_1711 0062  
           moteApp_clearBuffers@counter_1712 0063                             __size_of___lwmod 0078  
                  MOTEapp_handlerState@state 0060                            ??_TMR3_Initialize 0060  
                  ??_moteApp_setSensorsInput 0065                             __size_of_delayms 003E  
                                 _ANSELAbits 000F5B                          __end_of_putUSBUSART 708C  
                                _line_coding 01DF                                   _ANSELCbits 000F5D  
                             ??_CDCTxService 0067                                _responseReady 00EA  
                               ??_oled_clear 006E                                     ___xxtofl 2FF0  
                                _menuTimeout 00FA                     __size_of_moteApp_delayms 0040  
                  __end_of_moteApp_GoToSleep 46F2                __size_of_moteApp_getTempValue 005C  
                    __size_of_USBDeviceTasks 01D2                                     _appTimer 00F2  
                                   _appState 00EF                                     __ptext10 0122  
                                   __ptext11 48FA                                     __ptext20 6AE8  
                                   __ptext12 6A40                                     __ptext21 7268  
                                   __ptext13 5534                                   _T1GCONbits 000FCC  
                                   __ptext30 6FA8                                     __ptext22 588C  
                                   __ptext14 5C18                                     __ptext31 7130  
                                   __ptext23 6E94                                     __ptext15 5CC0  
                                   __ptext40 5B6A                                     __ptext32 6FDA  
                                   __ptext24 4AF2                                     __ptext16 72C6  
                                   __ptext41 608A                                     __ptext33 6332  
                                   __ptext25 62AE                                     __ptext17 68DA  
                                   __ptext50 1B5A                                     __ptext42 6878  
                                   __ptext34 71E2                                     __ptext26 5612  
                                   __ptext18 6668                                     __ptext51 13E6  
                                   __ptext43 7286                                     __ptext35 7220  
                                   __ptext27 64A4                                     __ptext19 5FF6  
                                   __ptext60 42AE                                     __ptext52 5A04  
                                   __ptext44 3592                                     __ptext36 7232  
                                   __ptext28 56F0                                     __ptext61 72DE  
                                   __ptext53 67AA                                     __ptext45 4DD8  
                                   __ptext37 71F8                                     __ptext29 45E6  
                                   __ptext70 714C                                     __ptext62 6B8A  
                                   __ptext54 6D22                                     __ptext46 2FF0  
                                   __ptext38 72CE                                     __ptext71 6E1C  
                                   __ptext63 7244                                     __ptext55 6C1A  
                                   __ptext47 3CB8                                     __ptext39 700A  
                                   __ptext80 72EE                                     __ptext72 5948  
                                   __ptext64 6ECC                                     __ptext56 729E  
                                   __ptext48 20F0                                     __ptext81 72E6  
                                   __ptext73 719A                                     __ptext65 7278  
                                   __ptext57 72D6                                     __ptext49 260A  
                                   __ptext90 70D2                                     __ptext82 6990  
                                   __ptext74 7166                                     __ptext66 72A8  
                                   __ptext58 3896                                     __ptext91 7300  
                                   __ptext83 6A94                                     __ptext75 70F4  
                                   __ptext67 4ECC                                     __ptext59 63B4  
                                   __ptext92 720C                                     __ptext84 33CA  
                                   __ptext76 71B2                                     __ptext68 5D68  
                                   __ptext93 7304                                     __ptext85 47FA  
                                   __ptext77 418E                                     __ptext69 611A  
                                   __ptext94 6F04                                     __ptext86 3716  
                                   __ptext78 7064                                     __ptext95 7308  
                                   __ptext87 6E58                                     __ptext79 46F2  
                                   __ptext96 69E8                                     __ptext88 6C5C  
                                   __ptext97 7112                                     __ptext89 70B0  
                                   __ptext98 6DA0                                     __ptext99 7256  
       __end_of_USBapp_CdcEmulatorInitialize 67AA        __size_of_USBapp_CdcEmulatorInitialize 006A  
               _USBapp_CdcEmulatorInitialize 6740                                 _SSP1CON1bits 000FC6  
                                   _dotCount 00E1                                     _hexToStr 6A40  
                         _service_pushbutton 5D68                              ___almod@divisor 0064  
                          ??_TMR1_StartTimer 0060                              ___almod@counter 0068  
                                 _T3GCONbits 000FB4                  DATAEE_WriteByte@GIEBitValue 0062  
                   ??_moteApp_getLightString 0062                                  _OSCCON2bits 000FD2  
                           __size_of_strncmp 00B8               __end_of_USBCtrlTrfSetupHandler 622A  
                              __size_of_main 0138                            ?_USBCtrlEPService 0001  
                 __size_of_oled_writeCommand 0018                               _Contrast_level 00F6  
                                   _rnModule 00E2                           oled_putint8@number 007F  
                                 strncmp@len 0064                          ?_service_pushbutton 0001  
                          ??_DATAEE_ReadByte 0060                     __size_of_CMP1_Initialize 0012  
                   ?_moteApp_addToDataBuffer 0071                      __end_of_oled_displayOff 72D6  
                         ??_USBCtrlEPService 001C                    moduleResync@escapeCounter 0065  
                                   delayms@i 0063                                     delayms@t 0060  
                        _USBCtrlTrfInHandler 43CC                                ??_TMRapp_Tick 0001  
                           _dataRatePosition 00E0                           __end_of_oled_clear 7166  
                        __end_of_test_switch 45E6                                     _outPipes 002E  
                       _USBCtrlTrfOutHandler 66D4                                     int$flags 005B  
                                   _usbState 00DD                    _USBCtrlEPAllowStatusStage 528C  
                __size_of_Set_Column_Address 001E                            ??_TMR2_StartTimer 0060  
         __end_of_INTERRUPT_InterruptManager 011E                   _INTERRUPT_InterruptManager 0008  
             moteRunningProcess@sizeOfUpdate 00B1                                 _SSP1STATbits 000FC7  
                                _sendCommand 6ECC                       ??_USBTransferOnePacket 0064  
                         oled_clearRow@index 006D                           _EUSART_FlushBuffer 6878  
                               ??_test_comms 0076                 __end_of_USBapp_setrxByteFlag 72FA  
                                _moduleSleep 700A                                  _moteHandler 2D68  
                           ??_TMR2_ReadTimer 0060                         ??_service_pushbutton 0060  
                  _USBDeferStatusStagePacket 004A                     CDCTxService@byte_to_send 006B  
                                 _INTCONbits 000FF2                  __end_of_USBapp_handlerState 72B2  
                       ?_USBCtrlTrfInHandler 0001                          ?_EUSART_FlushBuffer 0001  
                                   memcpy@d1 0060                  __size_of_ADC_TempConversion 00F4  
                                   memcpy@s1 0062                USBCtrlTrfTxService@byteToSend 0001  
                                   memset@p1 0060                             ?_USBStallHandler 0001  
                   USBStdFeatureReqHandler@p 001A                            ?_Set_Page_Address 0001  
                   ??_MOTEapp_TimerBasedTask 0060                                 _responseData 019D  
                          ??_TMR3_StartTimer 0060                ?_USBapp_CdcEmulatorInitialize 0001  
                                   intlevel2 0000                          _moteApp_testSensors 51A0  
                                ??_oled_init 006E                  ??_MOTEapp_getModuleResponse 0061  
                         ??_Set_Page_Address 0061                       __size_of_USBDeviceInit 0180  
                       oled_powerControl@vol 0061      __end_of_USER_USB_CALLBACK_EVENT_HANDLER 64A4  
   __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0078            ??_USER_USB_CALLBACK_EVENT_HANDLER 0014  
           ?_USER_USB_CALLBACK_EVENT_HANDLER 000E              _USER_USB_CALLBACK_EVENT_HANDLER 642C  
             moteJoiningProcess@messageReady 007B              __end_of_moteApp_setSensorsInput 5D68  
                           ___lwmod@dividend 0060                 i2USBTransferOnePacket@handle 0006  
                               _VREFCON0bits 000F7D                             ___lldiv@dividend 0001  
                    ?_PIN_MANAGER_Initialize 0001                      ??_moteApp_getLightValue 006F  
                           ??_USBapp_Handler 0076                             ??_TMRapp_Handler 006A  
                      __size_of_test_powerup 0072                         moteHandler@gotoSleep 01F3  
               __size_ofi2_EUSART_Initialize 003E                                    strncmp@s1 0060  
                                  strncmp@s2 0062                             ??_ADC_Initialize 0060  
                         __end_of_test_comms 65FA                         ??_EUSART_FlushBuffer 0060  
                    __end_of_oled_setDisplay 700A                   i2USBTransferOnePacket@data 0002  
                                _sleepTicker 00E3                       ??_USBConfigureEndpoint 0002  
                      ?_USBCtrlTrfOutHandler 0001                               _oled_putString 611A  
                                _putUSBUSART 7064                           _EUSART_Receive_ISR 6CE0  
                          oled_clearRow@page 006C                         __CFG_CPUDIV$NOCLKDIV 000000  
                        _USBCtrlTrfRxService 3B60                           _USBWakeFromSuspend 6F3C  
                                ??_test_leds 0076                                _powerOnStatus 00ED  
                                ??_test_oled 0076                      _USBStdFeatureReqHandler 2A5E  
                       ?_moteApp_testSensors 0001      __end_of_USBapp_DeviceCdcEmulatorHandler 42AE  
   __size_of_USBapp_DeviceCdcEmulatorHandler 0120             ?_USBapp_DeviceCdcEmulatorHandler 0001  
          ??_USBapp_DeviceCdcEmulatorHandler 006D              _USBapp_DeviceCdcEmulatorHandler 418E  
                         _USBCheckCDCRequest 57BE                          _USBCtrlTrfTxService 49F6  
                        __end_of_TMRapp_Tick 7300                        __end_of_oled_clearRow 6E58  
                                _temperature 00C7                          ?_EUSART_Receive_ISR 0001  
                             _oled_writeData 719A                          ?_USBWakeFromSuspend 0001  
                                   strcmp@s1 0060                                     strcmp@s2 0062  
                    ?_moteApp_setLightString 006A                             ___lldiv@quotient 0009  
                            ___lwmod@divisor 0062                             ??_USBapp_exitCDC 0060  
                      ??_USBCtrlTrfInHandler 0012                        _USBAlternateInterface 00F3  
                            ___lwmod@counter 0064                          ?_USBCheckCDCRequest 0001  
                 __size_of_moteApp_GoToSleep 010C                    i2USBTransferOnePacket@dir 0001  
                         _moteApp_toggleLeds 4BEC                    i2USBTransferOnePacket@len 0004  
                        USBEnableEndpoint@ep 000C                              _endpoint_number 004C  
                                 _WDTCONbits 000FD1                                 _test_powerup 651A  
                            _sendDataCommand 48FA                         ?_USBCtrlTrfRxService 0001  
                              ___fladd@signs 0070                                ?_getsUSBUSART 0067  
                   oled_putUint8@station_dot 0076                           __CFG_FOSC$INTOSCIO 000000  
                         EUSART_Write@txData 0060                 __size_of_EUSART_Transmit_ISR 0042  
             __end_of_PIN_MANAGER_Initialize 6A40                     ?_USBCtrlEPAllowDataStage 0001  
         __size_of_moteApp_add8bToDataBuffer 00DE                                 ___almod@sign 0069  
                       ?_USBCtrlTrfTxService 0001                            ??_moteApp_delayms 0062  
            __size_of_moteApp_getLightString 0010                  ?_oled_regulorResistorSelect 0001  
                        ?_moteApp_toggleLeds 0001                                 ___fladd@aexp 0071  
                               ___fladd@bexp 0072                 _USBStatusStageTimeoutCounter 004B  
                                _test_switch 44DA                         ??_EUSART_Receive_ISR 0001  
                       ??_USBWakeFromSuspend 0016                   USBTransferOnePacket@handle 0065  
                       __end_of_CDCTxService 3592                              _TMR1_Initialize 6F04  
          moteJoiningProcess@joiningComplete 007A                             ?_oled_displayOff 0001  
                      __end_of_oled_putUint8 5CC0                       __end_of_oled_putString 61A2  
                       ??_USBCheckCDCRequest 0001                                   _USB_CD_Ptr 75F5  
