

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Mar 31 22:01:18 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1
   157                           	psect	text135,global,reloc=2,class=CODE,delta=1
   158                           	psect	text136,global,reloc=2,class=CODE,delta=1
   159                           	psect	text137,global,reloc=2,class=CODE,delta=1
   160                           	psect	text138,global,reloc=2,class=CODE,delta=1
   161                           	psect	text139,global,reloc=2,class=CODE,delta=1
   162                           	psect	text140,global,reloc=2,class=CODE,delta=1
   163                           	psect	text141,global,reloc=2,class=CODE,delta=1
   164                           	psect	text142,global,reloc=2,class=CODE,delta=1
   165                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=1
   166                           	psect	text144,global,reloc=2,class=CODE,delta=1
   167                           	psect	text145,global,reloc=2,class=CODE,delta=1
   168                           	psect	text146,global,reloc=2,class=CODE,delta=1
   169                           	psect	text147,global,reloc=2,class=CODE,delta=1
   170                           	psect	text148,global,reloc=2,class=CODE,delta=1
   171                           	psect	text149,global,reloc=2,class=CODE,delta=1
   172                           	psect	text150,global,reloc=2,class=CODE,delta=1
   173                           	psect	text151,global,reloc=2,class=CODE,delta=1
   174                           	psect	text152,global,reloc=2,class=CODE,delta=1
   175                           	psect	text153,global,reloc=2,class=CODE,delta=1
   176                           	psect	text154,global,reloc=2,class=CODE,delta=1
   177                           	psect	text155,global,reloc=2,class=CODE,delta=1
   178                           	psect	text156,global,reloc=2,class=CODE,delta=1
   179                           	psect	text157,global,reloc=2,class=CODE,delta=1
   180                           	psect	text158,global,reloc=2,class=CODE,delta=1
   181                           	psect	text159,global,reloc=2,class=CODE,delta=1
   182                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   185                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   186                           	dabs	1,0x400,48,_BDT
   187                           	dabs	1,0x500,64,_cdc_data_tx
   188                           	dabs	1,0x438,8,_CtrlTrfData
   189                           	dabs	1,0x430,8,_SetupPkt
   190                           	dabs	1,0x540,64,_cdc_data_rx
   191  0000                     
   192                           ; Version 1.45
   193                           ; Generated 16/11/2017 GMT
   194                           ; 
   195                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   196                           ; All rights reserved.
   197                           ; 
   198                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   199                           ; 
   200                           ; Redistribution and use in source and binary forms, with or without modification, are
   201                           ; permitted provided that the following conditions are met:
   202                           ; 
   203                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   204                           ;        conditions and the following disclaimer.
   205                           ; 
   206                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   207                           ;        of conditions and the following disclaimer in the documentation and/or other
   208                           ;        materials provided with the distribution.
   209                           ; 
   210                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   211                           ;        software without specific prior written permission.
   212                           ; 
   213                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   214                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   215                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   216                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   217                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   218                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   219                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   220                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   221                           ; 
   222                           ; 
   223                           ; Code-generator required, PIC18LF45K50 Definitions
   224                           ; 
   225                           ; SFR Addresses
   226  0000                     
   227                           	psect	idataCOMRAM
   228  006308                     __pidataCOMRAM:
   229                           	opt stack 0
   230                           
   231                           ;initializer for _Contrast_level
   232  006308  13                 	db	19
   233                           
   234                           	psect	idataBANK0
   235  0062C0                     __pidataBANK0:
   236                           	opt stack 0
   237                           
   238                           ;initializer for _exitUSB
   239  0062C0  01                 	db	1
   240                           
   241                           ;initializer for _periodicState
   242  0062C1  03                 	db	3
   243                           
   244                           ;initializer for _menuTimeout
   245  0062C2  01                 	db	1
   246                           
   247                           ;initializer for _dataRateValue
   248  0062C3  02                 	db	2
   249                           
   250                           ;initializer for _periodicTimerValue
   251  0062C4  03                 	db	3
   252                           
   253                           ;initializer for _periodicUpValue
   254  0062C5  03                 	db	3
   255                           
   256                           ;initializer for _moteState
   257  0062C6  01                 	db	1
   258                           
   259                           	psect	idataBANK1
   260  006302                     __pidataBANK1:
   261                           	opt stack 0
   262                           
   263                           ;initializer for _selectedFont
   264  006302  F8                 	db	low _OledFont0
   265  006303  75                 	db	high _OledFont0
   266                           
   267                           ;initializer for _dataRateSelection
   268  006304  02                 	db	2
   269                           
   270                           	psect	mediumconst
   271  0075EA                     __pmediumconst:
   272                           	opt stack 0
   273  0075EA  00                 	db	0
   274  0075EB                     _USB_SD_Ptr:
   275                           	opt stack 0
   276  0075EB  B5                 	db	low _sd000
   277  0075EC  79                 	db	high _sd000
   278  0075ED  6F                 	db	low _sd001
   279  0075EE  79                 	db	high _sd001
   280  0075EF  3B                 	db	low _sd002
   281  0075F0  79                 	db	high _sd002
   282  0075F1                     __end_of_USB_SD_Ptr:
   283                           	opt stack 0
   284  0075F1                     _sentenceName:
   285                           	opt stack 0
   286  0075F1  47                 	db	71
   287  0075F2  50                 	db	80
   288  0075F3  47                 	db	71
   289  0075F4  4C                 	db	76
   290  0075F5  4C                 	db	76
   291  0075F6                     __end_of_sentenceName:
   292                           	opt stack 0
   293  0075F6                     _USB_CD_Ptr:
   294                           	opt stack 0
   295  0075F6  F8                 	db	low _configDescriptor1
   296  0075F7  78                 	db	high _configDescriptor1
   297  0075F8                     __end_of_USB_CD_Ptr:
   298                           	opt stack 0
   299  0075F8                     _OledFont0:
   300                           	opt stack 0
   301  0075F8  00                 	db	0
   302  0075F9  00                 	db	0
   303  0075FA  00                 	db	0
   304  0075FB  00                 	db	0
   305  0075FC  00                 	db	0
   306  0075FD  00                 	db	0
   307  0075FE  00                 	db	0
   308  0075FF  00                 	db	0
   309  007600  00                 	db	0
   310  007601  00                 	db	0
   311  007602  00                 	db	0
   312  007603  5F                 	db	95
   313  007604  00                 	db	0
   314  007605  00                 	db	0
   315  007606  00                 	db	0
   316  007607  00                 	db	0
   317  007608  00                 	db	0
   318  007609  00                 	db	0
   319  00760A  03                 	db	3
   320  00760B  00                 	db	0
   321  00760C  03                 	db	3
   322  00760D  00                 	db	0
   323  00760E  00                 	db	0
   324  00760F  00                 	db	0
   325  007610  64                 	db	100
   326  007611  3C                 	db	60
   327  007612  26                 	db	38
   328  007613  64                 	db	100
   329  007614  3C                 	db	60
   330  007615  26                 	db	38
   331  007616  24                 	db	36
   332  007617  00                 	db	0
   333  007618  26                 	db	38
   334  007619  49                 	db	73
   335  00761A  49                 	db	73
   336  00761B  7F                 	db	127
   337  00761C  49                 	db	73
   338  00761D  49                 	db	73
   339  00761E  32                 	db	50
   340  00761F  00                 	db	0
   341  007620  42                 	db	66
   342  007621  25                 	db	37
   343  007622  12                 	db	18
   344  007623  08                 	db	8
   345  007624  24                 	db	36
   346  007625  52                 	db	82
   347  007626  21                 	db	33
   348  007627  00                 	db	0
   349  007628  20                 	db	32
   350  007629  50                 	db	80
   351  00762A  4E                 	db	78
   352  00762B  55                 	db	85
   353  00762C  22                 	db	34
   354  00762D  58                 	db	88
   355  00762E  28                 	db	40
   356  00762F  00                 	db	0
   357  007630  00                 	db	0
   358  007631  00                 	db	0
   359  007632  00                 	db	0
   360  007633  03                 	db	3
   361  007634  00                 	db	0
   362  007635  00                 	db	0
   363  007636  00                 	db	0
   364  007637  00                 	db	0
   365  007638  00                 	db	0
   366  007639  00                 	db	0
   367  00763A  1C                 	db	28
   368  00763B  22                 	db	34
   369  00763C  41                 	db	65
   370  00763D  00                 	db	0
   371  00763E  00                 	db	0
   372  00763F  00                 	db	0
   373  007640  00                 	db	0
   374  007641  00                 	db	0
   375  007642  00                 	db	0
   376  007643  41                 	db	65
   377  007644  22                 	db	34
   378  007645  1C                 	db	28
   379  007646  00                 	db	0
   380  007647  00                 	db	0
   381  007648  00                 	db	0
   382  007649  15                 	db	21
   383  00764A  15                 	db	21
   384  00764B  0E                 	db	14
   385  00764C  0E                 	db	14
   386  00764D  15                 	db	21
   387  00764E  15                 	db	21
   388  00764F  00                 	db	0
   389  007650  00                 	db	0
   390  007651  08                 	db	8
   391  007652  08                 	db	8
   392  007653  3E                 	db	62
   393  007654  08                 	db	8
   394  007655  08                 	db	8
   395  007656  00                 	db	0
   396  007657  00                 	db	0
   397  007658  00                 	db	0
   398  007659  00                 	db	0
   399  00765A  00                 	db	0
   400  00765B  50                 	db	80
   401  00765C  30                 	db	48
   402  00765D  00                 	db	0
   403  00765E  00                 	db	0
   404  00765F  00                 	db	0
   405  007660  00                 	db	0
   406  007661  08                 	db	8
   407  007662  08                 	db	8
   408  007663  08                 	db	8
   409  007664  08                 	db	8
   410  007665  08                 	db	8
   411  007666  00                 	db	0
   412  007667  00                 	db	0
   413  007668  00                 	db	0
   414  007669  00                 	db	0
   415  00766A  00                 	db	0
   416  00766B  40                 	db	64
   417  00766C  00                 	db	0
   418  00766D  00                 	db	0
   419  00766E  00                 	db	0
   420  00766F  00                 	db	0
   421  007670  40                 	db	64
   422  007671  20                 	db	32
   423  007672  10                 	db	16
   424  007673  08                 	db	8
   425  007674  04                 	db	4
   426  007675  02                 	db	2
   427  007676  01                 	db	1
   428  007677  00                 	db	0
   429  007678  00                 	db	0
   430  007679  3E                 	db	62
   431  00767A  41                 	db	65
   432  00767B  41                 	db	65
   433  00767C  41                 	db	65
   434  00767D  3E                 	db	62
   435  00767E  00                 	db	0
   436  00767F  00                 	db	0
   437  007680  00                 	db	0
   438  007681  00                 	db	0
   439  007682  41                 	db	65
   440  007683  7F                 	db	127
   441  007684  40                 	db	64
   442  007685  00                 	db	0
   443  007686  00                 	db	0
   444  007687  00                 	db	0
   445  007688  00                 	db	0
   446  007689  42                 	db	66
   447  00768A  61                 	db	97
   448  00768B  51                 	db	81
   449  00768C  49                 	db	73
   450  00768D  6E                 	db	110
   451  00768E  00                 	db	0
   452  00768F  00                 	db	0
   453  007690  00                 	db	0
   454  007691  22                 	db	34
   455  007692  41                 	db	65
   456  007693  49                 	db	73
   457  007694  49                 	db	73
   458  007695  36                 	db	54
   459  007696  00                 	db	0
   460  007697  00                 	db	0
   461  007698  00                 	db	0
   462  007699  18                 	db	24
   463  00769A  14                 	db	20
   464  00769B  12                 	db	18
   465  00769C  7F                 	db	127
   466  00769D  10                 	db	16
   467  00769E  00                 	db	0
   468  00769F  00                 	db	0
   469  0076A0  00                 	db	0
   470  0076A1  27                 	db	39
   471  0076A2  49                 	db	73
   472  0076A3  49                 	db	73
   473  0076A4  49                 	db	73
   474  0076A5  71                 	db	113
   475  0076A6  00                 	db	0
   476  0076A7  00                 	db	0
   477  0076A8  00                 	db	0
   478  0076A9  3C                 	db	60
   479  0076AA  4A                 	db	74
   480  0076AB  49                 	db	73
   481  0076AC  48                 	db	72
   482  0076AD  70                 	db	112
   483  0076AE  00                 	db	0
   484  0076AF  00                 	db	0
   485  0076B0  00                 	db	0
   486  0076B1  43                 	db	67
   487  0076B2  21                 	db	33
   488  0076B3  11                 	db	17
   489  0076B4  0D                 	db	13
   490  0076B5  03                 	db	3
   491  0076B6  00                 	db	0
   492  0076B7  00                 	db	0
   493  0076B8  00                 	db	0
   494  0076B9  36                 	db	54
   495  0076BA  49                 	db	73
   496  0076BB  49                 	db	73
   497  0076BC  49                 	db	73
   498  0076BD  36                 	db	54
   499  0076BE  00                 	db	0
   500  0076BF  00                 	db	0
   501  0076C0  00                 	db	0
   502  0076C1  06                 	db	6
   503  0076C2  09                 	db	9
   504  0076C3  49                 	db	73
   505  0076C4  29                 	db	41
   506  0076C5  1E                 	db	30
   507  0076C6  00                 	db	0
   508  0076C7  00                 	db	0
   509  0076C8  00                 	db	0
   510  0076C9  00                 	db	0
   511  0076CA  00                 	db	0
   512  0076CB  12                 	db	18
   513  0076CC  00                 	db	0
   514  0076CD  00                 	db	0
   515  0076CE  00                 	db	0
   516  0076CF  00                 	db	0
   517  0076D0  00                 	db	0
   518  0076D1  00                 	db	0
   519  0076D2  00                 	db	0
   520  0076D3  52                 	db	82
   521  0076D4  30                 	db	48
   522  0076D5  00                 	db	0
   523  0076D6  00                 	db	0
   524  0076D7  00                 	db	0
   525  0076D8  00                 	db	0
   526  0076D9  00                 	db	0
   527  0076DA  08                 	db	8
   528  0076DB  14                 	db	20
   529  0076DC  14                 	db	20
   530  0076DD  22                 	db	34
   531  0076DE  00                 	db	0
   532  0076DF  00                 	db	0
   533  0076E0  00                 	db	0
   534  0076E1  14                 	db	20
   535  0076E2  14                 	db	20
   536  0076E3  14                 	db	20
   537  0076E4  14                 	db	20
   538  0076E5  14                 	db	20
   539  0076E6  14                 	db	20
   540  0076E7  00                 	db	0
   541  0076E8  00                 	db	0
   542  0076E9  00                 	db	0
   543  0076EA  22                 	db	34
   544  0076EB  14                 	db	20
   545  0076EC  14                 	db	20
   546  0076ED  08                 	db	8
   547  0076EE  00                 	db	0
   548  0076EF  00                 	db	0
   549  0076F0  00                 	db	0
   550  0076F1  02                 	db	2
   551  0076F2  01                 	db	1
   552  0076F3  59                 	db	89
   553  0076F4  05                 	db	5
   554  0076F5  02                 	db	2
   555  0076F6  00                 	db	0
   556  0076F7  00                 	db	0
   557  0076F8  3E                 	db	62
   558  0076F9  41                 	db	65
   559  0076FA  5D                 	db	93
   560  0076FB  55                 	db	85
   561  0076FC  4D                 	db	77
   562  0076FD  51                 	db	81
   563  0076FE  2E                 	db	46
   564  0076FF  00                 	db	0
   565  007700  40                 	db	64
   566  007701  7C                 	db	124
   567  007702  4A                 	db	74
   568  007703  09                 	db	9
   569  007704  4A                 	db	74
   570  007705  7C                 	db	124
   571  007706  40                 	db	64
   572  007707  00                 	db	0
   573  007708  41                 	db	65
   574  007709  7F                 	db	127
   575  00770A  49                 	db	73
   576  00770B  49                 	db	73
   577  00770C  49                 	db	73
   578  00770D  49                 	db	73
   579  00770E  36                 	db	54
   580  00770F  00                 	db	0
   581  007710  1C                 	db	28
   582  007711  22                 	db	34
   583  007712  41                 	db	65
   584  007713  41                 	db	65
   585  007714  41                 	db	65
   586  007715  41                 	db	65
   587  007716  22                 	db	34
   588  007717  00                 	db	0
   589  007718  41                 	db	65
   590  007719  7F                 	db	127
   591  00771A  41                 	db	65
   592  00771B  41                 	db	65
   593  00771C  41                 	db	65
   594  00771D  22                 	db	34
   595  00771E  1C                 	db	28
   596  00771F  00                 	db	0
   597  007720  41                 	db	65
   598  007721  7F                 	db	127
   599  007722  49                 	db	73
   600  007723  49                 	db	73
   601  007724  5D                 	db	93
   602  007725  41                 	db	65
   603  007726  63                 	db	99
   604  007727  00                 	db	0
   605  007728  41                 	db	65
   606  007729  7F                 	db	127
   607  00772A  49                 	db	73
   608  00772B  09                 	db	9
   609  00772C  1D                 	db	29
   610  00772D  01                 	db	1
   611  00772E  03                 	db	3
   612  00772F  00                 	db	0
   613  007730  1C                 	db	28
   614  007731  22                 	db	34
   615  007732  41                 	db	65
   616  007733  49                 	db	73
   617  007734  49                 	db	73
   618  007735  3A                 	db	58
   619  007736  08                 	db	8
   620  007737  00                 	db	0
   621  007738  41                 	db	65
   622  007739  7F                 	db	127
   623  00773A  08                 	db	8
   624  00773B  08                 	db	8
   625  00773C  08                 	db	8
   626  00773D  7F                 	db	127
   627  00773E  41                 	db	65
   628  00773F  00                 	db	0
   629  007740  00                 	db	0
   630  007741  41                 	db	65
   631  007742  41                 	db	65
   632  007743  7F                 	db	127
   633  007744  41                 	db	65
   634  007745  41                 	db	65
   635  007746  00                 	db	0
   636  007747  00                 	db	0
   637  007748  30                 	db	48
   638  007749  40                 	db	64
   639  00774A  41                 	db	65
   640  00774B  41                 	db	65
   641  00774C  3F                 	db	63
   642  00774D  01                 	db	1
   643  00774E  01                 	db	1
   644  00774F  00                 	db	0
   645  007750  41                 	db	65
   646  007751  7F                 	db	127
   647  007752  08                 	db	8
   648  007753  0C                 	db	12
   649  007754  12                 	db	18
   650  007755  61                 	db	97
   651  007756  41                 	db	65
   652  007757  00                 	db	0
   653  007758  41                 	db	65
   654  007759  7F                 	db	127
   655  00775A  41                 	db	65
   656  00775B  40                 	db	64
   657  00775C  40                 	db	64
   658  00775D  40                 	db	64
   659  00775E  60                 	db	96
   660  00775F  00                 	db	0
   661  007760  41                 	db	65
   662  007761  7F                 	db	127
   663  007762  42                 	db	66
   664  007763  0C                 	db	12
   665  007764  42                 	db	66
   666  007765  7F                 	db	127
   667  007766  41                 	db	65
   668  007767  00                 	db	0
   669  007768  41                 	db	65
   670  007769  7F                 	db	127
   671  00776A  42                 	db	66
   672  00776B  0C                 	db	12
   673  00776C  11                 	db	17
   674  00776D  7F                 	db	127
   675  00776E  01                 	db	1
   676  00776F  00                 	db	0
   677  007770  1C                 	db	28
   678  007771  22                 	db	34
   679  007772  41                 	db	65
   680  007773  41                 	db	65
   681  007774  41                 	db	65
   682  007775  22                 	db	34
   683  007776  1C                 	db	28
   684  007777  00                 	db	0
   685  007778  41                 	db	65
   686  007779  7F                 	db	127
   687  00777A  49                 	db	73
   688  00777B  09                 	db	9
   689  00777C  09                 	db	9
   690  00777D  09                 	db	9
   691  00777E  06                 	db	6
   692  00777F  00                 	db	0
   693  007780  0C                 	db	12
   694  007781  12                 	db	18
   695  007782  21                 	db	33
   696  007783  21                 	db	33
   697  007784  61                 	db	97
   698  007785  52                 	db	82
   699  007786  4C                 	db	76
   700  007787  00                 	db	0
   701  007788  41                 	db	65
   702  007789  7F                 	db	127
   703  00778A  09                 	db	9
   704  00778B  09                 	db	9
   705  00778C  19                 	db	25
   706  00778D  69                 	db	105
   707  00778E  46                 	db	70
   708  00778F  00                 	db	0
   709  007790  66                 	db	102
   710  007791  49                 	db	73
   711  007792  49                 	db	73
   712  007793  49                 	db	73
   713  007794  49                 	db	73
   714  007795  49                 	db	73
   715  007796  33                 	db	51
   716  007797  00                 	db	0
   717  007798  03                 	db	3
   718  007799  01                 	db	1
   719  00779A  41                 	db	65
   720  00779B  7F                 	db	127
   721  00779C  41                 	db	65
   722  00779D  01                 	db	1
   723  00779E  03                 	db	3
   724  00779F  00                 	db	0
   725  0077A0  01                 	db	1
   726  0077A1  3F                 	db	63
   727  0077A2  41                 	db	65
   728  0077A3  40                 	db	64
   729  0077A4  41                 	db	65
   730  0077A5  3F                 	db	63
   731  0077A6  01                 	db	1
   732  0077A7  00                 	db	0
   733  0077A8  01                 	db	1
   734  0077A9  0F                 	db	15
   735  0077AA  31                 	db	49
   736  0077AB  40                 	db	64
   737  0077AC  31                 	db	49
   738  0077AD  0F                 	db	15
   739  0077AE  01                 	db	1
   740  0077AF  00                 	db	0
   741  0077B0  01                 	db	1
   742  0077B1  1F                 	db	31
   743  0077B2  61                 	db	97
   744  0077B3  14                 	db	20
   745  0077B4  61                 	db	97
   746  0077B5  1F                 	db	31
   747  0077B6  01                 	db	1
   748  0077B7  00                 	db	0
   749  0077B8  41                 	db	65
   750  0077B9  41                 	db	65
   751  0077BA  36                 	db	54
   752  0077BB  08                 	db	8
   753  0077BC  36                 	db	54
   754  0077BD  41                 	db	65
   755  0077BE  41                 	db	65
   756  0077BF  00                 	db	0
   757  0077C0  01                 	db	1
   758  0077C1  03                 	db	3
   759  0077C2  44                 	db	68
   760  0077C3  78                 	db	120
   761  0077C4  44                 	db	68
   762  0077C5  03                 	db	3
   763  0077C6  01                 	db	1
   764  0077C7  00                 	db	0
   765  0077C8  43                 	db	67
   766  0077C9  61                 	db	97
   767  0077CA  51                 	db	81
   768  0077CB  49                 	db	73
   769  0077CC  45                 	db	69
   770  0077CD  43                 	db	67
   771  0077CE  61                 	db	97
   772  0077CF  00                 	db	0
   773  0077D0  00                 	db	0
   774  0077D1  00                 	db	0
   775  0077D2  7F                 	db	127
   776  0077D3  41                 	db	65
   777  0077D4  41                 	db	65
   778  0077D5  00                 	db	0
   779  0077D6  00                 	db	0
   780  0077D7  00                 	db	0
   781  0077D8  01                 	db	1
   782  0077D9  02                 	db	2
   783  0077DA  04                 	db	4
   784  0077DB  08                 	db	8
   785  0077DC  10                 	db	16
   786  0077DD  20                 	db	32
   787  0077DE  40                 	db	64
   788  0077DF  00                 	db	0
   789  0077E0  00                 	db	0
   790  0077E1  00                 	db	0
   791  0077E2  41                 	db	65
   792  0077E3  41                 	db	65
   793  0077E4  7F                 	db	127
   794  0077E5  00                 	db	0
   795  0077E6  00                 	db	0
   796  0077E7  00                 	db	0
   797  0077E8  00                 	db	0
   798  0077E9  04                 	db	4
   799  0077EA  02                 	db	2
   800  0077EB  01                 	db	1
   801  0077EC  01                 	db	1
   802  0077ED  02                 	db	2
   803  0077EE  04                 	db	4
   804  0077EF  00                 	db	0
   805  0077F0  00                 	db	0
   806  0077F1  40                 	db	64
   807  0077F2  40                 	db	64
   808  0077F3  40                 	db	64
   809  0077F4  40                 	db	64
   810  0077F5  40                 	db	64
   811  0077F6  40                 	db	64
   812  0077F7  00                 	db	0
   813  0077F8  00                 	db	0
   814  0077F9  01                 	db	1
   815  0077FA  02                 	db	2
   816  0077FB  00                 	db	0
   817  0077FC  00                 	db	0
   818  0077FD  00                 	db	0
   819  0077FE  00                 	db	0
   820  0077FF  00                 	db	0
   821  007800  00                 	db	0
   822  007801  34                 	db	52
   823  007802  4A                 	db	74
   824  007803  4A                 	db	74
   825  007804  4A                 	db	74
   826  007805  3C                 	db	60
   827  007806  40                 	db	64
   828  007807  00                 	db	0
   829  007808  00                 	db	0
   830  007809  41                 	db	65
   831  00780A  3F                 	db	63
   832  00780B  48                 	db	72
   833  00780C  48                 	db	72
   834  00780D  48                 	db	72
   835  00780E  30                 	db	48
   836  00780F  00                 	db	0
   837  007810  00                 	db	0
   838  007811  3C                 	db	60
   839  007812  42                 	db	66
   840  007813  42                 	db	66
   841  007814  42                 	db	66
   842  007815  24                 	db	36
   843  007816  00                 	db	0
   844  007817  00                 	db	0
   845  007818  00                 	db	0
   846  007819  30                 	db	48
   847  00781A  48                 	db	72
   848  00781B  48                 	db	72
   849  00781C  49                 	db	73
   850  00781D  3F                 	db	63
   851  00781E  40                 	db	64
   852  00781F  00                 	db	0
   853  007820  00                 	db	0
   854  007821  3C                 	db	60
   855  007822  4A                 	db	74
   856  007823  4A                 	db	74
   857  007824  4A                 	db	74
   858  007825  2C                 	db	44
   859  007826  00                 	db	0
   860  007827  00                 	db	0
   861  007828  00                 	db	0
   862  007829  00                 	db	0
   863  00782A  48                 	db	72
   864  00782B  7E                 	db	126
   865  00782C  49                 	db	73
   866  00782D  09                 	db	9
   867  00782E  00                 	db	0
   868  00782F  00                 	db	0
   869  007830  00                 	db	0
   870  007831  26                 	db	38
   871  007832  49                 	db	73
   872  007833  49                 	db	73
   873  007834  49                 	db	73
   874  007835  3F                 	db	63
   875  007836  01                 	db	1
   876  007837  00                 	db	0
   877  007838  41                 	db	65
   878  007839  7F                 	db	127
   879  00783A  48                 	db	72
   880  00783B  04                 	db	4
   881  00783C  44                 	db	68
   882  00783D  78                 	db	120
   883  00783E  40                 	db	64
   884  00783F  00                 	db	0
   885  007840  00                 	db	0
   886  007841  00                 	db	0
   887  007842  44                 	db	68
   888  007843  7D                 	db	125
   889  007844  40                 	db	64
   890  007845  00                 	db	0
   891  007846  00                 	db	0
   892  007847  00                 	db	0
   893  007848  00                 	db	0
   894  007849  00                 	db	0
   895  00784A  40                 	db	64
   896  00784B  44                 	db	68
   897  00784C  3D                 	db	61
   898  00784D  00                 	db	0
   899  00784E  00                 	db	0
   900  00784F  00                 	db	0
   901  007850  41                 	db	65
   902  007851  7F                 	db	127
   903  007852  10                 	db	16
   904  007853  18                 	db	24
   905  007854  24                 	db	36
   906  007855  42                 	db	66
   907  007856  42                 	db	66
   908  007857  00                 	db	0
   909  007858  00                 	db	0
   910  007859  40                 	db	64
   911  00785A  41                 	db	65
   912  00785B  7F                 	db	127
   913  00785C  40                 	db	64
   914  00785D  40                 	db	64
   915  00785E  00                 	db	0
   916  00785F  00                 	db	0
   917  007860  42                 	db	66
   918  007861  7E                 	db	126
   919  007862  02                 	db	2
   920  007863  7C                 	db	124
   921  007864  02                 	db	2
   922  007865  7E                 	db	126
   923  007866  40                 	db	64
   924  007867  00                 	db	0
   925  007868  42                 	db	66
   926  007869  7E                 	db	126
   927  00786A  44                 	db	68
   928  00786B  02                 	db	2
   929  00786C  42                 	db	66
   930  00786D  7C                 	db	124
   931  00786E  40                 	db	64
   932  00786F  00                 	db	0
   933  007870  00                 	db	0
   934  007871  3C                 	db	60
   935  007872  42                 	db	66
   936  007873  42                 	db	66
   937  007874  42                 	db	66
   938  007875  3C                 	db	60
   939  007876  00                 	db	0
   940  007877  00                 	db	0
   941  007878  00                 	db	0
   942  007879  41                 	db	65
   943  00787A  7F                 	db	127
   944  00787B  49                 	db	73
   945  00787C  09                 	db	9
   946  00787D  09                 	db	9
   947  00787E  06                 	db	6
   948  00787F  00                 	db	0
   949  007880  00                 	db	0
   950  007881  06                 	db	6
   951  007882  09                 	db	9
   952  007883  09                 	db	9
   953  007884  49                 	db	73
   954  007885  7F                 	db	127
   955  007886  41                 	db	65
   956  007887  00                 	db	0
   957  007888  00                 	db	0
   958  007889  42                 	db	66
   959  00788A  7E                 	db	126
   960  00788B  44                 	db	68
   961  00788C  02                 	db	2
   962  00788D  02                 	db	2
   963  00788E  04                 	db	4
   964  00788F  00                 	db	0
   965  007890  00                 	db	0
   966  007891  64                 	db	100
   967  007892  4A                 	db	74
   968  007893  4A                 	db	74
   969  007894  4A                 	db	74
   970  007895  36                 	db	54
   971  007896  00                 	db	0
   972  007897  00                 	db	0
   973  007898  00                 	db	0
   974  007899  04                 	db	4
   975  00789A  3F                 	db	63
   976  00789B  44                 	db	68
   977  00789C  44                 	db	68
   978  00789D  20                 	db	32
   979  00789E  00                 	db	0
   980  00789F  00                 	db	0
   981  0078A0  00                 	db	0
   982  0078A1  02                 	db	2
   983  0078A2  3E                 	db	62
   984  0078A3  40                 	db	64
   985  0078A4  40                 	db	64
   986  0078A5  22                 	db	34
   987  0078A6  7E                 	db	126
   988  0078A7  40                 	db	64
   989  0078A8  02                 	db	2
   990  0078A9  0E                 	db	14
   991  0078AA  32                 	db	50
   992  0078AB  40                 	db	64
   993  0078AC  32                 	db	50
   994  0078AD  0E                 	db	14
   995  0078AE  02                 	db	2
   996  0078AF  00                 	db	0
   997  0078B0  02                 	db	2
   998  0078B1  1E                 	db	30
   999  0078B2  62                 	db	98
  1000  0078B3  18                 	db	24
  1001  0078B4  62                 	db	98
  1002  0078B5  1E                 	db	30
  1003  0078B6  02                 	db	2
  1004  0078B7  00                 	db	0
  1005  0078B8  42                 	db	66
  1006  0078B9  62                 	db	98
  1007  0078BA  14                 	db	20
  1008  0078BB  08                 	db	8
  1009  0078BC  14                 	db	20
  1010  0078BD  62                 	db	98
  1011  0078BE  42                 	db	66
  1012  0078BF  00                 	db	0
  1013  0078C0  01                 	db	1
  1014  0078C1  43                 	db	67
  1015  0078C2  45                 	db	69
  1016  0078C3  38                 	db	56
  1017  0078C4  05                 	db	5
  1018  0078C5  03                 	db	3
  1019  0078C6  01                 	db	1
  1020  0078C7  00                 	db	0
  1021  0078C8  00                 	db	0
  1022  0078C9  46                 	db	70
  1023  0078CA  62                 	db	98
  1024  0078CB  52                 	db	82
  1025  0078CC  4A                 	db	74
  1026  0078CD  46                 	db	70
  1027  0078CE  62                 	db	98
  1028  0078CF  00                 	db	0
  1029  0078D0  00                 	db	0
  1030  0078D1  00                 	db	0
  1031  0078D2  08                 	db	8
  1032  0078D3  36                 	db	54
  1033  0078D4  41                 	db	65
  1034  0078D5  00                 	db	0
  1035  0078D6  00                 	db	0
  1036  0078D7  00                 	db	0
  1037  0078D8  00                 	db	0
  1038  0078D9  00                 	db	0
  1039  0078DA  00                 	db	0
  1040  0078DB  7F                 	db	127
  1041  0078DC  00                 	db	0
  1042  0078DD  00                 	db	0
  1043  0078DE  00                 	db	0
  1044  0078DF  00                 	db	0
  1045  0078E0  00                 	db	0
  1046  0078E1  00                 	db	0
  1047  0078E2  00                 	db	0
  1048  0078E3  41                 	db	65
  1049  0078E4  36                 	db	54
  1050  0078E5  08                 	db	8
  1051  0078E6  00                 	db	0
  1052  0078E7  00                 	db	0
  1053  0078E8  00                 	db	0
  1054  0078E9  18                 	db	24
  1055  0078EA  08                 	db	8
  1056  0078EB  08                 	db	8
  1057  0078EC  10                 	db	16
  1058  0078ED  10                 	db	16
  1059  0078EE  18                 	db	24
  1060  0078EF  00                 	db	0
  1061  0078F0  AA                 	db	170
  1062  0078F1  55                 	db	85
  1063  0078F2  AA                 	db	170
  1064  0078F3  55                 	db	85
  1065  0078F4  AA                 	db	170
  1066  0078F5  55                 	db	85
  1067  0078F6  AA                 	db	170
  1068  0078F7  55                 	db	85
  1069  0078F8                     __end_of_OledFont0:
  1070                           	opt stack 0
  1071  0078F8                     _configDescriptor1:
  1072                           	opt stack 0
  1073  0078F8  09                 	db	9
  1074  0078F9  02                 	db	2
  1075  0078FA  43                 	db	67
  1076  0078FB  00                 	db	0
  1077  0078FC  02                 	db	2
  1078  0078FD  01                 	db	1
  1079  0078FE  00                 	db	0
  1080  0078FF  C0                 	db	192
  1081  007900  32                 	db	50
  1082  007901  09                 	db	9
  1083  007902  04                 	db	4
  1084  007903  00                 	db	0
  1085  007904  00                 	db	0
  1086  007905  01                 	db	1
  1087  007906  02                 	db	2
  1088  007907  02                 	db	2
  1089  007908  01                 	db	1
  1090  007909  00                 	db	0
  1091  00790A  05                 	db	5
  1092  00790B  24                 	db	36
  1093  00790C  00                 	db	0
  1094  00790D  10                 	db	16
  1095  00790E  01                 	db	1
  1096  00790F  04                 	db	4
  1097  007910  24                 	db	36
  1098  007911  02                 	db	2
  1099  007912  02                 	db	2
  1100  007913  05                 	db	5
  1101  007914  24                 	db	36
  1102  007915  06                 	db	6
  1103  007916  00                 	db	0
  1104  007917  01                 	db	1
  1105  007918  05                 	db	5
  1106  007919  24                 	db	36
  1107  00791A  01                 	db	1
  1108  00791B  00                 	db	0
  1109  00791C  01                 	db	1
  1110  00791D  07                 	db	7
  1111  00791E  05                 	db	5
  1112  00791F  81                 	db	129
  1113  007920  03                 	db	3
  1114  007921  08                 	db	8
  1115  007922  00                 	db	0
  1116  007923  02                 	db	2
  1117  007924  09                 	db	9
  1118  007925  04                 	db	4
  1119  007926  01                 	db	1
  1120  007927  00                 	db	0
  1121  007928  02                 	db	2
  1122  007929  0A                 	db	10
  1123  00792A  00                 	db	0
  1124  00792B  00                 	db	0
  1125  00792C  00                 	db	0
  1126  00792D  07                 	db	7
  1127  00792E  05                 	db	5
  1128  00792F  02                 	db	2
  1129  007930  02                 	db	2
  1130  007931  40                 	db	64
  1131  007932  00                 	db	0
  1132  007933  00                 	db	0
  1133  007934  07                 	db	7
  1134  007935  05                 	db	5
  1135  007936  82                 	db	130
  1136  007937  02                 	db	2
  1137  007938  40                 	db	64
  1138  007939  00                 	db	0
  1139  00793A  00                 	db	0
  1140  00793B                     __end_of_configDescriptor1:
  1141                           	opt stack 0
  1142  00793B                     _sd002:
  1143                           	opt stack 0
  1144  00793B  34                 	db	52
  1145  00793C  03                 	db	3
  1146  00793D  0043               	dw	67
  1147  00793F  0044               	dw	68
  1148  007941  0043               	dw	67
  1149  007943  0020               	dw	32
  1150  007945  0052               	dw	82
  1151  007947  0053               	dw	83
  1152  007949  002D               	dw	45
  1153  00794B  0032               	dw	50
  1154  00794D  0033               	dw	51
  1155  00794F  0032               	dw	50
  1156  007951  0020               	dw	32
  1157  007953  0045               	dw	69
  1158  007955  006D               	dw	109
  1159  007957  0075               	dw	117
  1160  007959  006C               	dw	108
  1161  00795B  0061               	dw	97
  1162  00795D  0074               	dw	116
  1163  00795F  0069               	dw	105
  1164  007961  006F               	dw	111
  1165  007963  006E               	dw	110
  1166  007965  0020               	dw	32
  1167  007967  0044               	dw	68
  1168  007969  0065               	dw	101
  1169  00796B  006D               	dw	109
  1170  00796D  006F               	dw	111
  1171  00796F                     __end_of_sd002:
  1172                           	opt stack 0
  1173  00796F                     _sd001:
  1174                           	opt stack 0
  1175  00796F  34                 	db	52
  1176  007970  03                 	db	3
  1177  007971  004D               	dw	77
  1178  007973  0069               	dw	105
  1179  007975  0063               	dw	99
  1180  007977  0072               	dw	114
  1181  007979  006F               	dw	111
  1182  00797B  0063               	dw	99
  1183  00797D  0068               	dw	104
  1184  00797F  0069               	dw	105
  1185  007981  0070               	dw	112
  1186  007983  0020               	dw	32
  1187  007985  0054               	dw	84
  1188  007987  0065               	dw	101
  1189  007989  0063               	dw	99
  1190  00798B  0068               	dw	104
  1191  00798D  006E               	dw	110
  1192  00798F  006F               	dw	111
  1193  007991  006C               	dw	108
  1194  007993  006F               	dw	111
  1195  007995  0067               	dw	103
  1196  007997  0079               	dw	121
  1197  007999  0020               	dw	32
  1198  00799B  0049               	dw	73
  1199  00799D  006E               	dw	110
  1200  00799F  0063               	dw	99
  1201  0079A1  002E               	dw	46
  1202  0079A3                     __end_of_sd001:
  1203                           	opt stack 0
  1204  0079A3                     _device_dsc:
  1205                           	opt stack 0
  1206  0079A3  12                 	db	18
  1207  0079A4  01                 	db	1
  1208  0079A5  0200               	dw	512
  1209  0079A7  02                 	db	2
  1210  0079A8  00                 	db	0
  1211  0079A9  00                 	db	0
  1212  0079AA  08                 	db	8
  1213  0079AB  04D8               	dw	1240
  1214  0079AD  000A               	dw	10
  1215  0079AF  0100               	dw	256
  1216  0079B1  01                 	db	1
  1217  0079B2  02                 	db	2
  1218  0079B3  00                 	db	0
  1219  0079B4  01                 	db	1
  1220  0079B5                     __end_of_device_dsc:
  1221                           	opt stack 0
  1222  0079B5                     _sd000:
  1223                           	opt stack 0
  1224  0079B5  04                 	db	4
  1225  0079B6  03                 	db	3
  1226  0079B7  0409               	dw	1033
  1227  0079B9                     __end_of_sd000:
  1228                           	opt stack 0
  1229  0000                     _ANSELCbits	set	3933
  1230  0000                     _ANSELAbits	set	3931
  1231  0000                     _TMR3	set	4018
  1232  0000                     _TMR0	set	4054
  1233  0000                     _UEP0bits	set	3946
  1234  0000                     _IPR3bits	set	4005
  1235  0000                     _RCONbits	set	4048
  1236  0000                     _UCON	set	3936
  1237  0000                     _USTAT	set	3937
  1238  0000                     _PIR3bits	set	4004
  1239  0000                     _UIEbits	set	3940
  1240  0000                     _UIRbits	set	3941
  1241  0000                     _UADDR	set	3939
  1242  0000                     _UIE	set	3940
  1243  0000                     _UEIE	set	3942
  1244  0000                     _UCFG	set	3938
  1245  0000                     _UIR	set	3941
  1246  0000                     _UEIR	set	3943
  1247  0000                     _PIE3bits	set	4003
  1248  0000                     _T0CONbits	set	4053
  1249  0000                     _T3GCONbits	set	4020
  1250  0000                     _T3CONbits	set	4017
  1251  0000                     _T3GCON	set	4020
  1252  0000                     _T3CON	set	4017
  1253  0000                     _T2CONbits	set	4026
  1254  0000                     _TMR2	set	4028
  1255  0000                     _PR2	set	4027
  1256  0000                     _T2CON	set	4026
  1257  0000                     _VREFCON0bits	set	3965
  1258  0000                     _CM1CON0bits	set	3992
  1259  0000                     _CM2CON1bits	set	3994
  1260  0000                     _CM1CON0	set	3992
  1261  0000                     _EEDATA	set	4008
  1262  0000                     _EEADR	set	4009
  1263  0000                     _EECON2	set	4007
  1264  0000                     _EECON1bits	set	4006
  1265  0000                     _TABLAT	set	4085
  1266  0000                     _TBLPTRL	set	4086
  1267  0000                     _TBLPTRH	set	4087
  1268  0000                     _TBLPTRU	set	4088
  1269  0000                     _TRISD	set	3989
  1270  0000                     _IOCBbits	set	3974
  1271  0000                     _INTCON2bits	set	4081
  1272  0000                     _TRISAbits	set	3986
  1273  0000                     _T1GCONbits	set	4044
  1274  0000                     _T1CONbits	set	4045
  1275  0000                     _TMR1L	set	4046
  1276  0000                     _TMR1H	set	4047
  1277  0000                     _T1GCON	set	4044
  1278  0000                     _T1CON	set	4045
  1279  0000                     _SSP1STATbits	set	4039
  1280  0000                     _SSPBUF	set	4041
  1281  0000                     _SSP1CON1bits	set	4038
  1282  0000                     _SSP1ADD	set	4040
  1283  0000                     _SSP1CON1	set	4038
  1284  0000                     _SSP1STAT	set	4039
  1285  0000                     _ADRESH	set	4036
  1286  0000                     _ADRESL	set	4035
  1287  0000                     _ADCON2	set	4032
  1288  0000                     _ADCON1	set	4033
  1289  0000                     _ADCON0	set	4034
  1290  0000                     _VREFCON0	set	3965
  1291  0000                     _ACTCON	set	4021
  1292  0000                     _OSCCON2bits	set	4050
  1293  0000                     _OSCCON2	set	4050
  1294  0000                     _OSCCON	set	4051
  1295  0000                     _OSCTUNE	set	3995
  1296  0000                     _PIR1bits	set	3998
  1297  0000                     _RCREG	set	4014
  1298  0000                     _RCSTAbits	set	4011
  1299  0000                     _TXSTA	set	4012
  1300  0000                     _RCSTA	set	4011
  1301  0000                     _BAUDCON	set	4024
  1302  0000                     _PORTB	set	3969
  1303  0000                     _LATD	set	3980
  1304  0000                     _TRISCbits	set	3988
  1305  0000                     _TRISBbits	set	3987
  1306  0000                     _TRISEbits	set	3990
  1307  0000                     _SPBRGH	set	4016
  1308  0000                     _SPBRG	set	4015
  1309  0000                     _UCONbits	set	3936
  1310  0000                     _TMR3L	set	4018
  1311  0000                     _TMR3H	set	4019
  1312  0000                     _PIR2bits	set	4001
  1313  0000                     _WDTCONbits	set	4049
  1314  0000                     _PORTCbits	set	3970
  1315  0000                     _IOCCbits	set	3975
  1316  0000                     _INTCON3bits	set	4080
  1317  0000                     _PIE2bits	set	4000
  1318  0000                     _LATEbits	set	3981
  1319  0000                     _INTCONbits	set	4082
  1320  0000                     _ADCON0bits	set	4034
  1321  0000                     _PORTAbits	set	3968
  1322  0000                     _PIE1bits	set	3997
  1323  0000                     _TXREG	set	4013
  1324  0000                     _LATCbits	set	3979
  1325  0000                     _TXSTAbits	set	4012
  1326  0000                     _LATAbits	set	3977
  1327  0000                     _PORTBbits	set	3969
  1328  0000                     _LATBbits	set	3978
  1329  0000                     _UEP1	set	3947
  1330  0000                     _UEP0	set	3946
  1331  0000                     _CKE	set	32318
  1332  0000                     _CKP	set	32308
  1333  0000                     _GIE	set	32663
  1334  0000                     _PEIE	set	32662
  1335  0079B9                     STR_184:
  1336  0079B9  73                 	db	115	;'s'
  1337  0079BA  79                 	db	121	;'y'
  1338  0079BB  73                 	db	115	;'s'
  1339  0079BC  20                 	db	32
  1340  0079BD  73                 	db	115	;'s'
  1341  0079BE  65                 	db	101	;'e'
  1342  0079BF  74                 	db	116	;'t'
  1343  0079C0  20                 	db	32
  1344  0079C1  70                 	db	112	;'p'
  1345  0079C2  69                 	db	105	;'i'
  1346  0079C3  6E                 	db	110	;'n'
  1347  0079C4  6D                 	db	109	;'m'
  1348  0079C5  6F                 	db	111	;'o'
  1349  0079C6  64                 	db	100	;'d'
  1350  0079C7  65                 	db	101	;'e'
  1351  0079C8  20                 	db	32
  1352  0079C9  47                 	db	71	;'G'
  1353  0079CA  50                 	db	80	;'P'
  1354  0079CB  49                 	db	73	;'I'
  1355  0079CC  4F                 	db	79	;'O'
  1356  0079CD  31                 	db	49	;'1'
  1357  0079CE  32                 	db	50	;'2'
  1358  0079CF  20                 	db	32
  1359  0079D0  61                 	db	97	;'a'
  1360  0079D1  6E                 	db	110	;'n'
  1361  0079D2  61                 	db	97	;'a'
  1362  0079D3  00                 	db	0
  1363  0079D4                     STR_183:
  1364  0079D4  73                 	db	115	;'s'
  1365  0079D5  79                 	db	121	;'y'
  1366  0079D6  73                 	db	115	;'s'
  1367  0079D7  20                 	db	32
  1368  0079D8  73                 	db	115	;'s'
  1369  0079D9  65                 	db	101	;'e'
  1370  0079DA  74                 	db	116	;'t'
  1371  0079DB  20                 	db	32
  1372  0079DC  70                 	db	112	;'p'
  1373  0079DD  69                 	db	105	;'i'
  1374  0079DE  6E                 	db	110	;'n'
  1375  0079DF  6D                 	db	109	;'m'
  1376  0079E0  6F                 	db	111	;'o'
  1377  0079E1  64                 	db	100	;'d'
  1378  0079E2  65                 	db	101	;'e'
  1379  0079E3  20                 	db	32
  1380  0079E4  47                 	db	71	;'G'
  1381  0079E5  50                 	db	80	;'P'
  1382  0079E6  49                 	db	73	;'I'
  1383  0079E7  4F                 	db	79	;'O'
  1384  0079E8  31                 	db	49	;'1'
  1385  0079E9  33                 	db	51	;'3'
  1386  0079EA  20                 	db	32
  1387  0079EB  61                 	db	97	;'a'
  1388  0079EC  6E                 	db	110	;'n'
  1389  0079ED  61                 	db	97	;'a'
  1390  0079EE  00                 	db	0
  1391  0079EF                     STR_177:
  1392  0079EF  73                 	db	115	;'s'
  1393  0079F0  79                 	db	121	;'y'
  1394  0079F1  73                 	db	115	;'s'
  1395  0079F2  20                 	db	32
  1396  0079F3  73                 	db	115	;'s'
  1397  0079F4  65                 	db	101	;'e'
  1398  0079F5  74                 	db	116	;'t'
  1399  0079F6  20                 	db	32
  1400  0079F7  70                 	db	112	;'p'
  1401  0079F8  69                 	db	105	;'i'
  1402  0079F9  6E                 	db	110	;'n'
  1403  0079FA  64                 	db	100	;'d'
  1404  0079FB  69                 	db	105	;'i'
  1405  0079FC  67                 	db	103	;'g'
  1406  0079FD  20                 	db	32
  1407  0079FE  47                 	db	71	;'G'
  1408  0079FF  50                 	db	80	;'P'
  1409  007A00  49                 	db	73	;'I'
  1410  007A01  4F                 	db	79	;'O'
  1411  007A02  31                 	db	49	;'1'
  1412  007A03  30                 	db	48	;'0'
  1413  007A04  20                 	db	32
  1414  007A05  30                 	db	48	;'0'
  1415  007A06  0D                 	db	13
  1416  007A07  0A                 	db	10
  1417  007A08  00                 	db	0
  1418  007A09                     STR_178:
  1419  007A09  73                 	db	115	;'s'
  1420  007A0A  79                 	db	121	;'y'
  1421  007A0B  73                 	db	115	;'s'
  1422  007A0C  20                 	db	32
  1423  007A0D  73                 	db	115	;'s'
  1424  007A0E  65                 	db	101	;'e'
  1425  007A0F  74                 	db	116	;'t'
  1426  007A10  20                 	db	32
  1427  007A11  70                 	db	112	;'p'
  1428  007A12  69                 	db	105	;'i'
  1429  007A13  6E                 	db	110	;'n'
  1430  007A14  64                 	db	100	;'d'
  1431  007A15  69                 	db	105	;'i'
  1432  007A16  67                 	db	103	;'g'
  1433  007A17  20                 	db	32
  1434  007A18  47                 	db	71	;'G'
  1435  007A19  50                 	db	80	;'P'
  1436  007A1A  49                 	db	73	;'I'
  1437  007A1B  4F                 	db	79	;'O'
  1438  007A1C  31                 	db	49	;'1'
  1439  007A1D  31                 	db	49	;'1'
  1440  007A1E  20                 	db	32
  1441  007A1F  30                 	db	48	;'0'
  1442  007A20  0D                 	db	13
  1443  007A21  0A                 	db	10
  1444  007A22  00                 	db	0
  1445  007A23                     STR_175:
  1446  007A23  73                 	db	115	;'s'
  1447  007A24  79                 	db	121	;'y'
  1448  007A25  73                 	db	115	;'s'
  1449  007A26  20                 	db	32
  1450  007A27  73                 	db	115	;'s'
  1451  007A28  65                 	db	101	;'e'
  1452  007A29  74                 	db	116	;'t'
  1453  007A2A  20                 	db	32
  1454  007A2B  70                 	db	112	;'p'
  1455  007A2C  69                 	db	105	;'i'
  1456  007A2D  6E                 	db	110	;'n'
  1457  007A2E  64                 	db	100	;'d'
  1458  007A2F  69                 	db	105	;'i'
  1459  007A30  67                 	db	103	;'g'
  1460  007A31  20                 	db	32
  1461  007A32  47                 	db	71	;'G'
  1462  007A33  50                 	db	80	;'P'
  1463  007A34  49                 	db	73	;'I'
  1464  007A35  4F                 	db	79	;'O'
  1465  007A36  31                 	db	49	;'1'
  1466  007A37  30                 	db	48	;'0'
  1467  007A38  20                 	db	32
  1468  007A39  31                 	db	49	;'1'
  1469  007A3A  0D                 	db	13
  1470  007A3B  0A                 	db	10
  1471  007A3C  00                 	db	0
  1472  007A3D                     STR_176:
  1473  007A3D  73                 	db	115	;'s'
  1474  007A3E  79                 	db	121	;'y'
  1475  007A3F  73                 	db	115	;'s'
  1476  007A40  20                 	db	32
  1477  007A41  73                 	db	115	;'s'
  1478  007A42  65                 	db	101	;'e'
  1479  007A43  74                 	db	116	;'t'
  1480  007A44  20                 	db	32
  1481  007A45  70                 	db	112	;'p'
  1482  007A46  69                 	db	105	;'i'
  1483  007A47  6E                 	db	110	;'n'
  1484  007A48  64                 	db	100	;'d'
  1485  007A49  69                 	db	105	;'i'
  1486  007A4A  67                 	db	103	;'g'
  1487  007A4B  20                 	db	32
  1488  007A4C  47                 	db	71	;'G'
  1489  007A4D  50                 	db	80	;'P'
  1490  007A4E  49                 	db	73	;'I'
  1491  007A4F  4F                 	db	79	;'O'
  1492  007A50  31                 	db	49	;'1'
  1493  007A51  31                 	db	49	;'1'
  1494  007A52  20                 	db	32
  1495  007A53  31                 	db	49	;'1'
  1496  007A54  0D                 	db	13
  1497  007A55  0A                 	db	10
  1498  007A56  00                 	db	0
  1499  007A57                     STR_185:
  1500  007A57  73                 	db	115	;'s'
  1501  007A58  79                 	db	121	;'y'
  1502  007A59  73                 	db	115	;'s'
  1503  007A5A  20                 	db	32
  1504  007A5B  67                 	db	103	;'g'
  1505  007A5C  65                 	db	101	;'e'
  1506  007A5D  74                 	db	116	;'t'
  1507  007A5E  20                 	db	32
  1508  007A5F  70                 	db	112	;'p'
  1509  007A60  69                 	db	105	;'i'
  1510  007A61  6E                 	db	110	;'n'
  1511  007A62  61                 	db	97	;'a'
  1512  007A63  6E                 	db	110	;'n'
  1513  007A64  61                 	db	97	;'a'
  1514  007A65  20                 	db	32
  1515  007A66  47                 	db	71	;'G'
  1516  007A67  50                 	db	80	;'P'
  1517  007A68  49                 	db	73	;'I'
  1518  007A69  4F                 	db	79	;'O'
  1519  007A6A  31                 	db	49	;'1'
  1520  007A6B  32                 	db	50	;'2'
  1521  007A6C  00                 	db	0
  1522  007A6D                     STR_186:
  1523  007A6D  73                 	db	115	;'s'
  1524  007A6E  79                 	db	121	;'y'
  1525  007A6F  73                 	db	115	;'s'
  1526  007A70  20                 	db	32
  1527  007A71  67                 	db	103	;'g'
  1528  007A72  65                 	db	101	;'e'
  1529  007A73  74                 	db	116	;'t'
  1530  007A74  20                 	db	32
  1531  007A75  70                 	db	112	;'p'
  1532  007A76  69                 	db	105	;'i'
  1533  007A77  6E                 	db	110	;'n'
  1534  007A78  61                 	db	97	;'a'
  1535  007A79  6E                 	db	110	;'n'
  1536  007A7A  61                 	db	97	;'a'
  1537  007A7B  20                 	db	32
  1538  007A7C  47                 	db	71	;'G'
  1539  007A7D  50                 	db	80	;'P'
  1540  007A7E  49                 	db	73	;'I'
  1541  007A7F  4F                 	db	79	;'O'
  1542  007A80  31                 	db	49	;'1'
  1543  007A81  33                 	db	51	;'3'
  1544  007A82  00                 	db	0
  1545  007A83                     STR_22:
  1546  007A83  73                 	db	115	;'s'
  1547  007A84  79                 	db	121	;'y'
  1548  007A85  73                 	db	115	;'s'
  1549  007A86  20                 	db	32
  1550  007A87  73                 	db	115	;'s'
  1551  007A88  6C                 	db	108	;'l'
  1552  007A89  65                 	db	101	;'e'
  1553  007A8A  65                 	db	101	;'e'
  1554  007A8B  70                 	db	112	;'p'
  1555  007A8C  20                 	db	32
  1556  007A8D  39                 	db	57	;'9'
  1557  007A8E  39                 	db	57	;'9'
  1558  007A8F  39                 	db	57	;'9'
  1559  007A90  39                 	db	57	;'9'
  1560  007A91  39                 	db	57	;'9'
  1561  007A92  39                 	db	57	;'9'
  1562  007A93  39                 	db	57	;'9'
  1563  007A94  39                 	db	57	;'9'
  1564  007A95  39                 	db	57	;'9'
  1565  007A96  00                 	db	0
  1566  007A97                     STR_96:
  1567  007A97  4D                 	db	77	;'M'
  1568  007A98  61                 	db	97	;'a'
  1569  007A99  63                 	db	99	;'c'
  1570  007A9A  20                 	db	32
  1571  007A9B  45                 	db	69	;'E'
  1572  007A9C  72                 	db	114	;'r'
  1573  007A9D  72                 	db	114	;'r'
  1574  007A9E  6F                 	db	111	;'o'
  1575  007A9F  72                 	db	114	;'r'
  1576  007AA0  20                 	db	32
  1577  007AA1  4F                 	db	79	;'O'
  1578  007AA2  63                 	db	99	;'c'
  1579  007AA3  63                 	db	99	;'c'
  1580  007AA4  75                 	db	117	;'u'
  1581  007AA5  72                 	db	114	;'r'
  1582  007AA6  72                 	db	114	;'r'
  1583  007AA7  65                 	db	101	;'e'
  1584  007AA8  64                 	db	100	;'d'
  1585  007AA9  00                 	db	0
  1586  007AAA                     STR_83:
  1587  007AAA  28                 	db	40
  1588  007AAB  55                 	db	85	;'U'
  1589  007AAC  4E                 	db	78	;'N'
  1590  007AAD  43                 	db	67	;'C'
  1591  007AAE  4E                 	db	78	;'N'
  1592  007AAF  46                 	db	70	;'F'
  1593  007AB0  29                 	db	41
  1594  007AB1  20                 	db	32
  1595  007AB2  20                 	db	32
  1596  007AB3  20                 	db	32
  1597  007AB4  20                 	db	32
  1598  007AB5  28                 	db	40
  1599  007AB6  43                 	db	67	;'C'
  1600  007AB7  4E                 	db	78	;'N'
  1601  007AB8  46                 	db	70	;'F'
  1602  007AB9  29                 	db	41
  1603  007ABA  20                 	db	32
  1604  007ABB  00                 	db	0
  1605  007ABC                     STR_40:
  1606  007ABC  20                 	db	32
  1607  007ABD  20                 	db	32
  1608  007ABE  28                 	db	40
  1609  007ABF  53                 	db	83	;'S'
  1610  007AC0  32                 	db	50	;'2'
  1611  007AC1  29                 	db	41
  1612  007AC2  20                 	db	32
  1613  007AC3  20                 	db	32
  1614  007AC4  20                 	db	32
  1615  007AC5  20                 	db	32
  1616  007AC6  20                 	db	32
  1617  007AC7  20                 	db	32
  1618  007AC8  20                 	db	32
  1619  007AC9  20                 	db	32
  1620  007ACA  20                 	db	32
  1621  007ACB  20                 	db	32
  1622  007ACC  00                 	db	0
  1623  007ACD                     STR_92:
  1624  007ACD  20                 	db	32
  1625  007ACE  20                 	db	32
  1626  007ACF  20                 	db	32
  1627  007AD0  20                 	db	32
  1628  007AD1  52                 	db	82	;'R'
  1629  007AD2  65                 	db	101	;'e'
  1630  007AD3  63                 	db	99	;'c'
  1631  007AD4  65                 	db	101	;'e'
  1632  007AD5  69                 	db	105	;'i'
  1633  007AD6  76                 	db	118	;'v'
  1634  007AD7  65                 	db	101	;'e'
  1635  007AD8  64                 	db	100	;'d'
  1636  007AD9  20                 	db	32
  1637  007ADA  20                 	db	32
  1638  007ADB  20                 	db	32
  1639  007ADC  20                 	db	32
  1640  007ADD  00                 	db	0
  1641  007ADE                     STR_42:
  1642  007ADE  20                 	db	32
  1643  007ADF  20                 	db	32
  1644  007AE0  20                 	db	32
  1645  007AE1  20                 	db	32
  1646  007AE2  20                 	db	32
  1647  007AE3  20                 	db	32
  1648  007AE4  20                 	db	32
  1649  007AE5  20                 	db	32
  1650  007AE6  20                 	db	32
  1651  007AE7  28                 	db	40
  1652  007AE8  53                 	db	83	;'S'
  1653  007AE9  33                 	db	51	;'3'
  1654  007AEA  29                 	db	41
  1655  007AEB  20                 	db	32
  1656  007AEC  20                 	db	32
  1657  007AED  20                 	db	32
  1658  007AEE  00                 	db	0
  1659  007AEF                     STR_34:
  1660  007AEF  20                 	db	32
  1661  007AF0  20                 	db	32
  1662  007AF1  28                 	db	40
  1663  007AF2  53                 	db	83	;'S'
  1664  007AF3  32                 	db	50	;'2'
  1665  007AF4  29                 	db	41
  1666  007AF5  20                 	db	32
  1667  007AF6  20                 	db	32
  1668  007AF7  20                 	db	32
  1669  007AF8  28                 	db	40
  1670  007AF9  53                 	db	83	;'S'
  1671  007AFA  33                 	db	51	;'3'
  1672  007AFB  29                 	db	41
  1673  007AFC  20                 	db	32
  1674  007AFD  20                 	db	32
  1675  007AFE  20                 	db	32
  1676  007AFF  00                 	db	0
  1677  007B00                     STR_79:
  1678  007B00  20                 	db	32
  1679  007B01  20                 	db	32
  1680  007B02  4C                 	db	76	;'L'
  1681  007B03  61                 	db	97	;'a'
  1682  007B04  73                 	db	115	;'s'
  1683  007B05  74                 	db	116	;'t'
  1684  007B06  20                 	db	32
  1685  007B07  4D                 	db	77	;'M'
  1686  007B08  65                 	db	101	;'e'
  1687  007B09  73                 	db	115	;'s'
  1688  007B0A  73                 	db	115	;'s'
  1689  007B0B  61                 	db	97	;'a'
  1690  007B0C  67                 	db	103	;'g'
  1691  007B0D  65                 	db	101	;'e'
  1692  007B0E  20                 	db	32
  1693  007B0F  20                 	db	32
  1694  007B10  00                 	db	0
  1695  007B11                     STR_78:
  1696  007B11  20                 	db	32
  1697  007B12  56                 	db	86	;'V'
  1698  007B13  69                 	db	105	;'i'
  1699  007B14  65                 	db	101	;'e'
  1700  007B15  77                 	db	119	;'w'
  1701  007B16  20                 	db	32
  1702  007B17  44                 	db	68	;'D'
  1703  007B18  6F                 	db	111	;'o'
  1704  007B19  77                 	db	119	;'w'
  1705  007B1A  6E                 	db	110	;'n'
  1706  007B1B  6C                 	db	108	;'l'
  1707  007B1C  69                 	db	105	;'i'
  1708  007B1D  6E                 	db	110	;'n'
  1709  007B1E  6B                 	db	107	;'k'
  1710  007B1F  20                 	db	32
  1711  007B20  20                 	db	32
  1712  007B21  00                 	db	0
  1713  007B22                     STR_75:
  1714  007B22  20                 	db	32
  1715  007B23  20                 	db	32
  1716  007B24  49                 	db	73	;'I'
  1717  007B25  73                 	db	115	;'s'
  1718  007B26  73                 	db	115	;'s'
  1719  007B27  75                 	db	117	;'u'
  1720  007B28  65                 	db	101	;'e'
  1721  007B29  20                 	db	32
  1722  007B2A  55                 	db	85	;'U'
  1723  007B2B  70                 	db	112	;'p'
  1724  007B2C  6C                 	db	108	;'l'
  1725  007B2D  69                 	db	105	;'i'
  1726  007B2E  6E                 	db	110	;'n'
  1727  007B2F  6B                 	db	107	;'k'
  1728  007B30  20                 	db	32
  1729  007B31  20                 	db	32
  1730  007B32  00                 	db	0
  1731  007B33                     STR_29:
  1732  007B33  20                 	db	32
  1733  007B34  28                 	db	40
  1734  007B35  53                 	db	83	;'S'
  1735  007B36  32                 	db	50	;'2'
  1736  007B37  29                 	db	41
  1737  007B38  20                 	db	32
  1738  007B39  20                 	db	32
  1739  007B3A  20                 	db	32
  1740  007B3B  20                 	db	32
  1741  007B3C  20                 	db	32
  1742  007B3D  20                 	db	32
  1743  007B3E  28                 	db	40
  1744  007B3F  53                 	db	83	;'S'
  1745  007B40  33                 	db	51	;'3'
  1746  007B41  29                 	db	41
  1747  007B42  20                 	db	32
  1748  007B43  00                 	db	0
  1749  007B44                     STR_32:
  1750  007B44  20                 	db	32
  1751  007B45  4A                 	db	74	;'J'
  1752  007B46  6F                 	db	111	;'o'
  1753  007B47  69                 	db	105	;'i'
  1754  007B48  6E                 	db	110	;'n'
  1755  007B49  69                 	db	105	;'i'
  1756  007B4A  6E                 	db	110	;'n'
  1757  007B4B  67                 	db	103	;'g'
  1758  007B4C  20                 	db	32
  1759  007B4D  4D                 	db	77	;'M'
  1760  007B4E  65                 	db	101	;'e'
  1761  007B4F  74                 	db	116	;'t'
  1762  007B50  68                 	db	104	;'h'
  1763  007B51  6F                 	db	111	;'o'
  1764  007B52  64                 	db	100	;'d'
  1765  007B53  20                 	db	32
  1766  007B54  00                 	db	0
  1767  007B55                     STR_91:
  1768  007B55  53                 	db	83	;'S'
  1769  007B56  65                 	db	101	;'e'
  1770  007B57  72                 	db	114	;'r'
  1771  007B58  76                 	db	118	;'v'
  1772  007B59  65                 	db	101	;'e'
  1773  007B5A  72                 	db	114	;'r'
  1774  007B5B  20                 	db	32
  1775  007B5C  52                 	db	82	;'R'
  1776  007B5D  65                 	db	101	;'e'
  1777  007B5E  73                 	db	115	;'s'
  1778  007B5F  70                 	db	112	;'p'
  1779  007B60  6F                 	db	111	;'o'
  1780  007B61  6E                 	db	110	;'n'
  1781  007B62  73                 	db	115	;'s'
  1782  007B63  65                 	db	101	;'e'
  1783  007B64  20                 	db	32
  1784  007B65  00                 	db	0
  1785  007B66                     STR_120:
  1786  007B66  54                 	db	84	;'T'
  1787  007B67  78                 	db	120	;'x'
  1788  007B68  20                 	db	32
  1789  007B69  45                 	db	69	;'E'
  1790  007B6A  76                 	db	118	;'v'
  1791  007B6B  65                 	db	101	;'e'
  1792  007B6C  6E                 	db	110	;'n'
  1793  007B6D  74                 	db	116	;'t'
  1794  007B6E  20                 	db	32
  1795  007B6F  54                 	db	84	;'T'
  1796  007B70  69                 	db	105	;'i'
  1797  007B71  6D                 	db	109	;'m'
  1798  007B72  69                 	db	105	;'i'
  1799  007B73  6E                 	db	110	;'n'
  1800  007B74  67                 	db	103	;'g'
  1801  007B75  20                 	db	32
  1802  007B76  00                 	db	0
  1803  007B77                     STR_119:
  1804  007B77  50                 	db	80	;'P'
  1805  007B78  65                 	db	101	;'e'
  1806  007B79  72                 	db	114	;'r'
  1807  007B7A  69                 	db	105	;'i'
  1808  007B7B  6F                 	db	111	;'o'
  1809  007B7C  64                 	db	100	;'d'
  1810  007B7D  69                 	db	105	;'i'
  1811  007B7E  63                 	db	99	;'c'
  1812  007B7F  20                 	db	32
  1813  007B80  55                 	db	85	;'U'
  1814  007B81  70                 	db	112	;'p'
  1815  007B82  6C                 	db	108	;'l'
  1816  007B83  69                 	db	105	;'i'
  1817  007B84  6E                 	db	110	;'n'
  1818  007B85  6B                 	db	107	;'k'
  1819  007B86  20                 	db	32
  1820  007B87  00                 	db	0
  1821  007B88                     STR_76:
  1822  007B88  20                 	db	32
  1823  007B89  4C                 	db	76	;'L'
  1824  007B8A  6F                 	db	111	;'o'
  1825  007B8B  52                 	db	82	;'R'
  1826  007B8C  61                 	db	97	;'a'
  1827  007B8D  57                 	db	87	;'W'
  1828  007B8E  41                 	db	65	;'A'
  1829  007B8F  4E                 	db	78	;'N'
  1830  007B90  20                 	db	32
  1831  007B91  50                 	db	80	;'P'
  1832  007B92  61                 	db	97	;'a'
  1833  007B93  63                 	db	99	;'c'
  1834  007B94  6B                 	db	107	;'k'
  1835  007B95  65                 	db	101	;'e'
  1836  007B96  74                 	db	116	;'t'
  1837  007B97  20                 	db	32
  1838  007B98  00                 	db	0
  1839  007B99                     STR_33:
  1840  007B99  3C                 	db	60	;'<'
  1841  007B9A  2D                 	db	45
  1842  007B9B  20                 	db	32
  1843  007B9C  41                 	db	65	;'A'
  1844  007B9D  42                 	db	66	;'B'
  1845  007B9E  50                 	db	80	;'P'
  1846  007B9F  20                 	db	32
  1847  007BA0  20                 	db	32
  1848  007BA1  20                 	db	32
  1849  007BA2  4F                 	db	79	;'O'
  1850  007BA3  54                 	db	84	;'T'
  1851  007BA4  41                 	db	65	;'A'
  1852  007BA5  41                 	db	65	;'A'
  1853  007BA6  20                 	db	32
  1854  007BA7  2D                 	db	45
  1855  007BA8  3E                 	db	62	;'>'
  1856  007BA9  00                 	db	0
  1857  007BAA                     STR_26:
  1858  007BAA  52                 	db	82	;'R'
  1859  007BAB  65                 	db	101	;'e'
  1860  007BAC  52                 	db	82	;'R'
  1861  007BAD  75                 	db	117	;'u'
  1862  007BAE  6E                 	db	110	;'n'
  1863  007BAF  20                 	db	32
  1864  007BB0  50                 	db	80	;'P'
  1865  007BB1  77                 	db	119	;'w'
  1866  007BB2  72                 	db	114	;'r'
  1867  007BB3  54                 	db	84	;'T'
  1868  007BB4  73                 	db	115	;'s'
  1869  007BB5  74                 	db	116	;'t'
  1870  007BB6  3C                 	db	60	;'<'
  1871  007BB7  53                 	db	83	;'S'
  1872  007BB8  32                 	db	50	;'2'
  1873  007BB9  3E                 	db	62	;'>'
  1874  007BBA  00                 	db	0
  1875  007BBB                     STR_94:
  1876  007BBB  44                 	db	68	;'D'
  1877  007BBC  61                 	db	97	;'a'
  1878  007BBD  74                 	db	116	;'t'
  1879  007BBE  61                 	db	97	;'a'
  1880  007BBF  20                 	db	32
  1881  007BC0  54                 	db	84	;'T'
  1882  007BC1  72                 	db	114	;'r'
  1883  007BC2  61                 	db	97	;'a'
  1884  007BC3  6E                 	db	110	;'n'
  1885  007BC4  73                 	db	115	;'s'
  1886  007BC5  6D                 	db	109	;'m'
  1887  007BC6  69                 	db	105	;'i'
  1888  007BC7  74                 	db	116	;'t'
  1889  007BC8  74                 	db	116	;'t'
  1890  007BC9  65                 	db	101	;'e'
  1891  007BCA  64                 	db	100	;'d'
  1892  007BCB  00                 	db	0
  1893  007BCC                     STR_151:
  1894  007BCC  45                 	db	69	;'E'
  1895  007BCD  6E                 	db	110	;'n'
  1896  007BCE  74                 	db	116	;'t'
  1897  007BCF  65                 	db	101	;'e'
  1898  007BD0  72                 	db	114	;'r'
  1899  007BD1  20                 	db	32
  1900  007BD2  53                 	db	83	;'S'
  1901  007BD3  6C                 	db	108	;'l'
  1902  007BD4  65                 	db	101	;'e'
  1903  007BD5  65                 	db	101	;'e'
  1904  007BD6  70                 	db	112	;'p'
  1905  007BD7  20                 	db	32
  1906  007BD8  4D                 	db	77	;'M'
  1907  007BD9  6F                 	db	111	;'o'
  1908  007BDA  64                 	db	100	;'d'
  1909  007BDB  65                 	db	101	;'e'
  1910  007BDC  00                 	db	0
  1911  007BDD                     STR_81:
  1912  007BDD  55                 	db	85	;'U'
  1913  007BDE  70                 	db	112	;'p'
  1914  007BDF  6C                 	db	108	;'l'
  1915  007BE0  69                 	db	105	;'i'
  1916  007BE1  6E                 	db	110	;'n'
  1917  007BE2  6B                 	db	107	;'k'
  1918  007BE3  20                 	db	32
  1919  007BE4  50                 	db	80	;'P'
  1920  007BE5  63                 	db	99	;'c'
  1921  007BE6  6B                 	db	107	;'k'
  1922  007BE7  74                 	db	116	;'t'
  1923  007BE8  20                 	db	32
  1924  007BE9  54                 	db	84	;'T'
  1925  007BEA  79                 	db	121	;'y'
  1926  007BEB  70                 	db	112	;'p'
  1927  007BEC  65                 	db	101	;'e'
  1928  007BED  00                 	db	0
  1929  007BEE                     STR_135:
  1930  007BEE  53                 	db	83	;'S'
  1931  007BEF  65                 	db	101	;'e'
  1932  007BF0  6C                 	db	108	;'l'
  1933  007BF1  65                 	db	101	;'e'
  1934  007BF2  63                 	db	99	;'c'
  1935  007BF3  74                 	db	116	;'t'
  1936  007BF4  20                 	db	32
  1937  007BF5  44                 	db	68	;'D'
  1938  007BF6  61                 	db	97	;'a'
  1939  007BF7  74                 	db	116	;'t'
  1940  007BF8  61                 	db	97	;'a'
  1941  007BF9  20                 	db	32
  1942  007BFA  52                 	db	82	;'R'
  1943  007BFB  61                 	db	97	;'a'
  1944  007BFC  74                 	db	116	;'t'
  1945  007BFD  65                 	db	101	;'e'
  1946  007BFE  00                 	db	0
  1947  007BFF                     STR_27:
  1948  007BFF  4D                 	db	77	;'M'
  1949  007C00  6F                 	db	111	;'o'
  1950  007C01  62                 	db	98	;'b'
  1951  007C02  69                 	db	105	;'i'
  1952  007C03  6C                 	db	108	;'l'
  1953  007C04  65                 	db	101	;'e'
  1954  007C05  20                 	db	32
  1955  007C06  4D                 	db	77	;'M'
  1956  007C07  6F                 	db	111	;'o'
  1957  007C08  74                 	db	116	;'t'
  1958  007C09  65                 	db	101	;'e'
  1959  007C0A  20                 	db	32
  1960  007C0B  2D                 	db	45
  1961  007C0C  41                 	db	65	;'A'
  1962  007C0D  70                 	db	112	;'p'
  1963  007C0E  70                 	db	112	;'p'
  1964  007C0F  00                 	db	0
  1965  007C10                     STR_28:
  1966  007C10  4E                 	db	78	;'N'
  1967  007C11  61                 	db	97	;'a'
  1968  007C12  76                 	db	118	;'v'
  1969  007C13  69                 	db	105	;'i'
  1970  007C14  67                 	db	103	;'g'
  1971  007C15  61                 	db	97	;'a'
  1972  007C16  74                 	db	116	;'t'
  1973  007C17  65                 	db	101	;'e'
  1974  007C18  20                 	db	32
  1975  007C19  20                 	db	32
  1976  007C1A  53                 	db	83	;'S'
  1977  007C1B  65                 	db	101	;'e'
  1978  007C1C  6C                 	db	108	;'l'
  1979  007C1D  65                 	db	101	;'e'
  1980  007C1E  63                 	db	99	;'c'
  1981  007C1F  74                 	db	116	;'t'
  1982  007C20  00                 	db	0
  1983  007C21                     STR_111:
  1984  007C21  4D                 	db	77	;'M'
  1985  007C22  65                 	db	101	;'e'
  1986  007C23  6E                 	db	110	;'n'
  1987  007C24  75                 	db	117	;'u'
  1988  007C25  20                 	db	32
  1989  007C26  48                 	db	72	;'H'
  1990  007C27  61                 	db	97	;'a'
  1991  007C28  73                 	db	115	;'s'
  1992  007C29  20                 	db	32
  1993  007C2A  54                 	db	84	;'T'
  1994  007C2B  69                 	db	105	;'i'
  1995  007C2C  6D                 	db	109	;'m'
  1996  007C2D  65                 	db	101	;'e'
  1997  007C2E  6F                 	db	111	;'o'
  1998  007C2F  75                 	db	117	;'u'
  1999  007C30  74                 	db	116	;'t'
  2000  007C31  00                 	db	0
  2001  007C32                     STR_71:
  2002  007C32  53                 	db	83	;'S'
  2003  007C33  65                 	db	101	;'e'
  2004  007C34  6E                 	db	110	;'n'
  2005  007C35  64                 	db	100	;'d'
  2006  007C36  20                 	db	32
  2007  007C37  50                 	db	80	;'P'
  2008  007C38  65                 	db	101	;'e'
  2009  007C39  72                 	db	114	;'r'
  2010  007C3A  69                 	db	105	;'i'
  2011  007C3B  6F                 	db	111	;'o'
  2012  007C3C  64                 	db	100	;'d'
  2013  007C3D  69                 	db	105	;'i'
  2014  007C3E  63                 	db	99	;'c'
  2015  007C3F  20                 	db	32
  2016  007C40  54                 	db	84	;'T'
  2017  007C41  78                 	db	120	;'x'
  2018  007C42  00                 	db	0
  2019  007C43                     STR_105:
  2020  007C43  44                 	db	68	;'D'
  2021  007C44  6F                 	db	111	;'o'
  2022  007C45  77                 	db	119	;'w'
  2023  007C46  6E                 	db	110	;'n'
  2024  007C47  6C                 	db	108	;'l'
  2025  007C48  69                 	db	105	;'i'
  2026  007C49  6E                 	db	110	;'n'
  2027  007C4A  6B                 	db	107	;'k'
  2028  007C4B  20                 	db	32
  2029  007C4C  44                 	db	68	;'D'
  2030  007C4D  69                 	db	105	;'i'
  2031  007C4E  73                 	db	115	;'s'
  2032  007C4F  70                 	db	112	;'p'
  2033  007C50  6C                 	db	108	;'l'
  2034  007C51  61                 	db	97	;'a'
  2035  007C52  79                 	db	121	;'y'
  2036  007C53  00                 	db	0
  2037  007C54                     STR_103:
  2038  007C54  20                 	db	32
  2039  007C55  20                 	db	32
  2040  007C56  20                 	db	32
  2041  007C57  20                 	db	32
  2042  007C58  44                 	db	68	;'D'
  2043  007C59  69                 	db	105	;'i'
  2044  007C5A  73                 	db	115	;'s'
  2045  007C5B  70                 	db	112	;'p'
  2046  007C5C  6C                 	db	108	;'l'
  2047  007C5D  61                 	db	97	;'a'
  2048  007C5E  79                 	db	121	;'y'
  2049  007C5F  20                 	db	32
  2050  007C60  20                 	db	32
  2051  007C61  20                 	db	32
  2052  007C62  20                 	db	32
  2053  007C63  00                 	db	0
  2054  007C64                     STR_102:
  2055  007C64  20                 	db	32
  2056  007C65  20                 	db	32
  2057  007C66  53                 	db	83	;'S'
  2058  007C67  65                 	db	101	;'e'
  2059  007C68  6E                 	db	110	;'n'
  2060  007C69  73                 	db	115	;'s'
  2061  007C6A  6F                 	db	111	;'o'
  2062  007C6B  72                 	db	114	;'r'
  2063  007C6C  20                 	db	32
  2064  007C6D  44                 	db	68	;'D'
  2065  007C6E  61                 	db	97	;'a'
  2066  007C6F  74                 	db	116	;'t'
  2067  007C70  61                 	db	97	;'a'
  2068  007C71  20                 	db	32
  2069  007C72  20                 	db	32
  2070  007C73  00                 	db	0
  2071  007C74                     STR_114:
  2072  007C74  28                 	db	40
  2073  007C75  4E                 	db	78	;'N'
  2074  007C76  41                 	db	65	;'A'
  2075  007C77  56                 	db	86	;'V'
  2076  007C78  29                 	db	41
  2077  007C79  20                 	db	32
  2078  007C7A  20                 	db	32
  2079  007C7B  20                 	db	32
  2080  007C7C  20                 	db	32
  2081  007C7D  28                 	db	40
  2082  007C7E  43                 	db	67	;'C'
  2083  007C7F  4E                 	db	78	;'N'
  2084  007C80  47                 	db	71	;'G'
  2085  007C81  29                 	db	41
  2086  007C82  20                 	db	32
  2087  007C83  00                 	db	0
  2088  007C84                     STR_77:
  2089  007C84  28                 	db	40
  2090  007C85  4E                 	db	78	;'N'
  2091  007C86  41                 	db	65	;'A'
  2092  007C87  56                 	db	86	;'V'
  2093  007C88  29                 	db	41
  2094  007C89  20                 	db	32
  2095  007C8A  20                 	db	32
  2096  007C8B  20                 	db	32
  2097  007C8C  20                 	db	32
  2098  007C8D  28                 	db	40
  2099  007C8E  53                 	db	83	;'S'
  2100  007C8F  45                 	db	69	;'E'
  2101  007C90  4C                 	db	76	;'L'
  2102  007C91  29                 	db	41
  2103  007C92  20                 	db	32
  2104  007C93  00                 	db	0
  2105  007C94                     STR_152:
  2106  007C94  28                 	db	40
  2107  007C95  4E                 	db	78	;'N'
  2108  007C96  41                 	db	65	;'A'
  2109  007C97  56                 	db	86	;'V'
  2110  007C98  29                 	db	41
  2111  007C99  20                 	db	32
  2112  007C9A  20                 	db	32
  2113  007C9B  20                 	db	32
  2114  007C9C  20                 	db	32
  2115  007C9D  28                 	db	40
  2116  007C9E  53                 	db	83	;'S'
  2117  007C9F  4C                 	db	76	;'L'
  2118  007CA0  50                 	db	80	;'P'
  2119  007CA1  29                 	db	41
  2120  007CA2  20                 	db	32
  2121  007CA3  00                 	db	0
  2122  007CA4                     STR_163:
  2123  007CA4  6D                 	db	109	;'m'
  2124  007CA5  61                 	db	97	;'a'
  2125  007CA6  63                 	db	99	;'c'
  2126  007CA7  20                 	db	32
  2127  007CA8  73                 	db	115	;'s'
  2128  007CA9  65                 	db	101	;'e'
  2129  007CAA  74                 	db	116	;'t'
  2130  007CAB  20                 	db	32
  2131  007CAC  61                 	db	97	;'a'
  2132  007CAD  64                 	db	100	;'d'
  2133  007CAE  72                 	db	114	;'r'
  2134  007CAF  20                 	db	32
  2135  007CB0  6F                 	db	111	;'o'
  2136  007CB1  66                 	db	102	;'f'
  2137  007CB2  66                 	db	102	;'f'
  2138  007CB3  00                 	db	0
  2139  007CB4                     STR_98:
  2140  007CB4  4E                 	db	78	;'N'
  2141  007CB5  6F                 	db	111	;'o'
  2142  007CB6  20                 	db	32
  2143  007CB7  46                 	db	70	;'F'
  2144  007CB8  72                 	db	114	;'r'
  2145  007CB9  65                 	db	101	;'e'
  2146  007CBA  65                 	db	101	;'e'
  2147  007CBB  20                 	db	32
  2148  007CBC  43                 	db	67	;'C'
  2149  007CBD  68                 	db	104	;'h'
  2150  007CBE  61                 	db	97	;'a'
  2151  007CBF  6E                 	db	110	;'n'
  2152  007CC0  6E                 	db	110	;'n'
  2153  007CC1  65                 	db	101	;'e'
  2154  007CC2  6C                 	db	108	;'l'
  2155  007CC3  00                 	db	0
  2156  007CC4                     STR_7:
  2157  007CC4  42                 	db	66	;'B'
  2158  007CC5  75                 	db	117	;'u'
  2159  007CC6  69                 	db	105	;'i'
  2160  007CC7  6C                 	db	108	;'l'
  2161  007CC8  64                 	db	100	;'d'
  2162  007CC9  20                 	db	32
  2163  007CCA  44                 	db	68	;'D'
  2164  007CCB  61                 	db	97	;'a'
  2165  007CCC  74                 	db	116	;'t'
  2166  007CCD  65                 	db	101	;'e'
  2167  007CCE  2F                 	db	47
  2168  007CCF  54                 	db	84	;'T'
  2169  007CD0  69                 	db	105	;'i'
  2170  007CD1  6D                 	db	109	;'m'
  2171  007CD2  65                 	db	101	;'e'
  2172  007CD3  00                 	db	0
  2173  007CD4                     STR_112:
  2174  007CD4  20                 	db	32
  2175  007CD5  20                 	db	32
  2176  007CD6  20                 	db	32
  2177  007CD7  20                 	db	32
  2178  007CD8  45                 	db	69	;'E'
  2179  007CD9  6E                 	db	110	;'n'
  2180  007CDA  61                 	db	97	;'a'
  2181  007CDB  62                 	db	98	;'b'
  2182  007CDC  6C                 	db	108	;'l'
  2183  007CDD  65                 	db	101	;'e'
  2184  007CDE  64                 	db	100	;'d'
  2185  007CDF  20                 	db	32
  2186  007CE0  20                 	db	32
  2187  007CE1  20                 	db	32
  2188  007CE2  00                 	db	0
  2189  007CE3                     STR_113:
  2190  007CE3  20                 	db	32
  2191  007CE4  20                 	db	32
  2192  007CE5  20                 	db	32
  2193  007CE6  20                 	db	32
  2194  007CE7  44                 	db	68	;'D'
  2195  007CE8  69                 	db	105	;'i'
  2196  007CE9  73                 	db	115	;'s'
  2197  007CEA  61                 	db	97	;'a'
  2198  007CEB  62                 	db	98	;'b'
  2199  007CEC  6C                 	db	108	;'l'
  2200  007CED  65                 	db	101	;'e'
  2201  007CEE  64                 	db	100	;'d'
  2202  007CEF  20                 	db	32
  2203  007CF0  20                 	db	32
  2204  007CF1  00                 	db	0
  2205  007CF2                     STR_172:
  2206  007CF2  6D                 	db	109	;'m'
  2207  007CF3  61                 	db	97	;'a'
  2208  007CF4  63                 	db	99	;'c'
  2209  007CF5  20                 	db	32
  2210  007CF6  73                 	db	115	;'s'
  2211  007CF7  65                 	db	101	;'e'
  2212  007CF8  74                 	db	116	;'t'
  2213  007CF9  20                 	db	32
  2214  007CFA  61                 	db	97	;'a'
  2215  007CFB  64                 	db	100	;'d'
  2216  007CFC  72                 	db	114	;'r'
  2217  007CFD  20                 	db	32
  2218  007CFE  6F                 	db	111	;'o'
  2219  007CFF  6E                 	db	110	;'n'
  2220  007D00  00                 	db	0
  2221  007D01                     STR_2:
  2222  007D01  20                 	db	32
  2223  007D02  20                 	db	32
  2224  007D03  20                 	db	32
  2225  007D04  4C                 	db	76	;'L'
  2226  007D05  6F                 	db	111	;'o'
  2227  007D06  52                 	db	82	;'R'
  2228  007D07  61                 	db	97	;'a'
  2229  007D08  20                 	db	32
  2230  007D09  44                 	db	68	;'D'
  2231  007D0A  65                 	db	101	;'e'
  2232  007D0B  6D                 	db	109	;'m'
  2233  007D0C  6F                 	db	111	;'o'
  2234  007D0D  20                 	db	32
  2235  007D0E  20                 	db	32
  2236  007D0F  00                 	db	0
  2237  007D10                     STR_3:
  2238  007D10  20                 	db	32
  2239  007D11  56                 	db	86	;'V'
  2240  007D12  20                 	db	32
  2241  007D13  31                 	db	49	;'1'
  2242  007D14  2E                 	db	46
  2243  007D15  30                 	db	48	;'0'
  2244  007D16  2E                 	db	46
  2245  007D17  31                 	db	49	;'1'
  2246  007D18  20                 	db	32
  2247  007D19  43                 	db	67	;'C'
  2248  007D1A  6F                 	db	111	;'o'
  2249  007D1B  64                 	db	100	;'d'
  2250  007D1C  65                 	db	101	;'e'
  2251  007D1D  20                 	db	32
  2252  007D1E  00                 	db	0
  2253  007D1F                     STR_1:
  2254  007D1F  4D                 	db	77	;'M'
  2255  007D20  69                 	db	105	;'i'
  2256  007D21  63                 	db	99	;'c'
  2257  007D22  72                 	db	114	;'r'
  2258  007D23  6F                 	db	111	;'o'
  2259  007D24  63                 	db	99	;'c'
  2260  007D25  68                 	db	104	;'h'
  2261  007D26  69                 	db	105	;'i'
  2262  007D27  70                 	db	112	;'p'
  2263  007D28  20                 	db	32
  2264  007D29  4D                 	db	77	;'M'
  2265  007D2A  6F                 	db	111	;'o'
  2266  007D2B  74                 	db	116	;'t'
  2267  007D2C  65                 	db	101	;'e'
  2268  007D2D  00                 	db	0
  2269  007D2E                     STR_74:
  2270  007D2E  6D                 	db	109	;'m'
  2271  007D2F  61                 	db	97	;'a'
  2272  007D30  63                 	db	99	;'c'
  2273  007D31  20                 	db	32
  2274  007D32  74                 	db	116	;'t'
  2275  007D33  78                 	db	120	;'x'
  2276  007D34  20                 	db	32
  2277  007D35  75                 	db	117	;'u'
  2278  007D36  6E                 	db	110	;'n'
  2279  007D37  63                 	db	99	;'c'
  2280  007D38  6E                 	db	110	;'n'
  2281  007D39  66                 	db	102	;'f'
  2282  007D3A  20                 	db	32
  2283  007D3B  00                 	db	0
  2284  007D3C                     STR_43:
  2285  007D3C  6D                 	db	109	;'m'
  2286  007D3D  61                 	db	97	;'a'
  2287  007D3E  63                 	db	99	;'c'
  2288  007D3F  20                 	db	32
  2289  007D40  6A                 	db	106	;'j'
  2290  007D41  6F                 	db	111	;'o'
  2291  007D42  69                 	db	105	;'i'
  2292  007D43  6E                 	db	110	;'n'
  2293  007D44  20                 	db	32
  2294  007D45  6F                 	db	111	;'o'
  2295  007D46  74                 	db	116	;'t'
  2296  007D47  61                 	db	97	;'a'
  2297  007D48  61                 	db	97	;'a'
  2298  007D49  00                 	db	0
  2299  007D4A                     STR_57:
  2300  007D4A  69                 	db	105	;'i'
  2301  007D4B  6E                 	db	110	;'n'
  2302  007D4C  76                 	db	118	;'v'
  2303  007D4D  61                 	db	97	;'a'
  2304  007D4E  6C                 	db	108	;'l'
  2305  007D4F  69                 	db	105	;'i'
  2306  007D50  64                 	db	100	;'d'
  2307  007D51  5F                 	db	95	;'_'
  2308  007D52  70                 	db	112	;'p'
  2309  007D53  61                 	db	97	;'a'
  2310  007D54  72                 	db	114	;'r'
  2311  007D55  61                 	db	97	;'a'
  2312  007D56  6D                 	db	109	;'m'
  2313  007D57  00                 	db	0
  2314  007D58                     STR_45:
  2315  007D58  6B                 	db	107	;'k'
  2316  007D59  65                 	db	101	;'e'
  2317  007D5A  79                 	db	121	;'y'
  2318  007D5B  73                 	db	115	;'s'
  2319  007D5C  5F                 	db	95	;'_'
  2320  007D5D  6E                 	db	110	;'n'
  2321  007D5E  6F                 	db	111	;'o'
  2322  007D5F  74                 	db	116	;'t'
  2323  007D60  5F                 	db	95	;'_'
  2324  007D61  69                 	db	105	;'i'
  2325  007D62  6E                 	db	110	;'n'
  2326  007D63  69                 	db	105	;'i'
  2327  007D64  74                 	db	116	;'t'
  2328  007D65  00                 	db	0
  2329  007D66                     STR_82:
  2330  007D66  54                 	db	84	;'T'
  2331  007D67  68                 	db	104	;'h'
  2332  007D68  72                 	db	114	;'r'
  2333  007D69  6F                 	db	111	;'o'
  2334  007D6A  75                 	db	117	;'u'
  2335  007D6B  20                 	db	32
  2336  007D6C  50                 	db	80	;'P'
  2337  007D6D  6F                 	db	111	;'o'
  2338  007D6E  72                 	db	114	;'r'
  2339  007D6F  74                 	db	116	;'t'
  2340  007D70  23                 	db	35
  2341  007D71  20                 	db	32
  2342  007D72  00                 	db	0
  2343  007D73                     STR_73:
  2344  007D73  4C                 	db	76	;'L'
  2345  007D74  3A                 	db	58	;':'
  2346  007D75  20                 	db	32
  2347  007D76  20                 	db	32
  2348  007D77  20                 	db	32
  2349  007D78  20                 	db	32
  2350  007D79  20                 	db	32
  2351  007D7A  20                 	db	32
  2352  007D7B  20                 	db	32
  2353  007D7C  54                 	db	84	;'T'
  2354  007D7D  3A                 	db	58	;':'
  2355  007D7E  20                 	db	32
  2356  007D7F  00                 	db	0
  2357  007D80                     STR_164:
  2358  007D80  6D                 	db	109	;'m'
  2359  007D81  61                 	db	97	;'a'
  2360  007D82  63                 	db	99	;'c'
  2361  007D83  20                 	db	32
  2362  007D84  73                 	db	115	;'s'
  2363  007D85  65                 	db	101	;'e'
  2364  007D86  74                 	db	116	;'t'
  2365  007D87  20                 	db	32
  2366  007D88  64                 	db	100	;'d'
  2367  007D89  72                 	db	114	;'r'
  2368  007D8A  20                 	db	32
  2369  007D8B  30                 	db	48	;'0'
  2370  007D8C  00                 	db	0
  2371  007D8D                     STR_165:
  2372  007D8D  6D                 	db	109	;'m'
  2373  007D8E  61                 	db	97	;'a'
  2374  007D8F  63                 	db	99	;'c'
  2375  007D90  20                 	db	32
  2376  007D91  73                 	db	115	;'s'
  2377  007D92  65                 	db	101	;'e'
  2378  007D93  74                 	db	116	;'t'
  2379  007D94  20                 	db	32
  2380  007D95  64                 	db	100	;'d'
  2381  007D96  72                 	db	114	;'r'
  2382  007D97  20                 	db	32
  2383  007D98  31                 	db	49	;'1'
  2384  007D99  00                 	db	0
  2385  007D9A                     STR_166:
  2386  007D9A  6D                 	db	109	;'m'
  2387  007D9B  61                 	db	97	;'a'
  2388  007D9C  63                 	db	99	;'c'
  2389  007D9D  20                 	db	32
  2390  007D9E  73                 	db	115	;'s'
  2391  007D9F  65                 	db	101	;'e'
  2392  007DA0  74                 	db	116	;'t'
  2393  007DA1  20                 	db	32
  2394  007DA2  64                 	db	100	;'d'
  2395  007DA3  72                 	db	114	;'r'
  2396  007DA4  20                 	db	32
  2397  007DA5  32                 	db	50	;'2'
  2398  007DA6  00                 	db	0
  2399  007DA7                     STR_167:
  2400  007DA7  6D                 	db	109	;'m'
  2401  007DA8  61                 	db	97	;'a'
  2402  007DA9  63                 	db	99	;'c'
  2403  007DAA  20                 	db	32
  2404  007DAB  73                 	db	115	;'s'
  2405  007DAC  65                 	db	101	;'e'
  2406  007DAD  74                 	db	116	;'t'
  2407  007DAE  20                 	db	32
  2408  007DAF  64                 	db	100	;'d'
  2409  007DB0  72                 	db	114	;'r'
  2410  007DB1  20                 	db	32
  2411  007DB2  33                 	db	51	;'3'
  2412  007DB3  00                 	db	0
  2413  007DB4                     STR_168:
  2414  007DB4  6D                 	db	109	;'m'
  2415  007DB5  61                 	db	97	;'a'
  2416  007DB6  63                 	db	99	;'c'
  2417  007DB7  20                 	db	32
  2418  007DB8  73                 	db	115	;'s'
  2419  007DB9  65                 	db	101	;'e'
  2420  007DBA  74                 	db	116	;'t'
  2421  007DBB  20                 	db	32
  2422  007DBC  64                 	db	100	;'d'
  2423  007DBD  72                 	db	114	;'r'
  2424  007DBE  20                 	db	32
  2425  007DBF  34                 	db	52	;'4'
  2426  007DC0  00                 	db	0
  2427  007DC1                     STR_169:
  2428  007DC1  6D                 	db	109	;'m'
  2429  007DC2  61                 	db	97	;'a'
  2430  007DC3  63                 	db	99	;'c'
  2431  007DC4  20                 	db	32
  2432  007DC5  73                 	db	115	;'s'
  2433  007DC6  65                 	db	101	;'e'
  2434  007DC7  74                 	db	116	;'t'
  2435  007DC8  20                 	db	32
  2436  007DC9  64                 	db	100	;'d'
  2437  007DCA  72                 	db	114	;'r'
  2438  007DCB  20                 	db	32
  2439  007DCC  35                 	db	53	;'5'
  2440  007DCD  00                 	db	0
  2441  007DCE                     STR_170:
  2442  007DCE  6D                 	db	109	;'m'
  2443  007DCF  61                 	db	97	;'a'
  2444  007DD0  63                 	db	99	;'c'
  2445  007DD1  20                 	db	32
  2446  007DD2  73                 	db	115	;'s'
  2447  007DD3  65                 	db	101	;'e'
  2448  007DD4  74                 	db	116	;'t'
  2449  007DD5  20                 	db	32
  2450  007DD6  64                 	db	100	;'d'
  2451  007DD7  72                 	db	114	;'r'
  2452  007DD8  20                 	db	32
  2453  007DD9  36                 	db	54	;'6'
  2454  007DDA  00                 	db	0
  2455  007DDB                     STR_171:
  2456  007DDB  6D                 	db	109	;'m'
  2457  007DDC  61                 	db	97	;'a'
  2458  007DDD  63                 	db	99	;'c'
  2459  007DDE  20                 	db	32
  2460  007DDF  73                 	db	115	;'s'
  2461  007DE0  65                 	db	101	;'e'
  2462  007DE1  74                 	db	116	;'t'
  2463  007DE2  20                 	db	32
  2464  007DE3  64                 	db	100	;'d'
  2465  007DE4  72                 	db	114	;'r'
  2466  007DE5  20                 	db	32
  2467  007DE6  37                 	db	55	;'7'
  2468  007DE7  00                 	db	0
  2469  007DE8                     STR_41:
  2470  007DE8  6D                 	db	109	;'m'
  2471  007DE9  61                 	db	97	;'a'
  2472  007DEA  63                 	db	99	;'c'
  2473  007DEB  20                 	db	32
  2474  007DEC  6A                 	db	106	;'j'
  2475  007DED  6F                 	db	111	;'o'
  2476  007DEE  69                 	db	105	;'i'
  2477  007DEF  6E                 	db	110	;'n'
  2478  007DF0  20                 	db	32
  2479  007DF1  61                 	db	97	;'a'
  2480  007DF2  62                 	db	98	;'b'
  2481  007DF3  70                 	db	112	;'p'
  2482  007DF4  00                 	db	0
  2483  007DF5                     STR_10:
  2484  007DF5  42                 	db	66	;'B'
  2485  007DF6  75                 	db	117	;'u'
  2486  007DF7  74                 	db	116	;'t'
  2487  007DF8  74                 	db	116	;'t'
  2488  007DF9  6F                 	db	111	;'o'
  2489  007DFA  6E                 	db	110	;'n'
  2490  007DFB  20                 	db	32
  2491  007DFC  54                 	db	84	;'T'
  2492  007DFD  65                 	db	101	;'e'
  2493  007DFE  73                 	db	115	;'s'
  2494  007DFF  74                 	db	116	;'t'
  2495  007E00  3A                 	db	58	;':'
  2496  007E01  00                 	db	0
  2497  007E02                     STR_13:
  2498  007E02  42                 	db	66	;'B'
  2499  007E03  75                 	db	117	;'u'
  2500  007E04  74                 	db	116	;'t'
  2501  007E05  74                 	db	116	;'t'
  2502  007E06  6F                 	db	111	;'o'
  2503  007E07  6E                 	db	110	;'n'
  2504  007E08  31                 	db	49	;'1'
  2505  007E09  20                 	db	32
  2506  007E0A  50                 	db	80	;'P'
  2507  007E0B  41                 	db	65	;'A'
  2508  007E0C  53                 	db	83	;'S'
  2509  007E0D  53                 	db	83	;'S'
  2510  007E0E  00                 	db	0
  2511  007E0F                     STR_14:
  2512  007E0F  42                 	db	66	;'B'
  2513  007E10  75                 	db	117	;'u'
  2514  007E11  74                 	db	116	;'t'
  2515  007E12  74                 	db	116	;'t'
  2516  007E13  6F                 	db	111	;'o'
  2517  007E14  6E                 	db	110	;'n'
  2518  007E15  32                 	db	50	;'2'
  2519  007E16  20                 	db	32
  2520  007E17  50                 	db	80	;'P'
  2521  007E18  41                 	db	65	;'A'
  2522  007E19  53                 	db	83	;'S'
  2523  007E1A  53                 	db	83	;'S'
  2524  007E1B  00                 	db	0
  2525  007E1C                     STR_12:
  2526  007E1C  50                 	db	80	;'P'
  2527  007E1D  72                 	db	114	;'r'
  2528  007E1E  65                 	db	101	;'e'
  2529  007E1F  73                 	db	115	;'s'
  2530  007E20  73                 	db	115	;'s'
  2531  007E21  20                 	db	32
  2532  007E22  42                 	db	66	;'B'
  2533  007E23  75                 	db	117	;'u'
  2534  007E24  74                 	db	116	;'t'
  2535  007E25  74                 	db	116	;'t'
  2536  007E26  6F                 	db	111	;'o'
  2537  007E27  6E                 	db	110	;'n'
  2538  007E28  00                 	db	0
  2539  007E29                     STR_189:
  2540  007E29  55                 	db	85	;'U'
  2541  007E2A  53                 	db	83	;'S'
  2542  007E2B  42                 	db	66	;'B'
  2543  007E2C  20                 	db	32
  2544  007E2D  48                 	db	72	;'H'
  2545  007E2E  61                 	db	97	;'a'
  2546  007E2F  6E                 	db	110	;'n'
  2547  007E30  64                 	db	100	;'d'
  2548  007E31  6C                 	db	108	;'l'
  2549  007E32  65                 	db	101	;'e'
  2550  007E33  72                 	db	114	;'r'
  2551  007E34  00                 	db	0
  2552  007E35                     STR_72:
  2553  007E35  4F                 	db	79	;'O'
  2554  007E36  6E                 	db	110	;'n'
  2555  007E37  20                 	db	32
  2556  007E38  50                 	db	80	;'P'
  2557  007E39  6F                 	db	111	;'o'
  2558  007E3A  72                 	db	114	;'r'
  2559  007E3B  74                 	db	116	;'t'
  2560  007E3C  20                 	db	32
  2561  007E3D  23                 	db	35
  2562  007E3E  3A                 	db	58	;':'
  2563  007E3F  20                 	db	32
  2564  007E40  00                 	db	0
  2565  007E41                     STR_87:
  2566  007E41  54                 	db	84	;'T'
  2567  007E42  78                 	db	120	;'x'
  2568  007E43  20                 	db	32
  2569  007E44  50                 	db	80	;'P'
  2570  007E45  6F                 	db	111	;'o'
  2571  007E46  72                 	db	114	;'r'
  2572  007E47  74                 	db	116	;'t'
  2573  007E48  20                 	db	32
  2574  007E49  23                 	db	35
  2575  007E4A  3A                 	db	58	;':'
  2576  007E4B  20                 	db	32
  2577  007E4C  00                 	db	0
  2578  007E4D                     STR_86:
  2579  007E4D  53                 	db	83	;'S'
  2580  007E4E  65                 	db	101	;'e'
  2581  007E4F  6E                 	db	110	;'n'
  2582  007E50  74                 	db	116	;'t'
  2583  007E51  20                 	db	32
  2584  007E52  44                 	db	68	;'D'
  2585  007E53  61                 	db	97	;'a'
  2586  007E54  74                 	db	116	;'t'
  2587  007E55  61                 	db	97	;'a'
  2588  007E56  3A                 	db	58	;':'
  2589  007E57  20                 	db	32
  2590  007E58  00                 	db	0
  2591  007E59                     STR_136:
  2592  007E59  44                 	db	68	;'D'
  2593  007E5A  61                 	db	97	;'a'
  2594  007E5B  74                 	db	116	;'t'
  2595  007E5C  61                 	db	97	;'a'
  2596  007E5D  20                 	db	32
  2597  007E5E  52                 	db	82	;'R'
  2598  007E5F  61                 	db	97	;'a'
  2599  007E60  74                 	db	116	;'t'
  2600  007E61  65                 	db	101	;'e'
  2601  007E62  3A                 	db	58	;':'
  2602  007E63  20                 	db	32
  2603  007E64  00                 	db	0
  2604  007E65                     STR_85:
  2605  007E65  6D                 	db	109	;'m'
  2606  007E66  61                 	db	97	;'a'
  2607  007E67  63                 	db	99	;'c'
  2608  007E68  20                 	db	32
  2609  007E69  74                 	db	116	;'t'
  2610  007E6A  78                 	db	120	;'x'
  2611  007E6B  20                 	db	32
  2612  007E6C  63                 	db	99	;'c'
  2613  007E6D  6E                 	db	110	;'n'
  2614  007E6E  66                 	db	102	;'f'
  2615  007E6F  20                 	db	32
  2616  007E70  00                 	db	0
  2617  007E71                     STR_8:
  2618  007E71  4D                 	db	77	;'M'
  2619  007E72  61                 	db	97	;'a'
  2620  007E73  72                 	db	114	;'r'
  2621  007E74  20                 	db	32
  2622  007E75  33                 	db	51	;'3'
  2623  007E76  31                 	db	49	;'1'
  2624  007E77  20                 	db	32
  2625  007E78  32                 	db	50	;'2'
  2626  007E79  30                 	db	48	;'0'
  2627  007E7A  31                 	db	49	;'1'
  2628  007E7B  38                 	db	56	;'8'
  2629  007E7C  00                 	db	0
  2630  007E7D                     STR_11:
  2631  007E7D  42                 	db	66	;'B'
  2632  007E7E  75                 	db	117	;'u'
  2633  007E7F  74                 	db	116	;'t'
  2634  007E80  74                 	db	116	;'t'
  2635  007E81  6F                 	db	111	;'o'
  2636  007E82  6E                 	db	110	;'n'
  2637  007E83  20                 	db	32
  2638  007E84  46                 	db	70	;'F'
  2639  007E85  41                 	db	65	;'A'
  2640  007E86  49                 	db	73	;'I'
  2641  007E87  4C                 	db	76	;'L'
  2642  007E88  00                 	db	0
  2643  007E89                     STR_61:
  2644  007E89  4F                 	db	79	;'O'
  2645  007E8A  54                 	db	84	;'T'
  2646  007E8B  41                 	db	65	;'A'
  2647  007E8C  41                 	db	65	;'A'
  2648  007E8D  20                 	db	32
  2649  007E8E  4A                 	db	74	;'J'
  2650  007E8F  6F                 	db	111	;'o'
  2651  007E90  69                 	db	105	;'i'
  2652  007E91  6E                 	db	110	;'n'
  2653  007E92  20                 	db	32
  2654  007E93  00                 	db	0
  2655  007E94                     STR_59:
  2656  007E94  6E                 	db	110	;'n'
  2657  007E95  6F                 	db	111	;'o'
  2658  007E96  5F                 	db	95	;'_'
  2659  007E97  66                 	db	102	;'f'
  2660  007E98  72                 	db	114	;'r'
  2661  007E99  65                 	db	101	;'e'
  2662  007E9A  65                 	db	101	;'e'
  2663  007E9B  5F                 	db	95	;'_'
  2664  007E9C  63                 	db	99	;'c'
  2665  007E9D  68                 	db	104	;'h'
  2666  007E9E  00                 	db	0
  2667  007E9F                     STR_51:
  2668  007E9F  53                 	db	83	;'S'
  2669  007EA0  75                 	db	117	;'u'
  2670  007EA1  63                 	db	99	;'c'
  2671  007EA2  63                 	db	99	;'c'
  2672  007EA3  65                 	db	101	;'e'
  2673  007EA4  73                 	db	115	;'s'
  2674  007EA5  73                 	db	115	;'s'
  2675  007EA6  66                 	db	102	;'f'
  2676  007EA7  75                 	db	117	;'u'
  2677  007EA8  6C                 	db	108	;'l'
  2678  007EA9  00                 	db	0
  2679  007EAA                     STR_68:
  2680  007EAA  6D                 	db	109	;'m'
  2681  007EAB  61                 	db	97	;'a'
  2682  007EAC  63                 	db	99	;'c'
  2683  007EAD  20                 	db	32
  2684  007EAE  67                 	db	103	;'g'
  2685  007EAF  65                 	db	101	;'e'
  2686  007EB0  74                 	db	116	;'t'
  2687  007EB1  20                 	db	32
  2688  007EB2  64                 	db	100	;'d'
  2689  007EB3  72                 	db	114	;'r'
  2690  007EB4  00                 	db	0
  2691  007EB5                     STR_46:
  2692  007EB5  56                 	db	86	;'V'
  2693  007EB6  61                 	db	97	;'a'
  2694  007EB7  6C                 	db	108	;'l'
  2695  007EB8  69                 	db	105	;'i'
  2696  007EB9  64                 	db	100	;'d'
  2697  007EBA  20                 	db	32
  2698  007EBB  4B                 	db	75	;'K'
  2699  007EBC  65                 	db	101	;'e'
  2700  007EBD  79                 	db	121	;'y'
  2701  007EBE  73                 	db	115	;'s'
  2702  007EBF  00                 	db	0
  2703  007EC0                     STR_15:
  2704  007EC0  43                 	db	67	;'C'
  2705  007EC1  6F                 	db	111	;'o'
  2706  007EC2  6D                 	db	109	;'m'
  2707  007EC3  6D                 	db	109	;'m'
  2708  007EC4  20                 	db	32
  2709  007EC5  54                 	db	84	;'T'
  2710  007EC6  65                 	db	101	;'e'
  2711  007EC7  73                 	db	115	;'s'
  2712  007EC8  74                 	db	116	;'t'
  2713  007EC9  3A                 	db	58	;':'
  2714  007ECA  00                 	db	0
  2715  007ECB                     STR_106:
  2716  007ECB  52                 	db	82	;'R'
  2717  007ECC  78                 	db	120	;'x'
  2718  007ECD  20                 	db	32
  2719  007ECE  50                 	db	80	;'P'
  2720  007ECF  6F                 	db	111	;'o'
  2721  007ED0  72                 	db	114	;'r'
  2722  007ED1  74                 	db	116	;'t'
  2723  007ED2  23                 	db	35
  2724  007ED3  20                 	db	32
  2725  007ED4  00                 	db	0
  2726  007ED5                     STR_50:
  2727  007ED5  41                 	db	65	;'A'
  2728  007ED6  42                 	db	66	;'B'
  2729  007ED7  50                 	db	80	;'P'
  2730  007ED8  20                 	db	32
  2731  007ED9  4A                 	db	74	;'J'
  2732  007EDA  6F                 	db	111	;'o'
  2733  007EDB  69                 	db	105	;'i'
  2734  007EDC  6E                 	db	110	;'n'
  2735  007EDD  20                 	db	32
  2736  007EDE  00                 	db	0
  2737  007EDF                     STR_24:
  2738  007EDF  4D                 	db	77	;'M'
  2739  007EE0  4F                 	db	79	;'O'
  2740  007EE1  54                 	db	84	;'T'
  2741  007EE2  45                 	db	69	;'E'
  2742  007EE3  20                 	db	32
  2743  007EE4  4D                 	db	77	;'M'
  2744  007EE5  6F                 	db	111	;'o'
  2745  007EE6  64                 	db	100	;'d'
  2746  007EE7  65                 	db	101	;'e'
  2747  007EE8  00                 	db	0
  2748  007EE9                     STR_64:
  2749  007EE9  4F                 	db	79	;'O'
  2750  007EEA  54                 	db	84	;'T'
  2751  007EEB  41                 	db	65	;'A'
  2752  007EEC  41                 	db	65	;'A'
  2753  007EED  20                 	db	32
  2754  007EEE  4A                 	db	74	;'J'
  2755  007EEF  6F                 	db	111	;'o'
  2756  007EF0  69                 	db	105	;'i'
  2757  007EF1  6E                 	db	110	;'n'
  2758  007EF2  00                 	db	0
  2759  007EF3                     STR_52:
  2760  007EF3  6D                 	db	109	;'m'
  2761  007EF4  61                 	db	97	;'a'
  2762  007EF5  63                 	db	99	;'c'
  2763  007EF6  20                 	db	32
  2764  007EF7  72                 	db	114	;'r'
  2765  007EF8  65                 	db	101	;'e'
  2766  007EF9  73                 	db	115	;'s'
  2767  007EFA  65                 	db	101	;'e'
  2768  007EFB  74                 	db	116	;'t'
  2769  007EFC  00                 	db	0
  2770  007EFD                     STR_30:
  2771  007EFD  73                 	db	115	;'s'
  2772  007EFE  79                 	db	121	;'y'
  2773  007EFF  73                 	db	115	;'s'
  2774  007F00  20                 	db	32
  2775  007F01  72                 	db	114	;'r'
  2776  007F02  65                 	db	101	;'e'
  2777  007F03  73                 	db	115	;'s'
  2778  007F04  65                 	db	101	;'e'
  2779  007F05  74                 	db	116	;'t'
  2780  007F06  00                 	db	0
  2781  007F07                     STR_16:
  2782  007F07  4C                 	db	76	;'L'
  2783  007F08  45                 	db	69	;'E'
  2784  007F09  44                 	db	68	;'D'
  2785  007F0A  20                 	db	32
  2786  007F0B  54                 	db	84	;'T'
  2787  007F0C  65                 	db	101	;'e'
  2788  007F0D  73                 	db	115	;'s'
  2789  007F0E  74                 	db	116	;'t'
  2790  007F0F  3A                 	db	58	;':'
  2791  007F10  00                 	db	0
  2792  007F11                     STR_187:
  2793  007F11  43                 	db	67	;'C'
  2794  007F12  44                 	db	68	;'D'
  2795  007F13  43                 	db	67	;'C'
  2796  007F14  20                 	db	32
  2797  007F15  4D                 	db	77	;'M'
  2798  007F16  6F                 	db	111	;'o'
  2799  007F17  64                 	db	100	;'d'
  2800  007F18  65                 	db	101	;'e'
  2801  007F19  00                 	db	0
  2802  007F1A                     STR_47:
  2803  007F1A  52                 	db	82	;'R'
  2804  007F1B  65                 	db	101	;'e'
  2805  007F1C  71                 	db	113	;'q'
  2806  007F1D  75                 	db	117	;'u'
  2807  007F1E  69                 	db	105	;'i'
  2808  007F1F  72                 	db	114	;'r'
  2809  007F20  65                 	db	101	;'e'
  2810  007F21  64                 	db	100	;'d'
  2811  007F22  00                 	db	0
  2812  007F23                     STR_49:
  2813  007F23  61                 	db	97	;'a'
  2814  007F24  63                 	db	99	;'c'
  2815  007F25  63                 	db	99	;'c'
  2816  007F26  65                 	db	101	;'e'
  2817  007F27  70                 	db	112	;'p'
  2818  007F28  74                 	db	116	;'t'
  2819  007F29  65                 	db	101	;'e'
  2820  007F2A  64                 	db	100	;'d'
  2821  007F2B  00                 	db	0
  2822  007F2C                     STR_173:
  2823  007F2C  6D                 	db	109	;'m'
  2824  007F2D  61                 	db	97	;'a'
  2825  007F2E  63                 	db	99	;'c'
  2826  007F2F  20                 	db	32
  2827  007F30  73                 	db	115	;'s'
  2828  007F31  61                 	db	97	;'a'
  2829  007F32  76                 	db	118	;'v'
  2830  007F33  65                 	db	101	;'e'
  2831  007F34  00                 	db	0
  2832  007F35                     STR_25:
  2833  007F35  53                 	db	83	;'S'
  2834  007F36  74                 	db	116	;'t'
  2835  007F37  61                 	db	97	;'a'
  2836  007F38  72                 	db	114	;'r'
  2837  007F39  74                 	db	116	;'t'
  2838  007F3A  69                 	db	105	;'i'
  2839  007F3B  6E                 	db	110	;'n'
  2840  007F3C  67                 	db	103	;'g'
  2841  007F3D  00                 	db	0
  2842  007F3E                     STR_4:
  2843  007F3E  4D                 	db	77	;'M'
  2844  007F3F  6F                 	db	111	;'o'
  2845  007F40  54                 	db	84	;'T'
  2846  007F41  65                 	db	101	;'e'
  2847  007F42  20                 	db	32
  2848  007F43  76                 	db	118	;'v'
  2849  007F44  20                 	db	32
  2850  007F45  2E                 	db	46
  2851  007F46  00                 	db	0
  2852  007F47                     STR_9:
  2853  007F47  31                 	db	49	;'1'
  2854  007F48  37                 	db	55	;'7'
  2855  007F49  3A                 	db	58	;':'
  2856  007F4A  31                 	db	49	;'1'
  2857  007F4B  35                 	db	53	;'5'
  2858  007F4C  3A                 	db	58	;':'
  2859  007F4D  34                 	db	52	;'4'
  2860  007F4E  38                 	db	56	;'8'
  2861  007F4F  00                 	db	0
  2862  007F50  52                 	db	82	;'R'
  2863  007F51  46                 	db	70	;'F'
  2864  007F52  20                 	db	32
  2865  007F53  54                 	db	84	;'T'
  2866  007F54  65                 	db	101	;'e'
  2867  007F55  73                 	db	115	;'s'
  2868  007F56  74                 	db	116	;'t'
  2869  007F57  3A                 	db	58	;':'
  2870  007F58  00                 	db	0
  2871  007F59                     STR_17:
  2872  007F59  41                 	db	65	;'A'
  2873  007F5A  44                 	db	68	;'D'
  2874  007F5B  43                 	db	67	;'C'
  2875  007F5C  20                 	db	32
  2876  007F5D  54                 	db	84	;'T'
  2877  007F5E  65                 	db	101	;'e'
  2878  007F5F  73                 	db	115	;'s'
  2879  007F60  74                 	db	116	;'t'
  2880  007F61  00                 	db	0
  2881  007F62                     STR_188:
  2882  007F62  43                 	db	67	;'C'
  2883  007F63  6F                 	db	111	;'o'
  2884  007F64  6D                 	db	109	;'m'
  2885  007F65  6D                 	db	109	;'m'
  2886  007F66  61                 	db	97	;'a'
  2887  007F67  6E                 	db	110	;'n'
  2888  007F68  64                 	db	100	;'d'
  2889  007F69  00                 	db	0
  2890  007F6A                     STR_18:
  2891  007F6A  54                 	db	84	;'T'
  2892  007F6B  65                 	db	101	;'e'
  2893  007F6C  6D                 	db	109	;'m'
  2894  007F6D  70                 	db	112	;'p'
  2895  007F6E  20                 	db	32
  2896  007F6F  20                 	db	32
  2897  007F70  3D                 	db	61	;'='
  2898  007F71  00                 	db	0
  2899  007F72                     STR_19:
  2900  007F72  4C                 	db	76	;'L'
  2901  007F73  69                 	db	105	;'i'
  2902  007F74  67                 	db	103	;'g'
  2903  007F75  68                 	db	104	;'h'
  2904  007F76  74                 	db	116	;'t'
  2905  007F77  20                 	db	32
  2906  007F78  3D                 	db	61	;'='
  2907  007F79  00                 	db	0
  2908  007F7A                     STR_117:
  2909  007F7A  54                 	db	84	;'T'
  2910  007F7B  65                 	db	101	;'e'
  2911  007F7C  6D                 	db	109	;'m'
  2912  007F7D  70                 	db	112	;'p'
  2913  007F7E  20                 	db	32
  2914  007F7F  3A                 	db	58	;':'
  2915  007F80  00                 	db	0
  2916  007F81                     STR_116:
  2917  007F81  4C                 	db	76	;'L'
  2918  007F82  69                 	db	105	;'i'
  2919  007F83  67                 	db	103	;'g'
  2920  007F84  68                 	db	104	;'h'
  2921  007F85  74                 	db	116	;'t'
  2922  007F86  3A                 	db	58	;':'
  2923  007F87  00                 	db	0
  2924  007F88                     STR_121:
  2925  007F88  45                 	db	69	;'E'
  2926  007F89  76                 	db	118	;'v'
  2927  007F8A  65                 	db	101	;'e'
  2928  007F8B  72                 	db	114	;'r'
  2929  007F8C  79                 	db	121	;'y'
  2930  007F8D  3A                 	db	58	;':'
  2931  007F8E  00                 	db	0
  2932  007F8F                     STR_65:
  2933  007F8F  44                 	db	68	;'D'
  2934  007F90  65                 	db	101	;'e'
  2935  007F91  6E                 	db	110	;'n'
  2936  007F92  69                 	db	105	;'i'
  2937  007F93  65                 	db	101	;'e'
  2938  007F94  64                 	db	100	;'d'
  2939  007F95  00                 	db	0
  2940  007F96                     STR_63:
  2941  007F96  64                 	db	100	;'d'
  2942  007F97  65                 	db	101	;'e'
  2943  007F98  6E                 	db	110	;'n'
  2944  007F99  69                 	db	105	;'i'
  2945  007F9A  65                 	db	101	;'e'
  2946  007F9B  64                 	db	100	;'d'
  2947  007F9C  00                 	db	0
  2948  007F9D                     STR_97:
  2949  007F9D  6E                 	db	110	;'n'
  2950  007F9E  6F                 	db	111	;'o'
  2951  007F9F  5F                 	db	95	;'_'
  2952  007FA0  66                 	db	102	;'f'
  2953  007FA1  72                 	db	114	;'r'
  2954  007FA2  65                 	db	101	;'e'
  2955  007FA3  00                 	db	0
  2956  007FA4                     STR_95:
  2957  007FA4  6D                 	db	109	;'m'
  2958  007FA5  61                 	db	97	;'a'
  2959  007FA6  63                 	db	99	;'c'
  2960  007FA7  5F                 	db	95	;'_'
  2961  007FA8  65                 	db	101	;'e'
  2962  007FA9  72                 	db	114	;'r'
  2963  007FAA  00                 	db	0
  2964  007FAB                     STR_90:
  2965  007FAB  6D                 	db	109	;'m'
  2966  007FAC  61                 	db	97	;'a'
  2967  007FAD  63                 	db	99	;'c'
  2968  007FAE  5F                 	db	95	;'_'
  2969  007FAF  72                 	db	114	;'r'
  2970  007FB0  78                 	db	120	;'x'
  2971  007FB1  00                 	db	0
  2972  007FB2                     STR_93:
  2973  007FB2  6D                 	db	109	;'m'
  2974  007FB3  61                 	db	97	;'a'
  2975  007FB4  63                 	db	99	;'c'
  2976  007FB5  5F                 	db	95	;'_'
  2977  007FB6  74                 	db	116	;'t'
  2978  007FB7  78                 	db	120	;'x'
  2979  007FB8  00                 	db	0
  2980  007FB9                     STR_31:
  2981  007FB9  52                 	db	82	;'R'
  2982  007FBA  4E                 	db	78	;'N'
  2983  007FBB  32                 	db	50	;'2'
  2984  007FBC  34                 	db	52	;'4'
  2985  007FBD  00                 	db	0
  2986  007FBE                     STR_35:
  2987  007FBE  52                 	db	82	;'R'
  2988  007FBF  4E                 	db	78	;'N'
  2989  007FC0  32                 	db	50	;'2'
  2990  007FC1  39                 	db	57	;'9'
  2991  007FC2  00                 	db	0
  2992  007FC3                     STR_122:
  2993  007FC3  4D                 	db	77	;'M'
  2994  007FC4  69                 	db	105	;'i'
  2995  007FC5  6E                 	db	110	;'n'
  2996  007FC6  73                 	db	115	;'s'
  2997  007FC7  00                 	db	0
  2998  007FC8                     STR_138:
  2999  007FC8  20                 	db	32
  3000  007FC9  30                 	db	48	;'0'
  3001  007FCA  20                 	db	32
  3002  007FCB  00                 	db	0
  3003  007FCC                     STR_139:
  3004  007FCC  20                 	db	32
  3005  007FCD  31                 	db	49	;'1'
  3006  007FCE  20                 	db	32
  3007  007FCF  00                 	db	0
  3008  007FD0                     STR_140:
  3009  007FD0  20                 	db	32
  3010  007FD1  32                 	db	50	;'2'
  3011  007FD2  20                 	db	32
  3012  007FD3  00                 	db	0
  3013  007FD4                     STR_141:
  3014  007FD4  20                 	db	32
  3015  007FD5  33                 	db	51	;'3'
  3016  007FD6  20                 	db	32
  3017  007FD7  00                 	db	0
  3018  007FD8                     STR_142:
  3019  007FD8  20                 	db	32
  3020  007FD9  34                 	db	52	;'4'
  3021  007FDA  20                 	db	32
  3022  007FDB  00                 	db	0
  3023  007FDC                     STR_143:
  3024  007FDC  20                 	db	32
  3025  007FDD  35                 	db	53	;'5'
  3026  007FDE  20                 	db	32
  3027  007FDF  00                 	db	0
  3028  007FE0                     STR_146:
  3029  007FE0  20                 	db	32
  3030  007FE1  31                 	db	49	;'1'
  3031  007FE2  30                 	db	48	;'0'
  3032  007FE3  00                 	db	0
  3033  007FE4                     STR_148:
  3034  007FE4  20                 	db	32
  3035  007FE5  33                 	db	51	;'3'
  3036  007FE6  30                 	db	48	;'0'
  3037  007FE7  00                 	db	0
  3038  007FE8                     STR_149:
  3039  007FE8  20                 	db	32
  3040  007FE9  36                 	db	54	;'6'
  3041  007FEA  30                 	db	48	;'0'
  3042  007FEB  00                 	db	0
  3043  007FEC                     STR_147:
  3044  007FEC  20                 	db	32
  3045  007FED  31                 	db	49	;'1'
  3046  007FEE  35                 	db	53	;'5'
  3047  007FEF  00                 	db	0
  3048  007FF0                     STR_128:
  3049  007FF0  4F                 	db	79	;'O'
  3050  007FF1  46                 	db	70	;'F'
  3051  007FF2  46                 	db	70	;'F'
  3052  007FF3  00                 	db	0
  3053  007FF4                     STR_144:
  3054  007FF4  41                 	db	65	;'A'
  3055  007FF5  44                 	db	68	;'D'
  3056  007FF6  52                 	db	82	;'R'
  3057  007FF7  00                 	db	0
  3058  007FF8                     STR_44:
  3059  007FF8  6F                 	db	111	;'o'
  3060  007FF9  6B                 	db	107	;'k'
  3061  007FFA  00                 	db	0
  3062  007FFB                     STR_118:
  3063  007FFB  43                 	db	67	;'C'
  3064  007FFC  00                 	db	0
  3065  007FFD                     STR_21:
  3066  007FFD  7A                 	db	122	;'z'
  3067  007FFE  00                 	db	0
  3068  0000                     
  3069                           ; #config settings
  3070  007FFF  00                 	db	0	; dummy byte at the end
  3071  0000                     
  3072                           	psect	cinit
  3073  004A96                     __pcinit:
  3074                           	opt stack 0
  3075  004A96                     start_initialization:
  3076                           	opt stack 0
  3077  004A96                     __initialization:
  3078                           	opt stack 0
  3079                           
  3080                           ; Initialize objects allocated to BANK1 (3 bytes)
  3081                           ; load TBLPTR registers with __pidataBANK1
  3082  004A96  0E02               	movlw	low __pidataBANK1
  3083  004A98  6EF6               	movwf	tblptrl,c
  3084  004A9A  0E63               	movlw	high __pidataBANK1
  3085  004A9C  6EF7               	movwf	tblptrh,c
  3086  004A9E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  3087  004AA0  6EF8               	movwf	tblptru,c
  3088  004AA2  0009               	tblrd		*+	;fetch initializer
  3089  004AA4  CFF5 F1FD          	movff	tablat,__pdataBANK1
  3090  004AA8  0009               	tblrd		*+	;fetch initializer
  3091  004AAA  CFF5 F1FE          	movff	tablat,__pdataBANK1+1
  3092  004AAE  0009               	tblrd		*+	;fetch initializer
  3093  004AB0  CFF5 F1FF          	movff	tablat,__pdataBANK1+2
  3094                           
  3095                           ; Initialize objects allocated to BANK0 (7 bytes)
  3096                           ; load TBLPTR registers with __pidataBANK0
  3097  004AB4  0EC0               	movlw	low __pidataBANK0
  3098  004AB6  6EF6               	movwf	tblptrl,c
  3099  004AB8  0E62               	movlw	high __pidataBANK0
  3100  004ABA  6EF7               	movwf	tblptrh,c
  3101  004ABC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  3102  004ABE  6EF8               	movwf	tblptru,c
  3103  004AC0  EE00  F0F9         	lfsr	0,__pdataBANK0
  3104  004AC4  EE10 F007          	lfsr	1,7
  3105  004AC8                     copy_data0:
  3106  004AC8  0009               	tblrd		*+
  3107  004ACA  CFF5 FFEE          	movff	tablat,postinc0
  3108  004ACE  50E5               	movf	postdec1,w,c
  3109  004AD0  50E1               	movf	fsr1l,w,c
  3110  004AD2  E1FA               	bnz	copy_data0
  3111                           
  3112                           ; Initialize objects allocated to COMRAM (1 bytes)
  3113                           ; load TBLPTR registers with __pidataCOMRAM
  3114  004AD4  0E08               	movlw	low __pidataCOMRAM
  3115  004AD6  6EF6               	movwf	tblptrl,c
  3116  004AD8  0E63               	movlw	high __pidataCOMRAM
  3117  004ADA  6EF7               	movwf	tblptrh,c
  3118  004ADC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  3119  004ADE  6EF8               	movwf	tblptru,c
  3120  004AE0  0009               	tblrd		*+	;fetch initializer
  3121  004AE2  CFF5 F05D          	movff	tablat,__pdataCOMRAM
  3122                           
  3123                           ; Clear objects allocated to BANK6 (200 bytes)
  3124  004AE6  EE06  F000         	lfsr	0,__pbssBANK6
  3125  004AEA  0EC8               	movlw	200
  3126  004AEC                     clear_0:
  3127  004AEC  6AEE               	clrf	postinc0,c
  3128  004AEE  06E8               	decf	wreg,f,c
  3129  004AF0  E1FD               	bnz	clear_0
  3130                           
  3131                           ; Clear objects allocated to BANK3 (200 bytes)
  3132  004AF2  EE03  F000         	lfsr	0,__pbssBANK3
  3133  004AF6  0EC8               	movlw	200
  3134  004AF8                     clear_1:
  3135  004AF8  6AEE               	clrf	postinc0,c
  3136  004AFA  06E8               	decf	wreg,f,c
  3137  004AFC  E1FD               	bnz	clear_1
  3138                           
  3139                           ; Clear objects allocated to BANK2 (192 bytes)
  3140  004AFE  EE02  F000         	lfsr	0,__pbssBANK2
  3141  004B02  0EC0               	movlw	192
  3142  004B04                     clear_2:
  3143  004B04  6AEE               	clrf	postinc0,c
  3144  004B06  06E8               	decf	wreg,f,c
  3145  004B08  E1FD               	bnz	clear_2
  3146                           
  3147                           ; Clear objects allocated to BANK1 (253 bytes)
  3148  004B0A  EE01  F000         	lfsr	0,__pbssBANK1
  3149  004B0E  0EFD               	movlw	253
  3150  004B10                     clear_3:
  3151  004B10  6AEE               	clrf	postinc0,c
  3152  004B12  06E8               	decf	wreg,f,c
  3153  004B14  E1FD               	bnz	clear_3
  3154                           
  3155                           ; Clear objects allocated to BANK0 (61 bytes)
  3156  004B16  EE00  F0BC         	lfsr	0,__pbssBANK0
  3157  004B1A  0E3D               	movlw	61
  3158  004B1C                     clear_4:
  3159  004B1C  6AEE               	clrf	postinc0,c
  3160  004B1E  06E8               	decf	wreg,f,c
  3161  004B20  E1FD               	bnz	clear_4
  3162                           
  3163                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  3164  004B22  6A5C               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  3165                           
  3166                           ; Clear objects allocated to COMRAM (42 bytes)
  3167  004B24  EE00  F032         	lfsr	0,__pbssCOMRAM
  3168  004B28  0E2A               	movlw	42
  3169  004B2A                     clear_5:
  3170  004B2A  6AEE               	clrf	postinc0,c
  3171  004B2C  06E8               	decf	wreg,f,c
  3172  004B2E  E1FD               	bnz	clear_5
  3173  004B30                     end_of_initialization:
  3174                           	opt stack 0
  3175  004B30                     __end_of__initialization:
  3176                           	opt stack 0
  3177  004B30  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3178  004B32  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3179  004B34  0100               	movlb	0
  3180  004B36  EF47  F017         	goto	_main	;jump to C main() function
  3181                           tblptru	equ	0xFF8
  3182                           tblptrh	equ	0xFF7
  3183                           tblptrl	equ	0xFF6
  3184                           tablat	equ	0xFF5
  3185                           postinc0	equ	0xFEE
  3186                           wreg	equ	0xFE8
  3187                           postdec1	equ	0xFE5
  3188                           fsr1l	equ	0xFE1
  3189                           
  3190                           	psect	bitbssCOMRAM
  3191  0002E0                     __pbitbssCOMRAM:
  3192                           	opt stack 0
  3193  0002E0                     _log:
  3194                           	opt stack 0
  3195  0002E0                     	ds	1
  3196                           tblptru	equ	0xFF8
  3197                           tblptrh	equ	0xFF7
  3198                           tblptrl	equ	0xFF6
  3199                           tablat	equ	0xFF5
  3200                           postinc0	equ	0xFEE
  3201                           wreg	equ	0xFE8
  3202                           postdec1	equ	0xFE5
  3203                           fsr1l	equ	0xFE1
  3204                           
  3205                           	psect	bssCOMRAM
  3206  000032                     __pbssCOMRAM:
  3207                           	opt stack 0
  3208  000032                     _CDCDataInHandle:
  3209                           	opt stack 0
  3210  000032                     	ds	2
  3211  000034                     _pBDTEntryEP0OutNext:
  3212                           	opt stack 0
  3213  000034                     	ds	2
  3214  000036                     _pBDTEntryEP0OutCurrent:
  3215                           	opt stack 0
  3216  000036                     	ds	2
  3217  000038                     _timer3ReloadVal:
  3218                           	opt stack 0
  3219  000038                     	ds	2
  3220  00003A                     _timer1ReloadVal:
  3221                           	opt stack 0
  3222  00003A                     	ds	2
  3223  00003C                     _timerMinTickCount:
  3224                           	opt stack 0
  3225  00003C                     	ds	2
  3226  00003E                     USBapp_LEDUpdateStatus@ledCount:
  3227                           	opt stack 0
  3228  00003E                     	ds	2
  3229  000040                     _cdc_mem_type:
  3230                           	opt stack 0
  3231  000040                     	ds	1
  3232  000041                     _USBDeferOUTDataStagePackets:
  3233                           	opt stack 0
  3234  000041                     	ds	1
  3235  000042                     _USBDeferINDataStagePackets:
  3236                           	opt stack 0
  3237  000042                     	ds	1
  3238  000043                     _USBStatusStageEnabledFlag2:
  3239                           	opt stack 0
  3240  000043                     	ds	1
  3241  000044                     _USBStatusStageEnabledFlag1:
  3242                           	opt stack 0
  3243  000044                     	ds	1
  3244  000045                     _USBDeferStatusStagePacket:
  3245                           	opt stack 0
  3246  000045                     	ds	1
  3247  000046                     _USBStatusStageTimeoutCounter:
  3248                           	opt stack 0
  3249  000046                     	ds	1
  3250  000047                     _BothEP0OutUOWNsSet:
  3251                           	opt stack 0
  3252  000047                     	ds	1
  3253  000048                     _endpoint_number:
  3254                           	opt stack 0
  3255  000048                     	ds	1
  3256  000049                     _RemoteWakeup:
  3257                           	opt stack 0
  3258  000049                     	ds	1
  3259  00004A                     _controlTransferState:
  3260                           	opt stack 0
  3261  00004A                     	ds	1
  3262  00004B                     _shortPacketStatus:
  3263                           	opt stack 0
  3264  00004B                     	ds	1
  3265  00004C                     printfOled@lastValue:
  3266                           	opt stack 0
  3267  00004C                     	ds	1
  3268  00004D                     _countBitsSilent:
  3269                           	opt stack 0
  3270  00004D                     	ds	1
  3271  00004E                     _rx_data:
  3272                           	opt stack 0
  3273  00004E                     	ds	1
  3274  00004F                     _status:
  3275                           	opt stack 0
  3276  00004F                     	ds	1
  3277  000050                     service_pushbutton@Release_Timer:
  3278                           	opt stack 0
  3279  000050                     	ds	1
  3280  000051                     _usbState:
  3281                           	opt stack 0
  3282  000051                     	ds	1
  3283  000052                     _lightStringSize:
  3284                           	opt stack 0
  3285  000052                     	ds	1
  3286  000053                     	ds	1
  3287  000054                     _moteModeState:
  3288                           	opt stack 0
  3289  000054                     	ds	1
  3290  000055                     _appState:
  3291                           	opt stack 0
  3292  000055                     	ds	1
  3293  000056                     _mainState:
  3294                           	opt stack 0
  3295  000056                     	ds	1
  3296  000057                     _USBAlternateInterface:
  3297                           	opt stack 0
  3298  000057                     	ds	2
  3299  000059                     _USTATcopy:
  3300                           	opt stack 0
  3301  000059                     	ds	1
  3302  00005A                     _USBActiveConfiguration:
  3303                           	opt stack 0
  3304  00005A                     	ds	1
  3305  00005B                     _n_bit:
  3306                           	opt stack 0
  3307  00005B                     	ds	1
  3308                           tblptru	equ	0xFF8
  3309                           tblptrh	equ	0xFF7
  3310                           tblptrl	equ	0xFF6
  3311                           tablat	equ	0xFF5
  3312                           postinc0	equ	0xFEE
  3313                           wreg	equ	0xFE8
  3314                           postdec1	equ	0xFE5
  3315                           fsr1l	equ	0xFE1
  3316                           
  3317                           	psect	dataCOMRAM
  3318  00005D                     __pdataCOMRAM:
  3319                           	opt stack 0
  3320  00005D                     _Contrast_level:
  3321                           	opt stack 0
  3322  00005D                     	ds	1
  3323                           tblptru	equ	0xFF8
  3324                           tblptrh	equ	0xFF7
  3325                           tblptrl	equ	0xFF6
  3326                           tablat	equ	0xFF5
  3327                           postinc0	equ	0xFEE
  3328                           wreg	equ	0xFE8
  3329                           postdec1	equ	0xFE5
  3330                           fsr1l	equ	0xFE1
  3331                           
  3332                           	psect	bssBANK0
  3333  0000BC                     __pbssBANK0:
  3334                           	opt stack 0
  3335  0000BC                     _outPipes:
  3336                           	opt stack 0
  3337  0000BC                     	ds	8
  3338  0000C4                     _inPipes:
  3339                           	opt stack 0
  3340  0000C4                     	ds	6
  3341  0000CA                     _pBDTEntryIn:
  3342                           	opt stack 0
  3343  0000CA                     	ds	6
  3344  0000D0                     _ep_data_out:
  3345                           	opt stack 0
  3346  0000D0                     	ds	3
  3347  0000D3                     _ep_data_in:
  3348                           	opt stack 0
  3349  0000D3                     	ds	3
  3350  0000D6                     _CDCDataOutHandle:
  3351                           	opt stack 0
  3352  0000D6                     	ds	2
  3353  0000D8                     _timerMsTickCount:
  3354                           	opt stack 0
  3355  0000D8                     	ds	2
  3356  0000DA                     _temperature:
  3357                           	opt stack 0
  3358  0000DA                     	ds	2
  3359  0000DC                     _cdc_tx_len:
  3360                           	opt stack 0
  3361  0000DC                     	ds	1
  3362  0000DD                     _cdc_rx_len:
  3363                           	opt stack 0
  3364  0000DD                     	ds	1
  3365  0000DE                     _eusartRxTail:
  3366                           	opt stack 0
  3367  0000DE                     	ds	1
  3368  0000DF                     _eusartRxHead:
  3369                           	opt stack 0
  3370  0000DF                     	ds	1
  3371  0000E0                     _eusartTxBufferRemaining:
  3372                           	opt stack 0
  3373  0000E0                     	ds	1
  3374  0000E1                     _eusartTxTail:
  3375                           	opt stack 0
  3376  0000E1                     	ds	1
  3377  0000E2                     _eusartTxHead:
  3378                           	opt stack 0
  3379  0000E2                     	ds	1
  3380  0000E3                     _countIn:
  3381                           	opt stack 0
  3382  0000E3                     	ds	1
  3383  0000E4                     _countOut:
  3384                           	opt stack 0
  3385  0000E4                     	ds	1
  3386  0000E5                     _RS232cp:
  3387                           	opt stack 0
  3388  0000E5                     	ds	1
  3389  0000E6                     _LastRS232Out:
  3390                           	opt stack 0
  3391  0000E6                     	ds	1
  3392  0000E7                     _RS232_Out_Data_Rdy:
  3393                           	opt stack 0
  3394  0000E7                     	ds	1
  3395  0000E8                     _NextUSBOut:
  3396                           	opt stack 0
  3397  0000E8                     	ds	1
  3398  0000E9                     _rxByteFlag:
  3399                           	opt stack 0
  3400  0000E9                     	ds	1
  3401  0000EA                     _cdc_trf_state:
  3402                           	opt stack 0
  3403  0000EA                     	ds	1
  3404  0000EB                     _USBDeviceState:
  3405                           	opt stack 0
  3406  0000EB                     	ds	1
  3407  0000EC                     _countSearchFrameGPS:
  3408                           	opt stack 0
  3409  0000EC                     	ds	1
  3410  0000ED                     _rnModule:
  3411                           	opt stack 0
  3412  0000ED                     	ds	1
  3413  0000EE                     _sleepTicker:
  3414                           	opt stack 0
  3415  0000EE                     	ds	1
  3416  0000EF                     _secTicker:
  3417                           	opt stack 0
  3418  0000EF                     	ds	1
  3419  0000F0                     _randomPortNum:
  3420                           	opt stack 0
  3421  0000F0                     	ds	1
  3422  0000F1                     _moduleBufferIndex:
  3423                           	opt stack 0
  3424  0000F1                     	ds	1
  3425  0000F2                     _statusSSFG:
  3426                           	opt stack 0
  3427  0000F2                     	ds	1
  3428  0000F3                     _runningState:
  3429                           	opt stack 0
  3430  0000F3                     	ds	1
  3431  0000F4                     _activeState:
  3432                           	opt stack 0
  3433  0000F4                     	ds	1
  3434  0000F5                     _eusartRxCount:
  3435                           	opt stack 0
  3436  0000F5                     	ds	1
  3437  0000F6                     _powerOnStatus:
  3438                           	opt stack 0
  3439  0000F6                     	ds	1
  3440  0000F7                     _operationType:
  3441                           	opt stack 0
  3442  0000F7                     	ds	1
  3443  0000F8                     _appTimer:
  3444                           	opt stack 0
  3445  0000F8                     	ds	1
  3446                           tblptru	equ	0xFF8
  3447                           tblptrh	equ	0xFF7
  3448                           tblptrl	equ	0xFF6
  3449                           tablat	equ	0xFF5
  3450                           postinc0	equ	0xFEE
  3451                           wreg	equ	0xFE8
  3452                           postdec1	equ	0xFE5
  3453                           fsr1l	equ	0xFE1
  3454                           
  3455                           	psect	dataBANK0
  3456  0000F9                     __pdataBANK0:
  3457                           	opt stack 0
  3458  0000F9                     _exitUSB:
  3459                           	opt stack 0
  3460  0000F9                     	ds	1
  3461  0000FA                     _periodicState:
  3462                           	opt stack 0
  3463  0000FA                     	ds	1
  3464  0000FB                     _menuTimeout:
  3465                           	opt stack 0
  3466  0000FB                     	ds	1
  3467  0000FC                     _dataRateValue:
  3468                           	opt stack 0
  3469  0000FC                     	ds	1
  3470  0000FD                     _periodicTimerValue:
  3471                           	opt stack 0
  3472  0000FD                     	ds	1
  3473  0000FE                     _periodicUpValue:
  3474                           	opt stack 0
  3475  0000FE                     	ds	1
  3476  0000FF                     _moteState:
  3477                           	opt stack 0
  3478  0000FF                     	ds	1
  3479                           tblptru	equ	0xFF8
  3480                           tblptrh	equ	0xFF7
  3481                           tblptrl	equ	0xFF6
  3482                           tablat	equ	0xFF5
  3483                           postinc0	equ	0xFEE
  3484                           wreg	equ	0xFE8
  3485                           postdec1	equ	0xFE5
  3486                           fsr1l	equ	0xFE1
  3487                           
  3488                           	psect	bssBANK1
  3489  000100                     __pbssBANK1:
  3490                           	opt stack 0
  3491  000100                     	ds	32
  3492  000120                     	ds	16
  3493  000130                     _responseId:
  3494                           	opt stack 0
  3495  000130                     	ds	16
  3496  000140                     _pBDTEntryOut:
  3497                           	opt stack 0
  3498  000140                     	ds	6
  3499  000146                     _BaudRateGen:
  3500                           	opt stack 0
  3501  000146                     	ds	4
  3502  00014A                     service_pushbutton@PB_Timer:
  3503                           	opt stack 0
  3504  00014A                     	ds	4
  3505  00014E                     _pCDCDst:
  3506                           	opt stack 0
  3507  00014E                     	ds	3
  3508  000151                     _pCDCSrc:
  3509                           	opt stack 0
  3510  000151                     	ds	3
  3511  000154                     _pDst:
  3512                           	opt stack 0
  3513  000154                     	ds	2
  3514  000156                     _timer0ReloadVal:
  3515                           	opt stack 0
  3516  000156                     	ds	2
  3517  000158                     _m10SecTicker:
  3518                           	opt stack 0
  3519  000158                     	ds	2
  3520  00015A                     _light:
  3521                           	opt stack 0
  3522  00015A                     	ds	2
  3523  00015C                     _control_signal_bitmap:
  3524                           	opt stack 0
  3525  00015C                     	ds	1
  3526  00015D                     _USBBusIsSuspended:
  3527                           	opt stack 0
  3528  00015D                     	ds	1
  3529  00015E                     _cs:
  3530                           	opt stack 0
  3531  00015E                     	ds	1
  3532  00015F                     _stops:
  3533                           	opt stack 0
  3534  00015F                     	ds	1
  3535  000160                     _parity:
  3536                           	opt stack 0
  3537  000160                     	ds	1
  3538  000161                     	ds	1
  3539  000162                     	ds	1
  3540  000163                     _minTicker:
  3541                           	opt stack 0
  3542  000163                     	ds	1
  3543  000164                     	ds	1
  3544  000165                     	ds	1
  3545  000166                     _responseReady:
  3546                           	opt stack 0
  3547  000166                     	ds	1
  3548  000167                     _moduleResonseBuffer:
  3549                           	opt stack 0
  3550  000167                     	ds	64
  3551  0001A7                     _responseData:
  3552                           	opt stack 0
  3553  0001A7                     	ds	32
  3554  0001C7                     _dataBuffer:
  3555                           	opt stack 0
  3556  0001C7                     	ds	16
  3557  0001D7                     _cdc_notice:
  3558                           	opt stack 0
  3559  0001D7                     	ds	10
  3560  0001E1                     _dummy_encapsulated_cmd_response:
  3561                           	opt stack 0
  3562  0001E1                     	ds	8
  3563  0001E9                     _line_coding:
  3564                           	opt stack 0
  3565  0001E9                     	ds	7
  3566  0001F0                     _clearLight:
  3567                           	opt stack 0
  3568  0001F0                     	ds	5
  3569  0001F5                     _storedLight:
  3570                           	opt stack 0
  3571  0001F5                     	ds	5
  3572  0001FA                     _responsePortNum:
  3573                           	opt stack 0
  3574  0001FA                     	ds	3
  3575                           tblptru	equ	0xFF8
  3576                           tblptrh	equ	0xFF7
  3577                           tblptrl	equ	0xFF6
  3578                           tablat	equ	0xFF5
  3579                           postinc0	equ	0xFEE
  3580                           wreg	equ	0xFE8
  3581                           postdec1	equ	0xFE5
  3582                           fsr1l	equ	0xFE1
  3583                           
  3584                           	psect	dataBANK1
  3585  0001FD                     __pdataBANK1:
  3586                           	opt stack 0
  3587  0001FD                     _selectedFont:
  3588                           	opt stack 0
  3589  0001FD                     	ds	2
  3590  0001FF                     	ds	1
  3591                           tblptru	equ	0xFF8
  3592                           tblptrh	equ	0xFF7
  3593                           tblptrl	equ	0xFF6
  3594                           tablat	equ	0xFF5
  3595                           postinc0	equ	0xFEE
  3596                           wreg	equ	0xFE8
  3597                           postdec1	equ	0xFE5
  3598                           fsr1l	equ	0xFE1
  3599                           
  3600                           	psect	bssBANK2
  3601  000200                     __pbssBANK2:
  3602                           	opt stack 0
  3603  000200                     _eusartRxBuffer:
  3604                           	opt stack 0
  3605  000200                     	ds	64
  3606  000240                     _eusartTxBuffer:
  3607                           	opt stack 0
  3608  000240                     	ds	64
  3609  000280                     _USB_Buffer:
  3610                           	opt stack 0
  3611  000280                     	ds	64
  3612                           tblptru	equ	0xFF8
  3613                           tblptrh	equ	0xFF7
  3614                           tblptrl	equ	0xFF6
  3615                           tablat	equ	0xFF5
  3616                           postinc0	equ	0xFEE
  3617                           wreg	equ	0xFE8
  3618                           postdec1	equ	0xFE5
  3619                           fsr1l	equ	0xFE1
  3620                           
  3621                           	psect	bssBANK3
  3622  000300                     __pbssBANK3:
  3623                           	opt stack 0
  3624  000300                     _dataFrameGPS:
  3625                           	opt stack 0
  3626  000300                     	ds	200
  3627                           tblptru	equ	0xFF8
  3628                           tblptrh	equ	0xFF7
  3629                           tblptrl	equ	0xFF6
  3630                           tablat	equ	0xFF5
  3631                           postinc0	equ	0xFEE
  3632                           wreg	equ	0xFE8
  3633                           postdec1	equ	0xFE5
  3634                           fsr1l	equ	0xFE1
  3635                           
  3636                           	psect	bssBANK6
  3637  000600                     __pbssBANK6:
  3638                           	opt stack 0
  3639  000600                     _buffer_rx:
  3640                           	opt stack 0
  3641  000600                     	ds	200
  3642                           tblptru	equ	0xFF8
  3643                           tblptrh	equ	0xFF7
  3644                           tblptrl	equ	0xFF6
  3645                           tablat	equ	0xFF5
  3646                           postinc0	equ	0xFEE
  3647                           wreg	equ	0xFE8
  3648                           postdec1	equ	0xFE5
  3649                           fsr1l	equ	0xFE1
  3650                           
  3651                           	psect	cstackBANK0
  3652  000060                     __pcstackBANK0:
  3653                           	opt stack 0
  3654  000060                     ??_TMR1_Initialize:
  3655  000060                     ?_strncmp:
  3656                           	opt stack 0
  3657  000060                     ?_strcmp:
  3658                           	opt stack 0
  3659  000060                     ?_moteApp_getLightString:
  3660                           	opt stack 0
  3661  000060                     ?_USBTransferOnePacket:
  3662                           	opt stack 0
  3663  000060                     ?___wmul:
  3664                           	opt stack 0
  3665  000060                     ?___awdiv:
  3666                           	opt stack 0
  3667  000060                     ?___awmod:
  3668                           	opt stack 0
  3669  000060                     ?___lwmod:
  3670                           	opt stack 0
  3671  000060                     ?___fladd:
  3672                           	opt stack 0
  3673  000060                     ?___almod:
  3674                           	opt stack 0
  3675  000060                     ?___fltol:
  3676                           	opt stack 0
  3677  000060                     ?___xxtofl:
  3678                           	opt stack 0
  3679  000060                     MOTEapp_handlerState@state:
  3680                           	opt stack 0
  3681  000060                     MOTEapp_TimerBasedTask@timerTask:
  3682                           	opt stack 0
  3683  000060                     unhex@c:
  3684                           	opt stack 0
  3685  000060                     hexToStr@character:
  3686                           	opt stack 0
  3687  000060                     moteApp_clearBuffers@counter:
  3688                           	opt stack 0
  3689  000060                     USBapp_handlerState@state:
  3690                           	opt stack 0
  3691  000060                     USBapp_exitCDCState@usbState:
  3692                           	opt stack 0
  3693  000060                     service_pushbutton@bs:
  3694                           	opt stack 0
  3695  000060                     oled_writeCommand@command:
  3696                           	opt stack 0
  3697  000060                     oled_writeData@data:
  3698                           	opt stack 0
  3699  000060                     outFIFO@retVal:
  3700                           	opt stack 0
  3701  000060                     EUSART_Read@readValue:
  3702                           	opt stack 0
  3703  000060                     EUSART_Write@txData:
  3704                           	opt stack 0
  3705  000060                     EUSART_FlushBuffer@index:
  3706                           	opt stack 0
  3707  000060                     DATAEE_WriteByte@bData:
  3708                           	opt stack 0
  3709  000060                     DATAEE_ReadByte@bAdd:
  3710                           	opt stack 0
  3711  000060                     TMR2_ReadTimer@readVal:
  3712                           	opt stack 0
  3713  000060                     USBTransferOnePacket@dir:
  3714                           	opt stack 0
  3715  000060                     ___lbdiv@divisor:
  3716                           	opt stack 0
  3717  000060                     delayms@t:
  3718                           	opt stack 0
  3719  000060                     moteApp_delayms@length:
  3720                           	opt stack 0
  3721  000060                     oled_setFont@font:
  3722                           	opt stack 0
  3723  000060                     putUSBUSART@data:
  3724                           	opt stack 0
  3725  000060                     ___wmul@multiplier:
  3726                           	opt stack 0
  3727  000060                     ___awdiv@dividend:
  3728                           	opt stack 0
  3729  000060                     ___awmod@dividend:
  3730                           	opt stack 0
  3731  000060                     ___lwmod@dividend:
  3732                           	opt stack 0
  3733  000060                     memcpy@d1:
  3734                           	opt stack 0
  3735  000060                     memset@p1:
  3736                           	opt stack 0
  3737  000060                     strcmp@s1:
  3738                           	opt stack 0
  3739  000060                     strncmp@s1:
  3740                           	opt stack 0
  3741  000060                     ___almod@dividend:
  3742                           	opt stack 0
  3743  000060                     ___fltol@f1:
  3744                           	opt stack 0
  3745  000060                     ___fladd@b:
  3746                           	opt stack 0
  3747  000060                     ___xxtofl@val:
  3748                           	opt stack 0
  3749                           
  3750                           ; 4 bytes @ 0x0
  3751  000060                     	ds	1
  3752  000061                     MOTEapp_getModuleResponse@terminatorReceived:
  3753                           	opt stack 0
  3754  000061                     moteApp_clearBuffers@counter_1740:
  3755                           	opt stack 0
  3756  000061                     Set_Page_Address@address:
  3757                           	opt stack 0
  3758  000061                     Set_Column_Address@address:
  3759                           	opt stack 0
  3760  000061                     oled_setDisplay@displayType:
  3761                           	opt stack 0
  3762  000061                     oled_setContrastControlRegister@mod:
  3763                           	opt stack 0
  3764  000061                     oled_initialDispayLine@line:
  3765                           	opt stack 0
  3766  000061                     oled_powerControl@vol:
  3767                           	opt stack 0
  3768  000061                     oled_regulorResistorSelect@r:
  3769                           	opt stack 0
  3770  000061                     DATAEE_WriteByte@bAdd:
  3771                           	opt stack 0
  3772  000061                     ___lbdiv@dividend:
  3773                           	opt stack 0
  3774  000061                     sendCommand@string:
  3775                           	opt stack 0
  3776  000061                     sendDataCommand@string:
  3777                           	opt stack 0
  3778  000061                     USBTransferOnePacket@data:
  3779                           	opt stack 0
  3780                           
  3781                           ; 2 bytes @ 0x1
  3782  000061                     	ds	1
  3783  000062                     ??_moteApp_delayms:
  3784  000062                     ??_oled_devInit:
  3785  000062                     ??_delayms:
  3786  000062                     MOTEapp_getModuleResponse@bufferByte:
  3787                           	opt stack 0
  3788  000062                     moteApp_clearBuffers@counter_1741:
  3789                           	opt stack 0
  3790  000062                     oled_putChar@station_dot:
  3791                           	opt stack 0
  3792  000062                     DATAEE_WriteByte@GIEBitValue:
  3793                           	opt stack 0
  3794  000062                     putUSBUSART@length:
  3795                           	opt stack 0
  3796  000062                     ___lbdiv@counter:
  3797                           	opt stack 0
  3798  000062                     ___wmul@multiplicand:
  3799                           	opt stack 0
  3800  000062                     ___awdiv@divisor:
  3801                           	opt stack 0
  3802  000062                     ___awmod@divisor:
  3803                           	opt stack 0
  3804  000062                     ___lwmod@divisor:
  3805                           	opt stack 0
  3806  000062                     memcpy@s1:
  3807                           	opt stack 0
  3808  000062                     memset@c:
  3809                           	opt stack 0
  3810  000062                     strcmp@s2:
  3811                           	opt stack 0
  3812  000062                     strncmp@s2:
  3813                           	opt stack 0
  3814                           
  3815                           ; 2 bytes @ 0x2
  3816  000062                     	ds	1
  3817  000063                     ??_moteApp_toggleLeds:
  3818  000063                     ??_MOTEapp_SetDataRateSetting:
  3819  000063                     ??_moduleSleep:
  3820  000063                     ?_moteApp_getTempValue:
  3821                           	opt stack 0
  3822  000063                     moteApp_clearBuffers@counter_1742:
  3823                           	opt stack 0
  3824  000063                     oled_putChar@start_page:
  3825                           	opt stack 0
  3826  000063                     USBTransferOnePacket@len:
  3827                           	opt stack 0
  3828  000063                     ___lbdiv@quotient:
  3829                           	opt stack 0
  3830  000063                     delayms@i:
  3831                           	opt stack 0
  3832  000063                     moteApp_delayms@counter:
  3833                           	opt stack 0
  3834  000063                     sendDataCommand@appData:
  3835                           	opt stack 0
  3836                           
  3837                           ; 2 bytes @ 0x3
  3838  000063                     	ds	1
  3839  000064                     ??_oled_putChar:
  3840  000064                     ??_strcmp:
  3841  000064                     ??___fltol:
  3842  000064                     ??___xxtofl:
  3843  000064                     MOTEapp_SetDataRateSetting@dr:
  3844                           	opt stack 0
  3845  000064                     moteApp_toggleLeds@state:
  3846                           	opt stack 0
  3847  000064                     USBTransferOnePacket@ep:
  3848                           	opt stack 0
  3849  000064                     ___awdiv@counter:
  3850                           	opt stack 0
  3851  000064                     ___awmod@counter:
  3852                           	opt stack 0
  3853  000064                     ___lwmod@counter:
  3854                           	opt stack 0
  3855  000064                     ___wmul@product:
  3856                           	opt stack 0
  3857  000064                     memcpy@n:
  3858                           	opt stack 0
  3859  000064                     memset@n:
  3860                           	opt stack 0
  3861  000064                     strncmp@len:
  3862                           	opt stack 0
  3863  000064                     ___almod@divisor:
  3864                           	opt stack 0
  3865  000064                     ___fladd@a:
  3866                           	opt stack 0
  3867                           
  3868                           ; 4 bytes @ 0x4
  3869  000064                     	ds	1
  3870  000065                     sendDataCommand@dataLength:
  3871                           	opt stack 0
  3872  000065                     ___awdiv@sign:
  3873                           	opt stack 0
  3874  000065                     ___awmod@sign:
  3875                           	opt stack 0
  3876  000065                     strcmp@r:
  3877                           	opt stack 0
  3878  000065                     moduleResync@escapeCounter:
  3879                           	opt stack 0
  3880  000065                     moteApp_setSensorsInput@escapeCounter:
  3881                           	opt stack 0
  3882  000065                     moteApp_getTempValue@escapeCounter:
  3883                           	opt stack 0
  3884  000065                     USBTransferOnePacket@handle:
  3885                           	opt stack 0
  3886                           
  3887                           ; 2 bytes @ 0x5
  3888  000065                     	ds	1
  3889  000066                     ??_strncmp:
  3890  000066                     ??_sendDataCommand:
  3891  000066                     moteApp_add8bToDataBuffer@bufferLocation:
  3892                           	opt stack 0
  3893  000066                     ___awdiv@quotient:
  3894                           	opt stack 0
  3895  000066                     memcpy@d:
  3896                           	opt stack 0
  3897  000066                     memset@p:
  3898                           	opt stack 0
  3899                           
  3900                           ; 2 bytes @ 0x6
  3901  000066                     	ds	1
  3902  000067                     ??_moteApp_add8bToDataBuffer:
  3903  000067                     ??_CDCTxService:
  3904  000067                     moduleResync@escapeEvent:
  3905                           	opt stack 0
  3906  000067                     sendDataCommand@byteCount:
  3907                           	opt stack 0
  3908  000067                     getsUSBUSART@buffer:
  3909                           	opt stack 0
  3910                           
  3911                           ; 2 bytes @ 0x7
  3912  000067                     	ds	1
  3913  000068                     ??___fladd:
  3914  000068                     sendDataCommand@byteCount_1653:
  3915                           	opt stack 0
  3916  000068                     USBDeviceInit@i:
  3917                           	opt stack 0
  3918  000068                     ___almod@counter:
  3919                           	opt stack 0
  3920  000068                     ___fltol@sign1:
  3921                           	opt stack 0
  3922  000068                     ___xxtofl@sign:
  3923                           	opt stack 0
  3924  000068                     _CDCTxService$6717:
  3925                           	opt stack 0
  3926  000068                     memcpy@s:
  3927                           	opt stack 0
  3928                           
  3929                           ; 2 bytes @ 0x8
  3930  000068                     	ds	1
  3931  000069                     moteApp_add8bToDataBuffer@number:
  3932                           	opt stack 0
  3933  000069                     getsUSBUSART@len:
  3934                           	opt stack 0
  3935  000069                     ___almod@sign:
  3936                           	opt stack 0
  3937  000069                     ___fltol@exp1:
  3938                           	opt stack 0
  3939  000069                     ___xxtofl@exp:
  3940                           	opt stack 0
  3941                           
  3942                           ; 1 bytes @ 0x9
  3943  000069                     	ds	1
  3944  00006A                     ??_getsUSBUSART:
  3945  00006A                     oled_putChar@k:
  3946                           	opt stack 0
  3947  00006A                     CDCTxService@i:
  3948                           	opt stack 0
  3949  00006A                     memcpy@tmp:
  3950                           	opt stack 0
  3951  00006A                     ___xxtofl@arg:
  3952                           	opt stack 0
  3953                           
  3954                           ; 4 bytes @ 0xA
  3955  00006A                     	ds	1
  3956  00006B                     oled_putChar@index:
  3957                           	opt stack 0
  3958  00006B                     CDCTxService@byte_to_send:
  3959                           	opt stack 0
  3960  00006B                     moteApp_setLightString@lightString:
  3961                           	opt stack 0
  3962  00006B                     _getsUSBUSART$6669:
  3963                           	opt stack 0
  3964                           
  3965                           ; 2 bytes @ 0xB
  3966  00006B                     	ds	1
  3967  00006C                     oled_clearRow@page:
  3968                           	opt stack 0
  3969  00006C                     oled_putStringLineN@string:
  3970                           	opt stack 0
  3971                           
  3972                           ; 2 bytes @ 0xC
  3973  00006C                     	ds	1
  3974  00006D                     ??_USBapp_DeviceCdcEmulatorHandler:
  3975  00006D                     moteApp_setLightString@stingPos:
  3976                           	opt stack 0
  3977  00006D                     oled_clearRow@index:
  3978                           	opt stack 0
  3979                           
  3980                           ; 1 bytes @ 0xD
  3981  00006D                     	ds	1
  3982  00006E                     ?_moteApp_getLightValue:
  3983                           	opt stack 0
  3984  00006E                     moteApp_GoToSleep@status:
  3985                           	opt stack 0
  3986  00006E                     oled_putStringLineN@indexLine:
  3987                           	opt stack 0
  3988                           
  3989                           ; 1 bytes @ 0xE
  3990  00006E                     	ds	1
  3991  00006F                     oled_putStringLineN@page:
  3992                           	opt stack 0
  3993                           
  3994                           ; 1 bytes @ 0xF
  3995  00006F                     	ds	1
  3996  000070                     oled_putStringLineN@index:
  3997                           	opt stack 0
  3998  000070                     ___fladd@signs:
  3999                           	opt stack 0
  4000  000070                     moteApp_getLightValue@escapeCounter:
  4001                           	opt stack 0
  4002                           
  4003                           ; 2 bytes @ 0x10
  4004  000070                     	ds	1
  4005  000071                     ___fladd@aexp:
  4006                           	opt stack 0
  4007                           
  4008                           ; 1 bytes @ 0x11
  4009  000071                     	ds	1
  4010  000072                     ?_moteApp_convertSensorValue:
  4011                           	opt stack 0
  4012  000072                     ___fladd@bexp:
  4013                           	opt stack 0
  4014  000072                     moteApp_addToDataBuffer@string:
  4015                           	opt stack 0
  4016  000072                     moteApp_convertSensorValue@string:
  4017                           	opt stack 0
  4018  000072                     oled_putString@string:
  4019                           	opt stack 0
  4020                           
  4021                           ; 3 bytes @ 0x12
  4022  000072                     	ds	1
  4023  000073                     ___fladd@grs:
  4024                           	opt stack 0
  4025                           
  4026                           ; 1 bytes @ 0x13
  4027  000073                     	ds	1
  4028  000074                     ??_moteApp_convertSensorValue:
  4029  000074                     ?___flmul:
  4030                           	opt stack 0
  4031  000074                     moteApp_addToDataBuffer@bufferLocation:
  4032                           	opt stack 0
  4033  000074                     ___flmul@b:
  4034                           	opt stack 0
  4035                           
  4036                           ; 4 bytes @ 0x14
  4037  000074                     	ds	1
  4038  000075                     moteApp_addToDataBuffer@index:
  4039                           	opt stack 0
  4040  000075                     oled_putString@station_dot:
  4041                           	opt stack 0
  4042                           
  4043                           ; 1 bytes @ 0x15
  4044  000075                     	ds	1
  4045  000076                     oled_putString@start_page:
  4046                           	opt stack 0
  4047                           
  4048                           ; 1 bytes @ 0x16
  4049  000076                     	ds	1
  4050  000077                     oled_putString@index:
  4051                           	opt stack 0
  4052  000077                     moteApp_convertSensorValue@convertedValue:
  4053                           	opt stack 0
  4054                           
  4055                           ; 2 bytes @ 0x17
  4056  000077                     	ds	1
  4057  000078                     ??_test_switch:
  4058  000078                     moteJoiningProcess@changeStates:
  4059                           	opt stack 0
  4060  000078                     USBapp_Handler@buttonPress:
  4061                           	opt stack 0
  4062  000078                     oled_putUint8@station_dot:
  4063                           	opt stack 0
  4064  000078                     oled_putint8@station_dot:
  4065                           	opt stack 0
  4066  000078                     ___flmul@a:
  4067                           	opt stack 0
  4068                           
  4069                           ; 4 bytes @ 0x18
  4070  000078                     	ds	1
  4071  000079                     moteJoiningProcess@selectButton:
  4072                           	opt stack 0
  4073  000079                     moteApp_convertSensorValue@index:
  4074                           	opt stack 0
  4075  000079                     oled_putUint8@start_page:
  4076                           	opt stack 0
  4077  000079                     oled_putint8@start_page:
  4078                           	opt stack 0
  4079  000079                     test_switch@timeout:
  4080                           	opt stack 0
  4081                           
  4082                           ; 2 bytes @ 0x19
  4083  000079                     	ds	1
  4084  00007A                     ??_moteJoiningProcess:
  4085  00007A                     oled_putUint8@number:
  4086                           	opt stack 0
  4087  00007A                     oled_putint8@negative:
  4088                           	opt stack 0
  4089                           
  4090                           ; 1 bytes @ 0x1A
  4091  00007A                     	ds	1
  4092  00007B                     test_switch@buttonCheck:
  4093                           	opt stack 0
  4094  00007B                     moteJoiningProcess@readDataRate:
  4095                           	opt stack 0
  4096  00007B                     oled_putUint8@numData:
  4097                           	opt stack 0
  4098  00007B                     oled_putint8@numData:
  4099                           	opt stack 0
  4100                           
  4101                           ; 6 bytes @ 0x1B
  4102  00007B                     	ds	1
  4103  00007C                     ??___flmul:
  4104  00007C                     moteJoiningProcess@joiningComplete:
  4105                           	opt stack 0
  4106                           
  4107                           ; 1 bytes @ 0x1C
  4108  00007C                     	ds	1
  4109  00007D                     moteJoiningProcess@messageReady:
  4110                           	opt stack 0
  4111                           
  4112                           ; 1 bytes @ 0x1D
  4113  00007D                     	ds	3
  4114  000080                     ___flmul@sign:
  4115                           	opt stack 0
  4116                           
  4117                           ; 1 bytes @ 0x20
  4118  000080                     	ds	1
  4119  000081                     oled_putint8@number:
  4120                           	opt stack 0
  4121  000081                     ___flmul@grs:
  4122                           	opt stack 0
  4123                           
  4124                           ; 4 bytes @ 0x21
  4125  000081                     	ds	1
  4126  000082                     ??_moteApp_searchFrameGPS:
  4127                           
  4128                           ; 1 bytes @ 0x22
  4129  000082                     	ds	2
  4130  000084                     moteApp_searchFrameGPS@ccs:
  4131                           	opt stack 0
  4132                           
  4133                           ; 1 bytes @ 0x24
  4134  000084                     	ds	1
  4135  000085                     moteApp_searchFrameGPS@cs:
  4136                           	opt stack 0
  4137  000085                     ___flmul@aexp:
  4138                           	opt stack 0
  4139                           
  4140                           ; 1 bytes @ 0x25
  4141  000085                     	ds	1
  4142  000086                     moteApp_searchFrameGPS@c:
  4143                           	opt stack 0
  4144  000086                     ___flmul@bexp:
  4145                           	opt stack 0
  4146                           
  4147                           ; 1 bytes @ 0x26
  4148  000086                     	ds	1
  4149  000087                     moteApp_searchFrameGPS@i:
  4150                           	opt stack 0
  4151  000087                     ___flmul@prod:
  4152                           	opt stack 0
  4153                           
  4154                           ; 4 bytes @ 0x27
  4155  000087                     	ds	4
  4156  00008B                     ___flmul@temp:
  4157                           	opt stack 0
  4158                           
  4159                           ; 2 bytes @ 0x2B
  4160  00008B                     	ds	2
  4161  00008D                     ?___fldiv:
  4162                           	opt stack 0
  4163  00008D                     ___fldiv@b:
  4164                           	opt stack 0
  4165                           
  4166                           ; 4 bytes @ 0x2D
  4167  00008D                     	ds	4
  4168  000091                     ___fldiv@a:
  4169                           	opt stack 0
  4170                           
  4171                           ; 4 bytes @ 0x31
  4172  000091                     	ds	4
  4173  000095                     ??___fldiv:
  4174                           
  4175                           ; 1 bytes @ 0x35
  4176  000095                     	ds	4
  4177  000099                     ___fldiv@sign:
  4178                           	opt stack 0
  4179                           
  4180                           ; 1 bytes @ 0x39
  4181  000099                     	ds	1
  4182  00009A                     ___fldiv@rem:
  4183                           	opt stack 0
  4184                           
  4185                           ; 4 bytes @ 0x3A
  4186  00009A                     	ds	4
  4187  00009E                     ___fldiv@new_exp:
  4188                           	opt stack 0
  4189                           
  4190                           ; 2 bytes @ 0x3E
  4191  00009E                     	ds	2
  4192  0000A0                     ___fldiv@grs:
  4193                           	opt stack 0
  4194                           
  4195                           ; 4 bytes @ 0x40
  4196  0000A0                     	ds	4
  4197  0000A4                     ___fldiv@bexp:
  4198                           	opt stack 0
  4199                           
  4200                           ; 1 bytes @ 0x44
  4201  0000A4                     	ds	1
  4202  0000A5                     ___fldiv@aexp:
  4203                           	opt stack 0
  4204                           
  4205                           ; 1 bytes @ 0x45
  4206  0000A5                     	ds	1
  4207  0000A6                     ADC_TempConversion@tempRaw:
  4208                           	opt stack 0
  4209                           
  4210                           ; 1 bytes @ 0x46
  4211  0000A6                     	ds	1
  4212  0000A7                     ADC_TempConversion@temp:
  4213                           	opt stack 0
  4214                           
  4215                           ; 1 bytes @ 0x47
  4216  0000A7                     	ds	1
  4217  0000A8                     ADC_TempConversion@val:
  4218                           	opt stack 0
  4219                           
  4220                           ; 4 bytes @ 0x48
  4221  0000A8                     	ds	4
  4222  0000AC                     ??_moteApp_testSensors:
  4223  0000AC                     moteRunningProcess@selectButton:
  4224                           	opt stack 0
  4225                           
  4226                           ; 1 bytes @ 0x4C
  4227  0000AC                     	ds	1
  4228  0000AD                     moteRunningProcess@messageReady:
  4229                           	opt stack 0
  4230                           
  4231                           ; 1 bytes @ 0x4D
  4232  0000AD                     	ds	1
  4233  0000AE                     moteRunningProcess@sleepEvent:
  4234                           	opt stack 0
  4235                           
  4236                           ; 1 bytes @ 0x4E
  4237  0000AE                     	ds	1
  4238  0000AF                     ??_moteRunningProcess:
  4239                           
  4240                           ; 1 bytes @ 0x4F
  4241  0000AF                     	ds	1
  4242  0000B0                     moteRunningProcess@readByte:
  4243                           	opt stack 0
  4244                           
  4245                           ; 1 bytes @ 0x50
  4246  0000B0                     	ds	1
  4247  0000B1                     moteRunningProcess@sizeOfUpdate:
  4248                           	opt stack 0
  4249                           
  4250                           ; 1 bytes @ 0x51
  4251  0000B1                     	ds	1
  4252  0000B2                     moteRunningProcess@sizeOfUpdate_1523:
  4253                           	opt stack 0
  4254                           
  4255                           ; 1 bytes @ 0x52
  4256  0000B2                     	ds	1
  4257  0000B3                     moteRunningProcess@counter:
  4258                           	opt stack 0
  4259                           
  4260                           ; 1 bytes @ 0x53
  4261  0000B3                     	ds	1
  4262  0000B4                     moteRunningProcess@bufferReadPos:
  4263                           	opt stack 0
  4264                           
  4265                           ; 1 bytes @ 0x54
  4266  0000B4                     	ds	1
  4267  0000B5                     moteRunningProcess@changeStates:
  4268                           	opt stack 0
  4269                           
  4270                           ; 1 bytes @ 0x55
  4271  0000B5                     	ds	1
  4272  0000B6                     ??_moteHandler:
  4273                           
  4274                           ; 1 bytes @ 0x56
  4275  0000B6                     	ds	1
  4276  0000B7                     moteHandler@gotoSleep:
  4277                           	opt stack 0
  4278                           
  4279                           ; 1 bytes @ 0x57
  4280  0000B7                     	ds	1
  4281  0000B8                     moteHandler@gotoNextState:
  4282                           	opt stack 0
  4283                           
  4284                           ; 1 bytes @ 0x58
  4285  0000B8                     	ds	1
  4286  0000B9                     moteHandler@s2Button:
  4287                           	opt stack 0
  4288                           
  4289                           ; 1 bytes @ 0x59
  4290  0000B9                     	ds	1
  4291  0000BA                     moteHandler@buttonPress:
  4292                           	opt stack 0
  4293                           
  4294                           ; 1 bytes @ 0x5A
  4295  0000BA                     	ds	1
  4296  0000BB                     moteHandler@readMessage:
  4297                           	opt stack 0
  4298                           
  4299                           ; 1 bytes @ 0x5B
  4300  0000BB                     	ds	1
  4301  0000BC                     tblptru	equ	0xFF8
  4302                           tblptrh	equ	0xFF7
  4303                           tblptrl	equ	0xFF6
  4304                           tablat	equ	0xFF5
  4305                           postinc0	equ	0xFEE
  4306                           wreg	equ	0xFE8
  4307                           postdec1	equ	0xFE5
  4308                           fsr1l	equ	0xFE1
  4309                           
  4310                           ; 1 bytes @ 0x5C
  4311                           
  4312                           	psect	cstackCOMRAM
  4313  000001                     __pcstackCOMRAM:
  4314                           	opt stack 0
  4315  000001                     ??_USBStdGetDscHandler:
  4316  000001                     ??_USBStdGetStatusHandler:
  4317  000001                     ?i2_USBTransferOnePacket:
  4318                           	opt stack 0
  4319  000001                     ?___lldiv:
  4320                           	opt stack 0
  4321  000001                     reloadTimer@setTimerValue:
  4322                           	opt stack 0
  4323  000001                     clearInterruptPinRX@tClearPin:
  4324                           	opt stack 0
  4325  000001                     inFIFO@data:
  4326                           	opt stack 0
  4327  000001                     USBConfigureEndpoint@direction:
  4328                           	opt stack 0
  4329  000001                     USBCtrlTrfTxService@byteToSend:
  4330                           	opt stack 0
  4331  000001                     i2USBTransferOnePacket@dir:
  4332                           	opt stack 0
  4333  000001                     i2memset@p1:
  4334                           	opt stack 0
  4335  000001                     ___lldiv@dividend:
  4336                           	opt stack 0
  4337                           
  4338                           ; 4 bytes @ 0x0
  4339  000001                     	ds	1
  4340  000002                     ??_USBConfigureEndpoint:
  4341  000002                     ??_InterruptPinRX:
  4342  000002                     ??_InterruptTimerUART:
  4343  000002                     USBStdGetStatusHandler@p:
  4344                           	opt stack 0
  4345  000002                     i2USBTransferOnePacket@data:
  4346                           	opt stack 0
  4347                           
  4348                           ; 2 bytes @ 0x1
  4349  000002                     	ds	1
  4350  000003                     i2memset@c:
  4351                           	opt stack 0
  4352                           
  4353                           ; 2 bytes @ 0x2
  4354  000003                     	ds	1
  4355  000004                     InterruptTimerUART@aux:
  4356                           	opt stack 0
  4357  000004                     i2USBTransferOnePacket@len:
  4358                           	opt stack 0
  4359                           
  4360                           ; 1 bytes @ 0x3
  4361  000004                     	ds	1
  4362  000005                     InterruptTimerUART@mask:
  4363                           	opt stack 0
  4364  000005                     i2USBTransferOnePacket@ep:
  4365                           	opt stack 0
  4366  000005                     i2memset@n:
  4367                           	opt stack 0
  4368  000005                     ___lldiv@divisor:
  4369                           	opt stack 0
  4370                           
  4371                           ; 4 bytes @ 0x4
  4372  000005                     	ds	1
  4373  000006                     USBConfigureEndpoint@EPNum:
  4374                           	opt stack 0
  4375  000006                     i2USBTransferOnePacket@handle:
  4376                           	opt stack 0
  4377                           
  4378                           ; 2 bytes @ 0x5
  4379  000006                     	ds	1
  4380  000007                     USBConfigureEndpoint@handle:
  4381                           	opt stack 0
  4382  000007                     i2memset@p:
  4383                           	opt stack 0
  4384                           
  4385                           ; 2 bytes @ 0x6
  4386  000007                     	ds	2
  4387  000009                     USBEnableEndpoint@options:
  4388                           	opt stack 0
  4389  000009                     i2USBDeviceInit@i:
  4390                           	opt stack 0
  4391  000009                     ___lldiv@quotient:
  4392                           	opt stack 0
  4393                           
  4394                           ; 4 bytes @ 0x8
  4395  000009                     	ds	1
  4396  00000A                     USBEnableEndpoint@p:
  4397                           	opt stack 0
  4398                           
  4399                           ; 2 bytes @ 0x9
  4400  00000A                     	ds	2
  4401  00000C                     USBEnableEndpoint@ep:
  4402                           	opt stack 0
  4403                           
  4404                           ; 1 bytes @ 0xB
  4405  00000C                     	ds	1
  4406  00000D                     USBapp_CdcEmulatorInitialize@i:
  4407                           	opt stack 0
  4408  00000D                     ___lldiv@counter:
  4409                           	opt stack 0
  4410                           
  4411                           ; 1 bytes @ 0xC
  4412  00000D                     	ds	1
  4413  00000E                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  4414                           	opt stack 0
  4415  00000E                     USART_mySetLineCodingHandler@dwBaud:
  4416                           	opt stack 0
  4417                           
  4418                           ; 4 bytes @ 0xD
  4419  00000E                     	ds	2
  4420  000010                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  4421                           	opt stack 0
  4422                           
  4423                           ; 2 bytes @ 0xF
  4424  000010                     	ds	2
  4425  000012                     USBCtrlTrfRxService@i:
  4426                           	opt stack 0
  4427  000012                     USBCtrlTrfInHandler@lastDTS:
  4428                           	opt stack 0
  4429  000012                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  4430                           	opt stack 0
  4431                           
  4432                           ; 2 bytes @ 0x11
  4433  000012                     	ds	1
  4434  000013                     USBCtrlTrfRxService@byteToRead:
  4435                           	opt stack 0
  4436                           
  4437                           ; 1 bytes @ 0x12
  4438  000013                     	ds	1
  4439  000014                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  4440                           
  4441                           ; 1 bytes @ 0x13
  4442  000014                     	ds	2
  4443  000016                     ??_USBStdFeatureReqHandler:
  4444  000016                     USBStdSetCfgHandler@i:
  4445                           	opt stack 0
  4446                           
  4447                           ; 1 bytes @ 0x15
  4448  000016                     	ds	1
  4449  000017                     USBStdFeatureReqHandler@pUEP:
  4450                           	opt stack 0
  4451                           
  4452                           ; 2 bytes @ 0x16
  4453  000017                     	ds	2
  4454  000019                     USBStdFeatureReqHandler@current_ep_data:
  4455                           	opt stack 0
  4456                           
  4457                           ; 1 bytes @ 0x18
  4458  000019                     	ds	1
  4459  00001A                     USBStdFeatureReqHandler@p:
  4460                           	opt stack 0
  4461                           
  4462                           ; 2 bytes @ 0x19
  4463  00001A                     	ds	2
  4464  00001C                     ??_USBCtrlEPService:
  4465  00001C                     
  4466                           ; 1 bytes @ 0x1B
  4467  00001C                     	ds	2
  4468  00001E                     USBCtrlEPService@setup_cnt:
  4469                           	opt stack 0
  4470                           
  4471                           ; 1 bytes @ 0x1D
  4472  00001E                     	ds	1
  4473  00001F                     USBDeviceTasks@i:
  4474                           	opt stack 0
  4475                           
  4476                           ; 1 bytes @ 0x1E
  4477  00001F                     	ds	1
  4478  000020                     ??_INTERRUPT_InterruptManager:
  4479                           
  4480                           ; 1 bytes @ 0x1F
  4481  000020                     	ds	18
  4482                           tblptru	equ	0xFF8
  4483                           tblptrh	equ	0xFF7
  4484                           tblptrl	equ	0xFF6
  4485                           tablat	equ	0xFF5
  4486                           postinc0	equ	0xFEE
  4487                           wreg	equ	0xFE8
  4488                           postdec1	equ	0xFE5
  4489                           fsr1l	equ	0xFE1
  4490                           
  4491 ;;
  4492 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4493 ;;
  4494 ;; *************** function _main *****************
  4495 ;; Defined at:
  4496 ;;		line 70 in file "main.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;		None
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;		None
  4501 ;; Return value:  Size  Location     Type
  4502 ;;                  1    wreg      void 
  4503 ;; Registers used:
  4504 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4505 ;; Tracked objects:
  4506 ;;		On entry : 0/0
  4507 ;;		On exit  : 0/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4510 ;;      Params:         0       0       0       0       0       0       0       0       0
  4511 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4512 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4513 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4514 ;;Total ram usage:        0 bytes
  4515 ;; Hardware stack levels required when called:   20
  4516 ;; This function calls:
  4517 ;;		_DATAEE_ReadByte
  4518 ;;		_DATAEE_WriteByte
  4519 ;;		_MOTEapp_handlerState
  4520 ;;		_SYSTEM_Initialize
  4521 ;;		_USBDeviceAttach
  4522 ;;		_USBDeviceInit
  4523 ;;		_USBapp_Handler
  4524 ;;		_USBapp_handlerState
  4525 ;;		_moduleResync
  4526 ;;		_moteApp_clearCommand
  4527 ;;		_moteApp_delayms
  4528 ;;		_moteHandler
  4529 ;;		_oled_clear
  4530 ;;		_oled_init
  4531 ;;		_oled_putString
  4532 ;;		_test_powerup
  4533 ;; This function is called by:
  4534 ;;		Startup code after reset
  4535 ;; This function uses a non-reentrant model
  4536 ;;
  4537                           
  4538                           	psect	text0
  4539  002E8E                     __ptext0:
  4540                           	opt stack 0
  4541  002E8E                     _main:
  4542                           	opt stack 11
  4543                           
  4544                           ;main.c: 73: SYSTEM_Initialize();
  4545                           
  4546                           ;incstack = 0
  4547  002E8E  EC96  F02F         	call	_SYSTEM_Initialize	;wreg free
  4548                           
  4549                           ;main.c: 75: oled_init();
  4550  002E92  ECDA  F02E         	call	_oled_init	;wreg free
  4551                           
  4552                           ;main.c: 76: USBDeviceInit();
  4553  002E96  EC7B  F018         	call	_USBDeviceInit	;wreg free
  4554                           
  4555                           ;main.c: 78: USBDeviceAttach();
  4556  002E9A  EC75  F02E         	call	_USBDeviceAttach	;wreg free
  4557                           
  4558                           ;main.c: 80: LATBbits.LATB5 = 1;
  4559  002E9E  8A8A               	bsf	3978,5,c	;volatile
  4560                           
  4561                           ;main.c: 81: moteApp_delayms(50);
  4562  002EA0  0E00               	movlw	0
  4563  002EA2  0100               	movlb	0	; () banked
  4564  002EA4  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4565  002EA6  0E32               	movlw	50
  4566  002EA8  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4567  002EAA  ECA8  F02E         	call	_moteApp_delayms	;wreg free
  4568                           
  4569                           ;main.c: 82: LATBbits.LATB5 = 0;
  4570  002EAE  9A8A               	bcf	3978,5,c	;volatile
  4571                           
  4572                           ;main.c: 83: moteApp_delayms(500);
  4573  002EB0  0E01               	movlw	1
  4574  002EB2  0100               	movlb	0	; () banked
  4575  002EB4  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4576  002EB6  0EF4               	movlw	244
  4577  002EB8  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4578  002EBA  ECA8  F02E         	call	_moteApp_delayms	;wreg free
  4579                           
  4580                           ;main.c: 85: PEIE = 1;
  4581  002EBE  8CF2               	bsf	intcon,6,c	;volatile
  4582                           
  4583                           ;main.c: 86: GIE = 1;
  4584  002EC0  8EF2               	bsf	intcon,7,c	;volatile
  4585                           
  4586                           ;main.c: 88: moduleResync();
  4587  002EC2  EC52  F027         	call	_moduleResync	;wreg free
  4588                           
  4589                           ;main.c: 89: moteApp_delayms(20);
  4590  002EC6  0E00               	movlw	0
  4591  002EC8  0100               	movlb	0	; () banked
  4592  002ECA  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4593  002ECC  0E14               	movlw	20
  4594  002ECE  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4595  002ED0  ECA8  F02E         	call	_moteApp_delayms	;wreg free
  4596                           
  4597                           ;main.c: 90: moteApp_clearCommand();
  4598  002ED4  EC16  F031         	call	_moteApp_clearCommand	;wreg free
  4599                           
  4600                           ;main.c: 91: moteApp_delayms(20);
  4601  002ED8  0E00               	movlw	0
  4602  002EDA  0100               	movlb	0	; () banked
  4603  002EDC  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4604  002EDE  0E14               	movlw	20
  4605  002EE0  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4606  002EE2  ECA8  F02E         	call	_moteApp_delayms	;wreg free
  4607                           
  4608                           ;main.c: 93: powerOnStatus = DATAEE_ReadByte(0x00);
  4609  002EE6  0E00               	movlw	0
  4610  002EE8  ECB9  F030         	call	_DATAEE_ReadByte
  4611  002EEC  0100               	movlb	0	; () banked
  4612  002EEE  6FF6               	movwf	_powerOnStatus& (0+255),b
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;main.c: 94: if ( powerOnStatus != 0x55)
  4616  002EF0  0E55               	movlw	85
  4617  002EF2  19F6               	xorwf	_powerOnStatus& (0+255),w,b
  4618  002EF4  B4D8               	btfsc	status,2,c
  4619  002EF6  D008               	goto	l57
  4620                           
  4621                           ; BSR set to: 0
  4622                           ;main.c: 95: {
  4623                           ;main.c: 96: test_powerup();
  4624  002EF8  EC4E  F029         	call	_test_powerup	;wreg free
  4625                           
  4626                           ;main.c: 97: DATAEE_WriteByte(0x00, 0x55);
  4627  002EFC  0E55               	movlw	85
  4628  002EFE  0100               	movlb	0	; () banked
  4629  002F00  6F60               	movwf	DATAEE_WriteByte@bData& (0+255),b
  4630  002F02  0E00               	movlw	0
  4631  002F04  ECAE  F02D         	call	_DATAEE_WriteByte
  4632  002F08                     l57:
  4633                           
  4634                           ;main.c: 98: }
  4635                           ;main.c: 101: operationType = USB;
  4636  002F08  0E00               	movlw	0
  4637  002F0A  0100               	movlb	0	; () banked
  4638  002F0C  6FF7               	movwf	_operationType& (0+255),b
  4639                           
  4640                           ; BSR set to: 0
  4641                           ;main.c: 102: USBapp_handlerState(USB_STARTUP);
  4642  002F0E  0E00               	movlw	0
  4643  002F10  EC41  F031         	call	_USBapp_handlerState
  4644                           
  4645                           ;main.c: 104: oled_clear();
  4646  002F14  EC7E  F030         	call	_oled_clear	;wreg free
  4647                           
  4648                           ;main.c: 105: oled_putString("Microchip Mote",0,0);
  4649  002F18  0E1F               	movlw	low STR_1
  4650  002F1A  0100               	movlb	0	; () banked
  4651  002F1C  6F72               	movwf	oled_putString@string& (0+255),b
  4652  002F1E  0E7D               	movlw	high STR_1
  4653  002F20  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4654  002F22  5172               	movf	oled_putString@string& (0+255),w,b
  4655  002F24  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  4656  002F26  A4D8               	btfss	status,2,c
  4657  002F28  0E00               	movlw	low (__mediumconst shr (0+16))
  4658  002F2A  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  4659  002F2C  0E00               	movlw	0
  4660  002F2E  6F75               	movwf	oled_putString@station_dot& (0+255),b
  4661  002F30  0E00               	movlw	0
  4662  002F32  6F76               	movwf	oled_putString@start_page& (0+255),b
  4663  002F34  EC14  F029         	call	_oled_putString	;wreg free
  4664                           
  4665                           ;main.c: 106: oled_putString("   LoRa Demo  ",0,1);
  4666  002F38  0E01               	movlw	low STR_2
  4667  002F3A  0100               	movlb	0	; () banked
  4668  002F3C  6F72               	movwf	oled_putString@string& (0+255),b
  4669  002F3E  0E7D               	movlw	high STR_2
  4670  002F40  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4671  002F42  5172               	movf	oled_putString@string& (0+255),w,b
  4672  002F44  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  4673  002F46  A4D8               	btfss	status,2,c
  4674  002F48  0E00               	movlw	low (__mediumconst shr (0+16))
  4675  002F4A  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  4676  002F4C  0E00               	movlw	0
  4677  002F4E  6F75               	movwf	oled_putString@station_dot& (0+255),b
  4678  002F50  0E01               	movlw	1
  4679  002F52  6F76               	movwf	oled_putString@start_page& (0+255),b
  4680  002F54  EC14  F029         	call	_oled_putString	;wreg free
  4681                           
  4682                           ;main.c: 107: oled_putString(" V 1.0.1 Code ",0,3);
  4683  002F58  0E10               	movlw	low STR_3
  4684  002F5A  0100               	movlb	0	; () banked
  4685  002F5C  6F72               	movwf	oled_putString@string& (0+255),b
  4686  002F5E  0E7D               	movlw	high STR_3
  4687  002F60  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4688  002F62  5172               	movf	oled_putString@string& (0+255),w,b
  4689  002F64  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  4690  002F66  A4D8               	btfss	status,2,c
  4691  002F68  0E00               	movlw	low (__mediumconst shr (0+16))
  4692  002F6A  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  4693  002F6C  0E00               	movlw	0
  4694  002F6E  6F75               	movwf	oled_putString@station_dot& (0+255),b
  4695  002F70  0E03               	movlw	3
  4696  002F72  6F76               	movwf	oled_putString@start_page& (0+255),b
  4697  002F74  EC14  F029         	call	_oled_putString	;wreg free
  4698                           
  4699                           ;main.c: 108: moteApp_delayms(1000);
  4700  002F78  0E03               	movlw	3
  4701  002F7A  0100               	movlb	0	; () banked
  4702  002F7C  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4703  002F7E  0EE8               	movlw	232
  4704  002F80  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4705  002F82  ECA8  F02E         	call	_moteApp_delayms	;wreg free
  4706                           
  4707                           ;main.c: 112: {
  4708                           ;main.c: 114: switch (operationType)
  4709                           
  4710                           ;main.c: 111: while(1)
  4711  002F86  D015               	goto	l67
  4712  002F88                     
  4713                           ;main.c: 117: while(1);
  4714  002F88  D7FF               	goto	l60
  4715  002F8A                     
  4716                           ;main.c: 120: USBapp_Handler();
  4717  002F8A  EC27  F020         	call	_USBapp_Handler	;wreg free
  4718                           
  4719                           ;main.c: 122: operationType = MOTE;
  4720  002F8E  0E01               	movlw	1
  4721  002F90  0100               	movlb	0	; () banked
  4722  002F92  6FF7               	movwf	_operationType& (0+255),b
  4723                           
  4724                           ; BSR set to: 0
  4725                           ;main.c: 123: MOTEapp_handlerState(MOTE_STARTUP);
  4726  002F94  0E01               	movlw	1
  4727  002F96  EC46  F031         	call	_MOTEapp_handlerState
  4728                           
  4729                           ;main.c: 124: break;
  4730  002F9A  D00B               	goto	l67
  4731  002F9C                     
  4732                           ;main.c: 126: if (moteHandler() == MOTE_SWAP)
  4733  002F9C  EC57  F011         	call	_moteHandler	;wreg free
  4734  002FA0  0A04               	xorlw	4
  4735  002FA2  A4D8               	btfss	status,2,c
  4736  002FA4  D006               	goto	l67
  4737                           
  4738                           ;main.c: 127: {
  4739                           ;main.c: 129: operationType = USB;
  4740  002FA6  0E00               	movlw	0
  4741  002FA8  0100               	movlb	0	; () banked
  4742  002FAA  6FF7               	movwf	_operationType& (0+255),b
  4743                           
  4744                           ; BSR set to: 0
  4745                           ;main.c: 130: USBapp_handlerState(USB_STARTUP);
  4746  002FAC  0E00               	movlw	0
  4747  002FAE  EC41  F031         	call	_USBapp_handlerState
  4748  002FB2                     l67:
  4749                           
  4750                           ;main.c: 133: }
  4751                           
  4752                           ;main.c: 131: }
  4753                           ;main.c: 132: break;
  4754  002FB2  0100               	movlb	0	; () banked
  4755  002FB4  51F7               	movf	_operationType& (0+255),w,b
  4756                           
  4757                           ; Switch size 1, requested type "space"
  4758                           ; Number of cases is 2, Range of values is 0 to 1
  4759                           ; switch strategies available:
  4760                           ; Name         Instructions Cycles
  4761                           ; simple_byte            7     4 (average)
  4762                           ;	Chosen strategy is simple_byte
  4763  002FB6  0A00               	xorlw	0	; case 0
  4764  002FB8  B4D8               	btfsc	status,2,c
  4765  002FBA  D7E7               	goto	l65
  4766  002FBC  0A01               	xorlw	1	; case 1
  4767  002FBE  B4D8               	btfsc	status,2,c
  4768  002FC0  D7ED               	goto	l66
  4769  002FC2  D7E2               	goto	l60
  4770  002FC4                     __end_of_main:
  4771                           	opt stack 0
  4772                           tblptru	equ	0xFF8
  4773                           tblptrh	equ	0xFF7
  4774                           tblptrl	equ	0xFF6
  4775                           tablat	equ	0xFF5
  4776                           intcon	equ	0xFF2
  4777                           postinc0	equ	0xFEE
  4778                           wreg	equ	0xFE8
  4779                           postdec1	equ	0xFE5
  4780                           fsr1l	equ	0xFE1
  4781                           status	equ	0xFD8
  4782                           
  4783 ;; *************** function _test_powerup *****************
  4784 ;; Defined at:
  4785 ;;		line 62 in file "../Includes/Board/poweruptest.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;		None
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;		None
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  1    wreg      void 
  4792 ;; Registers used:
  4793 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4799 ;;      Params:         0       0       0       0       0       0       0       0       0
  4800 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4801 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4802 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4803 ;;Total ram usage:        0 bytes
  4804 ;; Hardware stack levels used:    1
  4805 ;; Hardware stack levels required when called:   17
  4806 ;; This function calls:
  4807 ;;		_EUSART_FlushBuffer
  4808 ;;		_moteApp_delayms
  4809 ;;		_moteApp_testSensors
  4810 ;;		_oled_clear
  4811 ;;		_test_comms
  4812 ;;		_test_leds
  4813 ;;		_test_oled
  4814 ;;		_test_switch
  4815 ;; This function is called by:
  4816 ;;		_main
  4817 ;; This function uses a non-reentrant model
  4818 ;;
  4819                           
  4820                           	psect	text1
  4821  00529C                     __ptext1:
  4822                           	opt stack 0
  4823  00529C                     _test_powerup:
  4824                           	opt stack 13
  4825                           
  4826                           ;poweruptest.c: 65: test_oled();
  4827                           
  4828                           ; BSR set to: 0
  4829                           ;incstack = 0
  4830  00529C  ECF6  F020         	call	_test_oled	;wreg free
  4831                           
  4832                           ;poweruptest.c: 66: moteApp_delayms(20);
  4833  0052A0  0E00               	movlw	0
  4834  0052A2  0100               	movlb	0	; () banked
  4835  0052A4  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4836  0052A6  0E14               	movlw	20
  4837  0052A8  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4838  0052AA  ECA8  F02E         	call	_moteApp_delayms	;wreg free
  4839                           
  4840                           ;poweruptest.c: 68: test_switch();
  4841  0052AE  ECC7  F01A         	call	_test_switch	;wreg free
  4842                           
  4843                           ;poweruptest.c: 70: oled_clear();
  4844  0052B2  EC7E  F030         	call	_oled_clear	;wreg free
  4845                           
  4846                           ;poweruptest.c: 71: moteApp_delayms(20);
  4847  0052B6  0E00               	movlw	0
  4848  0052B8  0100               	movlb	0	; () banked
  4849  0052BA  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4850  0052BC  0E14               	movlw	20
  4851  0052BE  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4852  0052C0  ECA8  F02E         	call	_moteApp_delayms	;wreg free
  4853                           
  4854                           ;poweruptest.c: 72: test_comms();
  4855  0052C4  EC87  F029         	call	_test_comms	;wreg free
  4856                           
  4857                           ;poweruptest.c: 73: moteApp_delayms(20);
  4858  0052C8  0E00               	movlw	0
  4859  0052CA  0100               	movlb	0	; () banked
  4860  0052CC  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4861  0052CE  0E14               	movlw	20
  4862  0052D0  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4863  0052D2  ECA8  F02E         	call	_moteApp_delayms	;wreg free
  4864                           
  4865                           ;poweruptest.c: 75: test_leds();
  4866  0052D6  ECF9  F029         	call	_test_leds	;wreg free
  4867                           
  4868                           ;poweruptest.c: 78: moteApp_delayms(20);
  4869  0052DA  0E00               	movlw	0
  4870  0052DC  0100               	movlb	0	; () banked
  4871  0052DE  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4872  0052E0  0E14               	movlw	20
  4873  0052E2  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4874  0052E4  ECA8  F02E         	call	_moteApp_delayms	;wreg free
  4875                           
  4876                           ;poweruptest.c: 79: EUSART_FlushBuffer();
  4877  0052E8  ECEF  F02C         	call	_EUSART_FlushBuffer	;wreg free
  4878                           
  4879                           ;poweruptest.c: 80: moteApp_delayms(20);
  4880  0052EC  0E00               	movlw	0
  4881  0052EE  0100               	movlb	0	; () banked
  4882  0052F0  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4883  0052F2  0E14               	movlw	20
  4884  0052F4  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4885  0052F6  ECA8  F02E         	call	_moteApp_delayms	;wreg free
  4886                           
  4887                           ;poweruptest.c: 81: moteApp_testSensors();
  4888  0052FA  EC46  F01B         	call	_moteApp_testSensors	;wreg free
  4889                           
  4890                           ;poweruptest.c: 82: moteApp_delayms(3000);
  4891  0052FE  0E0B               	movlw	11
  4892  005300  0100               	movlb	0	; () banked
  4893  005302  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4894  005304  0EB8               	movlw	184
  4895  005306  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4896  005308  ECA8  F02E         	call	_moteApp_delayms	;wreg free
  4897  00530C  0012               	return		;funcret
  4898  00530E                     __end_of_test_powerup:
  4899                           	opt stack 0
  4900                           tblptru	equ	0xFF8
  4901                           tblptrh	equ	0xFF7
  4902                           tblptrl	equ	0xFF6
  4903                           tablat	equ	0xFF5
  4904                           intcon	equ	0xFF2
  4905                           postinc0	equ	0xFEE
  4906                           wreg	equ	0xFE8
  4907                           postdec1	equ	0xFE5
  4908                           fsr1l	equ	0xFE1
  4909                           status	equ	0xFD8
  4910                           
  4911 ;; *************** function _test_switch *****************
  4912 ;; Defined at:
  4913 ;;		line 99 in file "../Includes/Board/poweruptest.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;		None
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;  timeout         2   25[BANK0 ] unsigned int 
  4918 ;;  buttonCheck     1   27[BANK0 ] unsigned char 
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  1    wreg      void 
  4921 ;; Registers used:
  4922 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4928 ;;      Params:         0       0       0       0       0       0       0       0       0
  4929 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4930 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4931 ;;      Totals:         0       4       0       0       0       0       0       0       0
  4932 ;;Total ram usage:        4 bytes
  4933 ;; Hardware stack levels used:    1
  4934 ;; Hardware stack levels required when called:   16
  4935 ;; This function calls:
  4936 ;;		_oled_clear
  4937 ;;		_oled_putString
  4938 ;; This function is called by:
  4939 ;;		_test_powerup
  4940 ;; This function uses a non-reentrant model
  4941 ;;
  4942                           
  4943                           	psect	text2
  4944  00358E                     __ptext2:
  4945                           	opt stack 0
  4946  00358E                     _test_switch:
  4947                           	opt stack 13
  4948                           
  4949                           ;poweruptest.c: 101: uint16_t timeout = 500;
  4950                           
  4951                           ;incstack = 0
  4952  00358E  0E01               	movlw	1
  4953  003590  0100               	movlb	0	; () banked
  4954  003592  6F7A               	movwf	(test_switch@timeout+1)& (0+255),b
  4955  003594  0EF4               	movlw	244
  4956  003596  6F79               	movwf	test_switch@timeout& (0+255),b
  4957                           
  4958                           ;poweruptest.c: 102: uint8_t buttonCheck = 0x00;
  4959  003598  0E00               	movlw	0
  4960  00359A  6F7B               	movwf	test_switch@buttonCheck& (0+255),b
  4961                           
  4962                           ; BSR set to: 0
  4963                           ;poweruptest.c: 103: oled_clear();
  4964  00359C  EC7E  F030         	call	_oled_clear	;wreg free
  4965                           
  4966                           ;poweruptest.c: 104: oled_putString("Button Test:",0,0);
  4967  0035A0  0EF5               	movlw	low STR_10
  4968  0035A2  0100               	movlb	0	; () banked
  4969  0035A4  6F72               	movwf	oled_putString@string& (0+255),b
  4970  0035A6  0E7D               	movlw	high STR_10
  4971  0035A8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4972  0035AA  5172               	movf	oled_putString@string& (0+255),w,b
  4973  0035AC  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  4974  0035AE  A4D8               	btfss	status,2,c
  4975  0035B0  0E00               	movlw	low (__mediumconst shr (0+16))
  4976  0035B2  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  4977  0035B4  0E00               	movlw	0
  4978  0035B6  6F75               	movwf	oled_putString@station_dot& (0+255),b
  4979  0035B8  0E00               	movlw	0
  4980  0035BA  6F76               	movwf	oled_putString@start_page& (0+255),b
  4981  0035BC  EC14  F029         	call	_oled_putString	;wreg free
  4982                           
  4983                           ;poweruptest.c: 106: if( (PORTBbits.RB1 == 0) || (PORTBbits.RB0 == 0) )
  4984  0035C0  A281               	btfss	3969,1,c	;volatile
  4985  0035C2  D002               	goto	u9020
  4986  0035C4  B081               	btfsc	3969,0,c	;volatile
  4987  0035C6  D011               	goto	l123
  4988  0035C8                     u9020:
  4989                           
  4990                           ;poweruptest.c: 107: {
  4991                           ;poweruptest.c: 108: oled_putString("Button FAIL",0,3);
  4992  0035C8  0E7D               	movlw	low STR_11
  4993  0035CA  0100               	movlb	0	; () banked
  4994  0035CC  6F72               	movwf	oled_putString@string& (0+255),b
  4995  0035CE  0E7E               	movlw	high STR_11
  4996  0035D0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4997  0035D2  5172               	movf	oled_putString@string& (0+255),w,b
  4998  0035D4  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  4999  0035D6  A4D8               	btfss	status,2,c
  5000  0035D8  0E00               	movlw	low (__mediumconst shr (0+16))
  5001  0035DA  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5002  0035DC  0E00               	movlw	0
  5003  0035DE  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5004  0035E0  0E03               	movlw	3
  5005  0035E2  6F76               	movwf	oled_putString@start_page& (0+255),b
  5006  0035E4  EC14  F029         	call	_oled_putString	;wreg free
  5007                           
  5008                           ;poweruptest.c: 109: }
  5009  0035E8  D047               	goto	l127
  5010  0035EA                     l123:
  5011                           
  5012                           ;poweruptest.c: 110: else
  5013                           ;poweruptest.c: 111: {
  5014                           ;poweruptest.c: 112: oled_putString("Press Button",0,1);
  5015  0035EA  0E1C               	movlw	low STR_12
  5016  0035EC  0100               	movlb	0	; () banked
  5017  0035EE  6F72               	movwf	oled_putString@string& (0+255),b
  5018  0035F0  0E7E               	movlw	high STR_12
  5019  0035F2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5020  0035F4  5172               	movf	oled_putString@string& (0+255),w,b
  5021  0035F6  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5022  0035F8  A4D8               	btfss	status,2,c
  5023  0035FA  0E00               	movlw	low (__mediumconst shr (0+16))
  5024  0035FC  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5025  0035FE  0E00               	movlw	0
  5026  003600  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5027  003602  0E01               	movlw	1
  5028  003604  6F76               	movwf	oled_putString@start_page& (0+255),b
  5029  003606  EC14  F029         	call	_oled_putString	;wreg free
  5030                           
  5031                           ;poweruptest.c: 113: }
  5032                           ;poweruptest.c: 114: while(timeout--)
  5033  00360A  D036               	goto	l127
  5034  00360C                     l128:
  5035                           
  5036                           ; BSR set to: 0
  5037                           ;poweruptest.c: 115: {
  5038                           ;poweruptest.c: 116: if(PORTBbits.RB1 == 0)
  5039  00360C  B281               	btfsc	3969,1,c	;volatile
  5040  00360E  D013               	goto	l129
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;poweruptest.c: 117: {
  5044                           ;poweruptest.c: 118: oled_putString("Button1 PASS",0,2);
  5045  003610  0E02               	movlw	low STR_13
  5046  003612  6F72               	movwf	oled_putString@string& (0+255),b
  5047  003614  0E7E               	movlw	high STR_13
  5048  003616  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5049  003618  5172               	movf	oled_putString@string& (0+255),w,b
  5050  00361A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5051  00361C  A4D8               	btfss	status,2,c
  5052  00361E  0E00               	movlw	low (__mediumconst shr (0+16))
  5053  003620  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5054  003622  0E00               	movlw	0
  5055  003624  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5056  003626  0E02               	movlw	2
  5057  003628  6F76               	movwf	oled_putString@start_page& (0+255),b
  5058  00362A  EC14  F029         	call	_oled_putString	;wreg free
  5059                           
  5060                           ;poweruptest.c: 119: buttonCheck = buttonCheck + 0x08;
  5061  00362E  0100               	movlb	0	; () banked
  5062  003630  517B               	movf	test_switch@buttonCheck& (0+255),w,b
  5063  003632  0F08               	addlw	8
  5064  003634  6F7B               	movwf	test_switch@buttonCheck& (0+255),b
  5065  003636                     l129:
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;poweruptest.c: 120: }
  5069                           ;poweruptest.c: 121: if(PORTBbits.RB0 == 0)
  5070                           
  5071                           ; BSR set to: 0
  5072  003636  B081               	btfsc	3969,0,c	;volatile
  5073  003638  D013               	goto	l130
  5074                           
  5075                           ; BSR set to: 0
  5076                           ;poweruptest.c: 122: {
  5077                           ;poweruptest.c: 123: oled_putString("Button2 PASS",0,3);
  5078  00363A  0E0F               	movlw	low STR_14
  5079  00363C  6F72               	movwf	oled_putString@string& (0+255),b
  5080  00363E  0E7E               	movlw	high STR_14
  5081  003640  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5082  003642  5172               	movf	oled_putString@string& (0+255),w,b
  5083  003644  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5084  003646  A4D8               	btfss	status,2,c
  5085  003648  0E00               	movlw	low (__mediumconst shr (0+16))
  5086  00364A  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5087  00364C  0E00               	movlw	0
  5088  00364E  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5089  003650  0E03               	movlw	3
  5090  003652  6F76               	movwf	oled_putString@start_page& (0+255),b
  5091  003654  EC14  F029         	call	_oled_putString	;wreg free
  5092                           
  5093                           ;poweruptest.c: 124: buttonCheck = buttonCheck + 0x80;
  5094  003658  0100               	movlb	0	; () banked
  5095  00365A  517B               	movf	test_switch@buttonCheck& (0+255),w,b
  5096  00365C  0F80               	addlw	128
  5097  00365E  6F7B               	movwf	test_switch@buttonCheck& (0+255),b
  5098  003660                     l130:
  5099                           
  5100                           ; BSR set to: 0
  5101                           ;poweruptest.c: 125: }
  5102                           ;poweruptest.c: 126: if (buttonCheck == 0x88)
  5103                           
  5104                           ; BSR set to: 0
  5105  003660  0E88               	movlw	136
  5106  003662  197B               	xorwf	test_switch@buttonCheck& (0+255),w,b
  5107  003664  B4D8               	btfsc	status,2,c
  5108  003666  0012               	return	
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;poweruptest.c: 129: }
  5112                           ;poweruptest.c: 130: _delay((unsigned long)((10)*(48000000/4000.0)));
  5113                           
  5114                           ; BSR set to: 0
  5115                           
  5116                           ; BSR set to: 0
  5117                           ;poweruptest.c: 127: {
  5118                           ;poweruptest.c: 128: break;
  5119  003668  0E9C               	movlw	156
  5120  00366A  0100               	movlb	0	; () banked
  5121  00366C  6F78               	movwf	??_test_switch& (0+255),b
  5122  00366E  0ED7               	movlw	215
  5123  003670                     u11467:
  5124  003670  2EE8               	decfsz	wreg,f,c
  5125  003672  D7FE               	bra	u11467
  5126  003674  2F78               	decfsz	??_test_switch& (0+255),f,b
  5127  003676  D7FC               	bra	u11467
  5128  003678                     l127:
  5129  003678  0100               	movlb	0	; () banked
  5130  00367A  0779               	decf	test_switch@timeout& (0+255),f,b
  5131  00367C  A0D8               	btfss	status,0,c
  5132  00367E  077A               	decf	(test_switch@timeout+1)& (0+255),f,b
  5133  003680  2979               	incf	test_switch@timeout& (0+255),w,b
  5134  003682  E1C4               	bnz	l128
  5135  003684  297A               	incf	(test_switch@timeout+1)& (0+255),w,b
  5136  003686  B4D8               	btfsc	status,2,c
  5137  003688  0012               	return	
  5138  00368A  D7C0               	goto	l128
  5139  00368C                     __end_of_test_switch:
  5140                           	opt stack 0
  5141                           tblptru	equ	0xFF8
  5142                           tblptrh	equ	0xFF7
  5143                           tblptrl	equ	0xFF6
  5144                           tablat	equ	0xFF5
  5145                           intcon	equ	0xFF2
  5146                           postinc0	equ	0xFEE
  5147                           wreg	equ	0xFE8
  5148                           postdec1	equ	0xFE5
  5149                           fsr1l	equ	0xFE1
  5150                           status	equ	0xFD8
  5151                           
  5152 ;; *************** function _test_oled *****************
  5153 ;; Defined at:
  5154 ;;		line 86 in file "../Includes/Board/poweruptest.c"
  5155 ;; Parameters:    Size  Location     Type
  5156 ;;		None
  5157 ;; Auto vars:     Size  Location     Type
  5158 ;;		None
  5159 ;; Return value:  Size  Location     Type
  5160 ;;                  1    wreg      void 
  5161 ;; Registers used:
  5162 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5163 ;; Tracked objects:
  5164 ;;		On entry : 0/0
  5165 ;;		On exit  : 0/0
  5166 ;;		Unchanged: 0/0
  5167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5168 ;;      Params:         0       0       0       0       0       0       0       0       0
  5169 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5170 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5171 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5172 ;;Total ram usage:        0 bytes
  5173 ;; Hardware stack levels used:    1
  5174 ;; Hardware stack levels required when called:   16
  5175 ;; This function calls:
  5176 ;;		_oled_clear
  5177 ;;		_oled_putString
  5178 ;; This function is called by:
  5179 ;;		_test_powerup
  5180 ;; This function uses a non-reentrant model
  5181 ;;
  5182                           
  5183                           	psect	text3
  5184  0041EC                     __ptext3:
  5185                           	opt stack 0
  5186  0041EC                     _test_oled:
  5187                           	opt stack 13
  5188                           
  5189                           ;poweruptest.c: 88: oled_clear();
  5190                           
  5191                           ; BSR set to: 0
  5192                           ;incstack = 0
  5193  0041EC  EC7E  F030         	call	_oled_clear	;wreg free
  5194                           
  5195                           ;poweruptest.c: 90: oled_putString("MoTe v .",0,0);
  5196  0041F0  0E3E               	movlw	low STR_4
  5197  0041F2  0100               	movlb	0	; () banked
  5198  0041F4  6F72               	movwf	oled_putString@string& (0+255),b
  5199  0041F6  0E7F               	movlw	high STR_4
  5200  0041F8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5201  0041FA  5172               	movf	oled_putString@string& (0+255),w,b
  5202  0041FC  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5203  0041FE  A4D8               	btfss	status,2,c
  5204  004200  0E00               	movlw	low (__mediumconst shr (0+16))
  5205  004202  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5206  004204  0E00               	movlw	0
  5207  004206  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5208  004208  0E00               	movlw	0
  5209  00420A  6F76               	movwf	oled_putString@start_page& (0+255),b
  5210  00420C  EC14  F029         	call	_oled_putString	;wreg free
  5211                           
  5212                           ;poweruptest.c: 91: oled_putString("0",0,6);
  5213  004210  0E8B               	movlw	low (STR_164+11)
  5214  004212  0100               	movlb	0	; () banked
  5215  004214  6F72               	movwf	oled_putString@string& (0+255),b
  5216  004216  0E7D               	movlw	high (STR_164+11)
  5217  004218  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5218  00421A  5172               	movf	oled_putString@string& (0+255),w,b
  5219  00421C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5220  00421E  A4D8               	btfss	status,2,c
  5221  004220  0E00               	movlw	low (__mediumconst shr (0+16))
  5222  004222  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5223  004224  0E00               	movlw	0
  5224  004226  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5225  004228  0E06               	movlw	6
  5226  00422A  6F76               	movwf	oled_putString@start_page& (0+255),b
  5227  00422C  EC14  F029         	call	_oled_putString	;wreg free
  5228                           
  5229                           ;poweruptest.c: 92: oled_putString("1",0,8);
  5230  004230  0E98               	movlw	low (STR_165+11)
  5231  004232  0100               	movlb	0	; () banked
  5232  004234  6F72               	movwf	oled_putString@string& (0+255),b
  5233  004236  0E7D               	movlw	high (STR_165+11)
  5234  004238  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5235  00423A  5172               	movf	oled_putString@string& (0+255),w,b
  5236  00423C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5237  00423E  A4D8               	btfss	status,2,c
  5238  004240  0E00               	movlw	low (__mediumconst shr (0+16))
  5239  004242  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5240  004244  0E00               	movlw	0
  5241  004246  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5242  004248  0E08               	movlw	8
  5243  00424A  6F76               	movwf	oled_putString@start_page& (0+255),b
  5244  00424C  EC14  F029         	call	_oled_putString	;wreg free
  5245                           
  5246                           ;poweruptest.c: 93: oled_putString("Build Date/Time",0,1);
  5247  004250  0EC4               	movlw	low STR_7
  5248  004252  0100               	movlb	0	; () banked
  5249  004254  6F72               	movwf	oled_putString@string& (0+255),b
  5250  004256  0E7C               	movlw	high STR_7
  5251  004258  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5252  00425A  5172               	movf	oled_putString@string& (0+255),w,b
  5253  00425C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5254  00425E  A4D8               	btfss	status,2,c
  5255  004260  0E00               	movlw	low (__mediumconst shr (0+16))
  5256  004262  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5257  004264  0E00               	movlw	0
  5258  004266  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5259  004268  0E01               	movlw	1
  5260  00426A  6F76               	movwf	oled_putString@start_page& (0+255),b
  5261  00426C  EC14  F029         	call	_oled_putString	;wreg free
  5262                           
  5263                           ;poweruptest.c: 94: oled_putString("Mar 31 2018",0,2);
  5264  004270  0E71               	movlw	low STR_8
  5265  004272  0100               	movlb	0	; () banked
  5266  004274  6F72               	movwf	oled_putString@string& (0+255),b
  5267  004276  0E7E               	movlw	high STR_8
  5268  004278  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5269  00427A  5172               	movf	oled_putString@string& (0+255),w,b
  5270  00427C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5271  00427E  A4D8               	btfss	status,2,c
  5272  004280  0E00               	movlw	low (__mediumconst shr (0+16))
  5273  004282  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5274  004284  0E00               	movlw	0
  5275  004286  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5276  004288  0E02               	movlw	2
  5277  00428A  6F76               	movwf	oled_putString@start_page& (0+255),b
  5278  00428C  EC14  F029         	call	_oled_putString	;wreg free
  5279                           
  5280                           ;poweruptest.c: 95: oled_putString("17:15:48",0,3);
  5281  004290  0E47               	movlw	low STR_9
  5282  004292  0100               	movlb	0	; () banked
  5283  004294  6F72               	movwf	oled_putString@string& (0+255),b
  5284  004296  0E7F               	movlw	high STR_9
  5285  004298  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5286  00429A  5172               	movf	oled_putString@string& (0+255),w,b
  5287  00429C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5288  00429E  A4D8               	btfss	status,2,c
  5289  0042A0  0E00               	movlw	low (__mediumconst shr (0+16))
  5290  0042A2  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5291  0042A4  0E00               	movlw	0
  5292  0042A6  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5293  0042A8  0E03               	movlw	3
  5294  0042AA  6F76               	movwf	oled_putString@start_page& (0+255),b
  5295  0042AC  EC14  F029         	call	_oled_putString	;wreg free
  5296  0042B0  0012               	return		;funcret
  5297  0042B2                     __end_of_test_oled:
  5298                           	opt stack 0
  5299                           tblptru	equ	0xFF8
  5300                           tblptrh	equ	0xFF7
  5301                           tblptrl	equ	0xFF6
  5302                           tablat	equ	0xFF5
  5303                           intcon	equ	0xFF2
  5304                           postinc0	equ	0xFEE
  5305                           wreg	equ	0xFE8
  5306                           postdec1	equ	0xFE5
  5307                           fsr1l	equ	0xFE1
  5308                           status	equ	0xFD8
  5309                           
  5310 ;; *************** function _test_leds *****************
  5311 ;; Defined at:
  5312 ;;		line 147 in file "../Includes/Board/poweruptest.c"
  5313 ;; Parameters:    Size  Location     Type
  5314 ;;		None
  5315 ;; Auto vars:     Size  Location     Type
  5316 ;;		None
  5317 ;; Return value:  Size  Location     Type
  5318 ;;                  1    wreg      void 
  5319 ;; Registers used:
  5320 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5321 ;; Tracked objects:
  5322 ;;		On entry : 0/0
  5323 ;;		On exit  : 0/0
  5324 ;;		Unchanged: 0/0
  5325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5326 ;;      Params:         0       0       0       0       0       0       0       0       0
  5327 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5328 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5329 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5330 ;;Total ram usage:        0 bytes
  5331 ;; Hardware stack levels used:    1
  5332 ;; Hardware stack levels required when called:   15
  5333 ;; This function calls:
  5334 ;;		_delayms
  5335 ;;		_oled_putString
  5336 ;; This function is called by:
  5337 ;;		_test_powerup
  5338 ;; This function uses a non-reentrant model
  5339 ;;
  5340                           
  5341                           	psect	text4
  5342  0053F2                     __ptext4:
  5343                           	opt stack 0
  5344  0053F2                     _test_leds:
  5345                           	opt stack 14
  5346                           
  5347                           ;poweruptest.c: 149: oled_putString("LED Test:",0,1);
  5348                           
  5349                           ;incstack = 0
  5350  0053F2  0E07               	movlw	low STR_16
  5351  0053F4  0100               	movlb	0	; () banked
  5352  0053F6  6F72               	movwf	oled_putString@string& (0+255),b
  5353  0053F8  0E7F               	movlw	high STR_16
  5354  0053FA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5355  0053FC  5172               	movf	oled_putString@string& (0+255),w,b
  5356  0053FE  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5357  005400  A4D8               	btfss	status,2,c
  5358  005402  0E00               	movlw	low (__mediumconst shr (0+16))
  5359  005404  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5360  005406  0E00               	movlw	0
  5361  005408  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5362  00540A  0E01               	movlw	1
  5363  00540C  6F76               	movwf	oled_putString@start_page& (0+255),b
  5364  00540E  EC14  F029         	call	_oled_putString	;wreg free
  5365                           
  5366                           ;poweruptest.c: 151: LATAbits.LATA6 = 1;
  5367  005412  8C89               	bsf	3977,6,c	;volatile
  5368                           
  5369                           ;poweruptest.c: 152: LATAbits.LATA7 = 1;
  5370  005414  8E89               	bsf	3977,7,c	;volatile
  5371                           
  5372                           ;poweruptest.c: 153: delayms(500);
  5373  005416  0E01               	movlw	1
  5374  005418  0100               	movlb	0	; () banked
  5375  00541A  6F61               	movwf	(delayms@t+1)& (0+255),b
  5376  00541C  0EF4               	movlw	244
  5377  00541E  6F60               	movwf	delayms@t& (0+255),b
  5378  005420  EC8F  F02E         	call	_delayms	;wreg free
  5379                           
  5380                           ;poweruptest.c: 154: LATAbits.LATA6 = 0;
  5381  005424  9C89               	bcf	3977,6,c	;volatile
  5382                           
  5383                           ;poweruptest.c: 155: LATAbits.LATA7 = 0;
  5384  005426  9E89               	bcf	3977,7,c	;volatile
  5385                           
  5386                           ;poweruptest.c: 156: delayms(500);
  5387  005428  0E01               	movlw	1
  5388  00542A  0100               	movlb	0	; () banked
  5389  00542C  6F61               	movwf	(delayms@t+1)& (0+255),b
  5390  00542E  0EF4               	movlw	244
  5391  005430  6F60               	movwf	delayms@t& (0+255),b
  5392  005432  EC8F  F02E         	call	_delayms	;wreg free
  5393                           
  5394                           ;poweruptest.c: 157: LATAbits.LATA6 = 1;
  5395  005436  8C89               	bsf	3977,6,c	;volatile
  5396                           
  5397                           ;poweruptest.c: 158: LATAbits.LATA7 = 1;
  5398  005438  8E89               	bsf	3977,7,c	;volatile
  5399                           
  5400                           ;poweruptest.c: 159: delayms(500);
  5401  00543A  0E01               	movlw	1
  5402  00543C  0100               	movlb	0	; () banked
  5403  00543E  6F61               	movwf	(delayms@t+1)& (0+255),b
  5404  005440  0EF4               	movlw	244
  5405  005442  6F60               	movwf	delayms@t& (0+255),b
  5406  005444  EC8F  F02E         	call	_delayms	;wreg free
  5407                           
  5408                           ;poweruptest.c: 160: LATAbits.LATA6 = 0;
  5409  005448  9C89               	bcf	3977,6,c	;volatile
  5410                           
  5411                           ;poweruptest.c: 161: LATAbits.LATA7 = 0;
  5412  00544A  9E89               	bcf	3977,7,c	;volatile
  5413                           
  5414                           ;poweruptest.c: 162: delayms(500);
  5415  00544C  0E01               	movlw	1
  5416  00544E  0100               	movlb	0	; () banked
  5417  005450  6F61               	movwf	(delayms@t+1)& (0+255),b
  5418  005452  0EF4               	movlw	244
  5419  005454  6F60               	movwf	delayms@t& (0+255),b
  5420  005456  EC8F  F02E         	call	_delayms	;wreg free
  5421  00545A  0012               	return		;funcret
  5422  00545C                     __end_of_test_leds:
  5423                           	opt stack 0
  5424                           tblptru	equ	0xFF8
  5425                           tblptrh	equ	0xFF7
  5426                           tblptrl	equ	0xFF6
  5427                           tablat	equ	0xFF5
  5428                           intcon	equ	0xFF2
  5429                           postinc0	equ	0xFEE
  5430                           wreg	equ	0xFE8
  5431                           postdec1	equ	0xFE5
  5432                           fsr1l	equ	0xFE1
  5433                           status	equ	0xFD8
  5434                           
  5435 ;; *************** function _test_comms *****************
  5436 ;; Defined at:
  5437 ;;		line 134 in file "../Includes/Board/poweruptest.c"
  5438 ;; Parameters:    Size  Location     Type
  5439 ;;		None
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;		None
  5442 ;; Return value:  Size  Location     Type
  5443 ;;                  1    wreg      void 
  5444 ;; Registers used:
  5445 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5446 ;; Tracked objects:
  5447 ;;		On entry : 0/0
  5448 ;;		On exit  : 0/0
  5449 ;;		Unchanged: 0/0
  5450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5451 ;;      Params:         0       0       0       0       0       0       0       0       0
  5452 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5453 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5454 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5455 ;;Total ram usage:        0 bytes
  5456 ;; Hardware stack levels used:    1
  5457 ;; Hardware stack levels required when called:   15
  5458 ;; This function calls:
  5459 ;;		_delayms
  5460 ;;		_moteApp_toggleLeds
  5461 ;;		_oled_putString
  5462 ;; This function is called by:
  5463 ;;		_test_powerup
  5464 ;; This function uses a non-reentrant model
  5465 ;;
  5466                           
  5467                           	psect	text5
  5468  00530E                     __ptext5:
  5469                           	opt stack 0
  5470  00530E                     _test_comms:
  5471                           	opt stack 14
  5472                           
  5473                           ;poweruptest.c: 136: oled_putString("Comm Test:",0,0);
  5474                           
  5475                           ;incstack = 0
  5476  00530E  0EC0               	movlw	low STR_15
  5477  005310  0100               	movlb	0	; () banked
  5478  005312  6F72               	movwf	oled_putString@string& (0+255),b
  5479  005314  0E7E               	movlw	high STR_15
  5480  005316  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5481  005318  5172               	movf	oled_putString@string& (0+255),w,b
  5482  00531A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5483  00531C  A4D8               	btfss	status,2,c
  5484  00531E  0E00               	movlw	low (__mediumconst shr (0+16))
  5485  005320  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5486  005322  0E00               	movlw	0
  5487  005324  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5488  005326  0E00               	movlw	0
  5489  005328  6F76               	movwf	oled_putString@start_page& (0+255),b
  5490  00532A  EC14  F029         	call	_oled_putString	;wreg free
  5491                           
  5492                           ;poweruptest.c: 137: moteApp_toggleLeds(1);
  5493  00532E  0E01               	movlw	1
  5494  005330  ECB0  F01C         	call	_moteApp_toggleLeds
  5495                           
  5496                           ;poweruptest.c: 138: delayms(500);
  5497  005334  0E01               	movlw	1
  5498  005336  0100               	movlb	0	; () banked
  5499  005338  6F61               	movwf	(delayms@t+1)& (0+255),b
  5500  00533A  0EF4               	movlw	244
  5501  00533C  6F60               	movwf	delayms@t& (0+255),b
  5502  00533E  EC8F  F02E         	call	_delayms	;wreg free
  5503                           
  5504                           ;poweruptest.c: 139: moteApp_toggleLeds(0);
  5505  005342  0E00               	movlw	0
  5506  005344  ECB0  F01C         	call	_moteApp_toggleLeds
  5507                           
  5508                           ;poweruptest.c: 140: delayms(500);
  5509  005348  0E01               	movlw	1
  5510  00534A  0100               	movlb	0	; () banked
  5511  00534C  6F61               	movwf	(delayms@t+1)& (0+255),b
  5512  00534E  0EF4               	movlw	244
  5513  005350  6F60               	movwf	delayms@t& (0+255),b
  5514  005352  EC8F  F02E         	call	_delayms	;wreg free
  5515                           
  5516                           ;poweruptest.c: 141: moteApp_toggleLeds(1);
  5517  005356  0E01               	movlw	1
  5518  005358  ECB0  F01C         	call	_moteApp_toggleLeds
  5519                           
  5520                           ;poweruptest.c: 142: delayms(500);
  5521  00535C  0E01               	movlw	1
  5522  00535E  0100               	movlb	0	; () banked
  5523  005360  6F61               	movwf	(delayms@t+1)& (0+255),b
  5524  005362  0EF4               	movlw	244
  5525  005364  6F60               	movwf	delayms@t& (0+255),b
  5526  005366  EC8F  F02E         	call	_delayms	;wreg free
  5527                           
  5528                           ;poweruptest.c: 143: moteApp_toggleLeds(0);
  5529  00536A  0E00               	movlw	0
  5530  00536C  ECB0  F01C         	call	_moteApp_toggleLeds
  5531                           
  5532                           ;poweruptest.c: 144: delayms(500);
  5533  005370  0E01               	movlw	1
  5534  005372  0100               	movlb	0	; () banked
  5535  005374  6F61               	movwf	(delayms@t+1)& (0+255),b
  5536  005376  0EF4               	movlw	244
  5537  005378  6F60               	movwf	delayms@t& (0+255),b
  5538  00537A  EC8F  F02E         	call	_delayms	;wreg free
  5539  00537E  0012               	return		;funcret
  5540  005380                     __end_of_test_comms:
  5541                           	opt stack 0
  5542                           tblptru	equ	0xFF8
  5543                           tblptrh	equ	0xFF7
  5544                           tblptrl	equ	0xFF6
  5545                           tablat	equ	0xFF5
  5546                           intcon	equ	0xFF2
  5547                           postinc0	equ	0xFEE
  5548                           wreg	equ	0xFE8
  5549                           postdec1	equ	0xFE5
  5550                           fsr1l	equ	0xFE1
  5551                           status	equ	0xFD8
  5552                           
  5553 ;; *************** function _moteApp_toggleLeds *****************
  5554 ;; Defined at:
  5555 ;;		line 1289 in file "../Includes/Board/MOTEapp.c"
  5556 ;; Parameters:    Size  Location     Type
  5557 ;;  state           1    wreg     unsigned char 
  5558 ;; Auto vars:     Size  Location     Type
  5559 ;;  state           1    4[BANK0 ] unsigned char 
  5560 ;; Return value:  Size  Location     Type
  5561 ;;                  1    wreg      void 
  5562 ;; Registers used:
  5563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5564 ;; Tracked objects:
  5565 ;;		On entry : 0/0
  5566 ;;		On exit  : 0/0
  5567 ;;		Unchanged: 0/0
  5568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5569 ;;      Params:         0       0       0       0       0       0       0       0       0
  5570 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5571 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5572 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5573 ;;Total ram usage:        2 bytes
  5574 ;; Hardware stack levels used:    1
  5575 ;; Hardware stack levels required when called:   14
  5576 ;; This function calls:
  5577 ;;		_sendCommand
  5578 ;; This function is called by:
  5579 ;;		_test_comms
  5580 ;; This function uses a non-reentrant model
  5581 ;;
  5582                           
  5583                           	psect	text6
  5584  003960                     __ptext6:
  5585                           	opt stack 0
  5586  003960                     _moteApp_toggleLeds:
  5587                           	opt stack 14
  5588                           
  5589                           ;incstack = 0
  5590                           ;moteApp_toggleLeds@state stored from wreg
  5591  003960  0100               	movlb	0	; () banked
  5592  003962  6F64               	movwf	moteApp_toggleLeds@state& (0+255),b
  5593                           
  5594                           ;MOTEapp.c: 1291: _delay((unsigned long)((16)*(48000000/4000.0)));
  5595  003964  0EFA               	movlw	250
  5596  003966  0100               	movlb	0	; () banked
  5597  003968  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5598  00396A  0E58               	movlw	88
  5599  00396C                     u11477:
  5600  00396C  2EE8               	decfsz	wreg,f,c
  5601  00396E  D7FE               	bra	u11477
  5602  003970  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5603  003972  D7FC               	bra	u11477
  5604  003974  F000               	nop	
  5605                           
  5606                           ;MOTEapp.c: 1292: _delay((unsigned long)((16)*(48000000/4000.0)));
  5607  003976  0EFA               	movlw	250
  5608  003978  0100               	movlb	0	; () banked
  5609  00397A  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5610  00397C  0E58               	movlw	88
  5611  00397E                     u11487:
  5612  00397E  2EE8               	decfsz	wreg,f,c
  5613  003980  D7FE               	bra	u11487
  5614  003982  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5615  003984  D7FC               	bra	u11487
  5616  003986  F000               	nop	
  5617                           
  5618                           ;MOTEapp.c: 1293: _delay((unsigned long)((16)*(48000000/4000.0)));
  5619  003988  0EFA               	movlw	250
  5620  00398A  0100               	movlb	0	; () banked
  5621  00398C  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5622  00398E  0E58               	movlw	88
  5623  003990                     u11497:
  5624  003990  2EE8               	decfsz	wreg,f,c
  5625  003992  D7FE               	bra	u11497
  5626  003994  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5627  003996  D7FC               	bra	u11497
  5628  003998  F000               	nop	
  5629                           
  5630                           ;MOTEapp.c: 1294: if (state)
  5631  00399A  0100               	movlb	0	; () banked
  5632  00399C  5164               	movf	moteApp_toggleLeds@state& (0+255),w,b
  5633  00399E  B4D8               	btfsc	status,2,c
  5634  0039A0  D029               	goto	l695
  5635                           
  5636                           ; BSR set to: 0
  5637                           ;MOTEapp.c: 1295: {
  5638                           ;MOTEapp.c: 1296: sendCommand("sys set pindig GPIO10 1\r\n");
  5639  0039A2  0E23               	movlw	low STR_175
  5640  0039A4  6F61               	movwf	sendCommand@string& (0+255),b
  5641  0039A6  0E7A               	movlw	high STR_175
  5642  0039A8  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5643  0039AA  EC5B  F02E         	call	_sendCommand	;wreg free
  5644                           
  5645                           ;MOTEapp.c: 1297: _delay((unsigned long)((16)*(48000000/4000.0)));
  5646  0039AE  0EFA               	movlw	250
  5647  0039B0  0100               	movlb	0	; () banked
  5648  0039B2  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5649  0039B4  0E58               	movlw	88
  5650  0039B6                     u11507:
  5651  0039B6  2EE8               	decfsz	wreg,f,c
  5652  0039B8  D7FE               	bra	u11507
  5653  0039BA  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5654  0039BC  D7FC               	bra	u11507
  5655  0039BE  F000               	nop	
  5656                           
  5657                           ;MOTEapp.c: 1298: _delay((unsigned long)((16)*(48000000/4000.0)));
  5658  0039C0  0EFA               	movlw	250
  5659  0039C2  0100               	movlb	0	; () banked
  5660  0039C4  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5661  0039C6  0E58               	movlw	88
  5662  0039C8                     u11517:
  5663  0039C8  2EE8               	decfsz	wreg,f,c
  5664  0039CA  D7FE               	bra	u11517
  5665  0039CC  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5666  0039CE  D7FC               	bra	u11517
  5667  0039D0  F000               	nop	
  5668                           
  5669                           ;MOTEapp.c: 1299: _delay((unsigned long)((16)*(48000000/4000.0)));
  5670  0039D2  0EFA               	movlw	250
  5671  0039D4  0100               	movlb	0	; () banked
  5672  0039D6  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5673  0039D8  0E58               	movlw	88
  5674  0039DA                     u11527:
  5675  0039DA  2EE8               	decfsz	wreg,f,c
  5676  0039DC  D7FE               	bra	u11527
  5677  0039DE  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5678  0039E0  D7FC               	bra	u11527
  5679  0039E2  F000               	nop	
  5680                           
  5681                           ;MOTEapp.c: 1300: sendCommand("sys set pindig GPIO11 1\r\n");
  5682  0039E4  0E3D               	movlw	low STR_176
  5683  0039E6  0100               	movlb	0	; () banked
  5684  0039E8  6F61               	movwf	sendCommand@string& (0+255),b
  5685  0039EA  0E7A               	movlw	high STR_176
  5686  0039EC  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5687  0039EE  EC5B  F02E         	call	_sendCommand	;wreg free
  5688                           
  5689                           ;MOTEapp.c: 1301: }
  5690  0039F2  0012               	return	
  5691  0039F4                     l695:
  5692                           
  5693                           ;MOTEapp.c: 1302: else
  5694                           ;MOTEapp.c: 1303: {
  5695                           ;MOTEapp.c: 1304: sendCommand("sys set pindig GPIO10 0\r\n");
  5696  0039F4  0EEF               	movlw	low STR_177
  5697  0039F6  0100               	movlb	0	; () banked
  5698  0039F8  6F61               	movwf	sendCommand@string& (0+255),b
  5699  0039FA  0E79               	movlw	high STR_177
  5700  0039FC  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5701  0039FE  EC5B  F02E         	call	_sendCommand	;wreg free
  5702                           
  5703                           ;MOTEapp.c: 1305: _delay((unsigned long)((16)*(48000000/4000.0)));
  5704  003A02  0EFA               	movlw	250
  5705  003A04  0100               	movlb	0	; () banked
  5706  003A06  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5707  003A08  0E58               	movlw	88
  5708  003A0A                     u11537:
  5709  003A0A  2EE8               	decfsz	wreg,f,c
  5710  003A0C  D7FE               	bra	u11537
  5711  003A0E  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5712  003A10  D7FC               	bra	u11537
  5713  003A12  F000               	nop	
  5714                           
  5715                           ;MOTEapp.c: 1306: _delay((unsigned long)((16)*(48000000/4000.0)));
  5716  003A14  0EFA               	movlw	250
  5717  003A16  0100               	movlb	0	; () banked
  5718  003A18  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5719  003A1A  0E58               	movlw	88
  5720  003A1C                     u11547:
  5721  003A1C  2EE8               	decfsz	wreg,f,c
  5722  003A1E  D7FE               	bra	u11547
  5723  003A20  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5724  003A22  D7FC               	bra	u11547
  5725  003A24  F000               	nop	
  5726                           
  5727                           ;MOTEapp.c: 1307: _delay((unsigned long)((16)*(48000000/4000.0)));
  5728  003A26  0EFA               	movlw	250
  5729  003A28  0100               	movlb	0	; () banked
  5730  003A2A  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5731  003A2C  0E58               	movlw	88
  5732  003A2E                     u11557:
  5733  003A2E  2EE8               	decfsz	wreg,f,c
  5734  003A30  D7FE               	bra	u11557
  5735  003A32  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5736  003A34  D7FC               	bra	u11557
  5737  003A36  F000               	nop	
  5738                           
  5739                           ;MOTEapp.c: 1308: sendCommand("sys set pindig GPIO11 0\r\n");
  5740  003A38  0E09               	movlw	low STR_178
  5741  003A3A  0100               	movlb	0	; () banked
  5742  003A3C  6F61               	movwf	sendCommand@string& (0+255),b
  5743  003A3E  0E7A               	movlw	high STR_178
  5744  003A40  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5745  003A42  EC5B  F02E         	call	_sendCommand	;wreg free
  5746  003A46  0012               	return	
  5747  003A48                     __end_of_moteApp_toggleLeds:
  5748                           	opt stack 0
  5749                           tblptru	equ	0xFF8
  5750                           tblptrh	equ	0xFF7
  5751                           tblptrl	equ	0xFF6
  5752                           tablat	equ	0xFF5
  5753                           intcon	equ	0xFF2
  5754                           postinc0	equ	0xFEE
  5755                           wreg	equ	0xFE8
  5756                           postdec1	equ	0xFE5
  5757                           fsr1l	equ	0xFE1
  5758                           status	equ	0xFD8
  5759                           
  5760 ;; *************** function _delayms *****************
  5761 ;; Defined at:
  5762 ;;		line 54 in file "../Includes/Board/poweruptest.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;  t               2    0[BANK0 ] unsigned int 
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;  i               2    3[BANK0 ] unsigned int 
  5767 ;; Return value:  Size  Location     Type
  5768 ;;                  1    wreg      void 
  5769 ;; Registers used:
  5770 ;;		wreg, status,2, status,0
  5771 ;; Tracked objects:
  5772 ;;		On entry : 0/0
  5773 ;;		On exit  : 0/0
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5776 ;;      Params:         0       2       0       0       0       0       0       0       0
  5777 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5778 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5779 ;;      Totals:         0       5       0       0       0       0       0       0       0
  5780 ;;Total ram usage:        5 bytes
  5781 ;; Hardware stack levels used:    1
  5782 ;; Hardware stack levels required when called:   11
  5783 ;; This function calls:
  5784 ;;		Nothing
  5785 ;; This function is called by:
  5786 ;;		_test_comms
  5787 ;;		_test_leds
  5788 ;; This function uses a non-reentrant model
  5789 ;;
  5790                           
  5791                           	psect	text7
  5792  005D1E                     __ptext7:
  5793                           	opt stack 0
  5794  005D1E                     _delayms:
  5795                           	opt stack 17
  5796                           
  5797                           ;poweruptest.c: 56: uint16_t i;
  5798                           ;poweruptest.c: 57: for(i = 0; i < t; i++)
  5799                           
  5800                           ;incstack = 0
  5801  005D1E  0E00               	movlw	0
  5802  005D20  0100               	movlb	0	; () banked
  5803  005D22  6F64               	movwf	(delayms@i+1)& (0+255),b
  5804  005D24  0E00               	movlw	0
  5805  005D26  6F63               	movwf	delayms@i& (0+255),b
  5806  005D28  D00C               	goto	l111
  5807  005D2A                     
  5808                           ; BSR set to: 0
  5809                           ;poweruptest.c: 58: {
  5810                           ;poweruptest.c: 59: _delay((unsigned long)((1)*(48000000/4000.0)));
  5811                           
  5812                           ; BSR set to: 0
  5813  005D2A  0E10               	movlw	16
  5814  005D2C  0100               	movlb	0	; () banked
  5815  005D2E  6F62               	movwf	??_delayms& (0+255),b
  5816  005D30  0E94               	movlw	148
  5817  005D32                     u11567:
  5818  005D32  2EE8               	decfsz	wreg,f,c
  5819  005D34  D7FE               	bra	u11567
  5820  005D36  2F62               	decfsz	??_delayms& (0+255),f,b
  5821  005D38  D7FC               	bra	u11567
  5822  005D3A  F000               	nop	
  5823  005D3C  0100               	movlb	0	; () banked
  5824  005D3E  4B63               	infsnz	delayms@i& (0+255),f,b
  5825  005D40  2B64               	incf	(delayms@i+1)& (0+255),f,b
  5826  005D42                     l111:
  5827                           
  5828                           ; BSR set to: 0
  5829  005D42  5160               	movf	delayms@t& (0+255),w,b
  5830  005D44  5D63               	subwf	delayms@i& (0+255),w,b
  5831  005D46  5161               	movf	(delayms@t+1)& (0+255),w,b
  5832  005D48  5964               	subwfb	(delayms@i+1)& (0+255),w,b
  5833  005D4A  B0D8               	btfsc	status,0,c
  5834  005D4C  0012               	return	
  5835  005D4E  D7ED               	goto	l112
  5836  005D50                     __end_of_delayms:
  5837                           	opt stack 0
  5838                           tblptru	equ	0xFF8
  5839                           tblptrh	equ	0xFF7
  5840                           tblptrl	equ	0xFF6
  5841                           tablat	equ	0xFF5
  5842                           intcon	equ	0xFF2
  5843                           postinc0	equ	0xFEE
  5844                           wreg	equ	0xFE8
  5845                           postdec1	equ	0xFE5
  5846                           fsr1l	equ	0xFE1
  5847                           status	equ	0xFD8
  5848                           
  5849 ;; *************** function _moteApp_testSensors *****************
  5850 ;; Defined at:
  5851 ;;		line 1393 in file "../Includes/Board/MOTEapp.c"
  5852 ;; Parameters:    Size  Location     Type
  5853 ;;		None
  5854 ;; Auto vars:     Size  Location     Type
  5855 ;;  dummyValue      2    0        unsigned int 
  5856 ;; Return value:  Size  Location     Type
  5857 ;;                  1    wreg      void 
  5858 ;; Registers used:
  5859 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5860 ;; Tracked objects:
  5861 ;;		On entry : 0/0
  5862 ;;		On exit  : 0/0
  5863 ;;		Unchanged: 0/0
  5864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5865 ;;      Params:         0       0       0       0       0       0       0       0       0
  5866 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5867 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5868 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5869 ;;Total ram usage:        1 bytes
  5870 ;; Hardware stack levels used:    1
  5871 ;; Hardware stack levels required when called:   16
  5872 ;; This function calls:
  5873 ;;		_ADC_TempConversion
  5874 ;;		_moteApp_convertSensorValue
  5875 ;;		_moteApp_getLightValue
  5876 ;;		_moteApp_getTempValue
  5877 ;;		_moteApp_setSensorsInput
  5878 ;;		_oled_clear
  5879 ;;		_oled_putChar
  5880 ;;		_oled_putString
  5881 ;;		_oled_putint8
  5882 ;; This function is called by:
  5883 ;;		_test_powerup
  5884 ;; This function uses a non-reentrant model
  5885 ;;
  5886                           
  5887                           	psect	text8
  5888  00368C                     __ptext8:
  5889                           	opt stack 0
  5890  00368C                     _moteApp_testSensors:
  5891                           	opt stack 13
  5892                           
  5893                           ;MOTEapp.c: 1396: moteApp_setSensorsInput();
  5894                           
  5895                           ; BSR set to: 0
  5896                           ;incstack = 0
  5897  00368C  ECD8  F028         	call	_moteApp_setSensorsInput	;wreg free
  5898                           
  5899                           ;MOTEapp.c: 1398: uint16_t dummyValue;
  5900                           ;MOTEapp.c: 1399: oled_clear();
  5901  003690  EC7E  F030         	call	_oled_clear	;wreg free
  5902                           
  5903                           ;MOTEapp.c: 1400: oled_putString("ADC Test",0,0);
  5904  003694  0E59               	movlw	low STR_17
  5905  003696  0100               	movlb	0	; () banked
  5906  003698  6F72               	movwf	oled_putString@string& (0+255),b
  5907  00369A  0E7F               	movlw	high STR_17
  5908  00369C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5909  00369E  5172               	movf	oled_putString@string& (0+255),w,b
  5910  0036A0  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5911  0036A2  A4D8               	btfss	status,2,c
  5912  0036A4  0E00               	movlw	low (__mediumconst shr (0+16))
  5913  0036A6  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5914  0036A8  0E00               	movlw	0
  5915  0036AA  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5916  0036AC  0E00               	movlw	0
  5917  0036AE  6F76               	movwf	oled_putString@start_page& (0+255),b
  5918  0036B0  EC14  F029         	call	_oled_putString	;wreg free
  5919                           
  5920                           ;MOTEapp.c: 1401: oled_putString("Light =",0,1);
  5921  0036B4  0E72               	movlw	low STR_19
  5922  0036B6  0100               	movlb	0	; () banked
  5923  0036B8  6F72               	movwf	oled_putString@string& (0+255),b
  5924  0036BA  0E7F               	movlw	high STR_19
  5925  0036BC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5926  0036BE  5172               	movf	oled_putString@string& (0+255),w,b
  5927  0036C0  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5928  0036C2  A4D8               	btfss	status,2,c
  5929  0036C4  0E00               	movlw	low (__mediumconst shr (0+16))
  5930  0036C6  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5931  0036C8  0E00               	movlw	0
  5932  0036CA  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5933  0036CC  0E01               	movlw	1
  5934  0036CE  6F76               	movwf	oled_putString@start_page& (0+255),b
  5935  0036D0  EC14  F029         	call	_oled_putString	;wreg free
  5936                           
  5937                           ;MOTEapp.c: 1402: oled_putString("Temp  =",0,2);
  5938  0036D4  0E6A               	movlw	low STR_18
  5939  0036D6  0100               	movlb	0	; () banked
  5940  0036D8  6F72               	movwf	oled_putString@string& (0+255),b
  5941  0036DA  0E7F               	movlw	high STR_18
  5942  0036DC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5943  0036DE  5172               	movf	oled_putString@string& (0+255),w,b
  5944  0036E0  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5945  0036E2  A4D8               	btfss	status,2,c
  5946  0036E4  0E00               	movlw	low (__mediumconst shr (0+16))
  5947  0036E6  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5948  0036E8  0E00               	movlw	0
  5949  0036EA  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5950  0036EC  0E02               	movlw	2
  5951  0036EE  6F76               	movwf	oled_putString@start_page& (0+255),b
  5952  0036F0  EC14  F029         	call	_oled_putString	;wreg free
  5953                           
  5954                           ;MOTEapp.c: 1403: oled_putChar('C',14,2);
  5955  0036F4  0E0E               	movlw	14
  5956  0036F6  0100               	movlb	0	; () banked
  5957  0036F8  6F62               	movwf	oled_putChar@station_dot& (0+255),b
  5958  0036FA  0E02               	movlw	2
  5959  0036FC  6F63               	movwf	oled_putChar@start_page& (0+255),b
  5960  0036FE  0E43               	movlw	67
  5961  003700  EC94  F027         	call	_oled_putChar
  5962                           
  5963                           ;MOTEapp.c: 1404: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  5964  003704  EC31  F02D         	call	_moteApp_getTempValue	;wreg free
  5965  003708  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  5966  00370C  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  5967  003710  EC99  F028         	call	_moteApp_convertSensorValue	;wreg free
  5968  003714  C072  F0DA         	movff	?_moteApp_convertSensorValue,_temperature
  5969  003718  C073  F0DB         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  5970                           
  5971                           ;MOTEapp.c: 1405: temperature = ADC_TempConversion(temperature);
  5972  00371C  0100               	movlb	0	; () banked
  5973  00371E  51DA               	movf	_temperature& (0+255),w,b
  5974  003720  EC3B  F01C         	call	_ADC_TempConversion
  5975  003724  0100               	movlb	0	; () banked
  5976  003726  6FAC               	movwf	??_moteApp_testSensors& (0+255),b
  5977  003728  51AC               	movf	??_moteApp_testSensors& (0+255),w,b
  5978  00372A  6FDA               	movwf	_temperature& (0+255),b
  5979  00372C  6BDB               	clrf	(_temperature+1)& (0+255),b
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;MOTEapp.c: 1406: oled_putint8(temperature, 10, 2);
  5983  00372E  0E0A               	movlw	10
  5984  003730  6F78               	movwf	oled_putint8@station_dot& (0+255),b
  5985  003732  0E02               	movlw	2
  5986  003734  6F79               	movwf	oled_putint8@start_page& (0+255),b
  5987  003736  51DA               	movf	_temperature& (0+255),w,b
  5988  003738  ECF0  F023         	call	_oled_putint8
  5989                           
  5990                           ;MOTEapp.c: 1407: __nop();
  5991  00373C  F000               	nop	
  5992                           
  5993                           ;MOTEapp.c: 1408: oled_putString("    ", 10, 1);
  5994  00373E  0EC8               	movlw	low (STR_40+12)
  5995  003740  0100               	movlb	0	; () banked
  5996  003742  6F72               	movwf	oled_putString@string& (0+255),b
  5997  003744  0E7A               	movlw	high (STR_40+12)
  5998  003746  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5999  003748  5172               	movf	oled_putString@string& (0+255),w,b
  6000  00374A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6001  00374C  A4D8               	btfss	status,2,c
  6002  00374E  0E00               	movlw	low (__mediumconst shr (0+16))
  6003  003750  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6004  003752  0E0A               	movlw	10
  6005  003754  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6006  003756  0E01               	movlw	1
  6007  003758  6F76               	movwf	oled_putString@start_page& (0+255),b
  6008  00375A  EC14  F029         	call	_oled_putString	;wreg free
  6009                           
  6010                           ;MOTEapp.c: 1409: oled_putString(moteApp_getLightValue(), 10, 1);
  6011  00375E  EC34  F02C         	call	_moteApp_getLightValue	;wreg free
  6012  003762  0100               	movlb	0	; () banked
  6013  003764  C06E  F072         	movff	?_moteApp_getLightValue,oled_putString@string
  6014  003768  C06F  F073         	movff	?_moteApp_getLightValue+1,oled_putString@string+1
  6015  00376C  5172               	movf	oled_putString@string& (0+255),w,b
  6016  00376E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6017  003770  A4D8               	btfss	status,2,c
  6018  003772  0E20               	movlw	32
  6019  003774  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6020  003776  0E0A               	movlw	10
  6021  003778  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6022  00377A  0E01               	movlw	1
  6023  00377C  6F76               	movwf	oled_putString@start_page& (0+255),b
  6024  00377E  EC14  F029         	call	_oled_putString	;wreg free
  6025  003782  0012               	return		;funcret
  6026  003784                     __end_of_moteApp_testSensors:
  6027                           	opt stack 0
  6028                           tblptru	equ	0xFF8
  6029                           tblptrh	equ	0xFF7
  6030                           tblptrl	equ	0xFF6
  6031                           tablat	equ	0xFF5
  6032                           intcon	equ	0xFF2
  6033                           postinc0	equ	0xFEE
  6034                           wreg	equ	0xFE8
  6035                           postdec1	equ	0xFE5
  6036                           fsr1l	equ	0xFE1
  6037                           status	equ	0xFD8
  6038                           
  6039 ;; *************** function _moteHandler *****************
  6040 ;; Defined at:
  6041 ;;		line 208 in file "../Includes/Board/MOTEapp.c"
  6042 ;; Parameters:    Size  Location     Type
  6043 ;;		None
  6044 ;; Auto vars:     Size  Location     Type
  6045 ;;  readMessage     1   91[BANK0 ] unsigned char 
  6046 ;;  buttonPress     1   90[BANK0 ] enum E5836
  6047 ;;  s2Button        1   89[BANK0 ] unsigned char 
  6048 ;;  gotoNextStat    1   88[BANK0 ] unsigned char 
  6049 ;;  gotoSleep       1   87[BANK0 ] unsigned char 
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  1    wreg      enum E6875
  6052 ;; Registers used:
  6053 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6059 ;;      Params:         0       0       0       0       0       0       0       0       0
  6060 ;;      Locals:         0       5       0       0       0       0       0       0       0
  6061 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6062 ;;      Totals:         0       6       0       0       0       0       0       0       0
  6063 ;;Total ram usage:        6 bytes
  6064 ;; Hardware stack levels used:    1
  6065 ;; Hardware stack levels required when called:   19
  6066 ;; This function calls:
  6067 ;;		_ADC_TempConversion
  6068 ;;		_MOTEapp_TimerBasedTask
  6069 ;;		_MOTEapp_getModuleResponse
  6070 ;;		_TMRapp_ClearBitFlags
  6071 ;;		_TMRapp_Handler
  6072 ;;		_USBapp_exitCDC
  6073 ;;		_USBapp_exitCDCState
  6074 ;;		_moteApp_convertSensorValue
  6075 ;;		_moteApp_getLightValue
  6076 ;;		_moteApp_getTempValue
  6077 ;;		_moteApp_searchFrameGPS
  6078 ;;		_moteJoiningProcess
  6079 ;;		_moteRunningProcess
  6080 ;;		_oled_clear
  6081 ;;		_oled_putString
  6082 ;;		_oled_putint8
  6083 ;;		_service_pushbutton
  6084 ;; This function is called by:
  6085 ;;		_main
  6086 ;; This function uses a non-reentrant model
  6087 ;;
  6088                           
  6089                           	psect	text9
  6090  0022AE                     __ptext9:
  6091                           	opt stack 0
  6092  0022AE                     _moteHandler:
  6093                           	opt stack 11
  6094                           
  6095                           ;MOTEapp.c: 210: bool gotoSleep = 0;
  6096                           
  6097                           ;incstack = 0
  6098  0022AE  0E00               	movlw	0
  6099  0022B0  0100               	movlb	0	; () banked
  6100  0022B2  6FB7               	movwf	moteHandler@gotoSleep& (0+255),b
  6101                           
  6102                           ;MOTEapp.c: 211: bool gotoNextState = 0;
  6103  0022B4  0E00               	movlw	0
  6104  0022B6  6FB8               	movwf	moteHandler@gotoNextState& (0+255),b
  6105                           
  6106                           ;MOTEapp.c: 212: bool s2Button = 0;
  6107  0022B8  0E00               	movlw	0
  6108  0022BA  6FB9               	movwf	moteHandler@s2Button& (0+255),b
  6109                           
  6110                           ;MOTEapp.c: 213: bool readMessage = 0;
  6111  0022BC  0E00               	movlw	0
  6112  0022BE  6FBB               	movwf	moteHandler@readMessage& (0+255),b
  6113                           
  6114                           ;MOTEapp.c: 214: buttonStates_t buttonPress = Released;
  6115  0022C0  0E03               	movlw	3
  6116  0022C2  6FBA               	movwf	moteHandler@buttonPress& (0+255),b
  6117                           
  6118                           ; BSR set to: 0
  6119                           ;MOTEapp.c: 219: moteApp_searchFrameGPS();
  6120  0022C4  ECC0  F013         	call	_moteApp_searchFrameGPS	;wreg free
  6121                           
  6122                           ;MOTEapp.c: 222: if (PORTAbits.RA0)
  6123  0022C8  A080               	btfss	3968,0,c	;volatile
  6124  0022CA  D009               	goto	l379
  6125                           
  6126                           ;MOTEapp.c: 223: {
  6127                           ;MOTEapp.c: 224: if (USBapp_exitCDC() == NO_USB)
  6128  0022CC  EC64  F031         	call	_USBapp_exitCDC	;wreg free
  6129  0022D0  0900               	iorlw	0
  6130  0022D2  A4D8               	btfss	status,2,c
  6131  0022D4  D007               	goto	l381
  6132                           
  6133                           ;MOTEapp.c: 225: moteState = MOTE_SWAP;
  6134  0022D6  0E04               	movlw	4
  6135  0022D8  0100               	movlb	0	; () banked
  6136  0022DA  6FFF               	movwf	_moteState& (0+255),b
  6137                           
  6138                           ; BSR set to: 0
  6139                           ;MOTEapp.c: 226: } else {
  6140  0022DC  D003               	goto	l381
  6141  0022DE                     l379:
  6142                           
  6143                           ;MOTEapp.c: 227: USBapp_exitCDCState(NO_USB);
  6144                           
  6145                           ; BSR set to: 0
  6146  0022DE  0E00               	movlw	0
  6147  0022E0  EC3C  F031         	call	_USBapp_exitCDCState
  6148  0022E4                     l381:
  6149                           
  6150                           ;MOTEapp.c: 228: }
  6151                           ;MOTEapp.c: 231: if ( appTimer.mSecTick )
  6152  0022E4  0100               	movlb	0	; () banked
  6153  0022E6  A1F8               	btfss	_appTimer& (0+255),0,b
  6154  0022E8  D008               	goto	l382
  6155                           
  6156                           ; BSR set to: 0
  6157                           ;MOTEapp.c: 232: {
  6158                           ;MOTEapp.c: 234: TMRapp_ClearBitFlags();
  6159  0022EA  EC54  F031         	call	_TMRapp_ClearBitFlags	;wreg free
  6160                           
  6161                           ;MOTEapp.c: 236: TMRapp_Handler();
  6162  0022EE  EC41  F01A         	call	_TMRapp_Handler	;wreg free
  6163                           
  6164                           ;MOTEapp.c: 237: MOTEapp_TimerBasedTask(appTimer);
  6165  0022F2  0100               	movlb	0	; () banked
  6166  0022F4  51F8               	movf	_appTimer& (0+255),w,b
  6167  0022F6  EC41  F030         	call	_MOTEapp_TimerBasedTask
  6168  0022FA                     l382:
  6169                           
  6170                           ;MOTEapp.c: 238: }
  6171                           ;MOTEapp.c: 241: buttonPress = service_pushbutton();
  6172  0022FA  EC63  F02A         	call	_service_pushbutton	;wreg free
  6173  0022FE  0100               	movlb	0	; () banked
  6174  002300  6FBA               	movwf	moteHandler@buttonPress& (0+255),b
  6175                           
  6176                           ; BSR set to: 0
  6177                           ;MOTEapp.c: 242: if (buttonPress == ShortPress1)
  6178  002302  05BA               	decf	moteHandler@buttonPress& (0+255),w,b
  6179  002304  A4D8               	btfss	status,2,c
  6180  002306  D005               	goto	l383
  6181                           
  6182                           ; BSR set to: 0
  6183                           ;MOTEapp.c: 243: {
  6184                           ;MOTEapp.c: 244: secTicker = 0;
  6185  002308  0E00               	movlw	0
  6186  00230A  6FEF               	movwf	_secTicker& (0+255),b
  6187                           
  6188                           ;MOTEapp.c: 245: gotoNextState = 1;
  6189  00230C  0E01               	movlw	1
  6190  00230E  6FB8               	movwf	moteHandler@gotoNextState& (0+255),b
  6191                           
  6192                           ;MOTEapp.c: 246: }
  6193  002310  D008               	goto	l385
  6194  002312                     l383:
  6195                           
  6196                           ; BSR set to: 0
  6197                           ;MOTEapp.c: 247: else if (buttonPress == ShortPress2)
  6198                           
  6199                           ; BSR set to: 0
  6200  002312  0E02               	movlw	2
  6201  002314  19BA               	xorwf	moteHandler@buttonPress& (0+255),w,b
  6202  002316  A4D8               	btfss	status,2,c
  6203  002318  D004               	goto	l385
  6204                           
  6205                           ; BSR set to: 0
  6206                           ;MOTEapp.c: 248: {
  6207                           ;MOTEapp.c: 249: secTicker = 0;
  6208  00231A  0E00               	movlw	0
  6209  00231C  6FEF               	movwf	_secTicker& (0+255),b
  6210                           
  6211                           ;MOTEapp.c: 250: s2Button = 1;
  6212  00231E  0E01               	movlw	1
  6213  002320  6FB9               	movwf	moteHandler@s2Button& (0+255),b
  6214  002322                     l385:
  6215                           
  6216                           ; BSR set to: 0
  6217                           ;MOTEapp.c: 251: }
  6218                           ;MOTEapp.c: 254: if ( MOTEapp_getModuleResponse() )
  6219                           
  6220                           ; BSR set to: 0
  6221                           
  6222                           ; BSR set to: 0
  6223  002322  EC98  F02A         	call	_MOTEapp_getModuleResponse	;wreg free
  6224  002326  0900               	iorlw	0
  6225  002328  B4D8               	btfsc	status,2,c
  6226  00232A  D002               	goto	l386
  6227                           
  6228                           ;MOTEapp.c: 255: readMessage = 1;
  6229  00232C  0E01               	movlw	1
  6230  00232E  D001               	goto	L1
  6231  002330                     l386:
  6232                           
  6233                           ;MOTEapp.c: 256: else
  6234                           ;MOTEapp.c: 257: readMessage = 0;
  6235                           
  6236                           ; BSR set to: 0
  6237  002330  0E00               	movlw	0
  6238  002332                     L1:
  6239  002332  0100               	movlb	0	; () banked
  6240  002334  6FBB               	movwf	moteHandler@readMessage& (0+255),b
  6241                           
  6242                           ; BSR set to: 0
  6243                           ;MOTEapp.c: 260: if (runningState == runningSensorMenu)
  6244                           
  6245                           ; BSR set to: 0
  6246  002336  0E02               	movlw	2
  6247  002338  19F3               	xorwf	_runningState& (0+255),w,b
  6248  00233A  A4D8               	btfss	status,2,c
  6249  00233C  D04B               	goto	l389
  6250                           
  6251                           ; BSR set to: 0
  6252                           ;MOTEapp.c: 261: {
  6253                           ;MOTEapp.c: 263: if (m10SecTicker >= 100)
  6254  00233E  0101               	movlb	1	; () banked
  6255  002340  5159               	movf	(_m10SecTicker+1)& (0+255),w,b
  6256  002342  E104               	bnz	u10610
  6257  002344  0E64               	movlw	100
  6258  002346  5D58               	subwf	_m10SecTicker& (0+255),w,b
  6259  002348  A0D8               	btfss	status,0,c
  6260  00234A  D044               	goto	l389
  6261  00234C                     u10610:
  6262                           
  6263                           ; BSR set to: 1
  6264                           ;MOTEapp.c: 264: {
  6265                           ;MOTEapp.c: 265: __nop();
  6266  00234C  F000               	nop	
  6267                           
  6268                           ;MOTEapp.c: 266: oled_putString("    ", 6, 1);
  6269  00234E  0EC8               	movlw	low (STR_40+12)
  6270  002350  0100               	movlb	0	; () banked
  6271  002352  6F72               	movwf	oled_putString@string& (0+255),b
  6272  002354  0E7A               	movlw	high (STR_40+12)
  6273  002356  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6274  002358  5172               	movf	oled_putString@string& (0+255),w,b
  6275  00235A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6276  00235C  A4D8               	btfss	status,2,c
  6277  00235E  0E00               	movlw	low (__mediumconst shr (0+16))
  6278  002360  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6279  002362  0E06               	movlw	6
  6280  002364  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6281  002366  0E01               	movlw	1
  6282  002368  6F76               	movwf	oled_putString@start_page& (0+255),b
  6283  00236A  EC14  F029         	call	_oled_putString	;wreg free
  6284                           
  6285                           ;MOTEapp.c: 267: oled_putString(moteApp_getLightValue(), 6, 1);
  6286  00236E  EC34  F02C         	call	_moteApp_getLightValue	;wreg free
  6287  002372  0100               	movlb	0	; () banked
  6288  002374  C06E  F072         	movff	?_moteApp_getLightValue,oled_putString@string
  6289  002378  C06F  F073         	movff	?_moteApp_getLightValue+1,oled_putString@string+1
  6290  00237C  5172               	movf	oled_putString@string& (0+255),w,b
  6291  00237E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6292  002380  A4D8               	btfss	status,2,c
  6293  002382  0E20               	movlw	32
  6294  002384  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6295  002386  0E06               	movlw	6
  6296  002388  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6297  00238A  0E01               	movlw	1
  6298  00238C  6F76               	movwf	oled_putString@start_page& (0+255),b
  6299  00238E  EC14  F029         	call	_oled_putString	;wreg free
  6300                           
  6301                           ;MOTEapp.c: 268: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  6302  002392  EC31  F02D         	call	_moteApp_getTempValue	;wreg free
  6303  002396  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  6304  00239A  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  6305  00239E  EC99  F028         	call	_moteApp_convertSensorValue	;wreg free
  6306  0023A2  C072  F0DA         	movff	?_moteApp_convertSensorValue,_temperature
  6307  0023A6  C073  F0DB         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  6308                           
  6309                           ;MOTEapp.c: 269: temperature = ADC_TempConversion(temperature);
  6310  0023AA  0100               	movlb	0	; () banked
  6311  0023AC  51DA               	movf	_temperature& (0+255),w,b
  6312  0023AE  EC3B  F01C         	call	_ADC_TempConversion
  6313  0023B2  0100               	movlb	0	; () banked
  6314  0023B4  6FB6               	movwf	??_moteHandler& (0+255),b
  6315  0023B6  51B6               	movf	??_moteHandler& (0+255),w,b
  6316  0023B8  6FDA               	movwf	_temperature& (0+255),b
  6317  0023BA  6BDB               	clrf	(_temperature+1)& (0+255),b
  6318                           
  6319                           ; BSR set to: 0
  6320                           ;MOTEapp.c: 270: oled_putint8(temperature, 6, 2);
  6321  0023BC  0E06               	movlw	6
  6322  0023BE  6F78               	movwf	oled_putint8@station_dot& (0+255),b
  6323  0023C0  0E02               	movlw	2
  6324  0023C2  6F79               	movwf	oled_putint8@start_page& (0+255),b
  6325  0023C4  51DA               	movf	_temperature& (0+255),w,b
  6326  0023C6  ECF0  F023         	call	_oled_putint8
  6327                           
  6328                           ;MOTEapp.c: 271: m10SecTicker = 0;
  6329  0023CA  0E00               	movlw	0
  6330  0023CC  0101               	movlb	1	; () banked
  6331  0023CE  6F59               	movwf	(_m10SecTicker+1)& (0+255),b
  6332  0023D0  0E00               	movlw	0
  6333  0023D2  6F58               	movwf	_m10SecTicker& (0+255),b
  6334  0023D4                     l389:
  6335                           
  6336                           ;MOTEapp.c: 272: }
  6337                           ;MOTEapp.c: 273: }
  6338                           ;MOTEapp.c: 275: if(secTicker)
  6339                           
  6340                           ; BSR set to: 1
  6341                           
  6342                           ; BSR set to: 1
  6343  0023D4  0100               	movlb	0	; () banked
  6344  0023D6  51EF               	movf	_secTicker& (0+255),w,b
  6345  0023D8  B4D8               	btfsc	status,2,c
  6346  0023DA  D08F               	goto	l392
  6347                           
  6348                           ; BSR set to: 0
  6349                           ;MOTEapp.c: 276: {
  6350                           ;MOTEapp.c: 277: if ((secTicker >= 10) && (menuTimeout))
  6351  0023DC  0E09               	movlw	9
  6352  0023DE  65EF               	cpfsgt	_secTicker& (0+255),b
  6353  0023E0  D08C               	goto	l392
  6354                           
  6355                           ; BSR set to: 0
  6356  0023E2  51FB               	movf	_menuTimeout& (0+255),w,b
  6357  0023E4  B4D8               	btfsc	status,2,c
  6358  0023E6  D089               	goto	l392
  6359                           
  6360                           ; BSR set to: 0
  6361                           ;MOTEapp.c: 278: {
  6362                           ;MOTEapp.c: 279: gotoSleep = 1;
  6363  0023E8  0E01               	movlw	1
  6364  0023EA  6FB7               	movwf	moteHandler@gotoSleep& (0+255),b
  6365                           
  6366                           ;MOTEapp.c: 280: secTicker = 0;
  6367  0023EC  0E00               	movlw	0
  6368  0023EE  6FEF               	movwf	_secTicker& (0+255),b
  6369                           
  6370                           ; BSR set to: 0
  6371                           ;MOTEapp.c: 281: }
  6372                           ;MOTEapp.c: 282: }
  6373                           ;MOTEapp.c: 284: switch(moteState)
  6374                           
  6375                           ; BSR set to: 0
  6376  0023F0  D084               	goto	l392
  6377  0023F2                     
  6378                           ; BSR set to: 0
  6379                           ;MOTEapp.c: 287: while(1);
  6380  0023F2  D7FF               	goto	l393
  6381  0023F4                     
  6382                           ;MOTEapp.c: 290: oled_clear();
  6383  0023F4  EC7E  F030         	call	_oled_clear	;wreg free
  6384                           
  6385                           ;MOTEapp.c: 291: oled_putString("MOTE Mode",1,0);
  6386  0023F8  0EDF               	movlw	low STR_24
  6387  0023FA  0100               	movlb	0	; () banked
  6388  0023FC  6F72               	movwf	oled_putString@string& (0+255),b
  6389  0023FE  0E7E               	movlw	high STR_24
  6390  002400  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6391  002402  5172               	movf	oled_putString@string& (0+255),w,b
  6392  002404  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6393  002406  A4D8               	btfss	status,2,c
  6394  002408  0E00               	movlw	low (__mediumconst shr (0+16))
  6395  00240A  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6396  00240C  0E01               	movlw	1
  6397  00240E  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6398  002410  0E00               	movlw	0
  6399  002412  6F76               	movwf	oled_putString@start_page& (0+255),b
  6400  002414  EC14  F029         	call	_oled_putString	;wreg free
  6401                           
  6402                           ;MOTEapp.c: 292: oled_putString("Starting",2,1);
  6403  002418  0E35               	movlw	low STR_25
  6404  00241A  0100               	movlb	0	; () banked
  6405  00241C  6F72               	movwf	oled_putString@string& (0+255),b
  6406  00241E  0E7F               	movlw	high STR_25
  6407  002420  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6408  002422  5172               	movf	oled_putString@string& (0+255),w,b
  6409  002424  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6410  002426  A4D8               	btfss	status,2,c
  6411  002428  0E00               	movlw	low (__mediumconst shr (0+16))
  6412  00242A  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6413  00242C  0E02               	movlw	2
  6414  00242E  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6415  002430  0E01               	movlw	1
  6416  002432  6F76               	movwf	oled_putString@start_page& (0+255),b
  6417  002434  EC14  F029         	call	_oled_putString	;wreg free
  6418                           
  6419                           ;MOTEapp.c: 293: oled_putString("ReRun PwrTst<S2>",0,3);
  6420  002438  0EAA               	movlw	low STR_26
  6421  00243A  0100               	movlb	0	; () banked
  6422  00243C  6F72               	movwf	oled_putString@string& (0+255),b
  6423  00243E  0E7B               	movlw	high STR_26
  6424  002440  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6425  002442  5172               	movf	oled_putString@string& (0+255),w,b
  6426  002444  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6427  002446  A4D8               	btfss	status,2,c
  6428  002448  0E00               	movlw	low (__mediumconst shr (0+16))
  6429  00244A  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6430  00244C  0E00               	movlw	0
  6431  00244E  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6432  002450  0E03               	movlw	3
  6433  002452  6F76               	movwf	oled_putString@start_page& (0+255),b
  6434  002454  EC14  F029         	call	_oled_putString	;wreg free
  6435                           
  6436                           ;MOTEapp.c: 294: activeState = moteStartup;
  6437  002458  0E00               	movlw	0
  6438  00245A  0100               	movlb	0	; () banked
  6439  00245C  6FF4               	movwf	_activeState& (0+255),b
  6440                           
  6441                           ; BSR set to: 0
  6442                           ;MOTEapp.c: 295: moteState = MOTE_JOINING;
  6443  00245E  0E02               	movlw	2
  6444  002460  D040               	goto	L2
  6445  002462                     
  6446                           ; BSR set to: 0
  6447                           ;MOTEapp.c: 298: if ( moteJoiningProcess(readMessage, gotoNextState, s2Button) )
  6448                           
  6449                           ; BSR set to: 0
  6450  002462  C0B8  F078         	movff	moteHandler@gotoNextState,moteJoiningProcess@changeStates
  6451  002466  C0B9  F079         	movff	moteHandler@s2Button,moteJoiningProcess@selectButton
  6452  00246A  51BB               	movf	moteHandler@readMessage& (0+255),w,b
  6453  00246C  ECC7  F009         	call	_moteJoiningProcess
  6454  002470  0900               	iorlw	0
  6455  002472  B4D8               	btfsc	status,2,c
  6456  002474  D050               	goto	l397
  6457                           
  6458                           ;MOTEapp.c: 299: {
  6459                           ;MOTEapp.c: 300: oled_clear();
  6460  002476  EC7E  F030         	call	_oled_clear	;wreg free
  6461                           
  6462                           ;MOTEapp.c: 301: oled_putString("Mobile Mote -App",0,0);
  6463  00247A  0EFF               	movlw	low STR_27
  6464  00247C  0100               	movlb	0	; () banked
  6465  00247E  6F72               	movwf	oled_putString@string& (0+255),b
  6466  002480  0E7B               	movlw	high STR_27
  6467  002482  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6468  002484  5172               	movf	oled_putString@string& (0+255),w,b
  6469  002486  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6470  002488  A4D8               	btfss	status,2,c
  6471  00248A  0E00               	movlw	low (__mediumconst shr (0+16))
  6472  00248C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6473  00248E  0E00               	movlw	0
  6474  002490  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6475  002492  0E00               	movlw	0
  6476  002494  6F76               	movwf	oled_putString@start_page& (0+255),b
  6477  002496  EC14  F029         	call	_oled_putString	;wreg free
  6478                           
  6479                           ;MOTEapp.c: 302: oled_putString("Navigate  Select", 0,2);
  6480  00249A  0E10               	movlw	low STR_28
  6481  00249C  0100               	movlb	0	; () banked
  6482  00249E  6F72               	movwf	oled_putString@string& (0+255),b
  6483  0024A0  0E7C               	movlw	high STR_28
  6484  0024A2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6485  0024A4  5172               	movf	oled_putString@string& (0+255),w,b
  6486  0024A6  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6487  0024A8  A4D8               	btfss	status,2,c
  6488  0024AA  0E00               	movlw	low (__mediumconst shr (0+16))
  6489  0024AC  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6490  0024AE  0E00               	movlw	0
  6491  0024B0  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6492  0024B2  0E02               	movlw	2
  6493  0024B4  6F76               	movwf	oled_putString@start_page& (0+255),b
  6494  0024B6  EC14  F029         	call	_oled_putString	;wreg free
  6495                           
  6496                           ;MOTEapp.c: 303: oled_putString(" (S2)      (S3) ", 0,3);
  6497  0024BA  0E33               	movlw	low STR_29
  6498  0024BC  0100               	movlb	0	; () banked
  6499  0024BE  6F72               	movwf	oled_putString@string& (0+255),b
  6500  0024C0  0E7B               	movlw	high STR_29
  6501  0024C2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6502  0024C4  5172               	movf	oled_putString@string& (0+255),w,b
  6503  0024C6  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6504  0024C8  A4D8               	btfss	status,2,c
  6505  0024CA  0E00               	movlw	low (__mediumconst shr (0+16))
  6506  0024CC  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6507  0024CE  0E00               	movlw	0
  6508  0024D0  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6509  0024D2  0E03               	movlw	3
  6510  0024D4  6F76               	movwf	oled_putString@start_page& (0+255),b
  6511  0024D6  EC14  F029         	call	_oled_putString	;wreg free
  6512                           
  6513                           ;MOTEapp.c: 304: runningState = runningEnter;
  6514  0024DA  0E00               	movlw	0
  6515  0024DC  0100               	movlb	0	; () banked
  6516  0024DE  6FF3               	movwf	_runningState& (0+255),b
  6517                           
  6518                           ; BSR set to: 0
  6519                           ;MOTEapp.c: 305: moteState = MOTE_RUNNING;
  6520  0024E0  0E03               	movlw	3
  6521  0024E2                     L2:
  6522  0024E2  6FFF               	movwf	_moteState& (0+255),b
  6523                           
  6524                           ; BSR set to: 0
  6525                           ;MOTEapp.c: 306: }
  6526                           ;MOTEapp.c: 307: break;
  6527  0024E4  D018               	goto	l397
  6528  0024E6                     
  6529                           ; BSR set to: 0
  6530                           ;MOTEapp.c: 309: moteRunningProcess(gotoNextState, s2Button, readMessage, gotoSleep);
  6531                           
  6532                           ; BSR set to: 0
  6533  0024E6  C0B9  F0AC         	movff	moteHandler@s2Button,moteRunningProcess@selectButton
  6534  0024EA  C0BB  F0AD         	movff	moteHandler@readMessage,moteRunningProcess@messageReady
  6535  0024EE  C0B7  F0AE         	movff	moteHandler@gotoSleep,moteRunningProcess@sleepEvent
  6536  0024F2  51B8               	movf	moteHandler@gotoNextState& (0+255),w,b
  6537  0024F4  EC81  F000         	call	_moteRunningProcess
  6538                           
  6539                           ;MOTEapp.c: 314: }
  6540                           
  6541                           ;MOTEapp.c: 313: break;
  6542                           
  6543                           ;MOTEapp.c: 311: case MOTE_SWAP:
  6544                           
  6545                           ;MOTEapp.c: 310: break;
  6546  0024F8  D00E               	goto	l397
  6547  0024FA                     l392:
  6548  0024FA  0100               	movlb	0	; () banked
  6549  0024FC  51FF               	movf	_moteState& (0+255),w,b
  6550                           
  6551                           ; Switch size 1, requested type "space"
  6552                           ; Number of cases is 4, Range of values is 1 to 4
  6553                           ; switch strategies available:
  6554                           ; Name         Instructions Cycles
  6555                           ; simple_byte           13     7 (average)
  6556                           ;	Chosen strategy is simple_byte
  6557  0024FE  0A01               	xorlw	1	; case 1
  6558  002500  B4D8               	btfsc	status,2,c
  6559  002502  D778               	goto	l398
  6560  002504  0A03               	xorlw	3	; case 2
  6561  002506  B4D8               	btfsc	status,2,c
  6562  002508  D7AC               	goto	l399
  6563  00250A  0A01               	xorlw	1	; case 3
  6564  00250C  B4D8               	btfsc	status,2,c
  6565  00250E  D7EB               	goto	l401
  6566  002510  0A07               	xorlw	7	; case 4
  6567  002512  A4D8               	btfss	status,2,c
  6568  002514  D76E               	goto	l393
  6569  002516                     l397:
  6570                           
  6571                           ;MOTEapp.c: 315: return moteState;
  6572                           
  6573                           ; BSR set to: 0
  6574  002516  0100               	movlb	0	; () banked
  6575  002518  51FF               	movf	_moteState& (0+255),w,b
  6576  00251A  0012               	return	
  6577  00251C                     __end_of_moteHandler:
  6578                           	opt stack 0
  6579                           tblptru	equ	0xFF8
  6580                           tblptrh	equ	0xFF7
  6581                           tblptrl	equ	0xFF6
  6582                           tablat	equ	0xFF5
  6583                           intcon	equ	0xFF2
  6584                           postinc0	equ	0xFEE
  6585                           wreg	equ	0xFE8
  6586                           postdec1	equ	0xFE5
  6587                           fsr1l	equ	0xFE1
  6588                           status	equ	0xFD8
  6589                           
  6590 ;; *************** function _moteRunningProcess *****************
  6591 ;; Defined at:
  6592 ;;		line 514 in file "../Includes/Board/MOTEapp.c"
  6593 ;; Parameters:    Size  Location     Type
  6594 ;;  changeStates    1    wreg     unsigned char 
  6595 ;;  selectButton    1   76[BANK0 ] unsigned char 
  6596 ;;  messageReady    1   77[BANK0 ] unsigned char 
  6597 ;;  sleepEvent      1   78[BANK0 ] unsigned char 
  6598 ;; Auto vars:     Size  Location     Type
  6599 ;;  changeStates    1   85[BANK0 ] unsigned char 
  6600 ;;  counter         1   83[BANK0 ] unsigned char 
  6601 ;;  bufferReadPo    1   84[BANK0 ] unsigned char 
  6602 ;;  sizeOfUpdate    1   82[BANK0 ] unsigned char 
  6603 ;;  sizeOfUpdate    1   81[BANK0 ] unsigned char 
  6604 ;;  readByte        1   80[BANK0 ] unsigned char 
  6605 ;; Return value:  Size  Location     Type
  6606 ;;                  1    wreg      enum E6181
  6607 ;; Registers used:
  6608 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6609 ;; Tracked objects:
  6610 ;;		On entry : 0/0
  6611 ;;		On exit  : 0/0
  6612 ;;		Unchanged: 0/0
  6613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6614 ;;      Params:         0       3       0       0       0       0       0       0       0
  6615 ;;      Locals:         0       6       0       0       0       0       0       0       0
  6616 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6617 ;;      Totals:         0      10       0       0       0       0       0       0       0
  6618 ;;Total ram usage:       10 bytes
  6619 ;; Hardware stack levels used:    1
  6620 ;; Hardware stack levels required when called:   18
  6621 ;; This function calls:
  6622 ;;		_ADC_TempConversion
  6623 ;;		_MOTEapp_SetDataRateSetting
  6624 ;;		_TMR2_ReadTimer
  6625 ;;		_moteApp_GoToSleep
  6626 ;;		_moteApp_add8bToDataBuffer
  6627 ;;		_moteApp_addToDataBuffer
  6628 ;;		_moteApp_clearBuffers
  6629 ;;		_moteApp_convertSensorValue
  6630 ;;		_moteApp_delayms
  6631 ;;		_moteApp_getLightString
  6632 ;;		_moteApp_getLightValue
  6633 ;;		_moteApp_getTempValue
  6634 ;;		_moteApp_lightStringSize
  6635 ;;		_moteApp_setSensorsInput
  6636 ;;		_oled_clear
  6637 ;;		_oled_putString
  6638 ;;		_oled_putUint8
  6639 ;;		_oled_putint8
  6640 ;;		_sendDataCommand
  6641 ;;		_strcmp
  6642 ;;		_strncmp
  6643 ;; This function is called by:
  6644 ;;		_moteHandler
  6645 ;; This function uses a non-reentrant model
  6646 ;;
  6647                           
  6648                           	psect	text10
  6649  000102                     __ptext10:
  6650                           	opt stack 0
  6651  000102                     _moteRunningProcess:
  6652                           	opt stack 11
  6653                           
  6654                           ; BSR set to: 0
  6655                           ;incstack = 0
  6656                           ;moteRunningProcess@changeStates stored from wreg
  6657  000102  0100               	movlb	0	; () banked
  6658  000104  6FB5               	movwf	moteRunningProcess@changeStates& (0+255),b
  6659                           
  6660                           ;MOTEapp.c: 516: uint8_t readByte = 0;
  6661  000106  0E00               	movlw	0
  6662  000108  0100               	movlb	0	; () banked
  6663  00010A  6FB0               	movwf	moteRunningProcess@readByte& (0+255),b
  6664                           
  6665                           ; BSR set to: 0
  6666                           ;MOTEapp.c: 518: if ((sleepEvent) && (periodicState))
  6667  00010C  51AE               	movf	moteRunningProcess@sleepEvent& (0+255),w,b
  6668  00010E  B4D8               	btfsc	status,2,c
  6669  000110  EF99  F009         	goto	l482
  6670                           
  6671                           ; BSR set to: 0
  6672  000114  51FA               	movf	_periodicState& (0+255),w,b
  6673  000116  B4D8               	btfsc	status,2,c
  6674  000118  EF99  F009         	goto	l482
  6675                           
  6676                           ; BSR set to: 0
  6677                           ;MOTEapp.c: 519: {
  6678                           ;MOTEapp.c: 520: if (sleepTicker >= periodicTimerValue)
  6679  00011C  51FD               	movf	_periodicTimerValue& (0+255),w,b
  6680  00011E  5DEE               	subwf	_sleepTicker& (0+255),w,b
  6681  000120  A0D8               	btfss	status,0,c
  6682  000122  D0DD               	goto	l475
  6683                           
  6684                           ; BSR set to: 0
  6685                           ;MOTEapp.c: 521: {
  6686                           ;MOTEapp.c: 523: moteApp_clearBuffers();
  6687  000124  EC80  F026         	call	_moteApp_clearBuffers	;wreg free
  6688                           
  6689                           ;MOTEapp.c: 526: light = 0;
  6690  000128  0E00               	movlw	0
  6691  00012A  0101               	movlb	1	; () banked
  6692  00012C  6F5B               	movwf	(_light+1)& (0+255),b
  6693  00012E  0E00               	movlw	0
  6694  000130  6F5A               	movwf	_light& (0+255),b
  6695                           
  6696                           ; BSR set to: 1
  6697                           ;MOTEapp.c: 527: temperature = 0;
  6698  000132  0E00               	movlw	0
  6699  000134  0100               	movlb	0	; () banked
  6700  000136  6FDB               	movwf	(_temperature+1)& (0+255),b
  6701  000138  0E00               	movlw	0
  6702  00013A  6FDA               	movwf	_temperature& (0+255),b
  6703                           
  6704                           ; BSR set to: 0
  6705                           ;MOTEapp.c: 528: __nop();
  6706  00013C  F000               	nop	
  6707                           
  6708                           ;MOTEapp.c: 530: moteApp_setSensorsInput();
  6709  00013E  ECD8  F028         	call	_moteApp_setSensorsInput	;wreg free
  6710                           
  6711                           ;MOTEapp.c: 531: uint8_t sizeOfUpdate = 0;
  6712  000142  0E00               	movlw	0
  6713  000144  0100               	movlb	0	; () banked
  6714  000146  6FB1               	movwf	moteRunningProcess@sizeOfUpdate& (0+255),b
  6715                           
  6716                           ; BSR set to: 0
  6717                           ;MOTEapp.c: 532: light = moteApp_convertSensorValue(moteApp_getLightValue());
  6718  000148  EC34  F02C         	call	_moteApp_getLightValue	;wreg free
  6719  00014C  C06E  F072         	movff	?_moteApp_getLightValue,moteApp_convertSensorValue@string
  6720  000150  C06F  F073         	movff	?_moteApp_getLightValue+1,moteApp_convertSensorValue@string+1
  6721  000154  EC99  F028         	call	_moteApp_convertSensorValue	;wreg free
  6722  000158  C072  F15A         	movff	?_moteApp_convertSensorValue,_light
  6723  00015C  C073  F15B         	movff	?_moteApp_convertSensorValue+1,_light+1
  6724                           
  6725                           ;MOTEapp.c: 533: oled_putString(moteApp_getLightString(), 6, 1);
  6726  000160  EC25  F031         	call	_moteApp_getLightString	;wreg free
  6727  000164  0100               	movlb	0	; () banked
  6728  000166  C060  F072         	movff	?_moteApp_getLightString,oled_putString@string
  6729  00016A  C061  F073         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  6730  00016E  5172               	movf	oled_putString@string& (0+255),w,b
  6731  000170  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6732  000172  A4D8               	btfss	status,2,c
  6733  000174  0E20               	movlw	32
  6734  000176  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6735  000178  0E06               	movlw	6
  6736  00017A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6737  00017C  0E01               	movlw	1
  6738  00017E  6F76               	movwf	oled_putString@start_page& (0+255),b
  6739  000180  EC14  F029         	call	_oled_putString	;wreg free
  6740                           
  6741                           ;MOTEapp.c: 534: sizeOfUpdate = moteApp_addToDataBuffer(moteApp_getLightString(), 4);
  6742  000184  EC25  F031         	call	_moteApp_getLightString	;wreg free
  6743  000188  C060  F072         	movff	?_moteApp_getLightString,moteApp_addToDataBuffer@string
  6744  00018C  C061  F073         	movff	?_moteApp_getLightString+1,moteApp_addToDataBuffer@string+1
  6745  000190  0E04               	movlw	4
  6746  000192  0100               	movlb	0	; () banked
  6747  000194  6F74               	movwf	moteApp_addToDataBuffer@bufferLocation& (0+255),b
  6748  000196  ECFE  F02A         	call	_moteApp_addToDataBuffer	;wreg free
  6749  00019A  0100               	movlb	0	; () banked
  6750  00019C  6FB1               	movwf	moteRunningProcess@sizeOfUpdate& (0+255),b
  6751                           
  6752                           ; BSR set to: 0
  6753                           ;MOTEapp.c: 536: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  6754  00019E  EC31  F02D         	call	_moteApp_getTempValue	;wreg free
  6755  0001A2  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  6756  0001A6  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  6757  0001AA  EC99  F028         	call	_moteApp_convertSensorValue	;wreg free
  6758  0001AE  C072  F0DA         	movff	?_moteApp_convertSensorValue,_temperature
  6759  0001B2  C073  F0DB         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  6760                           
  6761                           ;MOTEapp.c: 537: temperature = ADC_TempConversion(temperature);
  6762  0001B6  0100               	movlb	0	; () banked
  6763  0001B8  51DA               	movf	_temperature& (0+255),w,b
  6764  0001BA  EC3B  F01C         	call	_ADC_TempConversion
  6765  0001BE  0100               	movlb	0	; () banked
  6766  0001C0  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  6767  0001C2  51AF               	movf	??_moteRunningProcess& (0+255),w,b
  6768  0001C4  6FDA               	movwf	_temperature& (0+255),b
  6769  0001C6  6BDB               	clrf	(_temperature+1)& (0+255),b
  6770                           
  6771                           ; BSR set to: 0
  6772                           ;MOTEapp.c: 538: moteApp_add8bToDataBuffer(temperature, 4 + moteApp_lightStringSize() + 
      +                          1);
  6773  0001C8  EC6D  F031         	call	_moteApp_lightStringSize	;wreg free
  6774  0001CC  0F05               	addlw	5
  6775  0001CE  0100               	movlb	0	; () banked
  6776  0001D0  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6777  0001D2  51DA               	movf	_temperature& (0+255),w,b
  6778  0001D4  EC95  F023         	call	_moteApp_add8bToDataBuffer
  6779                           
  6780                           ;MOTEapp.c: 541: sleepTicker = 0;
  6781  0001D8  0E00               	movlw	0
  6782  0001DA  0100               	movlb	0	; () banked
  6783  0001DC  6FEE               	movwf	_sleepTicker& (0+255),b
  6784                           
  6785                           ; BSR set to: 0
  6786                           ;MOTEapp.c: 542: oled_clear();
  6787  0001DE  EC7E  F030         	call	_oled_clear	;wreg free
  6788                           
  6789                           ;MOTEapp.c: 543: oled_putString("Send Periodic Tx",0,0);
  6790  0001E2  0E32               	movlw	low STR_71
  6791  0001E4  0100               	movlb	0	; () banked
  6792  0001E6  6F72               	movwf	oled_putString@string& (0+255),b
  6793  0001E8  0E7C               	movlw	high STR_71
  6794  0001EA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6795  0001EC  5172               	movf	oled_putString@string& (0+255),w,b
  6796  0001EE  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6797  0001F0  A4D8               	btfss	status,2,c
  6798  0001F2  0E00               	movlw	low (__mediumconst shr (0+16))
  6799  0001F4  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6800  0001F6  0E00               	movlw	0
  6801  0001F8  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6802  0001FA  0E00               	movlw	0
  6803  0001FC  6F76               	movwf	oled_putString@start_page& (0+255),b
  6804  0001FE  EC14  F029         	call	_oled_putString	;wreg free
  6805                           
  6806                           ;MOTEapp.c: 544: oled_putString("On Port #: ",0,1);
  6807  000202  0E35               	movlw	low STR_72
  6808  000204  0100               	movlb	0	; () banked
  6809  000206  6F72               	movwf	oled_putString@string& (0+255),b
  6810  000208  0E7E               	movlw	high STR_72
  6811  00020A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6812  00020C  5172               	movf	oled_putString@string& (0+255),w,b
  6813  00020E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6814  000210  A4D8               	btfss	status,2,c
  6815  000212  0E00               	movlw	low (__mediumconst shr (0+16))
  6816  000214  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6817  000216  0E00               	movlw	0
  6818  000218  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6819  00021A  0E01               	movlw	1
  6820  00021C  6F76               	movwf	oled_putString@start_page& (0+255),b
  6821  00021E  EC14  F029         	call	_oled_putString	;wreg free
  6822                           
  6823                           ;MOTEapp.c: 545: oled_putString("L:       T: ",0,2);
  6824  000222  0E73               	movlw	low STR_73
  6825  000224  0100               	movlb	0	; () banked
  6826  000226  6F72               	movwf	oled_putString@string& (0+255),b
  6827  000228  0E7D               	movlw	high STR_73
  6828  00022A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6829  00022C  5172               	movf	oled_putString@string& (0+255),w,b
  6830  00022E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6831  000230  A4D8               	btfss	status,2,c
  6832  000232  0E00               	movlw	low (__mediumconst shr (0+16))
  6833  000234  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6834  000236  0E00               	movlw	0
  6835  000238  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6836  00023A  0E02               	movlw	2
  6837  00023C  6F76               	movwf	oled_putString@start_page& (0+255),b
  6838  00023E  EC14  F029         	call	_oled_putString	;wreg free
  6839                           
  6840                           ;MOTEapp.c: 546: oled_putString(moteApp_getLightString(), 3, 2);
  6841  000242  EC25  F031         	call	_moteApp_getLightString	;wreg free
  6842  000246  0100               	movlb	0	; () banked
  6843  000248  C060  F072         	movff	?_moteApp_getLightString,oled_putString@string
  6844  00024C  C061  F073         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  6845  000250  5172               	movf	oled_putString@string& (0+255),w,b
  6846  000252  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6847  000254  A4D8               	btfss	status,2,c
  6848  000256  0E20               	movlw	32
  6849  000258  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6850  00025A  0E03               	movlw	3
  6851  00025C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6852  00025E  0E02               	movlw	2
  6853  000260  6F76               	movwf	oled_putString@start_page& (0+255),b
  6854  000262  EC14  F029         	call	_oled_putString	;wreg free
  6855                           
  6856                           ;MOTEapp.c: 547: oled_putint8(temperature,11,2);
  6857  000266  0E0B               	movlw	11
  6858  000268  0100               	movlb	0	; () banked
  6859  00026A  6F78               	movwf	oled_putint8@station_dot& (0+255),b
  6860  00026C  0E02               	movlw	2
  6861  00026E  6F79               	movwf	oled_putint8@start_page& (0+255),b
  6862  000270  51DA               	movf	_temperature& (0+255),w,b
  6863  000272  ECF0  F023         	call	_oled_putint8
  6864                           
  6865                           ;MOTEapp.c: 549: randomPortNum = TMR2_ReadTimer();
  6866  000276  EC37  F031         	call	_TMR2_ReadTimer	;wreg free
  6867  00027A  0100               	movlb	0	; () banked
  6868  00027C  6FF0               	movwf	_randomPortNum& (0+255),b
  6869                           
  6870                           ; BSR set to: 0
  6871                           ;MOTEapp.c: 551: if (!randomPortNum)
  6872  00027E  51F0               	movf	_randomPortNum& (0+255),w,b
  6873  000280  A4D8               	btfss	status,2,c
  6874  000282  D002               	goto	l476
  6875                           
  6876                           ; BSR set to: 0
  6877                           ;MOTEapp.c: 552: randomPortNum = 5;
  6878  000284  0E05               	movlw	5
  6879  000286  D005               	goto	L3
  6880  000288                     l476:
  6881                           
  6882                           ; BSR set to: 0
  6883                           ;MOTEapp.c: 553: else if (randomPortNum > 223)
  6884                           
  6885                           ; BSR set to: 0
  6886  000288  0EDF               	movlw	223
  6887  00028A  65F0               	cpfsgt	_randomPortNum& (0+255),b
  6888  00028C  D003               	goto	l478
  6889                           
  6890                           ; BSR set to: 0
  6891                           ;MOTEapp.c: 554: randomPortNum = randomPortNum - 50;
  6892  00028E  51F0               	movf	_randomPortNum& (0+255),w,b
  6893  000290  0FCE               	addlw	206
  6894  000292                     L3:
  6895  000292  6FF0               	movwf	_randomPortNum& (0+255),b
  6896  000294                     l478:
  6897                           
  6898                           ; BSR set to: 0
  6899                           ;MOTEapp.c: 556: oled_putUint8(randomPortNum,10,1);
  6900                           
  6901                           ; BSR set to: 0
  6902                           
  6903                           ; BSR set to: 0
  6904  000294  0E0A               	movlw	10
  6905  000296  6F78               	movwf	oled_putUint8@station_dot& (0+255),b
  6906  000298  0E01               	movlw	1
  6907  00029A  6F79               	movwf	oled_putUint8@start_page& (0+255),b
  6908  00029C  51F0               	movf	_randomPortNum& (0+255),w,b
  6909  00029E  ECEC  F025         	call	_oled_putUint8
  6910                           
  6911                           ;MOTEapp.c: 558: moteApp_add8bToDataBuffer(randomPortNum, 0);
  6912  0002A2  0E00               	movlw	0
  6913  0002A4  0100               	movlb	0	; () banked
  6914  0002A6  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6915  0002A8  51F0               	movf	_randomPortNum& (0+255),w,b
  6916  0002AA  EC95  F023         	call	_moteApp_add8bToDataBuffer
  6917                           
  6918                           ;MOTEapp.c: 559: dataBuffer[3] = 0x20;
  6919  0002AE  0E20               	movlw	32
  6920  0002B0  0101               	movlb	1	; () banked
  6921  0002B2  6FCA               	movwf	(_dataBuffer+3)& (0+255),b
  6922                           
  6923                           ; BSR set to: 1
  6924                           ;MOTEapp.c: 560: __nop();
  6925  0002B4  F000               	nop	
  6926                           
  6927                           ;MOTEapp.c: 561: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  6928  0002B6  0E2E               	movlw	low STR_74
  6929  0002B8  0100               	movlb	0	; () banked
  6930  0002BA  6F61               	movwf	sendDataCommand@string& (0+255),b
  6931  0002BC  0E7D               	movlw	high STR_74
  6932  0002BE  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  6933  0002C0  0EC7               	movlw	low _dataBuffer
  6934  0002C2  6F63               	movwf	sendDataCommand@appData& (0+255),b
  6935  0002C4  0E01               	movlw	high _dataBuffer
  6936  0002C6  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  6937  0002C8  0E0C               	movlw	12
  6938  0002CA  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  6939  0002CC  ECBB  F021         	call	_sendDataCommand	;wreg free
  6940                           
  6941                           ;MOTEapp.c: 562: secTicker = 10 - (10 / 3);
  6942  0002D0  0E07               	movlw	7
  6943  0002D2  0100               	movlb	0	; () banked
  6944  0002D4  6FEF               	movwf	_secTicker& (0+255),b
  6945                           
  6946                           ; BSR set to: 0
  6947                           ;MOTEapp.c: 563: runningState = runningUplinkTransmit;
  6948  0002D6  0E08               	movlw	8
  6949  0002D8  6FF3               	movwf	_runningState& (0+255),b
  6950                           
  6951                           ;MOTEapp.c: 564: }
  6952  0002DA  EF99  F009         	goto	l482
  6953  0002DE                     l475:
  6954                           
  6955                           ; BSR set to: 0
  6956                           ;MOTEapp.c: 565: else
  6957                           ;MOTEapp.c: 566: {
  6958                           ;MOTEapp.c: 567: if (menuTimeout)
  6959                           
  6960                           ; BSR set to: 0
  6961  0002DE  51FB               	movf	_menuTimeout& (0+255),w,b
  6962  0002E0  B4D8               	btfsc	status,2,c
  6963  0002E2  D007               	goto	l480
  6964                           
  6965                           ; BSR set to: 0
  6966                           ;MOTEapp.c: 568: {
  6967                           ;MOTEapp.c: 569: sleepTicker++;
  6968  0002E4  2BEE               	incf	_sleepTicker& (0+255),f,b
  6969                           
  6970                           ; BSR set to: 0
  6971                           ;MOTEapp.c: 570: runningState = runningSleep;
  6972  0002E6  0E0F               	movlw	15
  6973  0002E8  6FF3               	movwf	_runningState& (0+255),b
  6974                           
  6975                           ; BSR set to: 0
  6976                           ;MOTEapp.c: 571: selectButton = 1;
  6977  0002EA  0E01               	movlw	1
  6978  0002EC  6FAC               	movwf	moteRunningProcess@selectButton& (0+255),b
  6979                           
  6980                           ;MOTEapp.c: 572: } else {
  6981  0002EE  EF99  F009         	goto	l482
  6982  0002F2                     l480:
  6983                           
  6984                           ; BSR set to: 0
  6985                           ;MOTEapp.c: 573: sleepTicker = 0;
  6986                           
  6987                           ; BSR set to: 0
  6988  0002F2  0E00               	movlw	0
  6989  0002F4  6FEE               	movwf	_sleepTicker& (0+255),b
  6990                           
  6991                           ; BSR set to: 0
  6992                           ;MOTEapp.c: 574: }
  6993                           ;MOTEapp.c: 575: }
  6994                           ;MOTEapp.c: 576: }
  6995                           ;MOTEapp.c: 579: switch(runningState)
  6996                           
  6997                           ; BSR set to: 0
  6998                           
  6999                           ; BSR set to: 0
  7000  0002F6  EF99  F009         	goto	l482
  7001  0002FA                     
  7002                           ; BSR set to: 0
  7003                           ;MOTEapp.c: 582: while(1);
  7004  0002FA  D7FF               	goto	l483
  7005  0002FC                     
  7006                           ;MOTEapp.c: 585: if ( (changeStates) || (selectButton) )
  7007  0002FC  0100               	movlb	0	; () banked
  7008  0002FE  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7009  000300  A4D8               	btfss	status,2,c
  7010  000302  D003               	goto	u9660
  7011                           
  7012                           ; BSR set to: 0
  7013  000304  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7014  000306  B4D8               	btfsc	status,2,c
  7015  000308  0012               	return	
  7016  00030A                     u9660:
  7017                           
  7018                           ; BSR set to: 0
  7019                           ;MOTEapp.c: 586: {
  7020                           ;MOTEapp.c: 587: oled_clear();
  7021                           
  7022                           ; BSR set to: 0
  7023  00030A  EC7E  F030         	call	_oled_clear	;wreg free
  7024                           
  7025                           ;MOTEapp.c: 588: oled_putString("  Issue Uplink  ",0,0);
  7026  00030E  0E22               	movlw	low STR_75
  7027  000310  0100               	movlb	0	; () banked
  7028  000312  6F72               	movwf	oled_putString@string& (0+255),b
  7029  000314  0E7B               	movlw	high STR_75
  7030  000316  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7031  000318  5172               	movf	oled_putString@string& (0+255),w,b
  7032  00031A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7033  00031C  A4D8               	btfss	status,2,c
  7034  00031E  0E00               	movlw	low (__mediumconst shr (0+16))
  7035  000320  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7036  000322  0E00               	movlw	0
  7037  000324  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7038  000326  0E00               	movlw	0
  7039  000328  6F76               	movwf	oled_putString@start_page& (0+255),b
  7040  00032A  EC14  F029         	call	_oled_putString	;wreg free
  7041                           
  7042                           ;MOTEapp.c: 589: oled_putString(" LoRaWAN Packet ",0,1);
  7043  00032E  0E88               	movlw	low STR_76
  7044  000330  0100               	movlb	0	; () banked
  7045  000332  6F72               	movwf	oled_putString@string& (0+255),b
  7046  000334  0E7B               	movlw	high STR_76
  7047  000336  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7048  000338  5172               	movf	oled_putString@string& (0+255),w,b
  7049  00033A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7050  00033C  A4D8               	btfss	status,2,c
  7051  00033E  0E00               	movlw	low (__mediumconst shr (0+16))
  7052  000340  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7053  000342  0E00               	movlw	0
  7054  000344  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7055  000346  0E01               	movlw	1
  7056  000348  6F76               	movwf	oled_putString@start_page& (0+255),b
  7057  00034A  EC14  F029         	call	_oled_putString	;wreg free
  7058                           
  7059                           ;MOTEapp.c: 590: oled_putString("(NAV)    (SEL) ",0,3);
  7060  00034E  0E84               	movlw	low STR_77
  7061  000350  0100               	movlb	0	; () banked
  7062  000352  6F72               	movwf	oled_putString@string& (0+255),b
  7063  000354  0E7C               	movlw	high STR_77
  7064  000356  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7065  000358  5172               	movf	oled_putString@string& (0+255),w,b
  7066  00035A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7067  00035C  A4D8               	btfss	status,2,c
  7068  00035E  0E00               	movlw	low (__mediumconst shr (0+16))
  7069  000360  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7070  000362  0E00               	movlw	0
  7071  000364  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7072  000366  0E03               	movlw	3
  7073  000368  6F76               	movwf	oled_putString@start_page& (0+255),b
  7074  00036A  EC14  F029         	call	_oled_putString	;wreg free
  7075                           
  7076                           ;MOTEapp.c: 591: runningState = runningUplink;
  7077  00036E  0E06               	movlw	6
  7078  000370  0100               	movlb	0	; () banked
  7079  000372  6FF3               	movwf	_runningState& (0+255),b
  7080                           
  7081                           ; BSR set to: 0
  7082                           ;MOTEapp.c: 592: }
  7083                           ;MOTEapp.c: 593: break;
  7084  000374  0012               	return	
  7085  000376                     
  7086                           ; BSR set to: 0
  7087                           ;MOTEapp.c: 595: if (changeStates)
  7088                           
  7089                           ; BSR set to: 0
  7090  000376  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7091  000378  B4D8               	btfsc	status,2,c
  7092  00037A  D036               	goto	l493
  7093                           
  7094                           ; BSR set to: 0
  7095                           ;MOTEapp.c: 596: {
  7096                           ;MOTEapp.c: 597: oled_clear();
  7097  00037C  EC7E  F030         	call	_oled_clear	;wreg free
  7098                           
  7099                           ;MOTEapp.c: 598: oled_putString(" View Downlink  ",0,0);
  7100  000380  0E11               	movlw	low STR_78
  7101  000382  0100               	movlb	0	; () banked
  7102  000384  6F72               	movwf	oled_putString@string& (0+255),b
  7103  000386  0E7B               	movlw	high STR_78
  7104  000388  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7105  00038A  5172               	movf	oled_putString@string& (0+255),w,b
  7106  00038C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7107  00038E  A4D8               	btfss	status,2,c
  7108  000390  0E00               	movlw	low (__mediumconst shr (0+16))
  7109  000392  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7110  000394  0E00               	movlw	0
  7111  000396  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7112  000398  0E00               	movlw	0
  7113  00039A  6F76               	movwf	oled_putString@start_page& (0+255),b
  7114  00039C  EC14  F029         	call	_oled_putString	;wreg free
  7115                           
  7116                           ;MOTEapp.c: 599: oled_putString("  Last Message  ",0,1);
  7117  0003A0  0E00               	movlw	low STR_79
  7118  0003A2  0100               	movlb	0	; () banked
  7119  0003A4  6F72               	movwf	oled_putString@string& (0+255),b
  7120  0003A6  0E7B               	movlw	high STR_79
  7121  0003A8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7122  0003AA  5172               	movf	oled_putString@string& (0+255),w,b
  7123  0003AC  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7124  0003AE  A4D8               	btfss	status,2,c
  7125  0003B0  0E00               	movlw	low (__mediumconst shr (0+16))
  7126  0003B2  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7127  0003B4  0E00               	movlw	0
  7128  0003B6  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7129  0003B8  0E01               	movlw	1
  7130  0003BA  6F76               	movwf	oled_putString@start_page& (0+255),b
  7131  0003BC  EC14  F029         	call	_oled_putString	;wreg free
  7132                           
  7133                           ;MOTEapp.c: 600: oled_putString("(NAV)    (SEL) ",0,3);
  7134  0003C0  0E84               	movlw	low STR_77
  7135  0003C2  0100               	movlb	0	; () banked
  7136  0003C4  6F72               	movwf	oled_putString@string& (0+255),b
  7137  0003C6  0E7C               	movlw	high STR_77
  7138  0003C8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7139  0003CA  5172               	movf	oled_putString@string& (0+255),w,b
  7140  0003CC  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7141  0003CE  A4D8               	btfss	status,2,c
  7142  0003D0  0E00               	movlw	low (__mediumconst shr (0+16))
  7143  0003D2  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7144  0003D4  0E00               	movlw	0
  7145  0003D6  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7146  0003D8  0E03               	movlw	3
  7147  0003DA  6F76               	movwf	oled_putString@start_page& (0+255),b
  7148  0003DC  EC14  F029         	call	_oled_putString	;wreg free
  7149                           
  7150                           ;MOTEapp.c: 601: runningState = runningDownlink;
  7151  0003E0  0E0A               	movlw	10
  7152  0003E2  0100               	movlb	0	; () banked
  7153  0003E4  6FF3               	movwf	_runningState& (0+255),b
  7154                           
  7155                           ;MOTEapp.c: 602: }
  7156  0003E6  0012               	return	
  7157  0003E8                     l493:
  7158                           
  7159                           ; BSR set to: 0
  7160                           ;MOTEapp.c: 603: else if (selectButton)
  7161                           
  7162                           ; BSR set to: 0
  7163  0003E8  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7164  0003EA  B4D8               	btfsc	status,2,c
  7165  0003EC  0012               	return	
  7166                           
  7167                           ; BSR set to: 0
  7168                           ;MOTEapp.c: 604: {
  7169                           ;MOTEapp.c: 605: sleepTicker = 0;
  7170  0003EE  0E00               	movlw	0
  7171  0003F0  6FEE               	movwf	_sleepTicker& (0+255),b
  7172                           
  7173                           ; BSR set to: 0
  7174                           ;MOTEapp.c: 607: oled_clear();
  7175  0003F2  EC7E  F030         	call	_oled_clear	;wreg free
  7176                           
  7177                           ;MOTEapp.c: 608: oled_putString("Uplink Pckt Type",0,0);
  7178  0003F6  0EDD               	movlw	low STR_81
  7179  0003F8  0100               	movlb	0	; () banked
  7180  0003FA  6F72               	movwf	oled_putString@string& (0+255),b
  7181  0003FC  0E7B               	movlw	high STR_81
  7182  0003FE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7183  000400  5172               	movf	oled_putString@string& (0+255),w,b
  7184  000402  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7185  000404  A4D8               	btfss	status,2,c
  7186  000406  0E00               	movlw	low (__mediumconst shr (0+16))
  7187  000408  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7188  00040A  0E00               	movlw	0
  7189  00040C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7190  00040E  0E00               	movlw	0
  7191  000410  6F76               	movwf	oled_putString@start_page& (0+255),b
  7192  000412  EC14  F029         	call	_oled_putString	;wreg free
  7193                           
  7194                           ;MOTEapp.c: 609: oled_putString("Throu Port# ",0,1);
  7195  000416  0E66               	movlw	low STR_82
  7196  000418  0100               	movlb	0	; () banked
  7197  00041A  6F72               	movwf	oled_putString@string& (0+255),b
  7198  00041C  0E7D               	movlw	high STR_82
  7199  00041E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7200  000420  5172               	movf	oled_putString@string& (0+255),w,b
  7201  000422  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7202  000424  A4D8               	btfss	status,2,c
  7203  000426  0E00               	movlw	low (__mediumconst shr (0+16))
  7204  000428  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7205  00042A  0E00               	movlw	0
  7206  00042C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7207  00042E  0E01               	movlw	1
  7208  000430  6F76               	movwf	oled_putString@start_page& (0+255),b
  7209  000432  EC14  F029         	call	_oled_putString	;wreg free
  7210                           
  7211                           ;MOTEapp.c: 611: oled_putString("(UNCNF)    (CNF) ",0,3);
  7212  000436  0EAA               	movlw	low STR_83
  7213  000438  0100               	movlb	0	; () banked
  7214  00043A  6F72               	movwf	oled_putString@string& (0+255),b
  7215  00043C  0E7A               	movlw	high STR_83
  7216  00043E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7217  000440  5172               	movf	oled_putString@string& (0+255),w,b
  7218  000442  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7219  000444  A4D8               	btfss	status,2,c
  7220  000446  0E00               	movlw	low (__mediumconst shr (0+16))
  7221  000448  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7222  00044A  0E00               	movlw	0
  7223  00044C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7224  00044E  0E03               	movlw	3
  7225  000450  6F76               	movwf	oled_putString@start_page& (0+255),b
  7226  000452  EC14  F029         	call	_oled_putString	;wreg free
  7227                           
  7228                           ;MOTEapp.c: 613: moteApp_clearBuffers();
  7229  000456  EC80  F026         	call	_moteApp_clearBuffers	;wreg free
  7230                           
  7231                           ;MOTEapp.c: 614: randomPortNum = TMR2_ReadTimer();
  7232  00045A  EC37  F031         	call	_TMR2_ReadTimer	;wreg free
  7233  00045E  0100               	movlb	0	; () banked
  7234  000460  6FF0               	movwf	_randomPortNum& (0+255),b
  7235                           
  7236                           ; BSR set to: 0
  7237                           ;MOTEapp.c: 616: if (!randomPortNum)
  7238  000462  51F0               	movf	_randomPortNum& (0+255),w,b
  7239  000464  A4D8               	btfss	status,2,c
  7240  000466  D002               	goto	l496
  7241                           
  7242                           ; BSR set to: 0
  7243                           ;MOTEapp.c: 617: randomPortNum = 5;
  7244  000468  0E05               	movlw	5
  7245  00046A  D005               	goto	L4
  7246  00046C                     l496:
  7247                           
  7248                           ; BSR set to: 0
  7249                           ;MOTEapp.c: 618: else if (randomPortNum > 223)
  7250                           
  7251                           ; BSR set to: 0
  7252  00046C  0EDF               	movlw	223
  7253  00046E  65F0               	cpfsgt	_randomPortNum& (0+255),b
  7254  000470  D003               	goto	l498
  7255                           
  7256                           ; BSR set to: 0
  7257                           ;MOTEapp.c: 619: randomPortNum = randomPortNum - 50;
  7258  000472  51F0               	movf	_randomPortNum& (0+255),w,b
  7259  000474  0FCE               	addlw	206
  7260  000476                     L4:
  7261  000476  6FF0               	movwf	_randomPortNum& (0+255),b
  7262  000478                     l498:
  7263                           
  7264                           ; BSR set to: 0
  7265                           ;MOTEapp.c: 620: oled_putUint8(randomPortNum,12,1);
  7266                           
  7267                           ; BSR set to: 0
  7268                           
  7269                           ; BSR set to: 0
  7270  000478  0E0C               	movlw	12
  7271  00047A  6F78               	movwf	oled_putUint8@station_dot& (0+255),b
  7272  00047C  0E01               	movlw	1
  7273  00047E  6F79               	movwf	oled_putUint8@start_page& (0+255),b
  7274  000480  51F0               	movf	_randomPortNum& (0+255),w,b
  7275  000482  ECEC  F025         	call	_oled_putUint8
  7276                           
  7277                           ;MOTEapp.c: 621: moteApp_add8bToDataBuffer(randomPortNum, 0);
  7278  000486  0E00               	movlw	0
  7279  000488  0100               	movlb	0	; () banked
  7280  00048A  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7281  00048C  51F0               	movf	_randomPortNum& (0+255),w,b
  7282  00048E  EC95  F023         	call	_moteApp_add8bToDataBuffer
  7283                           
  7284                           ;MOTEapp.c: 622: dataBuffer[3] = 0x20;
  7285  000492  0E20               	movlw	32
  7286  000494  0101               	movlb	1	; () banked
  7287  000496  6FCA               	movwf	(_dataBuffer+3)& (0+255),b
  7288                           
  7289                           ; BSR set to: 1
  7290                           ;MOTEapp.c: 624: light = 0;
  7291  000498  0E00               	movlw	0
  7292  00049A  6F5B               	movwf	(_light+1)& (0+255),b
  7293  00049C  0E00               	movlw	0
  7294  00049E  6F5A               	movwf	_light& (0+255),b
  7295                           
  7296                           ; BSR set to: 1
  7297                           ;MOTEapp.c: 625: temperature = 0;
  7298  0004A0  0E00               	movlw	0
  7299  0004A2  0100               	movlb	0	; () banked
  7300  0004A4  6FDB               	movwf	(_temperature+1)& (0+255),b
  7301  0004A6  0E00               	movlw	0
  7302  0004A8  6FDA               	movwf	_temperature& (0+255),b
  7303                           
  7304                           ; BSR set to: 0
  7305                           ;MOTEapp.c: 626: __nop();
  7306  0004AA  F000               	nop	
  7307                           
  7308                           ;MOTEapp.c: 627: moteApp_setSensorsInput();
  7309  0004AC  ECD8  F028         	call	_moteApp_setSensorsInput	;wreg free
  7310                           
  7311                           ;MOTEapp.c: 628: moteApp_delayms(500);
  7312  0004B0  0E01               	movlw	1
  7313  0004B2  0100               	movlb	0	; () banked
  7314  0004B4  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  7315  0004B6  0EF4               	movlw	244
  7316  0004B8  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7317  0004BA  ECA8  F02E         	call	_moteApp_delayms	;wreg free
  7318                           
  7319                           ;MOTEapp.c: 629: uint8_t sizeOfUpdate = 0;
  7320  0004BE  0E00               	movlw	0
  7321  0004C0  0100               	movlb	0	; () banked
  7322  0004C2  6FB2               	movwf	moteRunningProcess@sizeOfUpdate_1523& (0+255),b
  7323                           
  7324                           ; BSR set to: 0
  7325                           ;MOTEapp.c: 630: light = moteApp_convertSensorValue(moteApp_getLightValue());
  7326  0004C4  EC34  F02C         	call	_moteApp_getLightValue	;wreg free
  7327  0004C8  C06E  F072         	movff	?_moteApp_getLightValue,moteApp_convertSensorValue@string
  7328  0004CC  C06F  F073         	movff	?_moteApp_getLightValue+1,moteApp_convertSensorValue@string+1
  7329  0004D0  EC99  F028         	call	_moteApp_convertSensorValue	;wreg free
  7330  0004D4  C072  F15A         	movff	?_moteApp_convertSensorValue,_light
  7331  0004D8  C073  F15B         	movff	?_moteApp_convertSensorValue+1,_light+1
  7332                           
  7333                           ;MOTEapp.c: 631: sizeOfUpdate = moteApp_addToDataBuffer(moteApp_getLightValue(), 4);
  7334  0004DC  EC34  F02C         	call	_moteApp_getLightValue	;wreg free
  7335  0004E0  C06E  F072         	movff	?_moteApp_getLightValue,moteApp_addToDataBuffer@string
  7336  0004E4  C06F  F073         	movff	?_moteApp_getLightValue+1,moteApp_addToDataBuffer@string+1
  7337  0004E8  0E04               	movlw	4
  7338  0004EA  0100               	movlb	0	; () banked
  7339  0004EC  6F74               	movwf	moteApp_addToDataBuffer@bufferLocation& (0+255),b
  7340  0004EE  ECFE  F02A         	call	_moteApp_addToDataBuffer	;wreg free
  7341  0004F2  0100               	movlb	0	; () banked
  7342  0004F4  6FB2               	movwf	moteRunningProcess@sizeOfUpdate_1523& (0+255),b
  7343                           
  7344                           ; BSR set to: 0
  7345                           ;MOTEapp.c: 632: __nop();
  7346  0004F6  F000               	nop	
  7347                           
  7348                           ;MOTEapp.c: 633: __nop();
  7349  0004F8  F000               	nop	
  7350                           
  7351                           ;MOTEapp.c: 634: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  7352  0004FA  EC31  F02D         	call	_moteApp_getTempValue	;wreg free
  7353  0004FE  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  7354  000502  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  7355  000506  EC99  F028         	call	_moteApp_convertSensorValue	;wreg free
  7356  00050A  C072  F0DA         	movff	?_moteApp_convertSensorValue,_temperature
  7357  00050E  C073  F0DB         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  7358                           
  7359                           ;MOTEapp.c: 635: temperature = ADC_TempConversion(temperature);
  7360  000512  0100               	movlb	0	; () banked
  7361  000514  51DA               	movf	_temperature& (0+255),w,b
  7362  000516  EC3B  F01C         	call	_ADC_TempConversion
  7363  00051A  0100               	movlb	0	; () banked
  7364  00051C  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  7365  00051E  51AF               	movf	??_moteRunningProcess& (0+255),w,b
  7366  000520  6FDA               	movwf	_temperature& (0+255),b
  7367  000522  6BDB               	clrf	(_temperature+1)& (0+255),b
  7368                           
  7369                           ; BSR set to: 0
  7370                           ;MOTEapp.c: 636: moteApp_add8bToDataBuffer(temperature, 4 + moteApp_lightStringSize() + 
      +                          1);
  7371  000524  EC6D  F031         	call	_moteApp_lightStringSize	;wreg free
  7372  000528  0F05               	addlw	5
  7373  00052A  0100               	movlb	0	; () banked
  7374  00052C  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7375  00052E  51DA               	movf	_temperature& (0+255),w,b
  7376  000530  EC95  F023         	call	_moteApp_add8bToDataBuffer
  7377                           
  7378                           ;MOTEapp.c: 637: __nop();
  7379  000534  F000               	nop	
  7380                           
  7381                           ;MOTEapp.c: 639: runningState = runningUplinkSelect;
  7382  000536  0E07               	movlw	7
  7383  000538  0100               	movlb	0	; () banked
  7384  00053A  6FF3               	movwf	_runningState& (0+255),b
  7385                           
  7386                           ; BSR set to: 0
  7387                           ;MOTEapp.c: 640: }
  7388                           ;MOTEapp.c: 641: break;
  7389                           
  7390                           ; BSR set to: 0
  7391  00053C  0012               	return	
  7392  00053E                     
  7393                           ; BSR set to: 0
  7394                           ;MOTEapp.c: 643: if (changeStates)
  7395                           
  7396                           ; BSR set to: 0
  7397  00053E  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7398  000540  B4D8               	btfsc	status,2,c
  7399  000542  D00C               	goto	l500
  7400                           
  7401                           ; BSR set to: 0
  7402                           ;MOTEapp.c: 644: {
  7403                           ;MOTEapp.c: 645: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  7404  000544  0E2E               	movlw	low STR_74
  7405  000546  6F61               	movwf	sendDataCommand@string& (0+255),b
  7406  000548  0E7D               	movlw	high STR_74
  7407  00054A  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  7408  00054C  0EC7               	movlw	low _dataBuffer
  7409  00054E  6F63               	movwf	sendDataCommand@appData& (0+255),b
  7410  000550  0E01               	movlw	high _dataBuffer
  7411  000552  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  7412  000554  0E0C               	movlw	12
  7413  000556  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  7414  000558  ECBB  F021         	call	_sendDataCommand	;wreg free
  7415  00055C                     l500:
  7416                           
  7417                           ;MOTEapp.c: 647: }
  7418                           ;MOTEapp.c: 648: if (selectButton)
  7419  00055C  0100               	movlb	0	; () banked
  7420  00055E  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7421  000560  B4D8               	btfsc	status,2,c
  7422  000562  D00C               	goto	l501
  7423                           
  7424                           ; BSR set to: 0
  7425                           ;MOTEapp.c: 649: {
  7426                           ;MOTEapp.c: 650: sendDataCommand("mac tx cnf ", dataBuffer, 12);
  7427  000564  0E65               	movlw	low STR_85
  7428  000566  6F61               	movwf	sendDataCommand@string& (0+255),b
  7429  000568  0E7E               	movlw	high STR_85
  7430  00056A  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  7431  00056C  0EC7               	movlw	low _dataBuffer
  7432  00056E  6F63               	movwf	sendDataCommand@appData& (0+255),b
  7433  000570  0E01               	movlw	high _dataBuffer
  7434  000572  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  7435  000574  0E0C               	movlw	12
  7436  000576  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  7437  000578  ECBB  F021         	call	_sendDataCommand	;wreg free
  7438  00057C                     l501:
  7439                           
  7440                           ;MOTEapp.c: 651: }
  7441                           ;MOTEapp.c: 653: if ( (changeStates) || (selectButton) )
  7442  00057C  0100               	movlb	0	; () banked
  7443  00057E  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7444  000580  A4D8               	btfss	status,2,c
  7445  000582  D003               	goto	u9740
  7446                           
  7447                           ; BSR set to: 0
  7448  000584  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7449  000586  B4D8               	btfsc	status,2,c
  7450  000588  0012               	return	
  7451  00058A                     u9740:
  7452                           
  7453                           ; BSR set to: 0
  7454                           ;MOTEapp.c: 654: {
  7455                           ;MOTEapp.c: 655: oled_clear();
  7456                           
  7457                           ; BSR set to: 0
  7458  00058A  EC7E  F030         	call	_oled_clear	;wreg free
  7459                           
  7460                           ;MOTEapp.c: 656: oled_putString("Sent Data: ",0,0);
  7461  00058E  0E4D               	movlw	low STR_86
  7462  000590  0100               	movlb	0	; () banked
  7463  000592  6F72               	movwf	oled_putString@string& (0+255),b
  7464  000594  0E7E               	movlw	high STR_86
  7465  000596  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7466  000598  5172               	movf	oled_putString@string& (0+255),w,b
  7467  00059A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7468  00059C  A4D8               	btfss	status,2,c
  7469  00059E  0E00               	movlw	low (__mediumconst shr (0+16))
  7470  0005A0  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7471  0005A2  0E00               	movlw	0
  7472  0005A4  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7473  0005A6  0E00               	movlw	0
  7474  0005A8  6F76               	movwf	oled_putString@start_page& (0+255),b
  7475  0005AA  EC14  F029         	call	_oled_putString	;wreg free
  7476                           
  7477                           ;MOTEapp.c: 657: oled_putString("Tx Port #: ",0,1);
  7478  0005AE  0E41               	movlw	low STR_87
  7479  0005B0  0100               	movlb	0	; () banked
  7480  0005B2  6F72               	movwf	oled_putString@string& (0+255),b
  7481  0005B4  0E7E               	movlw	high STR_87
  7482  0005B6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7483  0005B8  5172               	movf	oled_putString@string& (0+255),w,b
  7484  0005BA  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7485  0005BC  A4D8               	btfss	status,2,c
  7486  0005BE  0E00               	movlw	low (__mediumconst shr (0+16))
  7487  0005C0  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7488  0005C2  0E00               	movlw	0
  7489  0005C4  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7490  0005C6  0E01               	movlw	1
  7491  0005C8  6F76               	movwf	oled_putString@start_page& (0+255),b
  7492  0005CA  EC14  F029         	call	_oled_putString	;wreg free
  7493                           
  7494                           ;MOTEapp.c: 658: oled_putUint8(randomPortNum,12,1);
  7495  0005CE  0E0C               	movlw	12
  7496  0005D0  0100               	movlb	0	; () banked
  7497  0005D2  6F78               	movwf	oled_putUint8@station_dot& (0+255),b
  7498  0005D4  0E01               	movlw	1
  7499  0005D6  6F79               	movwf	oled_putUint8@start_page& (0+255),b
  7500  0005D8  51F0               	movf	_randomPortNum& (0+255),w,b
  7501  0005DA  ECEC  F025         	call	_oled_putUint8
  7502                           
  7503                           ;MOTEapp.c: 659: oled_putString("L:       T: ",0,2);
  7504  0005DE  0E73               	movlw	low STR_73
  7505  0005E0  0100               	movlb	0	; () banked
  7506  0005E2  6F72               	movwf	oled_putString@string& (0+255),b
  7507  0005E4  0E7D               	movlw	high STR_73
  7508  0005E6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7509  0005E8  5172               	movf	oled_putString@string& (0+255),w,b
  7510  0005EA  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7511  0005EC  A4D8               	btfss	status,2,c
  7512  0005EE  0E00               	movlw	low (__mediumconst shr (0+16))
  7513  0005F0  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7514  0005F2  0E00               	movlw	0
  7515  0005F4  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7516  0005F6  0E02               	movlw	2
  7517  0005F8  6F76               	movwf	oled_putString@start_page& (0+255),b
  7518  0005FA  EC14  F029         	call	_oled_putString	;wreg free
  7519                           
  7520                           ;MOTEapp.c: 660: oled_putString(moteApp_getLightString(), 3, 2);
  7521  0005FE  EC25  F031         	call	_moteApp_getLightString	;wreg free
  7522  000602  0100               	movlb	0	; () banked
  7523  000604  C060  F072         	movff	?_moteApp_getLightString,oled_putString@string
  7524  000608  C061  F073         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  7525  00060C  5172               	movf	oled_putString@string& (0+255),w,b
  7526  00060E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7527  000610  A4D8               	btfss	status,2,c
  7528  000612  0E20               	movlw	32
  7529  000614  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7530  000616  0E03               	movlw	3
  7531  000618  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7532  00061A  0E02               	movlw	2
  7533  00061C  6F76               	movwf	oled_putString@start_page& (0+255),b
  7534  00061E  EC14  F029         	call	_oled_putString	;wreg free
  7535                           
  7536                           ;MOTEapp.c: 661: oled_putint8(temperature,11,2);
  7537  000622  0E0B               	movlw	11
  7538  000624  0100               	movlb	0	; () banked
  7539  000626  6F78               	movwf	oled_putint8@station_dot& (0+255),b
  7540  000628  0E02               	movlw	2
  7541  00062A  6F79               	movwf	oled_putint8@start_page& (0+255),b
  7542  00062C  51DA               	movf	_temperature& (0+255),w,b
  7543  00062E  ECF0  F023         	call	_oled_putint8
  7544                           
  7545                           ;MOTEapp.c: 662: LATAbits.LATA6 = 0;
  7546  000632  9C89               	bcf	3977,6,c	;volatile
  7547                           
  7548                           ;MOTEapp.c: 663: runningState = runningUplinkTransmit;
  7549  000634  0E08               	movlw	8
  7550  000636  0100               	movlb	0	; () banked
  7551  000638  6FF3               	movwf	_runningState& (0+255),b
  7552                           
  7553                           ; BSR set to: 0
  7554                           ;MOTEapp.c: 664: }
  7555                           ;MOTEapp.c: 665: break;
  7556  00063A  0012               	return	
  7557  00063C                     
  7558                           ; BSR set to: 0
  7559                           ;MOTEapp.c: 667: if ( messageReady )
  7560                           
  7561                           ; BSR set to: 0
  7562  00063C  51AD               	movf	moteRunningProcess@messageReady& (0+255),w,b
  7563  00063E  B4D8               	btfsc	status,2,c
  7564  000640  D11C               	goto	l506
  7565                           
  7566                           ; BSR set to: 0
  7567                           ;MOTEapp.c: 668: {
  7568                           ;MOTEapp.c: 669: if(strcmp(moduleResonseBuffer, "ok") == 0)
  7569  000642  0E67               	movlw	low _moduleResonseBuffer
  7570  000644  6F60               	movwf	strcmp@s1& (0+255),b
  7571  000646  0E01               	movlw	high _moduleResonseBuffer
  7572  000648  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7573  00064A  0EF8               	movlw	low STR_44
  7574  00064C  6F62               	movwf	strcmp@s2& (0+255),b
  7575  00064E  0E7F               	movlw	high STR_44
  7576  000650  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7577  000652  EC5B  F02C         	call	_strcmp	;wreg free
  7578  000656  0100               	movlb	0	; () banked
  7579  000658  5160               	movf	?_strcmp& (0+255),w,b
  7580  00065A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7581  00065C  A4D8               	btfss	status,2,c
  7582  00065E  D003               	goto	l507
  7583                           
  7584                           ; BSR set to: 0
  7585                           ;MOTEapp.c: 670: {
  7586                           ;MOTEapp.c: 671: LATAbits.LATA6 = 1;
  7587  000660  8C89               	bsf	3977,6,c	;volatile
  7588                           
  7589                           ; BSR set to: 0
  7590                           ;MOTEapp.c: 672: runningState = runningUplinkTransmit;
  7591  000662  0E08               	movlw	8
  7592  000664  6FF3               	movwf	_runningState& (0+255),b
  7593  000666                     l507:
  7594                           
  7595                           ; BSR set to: 0
  7596                           ;MOTEapp.c: 673: }
  7597                           ;MOTEapp.c: 674: if(strncmp(moduleResonseBuffer, "mac_rx", 6) == 0)
  7598                           
  7599                           ; BSR set to: 0
  7600  000666  0E67               	movlw	low _moduleResonseBuffer
  7601  000668  6F60               	movwf	strncmp@s1& (0+255),b
  7602  00066A  0E01               	movlw	high _moduleResonseBuffer
  7603  00066C  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7604  00066E  0EAB               	movlw	low STR_90
  7605  000670  6F62               	movwf	strncmp@s2& (0+255),b
  7606  000672  0E7F               	movlw	high STR_90
  7607  000674  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7608  000676  0E00               	movlw	0
  7609  000678  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7610  00067A  0E06               	movlw	6
  7611  00067C  6F64               	movwf	strncmp@len& (0+255),b
  7612  00067E  ECC9  F026         	call	_strncmp	;wreg free
  7613  000682  0100               	movlb	0	; () banked
  7614  000684  5160               	movf	?_strncmp& (0+255),w,b
  7615  000686  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7616  000688  A4D8               	btfss	status,2,c
  7617  00068A  D082               	goto	l508
  7618                           
  7619                           ; BSR set to: 0
  7620                           ;MOTEapp.c: 675: {
  7621                           ;MOTEapp.c: 676: uint8_t bufferReadPos = 7;
  7622  00068C  0E07               	movlw	7
  7623  00068E  6FB4               	movwf	moteRunningProcess@bufferReadPos& (0+255),b
  7624                           
  7625                           ; BSR set to: 0
  7626                           ;MOTEapp.c: 680: responsePortNum[0] = moduleResonseBuffer[bufferReadPos++];
  7627  000690  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7628  000692  0D01               	mullw	1
  7629  000694  0E67               	movlw	low _moduleResonseBuffer
  7630  000696  24F3               	addwf	prodl,w,c
  7631  000698  6ED9               	movwf	fsr2l,c
  7632  00069A  0E01               	movlw	high _moduleResonseBuffer
  7633  00069C  20F4               	addwfc	prodh,w,c
  7634  00069E  6EDA               	movwf	fsr2h,c
  7635  0006A0  50DF               	movf	indf2,w,c
  7636  0006A2  0101               	movlb	1	; () banked
  7637  0006A4  6FFA               	movwf	_responsePortNum& (0+255),b
  7638                           
  7639                           ; BSR set to: 1
  7640  0006A6  0100               	movlb	0	; () banked
  7641  0006A8  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7642                           
  7643                           ; BSR set to: 0
  7644                           ;MOTEapp.c: 681: responsePortNum[1] = moduleResonseBuffer[bufferReadPos++];
  7645  0006AA  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7646  0006AC  0D01               	mullw	1
  7647  0006AE  0E67               	movlw	low _moduleResonseBuffer
  7648  0006B0  24F3               	addwf	prodl,w,c
  7649  0006B2  6ED9               	movwf	fsr2l,c
  7650  0006B4  0E01               	movlw	high _moduleResonseBuffer
  7651  0006B6  20F4               	addwfc	prodh,w,c
  7652  0006B8  6EDA               	movwf	fsr2h,c
  7653  0006BA  50DF               	movf	indf2,w,c
  7654  0006BC  0101               	movlb	1	; () banked
  7655  0006BE  6FFB               	movwf	(_responsePortNum+1)& (0+255),b
  7656                           
  7657                           ; BSR set to: 1
  7658  0006C0  0100               	movlb	0	; () banked
  7659  0006C2  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7660                           
  7661                           ; BSR set to: 0
  7662                           ;MOTEapp.c: 682: if (responsePortNum[1] != ' ')
  7663  0006C4  0E20               	movlw	32
  7664  0006C6  0101               	movlb	1	; () banked
  7665  0006C8  19FB               	xorwf	(_responsePortNum+1)& (0+255),w,b
  7666  0006CA  B4D8               	btfsc	status,2,c
  7667  0006CC  D015               	goto	l510
  7668                           
  7669                           ; BSR set to: 1
  7670                           ;MOTEapp.c: 683: {
  7671                           ;MOTEapp.c: 684: responsePortNum[2] = moduleResonseBuffer[bufferReadPos++];
  7672  0006CE  0100               	movlb	0	; () banked
  7673  0006D0  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7674  0006D2  0D01               	mullw	1
  7675  0006D4  0E67               	movlw	low _moduleResonseBuffer
  7676  0006D6  24F3               	addwf	prodl,w,c
  7677  0006D8  6ED9               	movwf	fsr2l,c
  7678  0006DA  0E01               	movlw	high _moduleResonseBuffer
  7679  0006DC  20F4               	addwfc	prodh,w,c
  7680  0006DE  6EDA               	movwf	fsr2h,c
  7681  0006E0  50DF               	movf	indf2,w,c
  7682  0006E2  0101               	movlb	1	; () banked
  7683  0006E4  6FFC               	movwf	(_responsePortNum+2)& (0+255),b
  7684                           
  7685                           ; BSR set to: 1
  7686  0006E6  0100               	movlb	0	; () banked
  7687  0006E8  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7688                           
  7689                           ; BSR set to: 0
  7690                           ;MOTEapp.c: 685: if (responsePortNum[2] != ' ')
  7691  0006EA  0E20               	movlw	32
  7692  0006EC  0101               	movlb	1	; () banked
  7693  0006EE  19FC               	xorwf	(_responsePortNum+2)& (0+255),w,b
  7694  0006F0  B4D8               	btfsc	status,2,c
  7695  0006F2  D002               	goto	l510
  7696                           
  7697                           ; BSR set to: 1
  7698                           ;MOTEapp.c: 686: {
  7699                           ;MOTEapp.c: 687: bufferReadPos++;
  7700  0006F4  0100               	movlb	0	; () banked
  7701  0006F6  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7702  0006F8                     l510:
  7703                           
  7704                           ;MOTEapp.c: 688: }
  7705                           ;MOTEapp.c: 689: }
  7706                           ;MOTEapp.c: 691: for (uint8_t counter = 0; counter < sizeof(moduleResonseBuffer); counte
      +                          r++)
  7707                           
  7708                           ; BSR set to: 0
  7709                           
  7710                           ; BSR set to: 0
  7711  0006F8  0E00               	movlw	0
  7712  0006FA  0100               	movlb	0	; () banked
  7713  0006FC  6FB3               	movwf	moteRunningProcess@counter& (0+255),b
  7714  0006FE                     l11109:
  7715                           
  7716                           ; BSR set to: 0
  7717  0006FE  0E3F               	movlw	63
  7718  000700  65B3               	cpfsgt	moteRunningProcess@counter& (0+255),b
  7719  000702  D001               	goto	l511
  7720  000704  D023               	goto	u9820
  7721  000706                     l511:
  7722                           
  7723                           ; BSR set to: 0
  7724                           ;MOTEapp.c: 692: {
  7725                           ;MOTEapp.c: 693: responseData[counter] = moduleResonseBuffer[bufferReadPos];
  7726                           
  7727                           ; BSR set to: 0
  7728  000706  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7729  000708  0D01               	mullw	1
  7730  00070A  0E67               	movlw	low _moduleResonseBuffer
  7731  00070C  24F3               	addwf	prodl,w,c
  7732  00070E  6ED9               	movwf	fsr2l,c
  7733  000710  0E01               	movlw	high _moduleResonseBuffer
  7734  000712  20F4               	addwfc	prodh,w,c
  7735  000714  6EDA               	movwf	fsr2h,c
  7736  000716  51B3               	movf	moteRunningProcess@counter& (0+255),w,b
  7737  000718  0D01               	mullw	1
  7738  00071A  0EA7               	movlw	low _responseData
  7739  00071C  24F3               	addwf	prodl,w,c
  7740  00071E  6EE1               	movwf	fsr1l,c
  7741  000720  0E01               	movlw	high _responseData
  7742  000722  20F4               	addwfc	prodh,w,c
  7743  000724  6EE2               	movwf	fsr1h,c
  7744  000726  CFDF FFE7          	movff	indf2,indf1
  7745                           
  7746                           ; BSR set to: 0
  7747                           ;MOTEapp.c: 695: if (responseData[counter] != 0x00)
  7748  00072A  51B3               	movf	moteRunningProcess@counter& (0+255),w,b
  7749  00072C  0D01               	mullw	1
  7750  00072E  0EA7               	movlw	low _responseData
  7751  000730  24F3               	addwf	prodl,w,c
  7752  000732  6ED9               	movwf	fsr2l,c
  7753  000734  0E01               	movlw	high _responseData
  7754  000736  20F4               	addwfc	prodh,w,c
  7755  000738  6EDA               	movwf	fsr2h,c
  7756  00073A  50DF               	movf	indf2,w,c
  7757  00073C  B4D8               	btfsc	status,2,c
  7758  00073E  D002               	goto	l513
  7759                           
  7760                           ; BSR set to: 0
  7761                           ;MOTEapp.c: 696: {
  7762                           ;MOTEapp.c: 697: bufferReadPos++;
  7763  000740  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7764                           
  7765                           ;MOTEapp.c: 698: } else {
  7766  000742  D002               	goto	l514
  7767  000744                     l513:
  7768                           
  7769                           ; BSR set to: 0
  7770                           ;MOTEapp.c: 699: counter = sizeof(moduleResonseBuffer);
  7771                           
  7772                           ; BSR set to: 0
  7773  000744  0E40               	movlw	64
  7774  000746  6FB3               	movwf	moteRunningProcess@counter& (0+255),b
  7775  000748                     l514:
  7776                           
  7777                           ; BSR set to: 0
  7778                           
  7779                           ; BSR set to: 0
  7780  000748  2BB3               	incf	moteRunningProcess@counter& (0+255),f,b
  7781  00074A  D7D9               	goto	l11109
  7782  00074C                     u9820:
  7783                           
  7784                           ; BSR set to: 0
  7785                           ;MOTEapp.c: 700: }
  7786                           ;MOTEapp.c: 701: }
  7787                           ;MOTEapp.c: 703: LATAbits.LATA7 = 1;
  7788  00074C  8E89               	bsf	3977,7,c	;volatile
  7789                           
  7790                           ;MOTEapp.c: 704: LATAbits.LATA6 = 0;
  7791  00074E  9C89               	bcf	3977,6,c	;volatile
  7792                           
  7793                           ; BSR set to: 0
  7794                           ;MOTEapp.c: 706: oled_putString("Server Response ",0,2);
  7795  000750  0E55               	movlw	low STR_91
  7796  000752  6F72               	movwf	oled_putString@string& (0+255),b
  7797  000754  0E7B               	movlw	high STR_91
  7798  000756  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7799  000758  5172               	movf	oled_putString@string& (0+255),w,b
  7800  00075A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7801  00075C  A4D8               	btfss	status,2,c
  7802  00075E  0E00               	movlw	low (__mediumconst shr (0+16))
  7803  000760  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7804  000762  0E00               	movlw	0
  7805  000764  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7806  000766  0E02               	movlw	2
  7807  000768  6F76               	movwf	oled_putString@start_page& (0+255),b
  7808  00076A  EC14  F029         	call	_oled_putString	;wreg free
  7809                           
  7810                           ;MOTEapp.c: 707: oled_putString("    Received    ",0,3);
  7811  00076E  0ECD               	movlw	low STR_92
  7812  000770  0100               	movlb	0	; () banked
  7813  000772  6F72               	movwf	oled_putString@string& (0+255),b
  7814  000774  0E7A               	movlw	high STR_92
  7815  000776  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7816  000778  5172               	movf	oled_putString@string& (0+255),w,b
  7817  00077A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7818  00077C  A4D8               	btfss	status,2,c
  7819  00077E  0E00               	movlw	low (__mediumconst shr (0+16))
  7820  000780  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7821  000782  0E00               	movlw	0
  7822  000784  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7823  000786  0E03               	movlw	3
  7824  000788  6F76               	movwf	oled_putString@start_page& (0+255),b
  7825  00078A  EC14  F029         	call	_oled_putString	;wreg free
  7826                           
  7827                           ;MOTEapp.c: 708: }
  7828  00078E  D06C               	goto	l520
  7829  000790                     l508:
  7830                           
  7831                           ;MOTEapp.c: 709: else if(strncmp(moduleResonseBuffer, "mac_tx", 6) == 0)
  7832  000790  0E67               	movlw	low _moduleResonseBuffer
  7833  000792  0100               	movlb	0	; () banked
  7834  000794  6F60               	movwf	strncmp@s1& (0+255),b
  7835  000796  0E01               	movlw	high _moduleResonseBuffer
  7836  000798  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7837  00079A  0EB2               	movlw	low STR_93
  7838  00079C  6F62               	movwf	strncmp@s2& (0+255),b
  7839  00079E  0E7F               	movlw	high STR_93
  7840  0007A0  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7841  0007A2  0E00               	movlw	0
  7842  0007A4  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7843  0007A6  0E06               	movlw	6
  7844  0007A8  6F64               	movwf	strncmp@len& (0+255),b
  7845  0007AA  ECC9  F026         	call	_strncmp	;wreg free
  7846  0007AE  0100               	movlb	0	; () banked
  7847  0007B0  5160               	movf	?_strncmp& (0+255),w,b
  7848  0007B2  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7849  0007B4  A4D8               	btfss	status,2,c
  7850  0007B6  D011               	goto	l516
  7851                           
  7852                           ; BSR set to: 0
  7853                           ;MOTEapp.c: 710: {
  7854                           ;MOTEapp.c: 711: LATAbits.LATA6 = 0;
  7855  0007B8  9C89               	bcf	3977,6,c	;volatile
  7856                           
  7857                           ; BSR set to: 0
  7858                           ;MOTEapp.c: 712: oled_putString("Data Transmitted",0,3);
  7859  0007BA  0EBB               	movlw	low STR_94
  7860  0007BC  6F72               	movwf	oled_putString@string& (0+255),b
  7861  0007BE  0E7B               	movlw	high STR_94
  7862  0007C0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7863  0007C2  5172               	movf	oled_putString@string& (0+255),w,b
  7864  0007C4  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7865  0007C6  A4D8               	btfss	status,2,c
  7866  0007C8  0E00               	movlw	low (__mediumconst shr (0+16))
  7867  0007CA  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7868  0007CC  0E00               	movlw	0
  7869  0007CE  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7870  0007D0  0E03               	movlw	3
  7871  0007D2  6F76               	movwf	oled_putString@start_page& (0+255),b
  7872  0007D4  EC14  F029         	call	_oled_putString	;wreg free
  7873                           
  7874                           ;MOTEapp.c: 713: }
  7875  0007D8  D047               	goto	l520
  7876  0007DA                     l516:
  7877                           
  7878                           ;MOTEapp.c: 714: else if(strncmp(moduleResonseBuffer, "mac_er", 6) == 0)
  7879  0007DA  0E67               	movlw	low _moduleResonseBuffer
  7880  0007DC  0100               	movlb	0	; () banked
  7881  0007DE  6F60               	movwf	strncmp@s1& (0+255),b
  7882  0007E0  0E01               	movlw	high _moduleResonseBuffer
  7883  0007E2  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7884  0007E4  0EA4               	movlw	low STR_95
  7885  0007E6  6F62               	movwf	strncmp@s2& (0+255),b
  7886  0007E8  0E7F               	movlw	high STR_95
  7887  0007EA  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7888  0007EC  0E00               	movlw	0
  7889  0007EE  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7890  0007F0  0E06               	movlw	6
  7891  0007F2  6F64               	movwf	strncmp@len& (0+255),b
  7892  0007F4  ECC9  F026         	call	_strncmp	;wreg free
  7893  0007F8  0100               	movlb	0	; () banked
  7894  0007FA  5160               	movf	?_strncmp& (0+255),w,b
  7895  0007FC  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7896  0007FE  A4D8               	btfss	status,2,c
  7897  000800  D010               	goto	l518
  7898                           
  7899                           ; BSR set to: 0
  7900                           ;MOTEapp.c: 715: {
  7901                           ;MOTEapp.c: 716: oled_putString("Mac Error Occurred",0,3);
  7902  000802  0E97               	movlw	low STR_96
  7903  000804  6F72               	movwf	oled_putString@string& (0+255),b
  7904  000806  0E7A               	movlw	high STR_96
  7905  000808  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7906  00080A  5172               	movf	oled_putString@string& (0+255),w,b
  7907  00080C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7908  00080E  A4D8               	btfss	status,2,c
  7909  000810  0E00               	movlw	low (__mediumconst shr (0+16))
  7910  000812  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7911  000814  0E00               	movlw	0
  7912  000816  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7913  000818  0E03               	movlw	3
  7914  00081A  6F76               	movwf	oled_putString@start_page& (0+255),b
  7915  00081C  EC14  F029         	call	_oled_putString	;wreg free
  7916                           
  7917                           ;MOTEapp.c: 717: }
  7918  000820  D023               	goto	l520
  7919  000822                     l518:
  7920                           
  7921                           ;MOTEapp.c: 718: else if(strncmp(moduleResonseBuffer, "no_fre", 6) == 0)
  7922  000822  0E67               	movlw	low _moduleResonseBuffer
  7923  000824  0100               	movlb	0	; () banked
  7924  000826  6F60               	movwf	strncmp@s1& (0+255),b
  7925  000828  0E01               	movlw	high _moduleResonseBuffer
  7926  00082A  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7927  00082C  0E9D               	movlw	low STR_97
  7928  00082E  6F62               	movwf	strncmp@s2& (0+255),b
  7929  000830  0E7F               	movlw	high STR_97
  7930  000832  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7931  000834  0E00               	movlw	0
  7932  000836  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7933  000838  0E06               	movlw	6
  7934  00083A  6F64               	movwf	strncmp@len& (0+255),b
  7935  00083C  ECC9  F026         	call	_strncmp	;wreg free
  7936  000840  0100               	movlb	0	; () banked
  7937  000842  5160               	movf	?_strncmp& (0+255),w,b
  7938  000844  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7939  000846  A4D8               	btfss	status,2,c
  7940  000848  D00F               	goto	l520
  7941                           
  7942                           ; BSR set to: 0
  7943                           ;MOTEapp.c: 719: {
  7944                           ;MOTEapp.c: 720: oled_putString("No Free Channel",0,3);
  7945  00084A  0EB4               	movlw	low STR_98
  7946  00084C  6F72               	movwf	oled_putString@string& (0+255),b
  7947  00084E  0E7C               	movlw	high STR_98
  7948  000850  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7949  000852  5172               	movf	oled_putString@string& (0+255),w,b
  7950  000854  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7951  000856  A4D8               	btfss	status,2,c
  7952  000858  0E00               	movlw	low (__mediumconst shr (0+16))
  7953  00085A  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7954  00085C  0E00               	movlw	0
  7955  00085E  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7956  000860  0E03               	movlw	3
  7957  000862  6F76               	movwf	oled_putString@start_page& (0+255),b
  7958  000864  EC14  F029         	call	_oled_putString	;wreg free
  7959  000868                     l520:
  7960                           
  7961                           ;MOTEapp.c: 721: }
  7962                           ;MOTEapp.c: 722: _delay((unsigned long)((16)*(48000000/4000.0)));
  7963  000868  0EFA               	movlw	250
  7964  00086A  0100               	movlb	0	; () banked
  7965  00086C  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  7966  00086E  0E58               	movlw	88
  7967  000870                     u11577:
  7968  000870  2EE8               	decfsz	wreg,f,c
  7969  000872  D7FE               	bra	u11577
  7970  000874  2FAF               	decfsz	??_moteRunningProcess& (0+255),f,b
  7971  000876  D7FC               	bra	u11577
  7972  000878  F000               	nop	
  7973  00087A                     l506:
  7974                           
  7975                           ;MOTEapp.c: 723: }
  7976                           ;MOTEapp.c: 724: if ( (changeStates) || (selectButton) )
  7977  00087A  0100               	movlb	0	; () banked
  7978  00087C  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7979  00087E  A4D8               	btfss	status,2,c
  7980  000880  D003               	goto	u9870
  7981                           
  7982                           ; BSR set to: 0
  7983  000882  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7984  000884  B4D8               	btfsc	status,2,c
  7985  000886  0012               	return	
  7986  000888                     u9870:
  7987                           
  7988                           ; BSR set to: 0
  7989                           ;MOTEapp.c: 725: {
  7990                           ;MOTEapp.c: 726: oled_clear();
  7991                           
  7992                           ; BSR set to: 0
  7993  000888  EC7E  F030         	call	_oled_clear	;wreg free
  7994                           
  7995                           ;MOTEapp.c: 727: oled_putString("  Issue Uplink  ",0,0);
  7996  00088C  0E22               	movlw	low STR_75
  7997  00088E  0100               	movlb	0	; () banked
  7998  000890  6F72               	movwf	oled_putString@string& (0+255),b
  7999  000892  0E7B               	movlw	high STR_75
  8000  000894  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8001  000896  5172               	movf	oled_putString@string& (0+255),w,b
  8002  000898  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8003  00089A  A4D8               	btfss	status,2,c
  8004  00089C  0E00               	movlw	low (__mediumconst shr (0+16))
  8005  00089E  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8006  0008A0  0E00               	movlw	0
  8007  0008A2  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8008  0008A4  0E00               	movlw	0
  8009  0008A6  6F76               	movwf	oled_putString@start_page& (0+255),b
  8010  0008A8  EC14  F029         	call	_oled_putString	;wreg free
  8011                           
  8012                           ;MOTEapp.c: 728: oled_putString(" LoRaWAN Packet ",0,1);
  8013  0008AC  0E88               	movlw	low STR_76
  8014  0008AE  0100               	movlb	0	; () banked
  8015  0008B0  6F72               	movwf	oled_putString@string& (0+255),b
  8016  0008B2  0E7B               	movlw	high STR_76
  8017  0008B4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8018  0008B6  5172               	movf	oled_putString@string& (0+255),w,b
  8019  0008B8  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8020  0008BA  A4D8               	btfss	status,2,c
  8021  0008BC  0E00               	movlw	low (__mediumconst shr (0+16))
  8022  0008BE  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8023  0008C0  0E00               	movlw	0
  8024  0008C2  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8025  0008C4  0E01               	movlw	1
  8026  0008C6  6F76               	movwf	oled_putString@start_page& (0+255),b
  8027  0008C8  EC14  F029         	call	_oled_putString	;wreg free
  8028                           
  8029                           ;MOTEapp.c: 729: oled_putString("(NAV)    (SEL) ",0,3);
  8030  0008CC  0E84               	movlw	low STR_77
  8031  0008CE  0100               	movlb	0	; () banked
  8032  0008D0  6F72               	movwf	oled_putString@string& (0+255),b
  8033  0008D2  0E7C               	movlw	high STR_77
  8034  0008D4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8035  0008D6  5172               	movf	oled_putString@string& (0+255),w,b
  8036  0008D8  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8037  0008DA  A4D8               	btfss	status,2,c
  8038  0008DC  0E00               	movlw	low (__mediumconst shr (0+16))
  8039  0008DE  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8040  0008E0  0E00               	movlw	0
  8041  0008E2  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8042  0008E4  0E03               	movlw	3
  8043  0008E6  6F76               	movwf	oled_putString@start_page& (0+255),b
  8044  0008E8  EC14  F029         	call	_oled_putString	;wreg free
  8045                           
  8046                           ;MOTEapp.c: 730: runningState = runningUplink;
  8047  0008EC  0E06               	movlw	6
  8048  0008EE  0100               	movlb	0	; () banked
  8049  0008F0  6FF3               	movwf	_runningState& (0+255),b
  8050                           
  8051                           ; BSR set to: 0
  8052                           ;MOTEapp.c: 731: }
  8053                           ;MOTEapp.c: 732: break;
  8054  0008F2  0012               	return	
  8055  0008F4                     
  8056                           ; BSR set to: 0
  8057                           ;MOTEapp.c: 734: if (changeStates)
  8058                           
  8059                           ; BSR set to: 0
  8060  0008F4  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8061  0008F6  B4D8               	btfsc	status,2,c
  8062  0008F8  D036               	goto	l525
  8063                           
  8064                           ; BSR set to: 0
  8065                           ;MOTEapp.c: 735: {
  8066                           ;MOTEapp.c: 736: oled_clear();
  8067  0008FA  EC7E  F030         	call	_oled_clear	;wreg free
  8068                           
  8069                           ;MOTEapp.c: 737: oled_putString("  Sensor Data  ",0,0);
  8070  0008FE  0E64               	movlw	low STR_102
  8071  000900  0100               	movlb	0	; () banked
  8072  000902  6F72               	movwf	oled_putString@string& (0+255),b
  8073  000904  0E7C               	movlw	high STR_102
  8074  000906  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8075  000908  5172               	movf	oled_putString@string& (0+255),w,b
  8076  00090A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8077  00090C  A4D8               	btfss	status,2,c
  8078  00090E  0E00               	movlw	low (__mediumconst shr (0+16))
  8079  000910  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8080  000912  0E00               	movlw	0
  8081  000914  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8082  000916  0E00               	movlw	0
  8083  000918  6F76               	movwf	oled_putString@start_page& (0+255),b
  8084  00091A  EC14  F029         	call	_oled_putString	;wreg free
  8085                           
  8086                           ;MOTEapp.c: 738: oled_putString("    Display    ",0,1);
  8087  00091E  0E54               	movlw	low STR_103
  8088  000920  0100               	movlb	0	; () banked
  8089  000922  6F72               	movwf	oled_putString@string& (0+255),b
  8090  000924  0E7C               	movlw	high STR_103
  8091  000926  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8092  000928  5172               	movf	oled_putString@string& (0+255),w,b
  8093  00092A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8094  00092C  A4D8               	btfss	status,2,c
  8095  00092E  0E00               	movlw	low (__mediumconst shr (0+16))
  8096  000930  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8097  000932  0E00               	movlw	0
  8098  000934  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8099  000936  0E01               	movlw	1
  8100  000938  6F76               	movwf	oled_putString@start_page& (0+255),b
  8101  00093A  EC14  F029         	call	_oled_putString	;wreg free
  8102                           
  8103                           ;MOTEapp.c: 739: oled_putString("(NAV)    (SEL) ",0,3);
  8104  00093E  0E84               	movlw	low STR_77
  8105  000940  0100               	movlb	0	; () banked
  8106  000942  6F72               	movwf	oled_putString@string& (0+255),b
  8107  000944  0E7C               	movlw	high STR_77
  8108  000946  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8109  000948  5172               	movf	oled_putString@string& (0+255),w,b
  8110  00094A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8111  00094C  A4D8               	btfss	status,2,c
  8112  00094E  0E00               	movlw	low (__mediumconst shr (0+16))
  8113  000950  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8114  000952  0E00               	movlw	0
  8115  000954  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8116  000956  0E03               	movlw	3
  8117  000958  6F76               	movwf	oled_putString@start_page& (0+255),b
  8118  00095A  EC14  F029         	call	_oled_putString	;wreg free
  8119                           
  8120                           ;MOTEapp.c: 740: runningState = runningSensor;
  8121  00095E  0E01               	movlw	1
  8122  000960  0100               	movlb	0	; () banked
  8123  000962  6FF3               	movwf	_runningState& (0+255),b
  8124                           
  8125                           ;MOTEapp.c: 741: }
  8126  000964  0012               	return	
  8127  000966                     l525:
  8128                           
  8129                           ; BSR set to: 0
  8130                           ;MOTEapp.c: 742: else if (selectButton)
  8131                           
  8132                           ; BSR set to: 0
  8133  000966  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8134  000968  B4D8               	btfsc	status,2,c
  8135  00096A  0012               	return	
  8136                           
  8137                           ; BSR set to: 0
  8138                           ;MOTEapp.c: 743: {
  8139                           ;MOTEapp.c: 745: oled_clear();
  8140  00096C  EC7E  F030         	call	_oled_clear	;wreg free
  8141                           
  8142                           ;MOTEapp.c: 747: LATAbits.LATA7 = 0;
  8143  000970  9E89               	bcf	3977,7,c	;volatile
  8144                           
  8145                           ;MOTEapp.c: 749: oled_putString("Downlink Display",0,0);
  8146  000972  0E43               	movlw	low STR_105
  8147  000974  0100               	movlb	0	; () banked
  8148  000976  6F72               	movwf	oled_putString@string& (0+255),b
  8149  000978  0E7C               	movlw	high STR_105
  8150  00097A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8151  00097C  5172               	movf	oled_putString@string& (0+255),w,b
  8152  00097E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8153  000980  A4D8               	btfss	status,2,c
  8154  000982  0E00               	movlw	low (__mediumconst shr (0+16))
  8155  000984  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8156  000986  0E00               	movlw	0
  8157  000988  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8158  00098A  0E00               	movlw	0
  8159  00098C  6F76               	movwf	oled_putString@start_page& (0+255),b
  8160  00098E  EC14  F029         	call	_oled_putString	;wreg free
  8161                           
  8162                           ;MOTEapp.c: 751: oled_putString("Rx Port# ",0,1);
  8163  000992  0ECB               	movlw	low STR_106
  8164  000994  0100               	movlb	0	; () banked
  8165  000996  6F72               	movwf	oled_putString@string& (0+255),b
  8166  000998  0E7E               	movlw	high STR_106
  8167  00099A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8168  00099C  5172               	movf	oled_putString@string& (0+255),w,b
  8169  00099E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8170  0009A0  A4D8               	btfss	status,2,c
  8171  0009A2  0E00               	movlw	low (__mediumconst shr (0+16))
  8172  0009A4  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8173  0009A6  0E00               	movlw	0
  8174  0009A8  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8175  0009AA  0E01               	movlw	1
  8176  0009AC  6F76               	movwf	oled_putString@start_page& (0+255),b
  8177  0009AE  EC14  F029         	call	_oled_putString	;wreg free
  8178                           
  8179                           ;MOTEapp.c: 752: oled_putString(&responsePortNum,9,1);
  8180  0009B2  0EFA               	movlw	low _responsePortNum
  8181  0009B4  0100               	movlb	0	; () banked
  8182  0009B6  6F72               	movwf	oled_putString@string& (0+255),b
  8183  0009B8  0E01               	movlw	high _responsePortNum
  8184  0009BA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8185  0009BC  5172               	movf	oled_putString@string& (0+255),w,b
  8186  0009BE  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8187  0009C0  A4D8               	btfss	status,2,c
  8188  0009C2  0E20               	movlw	32
  8189  0009C4  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8190  0009C6  0E09               	movlw	9
  8191  0009C8  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8192  0009CA  0E01               	movlw	1
  8193  0009CC  6F76               	movwf	oled_putString@start_page& (0+255),b
  8194  0009CE  EC14  F029         	call	_oled_putString	;wreg free
  8195                           
  8196                           ;MOTEapp.c: 754: oled_putString("Data: ",0,2);
  8197  0009D2  0E52               	movlw	low (STR_86+5)
  8198  0009D4  0100               	movlb	0	; () banked
  8199  0009D6  6F72               	movwf	oled_putString@string& (0+255),b
  8200  0009D8  0E7E               	movlw	high (STR_86+5)
  8201  0009DA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8202  0009DC  5172               	movf	oled_putString@string& (0+255),w,b
  8203  0009DE  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8204  0009E0  A4D8               	btfss	status,2,c
  8205  0009E2  0E00               	movlw	low (__mediumconst shr (0+16))
  8206  0009E4  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8207  0009E6  0E00               	movlw	0
  8208  0009E8  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8209  0009EA  0E02               	movlw	2
  8210  0009EC  6F76               	movwf	oled_putString@start_page& (0+255),b
  8211  0009EE  EC14  F029         	call	_oled_putString	;wreg free
  8212                           
  8213                           ;MOTEapp.c: 755: oled_putString(&responseData[0],6,2);
  8214  0009F2  0EA7               	movlw	low _responseData
  8215  0009F4  0100               	movlb	0	; () banked
  8216  0009F6  6F72               	movwf	oled_putString@string& (0+255),b
  8217  0009F8  0E01               	movlw	high _responseData
  8218  0009FA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8219  0009FC  5172               	movf	oled_putString@string& (0+255),w,b
  8220  0009FE  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8221  000A00  A4D8               	btfss	status,2,c
  8222  000A02  0E20               	movlw	32
  8223  000A04  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8224  000A06  0E06               	movlw	6
  8225  000A08  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8226  000A0A  0E02               	movlw	2
  8227  000A0C  6F76               	movwf	oled_putString@start_page& (0+255),b
  8228  000A0E  EC14  F029         	call	_oled_putString	;wreg free
  8229                           
  8230                           ;MOTEapp.c: 757: oled_putString(&responseData[10],0,3);
  8231  000A12  0EB1               	movlw	low (_responseData+10)
  8232  000A14  0100               	movlb	0	; () banked
  8233  000A16  6F72               	movwf	oled_putString@string& (0+255),b
  8234  000A18  0E01               	movlw	high (_responseData+10)
  8235  000A1A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8236  000A1C  5172               	movf	oled_putString@string& (0+255),w,b
  8237  000A1E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8238  000A20  A4D8               	btfss	status,2,c
  8239  000A22  0E20               	movlw	32
  8240  000A24  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8241  000A26  0E00               	movlw	0
  8242  000A28  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8243  000A2A  0E03               	movlw	3
  8244  000A2C  6F76               	movwf	oled_putString@start_page& (0+255),b
  8245  000A2E  EC14  F029         	call	_oled_putString	;wreg free
  8246                           
  8247                           ;MOTEapp.c: 759: runningState = runningDownlinkDisplay;
  8248  000A32  0E0B               	movlw	11
  8249  000A34  0100               	movlb	0	; () banked
  8250  000A36  6FF3               	movwf	_runningState& (0+255),b
  8251                           
  8252                           ; BSR set to: 0
  8253                           ;MOTEapp.c: 760: }
  8254                           ;MOTEapp.c: 761: break;
  8255                           
  8256                           ; BSR set to: 0
  8257  000A38  0012               	return	
  8258  000A3A                     
  8259                           ; BSR set to: 0
  8260                           ;MOTEapp.c: 763: if ( (changeStates) || (selectButton) )
  8261                           
  8262                           ; BSR set to: 0
  8263  000A3A  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8264  000A3C  A4D8               	btfss	status,2,c
  8265  000A3E  D003               	goto	u9910
  8266                           
  8267                           ; BSR set to: 0
  8268  000A40  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8269  000A42  B4D8               	btfsc	status,2,c
  8270  000A44  0012               	return	
  8271  000A46                     u9910:
  8272                           
  8273                           ; BSR set to: 0
  8274                           ;MOTEapp.c: 764: {
  8275                           ;MOTEapp.c: 765: oled_clear();
  8276                           
  8277                           ; BSR set to: 0
  8278  000A46  EC7E  F030         	call	_oled_clear	;wreg free
  8279                           
  8280                           ;MOTEapp.c: 766: oled_putString(" View Downlink  ",0,0);
  8281  000A4A  0E11               	movlw	low STR_78
  8282  000A4C  0100               	movlb	0	; () banked
  8283  000A4E  6F72               	movwf	oled_putString@string& (0+255),b
  8284  000A50  0E7B               	movlw	high STR_78
  8285  000A52  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8286  000A54  5172               	movf	oled_putString@string& (0+255),w,b
  8287  000A56  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8288  000A58  A4D8               	btfss	status,2,c
  8289  000A5A  0E00               	movlw	low (__mediumconst shr (0+16))
  8290  000A5C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8291  000A5E  0E00               	movlw	0
  8292  000A60  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8293  000A62  0E00               	movlw	0
  8294  000A64  6F76               	movwf	oled_putString@start_page& (0+255),b
  8295  000A66  EC14  F029         	call	_oled_putString	;wreg free
  8296                           
  8297                           ;MOTEapp.c: 767: oled_putString("  Last Message  ",0,1);
  8298  000A6A  0E00               	movlw	low STR_79
  8299  000A6C  0100               	movlb	0	; () banked
  8300  000A6E  6F72               	movwf	oled_putString@string& (0+255),b
  8301  000A70  0E7B               	movlw	high STR_79
  8302  000A72  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8303  000A74  5172               	movf	oled_putString@string& (0+255),w,b
  8304  000A76  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8305  000A78  A4D8               	btfss	status,2,c
  8306  000A7A  0E00               	movlw	low (__mediumconst shr (0+16))
  8307  000A7C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8308  000A7E  0E00               	movlw	0
  8309  000A80  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8310  000A82  0E01               	movlw	1
  8311  000A84  6F76               	movwf	oled_putString@start_page& (0+255),b
  8312  000A86  EC14  F029         	call	_oled_putString	;wreg free
  8313                           
  8314                           ;MOTEapp.c: 768: oled_putString("(NAV)    (SEL) ",0,3);
  8315  000A8A  0E84               	movlw	low STR_77
  8316  000A8C  0100               	movlb	0	; () banked
  8317  000A8E  6F72               	movwf	oled_putString@string& (0+255),b
  8318  000A90  0E7C               	movlw	high STR_77
  8319  000A92  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8320  000A94  5172               	movf	oled_putString@string& (0+255),w,b
  8321  000A96  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8322  000A98  A4D8               	btfss	status,2,c
  8323  000A9A  0E00               	movlw	low (__mediumconst shr (0+16))
  8324  000A9C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8325  000A9E  0E00               	movlw	0
  8326  000AA0  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8327  000AA2  0E03               	movlw	3
  8328  000AA4  6F76               	movwf	oled_putString@start_page& (0+255),b
  8329  000AA6  EC14  F029         	call	_oled_putString	;wreg free
  8330                           
  8331                           ;MOTEapp.c: 769: runningState = runningDownlink;
  8332  000AAA  0E0A               	movlw	10
  8333  000AAC  0100               	movlb	0	; () banked
  8334  000AAE  6FF3               	movwf	_runningState& (0+255),b
  8335                           
  8336                           ; BSR set to: 0
  8337                           ;MOTEapp.c: 770: }
  8338                           ;MOTEapp.c: 771: break;
  8339  000AB0  0012               	return	
  8340  000AB2                     
  8341                           ; BSR set to: 0
  8342                           ;MOTEapp.c: 773: if (changeStates)
  8343                           
  8344                           ; BSR set to: 0
  8345  000AB2  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8346  000AB4  B4D8               	btfsc	status,2,c
  8347  000AB6  D04A               	goto	l533
  8348                           
  8349                           ; BSR set to: 0
  8350                           ;MOTEapp.c: 774: {
  8351                           ;MOTEapp.c: 775: oled_clear();
  8352  000AB8  EC7E  F030         	call	_oled_clear	;wreg free
  8353                           
  8354                           ;MOTEapp.c: 776: oled_putString("Menu Has Timeout",0,0);
  8355  000ABC  0E21               	movlw	low STR_111
  8356  000ABE  0100               	movlb	0	; () banked
  8357  000AC0  6F72               	movwf	oled_putString@string& (0+255),b
  8358  000AC2  0E7C               	movlw	high STR_111
  8359  000AC4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8360  000AC6  5172               	movf	oled_putString@string& (0+255),w,b
  8361  000AC8  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8362  000ACA  A4D8               	btfss	status,2,c
  8363  000ACC  0E00               	movlw	low (__mediumconst shr (0+16))
  8364  000ACE  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8365  000AD0  0E00               	movlw	0
  8366  000AD2  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8367  000AD4  0E00               	movlw	0
  8368  000AD6  6F76               	movwf	oled_putString@start_page& (0+255),b
  8369  000AD8  EC14  F029         	call	_oled_putString	;wreg free
  8370                           
  8371                           ;MOTEapp.c: 777: if (menuTimeout)
  8372  000ADC  0100               	movlb	0	; () banked
  8373  000ADE  51FB               	movf	_menuTimeout& (0+255),w,b
  8374  000AE0  B4D8               	btfsc	status,2,c
  8375  000AE2  D010               	goto	l534
  8376                           
  8377                           ; BSR set to: 0
  8378                           ;MOTEapp.c: 778: oled_putString("    Enabled   ", 0,2);
  8379  000AE4  0ED4               	movlw	low STR_112
  8380  000AE6  6F72               	movwf	oled_putString@string& (0+255),b
  8381  000AE8  0E7C               	movlw	high STR_112
  8382  000AEA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8383  000AEC  5172               	movf	oled_putString@string& (0+255),w,b
  8384  000AEE  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8385  000AF0  A4D8               	btfss	status,2,c
  8386  000AF2  0E00               	movlw	low (__mediumconst shr (0+16))
  8387  000AF4  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8388  000AF6  0E00               	movlw	0
  8389  000AF8  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8390  000AFA  0E02               	movlw	2
  8391  000AFC  6F76               	movwf	oled_putString@start_page& (0+255),b
  8392  000AFE  EC14  F029         	call	_oled_putString	;wreg free
  8393  000B02  D010               	goto	l535
  8394  000B04                     l534:
  8395                           
  8396                           ;MOTEapp.c: 779: else
  8397                           ;MOTEapp.c: 780: oled_putString("    Disabled  ", 0,2);
  8398  000B04  0EE3               	movlw	low STR_113
  8399  000B06  0100               	movlb	0	; () banked
  8400  000B08  6F72               	movwf	oled_putString@string& (0+255),b
  8401  000B0A  0E7C               	movlw	high STR_113
  8402  000B0C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8403  000B0E  5172               	movf	oled_putString@string& (0+255),w,b
  8404  000B10  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8405  000B12  A4D8               	btfss	status,2,c
  8406  000B14  0E00               	movlw	low (__mediumconst shr (0+16))
  8407  000B16  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8408  000B18  0E00               	movlw	0
  8409  000B1A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8410  000B1C  0E02               	movlw	2
  8411  000B1E  6F76               	movwf	oled_putString@start_page& (0+255),b
  8412  000B20  EC14  F029         	call	_oled_putString	;wreg free
  8413  000B24                     l535:
  8414                           
  8415                           ;MOTEapp.c: 781: oled_putString("(NAV)    (CNG) ",0,3);
  8416  000B24  0E74               	movlw	low STR_114
  8417  000B26  0100               	movlb	0	; () banked
  8418  000B28  6F72               	movwf	oled_putString@string& (0+255),b
  8419  000B2A  0E7C               	movlw	high STR_114
  8420  000B2C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8421  000B2E  5172               	movf	oled_putString@string& (0+255),w,b
  8422  000B30  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8423  000B32  A4D8               	btfss	status,2,c
  8424  000B34  0E00               	movlw	low (__mediumconst shr (0+16))
  8425  000B36  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8426  000B38  0E00               	movlw	0
  8427  000B3A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8428  000B3C  0E03               	movlw	3
  8429  000B3E  6F76               	movwf	oled_putString@start_page& (0+255),b
  8430  000B40  EC14  F029         	call	_oled_putString	;wreg free
  8431                           
  8432                           ;MOTEapp.c: 782: runningState = runningMenuTimeout;
  8433  000B44  0E0C               	movlw	12
  8434  000B46  0100               	movlb	0	; () banked
  8435  000B48  6FF3               	movwf	_runningState& (0+255),b
  8436                           
  8437                           ;MOTEapp.c: 783: }
  8438  000B4A  0012               	return	
  8439  000B4C                     l533:
  8440                           
  8441                           ; BSR set to: 0
  8442                           ;MOTEapp.c: 784: else if (selectButton)
  8443                           
  8444                           ; BSR set to: 0
  8445  000B4C  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8446  000B4E  B4D8               	btfsc	status,2,c
  8447  000B50  0012               	return	
  8448                           
  8449                           ; BSR set to: 0
  8450                           ;MOTEapp.c: 785: {
  8451                           ;MOTEapp.c: 786: oled_clear();
  8452  000B52  EC7E  F030         	call	_oled_clear	;wreg free
  8453                           
  8454                           ;MOTEapp.c: 787: oled_putString("  Sensor Data  ",0,0);
  8455  000B56  0E64               	movlw	low STR_102
  8456  000B58  0100               	movlb	0	; () banked
  8457  000B5A  6F72               	movwf	oled_putString@string& (0+255),b
  8458  000B5C  0E7C               	movlw	high STR_102
  8459  000B5E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8460  000B60  5172               	movf	oled_putString@string& (0+255),w,b
  8461  000B62  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8462  000B64  A4D8               	btfss	status,2,c
  8463  000B66  0E00               	movlw	low (__mediumconst shr (0+16))
  8464  000B68  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8465  000B6A  0E00               	movlw	0
  8466  000B6C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8467  000B6E  0E00               	movlw	0
  8468  000B70  6F76               	movwf	oled_putString@start_page& (0+255),b
  8469  000B72  EC14  F029         	call	_oled_putString	;wreg free
  8470                           
  8471                           ;MOTEapp.c: 788: oled_putString("Light:",0,1);
  8472  000B76  0E81               	movlw	low STR_116
  8473  000B78  0100               	movlb	0	; () banked
  8474  000B7A  6F72               	movwf	oled_putString@string& (0+255),b
  8475  000B7C  0E7F               	movlw	high STR_116
  8476  000B7E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8477  000B80  5172               	movf	oled_putString@string& (0+255),w,b
  8478  000B82  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8479  000B84  A4D8               	btfss	status,2,c
  8480  000B86  0E00               	movlw	low (__mediumconst shr (0+16))
  8481  000B88  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8482  000B8A  0E00               	movlw	0
  8483  000B8C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8484  000B8E  0E01               	movlw	1
  8485  000B90  6F76               	movwf	oled_putString@start_page& (0+255),b
  8486  000B92  EC14  F029         	call	_oled_putString	;wreg free
  8487                           
  8488                           ;MOTEapp.c: 789: oled_putString("Temp :",0,2);
  8489  000B96  0E7A               	movlw	low STR_117
  8490  000B98  0100               	movlb	0	; () banked
  8491  000B9A  6F72               	movwf	oled_putString@string& (0+255),b
  8492  000B9C  0E7F               	movlw	high STR_117
  8493  000B9E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8494  000BA0  5172               	movf	oled_putString@string& (0+255),w,b
  8495  000BA2  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8496  000BA4  A4D8               	btfss	status,2,c
  8497  000BA6  0E00               	movlw	low (__mediumconst shr (0+16))
  8498  000BA8  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8499  000BAA  0E00               	movlw	0
  8500  000BAC  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8501  000BAE  0E02               	movlw	2
  8502  000BB0  6F76               	movwf	oled_putString@start_page& (0+255),b
  8503  000BB2  EC14  F029         	call	_oled_putString	;wreg free
  8504                           
  8505                           ;MOTEapp.c: 790: oled_putString("C",10,2);
  8506  000BB6  0EFB               	movlw	low STR_118
  8507  000BB8  0100               	movlb	0	; () banked
  8508  000BBA  6F72               	movwf	oled_putString@string& (0+255),b
  8509  000BBC  0E7F               	movlw	high STR_118
  8510  000BBE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8511  000BC0  5172               	movf	oled_putString@string& (0+255),w,b
  8512  000BC2  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8513  000BC4  A4D8               	btfss	status,2,c
  8514  000BC6  0E00               	movlw	low (__mediumconst shr (0+16))
  8515  000BC8  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8516  000BCA  0E0A               	movlw	10
  8517  000BCC  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8518  000BCE  0E02               	movlw	2
  8519  000BD0  6F76               	movwf	oled_putString@start_page& (0+255),b
  8520  000BD2  EC14  F029         	call	_oled_putString	;wreg free
  8521                           
  8522                           ;MOTEapp.c: 792: moteApp_setSensorsInput();
  8523  000BD6  ECD8  F028         	call	_moteApp_setSensorsInput	;wreg free
  8524                           
  8525                           ;MOTEapp.c: 793: runningState = runningSensorMenu;
  8526  000BDA  0E02               	movlw	2
  8527  000BDC  0100               	movlb	0	; () banked
  8528  000BDE  6FF3               	movwf	_runningState& (0+255),b
  8529                           
  8530                           ; BSR set to: 0
  8531                           ;MOTEapp.c: 794: }
  8532                           ;MOTEapp.c: 795: break;
  8533                           
  8534                           ; BSR set to: 0
  8535  000BE0  0012               	return	
  8536  000BE2                     
  8537                           ; BSR set to: 0
  8538                           ;MOTEapp.c: 797: if (changeStates)
  8539                           
  8540                           ; BSR set to: 0
  8541  000BE2  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8542  000BE4  B4D8               	btfsc	status,2,c
  8543  000BE6  D0D2               	goto	l539
  8544                           
  8545                           ; BSR set to: 0
  8546                           ;MOTEapp.c: 798: {
  8547                           ;MOTEapp.c: 799: oled_clear();
  8548  000BE8  EC7E  F030         	call	_oled_clear	;wreg free
  8549                           
  8550                           ;MOTEapp.c: 800: oled_putString("Periodic Uplink ",0,0);
  8551  000BEC  0E77               	movlw	low STR_119
  8552  000BEE  0100               	movlb	0	; () banked
  8553  000BF0  6F72               	movwf	oled_putString@string& (0+255),b
  8554  000BF2  0E7B               	movlw	high STR_119
  8555  000BF4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8556  000BF6  5172               	movf	oled_putString@string& (0+255),w,b
  8557  000BF8  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8558  000BFA  A4D8               	btfss	status,2,c
  8559  000BFC  0E00               	movlw	low (__mediumconst shr (0+16))
  8560  000BFE  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8561  000C00  0E00               	movlw	0
  8562  000C02  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8563  000C04  0E00               	movlw	0
  8564  000C06  6F76               	movwf	oled_putString@start_page& (0+255),b
  8565  000C08  EC14  F029         	call	_oled_putString	;wreg free
  8566                           
  8567                           ;MOTEapp.c: 801: oled_putString("Tx Event Timing ",0,1);
  8568  000C0C  0E66               	movlw	low STR_120
  8569  000C0E  0100               	movlb	0	; () banked
  8570  000C10  6F72               	movwf	oled_putString@string& (0+255),b
  8571  000C12  0E7B               	movlw	high STR_120
  8572  000C14  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8573  000C16  5172               	movf	oled_putString@string& (0+255),w,b
  8574  000C18  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8575  000C1A  A4D8               	btfss	status,2,c
  8576  000C1C  0E00               	movlw	low (__mediumconst shr (0+16))
  8577  000C1E  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8578  000C20  0E00               	movlw	0
  8579  000C22  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8580  000C24  0E01               	movlw	1
  8581  000C26  6F76               	movwf	oled_putString@start_page& (0+255),b
  8582  000C28  EC14  F029         	call	_oled_putString	;wreg free
  8583                           
  8584                           ;MOTEapp.c: 802: oled_putString("Every:",0,2);
  8585  000C2C  0E88               	movlw	low STR_121
  8586  000C2E  0100               	movlb	0	; () banked
  8587  000C30  6F72               	movwf	oled_putString@string& (0+255),b
  8588  000C32  0E7F               	movlw	high STR_121
  8589  000C34  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8590  000C36  5172               	movf	oled_putString@string& (0+255),w,b
  8591  000C38  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8592  000C3A  A4D8               	btfss	status,2,c
  8593  000C3C  0E00               	movlw	low (__mediumconst shr (0+16))
  8594  000C3E  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8595  000C40  0E00               	movlw	0
  8596  000C42  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8597  000C44  0E02               	movlw	2
  8598  000C46  6F76               	movwf	oled_putString@start_page& (0+255),b
  8599  000C48  EC14  F029         	call	_oled_putString	;wreg free
  8600                           
  8601                           ;MOTEapp.c: 803: oled_putString("Mins",12,2);
  8602  000C4C  0EC3               	movlw	low STR_122
  8603  000C4E  0100               	movlb	0	; () banked
  8604  000C50  6F72               	movwf	oled_putString@string& (0+255),b
  8605  000C52  0E7F               	movlw	high STR_122
  8606  000C54  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8607  000C56  5172               	movf	oled_putString@string& (0+255),w,b
  8608  000C58  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8609  000C5A  A4D8               	btfss	status,2,c
  8610  000C5C  0E00               	movlw	low (__mediumconst shr (0+16))
  8611  000C5E  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8612  000C60  0E0C               	movlw	12
  8613  000C62  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8614  000C64  0E02               	movlw	2
  8615  000C66  6F76               	movwf	oled_putString@start_page& (0+255),b
  8616  000C68  EC14  F029         	call	_oled_putString	;wreg free
  8617                           
  8618                           ;MOTEapp.c: 805: switch (periodicUpValue)
  8619  000C6C  D066               	goto	l540
  8620  000C6E                     
  8621                           ;MOTEapp.c: 809: oled_putString("5",7,2);
  8622                           
  8623                           ;MOTEapp.c: 808: case 0:
  8624  000C6E  0ECC               	movlw	low (STR_169+11)
  8625  000C70  0100               	movlb	0	; () banked
  8626  000C72  6F72               	movwf	oled_putString@string& (0+255),b
  8627  000C74  0E7D               	movlw	high (STR_169+11)
  8628  000C76  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8629  000C78  5172               	movf	oled_putString@string& (0+255),w,b
  8630  000C7A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8631  000C7C  A4D8               	btfss	status,2,c
  8632  000C7E  0E00               	movlw	low (__mediumconst shr (0+16))
  8633  000C80  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8634  000C82  0E07               	movlw	7
  8635  000C84  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8636  000C86  0E02               	movlw	2
  8637  000C88  6F76               	movwf	oled_putString@start_page& (0+255),b
  8638  000C8A  EC14  F029         	call	_oled_putString	;wreg free
  8639                           
  8640                           ;MOTEapp.c: 810: break;
  8641  000C8E  D06A               	goto	l543
  8642  000C90                     
  8643                           ;MOTEapp.c: 812: oled_putString("10",7,2);
  8644  000C90  0EE1               	movlw	low (STR_146+1)
  8645  000C92  0100               	movlb	0	; () banked
  8646  000C94  6F72               	movwf	oled_putString@string& (0+255),b
  8647  000C96  0E7F               	movlw	high (STR_146+1)
  8648  000C98  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8649  000C9A  5172               	movf	oled_putString@string& (0+255),w,b
  8650  000C9C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8651  000C9E  A4D8               	btfss	status,2,c
  8652  000CA0  0E00               	movlw	low (__mediumconst shr (0+16))
  8653  000CA2  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8654  000CA4  0E07               	movlw	7
  8655  000CA6  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8656  000CA8  0E02               	movlw	2
  8657  000CAA  6F76               	movwf	oled_putString@start_page& (0+255),b
  8658  000CAC  EC14  F029         	call	_oled_putString	;wreg free
  8659                           
  8660                           ;MOTEapp.c: 813: break;
  8661  000CB0  D059               	goto	l543
  8662  000CB2                     
  8663                           ;MOTEapp.c: 815: oled_putString("15",7,2);
  8664  000CB2  0EED               	movlw	low (STR_147+1)
  8665  000CB4  0100               	movlb	0	; () banked
  8666  000CB6  6F72               	movwf	oled_putString@string& (0+255),b
  8667  000CB8  0E7F               	movlw	high (STR_147+1)
  8668  000CBA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8669  000CBC  5172               	movf	oled_putString@string& (0+255),w,b
  8670  000CBE  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8671  000CC0  A4D8               	btfss	status,2,c
  8672  000CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  8673  000CC4  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8674  000CC6  0E07               	movlw	7
  8675  000CC8  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8676  000CCA  0E02               	movlw	2
  8677  000CCC  6F76               	movwf	oled_putString@start_page& (0+255),b
  8678  000CCE  EC14  F029         	call	_oled_putString	;wreg free
  8679                           
  8680                           ;MOTEapp.c: 816: break;
  8681  000CD2  D048               	goto	l543
  8682  000CD4                     
  8683                           ;MOTEapp.c: 818: oled_putString("30",7,2);
  8684  000CD4  0EE5               	movlw	low (STR_148+1)
  8685  000CD6  0100               	movlb	0	; () banked
  8686  000CD8  6F72               	movwf	oled_putString@string& (0+255),b
  8687  000CDA  0E7F               	movlw	high (STR_148+1)
  8688  000CDC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8689  000CDE  5172               	movf	oled_putString@string& (0+255),w,b
  8690  000CE0  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8691  000CE2  A4D8               	btfss	status,2,c
  8692  000CE4  0E00               	movlw	low (__mediumconst shr (0+16))
  8693  000CE6  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8694  000CE8  0E07               	movlw	7
  8695  000CEA  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8696  000CEC  0E02               	movlw	2
  8697  000CEE  6F76               	movwf	oled_putString@start_page& (0+255),b
  8698  000CF0  EC14  F029         	call	_oled_putString	;wreg free
  8699                           
  8700                           ;MOTEapp.c: 819: break;
  8701  000CF4  D037               	goto	l543
  8702  000CF6                     
  8703                           ;MOTEapp.c: 821: oled_putString("60",7,2);
  8704  000CF6  0EE9               	movlw	low (STR_149+1)
  8705  000CF8  0100               	movlb	0	; () banked
  8706  000CFA  6F72               	movwf	oled_putString@string& (0+255),b
  8707  000CFC  0E7F               	movlw	high (STR_149+1)
  8708  000CFE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8709  000D00  5172               	movf	oled_putString@string& (0+255),w,b
  8710  000D02  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8711  000D04  A4D8               	btfss	status,2,c
  8712  000D06  0E00               	movlw	low (__mediumconst shr (0+16))
  8713  000D08  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8714  000D0A  0E07               	movlw	7
  8715  000D0C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8716  000D0E  0E02               	movlw	2
  8717  000D10  6F76               	movwf	oled_putString@start_page& (0+255),b
  8718  000D12  EC14  F029         	call	_oled_putString	;wreg free
  8719                           
  8720                           ;MOTEapp.c: 822: break;
  8721  000D16  D026               	goto	l543
  8722  000D18                     
  8723                           ;MOTEapp.c: 824: oled_putString("OFF",7,2);
  8724  000D18  0EF0               	movlw	low STR_128
  8725  000D1A  0100               	movlb	0	; () banked
  8726  000D1C  6F72               	movwf	oled_putString@string& (0+255),b
  8727  000D1E  0E7F               	movlw	high STR_128
  8728  000D20  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8729  000D22  5172               	movf	oled_putString@string& (0+255),w,b
  8730  000D24  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8731  000D26  A4D8               	btfss	status,2,c
  8732  000D28  0E00               	movlw	low (__mediumconst shr (0+16))
  8733  000D2A  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8734  000D2C  0E07               	movlw	7
  8735  000D2E  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8736  000D30  0E02               	movlw	2
  8737  000D32  6F76               	movwf	oled_putString@start_page& (0+255),b
  8738  000D34  EC14  F029         	call	_oled_putString	;wreg free
  8739                           
  8740                           ;MOTEapp.c: 826: }
  8741                           
  8742                           ;MOTEapp.c: 825: break;
  8743  000D38  D015               	goto	l543
  8744  000D3A                     l540:
  8745  000D3A  0100               	movlb	0	; () banked
  8746  000D3C  51FE               	movf	_periodicUpValue& (0+255),w,b
  8747                           
  8748                           ; Switch size 1, requested type "space"
  8749                           ; Number of cases is 6, Range of values is 0 to 5
  8750                           ; switch strategies available:
  8751                           ; Name         Instructions Cycles
  8752                           ; simple_byte           19    10 (average)
  8753                           ;	Chosen strategy is simple_byte
  8754  000D3E  0A00               	xorlw	0	; case 0
  8755  000D40  B4D8               	btfsc	status,2,c
  8756  000D42  D795               	goto	l541
  8757  000D44  0A01               	xorlw	1	; case 1
  8758  000D46  B4D8               	btfsc	status,2,c
  8759  000D48  D7A3               	goto	l544
  8760  000D4A  0A03               	xorlw	3	; case 2
  8761  000D4C  B4D8               	btfsc	status,2,c
  8762  000D4E  D7B1               	goto	l545
  8763  000D50  0A01               	xorlw	1	; case 3
  8764  000D52  B4D8               	btfsc	status,2,c
  8765  000D54  D7BF               	goto	l546
  8766  000D56  0A07               	xorlw	7	; case 4
  8767  000D58  B4D8               	btfsc	status,2,c
  8768  000D5A  D7CD               	goto	l547
  8769  000D5C  0A01               	xorlw	1	; case 5
  8770  000D5E  B4D8               	btfsc	status,2,c
  8771  000D60  D7DB               	goto	l548
  8772  000D62  D785               	goto	l541
  8773  000D64                     l543:
  8774                           
  8775                           ;MOTEapp.c: 827: oled_putString("(NAV)    (CNG) ",0,3);
  8776                           
  8777                           ; BSR set to: 0
  8778  000D64  0E74               	movlw	low STR_114
  8779  000D66  0100               	movlb	0	; () banked
  8780  000D68  6F72               	movwf	oled_putString@string& (0+255),b
  8781  000D6A  0E7C               	movlw	high STR_114
  8782  000D6C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8783  000D6E  5172               	movf	oled_putString@string& (0+255),w,b
  8784  000D70  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8785  000D72  A4D8               	btfss	status,2,c
  8786  000D74  0E00               	movlw	low (__mediumconst shr (0+16))
  8787  000D76  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8788  000D78  0E00               	movlw	0
  8789  000D7A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8790  000D7C  0E03               	movlw	3
  8791  000D7E  6F76               	movwf	oled_putString@start_page& (0+255),b
  8792  000D80  EC14  F029         	call	_oled_putString	;wreg free
  8793                           
  8794                           ;MOTEapp.c: 828: runningState = runningPeriodicWakeUpLength;
  8795  000D84  0E0D               	movlw	13
  8796  000D86  0100               	movlb	0	; () banked
  8797  000D88  6FF3               	movwf	_runningState& (0+255),b
  8798                           
  8799                           ;MOTEapp.c: 829: }
  8800  000D8A  0012               	return	
  8801  000D8C                     l539:
  8802                           
  8803                           ; BSR set to: 0
  8804                           ;MOTEapp.c: 830: else if (selectButton)
  8805                           
  8806                           ; BSR set to: 0
  8807  000D8C  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8808  000D8E  B4D8               	btfsc	status,2,c
  8809  000D90  0012               	return	
  8810                           
  8811                           ; BSR set to: 0
  8812                           ;MOTEapp.c: 831: {
  8813                           ;MOTEapp.c: 832: if (menuTimeout)
  8814  000D92  51FB               	movf	_menuTimeout& (0+255),w,b
  8815  000D94  B4D8               	btfsc	status,2,c
  8816  000D96  D012               	goto	l551
  8817                           
  8818                           ; BSR set to: 0
  8819                           ;MOTEapp.c: 833: {
  8820                           ;MOTEapp.c: 834: menuTimeout = 0;
  8821  000D98  0E00               	movlw	0
  8822  000D9A  6FFB               	movwf	_menuTimeout& (0+255),b
  8823                           
  8824                           ; BSR set to: 0
  8825                           ;MOTEapp.c: 835: oled_putString("    Disabled  ", 0,2);
  8826  000D9C  0EE3               	movlw	low STR_113
  8827  000D9E  6F72               	movwf	oled_putString@string& (0+255),b
  8828  000DA0  0E7C               	movlw	high STR_113
  8829  000DA2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8830  000DA4  5172               	movf	oled_putString@string& (0+255),w,b
  8831  000DA6  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8832  000DA8  A4D8               	btfss	status,2,c
  8833  000DAA  0E00               	movlw	low (__mediumconst shr (0+16))
  8834  000DAC  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8835  000DAE  0E00               	movlw	0
  8836  000DB0  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8837  000DB2  0E02               	movlw	2
  8838  000DB4  6F76               	movwf	oled_putString@start_page& (0+255),b
  8839  000DB6  EC14  F029         	call	_oled_putString	;wreg free
  8840                           
  8841                           ;MOTEapp.c: 836: }
  8842  000DBA  0012               	return	
  8843  000DBC                     l551:
  8844                           
  8845                           ;MOTEapp.c: 837: else
  8846                           ;MOTEapp.c: 838: {
  8847                           ;MOTEapp.c: 839: menuTimeout = 1;
  8848  000DBC  0E01               	movlw	1
  8849  000DBE  0100               	movlb	0	; () banked
  8850  000DC0  6FFB               	movwf	_menuTimeout& (0+255),b
  8851                           
  8852                           ; BSR set to: 0
  8853                           ;MOTEapp.c: 840: oled_putString("    Enabled   ", 0,2);
  8854  000DC2  0ED4               	movlw	low STR_112
  8855  000DC4  6F72               	movwf	oled_putString@string& (0+255),b
  8856  000DC6  0E7C               	movlw	high STR_112
  8857  000DC8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8858  000DCA  5172               	movf	oled_putString@string& (0+255),w,b
  8859  000DCC  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8860  000DCE  A4D8               	btfss	status,2,c
  8861  000DD0  0E00               	movlw	low (__mediumconst shr (0+16))
  8862  000DD2  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8863  000DD4  0E00               	movlw	0
  8864  000DD6  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8865  000DD8  0E02               	movlw	2
  8866  000DDA  6F76               	movwf	oled_putString@start_page& (0+255),b
  8867  000DDC  EC14  F029         	call	_oled_putString	;wreg free
  8868                           
  8869                           ;MOTEapp.c: 841: }
  8870                           ;MOTEapp.c: 842: }
  8871                           ;MOTEapp.c: 843: break;
  8872  000DE0  0012               	return	
  8873  000DE2                     
  8874                           ;MOTEapp.c: 846: if ( (changeStates) || (selectButton) )
  8875  000DE2  0100               	movlb	0	; () banked
  8876  000DE4  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8877  000DE6  A4D8               	btfss	status,2,c
  8878  000DE8  D003               	goto	u9990
  8879                           
  8880                           ; BSR set to: 0
  8881  000DEA  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8882  000DEC  B4D8               	btfsc	status,2,c
  8883  000DEE  0012               	return	
  8884  000DF0                     u9990:
  8885                           
  8886                           ; BSR set to: 0
  8887                           ;MOTEapp.c: 847: {
  8888                           ;MOTEapp.c: 848: oled_clear();
  8889                           
  8890                           ; BSR set to: 0
  8891  000DF0  EC7E  F030         	call	_oled_clear	;wreg free
  8892                           
  8893                           ;MOTEapp.c: 849: oled_putString("  Sensor Data  ",0,0);
  8894  000DF4  0E64               	movlw	low STR_102
  8895  000DF6  0100               	movlb	0	; () banked
  8896  000DF8  6F72               	movwf	oled_putString@string& (0+255),b
  8897  000DFA  0E7C               	movlw	high STR_102
  8898  000DFC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8899  000DFE  5172               	movf	oled_putString@string& (0+255),w,b
  8900  000E00  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8901  000E02  A4D8               	btfss	status,2,c
  8902  000E04  0E00               	movlw	low (__mediumconst shr (0+16))
  8903  000E06  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8904  000E08  0E00               	movlw	0
  8905  000E0A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8906  000E0C  0E00               	movlw	0
  8907  000E0E  6F76               	movwf	oled_putString@start_page& (0+255),b
  8908  000E10  EC14  F029         	call	_oled_putString	;wreg free
  8909                           
  8910                           ;MOTEapp.c: 850: oled_putString("    Display    ",0,1);
  8911  000E14  0E54               	movlw	low STR_103
  8912  000E16  0100               	movlb	0	; () banked
  8913  000E18  6F72               	movwf	oled_putString@string& (0+255),b
  8914  000E1A  0E7C               	movlw	high STR_103
  8915  000E1C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8916  000E1E  5172               	movf	oled_putString@string& (0+255),w,b
  8917  000E20  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8918  000E22  A4D8               	btfss	status,2,c
  8919  000E24  0E00               	movlw	low (__mediumconst shr (0+16))
  8920  000E26  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8921  000E28  0E00               	movlw	0
  8922  000E2A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8923  000E2C  0E01               	movlw	1
  8924  000E2E  6F76               	movwf	oled_putString@start_page& (0+255),b
  8925  000E30  EC14  F029         	call	_oled_putString	;wreg free
  8926                           
  8927                           ;MOTEapp.c: 851: oled_putString("(NAV)    (SEL) ",0,3);
  8928  000E34  0E84               	movlw	low STR_77
  8929  000E36  0100               	movlb	0	; () banked
  8930  000E38  6F72               	movwf	oled_putString@string& (0+255),b
  8931  000E3A  0E7C               	movlw	high STR_77
  8932  000E3C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8933  000E3E  5172               	movf	oled_putString@string& (0+255),w,b
  8934  000E40  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8935  000E42  A4D8               	btfss	status,2,c
  8936  000E44  0E00               	movlw	low (__mediumconst shr (0+16))
  8937  000E46  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8938  000E48  0E00               	movlw	0
  8939  000E4A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8940  000E4C  0E03               	movlw	3
  8941  000E4E  6F76               	movwf	oled_putString@start_page& (0+255),b
  8942  000E50  EC14  F029         	call	_oled_putString	;wreg free
  8943                           
  8944                           ;MOTEapp.c: 852: runningState = runningSensor;
  8945  000E54  0E01               	movlw	1
  8946  000E56  0100               	movlb	0	; () banked
  8947  000E58  6FF3               	movwf	_runningState& (0+255),b
  8948                           
  8949                           ; BSR set to: 0
  8950                           ;MOTEapp.c: 853: }
  8951                           ;MOTEapp.c: 854: break;
  8952  000E5A  0012               	return	
  8953  000E5C                     
  8954                           ; BSR set to: 0
  8955                           ;MOTEapp.c: 856: if (changeStates)
  8956                           
  8957                           ; BSR set to: 0
  8958  000E5C  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8959  000E5E  B4D8               	btfsc	status,2,c
  8960  000E60  D0C4               	goto	l562
  8961                           
  8962                           ; BSR set to: 0
  8963                           ;MOTEapp.c: 857: {
  8964                           ;MOTEapp.c: 858: oled_clear();
  8965  000E62  EC7E  F030         	call	_oled_clear	;wreg free
  8966                           
  8967                           ;MOTEapp.c: 859: oled_putString("Select Data Rate",0,0);
  8968  000E66  0EEE               	movlw	low STR_135
  8969  000E68  0100               	movlb	0	; () banked
  8970  000E6A  6F72               	movwf	oled_putString@string& (0+255),b
  8971  000E6C  0E7B               	movlw	high STR_135
  8972  000E6E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8973  000E70  5172               	movf	oled_putString@string& (0+255),w,b
  8974  000E72  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8975  000E74  A4D8               	btfss	status,2,c
  8976  000E76  0E00               	movlw	low (__mediumconst shr (0+16))
  8977  000E78  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8978  000E7A  0E00               	movlw	0
  8979  000E7C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8980  000E7E  0E00               	movlw	0
  8981  000E80  6F76               	movwf	oled_putString@start_page& (0+255),b
  8982  000E82  EC14  F029         	call	_oled_putString	;wreg free
  8983                           
  8984                           ;MOTEapp.c: 860: oled_putString("Data Rate: ",0,2);
  8985  000E86  0E59               	movlw	low STR_136
  8986  000E88  0100               	movlb	0	; () banked
  8987  000E8A  6F72               	movwf	oled_putString@string& (0+255),b
  8988  000E8C  0E7E               	movlw	high STR_136
  8989  000E8E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8990  000E90  5172               	movf	oled_putString@string& (0+255),w,b
  8991  000E92  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8992  000E94  A4D8               	btfss	status,2,c
  8993  000E96  0E00               	movlw	low (__mediumconst shr (0+16))
  8994  000E98  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8995  000E9A  0E00               	movlw	0
  8996  000E9C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8997  000E9E  0E02               	movlw	2
  8998  000EA0  6F76               	movwf	oled_putString@start_page& (0+255),b
  8999  000EA2  EC14  F029         	call	_oled_putString	;wreg free
  9000                           
  9001                           ;MOTEapp.c: 861: oled_putString("(NAV)    (CNG) ",0,3);
  9002  000EA6  0E74               	movlw	low STR_114
  9003  000EA8  0100               	movlb	0	; () banked
  9004  000EAA  6F72               	movwf	oled_putString@string& (0+255),b
  9005  000EAC  0E7C               	movlw	high STR_114
  9006  000EAE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9007  000EB0  5172               	movf	oled_putString@string& (0+255),w,b
  9008  000EB2  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9009  000EB4  A4D8               	btfss	status,2,c
  9010  000EB6  0E00               	movlw	low (__mediumconst shr (0+16))
  9011  000EB8  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9012  000EBA  0E00               	movlw	0
  9013  000EBC  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9014  000EBE  0E03               	movlw	3
  9015  000EC0  6F76               	movwf	oled_putString@start_page& (0+255),b
  9016  000EC2  EC14  F029         	call	_oled_putString	;wreg free
  9017                           
  9018                           ;MOTEapp.c: 862: runningState = runningDataRateDisplay;
  9019  000EC6  0E03               	movlw	3
  9020  000EC8  0100               	movlb	0	; () banked
  9021  000ECA  6FF3               	movwf	_runningState& (0+255),b
  9022                           
  9023                           ;MOTEapp.c: 865: switch (dataRateValue)
  9024  000ECC  D076               	goto	l559
  9025  000ECE                     
  9026                           ; BSR set to: 0
  9027                           ;MOTEapp.c: 869: oled_putString(" 0 ",10,2);
  9028                           
  9029                           ; BSR set to: 0
  9030                           
  9031                           ;MOTEapp.c: 868: case 0:
  9032                           
  9033                           ; BSR set to: 0
  9034  000ECE  0EC8               	movlw	low STR_138
  9035  000ED0  6F72               	movwf	oled_putString@string& (0+255),b
  9036  000ED2  0E7F               	movlw	high STR_138
  9037  000ED4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9038  000ED6  5172               	movf	oled_putString@string& (0+255),w,b
  9039  000ED8  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9040  000EDA  A4D8               	btfss	status,2,c
  9041  000EDC  0E00               	movlw	low (__mediumconst shr (0+16))
  9042  000EDE  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9043  000EE0  0E0A               	movlw	10
  9044  000EE2  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9045  000EE4  0E02               	movlw	2
  9046  000EE6  6F76               	movwf	oled_putString@start_page& (0+255),b
  9047  000EE8  EC14  F029         	call	_oled_putString	;wreg free
  9048                           
  9049                           ;MOTEapp.c: 870: break;
  9050  000EEC  D07E               	goto	l562
  9051  000EEE                     
  9052                           ;MOTEapp.c: 872: oled_putString(" 1 ",10,2);
  9053  000EEE  0ECC               	movlw	low STR_139
  9054  000EF0  0100               	movlb	0	; () banked
  9055  000EF2  6F72               	movwf	oled_putString@string& (0+255),b
  9056  000EF4  0E7F               	movlw	high STR_139
  9057  000EF6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9058  000EF8  5172               	movf	oled_putString@string& (0+255),w,b
  9059  000EFA  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9060  000EFC  A4D8               	btfss	status,2,c
  9061  000EFE  0E00               	movlw	low (__mediumconst shr (0+16))
  9062  000F00  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9063  000F02  0E0A               	movlw	10
  9064  000F04  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9065  000F06  0E02               	movlw	2
  9066  000F08  6F76               	movwf	oled_putString@start_page& (0+255),b
  9067  000F0A  EC14  F029         	call	_oled_putString	;wreg free
  9068                           
  9069                           ;MOTEapp.c: 873: break;
  9070  000F0E  D06D               	goto	l562
  9071  000F10                     
  9072                           ;MOTEapp.c: 875: oled_putString(" 2 ",10,2);
  9073  000F10  0ED0               	movlw	low STR_140
  9074  000F12  0100               	movlb	0	; () banked
  9075  000F14  6F72               	movwf	oled_putString@string& (0+255),b
  9076  000F16  0E7F               	movlw	high STR_140
  9077  000F18  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9078  000F1A  5172               	movf	oled_putString@string& (0+255),w,b
  9079  000F1C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9080  000F1E  A4D8               	btfss	status,2,c
  9081  000F20  0E00               	movlw	low (__mediumconst shr (0+16))
  9082  000F22  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9083  000F24  0E0A               	movlw	10
  9084  000F26  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9085  000F28  0E02               	movlw	2
  9086  000F2A  6F76               	movwf	oled_putString@start_page& (0+255),b
  9087  000F2C  EC14  F029         	call	_oled_putString	;wreg free
  9088                           
  9089                           ;MOTEapp.c: 876: break;
  9090  000F30  D05C               	goto	l562
  9091  000F32                     
  9092                           ;MOTEapp.c: 878: oled_putString(" 3 ",10,2);
  9093  000F32  0ED4               	movlw	low STR_141
  9094  000F34  0100               	movlb	0	; () banked
  9095  000F36  6F72               	movwf	oled_putString@string& (0+255),b
  9096  000F38  0E7F               	movlw	high STR_141
  9097  000F3A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9098  000F3C  5172               	movf	oled_putString@string& (0+255),w,b
  9099  000F3E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9100  000F40  A4D8               	btfss	status,2,c
  9101  000F42  0E00               	movlw	low (__mediumconst shr (0+16))
  9102  000F44  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9103  000F46  0E0A               	movlw	10
  9104  000F48  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9105  000F4A  0E02               	movlw	2
  9106  000F4C  6F76               	movwf	oled_putString@start_page& (0+255),b
  9107  000F4E  EC14  F029         	call	_oled_putString	;wreg free
  9108                           
  9109                           ;MOTEapp.c: 879: break;
  9110  000F52  D04B               	goto	l562
  9111  000F54                     
  9112                           ;MOTEapp.c: 881: oled_putString(" 4 ",10,2);
  9113  000F54  0ED8               	movlw	low STR_142
  9114  000F56  0100               	movlb	0	; () banked
  9115  000F58  6F72               	movwf	oled_putString@string& (0+255),b
  9116  000F5A  0E7F               	movlw	high STR_142
  9117  000F5C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9118  000F5E  5172               	movf	oled_putString@string& (0+255),w,b
  9119  000F60  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9120  000F62  A4D8               	btfss	status,2,c
  9121  000F64  0E00               	movlw	low (__mediumconst shr (0+16))
  9122  000F66  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9123  000F68  0E0A               	movlw	10
  9124  000F6A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9125  000F6C  0E02               	movlw	2
  9126  000F6E  6F76               	movwf	oled_putString@start_page& (0+255),b
  9127  000F70  EC14  F029         	call	_oled_putString	;wreg free
  9128                           
  9129                           ;MOTEapp.c: 882: break;
  9130  000F74  D03A               	goto	l562
  9131  000F76                     
  9132                           ;MOTEapp.c: 884: oled_putString(" 5 ",10,2);
  9133  000F76  0EDC               	movlw	low STR_143
  9134  000F78  0100               	movlb	0	; () banked
  9135  000F7A  6F72               	movwf	oled_putString@string& (0+255),b
  9136  000F7C  0E7F               	movlw	high STR_143
  9137  000F7E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9138  000F80  5172               	movf	oled_putString@string& (0+255),w,b
  9139  000F82  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9140  000F84  A4D8               	btfss	status,2,c
  9141  000F86  0E00               	movlw	low (__mediumconst shr (0+16))
  9142  000F88  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9143  000F8A  0E0A               	movlw	10
  9144  000F8C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9145  000F8E  0E02               	movlw	2
  9146  000F90  6F76               	movwf	oled_putString@start_page& (0+255),b
  9147  000F92  EC14  F029         	call	_oled_putString	;wreg free
  9148                           
  9149                           ;MOTEapp.c: 885: break;
  9150  000F96  D029               	goto	l562
  9151  000F98                     
  9152                           ;MOTEapp.c: 887: oled_putString("ADR",10,2);
  9153  000F98  0EF4               	movlw	low STR_144
  9154  000F9A  0100               	movlb	0	; () banked
  9155  000F9C  6F72               	movwf	oled_putString@string& (0+255),b
  9156  000F9E  0E7F               	movlw	high STR_144
  9157  000FA0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9158  000FA2  5172               	movf	oled_putString@string& (0+255),w,b
  9159  000FA4  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9160  000FA6  A4D8               	btfss	status,2,c
  9161  000FA8  0E00               	movlw	low (__mediumconst shr (0+16))
  9162  000FAA  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9163  000FAC  0E0A               	movlw	10
  9164  000FAE  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9165  000FB0  0E02               	movlw	2
  9166  000FB2  6F76               	movwf	oled_putString@start_page& (0+255),b
  9167  000FB4  EC14  F029         	call	_oled_putString	;wreg free
  9168                           
  9169                           ;MOTEapp.c: 889: }
  9170                           
  9171                           ;MOTEapp.c: 888: break;
  9172  000FB8  D018               	goto	l562
  9173  000FBA                     l559:
  9174  000FBA  0100               	movlb	0	; () banked
  9175  000FBC  51FC               	movf	_dataRateValue& (0+255),w,b
  9176                           
  9177                           ; Switch size 1, requested type "space"
  9178                           ; Number of cases is 7, Range of values is 0 to 6
  9179                           ; switch strategies available:
  9180                           ; Name         Instructions Cycles
  9181                           ; simple_byte           22    12 (average)
  9182                           ;	Chosen strategy is simple_byte
  9183  000FBE  0A00               	xorlw	0	; case 0
  9184  000FC0  B4D8               	btfsc	status,2,c
  9185  000FC2  D785               	goto	l560
  9186  000FC4  0A01               	xorlw	1	; case 1
  9187  000FC6  B4D8               	btfsc	status,2,c
  9188  000FC8  D792               	goto	l563
  9189  000FCA  0A03               	xorlw	3	; case 2
  9190  000FCC  B4D8               	btfsc	status,2,c
  9191  000FCE  D7A0               	goto	l564
  9192  000FD0  0A01               	xorlw	1	; case 3
  9193  000FD2  B4D8               	btfsc	status,2,c
  9194  000FD4  D7AE               	goto	l565
  9195  000FD6  0A07               	xorlw	7	; case 4
  9196  000FD8  B4D8               	btfsc	status,2,c
  9197  000FDA  D7BC               	goto	l566
  9198  000FDC  0A01               	xorlw	1	; case 5
  9199  000FDE  B4D8               	btfsc	status,2,c
  9200  000FE0  D7CA               	goto	l567
  9201  000FE2  0A03               	xorlw	3	; case 6
  9202  000FE4  B4D8               	btfsc	status,2,c
  9203  000FE6  D7D8               	goto	l568
  9204  000FE8  D772               	goto	l560
  9205  000FEA                     l562:
  9206                           
  9207                           ;MOTEapp.c: 890: }
  9208                           ;MOTEapp.c: 891: if (selectButton)
  9209                           
  9210                           ; BSR set to: 0
  9211                           
  9212                           ; BSR set to: 0
  9213  000FEA  0100               	movlb	0	; () banked
  9214  000FEC  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9215  000FEE  B4D8               	btfsc	status,2,c
  9216  000FF0  0012               	return	
  9217                           
  9218                           ; BSR set to: 0
  9219                           ;MOTEapp.c: 892: {
  9220                           ;MOTEapp.c: 893: if (periodicUpValue < 5)
  9221  000FF2  0E05               	movlw	5
  9222  000FF4  61FE               	cpfslt	_periodicUpValue& (0+255),b
  9223  000FF6  D002               	goto	l570
  9224                           
  9225                           ; BSR set to: 0
  9226                           ;MOTEapp.c: 894: {
  9227                           ;MOTEapp.c: 895: periodicUpValue++;
  9228  000FF8  2BFE               	incf	_periodicUpValue& (0+255),f,b
  9229                           
  9230                           ;MOTEapp.c: 896: } else {
  9231  000FFA  D072               	goto	l572
  9232  000FFC                     l570:
  9233                           
  9234                           ; BSR set to: 0
  9235                           ;MOTEapp.c: 897: periodicUpValue = 0;
  9236                           
  9237                           ; BSR set to: 0
  9238  000FFC  0E00               	movlw	0
  9239  000FFE  6FFE               	movwf	_periodicUpValue& (0+255),b
  9240                           
  9241                           ; BSR set to: 0
  9242                           ;MOTEapp.c: 898: }
  9243                           ;MOTEapp.c: 900: switch (periodicUpValue)
  9244  001000  D06F               	goto	l572
  9245  001002                     
  9246                           ; BSR set to: 0
  9247                           ;MOTEapp.c: 904: periodicTimerValue = 9;
  9248                           
  9249                           ; BSR set to: 0
  9250                           
  9251                           ;MOTEapp.c: 903: case 0:
  9252                           
  9253                           ; BSR set to: 0
  9254  001002  0E09               	movlw	9
  9255  001004  6FFD               	movwf	_periodicTimerValue& (0+255),b
  9256                           
  9257                           ; BSR set to: 0
  9258                           ;MOTEapp.c: 905: oled_putString(" 5 ",7,2);
  9259  001006  0EDC               	movlw	low STR_143
  9260  001008  6F72               	movwf	oled_putString@string& (0+255),b
  9261  00100A  0E7F               	movlw	high STR_143
  9262  00100C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9263  00100E  5172               	movf	oled_putString@string& (0+255),w,b
  9264  001010  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9265  001012  A4D8               	btfss	status,2,c
  9266  001014  0E00               	movlw	low (__mediumconst shr (0+16))
  9267  001016  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9268  001018  0E07               	movlw	7
  9269  00101A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9270  00101C  0E02               	movlw	2
  9271  00101E  6F76               	movwf	oled_putString@start_page& (0+255),b
  9272  001020  EC14  F029         	call	_oled_putString	;wreg free
  9273                           
  9274                           ;MOTEapp.c: 906: break;
  9275  001024  0012               	return	
  9276  001026                     
  9277                           ;MOTEapp.c: 908: periodicTimerValue = 18;
  9278  001026  0E12               	movlw	18
  9279  001028  0100               	movlb	0	; () banked
  9280  00102A  6FFD               	movwf	_periodicTimerValue& (0+255),b
  9281                           
  9282                           ; BSR set to: 0
  9283                           ;MOTEapp.c: 909: oled_putString(" 10",7,2);
  9284  00102C  0EE0               	movlw	low STR_146
  9285  00102E  6F72               	movwf	oled_putString@string& (0+255),b
  9286  001030  0E7F               	movlw	high STR_146
  9287  001032  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9288  001034  5172               	movf	oled_putString@string& (0+255),w,b
  9289  001036  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9290  001038  A4D8               	btfss	status,2,c
  9291  00103A  0E00               	movlw	low (__mediumconst shr (0+16))
  9292  00103C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9293  00103E  0E07               	movlw	7
  9294  001040  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9295  001042  0E02               	movlw	2
  9296  001044  6F76               	movwf	oled_putString@start_page& (0+255),b
  9297  001046  EC14  F029         	call	_oled_putString	;wreg free
  9298                           
  9299                           ;MOTEapp.c: 910: break;
  9300  00104A  0012               	return	
  9301  00104C                     
  9302                           ;MOTEapp.c: 912: periodicTimerValue = 27;
  9303  00104C  0E1B               	movlw	27
  9304  00104E  0100               	movlb	0	; () banked
  9305  001050  6FFD               	movwf	_periodicTimerValue& (0+255),b
  9306                           
  9307                           ; BSR set to: 0
  9308                           ;MOTEapp.c: 913: oled_putString(" 15",7,2);
  9309  001052  0EEC               	movlw	low STR_147
  9310  001054  6F72               	movwf	oled_putString@string& (0+255),b
  9311  001056  0E7F               	movlw	high STR_147
  9312  001058  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9313  00105A  5172               	movf	oled_putString@string& (0+255),w,b
  9314  00105C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9315  00105E  A4D8               	btfss	status,2,c
  9316  001060  0E00               	movlw	low (__mediumconst shr (0+16))
  9317  001062  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9318  001064  0E07               	movlw	7
  9319  001066  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9320  001068  0E02               	movlw	2
  9321  00106A  6F76               	movwf	oled_putString@start_page& (0+255),b
  9322  00106C  EC14  F029         	call	_oled_putString	;wreg free
  9323                           
  9324                           ;MOTEapp.c: 914: break;
  9325  001070  0012               	return	
  9326  001072                     
  9327                           ;MOTEapp.c: 916: periodicTimerValue = 54;
  9328  001072  0E36               	movlw	54
  9329  001074  0100               	movlb	0	; () banked
  9330  001076  6FFD               	movwf	_periodicTimerValue& (0+255),b
  9331                           
  9332                           ; BSR set to: 0
  9333                           ;MOTEapp.c: 917: oled_putString(" 30",7,2);
  9334  001078  0EE4               	movlw	low STR_148
  9335  00107A  6F72               	movwf	oled_putString@string& (0+255),b
  9336  00107C  0E7F               	movlw	high STR_148
  9337  00107E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9338  001080  5172               	movf	oled_putString@string& (0+255),w,b
  9339  001082  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9340  001084  A4D8               	btfss	status,2,c
  9341  001086  0E00               	movlw	low (__mediumconst shr (0+16))
  9342  001088  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9343  00108A  0E07               	movlw	7
  9344  00108C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9345  00108E  0E02               	movlw	2
  9346  001090  6F76               	movwf	oled_putString@start_page& (0+255),b
  9347  001092  EC14  F029         	call	_oled_putString	;wreg free
  9348                           
  9349                           ;MOTEapp.c: 918: break;
  9350  001096  0012               	return	
  9351  001098                     
  9352                           ;MOTEapp.c: 920: periodicTimerValue = 108;
  9353  001098  0E6C               	movlw	108
  9354  00109A  0100               	movlb	0	; () banked
  9355  00109C  6FFD               	movwf	_periodicTimerValue& (0+255),b
  9356                           
  9357                           ; BSR set to: 0
  9358                           ;MOTEapp.c: 921: oled_putString(" 60",7,2);
  9359  00109E  0EE8               	movlw	low STR_149
  9360  0010A0  6F72               	movwf	oled_putString@string& (0+255),b
  9361  0010A2  0E7F               	movlw	high STR_149
  9362  0010A4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9363  0010A6  5172               	movf	oled_putString@string& (0+255),w,b
  9364  0010A8  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9365  0010AA  A4D8               	btfss	status,2,c
  9366  0010AC  0E00               	movlw	low (__mediumconst shr (0+16))
  9367  0010AE  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9368  0010B0  0E07               	movlw	7
  9369  0010B2  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9370  0010B4  0E02               	movlw	2
  9371  0010B6  6F76               	movwf	oled_putString@start_page& (0+255),b
  9372  0010B8  EC14  F029         	call	_oled_putString	;wreg free
  9373                           
  9374                           ;MOTEapp.c: 922: break;
  9375  0010BC  0012               	return	
  9376  0010BE                     l580:
  9377                           
  9378                           ; BSR set to: 0
  9379                           ;MOTEapp.c: 924: periodicTimerValue = 255;
  9380  0010BE  69FD               	setf	_periodicTimerValue& (0+255),b
  9381                           
  9382                           ; BSR set to: 0
  9383                           ;MOTEapp.c: 925: oled_putString("OFF",7,2);
  9384  0010C0  0EF0               	movlw	low STR_128
  9385  0010C2  6F72               	movwf	oled_putString@string& (0+255),b
  9386  0010C4  0E7F               	movlw	high STR_128
  9387  0010C6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9388  0010C8  5172               	movf	oled_putString@string& (0+255),w,b
  9389  0010CA  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9390  0010CC  A4D8               	btfss	status,2,c
  9391  0010CE  0E00               	movlw	low (__mediumconst shr (0+16))
  9392  0010D0  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9393  0010D2  0E07               	movlw	7
  9394  0010D4  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9395  0010D6  0E02               	movlw	2
  9396  0010D8  6F76               	movwf	oled_putString@start_page& (0+255),b
  9397  0010DA  EC14  F029         	call	_oled_putString	;wreg free
  9398                           
  9399                           ;MOTEapp.c: 927: }
  9400                           
  9401                           ;MOTEapp.c: 926: break;
  9402  0010DE  0012               	return	
  9403  0010E0                     l572:
  9404  0010E0  0100               	movlb	0	; () banked
  9405  0010E2  51FE               	movf	_periodicUpValue& (0+255),w,b
  9406                           
  9407                           ; Switch size 1, requested type "space"
  9408                           ; Number of cases is 6, Range of values is 0 to 5
  9409                           ; switch strategies available:
  9410                           ; Name         Instructions Cycles
  9411                           ; simple_byte           19    10 (average)
  9412                           ;	Chosen strategy is simple_byte
  9413  0010E4  0A00               	xorlw	0	; case 0
  9414  0010E6  B4D8               	btfsc	status,2,c
  9415  0010E8  D78C               	goto	l573
  9416  0010EA  0A01               	xorlw	1	; case 1
  9417  0010EC  B4D8               	btfsc	status,2,c
  9418  0010EE  D79B               	goto	l576
  9419  0010F0  0A03               	xorlw	3	; case 2
  9420  0010F2  B4D8               	btfsc	status,2,c
  9421  0010F4  D7AB               	goto	l577
  9422  0010F6  0A01               	xorlw	1	; case 3
  9423  0010F8  B4D8               	btfsc	status,2,c
  9424  0010FA  D7BB               	goto	l578
  9425  0010FC  0A07               	xorlw	7	; case 4
  9426  0010FE  B4D8               	btfsc	status,2,c
  9427  001100  D7CB               	goto	l579
  9428  001102  0A01               	xorlw	1	; case 5
  9429  001104  B4D8               	btfsc	status,2,c
  9430  001106  D7DB               	goto	l580
  9431  001108  D77C               	goto	l573
  9432  00110A                     
  9433                           ; BSR set to: 0
  9434                           ;MOTEapp.c: 931: if (changeStates)
  9435                           
  9436                           ; BSR set to: 0
  9437  00110A  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  9438  00110C  B4D8               	btfsc	status,2,c
  9439  00110E  D028               	goto	l582
  9440                           
  9441                           ; BSR set to: 0
  9442                           ;MOTEapp.c: 932: {
  9443                           ;MOTEapp.c: 934: MOTEapp_SetDataRateSetting(dataRateValue);
  9444  001110  51FC               	movf	_dataRateValue& (0+255),w,b
  9445  001112  ECAC  F014         	call	_MOTEapp_SetDataRateSetting
  9446                           
  9447                           ;MOTEapp.c: 936: oled_clear();
  9448  001116  EC7E  F030         	call	_oled_clear	;wreg free
  9449                           
  9450                           ;MOTEapp.c: 937: oled_putString("Enter Sleep Mode",0,0);
  9451  00111A  0ECC               	movlw	low STR_151
  9452  00111C  0100               	movlb	0	; () banked
  9453  00111E  6F72               	movwf	oled_putString@string& (0+255),b
  9454  001120  0E7B               	movlw	high STR_151
  9455  001122  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9456  001124  5172               	movf	oled_putString@string& (0+255),w,b
  9457  001126  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9458  001128  A4D8               	btfss	status,2,c
  9459  00112A  0E00               	movlw	low (__mediumconst shr (0+16))
  9460  00112C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9461  00112E  0E00               	movlw	0
  9462  001130  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9463  001132  0E00               	movlw	0
  9464  001134  6F76               	movwf	oled_putString@start_page& (0+255),b
  9465  001136  EC14  F029         	call	_oled_putString	;wreg free
  9466                           
  9467                           ;MOTEapp.c: 938: oled_putString("(NAV)    (SLP) ",0,3);
  9468  00113A  0E94               	movlw	low STR_152
  9469  00113C  0100               	movlb	0	; () banked
  9470  00113E  6F72               	movwf	oled_putString@string& (0+255),b
  9471  001140  0E7C               	movlw	high STR_152
  9472  001142  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9473  001144  5172               	movf	oled_putString@string& (0+255),w,b
  9474  001146  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9475  001148  A4D8               	btfss	status,2,c
  9476  00114A  0E00               	movlw	low (__mediumconst shr (0+16))
  9477  00114C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9478  00114E  0E00               	movlw	0
  9479  001150  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9480  001152  0E03               	movlw	3
  9481  001154  6F76               	movwf	oled_putString@start_page& (0+255),b
  9482  001156  EC14  F029         	call	_oled_putString	;wreg free
  9483                           
  9484                           ;MOTEapp.c: 939: runningState = runningSleep;
  9485  00115A  0E0F               	movlw	15
  9486  00115C  0100               	movlb	0	; () banked
  9487  00115E  6FF3               	movwf	_runningState& (0+255),b
  9488  001160                     l582:
  9489                           
  9490                           ; BSR set to: 0
  9491                           ;MOTEapp.c: 940: }
  9492                           ;MOTEapp.c: 941: if (selectButton)
  9493                           
  9494                           ; BSR set to: 0
  9495  001160  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9496  001162  B4D8               	btfsc	status,2,c
  9497  001164  0012               	return	
  9498                           
  9499                           ; BSR set to: 0
  9500                           ;MOTEapp.c: 942: {
  9501                           ;MOTEapp.c: 943: if (dataRateValue < 6)
  9502  001166  0E06               	movlw	6
  9503  001168  61FC               	cpfslt	_dataRateValue& (0+255),b
  9504  00116A  D00A               	goto	l584
  9505                           
  9506                           ; BSR set to: 0
  9507                           ;MOTEapp.c: 944: {
  9508                           ;MOTEapp.c: 945: if ((rnModule == rn2903) && (dataRateValue > 3))
  9509  00116C  05ED               	decf	_rnModule& (0+255),w,b
  9510  00116E  A4D8               	btfss	status,2,c
  9511  001170  D005               	goto	l585
  9512                           
  9513                           ; BSR set to: 0
  9514  001172  0E03               	movlw	3
  9515  001174  65FC               	cpfsgt	_dataRateValue& (0+255),b
  9516  001176  D002               	goto	l585
  9517                           
  9518                           ; BSR set to: 0
  9519                           ;MOTEapp.c: 946: dataRateValue = 6;
  9520  001178  0E06               	movlw	6
  9521  00117A  D003               	goto	L5
  9522  00117C                     l585:
  9523                           
  9524                           ; BSR set to: 0
  9525                           ;MOTEapp.c: 947: else
  9526                           ;MOTEapp.c: 948: dataRateValue++;
  9527                           
  9528                           ; BSR set to: 0
  9529  00117C  2BFC               	incf	_dataRateValue& (0+255),f,b
  9530                           
  9531                           ; BSR set to: 0
  9532                           ;MOTEapp.c: 949: }
  9533  00117E  D079               	goto	l588
  9534  001180                     l584:
  9535                           
  9536                           ; BSR set to: 0
  9537                           ;MOTEapp.c: 950: else {
  9538                           ;MOTEapp.c: 951: dataRateValue = 0;
  9539                           
  9540                           ; BSR set to: 0
  9541  001180  0E00               	movlw	0
  9542  001182                     L5:
  9543  001182  6FFC               	movwf	_dataRateValue& (0+255),b
  9544                           
  9545                           ; BSR set to: 0
  9546                           ;MOTEapp.c: 952: }
  9547                           ;MOTEapp.c: 954: switch (dataRateValue)
  9548  001184  D076               	goto	l588
  9549  001186                     
  9550                           ; BSR set to: 0
  9551                           ;MOTEapp.c: 958: oled_putString(" 0 ",10,2);
  9552                           
  9553                           ; BSR set to: 0
  9554                           
  9555                           ;MOTEapp.c: 957: case 0:
  9556                           
  9557                           ; BSR set to: 0
  9558  001186  0EC8               	movlw	low STR_138
  9559  001188  6F72               	movwf	oled_putString@string& (0+255),b
  9560  00118A  0E7F               	movlw	high STR_138
  9561  00118C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9562  00118E  5172               	movf	oled_putString@string& (0+255),w,b
  9563  001190  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9564  001192  A4D8               	btfss	status,2,c
  9565  001194  0E00               	movlw	low (__mediumconst shr (0+16))
  9566  001196  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9567  001198  0E0A               	movlw	10
  9568  00119A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9569  00119C  0E02               	movlw	2
  9570  00119E  6F76               	movwf	oled_putString@start_page& (0+255),b
  9571  0011A0  EC14  F029         	call	_oled_putString	;wreg free
  9572                           
  9573                           ;MOTEapp.c: 959: break;
  9574  0011A4  0012               	return	
  9575  0011A6                     
  9576                           ;MOTEapp.c: 961: oled_putString(" 1 ",10,2);
  9577  0011A6  0ECC               	movlw	low STR_139
  9578  0011A8  0100               	movlb	0	; () banked
  9579  0011AA  6F72               	movwf	oled_putString@string& (0+255),b
  9580  0011AC  0E7F               	movlw	high STR_139
  9581  0011AE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9582  0011B0  5172               	movf	oled_putString@string& (0+255),w,b
  9583  0011B2  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9584  0011B4  A4D8               	btfss	status,2,c
  9585  0011B6  0E00               	movlw	low (__mediumconst shr (0+16))
  9586  0011B8  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9587  0011BA  0E0A               	movlw	10
  9588  0011BC  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9589  0011BE  0E02               	movlw	2
  9590  0011C0  6F76               	movwf	oled_putString@start_page& (0+255),b
  9591  0011C2  EC14  F029         	call	_oled_putString	;wreg free
  9592                           
  9593                           ;MOTEapp.c: 962: break;
  9594  0011C6  0012               	return	
  9595  0011C8                     
  9596                           ;MOTEapp.c: 964: oled_putString(" 2 ",10,2);
  9597  0011C8  0ED0               	movlw	low STR_140
  9598  0011CA  0100               	movlb	0	; () banked
  9599  0011CC  6F72               	movwf	oled_putString@string& (0+255),b
  9600  0011CE  0E7F               	movlw	high STR_140
  9601  0011D0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9602  0011D2  5172               	movf	oled_putString@string& (0+255),w,b
  9603  0011D4  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9604  0011D6  A4D8               	btfss	status,2,c
  9605  0011D8  0E00               	movlw	low (__mediumconst shr (0+16))
  9606  0011DA  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9607  0011DC  0E0A               	movlw	10
  9608  0011DE  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9609  0011E0  0E02               	movlw	2
  9610  0011E2  6F76               	movwf	oled_putString@start_page& (0+255),b
  9611  0011E4  EC14  F029         	call	_oled_putString	;wreg free
  9612                           
  9613                           ;MOTEapp.c: 965: break;
  9614  0011E8  0012               	return	
  9615  0011EA                     
  9616                           ;MOTEapp.c: 967: oled_putString(" 3 ",10,2);
  9617  0011EA  0ED4               	movlw	low STR_141
  9618  0011EC  0100               	movlb	0	; () banked
  9619  0011EE  6F72               	movwf	oled_putString@string& (0+255),b
  9620  0011F0  0E7F               	movlw	high STR_141
  9621  0011F2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9622  0011F4  5172               	movf	oled_putString@string& (0+255),w,b
  9623  0011F6  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9624  0011F8  A4D8               	btfss	status,2,c
  9625  0011FA  0E00               	movlw	low (__mediumconst shr (0+16))
  9626  0011FC  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9627  0011FE  0E0A               	movlw	10
  9628  001200  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9629  001202  0E02               	movlw	2
  9630  001204  6F76               	movwf	oled_putString@start_page& (0+255),b
  9631  001206  EC14  F029         	call	_oled_putString	;wreg free
  9632                           
  9633                           ;MOTEapp.c: 968: break;
  9634  00120A  0012               	return	
  9635  00120C                     
  9636                           ;MOTEapp.c: 970: oled_putString(" 4 ",10,2);
  9637  00120C  0ED8               	movlw	low STR_142
  9638  00120E  0100               	movlb	0	; () banked
  9639  001210  6F72               	movwf	oled_putString@string& (0+255),b
  9640  001212  0E7F               	movlw	high STR_142
  9641  001214  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9642  001216  5172               	movf	oled_putString@string& (0+255),w,b
  9643  001218  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9644  00121A  A4D8               	btfss	status,2,c
  9645  00121C  0E00               	movlw	low (__mediumconst shr (0+16))
  9646  00121E  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9647  001220  0E0A               	movlw	10
  9648  001222  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9649  001224  0E02               	movlw	2
  9650  001226  6F76               	movwf	oled_putString@start_page& (0+255),b
  9651  001228  EC14  F029         	call	_oled_putString	;wreg free
  9652                           
  9653                           ;MOTEapp.c: 971: break;
  9654  00122C  0012               	return	
  9655  00122E                     
  9656                           ;MOTEapp.c: 973: oled_putString(" 5 ",10,2);
  9657  00122E  0EDC               	movlw	low STR_143
  9658  001230  0100               	movlb	0	; () banked
  9659  001232  6F72               	movwf	oled_putString@string& (0+255),b
  9660  001234  0E7F               	movlw	high STR_143
  9661  001236  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9662  001238  5172               	movf	oled_putString@string& (0+255),w,b
  9663  00123A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9664  00123C  A4D8               	btfss	status,2,c
  9665  00123E  0E00               	movlw	low (__mediumconst shr (0+16))
  9666  001240  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9667  001242  0E0A               	movlw	10
  9668  001244  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9669  001246  0E02               	movlw	2
  9670  001248  6F76               	movwf	oled_putString@start_page& (0+255),b
  9671  00124A  EC14  F029         	call	_oled_putString	;wreg free
  9672                           
  9673                           ;MOTEapp.c: 974: break;
  9674  00124E  0012               	return	
  9675  001250                     
  9676                           ;MOTEapp.c: 976: oled_putString("ADR",10,2);
  9677  001250  0EF4               	movlw	low STR_144
  9678  001252  0100               	movlb	0	; () banked
  9679  001254  6F72               	movwf	oled_putString@string& (0+255),b
  9680  001256  0E7F               	movlw	high STR_144
  9681  001258  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9682  00125A  5172               	movf	oled_putString@string& (0+255),w,b
  9683  00125C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9684  00125E  A4D8               	btfss	status,2,c
  9685  001260  0E00               	movlw	low (__mediumconst shr (0+16))
  9686  001262  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9687  001264  0E0A               	movlw	10
  9688  001266  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9689  001268  0E02               	movlw	2
  9690  00126A  6F76               	movwf	oled_putString@start_page& (0+255),b
  9691  00126C  EC14  F029         	call	_oled_putString	;wreg free
  9692                           
  9693                           ;MOTEapp.c: 978: }
  9694                           
  9695                           ;MOTEapp.c: 977: break;
  9696  001270  0012               	return	
  9697  001272                     l588:
  9698  001272  0100               	movlb	0	; () banked
  9699  001274  51FC               	movf	_dataRateValue& (0+255),w,b
  9700                           
  9701                           ; Switch size 1, requested type "space"
  9702                           ; Number of cases is 7, Range of values is 0 to 6
  9703                           ; switch strategies available:
  9704                           ; Name         Instructions Cycles
  9705                           ; simple_byte           22    12 (average)
  9706                           ;	Chosen strategy is simple_byte
  9707  001276  0A00               	xorlw	0	; case 0
  9708  001278  B4D8               	btfsc	status,2,c
  9709  00127A  D785               	goto	l589
  9710  00127C  0A01               	xorlw	1	; case 1
  9711  00127E  B4D8               	btfsc	status,2,c
  9712  001280  D792               	goto	l592
  9713  001282  0A03               	xorlw	3	; case 2
  9714  001284  B4D8               	btfsc	status,2,c
  9715  001286  D7A0               	goto	l593
  9716  001288  0A01               	xorlw	1	; case 3
  9717  00128A  B4D8               	btfsc	status,2,c
  9718  00128C  D7AE               	goto	l594
  9719  00128E  0A07               	xorlw	7	; case 4
  9720  001290  B4D8               	btfsc	status,2,c
  9721  001292  D7BC               	goto	l595
  9722  001294  0A01               	xorlw	1	; case 5
  9723  001296  B4D8               	btfsc	status,2,c
  9724  001298  D7CA               	goto	l596
  9725  00129A  0A03               	xorlw	3	; case 6
  9726  00129C  B4D8               	btfsc	status,2,c
  9727  00129E  D7D8               	goto	l597
  9728  0012A0  D772               	goto	l589
  9729  0012A2                     
  9730                           ; BSR set to: 0
  9731                           ;MOTEapp.c: 982: if (selectButton)
  9732                           
  9733                           ; BSR set to: 0
  9734  0012A2  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9735  0012A4  B4D8               	btfsc	status,2,c
  9736  0012A6  D00C               	goto	l601
  9737                           
  9738                           ; BSR set to: 0
  9739                           ;MOTEapp.c: 983: {
  9740                           ;MOTEapp.c: 984: if( moteApp_GoToSleep() )
  9741  0012A8  EC53  F01F         	call	_moteApp_GoToSleep	;wreg free
  9742  0012AC  0900               	iorlw	0
  9743  0012AE  B4D8               	btfsc	status,2,c
  9744  0012B0  D004               	goto	l600
  9745                           
  9746                           ;MOTEapp.c: 985: {
  9747                           ;MOTEapp.c: 986: changeStates = 1;
  9748  0012B2  0E01               	movlw	1
  9749  0012B4  0100               	movlb	0	; () banked
  9750  0012B6  6FB5               	movwf	moteRunningProcess@changeStates& (0+255),b
  9751                           
  9752                           ;MOTEapp.c: 987: }
  9753  0012B8  D003               	goto	l601
  9754  0012BA                     l600:
  9755                           
  9756                           ;MOTEapp.c: 988: else
  9757                           ;MOTEapp.c: 989: {
  9758                           ;MOTEapp.c: 990: secTicker = 10 - 1;
  9759                           
  9760                           ; BSR set to: 0
  9761  0012BA  0E09               	movlw	9
  9762  0012BC  0100               	movlb	0	; () banked
  9763  0012BE  6FEF               	movwf	_secTicker& (0+255),b
  9764  0012C0                     l601:
  9765                           
  9766                           ; BSR set to: 0
  9767                           ;MOTEapp.c: 991: }
  9768                           ;MOTEapp.c: 992: }
  9769                           ;MOTEapp.c: 993: if (changeStates)
  9770                           
  9771                           ; BSR set to: 0
  9772  0012C0  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  9773  0012C2  B4D8               	btfsc	status,2,c
  9774  0012C4  0012               	return	
  9775                           
  9776                           ; BSR set to: 0
  9777                           ;MOTEapp.c: 994: {
  9778                           ;MOTEapp.c: 995: oled_clear();
  9779  0012C6  EC7E  F030         	call	_oled_clear	;wreg free
  9780                           
  9781                           ;MOTEapp.c: 996: oled_putString("  Issue Uplink  ",0,0);
  9782  0012CA  0E22               	movlw	low STR_75
  9783  0012CC  0100               	movlb	0	; () banked
  9784  0012CE  6F72               	movwf	oled_putString@string& (0+255),b
  9785  0012D0  0E7B               	movlw	high STR_75
  9786  0012D2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9787  0012D4  5172               	movf	oled_putString@string& (0+255),w,b
  9788  0012D6  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9789  0012D8  A4D8               	btfss	status,2,c
  9790  0012DA  0E00               	movlw	low (__mediumconst shr (0+16))
  9791  0012DC  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9792  0012DE  0E00               	movlw	0
  9793  0012E0  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9794  0012E2  0E00               	movlw	0
  9795  0012E4  6F76               	movwf	oled_putString@start_page& (0+255),b
  9796  0012E6  EC14  F029         	call	_oled_putString	;wreg free
  9797                           
  9798                           ;MOTEapp.c: 997: oled_putString(" LoRaWAN Packet ",0,1);
  9799  0012EA  0E88               	movlw	low STR_76
  9800  0012EC  0100               	movlb	0	; () banked
  9801  0012EE  6F72               	movwf	oled_putString@string& (0+255),b
  9802  0012F0  0E7B               	movlw	high STR_76
  9803  0012F2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9804  0012F4  5172               	movf	oled_putString@string& (0+255),w,b
  9805  0012F6  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9806  0012F8  A4D8               	btfss	status,2,c
  9807  0012FA  0E00               	movlw	low (__mediumconst shr (0+16))
  9808  0012FC  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9809  0012FE  0E00               	movlw	0
  9810  001300  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9811  001302  0E01               	movlw	1
  9812  001304  6F76               	movwf	oled_putString@start_page& (0+255),b
  9813  001306  EC14  F029         	call	_oled_putString	;wreg free
  9814                           
  9815                           ;MOTEapp.c: 998: oled_putString("(NAV)    (SEL) ",0,3);
  9816  00130A  0E84               	movlw	low STR_77
  9817  00130C  0100               	movlb	0	; () banked
  9818  00130E  6F72               	movwf	oled_putString@string& (0+255),b
  9819  001310  0E7C               	movlw	high STR_77
  9820  001312  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9821  001314  5172               	movf	oled_putString@string& (0+255),w,b
  9822  001316  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9823  001318  A4D8               	btfss	status,2,c
  9824  00131A  0E00               	movlw	low (__mediumconst shr (0+16))
  9825  00131C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9826  00131E  0E00               	movlw	0
  9827  001320  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9828  001322  0E03               	movlw	3
  9829  001324  6F76               	movwf	oled_putString@start_page& (0+255),b
  9830  001326  EC14  F029         	call	_oled_putString	;wreg free
  9831                           
  9832                           ;MOTEapp.c: 999: runningState = runningUplink;
  9833  00132A  0E06               	movlw	6
  9834  00132C  0100               	movlb	0	; () banked
  9835  00132E  6FF3               	movwf	_runningState& (0+255),b
  9836                           
  9837                           ; BSR set to: 0
  9838                           ;MOTEapp.c: 1002: }
  9839                           
  9840                           ; BSR set to: 0
  9841                           ;MOTEapp.c: 1000: }
  9842                           ;MOTEapp.c: 1001: break;
  9843  001330  0012               	return	
  9844  001332                     l482:
  9845                           
  9846                           ; BSR set to: 0
  9847                           
  9848                           ; BSR set to: 0
  9849  001332  51F3               	movf	_runningState& (0+255),w,b
  9850                           
  9851                           ; Switch size 1, requested type "space"
  9852                           ; Number of cases is 12, Range of values is 0 to 15
  9853                           ; switch strategies available:
  9854                           ; Name         Instructions Cycles
  9855                           ; simple_byte           37    19 (average)
  9856                           ;	Chosen strategy is simple_byte
  9857  001334  0A00               	xorlw	0	; case 0
  9858  001336  B4D8               	btfsc	status,2,c
  9859  001338  EF7E  F001         	goto	l488
  9860  00133C  0A01               	xorlw	1	; case 1
  9861  00133E  B4D8               	btfsc	status,2,c
  9862  001340  EF59  F005         	goto	l532
  9863  001344  0A03               	xorlw	3	; case 2
  9864  001346  B4D8               	btfsc	status,2,c
  9865  001348  D54C               	goto	l553
  9866  00134A  0A01               	xorlw	1	; case 3
  9867  00134C  B4D8               	btfsc	status,2,c
  9868  00134E  D6DD               	goto	l581
  9869  001350  0A05               	xorlw	5	; case 6
  9870  001352  B4D8               	btfsc	status,2,c
  9871  001354  EFBB  F001         	goto	l492
  9872  001358  0A01               	xorlw	1	; case 7
  9873  00135A  B4D8               	btfsc	status,2,c
  9874  00135C  EF9F  F002         	goto	l499
  9875  001360  0A0F               	xorlw	15	; case 8
  9876  001362  B4D8               	btfsc	status,2,c
  9877  001364  EF1E  F003         	goto	l505
  9878  001368  0A02               	xorlw	2	; case 10
  9879  00136A  B4D8               	btfsc	status,2,c
  9880  00136C  EF7A  F004         	goto	l524
  9881  001370  0A01               	xorlw	1	; case 11
  9882  001372  B4D8               	btfsc	status,2,c
  9883  001374  EF1D  F005         	goto	l528
  9884  001378  0A07               	xorlw	7	; case 12
  9885  00137A  B4D8               	btfsc	status,2,c
  9886  00137C  D432               	goto	l538
  9887  00137E  0A01               	xorlw	1	; case 13
  9888  001380  B4D8               	btfsc	status,2,c
  9889  001382  D56C               	goto	l557
  9890  001384  0A02               	xorlw	2	; case 15
  9891  001386  B4D8               	btfsc	status,2,c
  9892  001388  D78C               	goto	l598
  9893  00138A  EF7D  F001         	goto	l483
  9894  00138E                     __end_of_moteRunningProcess:
  9895                           	opt stack 0
  9896                           tblptru	equ	0xFF8
  9897                           tblptrh	equ	0xFF7
  9898                           tblptrl	equ	0xFF6
  9899                           tablat	equ	0xFF5
  9900                           prodh	equ	0xFF4
  9901                           prodl	equ	0xFF3
  9902                           intcon	equ	0xFF2
  9903                           postinc0	equ	0xFEE
  9904                           wreg	equ	0xFE8
  9905                           indf1	equ	0xFE7
  9906                           postdec1	equ	0xFE5
  9907                           fsr1h	equ	0xFE2
  9908                           fsr1l	equ	0xFE1
  9909                           indf2	equ	0xFDF
  9910                           fsr2h	equ	0xFDA
  9911                           fsr2l	equ	0xFD9
  9912                           status	equ	0xFD8
  9913                           
  9914 ;; *************** function _sendDataCommand *****************
  9915 ;; Defined at:
  9916 ;;		line 1149 in file "../Includes/Board/MOTEapp.c"
  9917 ;; Parameters:    Size  Location     Type
  9918 ;;  string          2    1[BANK0 ] PTR const unsigned char 
  9919 ;;		 -> STR_85(12), STR_84(14), STR_74(14), 
  9920 ;;  appData         2    3[BANK0 ] PTR unsigned char 
  9921 ;;		 -> dataBuffer(16), 
  9922 ;;  dataLength      1    5[BANK0 ] unsigned char 
  9923 ;; Auto vars:     Size  Location     Type
  9924 ;;  byteCount       1    8[BANK0 ] unsigned char 
  9925 ;;  byteCount       1    7[BANK0 ] unsigned char 
  9926 ;; Return value:  Size  Location     Type
  9927 ;;                  1    wreg      void 
  9928 ;; Registers used:
  9929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9930 ;; Tracked objects:
  9931 ;;		On entry : 0/0
  9932 ;;		On exit  : 0/0
  9933 ;;		Unchanged: 0/0
  9934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9935 ;;      Params:         0       5       0       0       0       0       0       0       0
  9936 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9937 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9938 ;;      Totals:         0       8       0       0       0       0       0       0       0
  9939 ;;Total ram usage:        8 bytes
  9940 ;; Hardware stack levels used:    1
  9941 ;; Hardware stack levels required when called:   13
  9942 ;; This function calls:
  9943 ;;		_EUSART_Write
  9944 ;;		_EndLine
  9945 ;;		_hexToStr
  9946 ;; This function is called by:
  9947 ;;		_moteRunningProcess
  9948 ;; This function uses a non-reentrant model
  9949 ;;
  9950                           
  9951                           	psect	text11
  9952  004376                     __ptext11:
  9953                           	opt stack 0
  9954  004376                     _sendDataCommand:
  9955                           	opt stack 15
  9956                           
  9957                           ;MOTEapp.c: 1152: while (*string)
  9958                           
  9959                           ;incstack = 0
  9960  004376  D00C               	goto	l658
  9961  004378                     
  9962                           ;MOTEapp.c: 1153: {
  9963                           ;MOTEapp.c: 1154: EUSART_Write(*string++);
  9964  004378  C061  FFF6         	movff	sendDataCommand@string,tblptrl
  9965  00437C  C062  FFF7         	movff	sendDataCommand@string+1,tblptrh
  9966  004380                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9967  004380  6AF8               	clrf	tblptru,c
  9968  004382                     	endif
  9969  004382                     	if	0	;tblptru may be non-zero
  9970  004382                     	endif
  9971  004382  0008               	tblrd		*
  9972  004384  50F5               	movf	tablat,w,c
  9973  004386  EC70  F02D         	call	_EUSART_Write
  9974  00438A  0100               	movlb	0	; () banked
  9975  00438C  4B61               	infsnz	sendDataCommand@string& (0+255),f,b
  9976  00438E  2B62               	incf	(sendDataCommand@string+1)& (0+255),f,b
  9977  004390                     l658:
  9978                           
  9979                           ; BSR set to: 0
  9980  004390  C061  FFF6         	movff	sendDataCommand@string,tblptrl
  9981  004394  C062  FFF7         	movff	sendDataCommand@string+1,tblptrh
  9982  004398                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9983  004398  6AF8               	clrf	tblptru,c
  9984  00439A                     	endif
  9985  00439A                     	if	0	;tblptru may be non-zero
  9986  00439A                     	endif
  9987  00439A  0008               	tblrd		*
  9988  00439C  50F5               	movf	tablat,w,c
  9989  00439E  0900               	iorlw	0
  9990  0043A0  A4D8               	btfss	status,2,c
  9991  0043A2  D7EA               	goto	l659
  9992                           
  9993                           ;MOTEapp.c: 1155: }
  9994                           ;MOTEapp.c: 1157: for (uint8_t byteCount = 0; byteCount < 3; byteCount++)
  9995  0043A4  0E00               	movlw	0
  9996  0043A6  0100               	movlb	0	; () banked
  9997  0043A8  6F67               	movwf	sendDataCommand@byteCount& (0+255),b
  9998  0043AA                     l9917:
  9999                           
 10000                           ; BSR set to: 0
 10001  0043AA  0E02               	movlw	2
 10002  0043AC  6567               	cpfsgt	sendDataCommand@byteCount& (0+255),b
 10003  0043AE  D001               	goto	l661
 10004  0043B0  D00E               	goto	u8470
 10005  0043B2                     l661:
 10006                           
 10007                           ; BSR set to: 0
 10008                           ;MOTEapp.c: 1158: {
 10009                           ;MOTEapp.c: 1159: EUSART_Write(appData[byteCount]);
 10010                           
 10011                           ; BSR set to: 0
 10012  0043B2  5167               	movf	sendDataCommand@byteCount& (0+255),w,b
 10013  0043B4  0D01               	mullw	1
 10014  0043B6  50F3               	movf	prodl,w,c
 10015  0043B8  2563               	addwf	sendDataCommand@appData& (0+255),w,b
 10016  0043BA  6ED9               	movwf	fsr2l,c
 10017  0043BC  50F4               	movf	prodh,w,c
 10018  0043BE  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
 10019  0043C0  6EDA               	movwf	fsr2h,c
 10020  0043C2  50DF               	movf	indf2,w,c
 10021  0043C4  EC70  F02D         	call	_EUSART_Write
 10022  0043C8  0100               	movlb	0	; () banked
 10023  0043CA  2B67               	incf	sendDataCommand@byteCount& (0+255),f,b
 10024  0043CC  D7EE               	goto	l9917
 10025  0043CE                     u8470:
 10026                           
 10027                           ; BSR set to: 0
 10028                           ;MOTEapp.c: 1160: }
 10029                           ;MOTEapp.c: 1162: EUSART_Write(appData[3]);
 10030                           
 10031                           ; BSR set to: 0
 10032  0043CE  EE20 F003          	lfsr	2,3
 10033  0043D2  5163               	movf	sendDataCommand@appData& (0+255),w,b
 10034  0043D4  26D9               	addwf	fsr2l,f,c
 10035  0043D6  5164               	movf	(sendDataCommand@appData+1)& (0+255),w,b
 10036  0043D8  22DA               	addwfc	fsr2h,f,c
 10037  0043DA  50DF               	movf	indf2,w,c
 10038  0043DC  EC70  F02D         	call	_EUSART_Write
 10039                           
 10040                           ;MOTEapp.c: 1164: for (uint8_t byteCount = 4; byteCount < dataLength; byteCount++)
 10041  0043E0  0E04               	movlw	4
 10042  0043E2  0100               	movlb	0	; () banked
 10043  0043E4  6F68               	movwf	sendDataCommand@byteCount_1653& (0+255),b
 10044  0043E6  D021               	goto	l663
 10045  0043E8                     
 10046                           ; BSR set to: 0
 10047                           ;MOTEapp.c: 1165: {
 10048                           ;MOTEapp.c: 1166: EUSART_Write(hexToStr(appData[byteCount] >> 4));
 10049                           
 10050                           ; BSR set to: 0
 10051  0043E8  5168               	movf	sendDataCommand@byteCount_1653& (0+255),w,b
 10052  0043EA  0D01               	mullw	1
 10053  0043EC  50F3               	movf	prodl,w,c
 10054  0043EE  2563               	addwf	sendDataCommand@appData& (0+255),w,b
 10055  0043F0  6ED9               	movwf	fsr2l,c
 10056  0043F2  50F4               	movf	prodh,w,c
 10057  0043F4  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
 10058  0043F6  6EDA               	movwf	fsr2h,c
 10059  0043F8  50DF               	movf	indf2,w,c
 10060  0043FA  6F66               	movwf	??_sendDataCommand& (0+255),b
 10061  0043FC  3966               	swapf	??_sendDataCommand& (0+255),w,b
 10062  0043FE  0B0F               	andlw	15
 10063  004400  EC52  F02F         	call	_hexToStr
 10064  004404  EC70  F02D         	call	_EUSART_Write
 10065                           
 10066                           ;MOTEapp.c: 1167: EUSART_Write(hexToStr(appData[byteCount] & 0x0F));
 10067  004408  0100               	movlb	0	; () banked
 10068  00440A  5168               	movf	sendDataCommand@byteCount_1653& (0+255),w,b
 10069  00440C  0D01               	mullw	1
 10070  00440E  50F3               	movf	prodl,w,c
 10071  004410  2563               	addwf	sendDataCommand@appData& (0+255),w,b
 10072  004412  6ED9               	movwf	fsr2l,c
 10073  004414  50F4               	movf	prodh,w,c
 10074  004416  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
 10075  004418  6EDA               	movwf	fsr2h,c
 10076  00441A  50DF               	movf	indf2,w,c
 10077  00441C  0B0F               	andlw	15
 10078  00441E  EC52  F02F         	call	_hexToStr
 10079  004422  EC70  F02D         	call	_EUSART_Write
 10080  004426  0100               	movlb	0	; () banked
 10081  004428  2B68               	incf	sendDataCommand@byteCount_1653& (0+255),f,b
 10082  00442A                     l663:
 10083                           
 10084                           ; BSR set to: 0
 10085                           
 10086                           ; BSR set to: 0
 10087  00442A  5165               	movf	sendDataCommand@dataLength& (0+255),w,b
 10088  00442C  5D68               	subwf	sendDataCommand@byteCount_1653& (0+255),w,b
 10089  00442E  A0D8               	btfss	status,0,c
 10090  004430  D7DB               	goto	l664
 10091                           
 10092                           ; BSR set to: 0
 10093                           ;MOTEapp.c: 1168: }
 10094                           ;MOTEapp.c: 1169: EndLine();
 10095                           
 10096                           ; BSR set to: 0
 10097  004432  EC1E  F031         	call	_EndLine	;wreg free
 10098  004436  0012               	return		;funcret
 10099  004438                     __end_of_sendDataCommand:
 10100                           	opt stack 0
 10101                           tblptru	equ	0xFF8
 10102                           tblptrh	equ	0xFF7
 10103                           tblptrl	equ	0xFF6
 10104                           tablat	equ	0xFF5
 10105                           prodh	equ	0xFF4
 10106                           prodl	equ	0xFF3
 10107                           intcon	equ	0xFF2
 10108                           postinc0	equ	0xFEE
 10109                           wreg	equ	0xFE8
 10110                           indf1	equ	0xFE7
 10111                           postdec1	equ	0xFE5
 10112                           fsr1h	equ	0xFE2
 10113                           fsr1l	equ	0xFE1
 10114                           indf2	equ	0xFDF
 10115                           fsr2h	equ	0xFDA
 10116                           fsr2l	equ	0xFD9
 10117                           status	equ	0xFD8
 10118                           
 10119 ;; *************** function _hexToStr *****************
 10120 ;; Defined at:
 10121 ;;		line 1181 in file "../Includes/Board/MOTEapp.c"
 10122 ;; Parameters:    Size  Location     Type
 10123 ;;  character       1    wreg     unsigned char 
 10124 ;; Auto vars:     Size  Location     Type
 10125 ;;  character       1    0[BANK0 ] unsigned char 
 10126 ;; Return value:  Size  Location     Type
 10127 ;;                  1    wreg      unsigned char 
 10128 ;; Registers used:
 10129 ;;		wreg, status,2, status,0
 10130 ;; Tracked objects:
 10131 ;;		On entry : 0/0
 10132 ;;		On exit  : 0/0
 10133 ;;		Unchanged: 0/0
 10134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10135 ;;      Params:         0       0       0       0       0       0       0       0       0
 10136 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10137 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10138 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10139 ;;Total ram usage:        1 bytes
 10140 ;; Hardware stack levels used:    1
 10141 ;; Hardware stack levels required when called:   11
 10142 ;; This function calls:
 10143 ;;		Nothing
 10144 ;; This function is called by:
 10145 ;;		_sendDataCommand
 10146 ;; This function uses a non-reentrant model
 10147 ;;
 10148                           
 10149                           	psect	text12
 10150  005EA4                     __ptext12:
 10151                           	opt stack 0
 10152  005EA4                     _hexToStr:
 10153                           	opt stack 16
 10154                           
 10155                           ;incstack = 0
 10156                           ;hexToStr@character stored from wreg
 10157  005EA4  0100               	movlb	0	; () banked
 10158  005EA6  6F60               	movwf	hexToStr@character& (0+255),b
 10159                           
 10160                           ;MOTEapp.c: 1184: character = character & 0x0F;
 10161  005EA8  0100               	movlb	0	; () banked
 10162  005EAA  5160               	movf	hexToStr@character& (0+255),w,b
 10163  005EAC  0B0F               	andlw	15
 10164  005EAE  6F60               	movwf	hexToStr@character& (0+255),b
 10165                           
 10166                           ;MOTEapp.c: 1186: if (character < 0x0A)
 10167  005EB0  0E0A               	movlw	10
 10168  005EB2  6160               	cpfslt	hexToStr@character& (0+255),b
 10169  005EB4  D003               	goto	l674
 10170                           
 10171                           ; BSR set to: 0
 10172                           ;MOTEapp.c: 1187: {
 10173                           ;MOTEapp.c: 1188: return character + '0';
 10174  005EB6  5160               	movf	hexToStr@character& (0+255),w,b
 10175  005EB8  0F30               	addlw	48
 10176                           
 10177                           ; BSR set to: 0
 10178                           ;MOTEapp.c: 1189: }
 10179                           
 10180                           ; BSR set to: 0
 10181  005EBA  0012               	return	
 10182  005EBC                     l674:
 10183                           
 10184                           ; BSR set to: 0
 10185                           ;MOTEapp.c: 1190: else if ( (character >= 0x0A) && (character <= 0x0F) )
 10186                           
 10187                           ; BSR set to: 0
 10188  005EBC  0E09               	movlw	9
 10189  005EBE  6560               	cpfsgt	hexToStr@character& (0+255),b
 10190  005EC0  D006               	goto	l677
 10191                           
 10192                           ; BSR set to: 0
 10193  005EC2  0E10               	movlw	16
 10194  005EC4  6160               	cpfslt	hexToStr@character& (0+255),b
 10195  005EC6  D003               	goto	l677
 10196                           
 10197                           ; BSR set to: 0
 10198                           ;MOTEapp.c: 1191: {
 10199                           ;MOTEapp.c: 1192: return character + '0' + 7;
 10200  005EC8  5160               	movf	hexToStr@character& (0+255),w,b
 10201  005ECA  0F37               	addlw	55
 10202                           
 10203                           ; BSR set to: 0
 10204                           ;MOTEapp.c: 1193: }
 10205                           
 10206                           ; BSR set to: 0
 10207  005ECC  0012               	return	
 10208  005ECE                     l677:
 10209                           
 10210                           ; BSR set to: 0
 10211                           ;MOTEapp.c: 1194: else
 10212                           ;MOTEapp.c: 1195: {
 10213                           ;MOTEapp.c: 1196: return 0;
 10214                           
 10215                           ; BSR set to: 0
 10216  005ECE  0E00               	movlw	0
 10217                           
 10218                           ; BSR set to: 0
 10219                           
 10220                           ; BSR set to: 0
 10221  005ED0  0012               	return	
 10222  005ED2                     __end_of_hexToStr:
 10223                           	opt stack 0
 10224                           tblptru	equ	0xFF8
 10225                           tblptrh	equ	0xFF7
 10226                           tblptrl	equ	0xFF6
 10227                           tablat	equ	0xFF5
 10228                           prodh	equ	0xFF4
 10229                           prodl	equ	0xFF3
 10230                           intcon	equ	0xFF2
 10231                           postinc0	equ	0xFEE
 10232                           wreg	equ	0xFE8
 10233                           indf1	equ	0xFE7
 10234                           postdec1	equ	0xFE5
 10235                           fsr1h	equ	0xFE2
 10236                           fsr1l	equ	0xFE1
 10237                           indf2	equ	0xFDF
 10238                           fsr2h	equ	0xFDA
 10239                           fsr2l	equ	0xFD9
 10240                           status	equ	0xFD8
 10241                           
 10242 ;; *************** function _oled_putUint8 *****************
 10243 ;; Defined at:
 10244 ;;		line 264 in file "../Includes/Drivers/SSD1306oLED.c"
 10245 ;; Parameters:    Size  Location     Type
 10246 ;;  number          1    wreg     unsigned char 
 10247 ;;  station_dot     1   24[BANK0 ] unsigned char 
 10248 ;;  start_page      1   25[BANK0 ] unsigned char 
 10249 ;; Auto vars:     Size  Location     Type
 10250 ;;  number          1   26[BANK0 ] unsigned char 
 10251 ;;  numData         6   27[BANK0 ] struct .
 10252 ;; Return value:  Size  Location     Type
 10253 ;;                  1    wreg      void 
 10254 ;; Registers used:
 10255 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10256 ;; Tracked objects:
 10257 ;;		On entry : 0/0
 10258 ;;		On exit  : 0/0
 10259 ;;		Unchanged: 0/0
 10260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10261 ;;      Params:         0       2       0       0       0       0       0       0       0
 10262 ;;      Locals:         0       7       0       0       0       0       0       0       0
 10263 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10264 ;;      Totals:         0       9       0       0       0       0       0       0       0
 10265 ;;Total ram usage:        9 bytes
 10266 ;; Hardware stack levels used:    1
 10267 ;; Hardware stack levels required when called:   15
 10268 ;; This function calls:
 10269 ;;		___awmod
 10270 ;;		___lbdiv
 10271 ;;		_oled_putString
 10272 ;; This function is called by:
 10273 ;;		_moteRunningProcess
 10274 ;;		_test_adc
 10275 ;; This function uses a non-reentrant model
 10276 ;;
 10277                           
 10278                           	psect	text13
 10279  004BD8                     __ptext13:
 10280                           	opt stack 0
 10281  004BD8                     _oled_putUint8:
 10282                           	opt stack 13
 10283                           
 10284                           ; BSR set to: 0
 10285                           ;incstack = 0
 10286                           ;oled_putUint8@number stored from wreg
 10287  004BD8  0100               	movlb	0	; () banked
 10288  004BDA  6F7A               	movwf	oled_putUint8@number& (0+255),b
 10289                           
 10290                           ;SSD1306oLED.c: 266: display_data_t numData;
 10291                           ;SSD1306oLED.c: 267: numData.d2 = '0' + (number % 10);
 10292  004BDC  C07A  F060         	movff	oled_putUint8@number,___awmod@dividend
 10293  004BE0  0100               	movlb	0	; () banked
 10294  004BE2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10295  004BE4  0E00               	movlw	0
 10296  004BE6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10297  004BE8  0E0A               	movlw	10
 10298  004BEA  6F62               	movwf	___awmod@divisor& (0+255),b
 10299  004BEC  ECC0  F029         	call	___awmod	;wreg free
 10300  004BF0  0100               	movlb	0	; () banked
 10301  004BF2  5160               	movf	?___awmod& (0+255),w,b
 10302  004BF4  0F30               	addlw	48
 10303  004BF6  6F7D               	movwf	(oled_putUint8@numData+2)& (0+255),b
 10304                           
 10305                           ;SSD1306oLED.c: 268: number /= 10;
 10306  004BF8  0E0A               	movlw	10
 10307  004BFA  6F60               	movwf	___lbdiv@divisor& (0+255),b
 10308  004BFC  517A               	movf	oled_putUint8@number& (0+255),w,b
 10309  004BFE  EC51  F02D         	call	___lbdiv
 10310  004C02  0100               	movlb	0	; () banked
 10311  004C04  6F7A               	movwf	oled_putUint8@number& (0+255),b
 10312                           
 10313                           ;SSD1306oLED.c: 269: numData.d1 = '0' + (number % 10);
 10314  004C06  C07A  F060         	movff	oled_putUint8@number,___awmod@dividend
 10315  004C0A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10316  004C0C  0E00               	movlw	0
 10317  004C0E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10318  004C10  0E0A               	movlw	10
 10319  004C12  6F62               	movwf	___awmod@divisor& (0+255),b
 10320  004C14  ECC0  F029         	call	___awmod	;wreg free
 10321  004C18  0100               	movlb	0	; () banked
 10322  004C1A  5160               	movf	?___awmod& (0+255),w,b
 10323  004C1C  0F30               	addlw	48
 10324  004C1E  6F7C               	movwf	(oled_putUint8@numData+1)& (0+255),b
 10325                           
 10326                           ;SSD1306oLED.c: 270: number /= 10;
 10327  004C20  0E0A               	movlw	10
 10328  004C22  6F60               	movwf	___lbdiv@divisor& (0+255),b
 10329  004C24  517A               	movf	oled_putUint8@number& (0+255),w,b
 10330  004C26  EC51  F02D         	call	___lbdiv
 10331  004C2A  0100               	movlb	0	; () banked
 10332  004C2C  6F7A               	movwf	oled_putUint8@number& (0+255),b
 10333                           
 10334                           ;SSD1306oLED.c: 271: numData.d0 = '0' + (number % 10);
 10335  004C2E  C07A  F060         	movff	oled_putUint8@number,___awmod@dividend
 10336  004C32  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10337  004C34  0E00               	movlw	0
 10338  004C36  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10339  004C38  0E0A               	movlw	10
 10340  004C3A  6F62               	movwf	___awmod@divisor& (0+255),b
 10341  004C3C  ECC0  F029         	call	___awmod	;wreg free
 10342  004C40  0100               	movlb	0	; () banked
 10343  004C42  5160               	movf	?___awmod& (0+255),w,b
 10344  004C44  0F30               	addlw	48
 10345  004C46  6F7B               	movwf	oled_putUint8@numData& (0+255),b
 10346                           
 10347                           ; BSR set to: 0
 10348                           ;SSD1306oLED.c: 273: numData.b[3]=0;
 10349  004C48  0E00               	movlw	0
 10350  004C4A  6F7E               	movwf	(oled_putUint8@numData+3)& (0+255),b
 10351                           
 10352                           ; BSR set to: 0
 10353                           ;SSD1306oLED.c: 275: oled_putString(numData.b,station_dot,start_page);
 10354  004C4C  0E7B               	movlw	low oled_putUint8@numData
 10355  004C4E  6F72               	movwf	oled_putString@string& (0+255),b
 10356  004C50  0E00               	movlw	high oled_putUint8@numData
 10357  004C52  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 10358  004C54  5172               	movf	oled_putString@string& (0+255),w,b
 10359  004C56  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 10360  004C58  A4D8               	btfss	status,2,c
 10361  004C5A  0E20               	movlw	32
 10362  004C5C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 10363  004C5E  C078  F075         	movff	oled_putUint8@station_dot,oled_putString@station_dot
 10364  004C62  C079  F076         	movff	oled_putUint8@start_page,oled_putString@start_page
 10365  004C66  EC14  F029         	call	_oled_putString	;wreg free
 10366  004C6A  0012               	return		;funcret
 10367  004C6C                     __end_of_oled_putUint8:
 10368                           	opt stack 0
 10369                           tblptru	equ	0xFF8
 10370                           tblptrh	equ	0xFF7
 10371                           tblptrl	equ	0xFF6
 10372                           tablat	equ	0xFF5
 10373                           prodh	equ	0xFF4
 10374                           prodl	equ	0xFF3
 10375                           intcon	equ	0xFF2
 10376                           postinc0	equ	0xFEE
 10377                           wreg	equ	0xFE8
 10378                           indf1	equ	0xFE7
 10379                           postdec1	equ	0xFE5
 10380                           fsr1h	equ	0xFE2
 10381                           fsr1l	equ	0xFE1
 10382                           indf2	equ	0xFDF
 10383                           fsr2h	equ	0xFDA
 10384                           fsr2l	equ	0xFD9
 10385                           status	equ	0xFD8
 10386                           
 10387 ;; *************** function _moteApp_setSensorsInput *****************
 10388 ;; Defined at:
 10389 ;;		line 1412 in file "../Includes/Board/MOTEapp.c"
 10390 ;; Parameters:    Size  Location     Type
 10391 ;;		None
 10392 ;; Auto vars:     Size  Location     Type
 10393 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 10394 ;; Return value:  Size  Location     Type
 10395 ;;                  1    wreg      void 
 10396 ;; Registers used:
 10397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10398 ;; Tracked objects:
 10399 ;;		On entry : 0/0
 10400 ;;		On exit  : 0/0
 10401 ;;		Unchanged: 0/0
 10402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10403 ;;      Params:         0       0       0       0       0       0       0       0       0
 10404 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10405 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10406 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10407 ;;Total ram usage:        2 bytes
 10408 ;; Hardware stack levels used:    1
 10409 ;; Hardware stack levels required when called:   14
 10410 ;; This function calls:
 10411 ;;		_MOTEapp_getModuleResponse
 10412 ;;		_moteApp_delayms
 10413 ;;		_sendCommand
 10414 ;; This function is called by:
 10415 ;;		_moteRunningProcess
 10416 ;;		_moteApp_testSensors
 10417 ;; This function uses a non-reentrant model
 10418 ;;
 10419                           
 10420                           	psect	text14
 10421  0051B0                     __ptext14:
 10422                           	opt stack 0
 10423  0051B0                     _moteApp_setSensorsInput:
 10424                           	opt stack 14
 10425                           
 10426                           ;MOTEapp.c: 1414: uint16_t escapeCounter = 0;
 10427                           
 10428                           ;incstack = 0
 10429  0051B0  0E00               	movlw	0
 10430  0051B2  0100               	movlb	0	; () banked
 10431  0051B4  6F66               	movwf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),b
 10432  0051B6  0E00               	movlw	0
 10433  0051B8  6F65               	movwf	moteApp_setSensorsInput@escapeCounter& (0+255),b
 10434                           
 10435                           ; BSR set to: 0
 10436                           ;MOTEapp.c: 1415: sendCommand("sys set pinmode GPIO13 ana");
 10437  0051BA  0ED4               	movlw	low STR_183
 10438  0051BC  6F61               	movwf	sendCommand@string& (0+255),b
 10439  0051BE  0E79               	movlw	high STR_183
 10440  0051C0  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10441  0051C2  EC5B  F02E         	call	_sendCommand	;wreg free
 10442                           
 10443                           ;MOTEapp.c: 1416: while ( !MOTEapp_getModuleResponse() )
 10444  0051C6  D009               	goto	l737
 10445  0051C8                     
 10446                           ;MOTEapp.c: 1417: {
 10447                           ;MOTEapp.c: 1418: if (++escapeCounter > 50000)
 10448  0051C8  0100               	movlb	0	; () banked
 10449  0051CA  4B65               	infsnz	moteApp_setSensorsInput@escapeCounter& (0+255),f,b
 10450  0051CC  2B66               	incf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),f,b
 10451  0051CE  0E51               	movlw	81
 10452  0051D0  5D65               	subwf	moteApp_setSensorsInput@escapeCounter& (0+255),w,b
 10453  0051D2  0EC3               	movlw	195
 10454  0051D4  5966               	subwfb	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),w,b
 10455  0051D6  B0D8               	btfsc	status,0,c
 10456  0051D8  D005               	goto	u8390
 10457  0051DA                     l737:
 10458                           
 10459                           ; BSR set to: 0
 10460                           
 10461                           ; BSR set to: 0
 10462  0051DA  EC98  F02A         	call	_MOTEapp_getModuleResponse	;wreg free
 10463  0051DE  0900               	iorlw	0
 10464  0051E0  B4D8               	btfsc	status,2,c
 10465  0051E2  D7F2               	goto	l736
 10466  0051E4                     u8390:
 10467                           
 10468                           ;MOTEapp.c: 1420: }
 10469                           ;MOTEapp.c: 1421: escapeCounter = 0;
 10470  0051E4  0E00               	movlw	0
 10471  0051E6  0100               	movlb	0	; () banked
 10472  0051E8  6F66               	movwf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),b
 10473  0051EA  0E00               	movlw	0
 10474  0051EC  6F65               	movwf	moteApp_setSensorsInput@escapeCounter& (0+255),b
 10475                           
 10476                           ; BSR set to: 0
 10477                           ;MOTEapp.c: 1422: sendCommand("sys set pinmode GPIO12 ana");
 10478  0051EE  0EB9               	movlw	low STR_184
 10479  0051F0  6F61               	movwf	sendCommand@string& (0+255),b
 10480  0051F2  0E79               	movlw	high STR_184
 10481  0051F4  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10482  0051F6  EC5B  F02E         	call	_sendCommand	;wreg free
 10483                           
 10484                           ;MOTEapp.c: 1423: while ( !MOTEapp_getModuleResponse() )
 10485  0051FA  D009               	goto	l741
 10486  0051FC                     
 10487                           ;MOTEapp.c: 1424: {
 10488                           ;MOTEapp.c: 1425: if (++escapeCounter > 50000)
 10489  0051FC  0100               	movlb	0	; () banked
 10490  0051FE  4B65               	infsnz	moteApp_setSensorsInput@escapeCounter& (0+255),f,b
 10491  005200  2B66               	incf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),f,b
 10492  005202  0E51               	movlw	81
 10493  005204  5D65               	subwf	moteApp_setSensorsInput@escapeCounter& (0+255),w,b
 10494  005206  0EC3               	movlw	195
 10495  005208  5966               	subwfb	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),w,b
 10496  00520A  B0D8               	btfsc	status,0,c
 10497  00520C  D005               	goto	u8410
 10498  00520E                     l741:
 10499                           
 10500                           ; BSR set to: 0
 10501                           
 10502                           ; BSR set to: 0
 10503  00520E  EC98  F02A         	call	_MOTEapp_getModuleResponse	;wreg free
 10504  005212  0900               	iorlw	0
 10505  005214  B4D8               	btfsc	status,2,c
 10506  005216  D7F2               	goto	l740
 10507  005218                     u8410:
 10508                           
 10509                           ;MOTEapp.c: 1427: }
 10510                           ;MOTEapp.c: 1428: moteApp_delayms(100);
 10511  005218  0E00               	movlw	0
 10512  00521A  0100               	movlb	0	; () banked
 10513  00521C  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 10514  00521E  0E64               	movlw	100
 10515  005220  6F60               	movwf	moteApp_delayms@length& (0+255),b
 10516  005222  ECA8  F02E         	call	_moteApp_delayms	;wreg free
 10517  005226  0012               	return		;funcret
 10518  005228                     __end_of_moteApp_setSensorsInput:
 10519                           	opt stack 0
 10520                           tblptru	equ	0xFF8
 10521                           tblptrh	equ	0xFF7
 10522                           tblptrl	equ	0xFF6
 10523                           tablat	equ	0xFF5
 10524                           prodh	equ	0xFF4
 10525                           prodl	equ	0xFF3
 10526                           intcon	equ	0xFF2
 10527                           postinc0	equ	0xFEE
 10528                           wreg	equ	0xFE8
 10529                           indf1	equ	0xFE7
 10530                           postdec1	equ	0xFE5
 10531                           fsr1h	equ	0xFE2
 10532                           fsr1l	equ	0xFE1
 10533                           indf2	equ	0xFDF
 10534                           fsr2h	equ	0xFDA
 10535                           fsr2l	equ	0xFD9
 10536                           status	equ	0xFD8
 10537                           
 10538 ;; *************** function _moteApp_lightStringSize *****************
 10539 ;; Defined at:
 10540 ;;		line 1477 in file "../Includes/Board/MOTEapp.c"
 10541 ;; Parameters:    Size  Location     Type
 10542 ;;		None
 10543 ;; Auto vars:     Size  Location     Type
 10544 ;;		None
 10545 ;; Return value:  Size  Location     Type
 10546 ;;                  1    wreg      unsigned char 
 10547 ;; Registers used:
 10548 ;;		wreg, status,2
 10549 ;; Tracked objects:
 10550 ;;		On entry : 0/0
 10551 ;;		On exit  : 0/0
 10552 ;;		Unchanged: 0/0
 10553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10554 ;;      Params:         0       0       0       0       0       0       0       0       0
 10555 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10556 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10557 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10558 ;;Total ram usage:        0 bytes
 10559 ;; Hardware stack levels used:    1
 10560 ;; Hardware stack levels required when called:   11
 10561 ;; This function calls:
 10562 ;;		Nothing
 10563 ;; This function is called by:
 10564 ;;		_moteRunningProcess
 10565 ;; This function uses a non-reentrant model
 10566 ;;
 10567                           
 10568                           	psect	text15
 10569  0062DA                     __ptext15:
 10570                           	opt stack 0
 10571  0062DA                     _moteApp_lightStringSize:
 10572                           	opt stack 17
 10573                           
 10574                           ;MOTEapp.c: 1479: return lightStringSize;
 10575                           
 10576                           ;incstack = 0
 10577  0062DA  5052               	movf	_lightStringSize,w,c
 10578  0062DC  0012               	return	
 10579  0062DE                     __end_of_moteApp_lightStringSize:
 10580                           	opt stack 0
 10581                           tblptru	equ	0xFF8
 10582                           tblptrh	equ	0xFF7
 10583                           tblptrl	equ	0xFF6
 10584                           tablat	equ	0xFF5
 10585                           prodh	equ	0xFF4
 10586                           prodl	equ	0xFF3
 10587                           intcon	equ	0xFF2
 10588                           postinc0	equ	0xFEE
 10589                           wreg	equ	0xFE8
 10590                           indf1	equ	0xFE7
 10591                           postdec1	equ	0xFE5
 10592                           fsr1h	equ	0xFE2
 10593                           fsr1l	equ	0xFE1
 10594                           indf2	equ	0xFDF
 10595                           fsr2h	equ	0xFDA
 10596                           fsr2l	equ	0xFD9
 10597                           status	equ	0xFD8
 10598                           
 10599 ;; *************** function _moteApp_getTempValue *****************
 10600 ;; Defined at:
 10601 ;;		line 1430 in file "../Includes/Board/MOTEapp.c"
 10602 ;; Parameters:    Size  Location     Type
 10603 ;;		None
 10604 ;; Auto vars:     Size  Location     Type
 10605 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 10606 ;; Return value:  Size  Location     Type
 10607 ;;                  2    3[BANK0 ] PTR unsigned char 
 10608 ;; Registers used:
 10609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10610 ;; Tracked objects:
 10611 ;;		On entry : 0/0
 10612 ;;		On exit  : 0/0
 10613 ;;		Unchanged: 0/0
 10614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10615 ;;      Params:         0       2       0       0       0       0       0       0       0
 10616 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10617 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10618 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10619 ;;Total ram usage:        4 bytes
 10620 ;; Hardware stack levels used:    1
 10621 ;; Hardware stack levels required when called:   14
 10622 ;; This function calls:
 10623 ;;		_MOTEapp_getModuleResponse
 10624 ;;		_sendCommand
 10625 ;; This function is called by:
 10626 ;;		_moteHandler
 10627 ;;		_moteRunningProcess
 10628 ;;		_moteApp_testSensors
 10629 ;; This function uses a non-reentrant model
 10630 ;;
 10631                           
 10632                           	psect	text16
 10633  005A62                     __ptext16:
 10634                           	opt stack 0
 10635  005A62                     _moteApp_getTempValue:
 10636                           	opt stack 14
 10637                           
 10638                           ;MOTEapp.c: 1432: uint16_t escapeCounter = 0;
 10639                           
 10640                           ;incstack = 0
 10641  005A62  0E00               	movlw	0
 10642  005A64  0100               	movlb	0	; () banked
 10643  005A66  6F66               	movwf	(moteApp_getTempValue@escapeCounter+1)& (0+255),b
 10644  005A68  0E00               	movlw	0
 10645  005A6A  6F65               	movwf	moteApp_getTempValue@escapeCounter& (0+255),b
 10646                           
 10647                           ; BSR set to: 0
 10648                           ;MOTEapp.c: 1434: sendCommand("sys get pinana GPIO12");
 10649  005A6C  0E57               	movlw	low STR_185
 10650  005A6E  6F61               	movwf	sendCommand@string& (0+255),b
 10651  005A70  0E7A               	movlw	high STR_185
 10652  005A72  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10653  005A74  EC5B  F02E         	call	_sendCommand	;wreg free
 10654                           
 10655                           ;MOTEapp.c: 1435: while ( !MOTEapp_getModuleResponse() )
 10656  005A78  D009               	goto	l748
 10657  005A7A                     
 10658                           ;MOTEapp.c: 1436: {
 10659                           ;MOTEapp.c: 1437: if (++escapeCounter > 50000)
 10660  005A7A  0100               	movlb	0	; () banked
 10661  005A7C  4B65               	infsnz	moteApp_getTempValue@escapeCounter& (0+255),f,b
 10662  005A7E  2B66               	incf	(moteApp_getTempValue@escapeCounter+1)& (0+255),f,b
 10663  005A80  0E51               	movlw	81
 10664  005A82  5D65               	subwf	moteApp_getTempValue@escapeCounter& (0+255),w,b
 10665  005A84  0EC3               	movlw	195
 10666  005A86  5966               	subwfb	(moteApp_getTempValue@escapeCounter+1)& (0+255),w,b
 10667  005A88  B0D8               	btfsc	status,0,c
 10668  005A8A  D005               	goto	u8180
 10669  005A8C                     l748:
 10670                           
 10671                           ; BSR set to: 0
 10672                           
 10673                           ; BSR set to: 0
 10674  005A8C  EC98  F02A         	call	_MOTEapp_getModuleResponse	;wreg free
 10675  005A90  0900               	iorlw	0
 10676  005A92  B4D8               	btfsc	status,2,c
 10677  005A94  D7F2               	goto	l747
 10678  005A96                     u8180:
 10679                           
 10680                           ;MOTEapp.c: 1439: }
 10681                           ;MOTEapp.c: 1441: return &moduleResonseBuffer;
 10682  005A96  0E67               	movlw	low _moduleResonseBuffer
 10683  005A98  0100               	movlb	0	; () banked
 10684  005A9A  6F63               	movwf	?_moteApp_getTempValue& (0+255),b
 10685  005A9C  0E01               	movlw	high _moduleResonseBuffer
 10686  005A9E  6F64               	movwf	(?_moteApp_getTempValue+1)& (0+255),b
 10687  005AA0  0012               	return	
 10688  005AA2                     __end_of_moteApp_getTempValue:
 10689                           	opt stack 0
 10690                           tblptru	equ	0xFF8
 10691                           tblptrh	equ	0xFF7
 10692                           tblptrl	equ	0xFF6
 10693                           tablat	equ	0xFF5
 10694                           prodh	equ	0xFF4
 10695                           prodl	equ	0xFF3
 10696                           intcon	equ	0xFF2
 10697                           postinc0	equ	0xFEE
 10698                           wreg	equ	0xFE8
 10699                           indf1	equ	0xFE7
 10700                           postdec1	equ	0xFE5
 10701                           fsr1h	equ	0xFE2
 10702                           fsr1l	equ	0xFE1
 10703                           indf2	equ	0xFDF
 10704                           fsr2h	equ	0xFDA
 10705                           fsr2l	equ	0xFD9
 10706                           status	equ	0xFD8
 10707                           
 10708 ;; *************** function _moteApp_getLightValue *****************
 10709 ;; Defined at:
 10710 ;;		line 1444 in file "../Includes/Board/MOTEapp.c"
 10711 ;; Parameters:    Size  Location     Type
 10712 ;;		None
 10713 ;; Auto vars:     Size  Location     Type
 10714 ;;  escapeCounte    2   16[BANK0 ] unsigned int 
 10715 ;; Return value:  Size  Location     Type
 10716 ;;                  2   14[BANK0 ] PTR unsigned char 
 10717 ;; Registers used:
 10718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10719 ;; Tracked objects:
 10720 ;;		On entry : 0/0
 10721 ;;		On exit  : 0/0
 10722 ;;		Unchanged: 0/0
 10723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10724 ;;      Params:         0       2       0       0       0       0       0       0       0
 10725 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10726 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10727 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10728 ;;Total ram usage:        4 bytes
 10729 ;; Hardware stack levels used:    1
 10730 ;; Hardware stack levels required when called:   14
 10731 ;; This function calls:
 10732 ;;		_MOTEapp_getModuleResponse
 10733 ;;		_moteApp_setLightString
 10734 ;;		_sendCommand
 10735 ;; This function is called by:
 10736 ;;		_moteHandler
 10737 ;;		_moteRunningProcess
 10738 ;;		_moteApp_testSensors
 10739 ;; This function uses a non-reentrant model
 10740 ;;
 10741                           
 10742                           	psect	text17
 10743  005868                     __ptext17:
 10744                           	opt stack 0
 10745  005868                     _moteApp_getLightValue:
 10746                           	opt stack 14
 10747                           
 10748                           ;MOTEapp.c: 1446: uint16_t escapeCounter = 0;
 10749                           
 10750                           ; BSR set to: 0
 10751                           ;incstack = 0
 10752  005868  0E00               	movlw	0
 10753  00586A  0100               	movlb	0	; () banked
 10754  00586C  6F71               	movwf	(moteApp_getLightValue@escapeCounter+1)& (0+255),b
 10755  00586E  0E00               	movlw	0
 10756  005870  6F70               	movwf	moteApp_getLightValue@escapeCounter& (0+255),b
 10757                           
 10758                           ; BSR set to: 0
 10759                           ;MOTEapp.c: 1448: sendCommand("sys get pinana GPIO13");
 10760  005872  0E6D               	movlw	low STR_186
 10761  005874  6F61               	movwf	sendCommand@string& (0+255),b
 10762  005876  0E7A               	movlw	high STR_186
 10763  005878  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10764  00587A  EC5B  F02E         	call	_sendCommand	;wreg free
 10765                           
 10766                           ;MOTEapp.c: 1449: while ( !MOTEapp_getModuleResponse() )
 10767  00587E  D009               	goto	l755
 10768  005880                     
 10769                           ;MOTEapp.c: 1450: {
 10770                           ;MOTEapp.c: 1451: if (++escapeCounter > 50000)
 10771  005880  0100               	movlb	0	; () banked
 10772  005882  4B70               	infsnz	moteApp_getLightValue@escapeCounter& (0+255),f,b
 10773  005884  2B71               	incf	(moteApp_getLightValue@escapeCounter+1)& (0+255),f,b
 10774  005886  0E51               	movlw	81
 10775  005888  5D70               	subwf	moteApp_getLightValue@escapeCounter& (0+255),w,b
 10776  00588A  0EC3               	movlw	195
 10777  00588C  5971               	subwfb	(moteApp_getLightValue@escapeCounter+1)& (0+255),w,b
 10778  00588E  B0D8               	btfsc	status,0,c
 10779  005890  D005               	goto	u8160
 10780  005892                     l755:
 10781                           
 10782                           ; BSR set to: 0
 10783                           
 10784                           ; BSR set to: 0
 10785  005892  EC98  F02A         	call	_MOTEapp_getModuleResponse	;wreg free
 10786  005896  0900               	iorlw	0
 10787  005898  B4D8               	btfsc	status,2,c
 10788  00589A  D7F2               	goto	l754
 10789  00589C                     u8160:
 10790                           
 10791                           ;MOTEapp.c: 1453: }
 10792                           ;MOTEapp.c: 1454: moteApp_setLightString(moduleResonseBuffer);
 10793  00589C  0E67               	movlw	low _moduleResonseBuffer
 10794  00589E  0100               	movlb	0	; () banked
 10795  0058A0  6F6B               	movwf	moteApp_setLightString@lightString& (0+255),b
 10796  0058A2  0E01               	movlw	high _moduleResonseBuffer
 10797  0058A4  6F6C               	movwf	(moteApp_setLightString@lightString+1)& (0+255),b
 10798  0058A6  EC2E  F02A         	call	_moteApp_setLightString	;wreg free
 10799                           
 10800                           ;MOTEapp.c: 1455: return &moduleResonseBuffer;
 10801  0058AA  0E67               	movlw	low _moduleResonseBuffer
 10802  0058AC  0100               	movlb	0	; () banked
 10803  0058AE  6F6E               	movwf	?_moteApp_getLightValue& (0+255),b
 10804  0058B0  0E01               	movlw	high _moduleResonseBuffer
 10805  0058B2  6F6F               	movwf	(?_moteApp_getLightValue+1)& (0+255),b
 10806  0058B4  0012               	return	
 10807  0058B6                     __end_of_moteApp_getLightValue:
 10808                           	opt stack 0
 10809                           tblptru	equ	0xFF8
 10810                           tblptrh	equ	0xFF7
 10811                           tblptrl	equ	0xFF6
 10812                           tablat	equ	0xFF5
 10813                           prodh	equ	0xFF4
 10814                           prodl	equ	0xFF3
 10815                           intcon	equ	0xFF2
 10816                           postinc0	equ	0xFEE
 10817                           wreg	equ	0xFE8
 10818                           indf1	equ	0xFE7
 10819                           postdec1	equ	0xFE5
 10820                           fsr1h	equ	0xFE2
 10821                           fsr1l	equ	0xFE1
 10822                           indf2	equ	0xFDF
 10823                           fsr2h	equ	0xFDA
 10824                           fsr2l	equ	0xFD9
 10825                           status	equ	0xFD8
 10826                           
 10827 ;; *************** function _moteApp_setLightString *****************
 10828 ;; Defined at:
 10829 ;;		line 1462 in file "../Includes/Board/MOTEapp.c"
 10830 ;; Parameters:    Size  Location     Type
 10831 ;;  lightString     2   11[BANK0 ] PTR unsigned char 
 10832 ;;		 -> moduleResonseBuffer(64), 
 10833 ;; Auto vars:     Size  Location     Type
 10834 ;;  stingPos        1   13[BANK0 ] unsigned char 
 10835 ;; Return value:  Size  Location     Type
 10836 ;;                  1    wreg      void 
 10837 ;; Registers used:
 10838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10839 ;; Tracked objects:
 10840 ;;		On entry : 0/0
 10841 ;;		On exit  : 0/0
 10842 ;;		Unchanged: 0/0
 10843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10844 ;;      Params:         0       2       0       0       0       0       0       0       0
 10845 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10846 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10847 ;;      Totals:         0       3       0       0       0       0       0       0       0
 10848 ;;Total ram usage:        3 bytes
 10849 ;; Hardware stack levels used:    1
 10850 ;; Hardware stack levels required when called:   12
 10851 ;; This function calls:
 10852 ;;		_memcpy
 10853 ;; This function is called by:
 10854 ;;		_moteApp_getLightValue
 10855 ;; This function uses a non-reentrant model
 10856 ;;
 10857                           
 10858                           	psect	text18
 10859  00545C                     __ptext18:
 10860                           	opt stack 0
 10861  00545C                     _moteApp_setLightString:
 10862                           	opt stack 15
 10863                           
 10864                           ;MOTEapp.c: 1464: memcpy(storedLight, clearLight, sizeof(storedLight));
 10865                           
 10866                           ; BSR set to: 0
 10867                           ;incstack = 0
 10868  00545C  0EF5               	movlw	low _storedLight
 10869  00545E  0100               	movlb	0	; () banked
 10870  005460  6F60               	movwf	memcpy@d1& (0+255),b
 10871  005462  0E01               	movlw	high _storedLight
 10872  005464  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10873  005466  0EF0               	movlw	low _clearLight
 10874  005468  6F62               	movwf	memcpy@s1& (0+255),b
 10875  00546A  0E01               	movlw	high _clearLight
 10876  00546C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 10877  00546E  0E00               	movlw	0
 10878  005470  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10879  005472  0E05               	movlw	5
 10880  005474  6F64               	movwf	memcpy@n& (0+255),b
 10881  005476  ECA9  F02C         	call	_memcpy	;wreg free
 10882                           
 10883                           ;MOTEapp.c: 1465: memcpy(storedLight, lightString, sizeof(storedLight));
 10884  00547A  0EF5               	movlw	low _storedLight
 10885  00547C  0100               	movlb	0	; () banked
 10886  00547E  6F60               	movwf	memcpy@d1& (0+255),b
 10887  005480  0E01               	movlw	high _storedLight
 10888  005482  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10889  005484  C06B  F062         	movff	moteApp_setLightString@lightString,memcpy@s1
 10890  005488  C06C  F063         	movff	moteApp_setLightString@lightString+1,memcpy@s1+1
 10891  00548C  0E00               	movlw	0
 10892  00548E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10893  005490  0E05               	movlw	5
 10894  005492  6F64               	movwf	memcpy@n& (0+255),b
 10895  005494  ECA9  F02C         	call	_memcpy	;wreg free
 10896                           
 10897                           ;MOTEapp.c: 1467: for (uint8_t stingPos = 0; stingPos < sizeof(storedLight); stingPos++)
 10898  005498  0E00               	movlw	0
 10899  00549A  0100               	movlb	0	; () banked
 10900  00549C  6F6D               	movwf	moteApp_setLightString@stingPos& (0+255),b
 10901  00549E                     l8779:
 10902                           
 10903                           ; BSR set to: 0
 10904  00549E  0E04               	movlw	4
 10905  0054A0  656D               	cpfsgt	moteApp_setLightString@stingPos& (0+255),b
 10906  0054A2  D001               	goto	l766
 10907  0054A4  D00E               	goto	u6790
 10908  0054A6                     l766:
 10909                           
 10910                           ; BSR set to: 0
 10911                           ;MOTEapp.c: 1468: {
 10912                           ;MOTEapp.c: 1469: if (storedLight[stingPos] == 0x00)
 10913                           
 10914                           ; BSR set to: 0
 10915  0054A6  516D               	movf	moteApp_setLightString@stingPos& (0+255),w,b
 10916  0054A8  0D01               	mullw	1
 10917  0054AA  0EF5               	movlw	low _storedLight
 10918  0054AC  24F3               	addwf	prodl,w,c
 10919  0054AE  6ED9               	movwf	fsr2l,c
 10920  0054B0  0E01               	movlw	high _storedLight
 10921  0054B2  20F4               	addwfc	prodh,w,c
 10922  0054B4  6EDA               	movwf	fsr2h,c
 10923  0054B6  50DF               	movf	indf2,w,c
 10924  0054B8  B4D8               	btfsc	status,2,c
 10925                           
 10926                           ; BSR set to: 0
 10927                           ;MOTEapp.c: 1470: {
 10928                           ;MOTEapp.c: 1471: lightStringSize = stingPos;
 10929  0054BA  C06D  F052         	movff	moteApp_setLightString@stingPos,_lightStringSize
 10930                           
 10931                           ; BSR set to: 0
 10932                           
 10933                           ; BSR set to: 0
 10934  0054BE  2B6D               	incf	moteApp_setLightString@stingPos& (0+255),f,b
 10935  0054C0  D7EE               	goto	l8779
 10936  0054C2                     u6790:
 10937                           
 10938                           ; BSR set to: 0
 10939                           ;MOTEapp.c: 1472: }
 10940                           ;MOTEapp.c: 1473: }
 10941                           ;MOTEapp.c: 1474: __nop();
 10942  0054C2  F000               	nop	
 10943  0054C4  0012               	return		;funcret
 10944  0054C6                     __end_of_moteApp_setLightString:
 10945                           	opt stack 0
 10946                           tblptru	equ	0xFF8
 10947                           tblptrh	equ	0xFF7
 10948                           tblptrl	equ	0xFF6
 10949                           tablat	equ	0xFF5
 10950                           prodh	equ	0xFF4
 10951                           prodl	equ	0xFF3
 10952                           intcon	equ	0xFF2
 10953                           postinc0	equ	0xFEE
 10954                           wreg	equ	0xFE8
 10955                           indf1	equ	0xFE7
 10956                           postdec1	equ	0xFE5
 10957                           fsr1h	equ	0xFE2
 10958                           fsr1l	equ	0xFE1
 10959                           indf2	equ	0xFDF
 10960                           fsr2h	equ	0xFDA
 10961                           fsr2l	equ	0xFD9
 10962                           status	equ	0xFD8
 10963                           
 10964 ;; *************** function _memcpy *****************
 10965 ;; Defined at:
 10966 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcpy.c"
 10967 ;; Parameters:    Size  Location     Type
 10968 ;;  d1              2    0[BANK0 ] PTR void 
 10969 ;;		 -> storedLight(5), 
 10970 ;;  s1              2    2[BANK0 ] PTR const void 
 10971 ;;		 -> clearLight(5), moduleResonseBuffer(64), 
 10972 ;;  n               2    4[BANK0 ] unsigned int 
 10973 ;; Auto vars:     Size  Location     Type
 10974 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 10975 ;;		 -> clearLight(5), moduleResonseBuffer(64), 
 10976 ;;  d               2    6[BANK0 ] PTR unsigned char 
 10977 ;;		 -> storedLight(5), 
 10978 ;;  tmp             1   10[BANK0 ] unsigned char 
 10979 ;; Return value:  Size  Location     Type
 10980 ;;                  2    0[BANK0 ] PTR void 
 10981 ;; Registers used:
 10982 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10983 ;; Tracked objects:
 10984 ;;		On entry : 0/0
 10985 ;;		On exit  : 0/0
 10986 ;;		Unchanged: 0/0
 10987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10988 ;;      Params:         0       6       0       0       0       0       0       0       0
 10989 ;;      Locals:         0       5       0       0       0       0       0       0       0
 10990 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10991 ;;      Totals:         0      11       0       0       0       0       0       0       0
 10992 ;;Total ram usage:       11 bytes
 10993 ;; Hardware stack levels used:    1
 10994 ;; Hardware stack levels required when called:   11
 10995 ;; This function calls:
 10996 ;;		Nothing
 10997 ;; This function is called by:
 10998 ;;		_moteApp_setLightString
 10999 ;; This function uses a non-reentrant model
 11000 ;;
 11001                           
 11002                           	psect	text19
 11003  005952                     __ptext19:
 11004                           	opt stack 0
 11005  005952                     _memcpy:
 11006                           	opt stack 15
 11007                           
 11008                           ;incstack = 0
 11009  005952  C062  F068         	movff	memcpy@s1,memcpy@s
 11010  005956  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 11011  00595A  C060  F066         	movff	memcpy@d1,memcpy@d
 11012  00595E  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 11013  005962  D011               	goto	l2752
 11014  005964                     l8347:
 11015  005964  C068  FFD9         	movff	memcpy@s,fsr2l
 11016  005968  C069  FFDA         	movff	memcpy@s+1,fsr2h
 11017  00596C  50DF               	movf	indf2,w,c
 11018  00596E  0100               	movlb	0	; () banked
 11019  005970  6F6A               	movwf	memcpy@tmp& (0+255),b
 11020                           
 11021                           ; BSR set to: 0
 11022  005972  4B68               	infsnz	memcpy@s& (0+255),f,b
 11023  005974  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 11024                           
 11025                           ; BSR set to: 0
 11026  005976  C066  FFD9         	movff	memcpy@d,fsr2l
 11027  00597A  C067  FFDA         	movff	memcpy@d+1,fsr2h
 11028  00597E  C06A  FFDF         	movff	memcpy@tmp,indf2
 11029                           
 11030                           ; BSR set to: 0
 11031  005982  4B66               	infsnz	memcpy@d& (0+255),f,b
 11032  005984  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 11033  005986                     l2752:
 11034                           
 11035                           ; BSR set to: 0
 11036  005986  0100               	movlb	0	; () banked
 11037  005988  0764               	decf	memcpy@n& (0+255),f,b
 11038  00598A  A0D8               	btfss	status,0,c
 11039  00598C  0765               	decf	(memcpy@n+1)& (0+255),f,b
 11040  00598E  2964               	incf	memcpy@n& (0+255),w,b
 11041  005990  E1E9               	bnz	l8347
 11042  005992  2965               	incf	(memcpy@n+1)& (0+255),w,b
 11043  005994  B4D8               	btfsc	status,2,c
 11044  005996  0012               	return	
 11045  005998  D7E5               	goto	l2753
 11046  00599A                     __end_of_memcpy:
 11047                           	opt stack 0
 11048                           tblptru	equ	0xFF8
 11049                           tblptrh	equ	0xFF7
 11050                           tblptrl	equ	0xFF6
 11051                           tablat	equ	0xFF5
 11052                           prodh	equ	0xFF4
 11053                           prodl	equ	0xFF3
 11054                           intcon	equ	0xFF2
 11055                           postinc0	equ	0xFEE
 11056                           wreg	equ	0xFE8
 11057                           indf1	equ	0xFE7
 11058                           postdec1	equ	0xFE5
 11059                           fsr1h	equ	0xFE2
 11060                           fsr1l	equ	0xFE1
 11061                           indf2	equ	0xFDF
 11062                           fsr2h	equ	0xFDA
 11063                           fsr2l	equ	0xFD9
 11064                           status	equ	0xFD8
 11065                           
 11066 ;; *************** function _moteApp_getLightString *****************
 11067 ;; Defined at:
 11068 ;;		line 1481 in file "../Includes/Board/MOTEapp.c"
 11069 ;; Parameters:    Size  Location     Type
 11070 ;;		None
 11071 ;; Auto vars:     Size  Location     Type
 11072 ;;		None
 11073 ;; Return value:  Size  Location     Type
 11074 ;;                  2    0[BANK0 ] PTR unsigned char 
 11075 ;; Registers used:
 11076 ;;		wreg, status,2, status,0
 11077 ;; Tracked objects:
 11078 ;;		On entry : 0/0
 11079 ;;		On exit  : 0/0
 11080 ;;		Unchanged: 0/0
 11081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11082 ;;      Params:         0       2       0       0       0       0       0       0       0
 11083 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11084 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11085 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11086 ;;Total ram usage:        2 bytes
 11087 ;; Hardware stack levels used:    1
 11088 ;; Hardware stack levels required when called:   11
 11089 ;; This function calls:
 11090 ;;		Nothing
 11091 ;; This function is called by:
 11092 ;;		_moteRunningProcess
 11093 ;; This function uses a non-reentrant model
 11094 ;;
 11095                           
 11096                           	psect	text20
 11097  00624A                     __ptext20:
 11098                           	opt stack 0
 11099  00624A                     _moteApp_getLightString:
 11100                           	opt stack 17
 11101                           
 11102                           ;MOTEapp.c: 1483: return &storedLight;
 11103                           
 11104                           ; BSR set to: 0
 11105                           ;incstack = 0
 11106  00624A  0EF5               	movlw	low _storedLight
 11107  00624C  0100               	movlb	0	; () banked
 11108  00624E  6F60               	movwf	?_moteApp_getLightString& (0+255),b
 11109  006250  0E01               	movlw	high _storedLight
 11110  006252  6F61               	movwf	(?_moteApp_getLightString+1)& (0+255),b
 11111  006254  0012               	return	
 11112  006256                     __end_of_moteApp_getLightString:
 11113                           	opt stack 0
 11114                           tblptru	equ	0xFF8
 11115                           tblptrh	equ	0xFF7
 11116                           tblptrl	equ	0xFF6
 11117                           tablat	equ	0xFF5
 11118                           prodh	equ	0xFF4
 11119                           prodl	equ	0xFF3
 11120                           intcon	equ	0xFF2
 11121                           postinc0	equ	0xFEE
 11122                           wreg	equ	0xFE8
 11123                           indf1	equ	0xFE7
 11124                           postdec1	equ	0xFE5
 11125                           fsr1h	equ	0xFE2
 11126                           fsr1l	equ	0xFE1
 11127                           indf2	equ	0xFDF
 11128                           fsr2h	equ	0xFDA
 11129                           fsr2l	equ	0xFD9
 11130                           status	equ	0xFD8
 11131                           
 11132 ;; *************** function _moteApp_convertSensorValue *****************
 11133 ;; Defined at:
 11134 ;;		line 1372 in file "../Includes/Board/MOTEapp.c"
 11135 ;; Parameters:    Size  Location     Type
 11136 ;;  string          2   18[BANK0 ] PTR const unsigned char 
 11137 ;;		 -> moduleResonseBuffer(64), 
 11138 ;; Auto vars:     Size  Location     Type
 11139 ;;  convertedVal    2   23[BANK0 ] unsigned int 
 11140 ;;  index           1   25[BANK0 ] unsigned char 
 11141 ;; Return value:  Size  Location     Type
 11142 ;;                  2   18[BANK0 ] unsigned int 
 11143 ;; Registers used:
 11144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11145 ;; Tracked objects:
 11146 ;;		On entry : 0/0
 11147 ;;		On exit  : 0/0
 11148 ;;		Unchanged: 0/0
 11149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11150 ;;      Params:         0       2       0       0       0       0       0       0       0
 11151 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11152 ;;      Temps:          0       3       0       0       0       0       0       0       0
 11153 ;;      Totals:         0       8       0       0       0       0       0       0       0
 11154 ;;Total ram usage:        8 bytes
 11155 ;; Hardware stack levels used:    1
 11156 ;; Hardware stack levels required when called:   12
 11157 ;; This function calls:
 11158 ;;		___wmul
 11159 ;; This function is called by:
 11160 ;;		_moteHandler
 11161 ;;		_moteRunningProcess
 11162 ;;		_moteApp_testSensors
 11163 ;; This function uses a non-reentrant model
 11164 ;;
 11165                           
 11166                           	psect	text21
 11167  005132                     __ptext21:
 11168                           	opt stack 0
 11169  005132                     _moteApp_convertSensorValue:
 11170                           	opt stack 16
 11171                           
 11172                           ;MOTEapp.c: 1374: uint8_t index;
 11173                           ;MOTEapp.c: 1375: uint16_t convertedValue = 0;
 11174                           
 11175                           ; BSR set to: 0
 11176                           ;incstack = 0
 11177  005132  0E00               	movlw	0
 11178  005134  0100               	movlb	0	; () banked
 11179  005136  6F78               	movwf	(moteApp_convertSensorValue@convertedValue+1)& (0+255),b
 11180  005138  0E00               	movlw	0
 11181  00513A  6F77               	movwf	moteApp_convertSensorValue@convertedValue& (0+255),b
 11182                           
 11183                           ;MOTEapp.c: 1376: for(index = 0; index < 4; index++)
 11184  00513C  0E00               	movlw	0
 11185  00513E  6F79               	movwf	moteApp_convertSensorValue@index& (0+255),b
 11186  005140                     l9719:
 11187                           
 11188                           ; BSR set to: 0
 11189  005140  0E03               	movlw	3
 11190  005142  6579               	cpfsgt	moteApp_convertSensorValue@index& (0+255),b
 11191  005144  D001               	goto	l724
 11192  005146  D02F               	goto	u8220
 11193  005148                     l724:
 11194                           
 11195                           ; BSR set to: 0
 11196                           ;MOTEapp.c: 1377: {
 11197                           ;MOTEapp.c: 1378: if (*string != 0)
 11198                           
 11199                           ; BSR set to: 0
 11200  005148  C072  FFD9         	movff	moteApp_convertSensorValue@string,fsr2l
 11201  00514C  C073  FFDA         	movff	moteApp_convertSensorValue@string+1,fsr2h
 11202  005150  50DF               	movf	indf2,w,c
 11203  005152  B4D8               	btfsc	status,2,c
 11204  005154  D028               	goto	u8220
 11205                           
 11206                           ; BSR set to: 0
 11207                           ;MOTEapp.c: 1379: {
 11208                           ;MOTEapp.c: 1380: if (index != 0)
 11209  005156  5179               	movf	moteApp_convertSensorValue@index& (0+255),w,b
 11210  005158  B4D8               	btfsc	status,2,c
 11211  00515A  D00E               	goto	l727
 11212                           
 11213                           ; BSR set to: 0
 11214                           ;MOTEapp.c: 1381: convertedValue = convertedValue * 10;
 11215  00515C  C077  F060         	movff	moteApp_convertSensorValue@convertedValue,___wmul@multiplier
 11216  005160  C078  F061         	movff	moteApp_convertSensorValue@convertedValue+1,___wmul@multiplier+1
 11217  005164  0E00               	movlw	0
 11218  005166  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11219  005168  0E0A               	movlw	10
 11220  00516A  6F62               	movwf	___wmul@multiplicand& (0+255),b
 11221  00516C  ECC0  F02F         	call	___wmul	;wreg free
 11222  005170  C060  F077         	movff	?___wmul,moteApp_convertSensorValue@convertedValue
 11223  005174  C061  F078         	movff	?___wmul+1,moteApp_convertSensorValue@convertedValue+1
 11224  005178                     l727:
 11225                           
 11226                           ;MOTEapp.c: 1383: convertedValue = (*string++ - '0') + convertedValue;
 11227  005178  C072  FFD9         	movff	moteApp_convertSensorValue@string,fsr2l
 11228  00517C  C073  FFDA         	movff	moteApp_convertSensorValue@string+1,fsr2h
 11229  005180  50DF               	movf	indf2,w,c
 11230  005182  0100               	movlb	0	; () banked
 11231  005184  6F74               	movwf	??_moteApp_convertSensorValue& (0+255),b
 11232  005186  5174               	movf	??_moteApp_convertSensorValue& (0+255),w,b
 11233  005188  2577               	addwf	moteApp_convertSensorValue@convertedValue& (0+255),w,b
 11234  00518A  6F75               	movwf	(??_moteApp_convertSensorValue+1)& (0+255),b
 11235  00518C  0E00               	movlw	0
 11236  00518E  2178               	addwfc	(moteApp_convertSensorValue@convertedValue+1)& (0+255),w,b
 11237  005190  6F76               	movwf	(??_moteApp_convertSensorValue+2)& (0+255),b
 11238  005192  0ED0               	movlw	208
 11239  005194  2575               	addwf	(??_moteApp_convertSensorValue+1)& (0+255),w,b
 11240  005196  6F77               	movwf	moteApp_convertSensorValue@convertedValue& (0+255),b
 11241  005198  0EFF               	movlw	255
 11242  00519A  2176               	addwfc	(??_moteApp_convertSensorValue+2)& (0+255),w,b
 11243  00519C  6F78               	movwf	(moteApp_convertSensorValue@convertedValue+1)& (0+255),b
 11244                           
 11245                           ; BSR set to: 0
 11246  00519E  4B72               	infsnz	moteApp_convertSensorValue@string& (0+255),f,b
 11247  0051A0  2B73               	incf	(moteApp_convertSensorValue@string+1)& (0+255),f,b
 11248                           
 11249                           ; BSR set to: 0
 11250                           
 11251                           ; BSR set to: 0
 11252                           
 11253                           ; BSR set to: 0
 11254                           ;MOTEapp.c: 1385: else
 11255                           ;MOTEapp.c: 1386: {
 11256                           ;MOTEapp.c: 1387: break;
 11257                           
 11258                           ;MOTEapp.c: 1384: }
 11259  0051A2  2B79               	incf	moteApp_convertSensorValue@index& (0+255),f,b
 11260  0051A4  D7CD               	goto	l9719
 11261  0051A6                     u8220:
 11262                           
 11263                           ; BSR set to: 0
 11264                           ;MOTEapp.c: 1388: }
 11265                           ;MOTEapp.c: 1389: }
 11266                           ;MOTEapp.c: 1390: return convertedValue;
 11267  0051A6  C077  F072         	movff	moteApp_convertSensorValue@convertedValue,?_moteApp_convertSensorValue
 11268  0051AA  C078  F073         	movff	moteApp_convertSensorValue@convertedValue+1,?_moteApp_convertSensorValue+1
 11269                           
 11270                           ; BSR set to: 0
 11271  0051AE  0012               	return		;funcret
 11272  0051B0                     __end_of_moteApp_convertSensorValue:
 11273                           	opt stack 0
 11274                           tblptru	equ	0xFF8
 11275                           tblptrh	equ	0xFF7
 11276                           tblptrl	equ	0xFF6
 11277                           tablat	equ	0xFF5
 11278                           prodh	equ	0xFF4
 11279                           prodl	equ	0xFF3
 11280                           intcon	equ	0xFF2
 11281                           postinc0	equ	0xFEE
 11282                           wreg	equ	0xFE8
 11283                           indf1	equ	0xFE7
 11284                           postdec1	equ	0xFE5
 11285                           fsr1h	equ	0xFE2
 11286                           fsr1l	equ	0xFE1
 11287                           indf2	equ	0xFDF
 11288                           fsr2h	equ	0xFDA
 11289                           fsr2l	equ	0xFD9
 11290                           status	equ	0xFD8
 11291                           
 11292 ;; *************** function ___wmul *****************
 11293 ;; Defined at:
 11294 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 11295 ;; Parameters:    Size  Location     Type
 11296 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11297 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11298 ;; Auto vars:     Size  Location     Type
 11299 ;;  product         2    4[BANK0 ] unsigned int 
 11300 ;; Return value:  Size  Location     Type
 11301 ;;                  2    0[BANK0 ] unsigned int 
 11302 ;; Registers used:
 11303 ;;		wreg, status,2, status,0, prodl, prodh
 11304 ;; Tracked objects:
 11305 ;;		On entry : 0/0
 11306 ;;		On exit  : 0/0
 11307 ;;		Unchanged: 0/0
 11308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11309 ;;      Params:         0       4       0       0       0       0       0       0       0
 11310 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11311 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11312 ;;      Totals:         0       6       0       0       0       0       0       0       0
 11313 ;;Total ram usage:        6 bytes
 11314 ;; Hardware stack levels used:    1
 11315 ;; Hardware stack levels required when called:   11
 11316 ;; This function calls:
 11317 ;;		Nothing
 11318 ;; This function is called by:
 11319 ;;		_moteApp_convertSensorValue
 11320 ;; This function uses a non-reentrant model
 11321 ;;
 11322                           
 11323                           	psect	text22
 11324  005F80                     __ptext22:
 11325                           	opt stack 0
 11326  005F80                     ___wmul:
 11327                           	opt stack 16
 11328                           
 11329                           ; BSR set to: 0
 11330                           ;incstack = 0
 11331  005F80  0100               	movlb	0	; () banked
 11332  005F82  5160               	movf	___wmul@multiplier& (0+255),w,b
 11333  005F84  0362               	mulwf	___wmul@multiplicand& (0+255),b
 11334  005F86  CFF3 F064          	movff	prodl,___wmul@product
 11335  005F8A  CFF4 F065          	movff	prodh,___wmul@product+1
 11336  005F8E  5160               	movf	___wmul@multiplier& (0+255),w,b
 11337  005F90  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11338  005F92  50F3               	movf	prodl,w,c
 11339  005F94  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 11340  005F96  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11341  005F98  0362               	mulwf	___wmul@multiplicand& (0+255),b
 11342  005F9A  50F3               	movf	prodl,w,c
 11343  005F9C  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 11344                           
 11345                           ; BSR set to: 0
 11346  005F9E  C064  F060         	movff	___wmul@product,?___wmul
 11347  005FA2  C065  F061         	movff	___wmul@product+1,?___wmul+1
 11348  005FA6  0012               	return	
 11349  005FA8                     __end_of___wmul:
 11350                           	opt stack 0
 11351                           tblptru	equ	0xFF8
 11352                           tblptrh	equ	0xFF7
 11353                           tblptrl	equ	0xFF6
 11354                           tablat	equ	0xFF5
 11355                           prodh	equ	0xFF4
 11356                           prodl	equ	0xFF3
 11357                           intcon	equ	0xFF2
 11358                           postinc0	equ	0xFEE
 11359                           wreg	equ	0xFE8
 11360                           indf1	equ	0xFE7
 11361                           postdec1	equ	0xFE5
 11362                           fsr1h	equ	0xFE2
 11363                           fsr1l	equ	0xFE1
 11364                           indf2	equ	0xFDF
 11365                           fsr2h	equ	0xFDA
 11366                           fsr2l	equ	0xFD9
 11367                           status	equ	0xFD8
 11368                           
 11369 ;; *************** function _moteApp_clearBuffers *****************
 11370 ;; Defined at:
 11371 ;;		line 1312 in file "../Includes/Board/MOTEapp.c"
 11372 ;; Parameters:    Size  Location     Type
 11373 ;;		None
 11374 ;; Auto vars:     Size  Location     Type
 11375 ;;  counter         1    3[BANK0 ] unsigned char 
 11376 ;;  counter         1    2[BANK0 ] unsigned char 
 11377 ;;  counter         1    1[BANK0 ] unsigned char 
 11378 ;;  counter         1    0[BANK0 ] unsigned char 
 11379 ;; Return value:  Size  Location     Type
 11380 ;;                  1    wreg      void 
 11381 ;; Registers used:
 11382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11383 ;; Tracked objects:
 11384 ;;		On entry : 0/0
 11385 ;;		On exit  : 0/0
 11386 ;;		Unchanged: 0/0
 11387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11388 ;;      Params:         0       0       0       0       0       0       0       0       0
 11389 ;;      Locals:         0       4       0       0       0       0       0       0       0
 11390 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11391 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11392 ;;Total ram usage:        4 bytes
 11393 ;; Hardware stack levels used:    1
 11394 ;; Hardware stack levels required when called:   11
 11395 ;; This function calls:
 11396 ;;		Nothing
 11397 ;; This function is called by:
 11398 ;;		_moteRunningProcess
 11399 ;; This function uses a non-reentrant model
 11400 ;;
 11401                           
 11402                           	psect	text23
 11403  004D00                     __ptext23:
 11404                           	opt stack 0
 11405  004D00                     _moteApp_clearBuffers:
 11406                           	opt stack 17
 11407                           
 11408                           ;MOTEapp.c: 1314: for (uint8_t counter = 0; counter < 3; counter++)
 11409                           
 11410                           ; BSR set to: 0
 11411                           ;incstack = 0
 11412  004D00  0E00               	movlw	0
 11413  004D02  0100               	movlb	0	; () banked
 11414  004D04  6F60               	movwf	moteApp_clearBuffers@counter& (0+255),b
 11415  004D06                     l9793:
 11416                           
 11417                           ; BSR set to: 0
 11418  004D06  0E02               	movlw	2
 11419  004D08  6560               	cpfsgt	moteApp_clearBuffers@counter& (0+255),b
 11420  004D0A  D001               	goto	l700
 11421  004D0C  D00C               	goto	u8310
 11422  004D0E                     l700:
 11423                           
 11424                           ; BSR set to: 0
 11425                           ;MOTEapp.c: 1315: {
 11426                           ;MOTEapp.c: 1316: responsePortNum[counter] = 0;
 11427                           
 11428                           ; BSR set to: 0
 11429  004D0E  5160               	movf	moteApp_clearBuffers@counter& (0+255),w,b
 11430  004D10  0D01               	mullw	1
 11431  004D12  0EFA               	movlw	low _responsePortNum
 11432  004D14  24F3               	addwf	prodl,w,c
 11433  004D16  6ED9               	movwf	fsr2l,c
 11434  004D18  0E01               	movlw	high _responsePortNum
 11435  004D1A  20F4               	addwfc	prodh,w,c
 11436  004D1C  6EDA               	movwf	fsr2h,c
 11437  004D1E  0E00               	movlw	0
 11438  004D20  6EDF               	movwf	indf2,c
 11439                           
 11440                           ; BSR set to: 0
 11441  004D22  2B60               	incf	moteApp_clearBuffers@counter& (0+255),f,b
 11442  004D24  D7F0               	goto	l9793
 11443  004D26                     u8310:
 11444                           
 11445                           ; BSR set to: 0
 11446                           ;MOTEapp.c: 1317: }
 11447                           ;MOTEapp.c: 1318: for (uint8_t counter = 0; counter < 34; counter++)
 11448                           
 11449                           ; BSR set to: 0
 11450  004D26  0E00               	movlw	0
 11451  004D28  6F61               	movwf	moteApp_clearBuffers@counter_1740& (0+255),b
 11452  004D2A                     l9805:
 11453                           
 11454                           ; BSR set to: 0
 11455  004D2A  0E21               	movlw	33
 11456  004D2C  6561               	cpfsgt	moteApp_clearBuffers@counter_1740& (0+255),b
 11457  004D2E  D001               	goto	l702
 11458  004D30  D00C               	goto	u8330
 11459  004D32                     l702:
 11460                           
 11461                           ; BSR set to: 0
 11462                           ;MOTEapp.c: 1319: {
 11463                           ;MOTEapp.c: 1320: responseId[counter] = 0;
 11464                           
 11465                           ; BSR set to: 0
 11466  004D32  5161               	movf	moteApp_clearBuffers@counter_1740& (0+255),w,b
 11467  004D34  0D01               	mullw	1
 11468  004D36  0E30               	movlw	low _responseId
 11469  004D38  24F3               	addwf	prodl,w,c
 11470  004D3A  6ED9               	movwf	fsr2l,c
 11471  004D3C  0E01               	movlw	high _responseId
 11472  004D3E  20F4               	addwfc	prodh,w,c
 11473  004D40  6EDA               	movwf	fsr2h,c
 11474  004D42  0E00               	movlw	0
 11475  004D44  6EDF               	movwf	indf2,c
 11476                           
 11477                           ; BSR set to: 0
 11478  004D46  2B61               	incf	moteApp_clearBuffers@counter_1740& (0+255),f,b
 11479  004D48  D7F0               	goto	l9805
 11480  004D4A                     u8330:
 11481                           
 11482                           ; BSR set to: 0
 11483                           ;MOTEapp.c: 1321: }
 11484                           ;MOTEapp.c: 1322: for (uint8_t counter = 0; counter < 32; counter++)
 11485                           
 11486                           ; BSR set to: 0
 11487  004D4A  0E00               	movlw	0
 11488  004D4C  6F62               	movwf	moteApp_clearBuffers@counter_1741& (0+255),b
 11489  004D4E                     l9817:
 11490                           
 11491                           ; BSR set to: 0
 11492  004D4E  0E1F               	movlw	31
 11493  004D50  6562               	cpfsgt	moteApp_clearBuffers@counter_1741& (0+255),b
 11494  004D52  D001               	goto	l704
 11495  004D54  D00C               	goto	u8350
 11496  004D56                     l704:
 11497                           
 11498                           ; BSR set to: 0
 11499                           ;MOTEapp.c: 1323: {
 11500                           ;MOTEapp.c: 1324: responseData[counter] = 0;
 11501                           
 11502                           ; BSR set to: 0
 11503  004D56  5162               	movf	moteApp_clearBuffers@counter_1741& (0+255),w,b
 11504  004D58  0D01               	mullw	1
 11505  004D5A  0EA7               	movlw	low _responseData
 11506  004D5C  24F3               	addwf	prodl,w,c
 11507  004D5E  6ED9               	movwf	fsr2l,c
 11508  004D60  0E01               	movlw	high _responseData
 11509  004D62  20F4               	addwfc	prodh,w,c
 11510  004D64  6EDA               	movwf	fsr2h,c
 11511  004D66  0E00               	movlw	0
 11512  004D68  6EDF               	movwf	indf2,c
 11513                           
 11514                           ; BSR set to: 0
 11515  004D6A  2B62               	incf	moteApp_clearBuffers@counter_1741& (0+255),f,b
 11516  004D6C  D7F0               	goto	l9817
 11517  004D6E                     u8350:
 11518                           
 11519                           ; BSR set to: 0
 11520                           ;MOTEapp.c: 1325: }
 11521                           ;MOTEapp.c: 1326: for (uint8_t counter = 0; counter < sizeof(dataBuffer); counter++)
 11522                           
 11523                           ; BSR set to: 0
 11524  004D6E  0E00               	movlw	0
 11525  004D70  6F63               	movwf	moteApp_clearBuffers@counter_1742& (0+255),b
 11526  004D72                     l9829:
 11527                           
 11528                           ; BSR set to: 0
 11529  004D72  0E0F               	movlw	15
 11530  004D74  6563               	cpfsgt	moteApp_clearBuffers@counter_1742& (0+255),b
 11531  004D76  D001               	goto	l706
 11532  004D78  0012               	return	
 11533  004D7A                     l706:
 11534                           
 11535                           ; BSR set to: 0
 11536                           ;MOTEapp.c: 1327: {
 11537                           ;MOTEapp.c: 1328: dataBuffer[counter] = 0;
 11538                           
 11539                           ; BSR set to: 0
 11540  004D7A  5163               	movf	moteApp_clearBuffers@counter_1742& (0+255),w,b
 11541  004D7C  0D01               	mullw	1
 11542  004D7E  0EC7               	movlw	low _dataBuffer
 11543  004D80  24F3               	addwf	prodl,w,c
 11544  004D82  6ED9               	movwf	fsr2l,c
 11545  004D84  0E01               	movlw	high _dataBuffer
 11546  004D86  20F4               	addwfc	prodh,w,c
 11547  004D88  6EDA               	movwf	fsr2h,c
 11548  004D8A  0E00               	movlw	0
 11549  004D8C  6EDF               	movwf	indf2,c
 11550                           
 11551                           ; BSR set to: 0
 11552  004D8E  2B63               	incf	moteApp_clearBuffers@counter_1742& (0+255),f,b
 11553  004D90  D7F0               	goto	l9829
 11554  004D92                     __end_of_moteApp_clearBuffers:
 11555                           	opt stack 0
 11556                           tblptru	equ	0xFF8
 11557                           tblptrh	equ	0xFF7
 11558                           tblptrl	equ	0xFF6
 11559                           tablat	equ	0xFF5
 11560                           prodh	equ	0xFF4
 11561                           prodl	equ	0xFF3
 11562                           intcon	equ	0xFF2
 11563                           postinc0	equ	0xFEE
 11564                           wreg	equ	0xFE8
 11565                           indf1	equ	0xFE7
 11566                           postdec1	equ	0xFE5
 11567                           fsr1h	equ	0xFE2
 11568                           fsr1l	equ	0xFE1
 11569                           indf2	equ	0xFDF
 11570                           fsr2h	equ	0xFDA
 11571                           fsr2l	equ	0xFD9
 11572                           status	equ	0xFD8
 11573                           
 11574 ;; *************** function _moteApp_addToDataBuffer *****************
 11575 ;; Defined at:
 11576 ;;		line 1354 in file "../Includes/Board/MOTEapp.c"
 11577 ;; Parameters:    Size  Location     Type
 11578 ;;  string          2   18[BANK0 ] PTR const unsigned char 
 11579 ;;		 -> storedLight(5), moduleResonseBuffer(64), 
 11580 ;;  bufferLocati    1   20[BANK0 ] unsigned char 
 11581 ;; Auto vars:     Size  Location     Type
 11582 ;;  index           1   21[BANK0 ] unsigned char 
 11583 ;; Return value:  Size  Location     Type
 11584 ;;                  1    wreg      unsigned char 
 11585 ;; Registers used:
 11586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11587 ;; Tracked objects:
 11588 ;;		On entry : 0/0
 11589 ;;		On exit  : 0/0
 11590 ;;		Unchanged: 0/0
 11591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11592 ;;      Params:         0       3       0       0       0       0       0       0       0
 11593 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11594 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11595 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11596 ;;Total ram usage:        4 bytes
 11597 ;; Hardware stack levels used:    1
 11598 ;; Hardware stack levels required when called:   11
 11599 ;; This function calls:
 11600 ;;		Nothing
 11601 ;; This function is called by:
 11602 ;;		_moteRunningProcess
 11603 ;; This function uses a non-reentrant model
 11604 ;;
 11605                           
 11606                           	psect	text24
 11607  0055FC                     __ptext24:
 11608                           	opt stack 0
 11609  0055FC                     _moteApp_addToDataBuffer:
 11610                           	opt stack 17
 11611                           
 11612                           ;MOTEapp.c: 1356: uint8_t index;
 11613                           ;MOTEapp.c: 1357: for(index = 0; index < 6; index++)
 11614                           
 11615                           ; BSR set to: 0
 11616                           ;incstack = 0
 11617  0055FC  0E00               	movlw	0
 11618  0055FE  0100               	movlb	0	; () banked
 11619  005600  6F75               	movwf	moteApp_addToDataBuffer@index& (0+255),b
 11620  005602                     l9867:
 11621                           
 11622                           ; BSR set to: 0
 11623  005602  0E05               	movlw	5
 11624  005604  6575               	cpfsgt	moteApp_addToDataBuffer@index& (0+255),b
 11625  005606  D001               	goto	l717
 11626  005608  D026               	goto	u8440
 11627  00560A                     l717:
 11628                           
 11629                           ; BSR set to: 0
 11630                           ;MOTEapp.c: 1358: {
 11631                           ;MOTEapp.c: 1359: if (*string != 0)
 11632                           
 11633                           ; BSR set to: 0
 11634  00560A  C072  FFD9         	movff	moteApp_addToDataBuffer@string,fsr2l
 11635  00560E  C073  FFDA         	movff	moteApp_addToDataBuffer@string+1,fsr2h
 11636  005612  50DF               	movf	indf2,w,c
 11637  005614  B4D8               	btfsc	status,2,c
 11638  005616  D012               	goto	l719
 11639                           
 11640                           ; BSR set to: 0
 11641                           ;MOTEapp.c: 1360: {
 11642                           ;MOTEapp.c: 1361: dataBuffer[bufferLocation++] = *string++;
 11643  005618  C072  FFD9         	movff	moteApp_addToDataBuffer@string,fsr2l
 11644  00561C  C073  FFDA         	movff	moteApp_addToDataBuffer@string+1,fsr2h
 11645  005620  5174               	movf	moteApp_addToDataBuffer@bufferLocation& (0+255),w,b
 11646  005622  0D01               	mullw	1
 11647  005624  0EC7               	movlw	low _dataBuffer
 11648  005626  24F3               	addwf	prodl,w,c
 11649  005628  6EE1               	movwf	fsr1l,c
 11650  00562A  0E01               	movlw	high _dataBuffer
 11651  00562C  20F4               	addwfc	prodh,w,c
 11652  00562E  6EE2               	movwf	fsr1h,c
 11653  005630  CFDF FFE7          	movff	indf2,indf1
 11654                           
 11655                           ; BSR set to: 0
 11656  005634  4B72               	infsnz	moteApp_addToDataBuffer@string& (0+255),f,b
 11657  005636  2B73               	incf	(moteApp_addToDataBuffer@string+1)& (0+255),f,b
 11658                           
 11659                           ; BSR set to: 0
 11660  005638  2B74               	incf	moteApp_addToDataBuffer@bufferLocation& (0+255),f,b
 11661                           
 11662                           ;MOTEapp.c: 1362: }
 11663  00563A  D00B               	goto	l720
 11664  00563C                     l719:
 11665                           
 11666                           ; BSR set to: 0
 11667                           ;MOTEapp.c: 1363: else
 11668                           ;MOTEapp.c: 1364: {
 11669                           ;MOTEapp.c: 1365: dataBuffer[bufferLocation] = 0x20;
 11670                           
 11671                           ; BSR set to: 0
 11672  00563C  5174               	movf	moteApp_addToDataBuffer@bufferLocation& (0+255),w,b
 11673  00563E  0D01               	mullw	1
 11674  005640  0EC7               	movlw	low _dataBuffer
 11675  005642  24F3               	addwf	prodl,w,c
 11676  005644  6ED9               	movwf	fsr2l,c
 11677  005646  0E01               	movlw	high _dataBuffer
 11678  005648  20F4               	addwfc	prodh,w,c
 11679  00564A  6EDA               	movwf	fsr2h,c
 11680  00564C  0E20               	movlw	32
 11681  00564E  6EDF               	movwf	indf2,c
 11682                           
 11683                           ;MOTEapp.c: 1366: break;
 11684  005650  D002               	goto	u8440
 11685  005652                     l720:
 11686                           
 11687                           ; BSR set to: 0
 11688                           
 11689                           ; BSR set to: 0
 11690  005652  2B75               	incf	moteApp_addToDataBuffer@index& (0+255),f,b
 11691  005654  D7D6               	goto	l9867
 11692  005656                     u8440:
 11693                           
 11694                           ; BSR set to: 0
 11695                           ;MOTEapp.c: 1367: }
 11696                           ;MOTEapp.c: 1368: }
 11697                           ;MOTEapp.c: 1369: return index;
 11698                           
 11699                           ; BSR set to: 0
 11700  005656  5175               	movf	moteApp_addToDataBuffer@index& (0+255),w,b
 11701  005658  0012               	return	
 11702  00565A                     __end_of_moteApp_addToDataBuffer:
 11703                           	opt stack 0
 11704                           tblptru	equ	0xFF8
 11705                           tblptrh	equ	0xFF7
 11706                           tblptrl	equ	0xFF6
 11707                           tablat	equ	0xFF5
 11708                           prodh	equ	0xFF4
 11709                           prodl	equ	0xFF3
 11710                           intcon	equ	0xFF2
 11711                           postinc0	equ	0xFEE
 11712                           wreg	equ	0xFE8
 11713                           indf1	equ	0xFE7
 11714                           postdec1	equ	0xFE5
 11715                           fsr1h	equ	0xFE2
 11716                           fsr1l	equ	0xFE1
 11717                           indf2	equ	0xFDF
 11718                           fsr2h	equ	0xFDA
 11719                           fsr2l	equ	0xFD9
 11720                           status	equ	0xFD8
 11721                           
 11722 ;; *************** function _moteApp_add8bToDataBuffer *****************
 11723 ;; Defined at:
 11724 ;;		line 1332 in file "../Includes/Board/MOTEapp.c"
 11725 ;; Parameters:    Size  Location     Type
 11726 ;;  number          1    wreg     unsigned char 
 11727 ;;  bufferLocati    1    6[BANK0 ] unsigned char 
 11728 ;; Auto vars:     Size  Location     Type
 11729 ;;  number          1    9[BANK0 ] unsigned char 
 11730 ;; Return value:  Size  Location     Type
 11731 ;;                  1    wreg      void 
 11732 ;; Registers used:
 11733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11734 ;; Tracked objects:
 11735 ;;		On entry : 0/0
 11736 ;;		On exit  : 0/0
 11737 ;;		Unchanged: 0/0
 11738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11739 ;;      Params:         0       1       0       0       0       0       0       0       0
 11740 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11741 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11742 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11743 ;;Total ram usage:        4 bytes
 11744 ;; Hardware stack levels used:    1
 11745 ;; Hardware stack levels required when called:   12
 11746 ;; This function calls:
 11747 ;;		___awmod
 11748 ;;		___lbdiv
 11749 ;; This function is called by:
 11750 ;;		_moteRunningProcess
 11751 ;; This function uses a non-reentrant model
 11752 ;;
 11753                           
 11754                           	psect	text25
 11755  00472A                     __ptext25:
 11756                           	opt stack 0
 11757  00472A                     _moteApp_add8bToDataBuffer:
 11758                           	opt stack 16
 11759                           
 11760                           ; BSR set to: 0
 11761                           ;incstack = 0
 11762                           ;moteApp_add8bToDataBuffer@number stored from wreg
 11763  00472A  0100               	movlb	0	; () banked
 11764  00472C  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11765                           
 11766                           ;MOTEapp.c: 1334: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
 11767  00472E  0100               	movlb	0	; () banked
 11768  004730  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11769  004732  6F67               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
 11770  004734  6B68               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
 11771  004736  0E02               	movlw	2
 11772  004738  2767               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
 11773  00473A  0E00               	movlw	0
 11774  00473C  2368               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
 11775  00473E  0EC7               	movlw	low _dataBuffer
 11776  004740  2567               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
 11777  004742  6ED9               	movwf	fsr2l,c
 11778  004744  0E01               	movlw	high _dataBuffer
 11779  004746  2168               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
 11780  004748  6EDA               	movwf	fsr2h,c
 11781  00474A  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11782  00474E  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11783  004750  0E00               	movlw	0
 11784  004752  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11785  004754  0E0A               	movlw	10
 11786  004756  6F62               	movwf	___awmod@divisor& (0+255),b
 11787  004758  ECC0  F029         	call	___awmod	;wreg free
 11788  00475C  0100               	movlb	0	; () banked
 11789  00475E  5160               	movf	?___awmod& (0+255),w,b
 11790  004760  0F30               	addlw	48
 11791  004762  6EDF               	movwf	indf2,c
 11792                           
 11793                           ; BSR set to: 0
 11794                           ;MOTEapp.c: 1335: number /= 10;
 11795  004764  0E0A               	movlw	10
 11796  004766  6F60               	movwf	___lbdiv@divisor& (0+255),b
 11797  004768  5169               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
 11798  00476A  EC51  F02D         	call	___lbdiv
 11799  00476E  0100               	movlb	0	; () banked
 11800  004770  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11801                           
 11802                           ; BSR set to: 0
 11803                           ;MOTEapp.c: 1336: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
 11804  004772  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11805  004774  6F67               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
 11806  004776  6B68               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
 11807  004778  0E01               	movlw	1
 11808  00477A  2767               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
 11809  00477C  0E00               	movlw	0
 11810  00477E  2368               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
 11811  004780  0EC7               	movlw	low _dataBuffer
 11812  004782  2567               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
 11813  004784  6ED9               	movwf	fsr2l,c
 11814  004786  0E01               	movlw	high _dataBuffer
 11815  004788  2168               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
 11816  00478A  6EDA               	movwf	fsr2h,c
 11817  00478C  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11818  004790  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11819  004792  0E00               	movlw	0
 11820  004794  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11821  004796  0E0A               	movlw	10
 11822  004798  6F62               	movwf	___awmod@divisor& (0+255),b
 11823  00479A  ECC0  F029         	call	___awmod	;wreg free
 11824  00479E  0100               	movlb	0	; () banked
 11825  0047A0  5160               	movf	?___awmod& (0+255),w,b
 11826  0047A2  0F30               	addlw	48
 11827  0047A4  6EDF               	movwf	indf2,c
 11828                           
 11829                           ;MOTEapp.c: 1337: number /= 10;
 11830  0047A6  0E0A               	movlw	10
 11831  0047A8  6F60               	movwf	___lbdiv@divisor& (0+255),b
 11832  0047AA  5169               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
 11833  0047AC  EC51  F02D         	call	___lbdiv
 11834  0047B0  0100               	movlb	0	; () banked
 11835  0047B2  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11836                           
 11837                           ; BSR set to: 0
 11838                           ;MOTEapp.c: 1338: dataBuffer[bufferLocation] = '0' + (number % 10);
 11839  0047B4  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11840  0047B6  0D01               	mullw	1
 11841  0047B8  0EC7               	movlw	low _dataBuffer
 11842  0047BA  24F3               	addwf	prodl,w,c
 11843  0047BC  6ED9               	movwf	fsr2l,c
 11844  0047BE  0E01               	movlw	high _dataBuffer
 11845  0047C0  20F4               	addwfc	prodh,w,c
 11846  0047C2  6EDA               	movwf	fsr2h,c
 11847  0047C4  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11848  0047C8  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11849  0047CA  0E00               	movlw	0
 11850  0047CC  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11851  0047CE  0E0A               	movlw	10
 11852  0047D0  6F62               	movwf	___awmod@divisor& (0+255),b
 11853  0047D2  ECC0  F029         	call	___awmod	;wreg free
 11854  0047D6  0100               	movlb	0	; () banked
 11855  0047D8  5160               	movf	?___awmod& (0+255),w,b
 11856  0047DA  0F30               	addlw	48
 11857  0047DC  6EDF               	movwf	indf2,c
 11858                           
 11859                           ; BSR set to: 0
 11860  0047DE  0012               	return		;funcret
 11861  0047E0                     __end_of_moteApp_add8bToDataBuffer:
 11862                           	opt stack 0
 11863                           tblptru	equ	0xFF8
 11864                           tblptrh	equ	0xFF7
 11865                           tblptrl	equ	0xFF6
 11866                           tablat	equ	0xFF5
 11867                           prodh	equ	0xFF4
 11868                           prodl	equ	0xFF3
 11869                           intcon	equ	0xFF2
 11870                           postinc0	equ	0xFEE
 11871                           wreg	equ	0xFE8
 11872                           indf1	equ	0xFE7
 11873                           postdec1	equ	0xFE5
 11874                           fsr1h	equ	0xFE2
 11875                           fsr1l	equ	0xFE1
 11876                           indf2	equ	0xFDF
 11877                           fsr2h	equ	0xFDA
 11878                           fsr2l	equ	0xFD9
 11879                           status	equ	0xFD8
 11880                           
 11881 ;; *************** function _moteApp_GoToSleep *****************
 11882 ;; Defined at:
 11883 ;;		line 1200 in file "../Includes/Board/MOTEapp.c"
 11884 ;; Parameters:    Size  Location     Type
 11885 ;;		None
 11886 ;; Auto vars:     Size  Location     Type
 11887 ;;  status          1   14[BANK0 ] unsigned char 
 11888 ;; Return value:  Size  Location     Type
 11889 ;;                  1    wreg      unsigned char 
 11890 ;; Registers used:
 11891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11892 ;; Tracked objects:
 11893 ;;		On entry : 0/0
 11894 ;;		On exit  : 0/0
 11895 ;;		Unchanged: 0/0
 11896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11897 ;;      Params:         0       0       0       0       0       0       0       0       0
 11898 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11899 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11900 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11901 ;;Total ram usage:        1 bytes
 11902 ;; Hardware stack levels used:    1
 11903 ;; Hardware stack levels required when called:   17
 11904 ;; This function calls:
 11905 ;;		_EUSART_FlushBuffer
 11906 ;;		_PIN_MANAGER_Initialize
 11907 ;;		_moduleResync
 11908 ;;		_moduleSleep
 11909 ;;		_moteApp_delayms
 11910 ;;		_oled_displayOff
 11911 ;;		_oled_init
 11912 ;; This function is called by:
 11913 ;;		_moteRunningProcess
 11914 ;; This function uses a non-reentrant model
 11915 ;;
 11916                           
 11917                           	psect	text26
 11918  003EA6                     __ptext26:
 11919                           	opt stack 0
 11920  003EA6                     _moteApp_GoToSleep:
 11921                           	opt stack 11
 11922                           
 11923                           ;MOTEapp.c: 1202: uint8_t status = 0;
 11924                           
 11925                           ; BSR set to: 0
 11926                           ;incstack = 0
 11927  003EA6  0E00               	movlw	0
 11928  003EA8  0100               	movlb	0	; () banked
 11929  003EAA  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 11930  003EAC                     
 11931                           ; BSR set to: 0
 11932  003EAC  A081               	btfss	3969,0,c	;volatile
 11933  003EAE  D7FE               	goto	l682
 11934                           
 11935                           ;MOTEapp.c: 1204: moduleSleep();
 11936  003EB0  ECE8  F02F         	call	_moduleSleep	;wreg free
 11937                           
 11938                           ;MOTEapp.c: 1205: oled_displayOff(1);
 11939  003EB4  0E01               	movlw	1
 11940  003EB6  EC50  F031         	call	_oled_displayOff
 11941                           
 11942                           ;MOTEapp.c: 1206: ADCON0bits.ADON = 0;
 11943  003EBA  90C2               	bcf	4034,0,c	;volatile
 11944                           
 11945                           ;MOTEapp.c: 1207: INTCONbits.GIE = 0;
 11946  003EBC  9EF2               	bcf	intcon,7,c	;volatile
 11947                           
 11948                           ;MOTEapp.c: 1208: GIE = 0;
 11949  003EBE  9EF2               	bcf	intcon,7,c	;volatile
 11950                           
 11951                           ;MOTEapp.c: 1209: PEIE = 0;
 11952  003EC0  9CF2               	bcf	intcon,6,c	;volatile
 11953                           
 11954                           ;MOTEapp.c: 1211: LATEbits.LATE2 = 0;
 11955  003EC2  948D               	bcf	3981,2,c	;volatile
 11956                           
 11957                           ;MOTEapp.c: 1212: PIE2bits.TMR3IE = 0;
 11958  003EC4  92A0               	bcf	4000,1,c	;volatile
 11959                           
 11960                           ;MOTEapp.c: 1214: ANSELAbits.ANSA0 = 1;
 11961  003EC6  010F               	movlb	15	; () banked
 11962  003EC8  815B               	bsf	91,0,b	;volatile
 11963                           
 11964                           ; BSR set to: 15
 11965                           ;MOTEapp.c: 1216: PIE2bits.C1IE = 1;
 11966  003ECA  8CA0               	bsf	4000,6,c	;volatile
 11967                           
 11968                           ; BSR set to: 15
 11969                           ;MOTEapp.c: 1217: INTCON3bits.INT1IE = 1;
 11970  003ECC  86F0               	bsf	intcon3,3,c	;volatile
 11971                           
 11972                           ; BSR set to: 15
 11973                           ;MOTEapp.c: 1218: INTCONbits.INT0IE = 1;
 11974  003ECE  88F2               	bsf	intcon,4,c	;volatile
 11975                           
 11976                           ; BSR set to: 15
 11977                           ;MOTEapp.c: 1219: IOCCbits.IOCC2 = 1;
 11978  003ED0  8487               	bsf	3975,2,c	;volatile
 11979                           
 11980                           ; BSR set to: 15
 11981                           ;MOTEapp.c: 1222: status = PORTBbits.RB1;
 11982  003ED2  0E00               	movlw	0
 11983  003ED4  B281               	btfsc	3969,1,c	;volatile
 11984  003ED6  0E01               	movlw	1
 11985  003ED8  0100               	movlb	0	; () banked
 11986  003EDA  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 11987                           
 11988                           ; BSR set to: 0
 11989                           ;MOTEapp.c: 1223: status = PORTBbits.RB0;
 11990  003EDC  0E00               	movlw	0
 11991  003EDE  B081               	btfsc	3969,0,c	;volatile
 11992  003EE0  0E01               	movlw	1
 11993  003EE2  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 11994                           
 11995                           ; BSR set to: 0
 11996                           ;MOTEapp.c: 1224: status = PORTCbits.RC2;
 11997  003EE4  0E00               	movlw	0
 11998  003EE6  B482               	btfsc	3970,2,c	;volatile
 11999  003EE8  0E01               	movlw	1
 12000  003EEA  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12001                           
 12002                           ; BSR set to: 0
 12003                           ;MOTEapp.c: 1226: if (periodicState)
 12004  003EEC  51FA               	movf	_periodicState& (0+255),w,b
 12005  003EEE  A4D8               	btfss	status,2,c
 12006                           
 12007                           ; BSR set to: 0
 12008                           ;MOTEapp.c: 1227: {
 12009                           ;MOTEapp.c: 1228: WDTCONbits.SWDTEN = 1;
 12010  003EF0  80D1               	bsf	4049,0,c	;volatile
 12011                           
 12012                           ; BSR set to: 0
 12013                           ;MOTEapp.c: 1229: }
 12014                           ;MOTEapp.c: 1232: INTCONbits.INT0IF = 0;
 12015  003EF2  92F2               	bcf	intcon,1,c	;volatile
 12016                           
 12017                           ;MOTEapp.c: 1233: INTCON3bits.INT1IF = 0;
 12018  003EF4  90F0               	bcf	intcon3,0,c	;volatile
 12019                           
 12020                           ;MOTEapp.c: 1234: PIR2bits.C1IF = 0;
 12021  003EF6  9CA1               	bcf	4001,6,c	;volatile
 12022                           
 12023                           ;MOTEapp.c: 1235: __nop();
 12024  003EF8  F000               	nop	
 12025  003EFA  0003               	sleep		;# 
 12026                           
 12027                           ;MOTEapp.c: 1237: __nop();
 12028  003EFC  F000               	nop	
 12029                           
 12030                           ;MOTEapp.c: 1239: WDTCONbits.SWDTEN = 0;
 12031  003EFE  90D1               	bcf	4049,0,c	;volatile
 12032                           
 12033                           ;MOTEapp.c: 1240: EUSART_FlushBuffer();
 12034  003F00  ECEF  F02C         	call	_EUSART_FlushBuffer	;wreg free
 12035                           
 12036                           ;MOTEapp.c: 1243: INTCON3bits.INT1IE = 0;
 12037  003F04  96F0               	bcf	intcon3,3,c	;volatile
 12038                           
 12039                           ;MOTEapp.c: 1244: INTCONbits.INT0IE = 0;
 12040  003F06  98F2               	bcf	intcon,4,c	;volatile
 12041                           
 12042                           ;MOTEapp.c: 1245: IOCCbits.IOCC2 = 0;
 12043  003F08  9487               	bcf	3975,2,c	;volatile
 12044                           
 12045                           ;MOTEapp.c: 1246: PIE2bits.C1IE = 0;
 12046  003F0A  9CA0               	bcf	4000,6,c	;volatile
 12047                           
 12048                           ;MOTEapp.c: 1247: GIE = 1;
 12049  003F0C  8EF2               	bsf	intcon,7,c	;volatile
 12050                           
 12051                           ;MOTEapp.c: 1249: PIN_MANAGER_Initialize();
 12052  003F0E  ECE1  F02B         	call	_PIN_MANAGER_Initialize	;wreg free
 12053                           
 12054                           ;MOTEapp.c: 1251: if ( (INTCONbits.INT0IF)||(INTCON3bits.INT1IF)||(PIR2bits.C1IF))
 12055  003F12  A2F2               	btfss	intcon,1,c	;volatile
 12056  003F14  B0F0               	btfsc	intcon3,0,c	;volatile
 12057  003F16  D002               	goto	u8540
 12058  003F18  ACA1               	btfss	4001,6,c	;volatile
 12059  003F1A  D011               	goto	l685
 12060  003F1C                     u8540:
 12061                           
 12062                           ;MOTEapp.c: 1252: {
 12063                           ;MOTEapp.c: 1254: INTCONbits.INT0IF = 0;
 12064  003F1C  92F2               	bcf	intcon,1,c	;volatile
 12065                           
 12066                           ;MOTEapp.c: 1255: INTCON3bits.INT1IF = 0;
 12067  003F1E  90F0               	bcf	intcon3,0,c	;volatile
 12068                           
 12069                           ;MOTEapp.c: 1256: status = 1;
 12070  003F20  0E01               	movlw	1
 12071  003F22  0100               	movlb	0	; () banked
 12072  003F24  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12073                           
 12074                           ; BSR set to: 0
 12075                           ;MOTEapp.c: 1259: oled_displayOff(0);
 12076  003F26  0E00               	movlw	0
 12077  003F28  EC50  F031         	call	_oled_displayOff
 12078                           
 12079                           ;MOTEapp.c: 1260: oled_init();
 12080  003F2C  ECDA  F02E         	call	_oled_init	;wreg free
 12081                           
 12082                           ;MOTEapp.c: 1262: LATEbits.LATE2 = 1;
 12083  003F30  848D               	bsf	3981,2,c	;volatile
 12084                           
 12085                           ;MOTEapp.c: 1263: TMR3H = 0xFB;
 12086  003F32  0EFB               	movlw	251
 12087  003F34  6EB3               	movwf	4019,c	;volatile
 12088                           
 12089                           ;MOTEapp.c: 1264: TMR3L = 0x50;
 12090  003F36  0E50               	movlw	80
 12091  003F38  6EB2               	movwf	4018,c	;volatile
 12092                           
 12093                           ;MOTEapp.c: 1265: PIE2bits.TMR3IE = 1;
 12094  003F3A  82A0               	bsf	4000,1,c	;volatile
 12095                           
 12096                           ;MOTEapp.c: 1266: }
 12097  003F3C  D007               	goto	l688
 12098  003F3E                     l685:
 12099                           
 12100                           ;MOTEapp.c: 1267: else
 12101                           ;MOTEapp.c: 1268: {
 12102                           ;MOTEapp.c: 1269: secTicker = 10;
 12103  003F3E  0E0A               	movlw	10
 12104  003F40  0100               	movlb	0	; () banked
 12105  003F42  6FEF               	movwf	_secTicker& (0+255),b
 12106                           
 12107                           ;MOTEapp.c: 1270: status = 0;
 12108  003F44  0E00               	movlw	0
 12109  003F46  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12110                           
 12111                           ; BSR set to: 0
 12112                           ;MOTEapp.c: 1272: LATEbits.LATE2 = 0;
 12113  003F48  948D               	bcf	3981,2,c	;volatile
 12114                           
 12115                           ; BSR set to: 0
 12116                           ;MOTEapp.c: 1273: PIE2bits.TMR3IE = 0;
 12117  003F4A  92A0               	bcf	4000,1,c	;volatile
 12118  003F4C                     l688:
 12119                           
 12120                           ;MOTEapp.c: 1274: }
 12121                           ;MOTEapp.c: 1275: ANSELAbits.ANSA0 = 0;
 12122                           
 12123                           ; BSR set to: 0
 12124  003F4C  010F               	movlb	15	; () banked
 12125  003F4E  915B               	bcf	91,0,b	;volatile
 12126                           
 12127                           ; BSR set to: 15
 12128                           ;MOTEapp.c: 1277: moduleResync();
 12129  003F50  EC52  F027         	call	_moduleResync	;wreg free
 12130                           
 12131                           ;MOTEapp.c: 1278: moteApp_delayms(40);
 12132  003F54  0E00               	movlw	0
 12133  003F56  0100               	movlb	0	; () banked
 12134  003F58  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12135  003F5A  0E28               	movlw	40
 12136  003F5C  6F60               	movwf	moteApp_delayms@length& (0+255),b
 12137  003F5E  ECA8  F02E         	call	_moteApp_delayms	;wreg free
 12138                           
 12139                           ;MOTEapp.c: 1279: moduleResync();
 12140  003F62  EC52  F027         	call	_moduleResync	;wreg free
 12141                           
 12142                           ;MOTEapp.c: 1280: moteApp_delayms(40);
 12143  003F66  0E00               	movlw	0
 12144  003F68  0100               	movlb	0	; () banked
 12145  003F6A  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12146  003F6C  0E28               	movlw	40
 12147  003F6E  6F60               	movwf	moteApp_delayms@length& (0+255),b
 12148  003F70  ECA8  F02E         	call	_moteApp_delayms	;wreg free
 12149                           
 12150                           ;MOTEapp.c: 1281: return status;
 12151  003F74  0100               	movlb	0	; () banked
 12152  003F76  516E               	movf	moteApp_GoToSleep@status& (0+255),w,b
 12153  003F78  0012               	return	
 12154  003F7A                     __end_of_moteApp_GoToSleep:
 12155                           	opt stack 0
 12156                           tblptru	equ	0xFF8
 12157                           tblptrh	equ	0xFF7
 12158                           tblptrl	equ	0xFF6
 12159                           tablat	equ	0xFF5
 12160                           prodh	equ	0xFF4
 12161                           prodl	equ	0xFF3
 12162                           intcon	equ	0xFF2
 12163                           intcon3	equ	0xFF0
 12164                           postinc0	equ	0xFEE
 12165                           wreg	equ	0xFE8
 12166                           indf1	equ	0xFE7
 12167                           postdec1	equ	0xFE5
 12168                           fsr1h	equ	0xFE2
 12169                           fsr1l	equ	0xFE1
 12170                           indf2	equ	0xFDF
 12171                           fsr2h	equ	0xFDA
 12172                           fsr2l	equ	0xFD9
 12173                           status	equ	0xFD8
 12174                           
 12175 ;; *************** function _oled_init *****************
 12176 ;; Defined at:
 12177 ;;		line 389 in file "../Includes/Drivers/SSD1306oLED.c"
 12178 ;; Parameters:    Size  Location     Type
 12179 ;;		None
 12180 ;; Auto vars:     Size  Location     Type
 12181 ;;		None
 12182 ;; Return value:  Size  Location     Type
 12183 ;;                  1    wreg      void 
 12184 ;; Registers used:
 12185 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12186 ;; Tracked objects:
 12187 ;;		On entry : 0/0
 12188 ;;		On exit  : 0/0
 12189 ;;		Unchanged: 0/0
 12190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12191 ;;      Params:         0       0       0       0       0       0       0       0       0
 12192 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12193 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12194 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12195 ;;Total ram usage:        0 bytes
 12196 ;; Hardware stack levels used:    1
 12197 ;; Hardware stack levels required when called:   16
 12198 ;; This function calls:
 12199 ;;		_oled_clear
 12200 ;;		_oled_devInit
 12201 ;;		_oled_setDisplay
 12202 ;;		_oled_setFont
 12203 ;; This function is called by:
 12204 ;;		_main
 12205 ;;		_moteApp_GoToSleep
 12206 ;; This function uses a non-reentrant model
 12207 ;;
 12208                           
 12209                           	psect	text27
 12210  005DB4                     __ptext27:
 12211                           	opt stack 0
 12212  005DB4                     _oled_init:
 12213                           	opt stack 14
 12214                           
 12215                           ;SSD1306oLED.c: 392: TRISEbits.TRISE2 = 0;
 12216                           
 12217                           ; BSR set to: 0
 12218                           ;incstack = 0
 12219  005DB4  9496               	bcf	3990,2,c	;volatile
 12220                           
 12221                           ;SSD1306oLED.c: 393: LATEbits.LATE2 = 1;
 12222  005DB6  848D               	bsf	3981,2,c	;volatile
 12223                           
 12224                           ;SSD1306oLED.c: 394: TRISBbits.TRISB2 = 0;
 12225  005DB8  9493               	bcf	3987,2,c	;volatile
 12226                           
 12227                           ;SSD1306oLED.c: 395: TRISBbits.TRISB3 = 0;
 12228  005DBA  9693               	bcf	3987,3,c	;volatile
 12229                           
 12230                           ;SSD1306oLED.c: 396: TRISBbits.TRISB4 = 0;
 12231  005DBC  9893               	bcf	3987,4,c	;volatile
 12232                           
 12233                           ;SSD1306oLED.c: 397: TRISCbits.TRISC0 = 0;
 12234  005DBE  9094               	bcf	3988,0,c	;volatile
 12235                           
 12236                           ;SSD1306oLED.c: 398: TRISCbits.TRISC1 = 0;
 12237  005DC0  9294               	bcf	3988,1,c	;volatile
 12238                           
 12239                           ;SSD1306oLED.c: 400: LATBbits.LATB3 = 1;
 12240  005DC2  868A               	bsf	3978,3,c	;volatile
 12241                           
 12242                           ;SSD1306oLED.c: 402: LATBbits.LATB4 = 0;
 12243  005DC4  988A               	bcf	3978,4,c	;volatile
 12244                           
 12245                           ;SSD1306oLED.c: 404: oled_devInit();
 12246  005DC6  EC59  F028         	call	_oled_devInit	;wreg free
 12247                           
 12248                           ;SSD1306oLED.c: 406: oled_setDisplay(Inverse);
 12249  005DCA  0E01               	movlw	1
 12250  005DCC  ECD4  F02F         	call	_oled_setDisplay
 12251                           
 12252                           ;SSD1306oLED.c: 407: oled_setFont(OledFont0);
 12253  005DD0  0EF8               	movlw	low _OledFont0
 12254  005DD2  0100               	movlb	0	; () banked
 12255  005DD4  6F60               	movwf	oled_setFont@font& (0+255),b
 12256  005DD6  0E75               	movlw	high _OledFont0
 12257  005DD8  6F61               	movwf	(oled_setFont@font+1)& (0+255),b
 12258  005DDA  ECC4  F030         	call	_oled_setFont	;wreg free
 12259                           
 12260                           ;SSD1306oLED.c: 408: oled_clear();
 12261  005DDE  EC7E  F030         	call	_oled_clear	;wreg free
 12262  005DE2  0012               	return		;funcret
 12263  005DE4                     __end_of_oled_init:
 12264                           	opt stack 0
 12265                           tblptru	equ	0xFF8
 12266                           tblptrh	equ	0xFF7
 12267                           tblptrl	equ	0xFF6
 12268                           tablat	equ	0xFF5
 12269                           prodh	equ	0xFF4
 12270                           prodl	equ	0xFF3
 12271                           intcon	equ	0xFF2
 12272                           intcon3	equ	0xFF0
 12273                           postinc0	equ	0xFEE
 12274                           wreg	equ	0xFE8
 12275                           indf1	equ	0xFE7
 12276                           postdec1	equ	0xFE5
 12277                           fsr1h	equ	0xFE2
 12278                           fsr1l	equ	0xFE1
 12279                           indf2	equ	0xFDF
 12280                           fsr2h	equ	0xFDA
 12281                           fsr2l	equ	0xFD9
 12282                           status	equ	0xFD8
 12283                           
 12284 ;; *************** function _oled_setFont *****************
 12285 ;; Defined at:
 12286 ;;		line 256 in file "../Includes/Drivers/SSD1306oLED.c"
 12287 ;; Parameters:    Size  Location     Type
 12288 ;;  font            2    0[BANK0 ] PTR const unsigned char 
 12289 ;;		 -> OledFont0(768), 
 12290 ;; Auto vars:     Size  Location     Type
 12291 ;;		None
 12292 ;; Return value:  Size  Location     Type
 12293 ;;                  1    wreg      void 
 12294 ;; Registers used:
 12295 ;;		wreg, status,2, status,0
 12296 ;; Tracked objects:
 12297 ;;		On entry : 0/0
 12298 ;;		On exit  : 0/0
 12299 ;;		Unchanged: 0/0
 12300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12301 ;;      Params:         0       2       0       0       0       0       0       0       0
 12302 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12303 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12304 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12305 ;;Total ram usage:        2 bytes
 12306 ;; Hardware stack levels used:    1
 12307 ;; Hardware stack levels required when called:   11
 12308 ;; This function calls:
 12309 ;;		Nothing
 12310 ;; This function is called by:
 12311 ;;		_oled_init
 12312 ;; This function uses a non-reentrant model
 12313 ;;
 12314                           
 12315                           	psect	text28
 12316  006188                     __ptext28:
 12317                           	opt stack 0
 12318  006188                     _oled_setFont:
 12319                           	opt stack 18
 12320                           
 12321                           ;SSD1306oLED.c: 258: if(font!=0)
 12322                           
 12323                           ;incstack = 0
 12324  006188  0100               	movlb	0	; () banked
 12325  00618A  5160               	movf	oled_setFont@font& (0+255),w,b
 12326  00618C  1161               	iorwf	(oled_setFont@font+1)& (0+255),w,b
 12327  00618E  B4D8               	btfsc	status,2,c
 12328  006190  0012               	return	
 12329                           
 12330                           ; BSR set to: 0
 12331                           ;SSD1306oLED.c: 259: {
 12332                           ;SSD1306oLED.c: 260: selectedFont=font;
 12333  006192  C060  F1FD         	movff	oled_setFont@font,_selectedFont
 12334  006196  C061  F1FE         	movff	oled_setFont@font+1,_selectedFont+1
 12335  00619A  0012               	return	
 12336  00619C                     __end_of_oled_setFont:
 12337                           	opt stack 0
 12338                           tblptru	equ	0xFF8
 12339                           tblptrh	equ	0xFF7
 12340                           tblptrl	equ	0xFF6
 12341                           tablat	equ	0xFF5
 12342                           prodh	equ	0xFF4
 12343                           prodl	equ	0xFF3
 12344                           intcon	equ	0xFF2
 12345                           intcon3	equ	0xFF0
 12346                           postinc0	equ	0xFEE
 12347                           wreg	equ	0xFE8
 12348                           indf1	equ	0xFE7
 12349                           postdec1	equ	0xFE5
 12350                           fsr1h	equ	0xFE2
 12351                           fsr1l	equ	0xFE1
 12352                           indf2	equ	0xFDF
 12353                           fsr2h	equ	0xFDA
 12354                           fsr2l	equ	0xFD9
 12355                           status	equ	0xFD8
 12356                           
 12357 ;; *************** function _oled_setDisplay *****************
 12358 ;; Defined at:
 12359 ;;		line 434 in file "../Includes/Drivers/SSD1306oLED.c"
 12360 ;; Parameters:    Size  Location     Type
 12361 ;;  displayType     1    wreg     enum E5868
 12362 ;; Auto vars:     Size  Location     Type
 12363 ;;  displayType     1    1[BANK0 ] enum E5868
 12364 ;; Return value:  Size  Location     Type
 12365 ;;                  1    wreg      void 
 12366 ;; Registers used:
 12367 ;;		wreg, status,2, cstack
 12368 ;; Tracked objects:
 12369 ;;		On entry : 0/0
 12370 ;;		On exit  : 0/0
 12371 ;;		Unchanged: 0/0
 12372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12373 ;;      Params:         0       0       0       0       0       0       0       0       0
 12374 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12375 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12376 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12377 ;;Total ram usage:        1 bytes
 12378 ;; Hardware stack levels used:    1
 12379 ;; Hardware stack levels required when called:   12
 12380 ;; This function calls:
 12381 ;;		_oled_writeCommand
 12382 ;; This function is called by:
 12383 ;;		_oled_init
 12384 ;; This function uses a non-reentrant model
 12385 ;;
 12386                           
 12387                           	psect	text29
 12388  005FA8                     __ptext29:
 12389                           	opt stack 0
 12390  005FA8                     _oled_setDisplay:
 12391                           	opt stack 17
 12392                           
 12393                           ; BSR set to: 0
 12394                           ;incstack = 0
 12395                           ;oled_setDisplay@displayType stored from wreg
 12396  005FA8  0100               	movlb	0	; () banked
 12397  005FAA  6F61               	movwf	oled_setDisplay@displayType& (0+255),b
 12398                           
 12399                           ;SSD1306oLED.c: 436: if (displayType == Normal)
 12400  005FAC  0100               	movlb	0	; () banked
 12401  005FAE  5161               	movf	oled_setDisplay@displayType& (0+255),w,b
 12402  005FB0  A4D8               	btfss	status,2,c
 12403  005FB2  D007               	goto	l1124
 12404                           
 12405                           ; BSR set to: 0
 12406                           ;SSD1306oLED.c: 437: {
 12407                           ;SSD1306oLED.c: 438: oled_writeCommand(0xa0);
 12408  005FB4  0EA0               	movlw	160
 12409  005FB6  ECA3  F030         	call	_oled_writeCommand
 12410                           
 12411                           ;SSD1306oLED.c: 439: oled_writeCommand(0xc8);
 12412  005FBA  0EC8               	movlw	200
 12413  005FBC  ECA3  F030         	call	_oled_writeCommand
 12414                           
 12415                           ;SSD1306oLED.c: 440: }
 12416  005FC0  0012               	return	
 12417  005FC2                     l1124:
 12418                           
 12419                           ;SSD1306oLED.c: 441: else
 12420                           ;SSD1306oLED.c: 442: {
 12421                           ;SSD1306oLED.c: 443: oled_writeCommand(0xa1);
 12422  005FC2  0EA1               	movlw	161
 12423  005FC4  ECA3  F030         	call	_oled_writeCommand
 12424                           
 12425                           ;SSD1306oLED.c: 444: oled_writeCommand(0xc0);
 12426  005FC8  0EC0               	movlw	192
 12427  005FCA  ECA3  F030         	call	_oled_writeCommand
 12428  005FCE  0012               	return	
 12429  005FD0                     __end_of_oled_setDisplay:
 12430                           	opt stack 0
 12431                           tblptru	equ	0xFF8
 12432                           tblptrh	equ	0xFF7
 12433                           tblptrl	equ	0xFF6
 12434                           tablat	equ	0xFF5
 12435                           prodh	equ	0xFF4
 12436                           prodl	equ	0xFF3
 12437                           intcon	equ	0xFF2
 12438                           intcon3	equ	0xFF0
 12439                           postinc0	equ	0xFEE
 12440                           wreg	equ	0xFE8
 12441                           indf1	equ	0xFE7
 12442                           postdec1	equ	0xFE5
 12443                           fsr1h	equ	0xFE2
 12444                           fsr1l	equ	0xFE1
 12445                           indf2	equ	0xFDF
 12446                           fsr2h	equ	0xFDA
 12447                           fsr2l	equ	0xFD9
 12448                           status	equ	0xFD8
 12449                           
 12450 ;; *************** function _oled_devInit *****************
 12451 ;; Defined at:
 12452 ;;		line 411 in file "../Includes/Drivers/SSD1306oLED.c"
 12453 ;; Parameters:    Size  Location     Type
 12454 ;;		None
 12455 ;; Auto vars:     Size  Location     Type
 12456 ;;		None
 12457 ;; Return value:  Size  Location     Type
 12458 ;;                  1    wreg      void 
 12459 ;; Registers used:
 12460 ;;		wreg, status,2, status,0, cstack
 12461 ;; Tracked objects:
 12462 ;;		On entry : 0/0
 12463 ;;		On exit  : 0/0
 12464 ;;		Unchanged: 0/0
 12465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12466 ;;      Params:         0       0       0       0       0       0       0       0       0
 12467 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12468 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12469 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12470 ;;Total ram usage:        1 bytes
 12471 ;; Hardware stack levels used:    1
 12472 ;; Hardware stack levels required when called:   13
 12473 ;; This function calls:
 12474 ;;		_oled_initialDispayLine
 12475 ;;		_oled_powerControl
 12476 ;;		_oled_regulorResistorSelect
 12477 ;;		_oled_setContrastControlRegister
 12478 ;;		_oled_writeCommand
 12479 ;; This function is called by:
 12480 ;;		_oled_init
 12481 ;; This function uses a non-reentrant model
 12482 ;;
 12483                           
 12484                           	psect	text30
 12485  0050B2                     __ptext30:
 12486                           	opt stack 0
 12487  0050B2                     _oled_devInit:
 12488                           	opt stack 16
 12489                           
 12490                           ;SSD1306oLED.c: 413: oled_writeCommand(0xe2);
 12491                           
 12492                           ;incstack = 0
 12493  0050B2  0EE2               	movlw	226
 12494  0050B4  ECA3  F030         	call	_oled_writeCommand
 12495                           
 12496                           ;SSD1306oLED.c: 414: LATBbits.LATB2=1;
 12497  0050B8  848A               	bsf	3978,2,c	;volatile
 12498                           
 12499                           ;SSD1306oLED.c: 415: _delay((unsigned long)((200)*(48000000/4000000.0)));
 12500  0050BA  0E04               	movlw	4
 12501  0050BC  0100               	movlb	0	; () banked
 12502  0050BE  6F62               	movwf	??_oled_devInit& (0+255),b
 12503  0050C0  0E1C               	movlw	28
 12504  0050C2                     u11587:
 12505  0050C2  2EE8               	decfsz	wreg,f,c
 12506  0050C4  D7FE               	bra	u11587
 12507  0050C6  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 12508  0050C8  D7FC               	bra	u11587
 12509  0050CA  F000               	nop	
 12510                           
 12511                           ;SSD1306oLED.c: 416: LATBbits.LATB2=0;
 12512  0050CC  948A               	bcf	3978,2,c	;volatile
 12513                           
 12514                           ;SSD1306oLED.c: 417: _delay((unsigned long)((2000)*(48000000/4000000.0)));
 12515  0050CE  0E20               	movlw	32
 12516  0050D0  0100               	movlb	0	; () banked
 12517  0050D2  6F62               	movwf	??_oled_devInit& (0+255),b
 12518  0050D4  0E29               	movlw	41
 12519  0050D6                     u11597:
 12520  0050D6  2EE8               	decfsz	wreg,f,c
 12521  0050D8  D7FE               	bra	u11597
 12522  0050DA  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 12523  0050DC  D7FC               	bra	u11597
 12524  0050DE  D000               	nop2	
 12525                           
 12526                           ;SSD1306oLED.c: 418: LATBbits.LATB2=1;
 12527  0050E0  848A               	bsf	3978,2,c	;volatile
 12528                           
 12529                           ;SSD1306oLED.c: 419: _delay((unsigned long)((1000)*(48000000/4000000.0)));
 12530  0050E2  0E10               	movlw	16
 12531  0050E4  0100               	movlb	0	; () banked
 12532  0050E6  6F62               	movwf	??_oled_devInit& (0+255),b
 12533  0050E8  0E94               	movlw	148
 12534  0050EA                     u11607:
 12535  0050EA  2EE8               	decfsz	wreg,f,c
 12536  0050EC  D7FE               	bra	u11607
 12537  0050EE  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 12538  0050F0  D7FC               	bra	u11607
 12539  0050F2  F000               	nop	
 12540                           
 12541                           ;SSD1306oLED.c: 421: oled_writeCommand(0xa1);
 12542  0050F4  0EA1               	movlw	161
 12543  0050F6  ECA3  F030         	call	_oled_writeCommand
 12544                           
 12545                           ;SSD1306oLED.c: 422: oled_writeCommand(0xc0);
 12546  0050FA  0EC0               	movlw	192
 12547  0050FC  ECA3  F030         	call	_oled_writeCommand
 12548                           
 12549                           ;SSD1306oLED.c: 423: oled_writeCommand(0xa3);
 12550  005100  0EA3               	movlw	163
 12551  005102  ECA3  F030         	call	_oled_writeCommand
 12552                           
 12553                           ;SSD1306oLED.c: 424: oled_powerControl(0x07);
 12554  005106  0E07               	movlw	7
 12555  005108  EC06  F031         	call	_oled_powerControl
 12556                           
 12557                           ;SSD1306oLED.c: 425: oled_regulorResistorSelect(0x05);
 12558  00510C  0E05               	movlw	5
 12559  00510E  ECFE  F030         	call	_oled_regulorResistorSelect
 12560                           
 12561                           ;SSD1306oLED.c: 426: oled_setContrastControlRegister(Contrast_level);
 12562  005112  505D               	movf	_Contrast_level,w,c
 12563  005114  ECCE  F030         	call	_oled_setContrastControlRegister
 12564                           
 12565                           ;SSD1306oLED.c: 427: oled_initialDispayLine(0x00);
 12566  005118  0E00               	movlw	0
 12567  00511A  EC0E  F031         	call	_oled_initialDispayLine
 12568                           
 12569                           ;SSD1306oLED.c: 428: oled_writeCommand(0xF8);
 12570  00511E  0EF8               	movlw	248
 12571  005120  ECA3  F030         	call	_oled_writeCommand
 12572                           
 12573                           ;SSD1306oLED.c: 429: oled_writeCommand(0x00);
 12574  005124  0E00               	movlw	0
 12575  005126  ECA3  F030         	call	_oled_writeCommand
 12576                           
 12577                           ;SSD1306oLED.c: 430: oled_writeCommand(0xaf);
 12578  00512A  0EAF               	movlw	175
 12579  00512C  ECA3  F030         	call	_oled_writeCommand
 12580  005130  0012               	return		;funcret
 12581  005132                     __end_of_oled_devInit:
 12582                           	opt stack 0
 12583                           tblptru	equ	0xFF8
 12584                           tblptrh	equ	0xFF7
 12585                           tblptrl	equ	0xFF6
 12586                           tablat	equ	0xFF5
 12587                           prodh	equ	0xFF4
 12588                           prodl	equ	0xFF3
 12589                           intcon	equ	0xFF2
 12590                           intcon3	equ	0xFF0
 12591                           postinc0	equ	0xFEE
 12592                           wreg	equ	0xFE8
 12593                           indf1	equ	0xFE7
 12594                           postdec1	equ	0xFE5
 12595                           fsr1h	equ	0xFE2
 12596                           fsr1l	equ	0xFE1
 12597                           indf2	equ	0xFDF
 12598                           fsr2h	equ	0xFDA
 12599                           fsr2l	equ	0xFD9
 12600                           status	equ	0xFD8
 12601                           
 12602 ;; *************** function _oled_setContrastControlRegister *****************
 12603 ;; Defined at:
 12604 ;;		line 477 in file "../Includes/Drivers/SSD1306oLED.c"
 12605 ;; Parameters:    Size  Location     Type
 12606 ;;  mod             1    wreg     unsigned char 
 12607 ;; Auto vars:     Size  Location     Type
 12608 ;;  mod             1    1[BANK0 ] unsigned char 
 12609 ;; Return value:  Size  Location     Type
 12610 ;;                  1    wreg      void 
 12611 ;; Registers used:
 12612 ;;		wreg, status,2, cstack
 12613 ;; Tracked objects:
 12614 ;;		On entry : 0/0
 12615 ;;		On exit  : 0/0
 12616 ;;		Unchanged: 0/0
 12617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12618 ;;      Params:         0       0       0       0       0       0       0       0       0
 12619 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12620 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12621 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12622 ;;Total ram usage:        1 bytes
 12623 ;; Hardware stack levels used:    1
 12624 ;; Hardware stack levels required when called:   12
 12625 ;; This function calls:
 12626 ;;		_oled_writeCommand
 12627 ;; This function is called by:
 12628 ;;		_oled_devInit
 12629 ;; This function uses a non-reentrant model
 12630 ;;
 12631                           
 12632                           	psect	text31
 12633  00619C                     __ptext31:
 12634                           	opt stack 0
 12635  00619C                     _oled_setContrastControlRegister:
 12636                           	opt stack 16
 12637                           
 12638                           ;incstack = 0
 12639                           ;oled_setContrastControlRegister@mod stored from wreg
 12640  00619C  0100               	movlb	0	; () banked
 12641  00619E  6F61               	movwf	oled_setContrastControlRegister@mod& (0+255),b
 12642                           
 12643                           ;SSD1306oLED.c: 479: oled_writeCommand(0x81);
 12644  0061A0  0E81               	movlw	129
 12645  0061A2  ECA3  F030         	call	_oled_writeCommand
 12646                           
 12647                           ;SSD1306oLED.c: 480: oled_writeCommand(mod);
 12648  0061A6  0100               	movlb	0	; () banked
 12649  0061A8  5161               	movf	oled_setContrastControlRegister@mod& (0+255),w,b
 12650  0061AA  ECA3  F030         	call	_oled_writeCommand
 12651  0061AE  0012               	return	
 12652  0061B0                     __end_of_oled_setContrastControlRegister:
 12653                           	opt stack 0
 12654                           tblptru	equ	0xFF8
 12655                           tblptrh	equ	0xFF7
 12656                           tblptrl	equ	0xFF6
 12657                           tablat	equ	0xFF5
 12658                           prodh	equ	0xFF4
 12659                           prodl	equ	0xFF3
 12660                           intcon	equ	0xFF2
 12661                           intcon3	equ	0xFF0
 12662                           postinc0	equ	0xFEE
 12663                           wreg	equ	0xFE8
 12664                           indf1	equ	0xFE7
 12665                           postdec1	equ	0xFE5
 12666                           fsr1h	equ	0xFE2
 12667                           fsr1l	equ	0xFE1
 12668                           indf2	equ	0xFDF
 12669                           fsr2h	equ	0xFDA
 12670                           fsr2l	equ	0xFD9
 12671                           status	equ	0xFD8
 12672                           
 12673 ;; *************** function _oled_regulorResistorSelect *****************
 12674 ;; Defined at:
 12675 ;;		line 505 in file "../Includes/Drivers/SSD1306oLED.c"
 12676 ;; Parameters:    Size  Location     Type
 12677 ;;  r               1    wreg     unsigned char 
 12678 ;; Auto vars:     Size  Location     Type
 12679 ;;  r               1    1[BANK0 ] unsigned char 
 12680 ;; Return value:  Size  Location     Type
 12681 ;;                  1    wreg      void 
 12682 ;; Registers used:
 12683 ;;		wreg, status,2, status,0, cstack
 12684 ;; Tracked objects:
 12685 ;;		On entry : 0/0
 12686 ;;		On exit  : 0/0
 12687 ;;		Unchanged: 0/0
 12688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12689 ;;      Params:         0       0       0       0       0       0       0       0       0
 12690 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12691 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12692 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12693 ;;Total ram usage:        1 bytes
 12694 ;; Hardware stack levels used:    1
 12695 ;; Hardware stack levels required when called:   12
 12696 ;; This function calls:
 12697 ;;		_oled_writeCommand
 12698 ;; This function is called by:
 12699 ;;		_oled_devInit
 12700 ;; This function uses a non-reentrant model
 12701 ;;
 12702                           
 12703                           	psect	text32
 12704  0061FC                     __ptext32:
 12705                           	opt stack 0
 12706  0061FC                     _oled_regulorResistorSelect:
 12707                           	opt stack 16
 12708                           
 12709                           ;incstack = 0
 12710                           ;oled_regulorResistorSelect@r stored from wreg
 12711  0061FC  0100               	movlb	0	; () banked
 12712  0061FE  6F61               	movwf	oled_regulorResistorSelect@r& (0+255),b
 12713                           
 12714                           ;SSD1306oLED.c: 507: oled_writeCommand((0x20|r));
 12715  006200  0100               	movlb	0	; () banked
 12716  006202  5161               	movf	oled_regulorResistorSelect@r& (0+255),w,b
 12717  006204  0920               	iorlw	32
 12718  006206  ECA3  F030         	call	_oled_writeCommand
 12719  00620A  0012               	return	
 12720  00620C                     __end_of_oled_regulorResistorSelect:
 12721                           	opt stack 0
 12722                           tblptru	equ	0xFF8
 12723                           tblptrh	equ	0xFF7
 12724                           tblptrl	equ	0xFF6
 12725                           tablat	equ	0xFF5
 12726                           prodh	equ	0xFF4
 12727                           prodl	equ	0xFF3
 12728                           intcon	equ	0xFF2
 12729                           intcon3	equ	0xFF0
 12730                           postinc0	equ	0xFEE
 12731                           wreg	equ	0xFE8
 12732                           indf1	equ	0xFE7
 12733                           postdec1	equ	0xFE5
 12734                           fsr1h	equ	0xFE2
 12735                           fsr1l	equ	0xFE1
 12736                           indf2	equ	0xFDF
 12737                           fsr2h	equ	0xFDA
 12738                           fsr2l	equ	0xFD9
 12739                           status	equ	0xFD8
 12740                           
 12741 ;; *************** function _oled_powerControl *****************
 12742 ;; Defined at:
 12743 ;;		line 492 in file "../Includes/Drivers/SSD1306oLED.c"
 12744 ;; Parameters:    Size  Location     Type
 12745 ;;  vol             1    wreg     unsigned char 
 12746 ;; Auto vars:     Size  Location     Type
 12747 ;;  vol             1    1[BANK0 ] unsigned char 
 12748 ;; Return value:  Size  Location     Type
 12749 ;;                  1    wreg      void 
 12750 ;; Registers used:
 12751 ;;		wreg, status,2, status,0, cstack
 12752 ;; Tracked objects:
 12753 ;;		On entry : 0/0
 12754 ;;		On exit  : 0/0
 12755 ;;		Unchanged: 0/0
 12756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12757 ;;      Params:         0       0       0       0       0       0       0       0       0
 12758 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12759 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12760 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12761 ;;Total ram usage:        1 bytes
 12762 ;; Hardware stack levels used:    1
 12763 ;; Hardware stack levels required when called:   12
 12764 ;; This function calls:
 12765 ;;		_oled_writeCommand
 12766 ;; This function is called by:
 12767 ;;		_oled_devInit
 12768 ;; This function uses a non-reentrant model
 12769 ;;
 12770                           
 12771                           	psect	text33
 12772  00620C                     __ptext33:
 12773                           	opt stack 0
 12774  00620C                     _oled_powerControl:
 12775                           	opt stack 16
 12776                           
 12777                           ;incstack = 0
 12778                           ;oled_powerControl@vol stored from wreg
 12779  00620C  0100               	movlb	0	; () banked
 12780  00620E  6F61               	movwf	oled_powerControl@vol& (0+255),b
 12781                           
 12782                           ;SSD1306oLED.c: 494: oled_writeCommand((0x28|vol));
 12783  006210  0100               	movlb	0	; () banked
 12784  006212  5161               	movf	oled_powerControl@vol& (0+255),w,b
 12785  006214  0928               	iorlw	40
 12786  006216  ECA3  F030         	call	_oled_writeCommand
 12787  00621A  0012               	return	
 12788  00621C                     __end_of_oled_powerControl:
 12789                           	opt stack 0
 12790                           tblptru	equ	0xFF8
 12791                           tblptrh	equ	0xFF7
 12792                           tblptrl	equ	0xFF6
 12793                           tablat	equ	0xFF5
 12794                           prodh	equ	0xFF4
 12795                           prodl	equ	0xFF3
 12796                           intcon	equ	0xFF2
 12797                           intcon3	equ	0xFF0
 12798                           postinc0	equ	0xFEE
 12799                           wreg	equ	0xFE8
 12800                           indf1	equ	0xFE7
 12801                           postdec1	equ	0xFE5
 12802                           fsr1h	equ	0xFE2
 12803                           fsr1l	equ	0xFE1
 12804                           indf2	equ	0xFDF
 12805                           fsr2h	equ	0xFDA
 12806                           fsr2l	equ	0xFD9
 12807                           status	equ	0xFD8
 12808                           
 12809 ;; *************** function _oled_initialDispayLine *****************
 12810 ;; Defined at:
 12811 ;;		line 485 in file "../Includes/Drivers/SSD1306oLED.c"
 12812 ;; Parameters:    Size  Location     Type
 12813 ;;  line            1    wreg     unsigned char 
 12814 ;; Auto vars:     Size  Location     Type
 12815 ;;  line            1    1[BANK0 ] unsigned char 
 12816 ;; Return value:  Size  Location     Type
 12817 ;;                  1    wreg      void 
 12818 ;; Registers used:
 12819 ;;		wreg, status,2, status,0, cstack
 12820 ;; Tracked objects:
 12821 ;;		On entry : 0/0
 12822 ;;		On exit  : 0/0
 12823 ;;		Unchanged: 0/0
 12824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12825 ;;      Params:         0       0       0       0       0       0       0       0       0
 12826 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12827 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12828 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12829 ;;Total ram usage:        1 bytes
 12830 ;; Hardware stack levels used:    1
 12831 ;; Hardware stack levels required when called:   12
 12832 ;; This function calls:
 12833 ;;		_oled_writeCommand
 12834 ;; This function is called by:
 12835 ;;		_oled_devInit
 12836 ;; This function uses a non-reentrant model
 12837 ;;
 12838                           
 12839                           	psect	text34
 12840  00621C                     __ptext34:
 12841                           	opt stack 0
 12842  00621C                     _oled_initialDispayLine:
 12843                           	opt stack 16
 12844                           
 12845                           ;incstack = 0
 12846                           ;oled_initialDispayLine@line stored from wreg
 12847  00621C  0100               	movlb	0	; () banked
 12848  00621E  6F61               	movwf	oled_initialDispayLine@line& (0+255),b
 12849                           
 12850                           ;SSD1306oLED.c: 487: line|=0x40;
 12851  006220  0100               	movlb	0	; () banked
 12852  006222  8D61               	bsf	oled_initialDispayLine@line& (0+255),6,b
 12853                           
 12854                           ; BSR set to: 0
 12855                           ;SSD1306oLED.c: 488: oled_writeCommand(line);
 12856  006224  5161               	movf	oled_initialDispayLine@line& (0+255),w,b
 12857  006226  ECA3  F030         	call	_oled_writeCommand
 12858  00622A  0012               	return	
 12859  00622C                     __end_of_oled_initialDispayLine:
 12860                           	opt stack 0
 12861                           tblptru	equ	0xFF8
 12862                           tblptrh	equ	0xFF7
 12863                           tblptrl	equ	0xFF6
 12864                           tablat	equ	0xFF5
 12865                           prodh	equ	0xFF4
 12866                           prodl	equ	0xFF3
 12867                           intcon	equ	0xFF2
 12868                           intcon3	equ	0xFF0
 12869                           postinc0	equ	0xFEE
 12870                           wreg	equ	0xFE8
 12871                           indf1	equ	0xFE7
 12872                           postdec1	equ	0xFE5
 12873                           fsr1h	equ	0xFE2
 12874                           fsr1l	equ	0xFE1
 12875                           indf2	equ	0xFDF
 12876                           fsr2h	equ	0xFDA
 12877                           fsr2l	equ	0xFD9
 12878                           status	equ	0xFD8
 12879                           
 12880 ;; *************** function _oled_displayOff *****************
 12881 ;; Defined at:
 12882 ;;		line 448 in file "../Includes/Drivers/SSD1306oLED.c"
 12883 ;; Parameters:    Size  Location     Type
 12884 ;;  state           1    wreg     unsigned char 
 12885 ;; Auto vars:     Size  Location     Type
 12886 ;;  state           1    0[COMRAM] unsigned char 
 12887 ;; Return value:  Size  Location     Type
 12888 ;;                  1    wreg      void 
 12889 ;; Registers used:
 12890 ;;		wreg, cstack
 12891 ;; Tracked objects:
 12892 ;;		On entry : 0/0
 12893 ;;		On exit  : 0/0
 12894 ;;		Unchanged: 0/0
 12895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12896 ;;      Params:         0       0       0       0       0       0       0       0       0
 12897 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12898 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12899 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12900 ;;Total ram usage:        0 bytes
 12901 ;; Hardware stack levels used:    1
 12902 ;; Hardware stack levels required when called:   12
 12903 ;; This function calls:
 12904 ;;		_oled_writeCommand
 12905 ;; This function is called by:
 12906 ;;		_moteApp_GoToSleep
 12907 ;; This function uses a non-reentrant model
 12908 ;;
 12909                           
 12910                           	psect	text35
 12911  0062A0                     __ptext35:
 12912                           	opt stack 0
 12913  0062A0                     _oled_displayOff:
 12914                           	opt stack 15
 12915                           
 12916                           ;SSD1306oLED.c: 450: oled_writeCommand(0xae);
 12917                           
 12918                           ;incstack = 0
 12919  0062A0  0EAE               	movlw	174
 12920  0062A2  ECA3  F030         	call	_oled_writeCommand
 12921  0062A6  0012               	return		;funcret
 12922  0062A8                     __end_of_oled_displayOff:
 12923                           	opt stack 0
 12924                           tblptru	equ	0xFF8
 12925                           tblptrh	equ	0xFF7
 12926                           tblptrl	equ	0xFF6
 12927                           tablat	equ	0xFF5
 12928                           prodh	equ	0xFF4
 12929                           prodl	equ	0xFF3
 12930                           intcon	equ	0xFF2
 12931                           intcon3	equ	0xFF0
 12932                           postinc0	equ	0xFEE
 12933                           wreg	equ	0xFE8
 12934                           indf1	equ	0xFE7
 12935                           postdec1	equ	0xFE5
 12936                           fsr1h	equ	0xFE2
 12937                           fsr1l	equ	0xFE1
 12938                           indf2	equ	0xFDF
 12939                           fsr2h	equ	0xFDA
 12940                           fsr2l	equ	0xFD9
 12941                           status	equ	0xFD8
 12942                           
 12943 ;; *************** function _moduleSleep *****************
 12944 ;; Defined at:
 12945 ;;		line 195 in file "../Includes/Board/MOTEapp.c"
 12946 ;; Parameters:    Size  Location     Type
 12947 ;;		None
 12948 ;; Auto vars:     Size  Location     Type
 12949 ;;		None
 12950 ;; Return value:  Size  Location     Type
 12951 ;;                  1    wreg      void 
 12952 ;; Registers used:
 12953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12954 ;; Tracked objects:
 12955 ;;		On entry : 0/0
 12956 ;;		On exit  : 0/0
 12957 ;;		Unchanged: 0/0
 12958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12959 ;;      Params:         0       0       0       0       0       0       0       0       0
 12960 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12961 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12962 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12963 ;;Total ram usage:        1 bytes
 12964 ;; Hardware stack levels used:    1
 12965 ;; Hardware stack levels required when called:   14
 12966 ;; This function calls:
 12967 ;;		_sendCommand
 12968 ;; This function is called by:
 12969 ;;		_moteApp_GoToSleep
 12970 ;; This function uses a non-reentrant model
 12971 ;;
 12972                           
 12973                           	psect	text36
 12974  005FD0                     __ptext36:
 12975                           	opt stack 0
 12976  005FD0                     _moduleSleep:
 12977                           	opt stack 13
 12978                           
 12979                           ;MOTEapp.c: 197: sendCommand("sys sleep 999999999");
 12980                           
 12981                           ;incstack = 0
 12982  005FD0  0E83               	movlw	low STR_22
 12983  005FD2  0100               	movlb	0	; () banked
 12984  005FD4  6F61               	movwf	sendCommand@string& (0+255),b
 12985  005FD6  0E7A               	movlw	high STR_22
 12986  005FD8  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 12987  005FDA  EC5B  F02E         	call	_sendCommand	;wreg free
 12988  005FDE                     
 12989                           ;MOTEapp.c: 199: ;
 12990  005FDE  B89D               	btfsc	3997,4,c	;volatile
 12991  005FE0  D7FE               	goto	l371
 12992                           
 12993                           ;MOTEapp.c: 200: _delay((unsigned long)((16)*(48000000/4000.0)));
 12994  005FE2  0EFA               	movlw	250
 12995  005FE4  0100               	movlb	0	; () banked
 12996  005FE6  6F63               	movwf	??_moduleSleep& (0+255),b
 12997  005FE8  0E58               	movlw	88
 12998  005FEA                     u11617:
 12999  005FEA  2EE8               	decfsz	wreg,f,c
 13000  005FEC  D7FE               	bra	u11617
 13001  005FEE  2F63               	decfsz	??_moduleSleep& (0+255),f,b
 13002  005FF0  D7FC               	bra	u11617
 13003  005FF2  F000               	nop	
 13004  005FF4  0012               	return		;funcret
 13005  005FF6                     __end_of_moduleSleep:
 13006                           	opt stack 0
 13007                           tblptru	equ	0xFF8
 13008                           tblptrh	equ	0xFF7
 13009                           tblptrl	equ	0xFF6
 13010                           tablat	equ	0xFF5
 13011                           prodh	equ	0xFF4
 13012                           prodl	equ	0xFF3
 13013                           intcon	equ	0xFF2
 13014                           intcon3	equ	0xFF0
 13015                           postinc0	equ	0xFEE
 13016                           wreg	equ	0xFE8
 13017                           indf1	equ	0xFE7
 13018                           postdec1	equ	0xFE5
 13019                           fsr1h	equ	0xFE2
 13020                           fsr1l	equ	0xFE1
 13021                           indf2	equ	0xFDF
 13022                           fsr2h	equ	0xFDA
 13023                           fsr2l	equ	0xFD9
 13024                           status	equ	0xFD8
 13025                           
 13026 ;; *************** function _moduleResync *****************
 13027 ;; Defined at:
 13028 ;;		line 154 in file "../Includes/Board/MOTEapp.c"
 13029 ;; Parameters:    Size  Location     Type
 13030 ;;		None
 13031 ;; Auto vars:     Size  Location     Type
 13032 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 13033 ;;  escapeEvent     1    7[BANK0 ] unsigned char 
 13034 ;; Return value:  Size  Location     Type
 13035 ;;                  1    wreg      void 
 13036 ;; Registers used:
 13037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13038 ;; Tracked objects:
 13039 ;;		On entry : 0/0
 13040 ;;		On exit  : 0/0
 13041 ;;		Unchanged: 0/0
 13042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13043 ;;      Params:         0       0       0       0       0       0       0       0       0
 13044 ;;      Locals:         0       3       0       0       0       0       0       0       0
 13045 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13046 ;;      Totals:         0       3       0       0       0       0       0       0       0
 13047 ;;Total ram usage:        3 bytes
 13048 ;; Hardware stack levels used:    1
 13049 ;; Hardware stack levels required when called:   14
 13050 ;; This function calls:
 13051 ;;		_MOTEapp_getModuleResponse
 13052 ;;		_moteApp_delayms
 13053 ;;		_sendCommand
 13054 ;; This function is called by:
 13055 ;;		_main
 13056 ;;		_moteApp_GoToSleep
 13057 ;; This function uses a non-reentrant model
 13058 ;;
 13059                           
 13060                           	psect	text37
 13061  004EA4                     __ptext37:
 13062                           	opt stack 0
 13063  004EA4                     _moduleResync:
 13064                           	opt stack 13
 13065                           
 13066                           ;MOTEapp.c: 156: bool escapeEvent = 0;
 13067                           
 13068                           ;incstack = 0
 13069  004EA4  0E00               	movlw	0
 13070  004EA6  0100               	movlb	0	; () banked
 13071  004EA8  6F67               	movwf	moduleResync@escapeEvent& (0+255),b
 13072                           
 13073                           ;MOTEapp.c: 157: uint16_t escapeCounter = 0;
 13074  004EAA  0E00               	movlw	0
 13075  004EAC  6F66               	movwf	(moduleResync@escapeCounter+1)& (0+255),b
 13076  004EAE  0E00               	movlw	0
 13077  004EB0  6F65               	movwf	moduleResync@escapeCounter& (0+255),b
 13078                           
 13079                           ; BSR set to: 0
 13080                           ;MOTEapp.c: 165: TXSTAbits.TXEN = 0;
 13081  004EB2  9AAC               	bcf	4012,5,c	;volatile
 13082                           
 13083                           ; BSR set to: 0
 13084                           ;MOTEapp.c: 166: LATCbits.LATC6 = 0;
 13085  004EB4  9C8B               	bcf	3979,6,c	;volatile
 13086                           
 13087                           ; BSR set to: 0
 13088                           ;MOTEapp.c: 167: moteApp_delayms(10);
 13089  004EB6  0E00               	movlw	0
 13090  004EB8  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 13091  004EBA  0E0A               	movlw	10
 13092  004EBC  6F60               	movwf	moteApp_delayms@length& (0+255),b
 13093  004EBE  ECA8  F02E         	call	_moteApp_delayms	;wreg free
 13094                           
 13095                           ;MOTEapp.c: 168: TXSTAbits.TXEN = 1;
 13096  004EC2  8AAC               	bsf	4012,5,c	;volatile
 13097                           
 13098                           ;MOTEapp.c: 169: moteApp_delayms(5);
 13099  004EC4  0E00               	movlw	0
 13100  004EC6  0100               	movlb	0	; () banked
 13101  004EC8  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 13102  004ECA  0E05               	movlw	5
 13103  004ECC  6F60               	movwf	moteApp_delayms@length& (0+255),b
 13104  004ECE  ECA8  F02E         	call	_moteApp_delayms	;wreg free
 13105                           
 13106                           ;MOTEapp.c: 171: TXREG = 0x55;
 13107  004ED2  0E55               	movlw	85
 13108  004ED4  6EAD               	movwf	4013,c	;volatile
 13109  004ED6                     
 13110                           ;MOTEapp.c: 173: {};
 13111  004ED6  A2AC               	btfss	4012,1,c	;volatile
 13112  004ED8  D7FE               	goto	l353
 13113                           
 13114                           ;MOTEapp.c: 175: sendCommand("z");
 13115  004EDA  0EFD               	movlw	low STR_21
 13116  004EDC  0100               	movlb	0	; () banked
 13117  004EDE  6F61               	movwf	sendCommand@string& (0+255),b
 13118  004EE0  0E7F               	movlw	high STR_21
 13119  004EE2  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13120  004EE4  EC5B  F02E         	call	_sendCommand	;wreg free
 13121                           
 13122                           ;MOTEapp.c: 177: moteApp_delayms(40);
 13123  004EE8  0E00               	movlw	0
 13124  004EEA  0100               	movlb	0	; () banked
 13125  004EEC  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 13126  004EEE  0E28               	movlw	40
 13127  004EF0  6F60               	movwf	moteApp_delayms@length& (0+255),b
 13128  004EF2  ECA8  F02E         	call	_moteApp_delayms	;wreg free
 13129                           
 13130                           ;MOTEapp.c: 178: while (escapeEvent)
 13131  004EF6  D013               	goto	l359
 13132  004EF8                     
 13133                           ;MOTEapp.c: 179: {
 13134                           ;MOTEapp.c: 180: if(MOTEapp_getModuleResponse())
 13135  004EF8  EC98  F02A         	call	_MOTEapp_getModuleResponse	;wreg free
 13136  004EFC  0900               	iorlw	0
 13137  004EFE  B4D8               	btfsc	status,2,c
 13138  004F00  D003               	goto	l357
 13139                           
 13140                           ;MOTEapp.c: 181: escapeEvent = 1;
 13141  004F02  0E01               	movlw	1
 13142  004F04  0100               	movlb	0	; () banked
 13143  004F06  D00A               	goto	L6
 13144  004F08                     l357:
 13145                           
 13146                           ;MOTEapp.c: 182: else if (++escapeCounter > 5000)
 13147                           
 13148                           ; BSR set to: 0
 13149  004F08  0100               	movlb	0	; () banked
 13150  004F0A  4B65               	infsnz	moduleResync@escapeCounter& (0+255),f,b
 13151  004F0C  2B66               	incf	(moduleResync@escapeCounter+1)& (0+255),f,b
 13152  004F0E  0E89               	movlw	137
 13153  004F10  5D65               	subwf	moduleResync@escapeCounter& (0+255),w,b
 13154  004F12  0E13               	movlw	19
 13155  004F14  5966               	subwfb	(moduleResync@escapeCounter+1)& (0+255),w,b
 13156  004F16  A0D8               	btfss	status,0,c
 13157  004F18  D002               	goto	l359
 13158                           
 13159                           ; BSR set to: 0
 13160                           ;MOTEapp.c: 183: escapeEvent = 1;
 13161  004F1A  0E01               	movlw	1
 13162  004F1C                     L6:
 13163  004F1C  6F67               	movwf	moduleResync@escapeEvent& (0+255),b
 13164  004F1E                     l359:
 13165                           
 13166                           ; BSR set to: 0
 13167                           
 13168                           ; BSR set to: 0
 13169  004F1E  0100               	movlb	0	; () banked
 13170  004F20  5167               	movf	moduleResync@escapeEvent& (0+255),w,b
 13171  004F22  B4D8               	btfsc	status,2,c
 13172  004F24  0012               	return	
 13173  004F26  D7E8               	goto	l356
 13174  004F28                     __end_of_moduleResync:
 13175                           	opt stack 0
 13176                           tblptru	equ	0xFF8
 13177                           tblptrh	equ	0xFF7
 13178                           tblptrl	equ	0xFF6
 13179                           tablat	equ	0xFF5
 13180                           prodh	equ	0xFF4
 13181                           prodl	equ	0xFF3
 13182                           intcon	equ	0xFF2
 13183                           intcon3	equ	0xFF0
 13184                           postinc0	equ	0xFEE
 13185                           wreg	equ	0xFE8
 13186                           indf1	equ	0xFE7
 13187                           postdec1	equ	0xFE5
 13188                           fsr1h	equ	0xFE2
 13189                           fsr1l	equ	0xFE1
 13190                           indf2	equ	0xFDF
 13191                           fsr2h	equ	0xFDA
 13192                           fsr2l	equ	0xFD9
 13193                           status	equ	0xFD8
 13194                           
 13195 ;; *************** function _MOTEapp_getModuleResponse *****************
 13196 ;; Defined at:
 13197 ;;		line 1099 in file "../Includes/Board/MOTEapp.c"
 13198 ;; Parameters:    Size  Location     Type
 13199 ;;		None
 13200 ;; Auto vars:     Size  Location     Type
 13201 ;;  bufferByte      1    2[BANK0 ] unsigned char 
 13202 ;;  terminatorRe    1    1[BANK0 ] unsigned char 
 13203 ;; Return value:  Size  Location     Type
 13204 ;;                  1    wreg      unsigned char 
 13205 ;; Registers used:
 13206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13207 ;; Tracked objects:
 13208 ;;		On entry : 0/0
 13209 ;;		On exit  : 0/0
 13210 ;;		Unchanged: 0/0
 13211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13212 ;;      Params:         0       0       0       0       0       0       0       0       0
 13213 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13214 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13215 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13216 ;;Total ram usage:        2 bytes
 13217 ;; Hardware stack levels used:    1
 13218 ;; Hardware stack levels required when called:   12
 13219 ;; This function calls:
 13220 ;;		_EUSART_Read
 13221 ;; This function is called by:
 13222 ;;		_moduleResync
 13223 ;;		_moteHandler
 13224 ;;		_moteApp_setSensorsInput
 13225 ;;		_moteApp_getTempValue
 13226 ;;		_moteApp_getLightValue
 13227 ;; This function uses a non-reentrant model
 13228 ;;
 13229                           
 13230                           	psect	text38
 13231  005530                     __ptext38:
 13232                           	opt stack 0
 13233  005530                     _MOTEapp_getModuleResponse:
 13234                           	opt stack 15
 13235                           
 13236                           ;MOTEapp.c: 1101: bool terminatorReceived = 0;
 13237                           
 13238                           ; BSR set to: 0
 13239                           ;incstack = 0
 13240  005530  0E00               	movlw	0
 13241  005532  0100               	movlb	0	; () banked
 13242  005534  6F61               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 13243                           
 13244                           ;MOTEapp.c: 1103: if ((eusartRxCount))
 13245  005536  51F5               	movf	_eusartRxCount& (0+255),w,b	;volatile
 13246  005538  B4D8               	btfsc	status,2,c
 13247  00553A  D02B               	goto	l642
 13248                           
 13249                           ; BSR set to: 0
 13250                           ;MOTEapp.c: 1104: {
 13251                           ;MOTEapp.c: 1105: uint8_t bufferByte = 0;
 13252  00553C  0E00               	movlw	0
 13253  00553E  6F62               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 13254                           
 13255                           ; BSR set to: 0
 13256                           ;MOTEapp.c: 1106: bufferByte = EUSART_Read();
 13257  005540  ECEA  F02D         	call	_EUSART_Read	;wreg free
 13258  005544  0100               	movlb	0	; () banked
 13259  005546  6F62               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 13260                           
 13261                           ; BSR set to: 0
 13262                           ;MOTEapp.c: 1108: if (bufferByte == 0x0D)
 13263  005548  0E0D               	movlw	13
 13264  00554A  1962               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13265  00554C  A4D8               	btfss	status,2,c
 13266  00554E  D00F               	goto	l637
 13267                           
 13268                           ; BSR set to: 0
 13269                           ;MOTEapp.c: 1109: {
 13270                           ;MOTEapp.c: 1110: moduleResonseBuffer[moduleBufferIndex] = 0x00;
 13271  005550  51F1               	movf	_moduleBufferIndex& (0+255),w,b
 13272  005552  0D01               	mullw	1
 13273  005554  0E67               	movlw	low _moduleResonseBuffer
 13274  005556  24F3               	addwf	prodl,w,c
 13275  005558  6ED9               	movwf	fsr2l,c
 13276  00555A  0E01               	movlw	high _moduleResonseBuffer
 13277  00555C  20F4               	addwfc	prodh,w,c
 13278  00555E  6EDA               	movwf	fsr2h,c
 13279  005560  0E00               	movlw	0
 13280  005562  6EDF               	movwf	indf2,c
 13281                           
 13282                           ; BSR set to: 0
 13283                           ;MOTEapp.c: 1111: terminatorReceived = 1;
 13284  005564  0E01               	movlw	1
 13285  005566  6F61               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 13286                           
 13287                           ; BSR set to: 0
 13288                           ;MOTEapp.c: 1112: moduleBufferIndex = 0;
 13289  005568  0E00               	movlw	0
 13290  00556A  6FF1               	movwf	_moduleBufferIndex& (0+255),b
 13291                           
 13292                           ;MOTEapp.c: 1113: }
 13293  00556C  D012               	goto	l642
 13294  00556E                     l637:
 13295                           
 13296                           ; BSR set to: 0
 13297                           ;MOTEapp.c: 1114: else if ( (bufferByte == 0x00) || (bufferByte == 0x0A) )
 13298                           
 13299                           ; BSR set to: 0
 13300  00556E  5162               	movf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13301  005570  B4D8               	btfsc	status,2,c
 13302  005572  D00F               	goto	l642
 13303                           
 13304                           ; BSR set to: 0
 13305  005574  0E0A               	movlw	10
 13306  005576  1962               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13307  005578  B4D8               	btfsc	status,2,c
 13308  00557A  D00B               	goto	l642
 13309                           
 13310                           ; BSR set to: 0
 13311                           ;MOTEapp.c: 1118: else
 13312                           ;MOTEapp.c: 1119: {
 13313                           ;MOTEapp.c: 1120: moduleResonseBuffer[moduleBufferIndex] = bufferByte;
 13314                           
 13315                           ; BSR set to: 0
 13316                           
 13317                           ; BSR set to: 0
 13318                           ;MOTEapp.c: 1115: {
 13319                           ;MOTEapp.c: 1117: }
 13320  00557C  51F1               	movf	_moduleBufferIndex& (0+255),w,b
 13321  00557E  0D01               	mullw	1
 13322  005580  0E67               	movlw	low _moduleResonseBuffer
 13323  005582  24F3               	addwf	prodl,w,c
 13324  005584  6ED9               	movwf	fsr2l,c
 13325  005586  0E01               	movlw	high _moduleResonseBuffer
 13326  005588  20F4               	addwfc	prodh,w,c
 13327  00558A  6EDA               	movwf	fsr2h,c
 13328  00558C  C062  FFDF         	movff	MOTEapp_getModuleResponse@bufferByte,indf2
 13329                           
 13330                           ; BSR set to: 0
 13331                           ;MOTEapp.c: 1122: moduleBufferIndex++;
 13332  005590  2BF1               	incf	_moduleBufferIndex& (0+255),f,b
 13333  005592                     l642:
 13334                           
 13335                           ; BSR set to: 0
 13336                           ;MOTEapp.c: 1123: }
 13337                           ;MOTEapp.c: 1124: }
 13338                           ;MOTEapp.c: 1125: return terminatorReceived;
 13339                           
 13340                           ; BSR set to: 0
 13341                           
 13342                           ; BSR set to: 0
 13343                           
 13344                           ; BSR set to: 0
 13345  005592  5161               	movf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),w,b
 13346  005594  0012               	return	
 13347  005596                     __end_of_MOTEapp_getModuleResponse:
 13348                           	opt stack 0
 13349                           tblptru	equ	0xFF8
 13350                           tblptrh	equ	0xFF7
 13351                           tblptrl	equ	0xFF6
 13352                           tablat	equ	0xFF5
 13353                           prodh	equ	0xFF4
 13354                           prodl	equ	0xFF3
 13355                           intcon	equ	0xFF2
 13356                           intcon3	equ	0xFF0
 13357                           postinc0	equ	0xFEE
 13358                           wreg	equ	0xFE8
 13359                           indf1	equ	0xFE7
 13360                           postdec1	equ	0xFE5
 13361                           fsr1h	equ	0xFE2
 13362                           fsr1l	equ	0xFE1
 13363                           indf2	equ	0xFDF
 13364                           fsr2h	equ	0xFDA
 13365                           fsr2l	equ	0xFD9
 13366                           status	equ	0xFD8
 13367                           
 13368 ;; *************** function _EUSART_FlushBuffer *****************
 13369 ;; Defined at:
 13370 ;;		line 202 in file "../Includes/MccGenerated/eusart.c"
 13371 ;; Parameters:    Size  Location     Type
 13372 ;;		None
 13373 ;; Auto vars:     Size  Location     Type
 13374 ;;  index           1    0[BANK0 ] unsigned char 
 13375 ;; Return value:  Size  Location     Type
 13376 ;;                  1    wreg      void 
 13377 ;; Registers used:
 13378 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13379 ;; Tracked objects:
 13380 ;;		On entry : 0/0
 13381 ;;		On exit  : 0/0
 13382 ;;		Unchanged: 0/0
 13383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13384 ;;      Params:         0       0       0       0       0       0       0       0       0
 13385 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13386 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13387 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13388 ;;Total ram usage:        1 bytes
 13389 ;; Hardware stack levels used:    1
 13390 ;; Hardware stack levels required when called:   11
 13391 ;; This function calls:
 13392 ;;		Nothing
 13393 ;; This function is called by:
 13394 ;;		_test_powerup
 13395 ;;		_moteApp_GoToSleep
 13396 ;; This function uses a non-reentrant model
 13397 ;;
 13398                           
 13399                           	psect	text39
 13400  0059DE                     __ptext39:
 13401                           	opt stack 0
 13402  0059DE                     _EUSART_FlushBuffer:
 13403                           	opt stack 18
 13404                           
 13405                           ;eusart.c: 204: uint8_t index;
 13406                           ;eusart.c: 205: for (index=0; index < 64; index++)
 13407                           
 13408                           ; BSR set to: 0
 13409                           ;incstack = 0
 13410  0059DE  0E00               	movlw	0
 13411  0059E0  0100               	movlb	0	; () banked
 13412  0059E2  6F60               	movwf	EUSART_FlushBuffer@index& (0+255),b
 13413  0059E4                     l8701:
 13414                           
 13415                           ; BSR set to: 0
 13416  0059E4  0E3F               	movlw	63
 13417  0059E6  6560               	cpfsgt	EUSART_FlushBuffer@index& (0+255),b
 13418  0059E8  D001               	goto	l1321
 13419  0059EA  D00C               	goto	u6720
 13420  0059EC                     l1321:
 13421                           
 13422                           ; BSR set to: 0
 13423                           ;eusart.c: 206: {
 13424                           ;eusart.c: 207: eusartRxBuffer[index] = 0;
 13425                           
 13426                           ; BSR set to: 0
 13427  0059EC  5160               	movf	EUSART_FlushBuffer@index& (0+255),w,b
 13428  0059EE  0D01               	mullw	1
 13429  0059F0  0E00               	movlw	low _eusartRxBuffer
 13430  0059F2  24F3               	addwf	prodl,w,c
 13431  0059F4  6ED9               	movwf	fsr2l,c
 13432  0059F6  0E02               	movlw	high _eusartRxBuffer
 13433  0059F8  20F4               	addwfc	prodh,w,c
 13434  0059FA  6EDA               	movwf	fsr2h,c
 13435  0059FC  0E00               	movlw	0
 13436  0059FE  6EDF               	movwf	indf2,c
 13437                           
 13438                           ; BSR set to: 0
 13439  005A00  2B60               	incf	EUSART_FlushBuffer@index& (0+255),f,b
 13440  005A02  D7F0               	goto	l8701
 13441  005A04                     u6720:
 13442                           
 13443                           ; BSR set to: 0
 13444                           ;eusart.c: 208: }
 13445                           ;eusart.c: 209: eusartRxHead = 0;
 13446                           
 13447                           ; BSR set to: 0
 13448  005A04  0E00               	movlw	0
 13449  005A06  6FDF               	movwf	_eusartRxHead& (0+255),b
 13450                           
 13451                           ;eusart.c: 210: eusartRxTail = 0;
 13452  005A08  0E00               	movlw	0
 13453  005A0A  6FDE               	movwf	_eusartRxTail& (0+255),b
 13454                           
 13455                           ;eusart.c: 211: eusartRxCount = 0;
 13456  005A0C  0E00               	movlw	0
 13457  005A0E  6FF5               	movwf	_eusartRxCount& (0+255),b	;volatile
 13458                           
 13459                           ; BSR set to: 0
 13460                           ;eusart.c: 213: PIE1bits.TXIE = 0;
 13461  005A10  989D               	bcf	3997,4,c	;volatile
 13462                           
 13463                           ;eusart.c: 214: eusartTxHead = 0;
 13464  005A12  0E00               	movlw	0
 13465  005A14  6FE2               	movwf	_eusartTxHead& (0+255),b
 13466                           
 13467                           ;eusart.c: 215: eusartTxTail = 0;
 13468  005A16  0E00               	movlw	0
 13469  005A18  6FE1               	movwf	_eusartTxTail& (0+255),b
 13470                           
 13471                           ;eusart.c: 216: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 13472  005A1A  0E40               	movlw	64
 13473  005A1C  6FE0               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
 13474                           
 13475                           ; BSR set to: 0
 13476  005A1E  0012               	return		;funcret
 13477  005A20                     __end_of_EUSART_FlushBuffer:
 13478                           	opt stack 0
 13479                           tblptru	equ	0xFF8
 13480                           tblptrh	equ	0xFF7
 13481                           tblptrl	equ	0xFF6
 13482                           tablat	equ	0xFF5
 13483                           prodh	equ	0xFF4
 13484                           prodl	equ	0xFF3
 13485                           intcon	equ	0xFF2
 13486                           intcon3	equ	0xFF0
 13487                           postinc0	equ	0xFEE
 13488                           wreg	equ	0xFE8
 13489                           indf1	equ	0xFE7
 13490                           postdec1	equ	0xFE5
 13491                           fsr1h	equ	0xFE2
 13492                           fsr1l	equ	0xFE1
 13493                           indf2	equ	0xFDF
 13494                           fsr2h	equ	0xFDA
 13495                           fsr2l	equ	0xFD9
 13496                           status	equ	0xFD8
 13497                           
 13498 ;; *************** function _TMR2_ReadTimer *****************
 13499 ;; Defined at:
 13500 ;;		line 87 in file "../Includes/MccGenerated/tmr2.c"
 13501 ;; Parameters:    Size  Location     Type
 13502 ;;		None
 13503 ;; Auto vars:     Size  Location     Type
 13504 ;;  readVal         1    0[BANK0 ] unsigned char 
 13505 ;; Return value:  Size  Location     Type
 13506 ;;                  1    wreg      unsigned char 
 13507 ;; Registers used:
 13508 ;;		wreg, status,2
 13509 ;; Tracked objects:
 13510 ;;		On entry : 0/0
 13511 ;;		On exit  : 0/0
 13512 ;;		Unchanged: 0/0
 13513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13514 ;;      Params:         0       0       0       0       0       0       0       0       0
 13515 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13516 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13517 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13518 ;;Total ram usage:        1 bytes
 13519 ;; Hardware stack levels used:    1
 13520 ;; Hardware stack levels required when called:   11
 13521 ;; This function calls:
 13522 ;;		Nothing
 13523 ;; This function is called by:
 13524 ;;		_moteRunningProcess
 13525 ;; This function uses a non-reentrant model
 13526 ;;
 13527                           
 13528                           	psect	text40
 13529  00626E                     __ptext40:
 13530                           	opt stack 0
 13531  00626E                     _TMR2_ReadTimer:
 13532                           	opt stack 17
 13533                           
 13534                           ;tmr2.c: 88: uint8_t readVal;
 13535                           ;tmr2.c: 90: readVal = TMR2;
 13536                           
 13537                           ; BSR set to: 0
 13538                           ;incstack = 0
 13539  00626E  CFBC F060          	movff	4028,TMR2_ReadTimer@readVal	;volatile
 13540                           
 13541                           ;tmr2.c: 92: return readVal;
 13542  006272  0100               	movlb	0	; () banked
 13543  006274  5160               	movf	TMR2_ReadTimer@readVal& (0+255),w,b
 13544  006276  0012               	return	
 13545  006278                     __end_of_TMR2_ReadTimer:
 13546                           	opt stack 0
 13547                           tblptru	equ	0xFF8
 13548                           tblptrh	equ	0xFF7
 13549                           tblptrl	equ	0xFF6
 13550                           tablat	equ	0xFF5
 13551                           prodh	equ	0xFF4
 13552                           prodl	equ	0xFF3
 13553                           intcon	equ	0xFF2
 13554                           intcon3	equ	0xFF0
 13555                           postinc0	equ	0xFEE
 13556                           wreg	equ	0xFE8
 13557                           indf1	equ	0xFE7
 13558                           postdec1	equ	0xFE5
 13559                           fsr1h	equ	0xFE2
 13560                           fsr1l	equ	0xFE1
 13561                           indf2	equ	0xFDF
 13562                           fsr2h	equ	0xFDA
 13563                           fsr2l	equ	0xFD9
 13564                           status	equ	0xFD8
 13565                           
 13566 ;; *************** function _MOTEapp_SetDataRateSetting *****************
 13567 ;; Defined at:
 13568 ;;		line 1006 in file "../Includes/Board/MOTEapp.c"
 13569 ;; Parameters:    Size  Location     Type
 13570 ;;  dr              1    wreg     unsigned char 
 13571 ;; Auto vars:     Size  Location     Type
 13572 ;;  dr              1    4[BANK0 ] unsigned char 
 13573 ;; Return value:  Size  Location     Type
 13574 ;;                  1    wreg      void 
 13575 ;; Registers used:
 13576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13577 ;; Tracked objects:
 13578 ;;		On entry : 0/0
 13579 ;;		On exit  : 0/0
 13580 ;;		Unchanged: 0/0
 13581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13582 ;;      Params:         0       0       0       0       0       0       0       0       0
 13583 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13584 ;;      Temps:          0       1       0       0       0       0       0       0       0
 13585 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13586 ;;Total ram usage:        2 bytes
 13587 ;; Hardware stack levels used:    1
 13588 ;; Hardware stack levels required when called:   14
 13589 ;; This function calls:
 13590 ;;		_sendCommand
 13591 ;; This function is called by:
 13592 ;;		_moteRunningProcess
 13593 ;; This function uses a non-reentrant model
 13594 ;;
 13595                           
 13596                           	psect	text41
 13597  002958                     __ptext41:
 13598                           	opt stack 0
 13599  002958                     _MOTEapp_SetDataRateSetting:
 13600                           	opt stack 14
 13601                           
 13602                           ; BSR set to: 0
 13603                           ;incstack = 0
 13604                           ;MOTEapp_SetDataRateSetting@dr stored from wreg
 13605  002958  0100               	movlb	0	; () banked
 13606  00295A  6F64               	movwf	MOTEapp_SetDataRateSetting@dr& (0+255),b
 13607                           
 13608                           ;MOTEapp.c: 1008: if (dr != 8)
 13609  00295C  0E08               	movlw	8
 13610  00295E  0100               	movlb	0	; () banked
 13611  002960  1964               	xorwf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 13612  002962  B4D8               	btfsc	status,2,c
 13613  002964  D06A               	goto	l607
 13614                           
 13615                           ; BSR set to: 0
 13616                           ;MOTEapp.c: 1009: {
 13617                           ;MOTEapp.c: 1010: sendCommand("mac set adr off");
 13618  002966  0EA4               	movlw	low STR_163
 13619  002968  6F61               	movwf	sendCommand@string& (0+255),b
 13620  00296A  0E7C               	movlw	high STR_163
 13621  00296C  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13622  00296E  EC5B  F02E         	call	_sendCommand	;wreg free
 13623                           
 13624                           ;MOTEapp.c: 1011: _delay((unsigned long)((16)*(48000000/4000.0)));
 13625  002972  0EFA               	movlw	250
 13626  002974  0100               	movlb	0	; () banked
 13627  002976  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13628  002978  0E58               	movlw	88
 13629  00297A                     u11627:
 13630  00297A  2EE8               	decfsz	wreg,f,c
 13631  00297C  D7FE               	bra	u11627
 13632  00297E  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13633  002980  D7FC               	bra	u11627
 13634  002982  F000               	nop	
 13635                           
 13636                           ;MOTEapp.c: 1012: _delay((unsigned long)((16)*(48000000/4000.0)));
 13637  002984  0EFA               	movlw	250
 13638  002986  0100               	movlb	0	; () banked
 13639  002988  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13640  00298A  0E58               	movlw	88
 13641  00298C                     u11637:
 13642  00298C  2EE8               	decfsz	wreg,f,c
 13643  00298E  D7FE               	bra	u11637
 13644  002990  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13645  002992  D7FC               	bra	u11637
 13646  002994  F000               	nop	
 13647                           
 13648                           ;MOTEapp.c: 1013: _delay((unsigned long)((16)*(48000000/4000.0)));
 13649  002996  0EFA               	movlw	250
 13650  002998  0100               	movlb	0	; () banked
 13651  00299A  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13652  00299C  0E58               	movlw	88
 13653  00299E                     u11647:
 13654  00299E  2EE8               	decfsz	wreg,f,c
 13655  0029A0  D7FE               	bra	u11647
 13656  0029A2  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13657  0029A4  D7FC               	bra	u11647
 13658  0029A6  F000               	nop	
 13659                           
 13660                           ;MOTEapp.c: 1014: }
 13661                           ;MOTEapp.c: 1016: switch (dr)
 13662  0029A8  D048               	goto	l607
 13663  0029AA                     
 13664                           ;MOTEapp.c: 1019: sendCommand("mac set dr 0");
 13665  0029AA  0E80               	movlw	low STR_164
 13666  0029AC  0100               	movlb	0	; () banked
 13667  0029AE  6F61               	movwf	sendCommand@string& (0+255),b
 13668  0029B0  0E7D               	movlw	high STR_164
 13669  0029B2  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13670  0029B4  EC5B  F02E         	call	_sendCommand	;wreg free
 13671                           
 13672                           ;MOTEapp.c: 1020: break;
 13673  0029B8  D05D               	goto	l609
 13674  0029BA                     
 13675                           ;MOTEapp.c: 1022: sendCommand("mac set dr 1");
 13676  0029BA  0E8D               	movlw	low STR_165
 13677  0029BC  0100               	movlb	0	; () banked
 13678  0029BE  6F61               	movwf	sendCommand@string& (0+255),b
 13679  0029C0  0E7D               	movlw	high STR_165
 13680  0029C2  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13681  0029C4  EC5B  F02E         	call	_sendCommand	;wreg free
 13682                           
 13683                           ;MOTEapp.c: 1023: break;
 13684  0029C8  D055               	goto	l609
 13685  0029CA                     
 13686                           ;MOTEapp.c: 1025: sendCommand("mac set dr 2");
 13687  0029CA  0E9A               	movlw	low STR_166
 13688  0029CC  0100               	movlb	0	; () banked
 13689  0029CE  6F61               	movwf	sendCommand@string& (0+255),b
 13690  0029D0  0E7D               	movlw	high STR_166
 13691  0029D2  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13692  0029D4  EC5B  F02E         	call	_sendCommand	;wreg free
 13693                           
 13694                           ;MOTEapp.c: 1026: break;
 13695  0029D8  D04D               	goto	l609
 13696  0029DA                     
 13697                           ;MOTEapp.c: 1028: sendCommand("mac set dr 3");
 13698  0029DA  0EA7               	movlw	low STR_167
 13699  0029DC  0100               	movlb	0	; () banked
 13700  0029DE  6F61               	movwf	sendCommand@string& (0+255),b
 13701  0029E0  0E7D               	movlw	high STR_167
 13702  0029E2  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13703  0029E4  EC5B  F02E         	call	_sendCommand	;wreg free
 13704                           
 13705                           ;MOTEapp.c: 1029: break;
 13706  0029E8  D045               	goto	l609
 13707  0029EA                     
 13708                           ;MOTEapp.c: 1031: sendCommand("mac set dr 4");
 13709  0029EA  0EB4               	movlw	low STR_168
 13710  0029EC  0100               	movlb	0	; () banked
 13711  0029EE  6F61               	movwf	sendCommand@string& (0+255),b
 13712  0029F0  0E7D               	movlw	high STR_168
 13713  0029F2  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13714  0029F4  EC5B  F02E         	call	_sendCommand	;wreg free
 13715                           
 13716                           ;MOTEapp.c: 1032: break;
 13717  0029F8  D03D               	goto	l609
 13718  0029FA                     
 13719                           ;MOTEapp.c: 1034: sendCommand("mac set dr 5");
 13720  0029FA  0EC1               	movlw	low STR_169
 13721  0029FC  0100               	movlb	0	; () banked
 13722  0029FE  6F61               	movwf	sendCommand@string& (0+255),b
 13723  002A00  0E7D               	movlw	high STR_169
 13724  002A02  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13725  002A04  EC5B  F02E         	call	_sendCommand	;wreg free
 13726                           
 13727                           ;MOTEapp.c: 1035: break;
 13728  002A08  D035               	goto	l609
 13729  002A0A                     
 13730                           ;MOTEapp.c: 1037: sendCommand("mac set dr 6");
 13731  002A0A  0ECE               	movlw	low STR_170
 13732  002A0C  0100               	movlb	0	; () banked
 13733  002A0E  6F61               	movwf	sendCommand@string& (0+255),b
 13734  002A10  0E7D               	movlw	high STR_170
 13735  002A12  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13736  002A14  EC5B  F02E         	call	_sendCommand	;wreg free
 13737                           
 13738                           ;MOTEapp.c: 1038: break;
 13739  002A18  D02D               	goto	l609
 13740  002A1A                     
 13741                           ;MOTEapp.c: 1040: sendCommand("mac set dr 7");
 13742  002A1A  0EDB               	movlw	low STR_171
 13743  002A1C  0100               	movlb	0	; () banked
 13744  002A1E  6F61               	movwf	sendCommand@string& (0+255),b
 13745  002A20  0E7D               	movlw	high STR_171
 13746  002A22  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13747  002A24  EC5B  F02E         	call	_sendCommand	;wreg free
 13748                           
 13749                           ;MOTEapp.c: 1041: break;
 13750  002A28  D025               	goto	l609
 13751  002A2A                     
 13752                           ;MOTEapp.c: 1043: sendCommand("mac set adr on");
 13753  002A2A  0EF2               	movlw	low STR_172
 13754  002A2C  0100               	movlb	0	; () banked
 13755  002A2E  6F61               	movwf	sendCommand@string& (0+255),b
 13756  002A30  0E7C               	movlw	high STR_172
 13757  002A32  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13758  002A34  EC5B  F02E         	call	_sendCommand	;wreg free
 13759                           
 13760                           ;MOTEapp.c: 1045: }
 13761                           
 13762                           ;MOTEapp.c: 1044: break;
 13763  002A38  D01D               	goto	l609
 13764  002A3A                     l607:
 13765  002A3A  0100               	movlb	0	; () banked
 13766  002A3C  5164               	movf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 13767                           
 13768                           ; Switch size 1, requested type "space"
 13769                           ; Number of cases is 9, Range of values is 0 to 8
 13770                           ; switch strategies available:
 13771                           ; Name         Instructions Cycles
 13772                           ; simple_byte           28    15 (average)
 13773                           ;	Chosen strategy is simple_byte
 13774  002A3E  0A00               	xorlw	0	; case 0
 13775  002A40  B4D8               	btfsc	status,2,c
 13776  002A42  D7B3               	goto	l608
 13777  002A44  0A01               	xorlw	1	; case 1
 13778  002A46  B4D8               	btfsc	status,2,c
 13779  002A48  D7B8               	goto	l610
 13780  002A4A  0A03               	xorlw	3	; case 2
 13781  002A4C  B4D8               	btfsc	status,2,c
 13782  002A4E  D7BD               	goto	l611
 13783  002A50  0A01               	xorlw	1	; case 3
 13784  002A52  B4D8               	btfsc	status,2,c
 13785  002A54  D7C2               	goto	l612
 13786  002A56  0A07               	xorlw	7	; case 4
 13787  002A58  B4D8               	btfsc	status,2,c
 13788  002A5A  D7C7               	goto	l613
 13789  002A5C  0A01               	xorlw	1	; case 5
 13790  002A5E  B4D8               	btfsc	status,2,c
 13791  002A60  D7CC               	goto	l614
 13792  002A62  0A03               	xorlw	3	; case 6
 13793  002A64  B4D8               	btfsc	status,2,c
 13794  002A66  D7D1               	goto	l615
 13795  002A68  0A01               	xorlw	1	; case 7
 13796  002A6A  B4D8               	btfsc	status,2,c
 13797  002A6C  D7D6               	goto	l616
 13798  002A6E  0A0F               	xorlw	15	; case 8
 13799  002A70  B4D8               	btfsc	status,2,c
 13800  002A72  D7DB               	goto	l617
 13801  002A74                     l609:
 13802                           
 13803                           ;MOTEapp.c: 1046: _delay((unsigned long)((16)*(48000000/4000.0)));
 13804                           
 13805                           ; BSR set to: 0
 13806  002A74  0EFA               	movlw	250
 13807  002A76  0100               	movlb	0	; () banked
 13808  002A78  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13809  002A7A  0E58               	movlw	88
 13810  002A7C                     u11657:
 13811  002A7C  2EE8               	decfsz	wreg,f,c
 13812  002A7E  D7FE               	bra	u11657
 13813  002A80  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13814  002A82  D7FC               	bra	u11657
 13815  002A84  F000               	nop	
 13816                           
 13817                           ;MOTEapp.c: 1047: _delay((unsigned long)((16)*(48000000/4000.0)));
 13818  002A86  0EFA               	movlw	250
 13819  002A88  0100               	movlb	0	; () banked
 13820  002A8A  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13821  002A8C  0E58               	movlw	88
 13822  002A8E                     u11667:
 13823  002A8E  2EE8               	decfsz	wreg,f,c
 13824  002A90  D7FE               	bra	u11667
 13825  002A92  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13826  002A94  D7FC               	bra	u11667
 13827  002A96  F000               	nop	
 13828                           
 13829                           ;MOTEapp.c: 1048: _delay((unsigned long)((16)*(48000000/4000.0)));
 13830  002A98  0EFA               	movlw	250
 13831  002A9A  0100               	movlb	0	; () banked
 13832  002A9C  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13833  002A9E  0E58               	movlw	88
 13834  002AA0                     u11677:
 13835  002AA0  2EE8               	decfsz	wreg,f,c
 13836  002AA2  D7FE               	bra	u11677
 13837  002AA4  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13838  002AA6  D7FC               	bra	u11677
 13839  002AA8  F000               	nop	
 13840                           
 13841                           ;MOTEapp.c: 1049: sendCommand("mac save");
 13842  002AAA  0E2C               	movlw	low STR_173
 13843  002AAC  0100               	movlb	0	; () banked
 13844  002AAE  6F61               	movwf	sendCommand@string& (0+255),b
 13845  002AB0  0E7F               	movlw	high STR_173
 13846  002AB2  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13847  002AB4  EC5B  F02E         	call	_sendCommand	;wreg free
 13848  002AB8  0012               	return		;funcret
 13849  002ABA                     __end_of_MOTEapp_SetDataRateSetting:
 13850                           	opt stack 0
 13851                           tblptru	equ	0xFF8
 13852                           tblptrh	equ	0xFF7
 13853                           tblptrl	equ	0xFF6
 13854                           tablat	equ	0xFF5
 13855                           prodh	equ	0xFF4
 13856                           prodl	equ	0xFF3
 13857                           intcon	equ	0xFF2
 13858                           intcon3	equ	0xFF0
 13859                           postinc0	equ	0xFEE
 13860                           wreg	equ	0xFE8
 13861                           indf1	equ	0xFE7
 13862                           postdec1	equ	0xFE5
 13863                           fsr1h	equ	0xFE2
 13864                           fsr1l	equ	0xFE1
 13865                           indf2	equ	0xFDF
 13866                           fsr2h	equ	0xFDA
 13867                           fsr2l	equ	0xFD9
 13868                           status	equ	0xFD8
 13869                           
 13870 ;; *************** function _ADC_TempConversion *****************
 13871 ;; Defined at:
 13872 ;;		line 136 in file "../Includes/MccGenerated/adc.c"
 13873 ;; Parameters:    Size  Location     Type
 13874 ;;  tempRaw         1    wreg     enum E5749
 13875 ;; Auto vars:     Size  Location     Type
 13876 ;;  tempRaw         1   70[BANK0 ] enum E5749
 13877 ;;  val             4   72[BANK0 ] enum E5749
 13878 ;;  temp            1   71[BANK0 ] unsigned char 
 13879 ;; Return value:  Size  Location     Type
 13880 ;;                  1    wreg      unsigned char 
 13881 ;; Registers used:
 13882 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13883 ;; Tracked objects:
 13884 ;;		On entry : 0/0
 13885 ;;		On exit  : 0/0
 13886 ;;		Unchanged: 0/0
 13887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13888 ;;      Params:         0       0       0       0       0       0       0       0       0
 13889 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13890 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13891 ;;      Totals:         0       6       0       0       0       0       0       0       0
 13892 ;;Total ram usage:        6 bytes
 13893 ;; Hardware stack levels used:    1
 13894 ;; Hardware stack levels required when called:   12
 13895 ;; This function calls:
 13896 ;;		___fladd
 13897 ;;		___fldiv
 13898 ;;		___flmul
 13899 ;;		___fltol
 13900 ;;		___xxtofl
 13901 ;; This function is called by:
 13902 ;;		_moteHandler
 13903 ;;		_moteRunningProcess
 13904 ;;		_moteApp_testSensors
 13905 ;;		_test_adc
 13906 ;; This function uses a non-reentrant model
 13907 ;;
 13908                           
 13909                           	psect	text42
 13910  003876                     __ptext42:
 13911                           	opt stack 0
 13912  003876                     _ADC_TempConversion:
 13913                           	opt stack 16
 13914                           
 13915                           ;incstack = 0
 13916                           ;ADC_TempConversion@tempRaw stored from wreg
 13917  003876  0100               	movlb	0	; () banked
 13918  003878  6FA6               	movwf	ADC_TempConversion@tempRaw& (0+255),b
 13919                           
 13920                           ;adc.c: 138: uint8_t temp;
 13921                           ;adc.c: 140: double val = ((tempRaw * 3.2)/1024);
 13922  00387A  0ECD               	movlw	205
 13923  00387C  0100               	movlb	0	; () banked
 13924  00387E  6F78               	movwf	___flmul@a& (0+255),b
 13925  003880  0ECC               	movlw	204
 13926  003882  6F79               	movwf	(___flmul@a+1)& (0+255),b
 13927  003884  0E4C               	movlw	76
 13928  003886  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 13929  003888  0E40               	movlw	64
 13930  00388A  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 13931  00388C  51A6               	movf	ADC_TempConversion@tempRaw& (0+255),w,b
 13932  00388E  6F60               	movwf	___xxtofl@val& (0+255),b
 13933  003890  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
 13934  003892  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 13935  003894  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 13936  003896  0E00               	movlw	0
 13937  003898  EC5D  F015         	call	___xxtofl
 13938  00389C  C060  F074         	movff	?___xxtofl,___flmul@b
 13939  0038A0  C061  F075         	movff	?___xxtofl+1,___flmul@b+1
 13940  0038A4  C062  F076         	movff	?___xxtofl+2,___flmul@b+2
 13941  0038A8  C063  F077         	movff	?___xxtofl+3,___flmul@b+3
 13942  0038AC  ECB4  F00C         	call	___flmul	;wreg free
 13943  0038B0  C074  F08D         	movff	?___flmul,___fldiv@b
 13944  0038B4  C075  F08E         	movff	?___flmul+1,___fldiv@b+1
 13945  0038B8  C076  F08F         	movff	?___flmul+2,___fldiv@b+2
 13946  0038BC  C077  F090         	movff	?___flmul+3,___fldiv@b+3
 13947  0038C0  0E00               	movlw	0
 13948  0038C2  0100               	movlb	0	; () banked
 13949  0038C4  6F91               	movwf	___fldiv@a& (0+255),b
 13950  0038C6  0E00               	movlw	0
 13951  0038C8  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 13952  0038CA  0E80               	movlw	128
 13953  0038CC  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 13954  0038CE  0E44               	movlw	68
 13955  0038D0  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 13956  0038D2  ECFC  F00F         	call	___fldiv	;wreg free
 13957  0038D6  C08D  F0A8         	movff	?___fldiv,ADC_TempConversion@val
 13958  0038DA  C08E  F0A9         	movff	?___fldiv+1,ADC_TempConversion@val+1
 13959  0038DE  C08F  F0AA         	movff	?___fldiv+2,ADC_TempConversion@val+2
 13960  0038E2  C090  F0AB         	movff	?___fldiv+3,ADC_TempConversion@val+3
 13961                           
 13962                           ;adc.c: 141: val = ((val - 0.5)*100);
 13963  0038E6  0E00               	movlw	0
 13964  0038E8  0100               	movlb	0	; () banked
 13965  0038EA  6F64               	movwf	___fladd@a& (0+255),b
 13966  0038EC  0E00               	movlw	0
 13967  0038EE  6F65               	movwf	(___fladd@a+1)& (0+255),b
 13968  0038F0  0E00               	movlw	0
 13969  0038F2  6F66               	movwf	(___fladd@a+2)& (0+255),b
 13970  0038F4  0EBF               	movlw	191
 13971  0038F6  6F67               	movwf	(___fladd@a+3)& (0+255),b
 13972  0038F8  C0A8  F060         	movff	ADC_TempConversion@val,___fladd@b
 13973  0038FC  C0A9  F061         	movff	ADC_TempConversion@val+1,___fladd@b+1
 13974  003900  C0AA  F062         	movff	ADC_TempConversion@val+2,___fladd@b+2
 13975  003904  C0AB  F063         	movff	ADC_TempConversion@val+3,___fladd@b+3
 13976  003908  EC5D  F00E         	call	___fladd	;wreg free
 13977  00390C  C060  F074         	movff	?___fladd,___flmul@b
 13978  003910  C061  F075         	movff	?___fladd+1,___flmul@b+1
 13979  003914  C062  F076         	movff	?___fladd+2,___flmul@b+2
 13980  003918  C063  F077         	movff	?___fladd+3,___flmul@b+3
 13981  00391C  0E00               	movlw	0
 13982  00391E  0100               	movlb	0	; () banked
 13983  003920  6F78               	movwf	___flmul@a& (0+255),b
 13984  003922  0E00               	movlw	0
 13985  003924  6F79               	movwf	(___flmul@a+1)& (0+255),b
 13986  003926  0EC8               	movlw	200
 13987  003928  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 13988  00392A  0E42               	movlw	66
 13989  00392C  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 13990  00392E  ECB4  F00C         	call	___flmul	;wreg free
 13991  003932  C074  F0A8         	movff	?___flmul,ADC_TempConversion@val
 13992  003936  C075  F0A9         	movff	?___flmul+1,ADC_TempConversion@val+1
 13993  00393A  C076  F0AA         	movff	?___flmul+2,ADC_TempConversion@val+2
 13994  00393E  C077  F0AB         	movff	?___flmul+3,ADC_TempConversion@val+3
 13995                           
 13996                           ;adc.c: 142: temp = (uint8_t) val;
 13997  003942  C0A8  F060         	movff	ADC_TempConversion@val,___fltol@f1
 13998  003946  C0A9  F061         	movff	ADC_TempConversion@val+1,___fltol@f1+1
 13999  00394A  C0AA  F062         	movff	ADC_TempConversion@val+2,___fltol@f1+2
 14000  00394E  C0AB  F063         	movff	ADC_TempConversion@val+3,___fltol@f1+3
 14001  003952  EC76  F01E         	call	___fltol	;wreg free
 14002  003956  0100               	movlb	0	; () banked
 14003  003958  5160               	movf	?___fltol& (0+255),w,b
 14004  00395A  6FA7               	movwf	ADC_TempConversion@temp& (0+255),b
 14005                           
 14006                           ; BSR set to: 0
 14007                           ;adc.c: 144: return temp;
 14008  00395C  51A7               	movf	ADC_TempConversion@temp& (0+255),w,b
 14009  00395E  0012               	return	
 14010  003960                     __end_of_ADC_TempConversion:
 14011                           	opt stack 0
 14012                           tblptru	equ	0xFF8
 14013                           tblptrh	equ	0xFF7
 14014                           tblptrl	equ	0xFF6
 14015                           tablat	equ	0xFF5
 14016                           prodh	equ	0xFF4
 14017                           prodl	equ	0xFF3
 14018                           intcon	equ	0xFF2
 14019                           intcon3	equ	0xFF0
 14020                           postinc0	equ	0xFEE
 14021                           wreg	equ	0xFE8
 14022                           indf1	equ	0xFE7
 14023                           postdec1	equ	0xFE5
 14024                           fsr1h	equ	0xFE2
 14025                           fsr1l	equ	0xFE1
 14026                           indf2	equ	0xFDF
 14027                           fsr2h	equ	0xFDA
 14028                           fsr2l	equ	0xFD9
 14029                           status	equ	0xFD8
 14030                           
 14031 ;; *************** function ___xxtofl *****************
 14032 ;; Defined at:
 14033 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 14034 ;; Parameters:    Size  Location     Type
 14035 ;;  sign            1    wreg     unsigned char 
 14036 ;;  val             4    0[BANK0 ] long 
 14037 ;; Auto vars:     Size  Location     Type
 14038 ;;  sign            1    8[BANK0 ] unsigned char 
 14039 ;;  arg             4   10[BANK0 ] unsigned long 
 14040 ;;  exp             1    9[BANK0 ] unsigned char 
 14041 ;; Return value:  Size  Location     Type
 14042 ;;                  4    0[BANK0 ] unsigned char 
 14043 ;; Registers used:
 14044 ;;		wreg, status,2, status,0
 14045 ;; Tracked objects:
 14046 ;;		On entry : 0/0
 14047 ;;		On exit  : 0/0
 14048 ;;		Unchanged: 0/0
 14049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14050 ;;      Params:         0       4       0       0       0       0       0       0       0
 14051 ;;      Locals:         0       6       0       0       0       0       0       0       0
 14052 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14053 ;;      Totals:         0      14       0       0       0       0       0       0       0
 14054 ;;Total ram usage:       14 bytes
 14055 ;; Hardware stack levels used:    1
 14056 ;; Hardware stack levels required when called:   11
 14057 ;; This function calls:
 14058 ;;		Nothing
 14059 ;; This function is called by:
 14060 ;;		_ADC_TempConversion
 14061 ;; This function uses a non-reentrant model
 14062 ;;
 14063                           
 14064                           	psect	text43
 14065  002ABA                     __ptext43:
 14066                           	opt stack 0
 14067  002ABA                     ___xxtofl:
 14068                           	opt stack 16
 14069                           
 14070                           ; BSR set to: 0
 14071                           ;incstack = 0
 14072                           ;___xxtofl@sign stored from wreg
 14073  002ABA  0100               	movlb	0	; () banked
 14074  002ABC  6F68               	movwf	___xxtofl@sign& (0+255),b
 14075  002ABE  0100               	movlb	0	; () banked
 14076  002AC0  5168               	movf	___xxtofl@sign& (0+255),w,b
 14077  002AC2  A4D8               	btfss	status,2,c
 14078                           
 14079                           ; BSR set to: 0
 14080  002AC4  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 14081  002AC6  D01A               	goto	l2901
 14082                           
 14083                           ; BSR set to: 0
 14084  002AC8  C060  F064         	movff	___xxtofl@val,??___xxtofl
 14085  002ACC  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 14086  002AD0  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 14087  002AD4  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 14088  002AD8  1F64               	comf	??___xxtofl& (0+255),f,b
 14089  002ADA  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 14090  002ADC  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 14091  002ADE  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 14092  002AE0  2B64               	incf	??___xxtofl& (0+255),f,b
 14093  002AE2  0E00               	movlw	0
 14094  002AE4  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 14095  002AE6  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 14096  002AE8  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 14097  002AEA  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 14098  002AEE  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 14099  002AF2  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 14100  002AF6  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 14101  002AFA  D008               	goto	l2902
 14102  002AFC                     l2901:
 14103                           
 14104                           ; BSR set to: 0
 14105  002AFC  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 14106  002B00  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 14107  002B04  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 14108  002B08  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 14109  002B0C                     l2902:
 14110                           
 14111                           ; BSR set to: 0
 14112                           
 14113                           ; BSR set to: 0
 14114  002B0C  5160               	movf	___xxtofl@val& (0+255),w,b
 14115  002B0E  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 14116  002B10  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 14117  002B12  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 14118  002B14  A4D8               	btfss	status,2,c
 14119  002B16  D009               	goto	l2903
 14120                           
 14121                           ; BSR set to: 0
 14122  002B18  0E00               	movlw	0
 14123  002B1A  6F60               	movwf	?___xxtofl& (0+255),b
 14124  002B1C  0E00               	movlw	0
 14125  002B1E  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 14126  002B20  0E00               	movlw	0
 14127  002B22  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 14128  002B24  0E00               	movlw	0
 14129  002B26  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 14130                           
 14131                           ; BSR set to: 0
 14132  002B28  0012               	return	
 14133  002B2A                     l2903:
 14134                           
 14135                           ; BSR set to: 0
 14136                           
 14137                           ; BSR set to: 0
 14138  002B2A  0E96               	movlw	150
 14139  002B2C  6F69               	movwf	___xxtofl@exp& (0+255),b
 14140  002B2E  D006               	goto	l2905
 14141  002B30                     
 14142                           ; BSR set to: 0
 14143                           
 14144                           ; BSR set to: 0
 14145  002B30  2B69               	incf	___xxtofl@exp& (0+255),f,b
 14146  002B32  90D8               	bcf	status,0,c
 14147  002B34  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 14148  002B36  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 14149  002B38  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 14150  002B3A  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 14151  002B3C                     l2905:
 14152                           
 14153                           ; BSR set to: 0
 14154                           
 14155                           ; BSR set to: 0
 14156  002B3C  0E00               	movlw	0
 14157  002B3E  156A               	andwf	___xxtofl@arg& (0+255),w,b
 14158  002B40  6F64               	movwf	??___xxtofl& (0+255),b
 14159  002B42  0E00               	movlw	0
 14160  002B44  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 14161  002B46  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 14162  002B48  0E00               	movlw	0
 14163  002B4A  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 14164  002B4C  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 14165  002B4E  0EFE               	movlw	254
 14166  002B50  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 14167  002B52  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 14168  002B54  5164               	movf	??___xxtofl& (0+255),w,b
 14169  002B56  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 14170  002B58  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 14171  002B5A  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 14172  002B5C  B4D8               	btfsc	status,2,c
 14173  002B5E  D00D               	goto	l2908
 14174  002B60  D7E7               	goto	l2906
 14175  002B62                     
 14176                           ; BSR set to: 0
 14177                           
 14178                           ; BSR set to: 0
 14179  002B62  2B69               	incf	___xxtofl@exp& (0+255),f,b
 14180                           
 14181                           ; BSR set to: 0
 14182  002B64  0E01               	movlw	1
 14183  002B66  276A               	addwf	___xxtofl@arg& (0+255),f,b
 14184  002B68  0E00               	movlw	0
 14185  002B6A  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 14186  002B6C  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 14187  002B6E  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 14188                           
 14189                           ; BSR set to: 0
 14190  002B70  90D8               	bcf	status,0,c
 14191  002B72  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 14192  002B74  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 14193  002B76  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 14194  002B78  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 14195  002B7A                     l2908:
 14196                           
 14197                           ; BSR set to: 0
 14198  002B7A  0E00               	movlw	0
 14199  002B7C  156A               	andwf	___xxtofl@arg& (0+255),w,b
 14200  002B7E  6F64               	movwf	??___xxtofl& (0+255),b
 14201  002B80  0E00               	movlw	0
 14202  002B82  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 14203  002B84  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 14204  002B86  0E00               	movlw	0
 14205  002B88  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 14206  002B8A  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 14207  002B8C  0EFF               	movlw	255
 14208  002B8E  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 14209  002B90  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 14210  002B92  5164               	movf	??___xxtofl& (0+255),w,b
 14211  002B94  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 14212  002B96  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 14213  002B98  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 14214  002B9A  B4D8               	btfsc	status,2,c
 14215  002B9C  D007               	goto	l2911
 14216  002B9E  D7E1               	goto	l2909
 14217  002BA0                     
 14218                           ; BSR set to: 0
 14219                           
 14220                           ; BSR set to: 0
 14221  002BA0  0769               	decf	___xxtofl@exp& (0+255),f,b
 14222  002BA2  90D8               	bcf	status,0,c
 14223  002BA4  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 14224  002BA6  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 14225  002BA8  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 14226  002BAA  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 14227  002BAC                     l2911:
 14228                           
 14229                           ; BSR set to: 0
 14230                           
 14231                           ; BSR set to: 0
 14232  002BAC  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 14233  002BAE  D003               	goto	u8070
 14234                           
 14235                           ; BSR set to: 0
 14236  002BB0  0E02               	movlw	2
 14237  002BB2  6169               	cpfslt	___xxtofl@exp& (0+255),b
 14238  002BB4  D7F5               	goto	l2912
 14239  002BB6                     u8070:
 14240                           
 14241                           ; BSR set to: 0
 14242                           
 14243                           ; BSR set to: 0
 14244  002BB6  B169               	btfsc	___xxtofl@exp& (0+255),0,b
 14245  002BB8  D008               	goto	l2916
 14246                           
 14247                           ; BSR set to: 0
 14248  002BBA  0EFF               	movlw	255
 14249  002BBC  176A               	andwf	___xxtofl@arg& (0+255),f,b
 14250  002BBE  0EFF               	movlw	255
 14251  002BC0  176B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 14252  002BC2  0E7F               	movlw	127
 14253  002BC4  176C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 14254  002BC6  0EFF               	movlw	255
 14255  002BC8  176D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 14256  002BCA                     l2916:
 14257                           
 14258                           ; BSR set to: 0
 14259  002BCA  90D8               	bcf	status,0,c
 14260  002BCC  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 14261  002BCE  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 14262  002BD2  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 14263  002BD4  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 14264  002BD6  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 14265  002BD8  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 14266  002BDC  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 14267  002BDE  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 14268  002BE0  6B64               	clrf	??___xxtofl& (0+255),b
 14269  002BE2  5164               	movf	??___xxtofl& (0+255),w,b
 14270  002BE4  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 14271  002BE6  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 14272  002BE8  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 14273  002BEA  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 14274  002BEC  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 14275  002BEE  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 14276  002BF0  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 14277                           
 14278                           ; BSR set to: 0
 14279  002BF2  5168               	movf	___xxtofl@sign& (0+255),w,b
 14280  002BF4  A4D8               	btfss	status,2,c
 14281                           
 14282                           ; BSR set to: 0
 14283  002BF6  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 14284  002BF8  D001               	goto	l2917
 14285                           
 14286                           ; BSR set to: 0
 14287  002BFA  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 14288  002BFC                     l2917:
 14289                           
 14290                           ; BSR set to: 0
 14291                           
 14292                           ; BSR set to: 0
 14293  002BFC  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 14294  002C00  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 14295  002C04  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 14296  002C08  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 14297  002C0C  0012               	return	
 14298  002C0E                     __end_of___xxtofl:
 14299                           	opt stack 0
 14300                           tblptru	equ	0xFF8
 14301                           tblptrh	equ	0xFF7
 14302                           tblptrl	equ	0xFF6
 14303                           tablat	equ	0xFF5
 14304                           prodh	equ	0xFF4
 14305                           prodl	equ	0xFF3
 14306                           intcon	equ	0xFF2
 14307                           intcon3	equ	0xFF0
 14308                           postinc0	equ	0xFEE
 14309                           wreg	equ	0xFE8
 14310                           indf1	equ	0xFE7
 14311                           postdec1	equ	0xFE5
 14312                           fsr1h	equ	0xFE2
 14313                           fsr1l	equ	0xFE1
 14314                           indf2	equ	0xFDF
 14315                           fsr2h	equ	0xFDA
 14316                           fsr2l	equ	0xFD9
 14317                           status	equ	0xFD8
 14318                           
 14319 ;; *************** function ___fltol *****************
 14320 ;; Defined at:
 14321 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 14322 ;; Parameters:    Size  Location     Type
 14323 ;;  f1              4    0[BANK0 ] unsigned char 
 14324 ;; Auto vars:     Size  Location     Type
 14325 ;;  exp1            1    9[BANK0 ] unsigned char 
 14326 ;;  sign1           1    8[BANK0 ] unsigned char 
 14327 ;; Return value:  Size  Location     Type
 14328 ;;                  4    0[BANK0 ] long 
 14329 ;; Registers used:
 14330 ;;		wreg, status,2, status,0
 14331 ;; Tracked objects:
 14332 ;;		On entry : 0/0
 14333 ;;		On exit  : 0/0
 14334 ;;		Unchanged: 0/0
 14335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14336 ;;      Params:         0       4       0       0       0       0       0       0       0
 14337 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14338 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14339 ;;      Totals:         0      10       0       0       0       0       0       0       0
 14340 ;;Total ram usage:       10 bytes
 14341 ;; Hardware stack levels used:    1
 14342 ;; Hardware stack levels required when called:   11
 14343 ;; This function calls:
 14344 ;;		Nothing
 14345 ;; This function is called by:
 14346 ;;		_ADC_TempConversion
 14347 ;; This function uses a non-reentrant model
 14348 ;;
 14349                           
 14350                           	psect	text44
 14351  003CEC                     __ptext44:
 14352                           	opt stack 0
 14353  003CEC                     ___fltol:
 14354                           	opt stack 16
 14355                           
 14356                           ; BSR set to: 0
 14357                           ;incstack = 0
 14358  003CEC  0100               	movlb	0	; () banked
 14359  003CEE  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 14360  003CF0  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 14361  003CF2  6F69               	movwf	___fltol@exp1& (0+255),b
 14362  003CF4  5169               	movf	___fltol@exp1& (0+255),w,b
 14363  003CF6  A4D8               	btfss	status,2,c
 14364  003CF8  D009               	goto	l2554
 14365                           
 14366                           ; BSR set to: 0
 14367  003CFA  0E00               	movlw	0
 14368  003CFC  6F60               	movwf	?___fltol& (0+255),b
 14369  003CFE  0E00               	movlw	0
 14370  003D00  6F61               	movwf	(?___fltol+1)& (0+255),b
 14371  003D02  0E00               	movlw	0
 14372  003D04  6F62               	movwf	(?___fltol+2)& (0+255),b
 14373  003D06  0E00               	movlw	0
 14374  003D08  6F63               	movwf	(?___fltol+3)& (0+255),b
 14375                           
 14376                           ; BSR set to: 0
 14377  003D0A  0012               	return	
 14378  003D0C                     l2554:
 14379                           
 14380                           ; BSR set to: 0
 14381                           
 14382                           ; BSR set to: 0
 14383  003D0C  C060  F064         	movff	___fltol@f1,??___fltol
 14384  003D10  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 14385  003D14  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 14386  003D18  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 14387  003D1C  0E20               	movlw	32
 14388  003D1E  D005               	goto	u7920
 14389  003D20                     u7925:
 14390  003D20  90D8               	bcf	status,0,c
 14391  003D22  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 14392  003D24  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 14393  003D26  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 14394  003D28  3364               	rrcf	??___fltol& (0+255),f,b
 14395  003D2A                     u7920:
 14396  003D2A  2EE8               	decfsz	wreg,f,c
 14397  003D2C  D7F9               	goto	u7925
 14398  003D2E  5164               	movf	??___fltol& (0+255),w,b
 14399  003D30  6F68               	movwf	___fltol@sign1& (0+255),b
 14400                           
 14401                           ; BSR set to: 0
 14402  003D32  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 14403                           
 14404                           ; BSR set to: 0
 14405  003D34  0EFF               	movlw	255
 14406  003D36  1760               	andwf	___fltol@f1& (0+255),f,b
 14407  003D38  0EFF               	movlw	255
 14408  003D3A  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 14409  003D3C  0EFF               	movlw	255
 14410  003D3E  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 14411  003D40  0E00               	movlw	0
 14412  003D42  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 14413                           
 14414                           ; BSR set to: 0
 14415  003D44  0E96               	movlw	150
 14416  003D46  5F69               	subwf	___fltol@exp1& (0+255),f,b
 14417                           
 14418                           ; BSR set to: 0
 14419  003D48  AF69               	btfss	___fltol@exp1& (0+255),7,b
 14420  003D4A  D016               	goto	l2556
 14421                           
 14422                           ; BSR set to: 0
 14423  003D4C  5169               	movf	___fltol@exp1& (0+255),w,b
 14424  003D4E  0A80               	xorlw	128
 14425  003D50  0F97               	addlw	151
 14426  003D52  B0D8               	btfsc	status,0,c
 14427  003D54  D009               	goto	l2557
 14428                           
 14429                           ; BSR set to: 0
 14430  003D56  0E00               	movlw	0
 14431  003D58  6F60               	movwf	?___fltol& (0+255),b
 14432  003D5A  0E00               	movlw	0
 14433  003D5C  6F61               	movwf	(?___fltol+1)& (0+255),b
 14434  003D5E  0E00               	movlw	0
 14435  003D60  6F62               	movwf	(?___fltol+2)& (0+255),b
 14436  003D62  0E00               	movlw	0
 14437  003D64  6F63               	movwf	(?___fltol+3)& (0+255),b
 14438                           
 14439                           ; BSR set to: 0
 14440  003D66  0012               	return	
 14441  003D68                     l2557:
 14442                           
 14443                           ; BSR set to: 0
 14444                           
 14445                           ; BSR set to: 0
 14446                           
 14447                           ; BSR set to: 0
 14448  003D68  90D8               	bcf	status,0,c
 14449  003D6A  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 14450  003D6C  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 14451  003D6E  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 14452  003D70  3360               	rrcf	___fltol@f1& (0+255),f,b
 14453                           
 14454                           ; BSR set to: 0
 14455  003D72  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 14456  003D74  D7F9               	goto	l2557
 14457                           
 14458                           ; BSR set to: 0
 14459  003D76  D015               	goto	u7960
 14460  003D78                     l2556:
 14461                           
 14462                           ; BSR set to: 0
 14463                           
 14464                           ; BSR set to: 0
 14465  003D78  0E1F               	movlw	31
 14466  003D7A  6569               	cpfsgt	___fltol@exp1& (0+255),b
 14467  003D7C  D00F               	goto	l2562
 14468                           
 14469                           ; BSR set to: 0
 14470  003D7E  0E00               	movlw	0
 14471  003D80  6F60               	movwf	?___fltol& (0+255),b
 14472  003D82  0E00               	movlw	0
 14473  003D84  6F61               	movwf	(?___fltol+1)& (0+255),b
 14474  003D86  0E00               	movlw	0
 14475  003D88  6F62               	movwf	(?___fltol+2)& (0+255),b
 14476  003D8A  0E00               	movlw	0
 14477  003D8C  6F63               	movwf	(?___fltol+3)& (0+255),b
 14478                           
 14479                           ; BSR set to: 0
 14480  003D8E  0012               	return	
 14481  003D90                     
 14482                           ; BSR set to: 0
 14483                           
 14484                           ; BSR set to: 0
 14485  003D90  90D8               	bcf	status,0,c
 14486  003D92  3760               	rlcf	___fltol@f1& (0+255),f,b
 14487  003D94  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 14488  003D96  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 14489  003D98  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 14490  003D9A  0769               	decf	___fltol@exp1& (0+255),f,b
 14491  003D9C                     l2562:
 14492                           
 14493                           ; BSR set to: 0
 14494                           
 14495                           ; BSR set to: 0
 14496  003D9C  5169               	movf	___fltol@exp1& (0+255),w,b
 14497  003D9E  A4D8               	btfss	status,2,c
 14498  003DA0  D7F7               	goto	l2563
 14499  003DA2                     u7960:
 14500                           
 14501                           ; BSR set to: 0
 14502                           
 14503                           ; BSR set to: 0
 14504                           
 14505                           ; BSR set to: 0
 14506  003DA2  5168               	movf	___fltol@sign1& (0+255),w,b
 14507  003DA4  B4D8               	btfsc	status,2,c
 14508  003DA6  D008               	goto	l2565
 14509                           
 14510                           ; BSR set to: 0
 14511  003DA8  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 14512  003DAA  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 14513  003DAC  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 14514  003DAE  6D60               	negf	___fltol@f1& (0+255),b
 14515  003DB0  0E00               	movlw	0
 14516  003DB2  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 14517  003DB4  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 14518  003DB6  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 14519  003DB8                     l2565:
 14520                           
 14521                           ; BSR set to: 0
 14522                           
 14523                           ; BSR set to: 0
 14524  003DB8  C060  F060         	movff	___fltol@f1,?___fltol
 14525  003DBC  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 14526  003DC0  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 14527  003DC4  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 14528  003DC8  0012               	return	
 14529  003DCA                     __end_of___fltol:
 14530                           	opt stack 0
 14531                           tblptru	equ	0xFF8
 14532                           tblptrh	equ	0xFF7
 14533                           tblptrl	equ	0xFF6
 14534                           tablat	equ	0xFF5
 14535                           prodh	equ	0xFF4
 14536                           prodl	equ	0xFF3
 14537                           intcon	equ	0xFF2
 14538                           intcon3	equ	0xFF0
 14539                           postinc0	equ	0xFEE
 14540                           wreg	equ	0xFE8
 14541                           indf1	equ	0xFE7
 14542                           postdec1	equ	0xFE5
 14543                           fsr1h	equ	0xFE2
 14544                           fsr1l	equ	0xFE1
 14545                           indf2	equ	0xFDF
 14546                           fsr2h	equ	0xFDA
 14547                           fsr2l	equ	0xFD9
 14548                           status	equ	0xFD8
 14549                           
 14550 ;; *************** function ___flmul *****************
 14551 ;; Defined at:
 14552 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 14553 ;; Parameters:    Size  Location     Type
 14554 ;;  b               4   20[BANK0 ] long 
 14555 ;;  a               4   24[BANK0 ] long 
 14556 ;; Auto vars:     Size  Location     Type
 14557 ;;  prod            4   39[BANK0 ] struct .
 14558 ;;  grs             4   33[BANK0 ] unsigned long 
 14559 ;;  temp            2   43[BANK0 ] struct .
 14560 ;;  bexp            1   38[BANK0 ] unsigned char 
 14561 ;;  aexp            1   37[BANK0 ] unsigned char 
 14562 ;;  sign            1   32[BANK0 ] unsigned char 
 14563 ;; Return value:  Size  Location     Type
 14564 ;;                  4   20[BANK0 ] unsigned char 
 14565 ;; Registers used:
 14566 ;;		wreg, status,2, status,0, prodl, prodh
 14567 ;; Tracked objects:
 14568 ;;		On entry : 0/0
 14569 ;;		On exit  : 0/0
 14570 ;;		Unchanged: 0/0
 14571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14572 ;;      Params:         0       8       0       0       0       0       0       0       0
 14573 ;;      Locals:         0      13       0       0       0       0       0       0       0
 14574 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14575 ;;      Totals:         0      25       0       0       0       0       0       0       0
 14576 ;;Total ram usage:       25 bytes
 14577 ;; Hardware stack levels used:    1
 14578 ;; Hardware stack levels required when called:   11
 14579 ;; This function calls:
 14580 ;;		Nothing
 14581 ;; This function is called by:
 14582 ;;		_ADC_TempConversion
 14583 ;; This function uses a non-reentrant model
 14584 ;;
 14585                           
 14586                           	psect	text45
 14587  001968                     __ptext45:
 14588                           	opt stack 0
 14589  001968                     ___flmul:
 14590                           	opt stack 16
 14591                           
 14592                           ; BSR set to: 0
 14593                           ;incstack = 0
 14594  001968  0100               	movlb	0	; () banked
 14595  00196A  5177               	movf	(___flmul@b+3)& (0+255),w,b
 14596  00196C  0B80               	andlw	128
 14597  00196E  6F80               	movwf	___flmul@sign& (0+255),b
 14598  001970  5177               	movf	(___flmul@b+3)& (0+255),w,b
 14599  001972  2577               	addwf	(___flmul@b+3)& (0+255),w,b
 14600  001974  6F86               	movwf	___flmul@bexp& (0+255),b
 14601                           
 14602                           ; BSR set to: 0
 14603  001976  BF76               	btfsc	(___flmul@b+2)& (0+255),7,b
 14604                           
 14605                           ; BSR set to: 0
 14606  001978  8186               	bsf	___flmul@bexp& (0+255),0,b
 14607                           
 14608                           ; BSR set to: 0
 14609                           
 14610                           ; BSR set to: 0
 14611  00197A  5186               	movf	___flmul@bexp& (0+255),w,b
 14612  00197C  B4D8               	btfsc	status,2,c
 14613  00197E  D00D               	goto	l2856
 14614                           
 14615                           ; BSR set to: 0
 14616  001980  2986               	incf	___flmul@bexp& (0+255),w,b
 14617  001982  A4D8               	btfss	status,2,c
 14618  001984  D008               	goto	l2857
 14619                           
 14620                           ; BSR set to: 0
 14621  001986  0E00               	movlw	0
 14622  001988  6F74               	movwf	___flmul@b& (0+255),b
 14623  00198A  0E00               	movlw	0
 14624  00198C  6F75               	movwf	(___flmul@b+1)& (0+255),b
 14625  00198E  0E00               	movlw	0
 14626  001990  6F76               	movwf	(___flmul@b+2)& (0+255),b
 14627  001992  0E00               	movlw	0
 14628  001994  6F77               	movwf	(___flmul@b+3)& (0+255),b
 14629  001996                     l2857:
 14630                           
 14631                           ; BSR set to: 0
 14632                           
 14633                           ; BSR set to: 0
 14634  001996  8F76               	bsf	(___flmul@b+2)& (0+255),7,b
 14635  001998  D008               	goto	l2858
 14636  00199A                     l2856:
 14637                           
 14638                           ; BSR set to: 0
 14639                           
 14640                           ; BSR set to: 0
 14641  00199A  0E00               	movlw	0
 14642  00199C  6F74               	movwf	___flmul@b& (0+255),b
 14643  00199E  0E00               	movlw	0
 14644  0019A0  6F75               	movwf	(___flmul@b+1)& (0+255),b
 14645  0019A2  0E00               	movlw	0
 14646  0019A4  6F76               	movwf	(___flmul@b+2)& (0+255),b
 14647  0019A6  0E00               	movlw	0
 14648  0019A8  6F77               	movwf	(___flmul@b+3)& (0+255),b
 14649  0019AA                     l2858:
 14650                           
 14651                           ; BSR set to: 0
 14652                           
 14653                           ; BSR set to: 0
 14654  0019AA  517B               	movf	(___flmul@a+3)& (0+255),w,b
 14655  0019AC  0B80               	andlw	128
 14656  0019AE  1B80               	xorwf	___flmul@sign& (0+255),f,b
 14657                           
 14658                           ; BSR set to: 0
 14659  0019B0  517B               	movf	(___flmul@a+3)& (0+255),w,b
 14660  0019B2  257B               	addwf	(___flmul@a+3)& (0+255),w,b
 14661  0019B4  6F85               	movwf	___flmul@aexp& (0+255),b
 14662                           
 14663                           ; BSR set to: 0
 14664  0019B6  BF7A               	btfsc	(___flmul@a+2)& (0+255),7,b
 14665                           
 14666                           ; BSR set to: 0
 14667  0019B8  8185               	bsf	___flmul@aexp& (0+255),0,b
 14668                           
 14669                           ; BSR set to: 0
 14670                           
 14671                           ; BSR set to: 0
 14672  0019BA  5185               	movf	___flmul@aexp& (0+255),w,b
 14673  0019BC  B4D8               	btfsc	status,2,c
 14674  0019BE  D00D               	goto	l2860
 14675                           
 14676                           ; BSR set to: 0
 14677  0019C0  2985               	incf	___flmul@aexp& (0+255),w,b
 14678  0019C2  A4D8               	btfss	status,2,c
 14679  0019C4  D008               	goto	l2861
 14680                           
 14681                           ; BSR set to: 0
 14682  0019C6  0E00               	movlw	0
 14683  0019C8  6F78               	movwf	___flmul@a& (0+255),b
 14684  0019CA  0E00               	movlw	0
 14685  0019CC  6F79               	movwf	(___flmul@a+1)& (0+255),b
 14686  0019CE  0E00               	movlw	0
 14687  0019D0  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 14688  0019D2  0E00               	movlw	0
 14689  0019D4  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 14690  0019D6                     l2861:
 14691                           
 14692                           ; BSR set to: 0
 14693                           
 14694                           ; BSR set to: 0
 14695  0019D6  8F7A               	bsf	(___flmul@a+2)& (0+255),7,b
 14696  0019D8  D008               	goto	l2862
 14697  0019DA                     l2860:
 14698                           
 14699                           ; BSR set to: 0
 14700                           
 14701                           ; BSR set to: 0
 14702  0019DA  0E00               	movlw	0
 14703  0019DC  6F78               	movwf	___flmul@a& (0+255),b
 14704  0019DE  0E00               	movlw	0
 14705  0019E0  6F79               	movwf	(___flmul@a+1)& (0+255),b
 14706  0019E2  0E00               	movlw	0
 14707  0019E4  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 14708  0019E6  0E00               	movlw	0
 14709  0019E8  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 14710  0019EA                     l2862:
 14711                           
 14712                           ; BSR set to: 0
 14713  0019EA  5185               	movf	___flmul@aexp& (0+255),w,b
 14714  0019EC  B4D8               	btfsc	status,2,c
 14715  0019EE  D003               	goto	u7670
 14716                           
 14717                           ; BSR set to: 0
 14718  0019F0  5186               	movf	___flmul@bexp& (0+255),w,b
 14719  0019F2  A4D8               	btfss	status,2,c
 14720  0019F4  D009               	goto	l2863
 14721  0019F6                     u7670:
 14722                           
 14723                           ; BSR set to: 0
 14724                           
 14725                           ; BSR set to: 0
 14726  0019F6  0E00               	movlw	0
 14727  0019F8  6F74               	movwf	?___flmul& (0+255),b
 14728  0019FA  0E00               	movlw	0
 14729  0019FC  6F75               	movwf	(?___flmul+1)& (0+255),b
 14730  0019FE  0E00               	movlw	0
 14731  001A00  6F76               	movwf	(?___flmul+2)& (0+255),b
 14732  001A02  0E00               	movlw	0
 14733  001A04  6F77               	movwf	(?___flmul+3)& (0+255),b
 14734                           
 14735                           ; BSR set to: 0
 14736  001A06  0012               	return	
 14737  001A08                     l2863:
 14738                           
 14739                           ; BSR set to: 0
 14740                           
 14741                           ; BSR set to: 0
 14742  001A08  517A               	movf	(___flmul@a+2)& (0+255),w,b
 14743  001A0A  0374               	mulwf	___flmul@b& (0+255),b
 14744  001A0C  CFF3 F08B          	movff	prodl,___flmul@temp
 14745  001A10  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14746                           
 14747                           ; BSR set to: 0
 14748  001A14  518B               	movf	___flmul@temp& (0+255),w,b
 14749  001A16  6F81               	movwf	___flmul@grs& (0+255),b
 14750  001A18  6B82               	clrf	(___flmul@grs+1)& (0+255),b
 14751  001A1A  6B83               	clrf	(___flmul@grs+2)& (0+255),b
 14752  001A1C  6B84               	clrf	(___flmul@grs+3)& (0+255),b
 14753                           
 14754                           ; BSR set to: 0
 14755  001A1E  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14756  001A20  6F87               	movwf	___flmul@prod& (0+255),b
 14757  001A22  6B88               	clrf	(___flmul@prod+1)& (0+255),b
 14758  001A24  6B89               	clrf	(___flmul@prod+2)& (0+255),b
 14759  001A26  6B8A               	clrf	(___flmul@prod+3)& (0+255),b
 14760  001A28  5179               	movf	(___flmul@a+1)& (0+255),w,b
 14761  001A2A  0375               	mulwf	(___flmul@b+1)& (0+255),b
 14762  001A2C  CFF3 F08B          	movff	prodl,___flmul@temp
 14763  001A30  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14764                           
 14765                           ; BSR set to: 0
 14766  001A34  518B               	movf	___flmul@temp& (0+255),w,b
 14767  001A36  2781               	addwf	___flmul@grs& (0+255),f,b
 14768  001A38  0E00               	movlw	0
 14769  001A3A  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14770  001A3C  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14771  001A3E  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14772                           
 14773                           ; BSR set to: 0
 14774  001A40  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14775  001A42  2787               	addwf	___flmul@prod& (0+255),f,b
 14776  001A44  0E00               	movlw	0
 14777  001A46  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14778  001A48  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14779  001A4A  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14780  001A4C  5178               	movf	___flmul@a& (0+255),w,b
 14781  001A4E  0376               	mulwf	(___flmul@b+2)& (0+255),b
 14782  001A50  CFF3 F08B          	movff	prodl,___flmul@temp
 14783  001A54  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14784                           
 14785                           ; BSR set to: 0
 14786  001A58  518B               	movf	___flmul@temp& (0+255),w,b
 14787  001A5A  2781               	addwf	___flmul@grs& (0+255),f,b
 14788  001A5C  0E00               	movlw	0
 14789  001A5E  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14790  001A60  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14791  001A62  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14792                           
 14793                           ; BSR set to: 0
 14794  001A64  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14795  001A66  2787               	addwf	___flmul@prod& (0+255),f,b
 14796  001A68  0E00               	movlw	0
 14797  001A6A  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14798  001A6C  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14799  001A6E  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14800                           
 14801                           ; BSR set to: 0
 14802  001A70  C083  F084         	movff	___flmul@grs+2,___flmul@grs+3
 14803  001A74  C082  F083         	movff	___flmul@grs+1,___flmul@grs+2
 14804  001A78  C081  F082         	movff	___flmul@grs,___flmul@grs+1
 14805  001A7C  6B81               	clrf	___flmul@grs& (0+255),b
 14806                           
 14807                           ; BSR set to: 0
 14808  001A7E  5178               	movf	___flmul@a& (0+255),w,b
 14809  001A80  0375               	mulwf	(___flmul@b+1)& (0+255),b
 14810  001A82  CFF3 F08B          	movff	prodl,___flmul@temp
 14811  001A86  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14812                           
 14813                           ; BSR set to: 0
 14814  001A8A  518B               	movf	___flmul@temp& (0+255),w,b
 14815  001A8C  2781               	addwf	___flmul@grs& (0+255),f,b
 14816  001A8E  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14817  001A90  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14818  001A92  0E00               	movlw	0
 14819  001A94  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14820  001A96  0E00               	movlw	0
 14821  001A98  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14822                           
 14823                           ; BSR set to: 0
 14824  001A9A  5179               	movf	(___flmul@a+1)& (0+255),w,b
 14825  001A9C  0374               	mulwf	___flmul@b& (0+255),b
 14826  001A9E  CFF3 F08B          	movff	prodl,___flmul@temp
 14827  001AA2  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14828                           
 14829                           ; BSR set to: 0
 14830  001AA6  518B               	movf	___flmul@temp& (0+255),w,b
 14831  001AA8  2781               	addwf	___flmul@grs& (0+255),f,b
 14832  001AAA  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14833  001AAC  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14834  001AAE  0E00               	movlw	0
 14835  001AB0  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14836  001AB2  0E00               	movlw	0
 14837  001AB4  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14838                           
 14839                           ; BSR set to: 0
 14840  001AB6  C083  F084         	movff	___flmul@grs+2,___flmul@grs+3
 14841  001ABA  C082  F083         	movff	___flmul@grs+1,___flmul@grs+2
 14842  001ABE  C081  F082         	movff	___flmul@grs,___flmul@grs+1
 14843  001AC2  6B81               	clrf	___flmul@grs& (0+255),b
 14844  001AC4  5178               	movf	___flmul@a& (0+255),w,b
 14845  001AC6  0374               	mulwf	___flmul@b& (0+255),b
 14846  001AC8  CFF3 F08B          	movff	prodl,___flmul@temp
 14847  001ACC  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14848                           
 14849                           ; BSR set to: 0
 14850  001AD0  518B               	movf	___flmul@temp& (0+255),w,b
 14851  001AD2  2781               	addwf	___flmul@grs& (0+255),f,b
 14852  001AD4  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14853  001AD6  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14854  001AD8  0E00               	movlw	0
 14855  001ADA  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14856  001ADC  0E00               	movlw	0
 14857  001ADE  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14858                           
 14859                           ; BSR set to: 0
 14860  001AE0  517A               	movf	(___flmul@a+2)& (0+255),w,b
 14861  001AE2  0375               	mulwf	(___flmul@b+1)& (0+255),b
 14862  001AE4  CFF3 F08B          	movff	prodl,___flmul@temp
 14863  001AE8  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14864  001AEC  518B               	movf	___flmul@temp& (0+255),w,b
 14865  001AEE  2787               	addwf	___flmul@prod& (0+255),f,b
 14866  001AF0  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14867  001AF2  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14868  001AF4  0E00               	movlw	0
 14869  001AF6  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14870  001AF8  0E00               	movlw	0
 14871  001AFA  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14872                           
 14873                           ; BSR set to: 0
 14874  001AFC  5179               	movf	(___flmul@a+1)& (0+255),w,b
 14875  001AFE  0376               	mulwf	(___flmul@b+2)& (0+255),b
 14876  001B00  CFF3 F08B          	movff	prodl,___flmul@temp
 14877  001B04  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14878                           
 14879                           ; BSR set to: 0
 14880  001B08  518B               	movf	___flmul@temp& (0+255),w,b
 14881  001B0A  2787               	addwf	___flmul@prod& (0+255),f,b
 14882  001B0C  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14883  001B0E  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14884  001B10  0E00               	movlw	0
 14885  001B12  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14886  001B14  0E00               	movlw	0
 14887  001B16  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14888  001B18  517A               	movf	(___flmul@a+2)& (0+255),w,b
 14889  001B1A  0376               	mulwf	(___flmul@b+2)& (0+255),b
 14890  001B1C  CFF3 F08B          	movff	prodl,___flmul@temp
 14891  001B20  CFF4 F08C          	movff	prodh,___flmul@temp+1
 14892                           
 14893                           ; BSR set to: 0
 14894  001B24  518B               	movf	___flmul@temp& (0+255),w,b
 14895  001B26  6F7C               	movwf	??___flmul& (0+255),b
 14896  001B28  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 14897  001B2A  6F7D               	movwf	(??___flmul+1)& (0+255),b
 14898  001B2C  6B7E               	clrf	(??___flmul+2)& (0+255),b
 14899  001B2E  6B7F               	clrf	(??___flmul+3)& (0+255),b
 14900  001B30  C07E  F07F         	movff	??___flmul+2,??___flmul+3
 14901  001B34  C07D  F07E         	movff	??___flmul+1,??___flmul+2
 14902  001B38  C07C  F07D         	movff	??___flmul,??___flmul+1
 14903  001B3C  6B7C               	clrf	??___flmul& (0+255),b
 14904  001B3E  517C               	movf	??___flmul& (0+255),w,b
 14905  001B40  2787               	addwf	___flmul@prod& (0+255),f,b
 14906  001B42  517D               	movf	(??___flmul+1)& (0+255),w,b
 14907  001B44  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14908  001B46  517E               	movf	(??___flmul+2)& (0+255),w,b
 14909  001B48  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14910  001B4A  517F               	movf	(??___flmul+3)& (0+255),w,b
 14911  001B4C  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14912                           
 14913                           ; BSR set to: 0
 14914  001B4E  C081  F07C         	movff	___flmul@grs,??___flmul
 14915  001B52  C082  F07D         	movff	___flmul@grs+1,??___flmul+1
 14916  001B56  C083  F07E         	movff	___flmul@grs+2,??___flmul+2
 14917  001B5A  C084  F07F         	movff	___flmul@grs+3,??___flmul+3
 14918  001B5E  0E19               	movlw	25
 14919  001B60  D005               	goto	u7680
 14920  001B62                     u7685:
 14921  001B62  90D8               	bcf	status,0,c
 14922  001B64  337F               	rrcf	(??___flmul+3)& (0+255),f,b
 14923  001B66  337E               	rrcf	(??___flmul+2)& (0+255),f,b
 14924  001B68  337D               	rrcf	(??___flmul+1)& (0+255),f,b
 14925  001B6A  337C               	rrcf	??___flmul& (0+255),f,b
 14926  001B6C                     u7680:
 14927  001B6C  2EE8               	decfsz	wreg,f,c
 14928  001B6E  D7F9               	goto	u7685
 14929  001B70  517C               	movf	??___flmul& (0+255),w,b
 14930  001B72  2787               	addwf	___flmul@prod& (0+255),f,b
 14931  001B74  517D               	movf	(??___flmul+1)& (0+255),w,b
 14932  001B76  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14933  001B78  517E               	movf	(??___flmul+2)& (0+255),w,b
 14934  001B7A  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14935  001B7C  517F               	movf	(??___flmul+3)& (0+255),w,b
 14936  001B7E  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14937                           
 14938                           ; BSR set to: 0
 14939  001B80  C083  F084         	movff	___flmul@grs+2,___flmul@grs+3
 14940  001B84  C082  F083         	movff	___flmul@grs+1,___flmul@grs+2
 14941  001B88  C081  F082         	movff	___flmul@grs,___flmul@grs+1
 14942  001B8C  6B81               	clrf	___flmul@grs& (0+255),b
 14943                           
 14944                           ; BSR set to: 0
 14945  001B8E  5185               	movf	___flmul@aexp& (0+255),w,b
 14946  001B90  C086  F07C         	movff	___flmul@bexp,??___flmul
 14947  001B94  6B7D               	clrf	(??___flmul+1)& (0+255),b
 14948  001B96  277C               	addwf	??___flmul& (0+255),f,b
 14949  001B98  0E00               	movlw	0
 14950  001B9A  237D               	addwfc	(??___flmul+1)& (0+255),f,b
 14951  001B9C  0E82               	movlw	130
 14952  001B9E  257C               	addwf	??___flmul& (0+255),w,b
 14953  001BA0  6F8B               	movwf	___flmul@temp& (0+255),b
 14954  001BA2  0EFF               	movlw	255
 14955  001BA4  217D               	addwfc	(??___flmul+1)& (0+255),w,b
 14956  001BA6  6F8C               	movwf	(___flmul@temp+1)& (0+255),b
 14957  001BA8  D00F               	goto	l2867
 14958  001BAA                     
 14959                           ; BSR set to: 0
 14960                           
 14961                           ; BSR set to: 0
 14962  001BAA  90D8               	bcf	status,0,c
 14963  001BAC  3787               	rlcf	___flmul@prod& (0+255),f,b
 14964  001BAE  3788               	rlcf	(___flmul@prod+1)& (0+255),f,b
 14965  001BB0  3789               	rlcf	(___flmul@prod+2)& (0+255),f,b
 14966  001BB2  378A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 14967                           
 14968                           ; BSR set to: 0
 14969  001BB4  BF84               	btfsc	(___flmul@grs+3)& (0+255),7,b
 14970                           
 14971                           ; BSR set to: 0
 14972  001BB6  8187               	bsf	___flmul@prod& (0+255),0,b
 14973                           
 14974                           ; BSR set to: 0
 14975  001BB8  90D8               	bcf	status,0,c
 14976  001BBA  3781               	rlcf	___flmul@grs& (0+255),f,b
 14977  001BBC  3782               	rlcf	(___flmul@grs+1)& (0+255),f,b
 14978  001BBE  3783               	rlcf	(___flmul@grs+2)& (0+255),f,b
 14979  001BC0  3784               	rlcf	(___flmul@grs+3)& (0+255),f,b
 14980  001BC2  078B               	decf	___flmul@temp& (0+255),f,b
 14981  001BC4  A0D8               	btfss	status,0,c
 14982  001BC6  078C               	decf	(___flmul@temp+1)& (0+255),f,b
 14983  001BC8                     l2867:
 14984                           
 14985                           ; BSR set to: 0
 14986                           
 14987                           ; BSR set to: 0
 14988  001BC8  AF89               	btfss	(___flmul@prod+2)& (0+255),7,b
 14989  001BCA  D7EF               	goto	l2868
 14990                           
 14991                           ; BSR set to: 0
 14992                           
 14993                           ; BSR set to: 0
 14994  001BCC  0E00               	movlw	0
 14995  001BCE  6F85               	movwf	___flmul@aexp& (0+255),b
 14996                           
 14997                           ; BSR set to: 0
 14998  001BD0  AF84               	btfss	(___flmul@grs+3)& (0+255),7,b
 14999  001BD2  D016               	goto	l2874
 15000                           
 15001                           ; BSR set to: 0
 15002  001BD4  0EFF               	movlw	255
 15003  001BD6  1581               	andwf	___flmul@grs& (0+255),w,b
 15004  001BD8  6F7C               	movwf	??___flmul& (0+255),b
 15005  001BDA  0EFF               	movlw	255
 15006  001BDC  1582               	andwf	(___flmul@grs+1)& (0+255),w,b
 15007  001BDE  6F7D               	movwf	(??___flmul+1)& (0+255),b
 15008  001BE0  0EFF               	movlw	255
 15009  001BE2  1583               	andwf	(___flmul@grs+2)& (0+255),w,b
 15010  001BE4  6F7E               	movwf	(??___flmul+2)& (0+255),b
 15011  001BE6  0E7F               	movlw	127
 15012  001BE8  1584               	andwf	(___flmul@grs+3)& (0+255),w,b
 15013  001BEA  6F7F               	movwf	(??___flmul+3)& (0+255),b
 15014  001BEC  517C               	movf	??___flmul& (0+255),w,b
 15015  001BEE  117D               	iorwf	(??___flmul+1)& (0+255),w,b
 15016  001BF0  117E               	iorwf	(??___flmul+2)& (0+255),w,b
 15017  001BF2  117F               	iorwf	(??___flmul+3)& (0+255),w,b
 15018  001BF4  A4D8               	btfss	status,2,c
 15019  001BF6  D002               	goto	u7730
 15020                           
 15021                           ; BSR set to: 0
 15022                           
 15023                           ; BSR set to: 0
 15024  001BF8  A187               	btfss	___flmul@prod& (0+255),0,b
 15025  001BFA  D002               	goto	l2874
 15026  001BFC                     u7730:
 15027                           
 15028                           ; BSR set to: 0
 15029  001BFC  0E01               	movlw	1
 15030  001BFE  6F85               	movwf	___flmul@aexp& (0+255),b
 15031  001C00                     l2874:
 15032                           
 15033                           ; BSR set to: 0
 15034                           
 15035                           ; BSR set to: 0
 15036                           
 15037                           ; BSR set to: 0
 15038  001C00  5185               	movf	___flmul@aexp& (0+255),w,b
 15039  001C02  B4D8               	btfsc	status,2,c
 15040  001C04  D01F               	goto	l2876
 15041                           
 15042                           ; BSR set to: 0
 15043  001C06  0E01               	movlw	1
 15044  001C08  2787               	addwf	___flmul@prod& (0+255),f,b
 15045  001C0A  0E00               	movlw	0
 15046  001C0C  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15047  001C0E  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15048  001C10  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15049                           
 15050                           ; BSR set to: 0
 15051  001C12  A18A               	btfss	(___flmul@prod+3)& (0+255),0,b
 15052  001C14  D017               	goto	l2876
 15053                           
 15054                           ; BSR set to: 0
 15055  001C16  C087  F07C         	movff	___flmul@prod,??___flmul
 15056  001C1A  C088  F07D         	movff	___flmul@prod+1,??___flmul+1
 15057  001C1E  C089  F07E         	movff	___flmul@prod+2,??___flmul+2
 15058  001C22  C08A  F07F         	movff	___flmul@prod+3,??___flmul+3
 15059  001C26  357F               	rlcf	(??___flmul+3)& (0+255),w,b
 15060  001C28  337F               	rrcf	(??___flmul+3)& (0+255),f,b
 15061  001C2A  337E               	rrcf	(??___flmul+2)& (0+255),f,b
 15062  001C2C  337D               	rrcf	(??___flmul+1)& (0+255),f,b
 15063  001C2E  337C               	rrcf	??___flmul& (0+255),f,b
 15064  001C30  C07C  F087         	movff	??___flmul,___flmul@prod
 15065  001C34  C07D  F088         	movff	??___flmul+1,___flmul@prod+1
 15066  001C38  C07E  F089         	movff	??___flmul+2,___flmul@prod+2
 15067  001C3C  C07F  F08A         	movff	??___flmul+3,___flmul@prod+3
 15068                           
 15069                           ; BSR set to: 0
 15070  001C40  4B8B               	infsnz	___flmul@temp& (0+255),f,b
 15071  001C42  2B8C               	incf	(___flmul@temp+1)& (0+255),f,b
 15072  001C44                     l2876:
 15073                           
 15074                           ; BSR set to: 0
 15075                           
 15076                           ; BSR set to: 0
 15077                           
 15078                           ; BSR set to: 0
 15079  001C44  BF8C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 15080  001C46  D00D               	goto	l2877
 15081  001C48  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 15082  001C4A  E103               	bnz	u7760
 15083  001C4C  298B               	incf	___flmul@temp& (0+255),w,b
 15084  001C4E  A0D8               	btfss	status,0,c
 15085  001C50  D008               	goto	l2877
 15086  001C52                     u7760:
 15087                           
 15088                           ; BSR set to: 0
 15089  001C52  0E00               	movlw	0
 15090  001C54  6F87               	movwf	___flmul@prod& (0+255),b
 15091  001C56  0E00               	movlw	0
 15092  001C58  6F88               	movwf	(___flmul@prod+1)& (0+255),b
 15093  001C5A  0E80               	movlw	128
 15094  001C5C  6F89               	movwf	(___flmul@prod+2)& (0+255),b
 15095  001C5E  0E7F               	movlw	127
 15096  001C60  D020               	goto	L7
 15097  001C62                     l2877:
 15098                           
 15099                           ; BSR set to: 0
 15100                           
 15101                           ; BSR set to: 0
 15102  001C62  BF8C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 15103  001C64  D005               	goto	u7770
 15104  001C66  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 15105  001C68  E10E               	bnz	l2879
 15106  001C6A  058B               	decf	___flmul@temp& (0+255),w,b
 15107  001C6C  B0D8               	btfsc	status,0,c
 15108  001C6E  D00B               	goto	l2879
 15109  001C70                     u7770:
 15110                           
 15111                           ; BSR set to: 0
 15112  001C70  0E00               	movlw	0
 15113  001C72  6F87               	movwf	___flmul@prod& (0+255),b
 15114  001C74  0E00               	movlw	0
 15115  001C76  6F88               	movwf	(___flmul@prod+1)& (0+255),b
 15116  001C78  0E00               	movlw	0
 15117  001C7A  6F89               	movwf	(___flmul@prod+2)& (0+255),b
 15118  001C7C  0E00               	movlw	0
 15119  001C7E  6F8A               	movwf	(___flmul@prod+3)& (0+255),b
 15120  001C80  0E00               	movlw	0
 15121  001C82  6F80               	movwf	___flmul@sign& (0+255),b
 15122  001C84  D00F               	goto	l2880
 15123  001C86                     l2879:
 15124                           
 15125                           ; BSR set to: 0
 15126  001C86  C08B  F086         	movff	___flmul@temp,___flmul@bexp
 15127                           
 15128                           ; BSR set to: 0
 15129  001C8A  0EFF               	movlw	255
 15130  001C8C  1787               	andwf	___flmul@prod& (0+255),f,b
 15131  001C8E  0EFF               	movlw	255
 15132  001C90  1788               	andwf	(___flmul@prod+1)& (0+255),f,b
 15133  001C92  0E7F               	movlw	127
 15134  001C94  1789               	andwf	(___flmul@prod+2)& (0+255),f,b
 15135  001C96  0E00               	movlw	0
 15136  001C98  178A               	andwf	(___flmul@prod+3)& (0+255),f,b
 15137                           
 15138                           ; BSR set to: 0
 15139  001C9A  B186               	btfsc	___flmul@bexp& (0+255),0,b
 15140                           
 15141                           ; BSR set to: 0
 15142  001C9C  8F89               	bsf	(___flmul@prod+2)& (0+255),7,b
 15143                           
 15144                           ; BSR set to: 0
 15145                           
 15146                           ; BSR set to: 0
 15147  001C9E  90D8               	bcf	status,0,c
 15148  001CA0  3186               	rrcf	___flmul@bexp& (0+255),w,b
 15149  001CA2                     L7:
 15150  001CA2  6F8A               	movwf	(___flmul@prod+3)& (0+255),b
 15151  001CA4                     l2880:
 15152                           
 15153                           ; BSR set to: 0
 15154                           
 15155                           ; BSR set to: 0
 15156                           
 15157                           ; BSR set to: 0
 15158  001CA4  5180               	movf	___flmul@sign& (0+255),w,b
 15159  001CA6  138A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 15160                           
 15161                           ; BSR set to: 0
 15162  001CA8  C087  F074         	movff	___flmul@prod,?___flmul
 15163  001CAC  C088  F075         	movff	___flmul@prod+1,?___flmul+1
 15164  001CB0  C089  F076         	movff	___flmul@prod+2,?___flmul+2
 15165  001CB4  C08A  F077         	movff	___flmul@prod+3,?___flmul+3
 15166  001CB8  0012               	return	
 15167  001CBA                     __end_of___flmul:
 15168                           	opt stack 0
 15169                           tblptru	equ	0xFF8
 15170                           tblptrh	equ	0xFF7
 15171                           tblptrl	equ	0xFF6
 15172                           tablat	equ	0xFF5
 15173                           prodh	equ	0xFF4
 15174                           prodl	equ	0xFF3
 15175                           intcon	equ	0xFF2
 15176                           intcon3	equ	0xFF0
 15177                           postinc0	equ	0xFEE
 15178                           wreg	equ	0xFE8
 15179                           indf1	equ	0xFE7
 15180                           postdec1	equ	0xFE5
 15181                           fsr1h	equ	0xFE2
 15182                           fsr1l	equ	0xFE1
 15183                           indf2	equ	0xFDF
 15184                           fsr2h	equ	0xFDA
 15185                           fsr2l	equ	0xFD9
 15186                           status	equ	0xFD8
 15187                           
 15188 ;; *************** function ___fldiv *****************
 15189 ;; Defined at:
 15190 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 15191 ;; Parameters:    Size  Location     Type
 15192 ;;  b               4   45[BANK0 ] unsigned char 
 15193 ;;  a               4   49[BANK0 ] unsigned char 
 15194 ;; Auto vars:     Size  Location     Type
 15195 ;;  grs             4   64[BANK0 ] unsigned long 
 15196 ;;  rem             4   58[BANK0 ] unsigned long 
 15197 ;;  new_exp         2   62[BANK0 ] int 
 15198 ;;  aexp            1   69[BANK0 ] unsigned char 
 15199 ;;  bexp            1   68[BANK0 ] unsigned char 
 15200 ;;  sign            1   57[BANK0 ] unsigned char 
 15201 ;; Return value:  Size  Location     Type
 15202 ;;                  4   45[BANK0 ] unsigned char 
 15203 ;; Registers used:
 15204 ;;		wreg, status,2, status,0
 15205 ;; Tracked objects:
 15206 ;;		On entry : 0/0
 15207 ;;		On exit  : 0/0
 15208 ;;		Unchanged: 0/0
 15209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15210 ;;      Params:         0       8       0       0       0       0       0       0       0
 15211 ;;      Locals:         0      13       0       0       0       0       0       0       0
 15212 ;;      Temps:          0       4       0       0       0       0       0       0       0
 15213 ;;      Totals:         0      25       0       0       0       0       0       0       0
 15214 ;;Total ram usage:       25 bytes
 15215 ;; Hardware stack levels used:    1
 15216 ;; Hardware stack levels required when called:   11
 15217 ;; This function calls:
 15218 ;;		Nothing
 15219 ;; This function is called by:
 15220 ;;		_ADC_TempConversion
 15221 ;; This function uses a non-reentrant model
 15222 ;;
 15223                           
 15224                           	psect	text46
 15225  001FF8                     __ptext46:
 15226                           	opt stack 0
 15227  001FF8                     ___fldiv:
 15228                           	opt stack 16
 15229                           
 15230                           ; BSR set to: 0
 15231                           ;incstack = 0
 15232  001FF8  0100               	movlb	0	; () banked
 15233  001FFA  5190               	movf	(___fldiv@b+3)& (0+255),w,b
 15234  001FFC  0B80               	andlw	128
 15235  001FFE  6F99               	movwf	___fldiv@sign& (0+255),b
 15236  002000  5190               	movf	(___fldiv@b+3)& (0+255),w,b
 15237  002002  2590               	addwf	(___fldiv@b+3)& (0+255),w,b
 15238  002004  6FA4               	movwf	___fldiv@bexp& (0+255),b
 15239                           
 15240                           ; BSR set to: 0
 15241  002006  BF8F               	btfsc	(___fldiv@b+2)& (0+255),7,b
 15242                           
 15243                           ; BSR set to: 0
 15244  002008  81A4               	bsf	___fldiv@bexp& (0+255),0,b
 15245                           
 15246                           ; BSR set to: 0
 15247                           
 15248                           ; BSR set to: 0
 15249  00200A  51A4               	movf	___fldiv@bexp& (0+255),w,b
 15250  00200C  B4D8               	btfsc	status,2,c
 15251  00200E  D00D               	goto	l2822
 15252                           
 15253                           ; BSR set to: 0
 15254  002010  29A4               	incf	___fldiv@bexp& (0+255),w,b
 15255  002012  A4D8               	btfss	status,2,c
 15256  002014  D008               	goto	l2823
 15257                           
 15258                           ; BSR set to: 0
 15259  002016  0E00               	movlw	0
 15260  002018  6F8D               	movwf	___fldiv@b& (0+255),b
 15261  00201A  0E00               	movlw	0
 15262  00201C  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15263  00201E  0E00               	movlw	0
 15264  002020  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15265  002022  0E00               	movlw	0
 15266  002024  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15267  002026                     l2823:
 15268                           
 15269                           ; BSR set to: 0
 15270                           
 15271                           ; BSR set to: 0
 15272  002026  8F8F               	bsf	(___fldiv@b+2)& (0+255),7,b
 15273  002028  D006               	goto	L8
 15274  00202A                     l2822:
 15275                           
 15276                           ; BSR set to: 0
 15277                           
 15278                           ; BSR set to: 0
 15279  00202A  0E00               	movlw	0
 15280  00202C  6F8D               	movwf	___fldiv@b& (0+255),b
 15281  00202E  0E00               	movlw	0
 15282  002030  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15283  002032  0E00               	movlw	0
 15284  002034  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15285  002036                     L8:
 15286  002036  0E00               	movlw	0
 15287  002038  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15288                           
 15289                           ; BSR set to: 0
 15290                           
 15291                           ; BSR set to: 0
 15292  00203A  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 15293  00203C  0B80               	andlw	128
 15294  00203E  1B99               	xorwf	___fldiv@sign& (0+255),f,b
 15295                           
 15296                           ; BSR set to: 0
 15297  002040  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 15298  002042  2594               	addwf	(___fldiv@a+3)& (0+255),w,b
 15299  002044  6FA5               	movwf	___fldiv@aexp& (0+255),b
 15300                           
 15301                           ; BSR set to: 0
 15302  002046  BF93               	btfsc	(___fldiv@a+2)& (0+255),7,b
 15303                           
 15304                           ; BSR set to: 0
 15305  002048  81A5               	bsf	___fldiv@aexp& (0+255),0,b
 15306                           
 15307                           ; BSR set to: 0
 15308                           
 15309                           ; BSR set to: 0
 15310  00204A  51A5               	movf	___fldiv@aexp& (0+255),w,b
 15311  00204C  B4D8               	btfsc	status,2,c
 15312  00204E  D00D               	goto	l2826
 15313                           
 15314                           ; BSR set to: 0
 15315  002050  29A5               	incf	___fldiv@aexp& (0+255),w,b
 15316  002052  A4D8               	btfss	status,2,c
 15317  002054  D008               	goto	l2827
 15318                           
 15319                           ; BSR set to: 0
 15320  002056  0E00               	movlw	0
 15321  002058  6F91               	movwf	___fldiv@a& (0+255),b
 15322  00205A  0E00               	movlw	0
 15323  00205C  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 15324  00205E  0E00               	movlw	0
 15325  002060  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 15326  002062  0E00               	movlw	0
 15327  002064  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 15328  002066                     l2827:
 15329                           
 15330                           ; BSR set to: 0
 15331                           
 15332                           ; BSR set to: 0
 15333  002066  8F93               	bsf	(___fldiv@a+2)& (0+255),7,b
 15334  002068  D006               	goto	L9
 15335  00206A                     l2826:
 15336                           
 15337                           ; BSR set to: 0
 15338                           
 15339                           ; BSR set to: 0
 15340  00206A  0E00               	movlw	0
 15341  00206C  6F91               	movwf	___fldiv@a& (0+255),b
 15342  00206E  0E00               	movlw	0
 15343  002070  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 15344  002072  0E00               	movlw	0
 15345  002074  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 15346  002076                     L9:
 15347  002076  0E00               	movlw	0
 15348  002078  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 15349                           
 15350                           ; BSR set to: 0
 15351                           
 15352                           ; BSR set to: 0
 15353  00207A  5191               	movf	___fldiv@a& (0+255),w,b
 15354  00207C  1192               	iorwf	(___fldiv@a+1)& (0+255),w,b
 15355  00207E  1193               	iorwf	(___fldiv@a+2)& (0+255),w,b
 15356  002080  1194               	iorwf	(___fldiv@a+3)& (0+255),w,b
 15357  002082  A4D8               	btfss	status,2,c
 15358  002084  D015               	goto	l2829
 15359                           
 15360                           ; BSR set to: 0
 15361  002086  0E00               	movlw	0
 15362  002088  6F8D               	movwf	___fldiv@b& (0+255),b
 15363  00208A  0E00               	movlw	0
 15364  00208C  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15365  00208E  0E00               	movlw	0
 15366  002090  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15367  002092  0E00               	movlw	0
 15368  002094  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15369                           
 15370                           ; BSR set to: 0
 15371  002096  0E80               	movlw	128
 15372  002098  138F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 15373  00209A  0E7F               	movlw	127
 15374  00209C  1390               	iorwf	(___fldiv@b+3)& (0+255),f,b
 15375                           
 15376                           ; BSR set to: 0
 15377  00209E  C08D  F08D         	movff	___fldiv@b,?___fldiv
 15378  0020A2  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 15379  0020A6  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 15380  0020AA  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 15381                           
 15382                           ; BSR set to: 0
 15383  0020AE  0012               	return	
 15384  0020B0                     l2829:
 15385                           
 15386                           ; BSR set to: 0
 15387                           
 15388                           ; BSR set to: 0
 15389  0020B0  51A4               	movf	___fldiv@bexp& (0+255),w,b
 15390  0020B2  A4D8               	btfss	status,2,c
 15391  0020B4  D011               	goto	l2831
 15392                           
 15393                           ; BSR set to: 0
 15394  0020B6  0E00               	movlw	0
 15395  0020B8  6F8D               	movwf	___fldiv@b& (0+255),b
 15396  0020BA  0E00               	movlw	0
 15397  0020BC  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15398  0020BE  0E00               	movlw	0
 15399  0020C0  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15400  0020C2  0E00               	movlw	0
 15401  0020C4  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15402                           
 15403                           ; BSR set to: 0
 15404  0020C6  C08D  F08D         	movff	___fldiv@b,?___fldiv
 15405  0020CA  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 15406  0020CE  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 15407  0020D2  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 15408                           
 15409                           ; BSR set to: 0
 15410  0020D6  0012               	return	
 15411  0020D8                     l2831:
 15412                           
 15413                           ; BSR set to: 0
 15414                           
 15415                           ; BSR set to: 0
 15416  0020D8  51A5               	movf	___fldiv@aexp& (0+255),w,b
 15417  0020DA  6F95               	movwf	??___fldiv& (0+255),b
 15418  0020DC  6B96               	clrf	(??___fldiv+1)& (0+255),b
 15419  0020DE  1F95               	comf	??___fldiv& (0+255),f,b
 15420  0020E0  1F96               	comf	(??___fldiv+1)& (0+255),f,b
 15421  0020E2  4B95               	infsnz	??___fldiv& (0+255),f,b
 15422  0020E4  2B96               	incf	(??___fldiv+1)& (0+255),f,b
 15423  0020E6  51A4               	movf	___fldiv@bexp& (0+255),w,b
 15424  0020E8  6F97               	movwf	(??___fldiv+2)& (0+255),b
 15425  0020EA  6B98               	clrf	(??___fldiv+3)& (0+255),b
 15426  0020EC  5195               	movf	??___fldiv& (0+255),w,b
 15427  0020EE  2797               	addwf	(??___fldiv+2)& (0+255),f,b
 15428  0020F0  5196               	movf	(??___fldiv+1)& (0+255),w,b
 15429  0020F2  2398               	addwfc	(??___fldiv+3)& (0+255),f,b
 15430  0020F4  0E7F               	movlw	127
 15431  0020F6  2597               	addwf	(??___fldiv+2)& (0+255),w,b
 15432  0020F8  6F9E               	movwf	___fldiv@new_exp& (0+255),b
 15433  0020FA  0E00               	movlw	0
 15434  0020FC  2198               	addwfc	(??___fldiv+3)& (0+255),w,b
 15435  0020FE  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15436                           
 15437                           ; BSR set to: 0
 15438  002100  C08D  F09A         	movff	___fldiv@b,___fldiv@rem
 15439  002104  C08E  F09B         	movff	___fldiv@b+1,___fldiv@rem+1
 15440  002108  C08F  F09C         	movff	___fldiv@b+2,___fldiv@rem+2
 15441  00210C  C090  F09D         	movff	___fldiv@b+3,___fldiv@rem+3
 15442                           
 15443                           ; BSR set to: 0
 15444  002110  0E00               	movlw	0
 15445  002112  6F8D               	movwf	___fldiv@b& (0+255),b
 15446  002114  0E00               	movlw	0
 15447  002116  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15448  002118  0E00               	movlw	0
 15449  00211A  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15450  00211C  0E00               	movlw	0
 15451  00211E  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15452                           
 15453                           ; BSR set to: 0
 15454  002120  0E00               	movlw	0
 15455  002122  6FA0               	movwf	___fldiv@grs& (0+255),b
 15456  002124  0E00               	movlw	0
 15457  002126  6FA1               	movwf	(___fldiv@grs+1)& (0+255),b
 15458  002128  0E00               	movlw	0
 15459  00212A  6FA2               	movwf	(___fldiv@grs+2)& (0+255),b
 15460  00212C  0E00               	movlw	0
 15461  00212E  6FA3               	movwf	(___fldiv@grs+3)& (0+255),b
 15462                           
 15463                           ; BSR set to: 0
 15464  002130  0E00               	movlw	0
 15465  002132  6FA5               	movwf	___fldiv@aexp& (0+255),b
 15466  002134  D028               	goto	l2832
 15467  002136                     
 15468                           ; BSR set to: 0
 15469                           
 15470                           ; BSR set to: 0
 15471  002136  51A5               	movf	___fldiv@aexp& (0+255),w,b
 15472  002138  B4D8               	btfsc	status,2,c
 15473  00213A  D011               	goto	l2834
 15474                           
 15475                           ; BSR set to: 0
 15476  00213C  90D8               	bcf	status,0,c
 15477  00213E  379A               	rlcf	___fldiv@rem& (0+255),f,b
 15478  002140  379B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 15479  002142  379C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 15480  002144  379D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 15481  002146  90D8               	bcf	status,0,c
 15482  002148  378D               	rlcf	___fldiv@b& (0+255),f,b
 15483  00214A  378E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 15484  00214C  378F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 15485  00214E  3790               	rlcf	(___fldiv@b+3)& (0+255),f,b
 15486                           
 15487                           ; BSR set to: 0
 15488  002150  BFA3               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 15489                           
 15490                           ; BSR set to: 0
 15491  002152  818D               	bsf	___fldiv@b& (0+255),0,b
 15492                           
 15493                           ; BSR set to: 0
 15494  002154  90D8               	bcf	status,0,c
 15495  002156  37A0               	rlcf	___fldiv@grs& (0+255),f,b
 15496  002158  37A1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 15497  00215A  37A2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 15498  00215C  37A3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 15499  00215E                     l2834:
 15500                           
 15501                           ; BSR set to: 0
 15502                           
 15503                           ; BSR set to: 0
 15504  00215E  5191               	movf	___fldiv@a& (0+255),w,b
 15505  002160  5D9A               	subwf	___fldiv@rem& (0+255),w,b
 15506  002162  5192               	movf	(___fldiv@a+1)& (0+255),w,b
 15507  002164  599B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 15508  002166  5193               	movf	(___fldiv@a+2)& (0+255),w,b
 15509  002168  599C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 15510  00216A  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 15511  00216C  599D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 15512  00216E  A0D8               	btfss	status,0,c
 15513  002170  D009               	goto	l2836
 15514                           
 15515                           ; BSR set to: 0
 15516  002172  8DA3               	bsf	(___fldiv@grs+3)& (0+255),6,b
 15517                           
 15518                           ; BSR set to: 0
 15519  002174  5191               	movf	___fldiv@a& (0+255),w,b
 15520  002176  5F9A               	subwf	___fldiv@rem& (0+255),f,b
 15521  002178  5192               	movf	(___fldiv@a+1)& (0+255),w,b
 15522  00217A  5B9B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 15523  00217C  5193               	movf	(___fldiv@a+2)& (0+255),w,b
 15524  00217E  5B9C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 15525  002180  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 15526  002182  5B9D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 15527  002184                     l2836:
 15528                           
 15529                           ; BSR set to: 0
 15530                           
 15531                           ; BSR set to: 0
 15532  002184  2BA5               	incf	___fldiv@aexp& (0+255),f,b
 15533  002186                     l2832:
 15534                           
 15535                           ; BSR set to: 0
 15536  002186  0E19               	movlw	25
 15537  002188  65A5               	cpfsgt	___fldiv@aexp& (0+255),b
 15538  00218A  D7D5               	goto	l2833
 15539                           
 15540                           ; BSR set to: 0
 15541                           
 15542                           ; BSR set to: 0
 15543  00218C  519A               	movf	___fldiv@rem& (0+255),w,b
 15544  00218E  119B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 15545  002190  119C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 15546  002192  119D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 15547  002194  B4D8               	btfsc	status,2,c
 15548  002196  D011               	goto	l2839
 15549                           
 15550                           ; BSR set to: 0
 15551  002198  81A0               	bsf	___fldiv@grs& (0+255),0,b
 15552                           
 15553                           ; BSR set to: 0
 15554  00219A  D00F               	goto	l2839
 15555  00219C                     
 15556                           ; BSR set to: 0
 15557                           
 15558                           ; BSR set to: 0
 15559  00219C  90D8               	bcf	status,0,c
 15560  00219E  378D               	rlcf	___fldiv@b& (0+255),f,b
 15561  0021A0  378E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 15562  0021A2  378F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 15563  0021A4  3790               	rlcf	(___fldiv@b+3)& (0+255),f,b
 15564                           
 15565                           ; BSR set to: 0
 15566  0021A6  BFA3               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 15567                           
 15568                           ; BSR set to: 0
 15569  0021A8  818D               	bsf	___fldiv@b& (0+255),0,b
 15570                           
 15571                           ; BSR set to: 0
 15572  0021AA  90D8               	bcf	status,0,c
 15573  0021AC  37A0               	rlcf	___fldiv@grs& (0+255),f,b
 15574  0021AE  37A1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 15575  0021B0  37A2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 15576  0021B2  37A3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 15577  0021B4  079E               	decf	___fldiv@new_exp& (0+255),f,b
 15578  0021B6  A0D8               	btfss	status,0,c
 15579  0021B8  079F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 15580  0021BA                     l2839:
 15581                           
 15582                           ; BSR set to: 0
 15583                           
 15584                           ; BSR set to: 0
 15585  0021BA  AF8F               	btfss	(___fldiv@b+2)& (0+255),7,b
 15586  0021BC  D7EF               	goto	l2840
 15587                           
 15588                           ; BSR set to: 0
 15589                           
 15590                           ; BSR set to: 0
 15591  0021BE  0E00               	movlw	0
 15592  0021C0  6FA5               	movwf	___fldiv@aexp& (0+255),b
 15593                           
 15594                           ; BSR set to: 0
 15595  0021C2  AFA3               	btfss	(___fldiv@grs+3)& (0+255),7,b
 15596  0021C4  D016               	goto	l2846
 15597                           
 15598                           ; BSR set to: 0
 15599  0021C6  0EFF               	movlw	255
 15600  0021C8  15A0               	andwf	___fldiv@grs& (0+255),w,b
 15601  0021CA  6F95               	movwf	??___fldiv& (0+255),b
 15602  0021CC  0EFF               	movlw	255
 15603  0021CE  15A1               	andwf	(___fldiv@grs+1)& (0+255),w,b
 15604  0021D0  6F96               	movwf	(??___fldiv+1)& (0+255),b
 15605  0021D2  0EFF               	movlw	255
 15606  0021D4  15A2               	andwf	(___fldiv@grs+2)& (0+255),w,b
 15607  0021D6  6F97               	movwf	(??___fldiv+2)& (0+255),b
 15608  0021D8  0E7F               	movlw	127
 15609  0021DA  15A3               	andwf	(___fldiv@grs+3)& (0+255),w,b
 15610  0021DC  6F98               	movwf	(??___fldiv+3)& (0+255),b
 15611  0021DE  5195               	movf	??___fldiv& (0+255),w,b
 15612  0021E0  1196               	iorwf	(??___fldiv+1)& (0+255),w,b
 15613  0021E2  1197               	iorwf	(??___fldiv+2)& (0+255),w,b
 15614  0021E4  1198               	iorwf	(??___fldiv+3)& (0+255),w,b
 15615  0021E6  A4D8               	btfss	status,2,c
 15616  0021E8  D002               	goto	u7540
 15617                           
 15618                           ; BSR set to: 0
 15619                           
 15620                           ; BSR set to: 0
 15621  0021EA  A18D               	btfss	___fldiv@b& (0+255),0,b
 15622  0021EC  D002               	goto	l2846
 15623  0021EE                     u7540:
 15624                           
 15625                           ; BSR set to: 0
 15626  0021EE  0E01               	movlw	1
 15627  0021F0  6FA5               	movwf	___fldiv@aexp& (0+255),b
 15628  0021F2                     l2846:
 15629                           
 15630                           ; BSR set to: 0
 15631                           
 15632                           ; BSR set to: 0
 15633                           
 15634                           ; BSR set to: 0
 15635  0021F2  51A5               	movf	___fldiv@aexp& (0+255),w,b
 15636  0021F4  B4D8               	btfsc	status,2,c
 15637  0021F6  D01F               	goto	l2848
 15638                           
 15639                           ; BSR set to: 0
 15640  0021F8  0E01               	movlw	1
 15641  0021FA  278D               	addwf	___fldiv@b& (0+255),f,b
 15642  0021FC  0E00               	movlw	0
 15643  0021FE  238E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 15644  002200  238F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 15645  002202  2390               	addwfc	(___fldiv@b+3)& (0+255),f,b
 15646                           
 15647                           ; BSR set to: 0
 15648  002204  A190               	btfss	(___fldiv@b+3)& (0+255),0,b
 15649  002206  D017               	goto	l2848
 15650                           
 15651                           ; BSR set to: 0
 15652  002208  C08D  F095         	movff	___fldiv@b,??___fldiv
 15653  00220C  C08E  F096         	movff	___fldiv@b+1,??___fldiv+1
 15654  002210  C08F  F097         	movff	___fldiv@b+2,??___fldiv+2
 15655  002214  C090  F098         	movff	___fldiv@b+3,??___fldiv+3
 15656  002218  3598               	rlcf	(??___fldiv+3)& (0+255),w,b
 15657  00221A  3398               	rrcf	(??___fldiv+3)& (0+255),f,b
 15658  00221C  3397               	rrcf	(??___fldiv+2)& (0+255),f,b
 15659  00221E  3396               	rrcf	(??___fldiv+1)& (0+255),f,b
 15660  002220  3395               	rrcf	??___fldiv& (0+255),f,b
 15661  002222  C095  F08D         	movff	??___fldiv,___fldiv@b
 15662  002226  C096  F08E         	movff	??___fldiv+1,___fldiv@b+1
 15663  00222A  C097  F08F         	movff	??___fldiv+2,___fldiv@b+2
 15664  00222E  C098  F090         	movff	??___fldiv+3,___fldiv@b+3
 15665                           
 15666                           ; BSR set to: 0
 15667  002232  4B9E               	infsnz	___fldiv@new_exp& (0+255),f,b
 15668  002234  2B9F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 15669  002236                     l2848:
 15670                           
 15671                           ; BSR set to: 0
 15672                           
 15673                           ; BSR set to: 0
 15674                           
 15675                           ; BSR set to: 0
 15676  002236  BF9F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 15677  002238  D010               	goto	l2849
 15678  00223A  519F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 15679  00223C  E103               	bnz	u7570
 15680  00223E  299E               	incf	___fldiv@new_exp& (0+255),w,b
 15681  002240  A0D8               	btfss	status,0,c
 15682  002242  D00B               	goto	l2849
 15683  002244                     u7570:
 15684                           
 15685                           ; BSR set to: 0
 15686  002244  0E00               	movlw	0
 15687  002246  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15688  002248  699E               	setf	___fldiv@new_exp& (0+255),b
 15689  00224A  0E00               	movlw	0
 15690  00224C  6F8D               	movwf	___fldiv@b& (0+255),b
 15691  00224E  0E00               	movlw	0
 15692  002250  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15693  002252  0E00               	movlw	0
 15694  002254  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15695  002256  0E00               	movlw	0
 15696  002258  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15697  00225A                     l2849:
 15698                           
 15699                           ; BSR set to: 0
 15700                           
 15701                           ; BSR set to: 0
 15702  00225A  BF9F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 15703  00225C  D005               	goto	u7580
 15704  00225E  519F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 15705  002260  E111               	bnz	l9285
 15706  002262  059E               	decf	___fldiv@new_exp& (0+255),w,b
 15707  002264  B0D8               	btfsc	status,0,c
 15708  002266  D00E               	goto	l2850
 15709  002268                     u7580:
 15710                           
 15711                           ; BSR set to: 0
 15712  002268  0E00               	movlw	0
 15713  00226A  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15714  00226C  0E00               	movlw	0
 15715  00226E  6F9E               	movwf	___fldiv@new_exp& (0+255),b
 15716  002270  0E00               	movlw	0
 15717  002272  6F8D               	movwf	___fldiv@b& (0+255),b
 15718  002274  0E00               	movlw	0
 15719  002276  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15720  002278  0E00               	movlw	0
 15721  00227A  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15722  00227C  0E00               	movlw	0
 15723  00227E  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15724  002280  0E00               	movlw	0
 15725  002282  6F99               	movwf	___fldiv@sign& (0+255),b
 15726  002284                     l2850:
 15727  002284                     l9285:
 15728                           
 15729                           ; BSR set to: 0
 15730  002284  C09E  F0A4         	movff	___fldiv@new_exp,___fldiv@bexp
 15731                           
 15732                           ; BSR set to: 0
 15733  002288  A1A4               	btfss	___fldiv@bexp& (0+255),0,b
 15734  00228A  D002               	goto	l2851
 15735                           
 15736                           ; BSR set to: 0
 15737  00228C  8F8F               	bsf	(___fldiv@b+2)& (0+255),7,b
 15738  00228E  D001               	goto	l2852
 15739  002290                     l2851:
 15740                           
 15741                           ; BSR set to: 0
 15742                           
 15743                           ; BSR set to: 0
 15744  002290  9F8F               	bcf	(___fldiv@b+2)& (0+255),7,b
 15745  002292                     l2852:
 15746                           
 15747                           ; BSR set to: 0
 15748                           
 15749                           ; BSR set to: 0
 15750  002292  90D8               	bcf	status,0,c
 15751  002294  31A4               	rrcf	___fldiv@bexp& (0+255),w,b
 15752  002296  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15753                           
 15754                           ; BSR set to: 0
 15755  002298  5199               	movf	___fldiv@sign& (0+255),w,b
 15756  00229A  1390               	iorwf	(___fldiv@b+3)& (0+255),f,b
 15757                           
 15758                           ; BSR set to: 0
 15759  00229C  C08D  F08D         	movff	___fldiv@b,?___fldiv
 15760  0022A0  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 15761  0022A4  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 15762  0022A8  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 15763  0022AC  0012               	return	
 15764  0022AE                     __end_of___fldiv:
 15765                           	opt stack 0
 15766                           tblptru	equ	0xFF8
 15767                           tblptrh	equ	0xFF7
 15768                           tblptrl	equ	0xFF6
 15769                           tablat	equ	0xFF5
 15770                           prodh	equ	0xFF4
 15771                           prodl	equ	0xFF3
 15772                           intcon	equ	0xFF2
 15773                           intcon3	equ	0xFF0
 15774                           postinc0	equ	0xFEE
 15775                           wreg	equ	0xFE8
 15776                           indf1	equ	0xFE7
 15777                           postdec1	equ	0xFE5
 15778                           fsr1h	equ	0xFE2
 15779                           fsr1l	equ	0xFE1
 15780                           indf2	equ	0xFDF
 15781                           fsr2h	equ	0xFDA
 15782                           fsr2l	equ	0xFD9
 15783                           status	equ	0xFD8
 15784                           
 15785 ;; *************** function ___fladd *****************
 15786 ;; Defined at:
 15787 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 15788 ;; Parameters:    Size  Location     Type
 15789 ;;  b               4    0[BANK0 ] unsigned char 
 15790 ;;  a               4    4[BANK0 ] unsigned char 
 15791 ;; Auto vars:     Size  Location     Type
 15792 ;;  grs             1   19[BANK0 ] unsigned char 
 15793 ;;  bexp            1   18[BANK0 ] unsigned char 
 15794 ;;  aexp            1   17[BANK0 ] unsigned char 
 15795 ;;  signs           1   16[BANK0 ] unsigned char 
 15796 ;; Return value:  Size  Location     Type
 15797 ;;                  4    0[BANK0 ] unsigned char 
 15798 ;; Registers used:
 15799 ;;		wreg, status,2, status,0
 15800 ;; Tracked objects:
 15801 ;;		On entry : 0/0
 15802 ;;		On exit  : 0/0
 15803 ;;		Unchanged: 0/0
 15804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15805 ;;      Params:         0       8       0       0       0       0       0       0       0
 15806 ;;      Locals:         0       4       0       0       0       0       0       0       0
 15807 ;;      Temps:          0       8       0       0       0       0       0       0       0
 15808 ;;      Totals:         0      20       0       0       0       0       0       0       0
 15809 ;;Total ram usage:       20 bytes
 15810 ;; Hardware stack levels used:    1
 15811 ;; Hardware stack levels required when called:   11
 15812 ;; This function calls:
 15813 ;;		Nothing
 15814 ;; This function is called by:
 15815 ;;		_ADC_TempConversion
 15816 ;; This function uses a non-reentrant model
 15817 ;;
 15818                           
 15819                           	psect	text47
 15820  001CBA                     __ptext47:
 15821                           	opt stack 0
 15822  001CBA                     ___fladd:
 15823                           	opt stack 16
 15824                           
 15825                           ; BSR set to: 0
 15826                           ;incstack = 0
 15827  001CBA  0100               	movlb	0	; () banked
 15828  001CBC  5163               	movf	(___fladd@b+3)& (0+255),w,b
 15829  001CBE  0B80               	andlw	128
 15830  001CC0  6F70               	movwf	___fladd@signs& (0+255),b
 15831  001CC2  5163               	movf	(___fladd@b+3)& (0+255),w,b
 15832  001CC4  2563               	addwf	(___fladd@b+3)& (0+255),w,b
 15833  001CC6  6F72               	movwf	___fladd@bexp& (0+255),b
 15834                           
 15835                           ; BSR set to: 0
 15836  001CC8  BF62               	btfsc	(___fladd@b+2)& (0+255),7,b
 15837                           
 15838                           ; BSR set to: 0
 15839  001CCA  8172               	bsf	___fladd@bexp& (0+255),0,b
 15840                           
 15841                           ; BSR set to: 0
 15842                           
 15843                           ; BSR set to: 0
 15844  001CCC  5172               	movf	___fladd@bexp& (0+255),w,b
 15845  001CCE  B4D8               	btfsc	status,2,c
 15846  001CD0  D00D               	goto	l2765
 15847                           
 15848                           ; BSR set to: 0
 15849  001CD2  2972               	incf	___fladd@bexp& (0+255),w,b
 15850  001CD4  A4D8               	btfss	status,2,c
 15851  001CD6  D008               	goto	l2766
 15852                           
 15853                           ; BSR set to: 0
 15854  001CD8  0E00               	movlw	0
 15855  001CDA  6F60               	movwf	___fladd@b& (0+255),b
 15856  001CDC  0E00               	movlw	0
 15857  001CDE  6F61               	movwf	(___fladd@b+1)& (0+255),b
 15858  001CE0  0E00               	movlw	0
 15859  001CE2  6F62               	movwf	(___fladd@b+2)& (0+255),b
 15860  001CE4  0E00               	movlw	0
 15861  001CE6  6F63               	movwf	(___fladd@b+3)& (0+255),b
 15862  001CE8                     l2766:
 15863                           
 15864                           ; BSR set to: 0
 15865                           
 15866                           ; BSR set to: 0
 15867  001CE8  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 15868  001CEA  D006               	goto	L10
 15869  001CEC                     l2765:
 15870                           
 15871                           ; BSR set to: 0
 15872                           
 15873                           ; BSR set to: 0
 15874  001CEC  0E00               	movlw	0
 15875  001CEE  6F60               	movwf	___fladd@b& (0+255),b
 15876  001CF0  0E00               	movlw	0
 15877  001CF2  6F61               	movwf	(___fladd@b+1)& (0+255),b
 15878  001CF4  0E00               	movlw	0
 15879  001CF6  6F62               	movwf	(___fladd@b+2)& (0+255),b
 15880  001CF8                     L10:
 15881  001CF8  0E00               	movlw	0
 15882  001CFA  6F63               	movwf	(___fladd@b+3)& (0+255),b
 15883                           
 15884                           ; BSR set to: 0
 15885                           
 15886                           ; BSR set to: 0
 15887  001CFC  5167               	movf	(___fladd@a+3)& (0+255),w,b
 15888  001CFE  0B80               	andlw	128
 15889  001D00  6F71               	movwf	___fladd@aexp& (0+255),b
 15890                           
 15891                           ; BSR set to: 0
 15892  001D02  5170               	movf	___fladd@signs& (0+255),w,b
 15893  001D04  1971               	xorwf	___fladd@aexp& (0+255),w,b
 15894  001D06  A4D8               	btfss	status,2,c
 15895                           
 15896                           ; BSR set to: 0
 15897  001D08  8D70               	bsf	___fladd@signs& (0+255),6,b
 15898                           
 15899                           ; BSR set to: 0
 15900                           
 15901                           ; BSR set to: 0
 15902  001D0A  5167               	movf	(___fladd@a+3)& (0+255),w,b
 15903  001D0C  2567               	addwf	(___fladd@a+3)& (0+255),w,b
 15904  001D0E  6F71               	movwf	___fladd@aexp& (0+255),b
 15905                           
 15906                           ; BSR set to: 0
 15907  001D10  BF66               	btfsc	(___fladd@a+2)& (0+255),7,b
 15908                           
 15909                           ; BSR set to: 0
 15910  001D12  8171               	bsf	___fladd@aexp& (0+255),0,b
 15911                           
 15912                           ; BSR set to: 0
 15913                           
 15914                           ; BSR set to: 0
 15915  001D14  5171               	movf	___fladd@aexp& (0+255),w,b
 15916  001D16  B4D8               	btfsc	status,2,c
 15917  001D18  D00D               	goto	l2770
 15918                           
 15919                           ; BSR set to: 0
 15920  001D1A  2971               	incf	___fladd@aexp& (0+255),w,b
 15921  001D1C  A4D8               	btfss	status,2,c
 15922  001D1E  D008               	goto	l2771
 15923                           
 15924                           ; BSR set to: 0
 15925  001D20  0E00               	movlw	0
 15926  001D22  6F64               	movwf	___fladd@a& (0+255),b
 15927  001D24  0E00               	movlw	0
 15928  001D26  6F65               	movwf	(___fladd@a+1)& (0+255),b
 15929  001D28  0E00               	movlw	0
 15930  001D2A  6F66               	movwf	(___fladd@a+2)& (0+255),b
 15931  001D2C  0E00               	movlw	0
 15932  001D2E  6F67               	movwf	(___fladd@a+3)& (0+255),b
 15933  001D30                     l2771:
 15934                           
 15935                           ; BSR set to: 0
 15936                           
 15937                           ; BSR set to: 0
 15938  001D30  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
 15939  001D32  D006               	goto	L11
 15940  001D34                     l2770:
 15941                           
 15942                           ; BSR set to: 0
 15943                           
 15944                           ; BSR set to: 0
 15945  001D34  0E00               	movlw	0
 15946  001D36  6F64               	movwf	___fladd@a& (0+255),b
 15947  001D38  0E00               	movlw	0
 15948  001D3A  6F65               	movwf	(___fladd@a+1)& (0+255),b
 15949  001D3C  0E00               	movlw	0
 15950  001D3E  6F66               	movwf	(___fladd@a+2)& (0+255),b
 15951  001D40                     L11:
 15952  001D40  0E00               	movlw	0
 15953  001D42  6F67               	movwf	(___fladd@a+3)& (0+255),b
 15954                           
 15955                           ; BSR set to: 0
 15956                           
 15957                           ; BSR set to: 0
 15958  001D44  5172               	movf	___fladd@bexp& (0+255),w,b
 15959  001D46  5D71               	subwf	___fladd@aexp& (0+255),w,b
 15960  001D48  B0D8               	btfsc	status,0,c
 15961  001D4A  D022               	goto	l2773
 15962                           
 15963                           ; BSR set to: 0
 15964  001D4C  AD70               	btfss	___fladd@signs& (0+255),6,b
 15965  001D4E  D002               	goto	l2774
 15966                           
 15967                           ; BSR set to: 0
 15968  001D50  0E80               	movlw	128
 15969  001D52  1B70               	xorwf	___fladd@signs& (0+255),f,b
 15970  001D54                     l2774:
 15971                           
 15972                           ; BSR set to: 0
 15973                           
 15974                           ; BSR set to: 0
 15975  001D54  C072  F073         	movff	___fladd@bexp,___fladd@grs
 15976                           
 15977                           ; BSR set to: 0
 15978  001D58  C071  F072         	movff	___fladd@aexp,___fladd@bexp
 15979                           
 15980                           ; BSR set to: 0
 15981  001D5C  C073  F071         	movff	___fladd@grs,___fladd@aexp
 15982                           
 15983                           ; BSR set to: 0
 15984  001D60  C060  F073         	movff	___fladd@b,___fladd@grs
 15985                           
 15986                           ; BSR set to: 0
 15987  001D64  C064  F060         	movff	___fladd@a,___fladd@b
 15988                           
 15989                           ; BSR set to: 0
 15990  001D68  C073  F064         	movff	___fladd@grs,___fladd@a
 15991                           
 15992                           ; BSR set to: 0
 15993  001D6C  C061  F073         	movff	___fladd@b+1,___fladd@grs
 15994                           
 15995                           ; BSR set to: 0
 15996  001D70  C065  F061         	movff	___fladd@a+1,___fladd@b+1
 15997                           
 15998                           ; BSR set to: 0
 15999  001D74  C073  F065         	movff	___fladd@grs,___fladd@a+1
 16000                           
 16001                           ; BSR set to: 0
 16002  001D78  C062  F073         	movff	___fladd@b+2,___fladd@grs
 16003                           
 16004                           ; BSR set to: 0
 16005  001D7C  C066  F062         	movff	___fladd@a+2,___fladd@b+2
 16006                           
 16007                           ; BSR set to: 0
 16008  001D80  C073  F066         	movff	___fladd@grs,___fladd@a+2
 16009                           
 16010                           ; BSR set to: 0
 16011  001D84  C063  F073         	movff	___fladd@b+3,___fladd@grs
 16012                           
 16013                           ; BSR set to: 0
 16014  001D88  C067  F063         	movff	___fladd@a+3,___fladd@b+3
 16015                           
 16016                           ; BSR set to: 0
 16017  001D8C  C073  F067         	movff	___fladd@grs,___fladd@a+3
 16018  001D90                     l2773:
 16019                           
 16020                           ; BSR set to: 0
 16021                           
 16022                           ; BSR set to: 0
 16023  001D90  0E00               	movlw	0
 16024  001D92  6F73               	movwf	___fladd@grs& (0+255),b
 16025                           
 16026                           ; BSR set to: 0
 16027  001D94  5172               	movf	___fladd@bexp& (0+255),w,b
 16028  001D96  6F68               	movwf	??___fladd& (0+255),b
 16029  001D98  6B69               	clrf	(??___fladd+1)& (0+255),b
 16030  001D9A  1F68               	comf	??___fladd& (0+255),f,b
 16031  001D9C  1F69               	comf	(??___fladd+1)& (0+255),f,b
 16032  001D9E  4B68               	infsnz	??___fladd& (0+255),f,b
 16033  001DA0  2B69               	incf	(??___fladd+1)& (0+255),f,b
 16034  001DA2  5171               	movf	___fladd@aexp& (0+255),w,b
 16035  001DA4  6F6A               	movwf	(??___fladd+2)& (0+255),b
 16036  001DA6  6B6B               	clrf	(??___fladd+3)& (0+255),b
 16037  001DA8  5168               	movf	??___fladd& (0+255),w,b
 16038  001DAA  276A               	addwf	(??___fladd+2)& (0+255),f,b
 16039  001DAC  5169               	movf	(??___fladd+1)& (0+255),w,b
 16040  001DAE  236B               	addwfc	(??___fladd+3)& (0+255),f,b
 16041  001DB0  BF6B               	btfsc	(??___fladd+3)& (0+255),7,b
 16042  001DB2  D02C               	goto	l2777
 16043  001DB4  516B               	movf	(??___fladd+3)& (0+255),w,b
 16044  001DB6  E104               	bnz	u7070
 16045  001DB8  0E1A               	movlw	26
 16046  001DBA  5D6A               	subwf	(??___fladd+2)& (0+255),w,b
 16047  001DBC  A0D8               	btfss	status,0,c
 16048  001DBE  D026               	goto	l2777
 16049  001DC0                     u7070:
 16050                           
 16051                           ; BSR set to: 0
 16052  001DC0  5160               	movf	___fladd@b& (0+255),w,b
 16053  001DC2  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 16054  001DC4  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 16055  001DC6  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 16056  001DC8  B4D8               	btfsc	status,2,c
 16057  001DCA  D002               	goto	u7080
 16058  001DCC  0E01               	movlw	1
 16059  001DCE  D001               	goto	u7090
 16060  001DD0                     u7080:
 16061  001DD0  0E00               	movlw	0
 16062  001DD2                     u7090:
 16063  001DD2  6F73               	movwf	___fladd@grs& (0+255),b
 16064                           
 16065                           ; BSR set to: 0
 16066  001DD4  0E00               	movlw	0
 16067  001DD6  6F60               	movwf	___fladd@b& (0+255),b
 16068  001DD8  0E00               	movlw	0
 16069  001DDA  6F61               	movwf	(___fladd@b+1)& (0+255),b
 16070  001DDC  0E00               	movlw	0
 16071  001DDE  6F62               	movwf	(___fladd@b+2)& (0+255),b
 16072  001DE0  0E00               	movlw	0
 16073  001DE2  6F63               	movwf	(___fladd@b+3)& (0+255),b
 16074                           
 16075                           ; BSR set to: 0
 16076  001DE4  C071  F072         	movff	___fladd@aexp,___fladd@bexp
 16077  001DE8  D015               	goto	u7120
 16078  001DEA                     l2778:
 16079                           
 16080                           ; BSR set to: 0
 16081  001DEA  A173               	btfss	___fladd@grs& (0+255),0,b
 16082  001DEC  D005               	goto	l2779
 16083                           
 16084                           ; BSR set to: 0
 16085  001DEE  90D8               	bcf	status,0,c
 16086  001DF0  3173               	rrcf	___fladd@grs& (0+255),w,b
 16087  001DF2  0901               	iorlw	1
 16088  001DF4  6F73               	movwf	___fladd@grs& (0+255),b
 16089  001DF6  D002               	goto	l2780
 16090  001DF8                     l2779:
 16091                           
 16092                           ; BSR set to: 0
 16093                           
 16094                           ; BSR set to: 0
 16095  001DF8  90D8               	bcf	status,0,c
 16096  001DFA  3373               	rrcf	___fladd@grs& (0+255),f,b
 16097  001DFC                     l2780:
 16098                           
 16099                           ; BSR set to: 0
 16100                           
 16101                           ; BSR set to: 0
 16102  001DFC  B160               	btfsc	___fladd@b& (0+255),0,b
 16103                           
 16104                           ; BSR set to: 0
 16105  001DFE  8F73               	bsf	___fladd@grs& (0+255),7,b
 16106                           
 16107                           ; BSR set to: 0
 16108                           
 16109                           ; BSR set to: 0
 16110  001E00  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 16111  001E02  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 16112  001E04  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 16113  001E06  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 16114  001E08  3360               	rrcf	___fladd@b& (0+255),f,b
 16115                           
 16116                           ; BSR set to: 0
 16117  001E0A  2B72               	incf	___fladd@bexp& (0+255),f,b
 16118  001E0C                     l2777:
 16119                           
 16120                           ; BSR set to: 0
 16121  001E0C  5171               	movf	___fladd@aexp& (0+255),w,b
 16122  001E0E  5D72               	subwf	___fladd@bexp& (0+255),w,b
 16123  001E10  A0D8               	btfss	status,0,c
 16124  001E12  D7EB               	goto	l2778
 16125  001E14                     u7120:
 16126                           
 16127                           ; BSR set to: 0
 16128                           
 16129                           ; BSR set to: 0
 16130  001E14  BD70               	btfsc	___fladd@signs& (0+255),6,b
 16131  001E16  D029               	goto	l2783
 16132                           
 16133                           ; BSR set to: 0
 16134  001E18  5172               	movf	___fladd@bexp& (0+255),w,b
 16135  001E1A  A4D8               	btfss	status,2,c
 16136  001E1C  D009               	goto	l2784
 16137                           
 16138                           ; BSR set to: 0
 16139  001E1E  0E00               	movlw	0
 16140  001E20  6F60               	movwf	?___fladd& (0+255),b
 16141  001E22  0E00               	movlw	0
 16142  001E24  6F61               	movwf	(?___fladd+1)& (0+255),b
 16143  001E26  0E00               	movlw	0
 16144  001E28  6F62               	movwf	(?___fladd+2)& (0+255),b
 16145  001E2A  0E00               	movlw	0
 16146  001E2C  6F63               	movwf	(?___fladd+3)& (0+255),b
 16147                           
 16148                           ; BSR set to: 0
 16149  001E2E  0012               	return	
 16150  001E30                     l2784:
 16151                           
 16152                           ; BSR set to: 0
 16153                           
 16154                           ; BSR set to: 0
 16155  001E30  5164               	movf	___fladd@a& (0+255),w,b
 16156  001E32  2760               	addwf	___fladd@b& (0+255),f,b
 16157  001E34  5165               	movf	(___fladd@a+1)& (0+255),w,b
 16158  001E36  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 16159  001E38  5166               	movf	(___fladd@a+2)& (0+255),w,b
 16160  001E3A  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 16161  001E3C  5167               	movf	(___fladd@a+3)& (0+255),w,b
 16162  001E3E  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 16163                           
 16164                           ; BSR set to: 0
 16165  001E40  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 16166  001E42  D083               	goto	u7250
 16167                           
 16168                           ; BSR set to: 0
 16169  001E44  A173               	btfss	___fladd@grs& (0+255),0,b
 16170  001E46  D006               	goto	l2787
 16171                           
 16172                           ; BSR set to: 0
 16173  001E48  90D8               	bcf	status,0,c
 16174  001E4A  3373               	rrcf	___fladd@grs& (0+255),f,b
 16175  001E4C  5173               	movf	___fladd@grs& (0+255),w,b
 16176  001E4E  0901               	iorlw	1
 16177  001E50  6F73               	movwf	___fladd@grs& (0+255),b
 16178  001E52  D002               	goto	l2788
 16179  001E54                     l2787:
 16180                           
 16181                           ; BSR set to: 0
 16182                           
 16183                           ; BSR set to: 0
 16184  001E54  90D8               	bcf	status,0,c
 16185  001E56  3373               	rrcf	___fladd@grs& (0+255),f,b
 16186  001E58                     l2788:
 16187                           
 16188                           ; BSR set to: 0
 16189                           
 16190                           ; BSR set to: 0
 16191  001E58  B160               	btfsc	___fladd@b& (0+255),0,b
 16192                           
 16193                           ; BSR set to: 0
 16194  001E5A  8F73               	bsf	___fladd@grs& (0+255),7,b
 16195                           
 16196                           ; BSR set to: 0
 16197                           
 16198                           ; BSR set to: 0
 16199  001E5C  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 16200  001E5E  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 16201  001E60  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 16202  001E62  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 16203  001E64  3360               	rrcf	___fladd@b& (0+255),f,b
 16204                           
 16205                           ; BSR set to: 0
 16206  001E66  2B72               	incf	___fladd@bexp& (0+255),f,b
 16207                           
 16208                           ; BSR set to: 0
 16209  001E68  D070               	goto	u7250
 16210  001E6A                     l2783:
 16211                           
 16212                           ; BSR set to: 0
 16213                           
 16214                           ; BSR set to: 0
 16215  001E6A  5164               	movf	___fladd@a& (0+255),w,b
 16216  001E6C  5D60               	subwf	___fladd@b& (0+255),w,b
 16217  001E6E  5165               	movf	(___fladd@a+1)& (0+255),w,b
 16218  001E70  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
 16219  001E72  5166               	movf	(___fladd@a+2)& (0+255),w,b
 16220  001E74  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
 16221  001E76  5163               	movf	(___fladd@b+3)& (0+255),w,b
 16222  001E78  0A80               	xorlw	128
 16223  001E7A  6F68               	movwf	??___fladd& (0+255),b
 16224  001E7C  5167               	movf	(___fladd@a+3)& (0+255),w,b
 16225  001E7E  0A80               	xorlw	128
 16226  001E80  5968               	subwfb	??___fladd& (0+255),w,b
 16227  001E82  B0D8               	btfsc	status,0,c
 16228  001E84  D036               	goto	l2791
 16229                           
 16230                           ; BSR set to: 0
 16231  001E86  C060  F068         	movff	___fladd@b,??___fladd
 16232  001E8A  C061  F069         	movff	___fladd@b+1,??___fladd+1
 16233  001E8E  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 16234  001E92  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 16235  001E96  1F68               	comf	??___fladd& (0+255),f,b
 16236  001E98  1F69               	comf	(??___fladd+1)& (0+255),f,b
 16237  001E9A  1F6A               	comf	(??___fladd+2)& (0+255),f,b
 16238  001E9C  1F6B               	comf	(??___fladd+3)& (0+255),f,b
 16239  001E9E  2B68               	incf	??___fladd& (0+255),f,b
 16240  001EA0  0E00               	movlw	0
 16241  001EA2  2369               	addwfc	(??___fladd+1)& (0+255),f,b
 16242  001EA4  236A               	addwfc	(??___fladd+2)& (0+255),f,b
 16243  001EA6  236B               	addwfc	(??___fladd+3)& (0+255),f,b
 16244  001EA8  5164               	movf	___fladd@a& (0+255),w,b
 16245  001EAA  2568               	addwf	??___fladd& (0+255),w,b
 16246  001EAC  6F6C               	movwf	(??___fladd+4)& (0+255),b
 16247  001EAE  5165               	movf	(___fladd@a+1)& (0+255),w,b
 16248  001EB0  2169               	addwfc	(??___fladd+1)& (0+255),w,b
 16249  001EB2  6F6D               	movwf	(??___fladd+5)& (0+255),b
 16250  001EB4  5166               	movf	(___fladd@a+2)& (0+255),w,b
 16251  001EB6  216A               	addwfc	(??___fladd+2)& (0+255),w,b
 16252  001EB8  6F6E               	movwf	(??___fladd+6)& (0+255),b
 16253  001EBA  5167               	movf	(___fladd@a+3)& (0+255),w,b
 16254  001EBC  216B               	addwfc	(??___fladd+3)& (0+255),w,b
 16255  001EBE  6F6F               	movwf	(??___fladd+7)& (0+255),b
 16256  001EC0  0EFF               	movlw	255
 16257  001EC2  256C               	addwf	(??___fladd+4)& (0+255),w,b
 16258  001EC4  6F60               	movwf	___fladd@b& (0+255),b
 16259  001EC6  0EFF               	movlw	255
 16260  001EC8  216D               	addwfc	(??___fladd+5)& (0+255),w,b
 16261  001ECA  6F61               	movwf	(___fladd@b+1)& (0+255),b
 16262  001ECC  0EFF               	movlw	255
 16263  001ECE  216E               	addwfc	(??___fladd+6)& (0+255),w,b
 16264  001ED0  6F62               	movwf	(___fladd@b+2)& (0+255),b
 16265  001ED2  0EFF               	movlw	255
 16266  001ED4  216F               	addwfc	(??___fladd+7)& (0+255),w,b
 16267  001ED6  6F63               	movwf	(___fladd@b+3)& (0+255),b
 16268  001ED8  0E80               	movlw	128
 16269  001EDA  1B70               	xorwf	___fladd@signs& (0+255),f,b
 16270                           
 16271                           ; BSR set to: 0
 16272  001EDC  6D73               	negf	___fladd@grs& (0+255),b
 16273                           
 16274                           ; BSR set to: 0
 16275  001EDE  5173               	movf	___fladd@grs& (0+255),w,b
 16276  001EE0  A4D8               	btfss	status,2,c
 16277  001EE2  D00F               	goto	l2793
 16278                           
 16279                           ; BSR set to: 0
 16280  001EE4  0E01               	movlw	1
 16281  001EE6  2760               	addwf	___fladd@b& (0+255),f,b
 16282  001EE8  0E00               	movlw	0
 16283  001EEA  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 16284  001EEC  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 16285  001EEE  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 16286                           
 16287                           ; BSR set to: 0
 16288  001EF0  D008               	goto	l2793
 16289  001EF2                     l2791:
 16290                           
 16291                           ; BSR set to: 0
 16292                           
 16293                           ; BSR set to: 0
 16294  001EF2  5164               	movf	___fladd@a& (0+255),w,b
 16295  001EF4  5F60               	subwf	___fladd@b& (0+255),f,b
 16296  001EF6  5165               	movf	(___fladd@a+1)& (0+255),w,b
 16297  001EF8  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
 16298  001EFA  5166               	movf	(___fladd@a+2)& (0+255),w,b
 16299  001EFC  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
 16300  001EFE  5167               	movf	(___fladd@a+3)& (0+255),w,b
 16301  001F00  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
 16302  001F02                     l2793:
 16303                           
 16304                           ; BSR set to: 0
 16305  001F02  5160               	movf	___fladd@b& (0+255),w,b
 16306  001F04  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 16307  001F06  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 16308  001F08  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 16309  001F0A  A4D8               	btfss	status,2,c
 16310  001F0C  D01C               	goto	l2800
 16311                           
 16312                           ; BSR set to: 0
 16313  001F0E  5173               	movf	___fladd@grs& (0+255),w,b
 16314  001F10  A4D8               	btfss	status,2,c
 16315  001F12  D019               	goto	l2800
 16316                           
 16317                           ; BSR set to: 0
 16318  001F14  0E00               	movlw	0
 16319  001F16  6F60               	movwf	?___fladd& (0+255),b
 16320  001F18  0E00               	movlw	0
 16321  001F1A  6F61               	movwf	(?___fladd+1)& (0+255),b
 16322  001F1C  0E00               	movlw	0
 16323  001F1E  6F62               	movwf	(?___fladd+2)& (0+255),b
 16324  001F20  0E00               	movlw	0
 16325  001F22  6F63               	movwf	(?___fladd+3)& (0+255),b
 16326                           
 16327                           ; BSR set to: 0
 16328  001F24  0012               	return	
 16329  001F26                     
 16330                           ; BSR set to: 0
 16331                           
 16332                           ; BSR set to: 0
 16333  001F26  90D8               	bcf	status,0,c
 16334  001F28  3760               	rlcf	___fladd@b& (0+255),f,b
 16335  001F2A  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
 16336  001F2C  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
 16337  001F2E  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
 16338                           
 16339                           ; BSR set to: 0
 16340  001F30  BF73               	btfsc	___fladd@grs& (0+255),7,b
 16341                           
 16342                           ; BSR set to: 0
 16343  001F32  8160               	bsf	___fladd@b& (0+255),0,b
 16344                           
 16345                           ; BSR set to: 0
 16346                           
 16347                           ; BSR set to: 0
 16348  001F34  A173               	btfss	___fladd@grs& (0+255),0,b
 16349  001F36  D002               	goto	l2798
 16350                           
 16351                           ; BSR set to: 0
 16352  001F38  80D8               	bsf	status,0,c
 16353  001F3A  D001               	goto	L12
 16354  001F3C                     l2798:
 16355                           
 16356                           ; BSR set to: 0
 16357                           
 16358                           ; BSR set to: 0
 16359  001F3C  90D8               	bcf	status,0,c
 16360  001F3E                     L12:
 16361  001F3E  3773               	rlcf	___fladd@grs& (0+255),f,b
 16362                           
 16363                           ; BSR set to: 0
 16364                           
 16365                           ; BSR set to: 0
 16366  001F40  5172               	movf	___fladd@bexp& (0+255),w,b
 16367  001F42  A4D8               	btfss	status,2,c
 16368                           
 16369                           ; BSR set to: 0
 16370  001F44  0772               	decf	___fladd@bexp& (0+255),f,b
 16371  001F46                     l2800:
 16372                           
 16373                           ; BSR set to: 0
 16374                           
 16375                           ; BSR set to: 0
 16376                           
 16377                           ; BSR set to: 0
 16378  001F46  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
 16379  001F48  D7EE               	goto	l2796
 16380  001F4A                     u7250:
 16381                           
 16382                           ; BSR set to: 0
 16383                           
 16384                           ; BSR set to: 0
 16385                           
 16386                           ; BSR set to: 0
 16387  001F4A  0E00               	movlw	0
 16388  001F4C  6F71               	movwf	___fladd@aexp& (0+255),b
 16389                           
 16390                           ; BSR set to: 0
 16391  001F4E  AF73               	btfss	___fladd@grs& (0+255),7,b
 16392  001F50  D00A               	goto	l2805
 16393                           
 16394                           ; BSR set to: 0
 16395  001F52  C073  F068         	movff	___fladd@grs,??___fladd
 16396  001F56  0E7F               	movlw	127
 16397  001F58  1768               	andwf	??___fladd& (0+255),f,b
 16398  001F5A  A4D8               	btfss	status,2,c
 16399  001F5C  D002               	goto	u7280
 16400                           
 16401                           ; BSR set to: 0
 16402                           
 16403                           ; BSR set to: 0
 16404  001F5E  A160               	btfss	___fladd@b& (0+255),0,b
 16405  001F60  D002               	goto	l2805
 16406  001F62                     u7280:
 16407                           
 16408                           ; BSR set to: 0
 16409  001F62  0E01               	movlw	1
 16410  001F64  6F71               	movwf	___fladd@aexp& (0+255),b
 16411  001F66                     l2805:
 16412                           
 16413                           ; BSR set to: 0
 16414                           
 16415                           ; BSR set to: 0
 16416                           
 16417                           ; BSR set to: 0
 16418  001F66  5171               	movf	___fladd@aexp& (0+255),w,b
 16419  001F68  B4D8               	btfsc	status,2,c
 16420  001F6A  D020               	goto	l2808
 16421                           
 16422                           ; BSR set to: 0
 16423  001F6C  0E01               	movlw	1
 16424  001F6E  2760               	addwf	___fladd@b& (0+255),f,b
 16425  001F70  0E00               	movlw	0
 16426  001F72  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 16427  001F74  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 16428  001F76  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 16429                           
 16430                           ; BSR set to: 0
 16431  001F78  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 16432  001F7A  D018               	goto	l2808
 16433                           
 16434                           ; BSR set to: 0
 16435  001F7C  C060  F068         	movff	___fladd@b,??___fladd
 16436  001F80  C061  F069         	movff	___fladd@b+1,??___fladd+1
 16437  001F84  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 16438  001F88  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 16439  001F8C  356B               	rlcf	(??___fladd+3)& (0+255),w,b
 16440  001F8E  336B               	rrcf	(??___fladd+3)& (0+255),f,b
 16441  001F90  336A               	rrcf	(??___fladd+2)& (0+255),f,b
 16442  001F92  3369               	rrcf	(??___fladd+1)& (0+255),f,b
 16443  001F94  3368               	rrcf	??___fladd& (0+255),f,b
 16444  001F96  C068  F060         	movff	??___fladd,___fladd@b
 16445  001F9A  C069  F061         	movff	??___fladd+1,___fladd@b+1
 16446  001F9E  C06A  F062         	movff	??___fladd+2,___fladd@b+2
 16447  001FA2  C06B  F063         	movff	??___fladd+3,___fladd@b+3
 16448  001FA6  2972               	incf	___fladd@bexp& (0+255),w,b
 16449  001FA8  A4D8               	btfss	status,2,c
 16450                           
 16451                           ; BSR set to: 0
 16452  001FAA  2B72               	incf	___fladd@bexp& (0+255),f,b
 16453  001FAC                     l2808:
 16454                           
 16455                           ; BSR set to: 0
 16456                           
 16457                           ; BSR set to: 0
 16458                           
 16459                           ; BSR set to: 0
 16460                           
 16461                           ; BSR set to: 0
 16462  001FAC  2972               	incf	___fladd@bexp& (0+255),w,b
 16463  001FAE  B4D8               	btfsc	status,2,c
 16464  001FB0  D003               	goto	u7330
 16465                           
 16466                           ; BSR set to: 0
 16467  001FB2  5172               	movf	___fladd@bexp& (0+255),w,b
 16468  001FB4  A4D8               	btfss	status,2,c
 16469  001FB6  D00D               	goto	l2812
 16470  001FB8                     u7330:
 16471                           
 16472                           ; BSR set to: 0
 16473                           
 16474                           ; BSR set to: 0
 16475  001FB8  0E00               	movlw	0
 16476  001FBA  6F60               	movwf	___fladd@b& (0+255),b
 16477  001FBC  0E00               	movlw	0
 16478  001FBE  6F61               	movwf	(___fladd@b+1)& (0+255),b
 16479  001FC0  0E00               	movlw	0
 16480  001FC2  6F62               	movwf	(___fladd@b+2)& (0+255),b
 16481  001FC4  0E00               	movlw	0
 16482  001FC6  6F63               	movwf	(___fladd@b+3)& (0+255),b
 16483  001FC8  5172               	movf	___fladd@bexp& (0+255),w,b
 16484  001FCA  A4D8               	btfss	status,2,c
 16485  001FCC  D002               	goto	l2812
 16486                           
 16487                           ; BSR set to: 0
 16488  001FCE  0E00               	movlw	0
 16489  001FD0  6F70               	movwf	___fladd@signs& (0+255),b
 16490  001FD2                     l2812:
 16491                           
 16492                           ; BSR set to: 0
 16493                           
 16494                           ; BSR set to: 0
 16495                           
 16496                           ; BSR set to: 0
 16497  001FD2  A172               	btfss	___fladd@bexp& (0+255),0,b
 16498  001FD4  D002               	goto	l2813
 16499                           
 16500                           ; BSR set to: 0
 16501  001FD6  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 16502  001FD8  D001               	goto	l2814
 16503  001FDA                     l2813:
 16504                           
 16505                           ; BSR set to: 0
 16506                           
 16507                           ; BSR set to: 0
 16508  001FDA  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
 16509  001FDC                     l2814:
 16510                           
 16511                           ; BSR set to: 0
 16512                           
 16513                           ; BSR set to: 0
 16514  001FDC  90D8               	bcf	status,0,c
 16515  001FDE  3172               	rrcf	___fladd@bexp& (0+255),w,b
 16516  001FE0  6F63               	movwf	(___fladd@b+3)& (0+255),b
 16517                           
 16518                           ; BSR set to: 0
 16519  001FE2  BF70               	btfsc	___fladd@signs& (0+255),7,b
 16520                           
 16521                           ; BSR set to: 0
 16522  001FE4  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
 16523                           
 16524                           ; BSR set to: 0
 16525                           
 16526                           ; BSR set to: 0
 16527  001FE6  C060  F060         	movff	___fladd@b,?___fladd
 16528  001FEA  C061  F061         	movff	___fladd@b+1,?___fladd+1
 16529  001FEE  C062  F062         	movff	___fladd@b+2,?___fladd+2
 16530  001FF2  C063  F063         	movff	___fladd@b+3,?___fladd+3
 16531  001FF6  0012               	return	
 16532  001FF8                     __end_of___fladd:
 16533                           	opt stack 0
 16534                           tblptru	equ	0xFF8
 16535                           tblptrh	equ	0xFF7
 16536                           tblptrl	equ	0xFF6
 16537                           tablat	equ	0xFF5
 16538                           prodh	equ	0xFF4
 16539                           prodl	equ	0xFF3
 16540                           intcon	equ	0xFF2
 16541                           intcon3	equ	0xFF0
 16542                           postinc0	equ	0xFEE
 16543                           wreg	equ	0xFE8
 16544                           indf1	equ	0xFE7
 16545                           postdec1	equ	0xFE5
 16546                           fsr1h	equ	0xFE2
 16547                           fsr1l	equ	0xFE1
 16548                           indf2	equ	0xFDF
 16549                           fsr2h	equ	0xFDA
 16550                           fsr2l	equ	0xFD9
 16551                           status	equ	0xFD8
 16552                           
 16553 ;; *************** function _moteJoiningProcess *****************
 16554 ;; Defined at:
 16555 ;;		line 318 in file "../Includes/Board/MOTEapp.c"
 16556 ;; Parameters:    Size  Location     Type
 16557 ;;  messageReady    1    wreg     unsigned char 
 16558 ;;  changeStates    1   24[BANK0 ] unsigned char 
 16559 ;;  selectButton    1   25[BANK0 ] unsigned char 
 16560 ;; Auto vars:     Size  Location     Type
 16561 ;;  messageReady    1   29[BANK0 ] unsigned char 
 16562 ;;  readDataRate    1   27[BANK0 ] unsigned char 
 16563 ;;  joiningCompl    1   28[BANK0 ] unsigned char 
 16564 ;; Return value:  Size  Location     Type
 16565 ;;                  1    wreg      enum E6161
 16566 ;; Registers used:
 16567 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16568 ;; Tracked objects:
 16569 ;;		On entry : 0/0
 16570 ;;		On exit  : 0/0
 16571 ;;		Unchanged: 0/0
 16572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16573 ;;      Params:         0       2       0       0       0       0       0       0       0
 16574 ;;      Locals:         0       3       0       0       0       0       0       0       0
 16575 ;;      Temps:          0       1       0       0       0       0       0       0       0
 16576 ;;      Totals:         0       6       0       0       0       0       0       0       0
 16577 ;;Total ram usage:        6 bytes
 16578 ;; Hardware stack levels used:    1
 16579 ;; Hardware stack levels required when called:   16
 16580 ;; This function calls:
 16581 ;;		_DATAEE_WriteByte
 16582 ;;		_moteApp_delayms
 16583 ;;		_oled_clear
 16584 ;;		_oled_putString
 16585 ;;		_sendCommand
 16586 ;;		_strcmp
 16587 ;;		_strncmp
 16588 ;; This function is called by:
 16589 ;;		_moteHandler
 16590 ;; This function uses a non-reentrant model
 16591 ;;
 16592                           
 16593                           	psect	text48
 16594  00138E                     __ptext48:
 16595                           	opt stack 0
 16596  00138E                     _moteJoiningProcess:
 16597                           	opt stack 13
 16598                           
 16599                           ; BSR set to: 0
 16600                           ;incstack = 0
 16601                           ;moteJoiningProcess@messageReady stored from wreg
 16602  00138E  0100               	movlb	0	; () banked
 16603  001390  6F7D               	movwf	moteJoiningProcess@messageReady& (0+255),b
 16604                           
 16605                           ;MOTEapp.c: 320: bool joiningComplete = 0;
 16606  001392  0E00               	movlw	0
 16607  001394  0100               	movlb	0	; () banked
 16608  001396  6F7C               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 16609                           
 16610                           ;MOTEapp.c: 322: switch (activeState)
 16611  001398  D2C0               	goto	l406
 16612  00139A                     
 16613                           ; BSR set to: 0
 16614                           ;MOTEapp.c: 325: while(1);
 16615  00139A  D7FF               	goto	l407
 16616  00139C                     
 16617                           ;MOTEapp.c: 328: sendCommand("sys reset");
 16618  00139C  0EFD               	movlw	low STR_30
 16619  00139E  0100               	movlb	0	; () banked
 16620  0013A0  6F61               	movwf	sendCommand@string& (0+255),b
 16621  0013A2  0E7E               	movlw	high STR_30
 16622  0013A4  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16623  0013A6  EC5B  F02E         	call	_sendCommand	;wreg free
 16624  0013AA  D176               	goto	l10789
 16625  0013AC                     
 16626                           ; BSR set to: 0
 16627                           ;MOTEapp.c: 332: if (selectButton)
 16628                           
 16629                           ; BSR set to: 0
 16630  0013AC  5179               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 16631  0013AE  B4D8               	btfsc	status,2,c
 16632  0013B0  D002               	goto	l414
 16633                           
 16634                           ; BSR set to: 0
 16635                           ;MOTEapp.c: 333: {
 16636                           ;MOTEapp.c: 334: activeState = moteComFailure;
 16637  0013B2  0E0A               	movlw	10
 16638  0013B4  6FF4               	movwf	_activeState& (0+255),b
 16639  0013B6                     l414:
 16640                           
 16641                           ; BSR set to: 0
 16642                           ;MOTEapp.c: 335: }
 16643                           ;MOTEapp.c: 336: if ( messageReady )
 16644  0013B6  517D               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 16645  0013B8  B4D8               	btfsc	status,2,c
 16646  0013BA  D2D3               	goto	l411
 16647                           
 16648                           ; BSR set to: 0
 16649                           ;MOTEapp.c: 337: {
 16650                           ;MOTEapp.c: 338: if(strncmp(moduleResonseBuffer, "RN24", 4) == 0)
 16651  0013BC  0E67               	movlw	low _moduleResonseBuffer
 16652  0013BE  6F60               	movwf	strncmp@s1& (0+255),b
 16653  0013C0  0E01               	movlw	high _moduleResonseBuffer
 16654  0013C2  6F61               	movwf	(strncmp@s1+1)& (0+255),b
 16655  0013C4  0EB9               	movlw	low STR_31
 16656  0013C6  6F62               	movwf	strncmp@s2& (0+255),b
 16657  0013C8  0E7F               	movlw	high STR_31
 16658  0013CA  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 16659  0013CC  0E00               	movlw	0
 16660  0013CE  6F65               	movwf	(strncmp@len+1)& (0+255),b
 16661  0013D0  0E04               	movlw	4
 16662  0013D2  6F64               	movwf	strncmp@len& (0+255),b
 16663  0013D4  ECC9  F026         	call	_strncmp	;wreg free
 16664  0013D8  0100               	movlb	0	; () banked
 16665  0013DA  5160               	movf	?_strncmp& (0+255),w,b
 16666  0013DC  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 16667  0013DE  A4D8               	btfss	status,2,c
 16668  0013E0  D038               	goto	l416
 16669                           
 16670                           ; BSR set to: 0
 16671                           ;MOTEapp.c: 339: {
 16672                           ;MOTEapp.c: 340: rnModule = rn2483;
 16673  0013E2  0E00               	movlw	0
 16674  0013E4  6FED               	movwf	_rnModule& (0+255),b
 16675                           
 16676                           ; BSR set to: 0
 16677                           ;MOTEapp.c: 341: oled_clear();
 16678  0013E6  EC7E  F030         	call	_oled_clear	;wreg free
 16679                           
 16680                           ;MOTEapp.c: 342: oled_putString(" Joining Method ",0,0);
 16681  0013EA  0E44               	movlw	low STR_32
 16682  0013EC  0100               	movlb	0	; () banked
 16683  0013EE  6F72               	movwf	oled_putString@string& (0+255),b
 16684  0013F0  0E7B               	movlw	high STR_32
 16685  0013F2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16686  0013F4  5172               	movf	oled_putString@string& (0+255),w,b
 16687  0013F6  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 16688  0013F8  A4D8               	btfss	status,2,c
 16689  0013FA  0E00               	movlw	low (__mediumconst shr (0+16))
 16690  0013FC  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 16691  0013FE  0E00               	movlw	0
 16692  001400  6F75               	movwf	oled_putString@station_dot& (0+255),b
 16693  001402  0E00               	movlw	0
 16694  001404  6F76               	movwf	oled_putString@start_page& (0+255),b
 16695  001406  EC14  F029         	call	_oled_putString	;wreg free
 16696                           
 16697                           ;MOTEapp.c: 343: oled_putString("<- ABP   OTAA ->", 0,2);
 16698  00140A  0E99               	movlw	low STR_33
 16699  00140C  0100               	movlb	0	; () banked
 16700  00140E  6F72               	movwf	oled_putString@string& (0+255),b
 16701  001410  0E7B               	movlw	high STR_33
 16702  001412  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16703  001414  5172               	movf	oled_putString@string& (0+255),w,b
 16704  001416  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 16705  001418  A4D8               	btfss	status,2,c
 16706  00141A  0E00               	movlw	low (__mediumconst shr (0+16))
 16707  00141C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 16708  00141E  0E00               	movlw	0
 16709  001420  6F75               	movwf	oled_putString@station_dot& (0+255),b
 16710  001422  0E02               	movlw	2
 16711  001424  6F76               	movwf	oled_putString@start_page& (0+255),b
 16712  001426  EC14  F029         	call	_oled_putString	;wreg free
 16713                           
 16714                           ;MOTEapp.c: 344: oled_putString("  (S2)   (S3)   ", 0,3);
 16715  00142A  0EEF               	movlw	low STR_34
 16716  00142C  0100               	movlb	0	; () banked
 16717  00142E  6F72               	movwf	oled_putString@string& (0+255),b
 16718  001430  0E7A               	movlw	high STR_34
 16719  001432  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16720  001434  5172               	movf	oled_putString@string& (0+255),w,b
 16721  001436  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 16722  001438  A4D8               	btfss	status,2,c
 16723  00143A  0E00               	movlw	low (__mediumconst shr (0+16))
 16724  00143C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 16725  00143E  0E00               	movlw	0
 16726  001440  6F75               	movwf	oled_putString@station_dot& (0+255),b
 16727  001442  0E03               	movlw	3
 16728  001444  6F76               	movwf	oled_putString@start_page& (0+255),b
 16729  001446  EC14  F029         	call	_oled_putString	;wreg free
 16730  00144A  D04A               	goto	l10727
 16731  00144C                     L13:
 16732  00144C  0100               	movlb	0	; () banked
 16733  00144E                     L14:
 16734  00144E  6FF4               	movwf	_activeState& (0+255),b
 16735                           
 16736                           ;MOTEapp.c: 346: }
 16737  001450  D288               	goto	l411
 16738  001452                     l416:
 16739                           
 16740                           ; BSR set to: 0
 16741                           ;MOTEapp.c: 347: else if(strncmp(moduleResonseBuffer, "RN29", 4) == 0)
 16742                           
 16743                           ; BSR set to: 0
 16744  001452  0E67               	movlw	low _moduleResonseBuffer
 16745  001454  6F60               	movwf	strncmp@s1& (0+255),b
 16746  001456  0E01               	movlw	high _moduleResonseBuffer
 16747  001458  6F61               	movwf	(strncmp@s1+1)& (0+255),b
 16748  00145A  0EBE               	movlw	low STR_35
 16749  00145C  6F62               	movwf	strncmp@s2& (0+255),b
 16750  00145E  0E7F               	movlw	high STR_35
 16751  001460  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 16752  001462  0E00               	movlw	0
 16753  001464  6F65               	movwf	(strncmp@len+1)& (0+255),b
 16754  001466  0E04               	movlw	4
 16755  001468  6F64               	movwf	strncmp@len& (0+255),b
 16756  00146A  ECC9  F026         	call	_strncmp	;wreg free
 16757  00146E  0100               	movlb	0	; () banked
 16758  001470  5160               	movf	?_strncmp& (0+255),w,b
 16759  001472  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 16760  001474  A4D8               	btfss	status,2,c
 16761  001476  D036               	goto	l418
 16762                           
 16763                           ; BSR set to: 0
 16764                           ;MOTEapp.c: 348: {
 16765                           ;MOTEapp.c: 349: rnModule = rn2903;
 16766  001478  0E01               	movlw	1
 16767  00147A  6FED               	movwf	_rnModule& (0+255),b
 16768                           
 16769                           ; BSR set to: 0
 16770                           ;MOTEapp.c: 350: oled_clear();
 16771  00147C  EC7E  F030         	call	_oled_clear	;wreg free
 16772                           
 16773                           ;MOTEapp.c: 351: oled_putString(" Joining Method ",0,0);
 16774  001480  0E44               	movlw	low STR_32
 16775  001482  0100               	movlb	0	; () banked
 16776  001484  6F72               	movwf	oled_putString@string& (0+255),b
 16777  001486  0E7B               	movlw	high STR_32
 16778  001488  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16779  00148A  5172               	movf	oled_putString@string& (0+255),w,b
 16780  00148C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 16781  00148E  A4D8               	btfss	status,2,c
 16782  001490  0E00               	movlw	low (__mediumconst shr (0+16))
 16783  001492  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 16784  001494  0E00               	movlw	0
 16785  001496  6F75               	movwf	oled_putString@station_dot& (0+255),b
 16786  001498  0E00               	movlw	0
 16787  00149A  6F76               	movwf	oled_putString@start_page& (0+255),b
 16788  00149C  EC14  F029         	call	_oled_putString	;wreg free
 16789                           
 16790                           ;MOTEapp.c: 352: oled_putString("<- ABP   OTAA ->", 0,2);
 16791  0014A0  0E99               	movlw	low STR_33
 16792  0014A2  0100               	movlb	0	; () banked
 16793  0014A4  6F72               	movwf	oled_putString@string& (0+255),b
 16794  0014A6  0E7B               	movlw	high STR_33
 16795  0014A8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16796  0014AA  5172               	movf	oled_putString@string& (0+255),w,b
 16797  0014AC  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 16798  0014AE  A4D8               	btfss	status,2,c
 16799  0014B0  0E00               	movlw	low (__mediumconst shr (0+16))
 16800  0014B2  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 16801  0014B4  0E00               	movlw	0
 16802  0014B6  6F75               	movwf	oled_putString@station_dot& (0+255),b
 16803  0014B8  0E02               	movlw	2
 16804  0014BA  6F76               	movwf	oled_putString@start_page& (0+255),b
 16805  0014BC  EC14  F029         	call	_oled_putString	;wreg free
 16806                           
 16807                           ;MOTEapp.c: 353: oled_putString("  (S2)   (S3)   ", 0,3);
 16808  0014C0  0EEF               	movlw	low STR_34
 16809  0014C2  0100               	movlb	0	; () banked
 16810  0014C4  6F72               	movwf	oled_putString@string& (0+255),b
 16811  0014C6  0E7A               	movlw	high STR_34
 16812  0014C8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16813  0014CA  5172               	movf	oled_putString@string& (0+255),w,b
 16814  0014CC  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 16815  0014CE  A4D8               	btfss	status,2,c
 16816  0014D0  0E00               	movlw	low (__mediumconst shr (0+16))
 16817  0014D2  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 16818  0014D4  0E00               	movlw	0
 16819  0014D6  6F75               	movwf	oled_putString@station_dot& (0+255),b
 16820  0014D8  0E03               	movlw	3
 16821  0014DA  6F76               	movwf	oled_putString@start_page& (0+255),b
 16822  0014DC  EC14  F029         	call	_oled_putString	;wreg free
 16823  0014E0                     l10727:
 16824                           
 16825                           ;MOTEapp.c: 354: activeState = moteJoinMethod;
 16826  0014E0  0E02               	movlw	2
 16827  0014E2  D7B4               	goto	L13
 16828  0014E4                     l418:
 16829                           
 16830                           ; BSR set to: 0
 16831                           ;MOTEapp.c: 356: else
 16832                           ;MOTEapp.c: 357: {
 16833                           ;MOTEapp.c: 358: sendCommand("sys reset");
 16834                           
 16835                           ; BSR set to: 0
 16836  0014E4  0EFD               	movlw	low STR_30
 16837  0014E6  6F61               	movwf	sendCommand@string& (0+255),b
 16838  0014E8  0E7E               	movlw	high STR_30
 16839  0014EA  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16840  0014EC  EC5B  F02E         	call	_sendCommand	;wreg free
 16841                           
 16842                           ;MOTEapp.c: 359: moteApp_delayms(25);
 16843  0014F0  0E00               	movlw	0
 16844  0014F2  0100               	movlb	0	; () banked
 16845  0014F4  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 16846  0014F6  0E19               	movlw	25
 16847  0014F8  6F60               	movwf	moteApp_delayms@length& (0+255),b
 16848  0014FA  ECA8  F02E         	call	_moteApp_delayms	;wreg free
 16849                           
 16850                           ;MOTEapp.c: 360: activeState = moteStartup;
 16851  0014FE  0E00               	movlw	0
 16852  001500  D7A5               	goto	L13
 16853  001502                     
 16854                           ; BSR set to: 0
 16855                           ;MOTEapp.c: 365: if (changeStates)
 16856                           
 16857                           ; BSR set to: 0
 16858  001502  5178               	movf	moteJoiningProcess@changeStates& (0+255),w,b
 16859  001504  B4D8               	btfsc	status,2,c
 16860  001506  D01E               	goto	l421
 16861                           
 16862                           ; BSR set to: 0
 16863                           ;MOTEapp.c: 366: {
 16864                           ;MOTEapp.c: 367: oled_putString("  (S2)          ", 0,3);
 16865  001508  0EBC               	movlw	low STR_40
 16866  00150A  6F72               	movwf	oled_putString@string& (0+255),b
 16867  00150C  0E7A               	movlw	high STR_40
 16868  00150E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16869  001510  5172               	movf	oled_putString@string& (0+255),w,b
 16870  001512  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 16871  001514  A4D8               	btfss	status,2,c
 16872  001516  0E00               	movlw	low (__mediumconst shr (0+16))
 16873  001518  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 16874  00151A  0E00               	movlw	0
 16875  00151C  6F75               	movwf	oled_putString@station_dot& (0+255),b
 16876  00151E  0E03               	movlw	3
 16877  001520  6F76               	movwf	oled_putString@start_page& (0+255),b
 16878  001522  EC14  F029         	call	_oled_putString	;wreg free
 16879                           
 16880                           ;MOTEapp.c: 368: moteApp_delayms(500);
 16881  001526  0E01               	movlw	1
 16882  001528  0100               	movlb	0	; () banked
 16883  00152A  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 16884  00152C  0EF4               	movlw	244
 16885  00152E  6F60               	movwf	moteApp_delayms@length& (0+255),b
 16886  001530  ECA8  F02E         	call	_moteApp_delayms	;wreg free
 16887                           
 16888                           ;MOTEapp.c: 369: sendCommand("mac join abp");
 16889  001534  0EE8               	movlw	low STR_41
 16890  001536  0100               	movlb	0	; () banked
 16891  001538  6F61               	movwf	sendCommand@string& (0+255),b
 16892  00153A  0E7D               	movlw	high STR_41
 16893  00153C  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16894  00153E  EC5B  F02E         	call	_sendCommand	;wreg free
 16895  001542  D06D               	goto	l10773
 16896  001544                     l421:
 16897                           
 16898                           ; BSR set to: 0
 16899                           ;MOTEapp.c: 372: else if (selectButton)
 16900                           
 16901                           ; BSR set to: 0
 16902  001544  5179               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 16903  001546  B4D8               	btfsc	status,2,c
 16904  001548  D20C               	goto	l411
 16905                           
 16906                           ; BSR set to: 0
 16907                           ;MOTEapp.c: 373: {
 16908                           ;MOTEapp.c: 374: oled_putString("         (S3)   ", 0,3);
 16909  00154A  0EDE               	movlw	low STR_42
 16910  00154C  6F72               	movwf	oled_putString@string& (0+255),b
 16911  00154E  0E7A               	movlw	high STR_42
 16912  001550  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 16913  001552  5172               	movf	oled_putString@string& (0+255),w,b
 16914  001554  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 16915  001556  A4D8               	btfss	status,2,c
 16916  001558  0E00               	movlw	low (__mediumconst shr (0+16))
 16917  00155A  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 16918  00155C  0E00               	movlw	0
 16919  00155E  6F75               	movwf	oled_putString@station_dot& (0+255),b
 16920  001560  0E03               	movlw	3
 16921  001562  6F76               	movwf	oled_putString@start_page& (0+255),b
 16922  001564  EC14  F029         	call	_oled_putString	;wreg free
 16923                           
 16924                           ;MOTEapp.c: 375: moteApp_delayms(500);
 16925  001568  0E01               	movlw	1
 16926  00156A  0100               	movlb	0	; () banked
 16927  00156C  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 16928  00156E  0EF4               	movlw	244
 16929  001570  6F60               	movwf	moteApp_delayms@length& (0+255),b
 16930  001572  ECA8  F02E         	call	_moteApp_delayms	;wreg free
 16931                           
 16932                           ;MOTEapp.c: 376: sendCommand("mac join otaa");
 16933  001576  0E3C               	movlw	low STR_43
 16934  001578  0100               	movlb	0	; () banked
 16935  00157A  6F61               	movwf	sendCommand@string& (0+255),b
 16936  00157C  0E7D               	movlw	high STR_43
 16937  00157E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 16938  001580  EC5B  F02E         	call	_sendCommand	;wreg free
 16939  001584  D161               	goto	l10839
 16940  001586                     
 16941                           ; BSR set to: 0
 16942                           ;MOTEapp.c: 381: if ( messageReady )
 16943                           
 16944                           ; BSR set to: 0
 16945  001586  517D               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 16946  001588  B4D8               	btfsc	status,2,c
 16947  00158A  D1EB               	goto	l411
 16948                           
 16949                           ; BSR set to: 0
 16950                           ;MOTEapp.c: 382: {
 16951                           ;MOTEapp.c: 383: if(strcmp(moduleResonseBuffer, "ok") == 0)
 16952  00158C  0E67               	movlw	low _moduleResonseBuffer
 16953  00158E  6F60               	movwf	strcmp@s1& (0+255),b
 16954  001590  0E01               	movlw	high _moduleResonseBuffer
 16955  001592  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 16956  001594  0EF8               	movlw	low STR_44
 16957  001596  6F62               	movwf	strcmp@s2& (0+255),b
 16958  001598  0E7F               	movlw	high STR_44
 16959  00159A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 16960  00159C  EC5B  F02C         	call	_strcmp	;wreg free
 16961  0015A0  0100               	movlb	0	; () banked
 16962  0015A2  5160               	movf	?_strcmp& (0+255),w,b
 16963  0015A4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 16964  0015A6  A4D8               	btfss	status,2,c
 16965  0015A8  D002               	goto	l426
 16966                           
 16967                           ; BSR set to: 0
 16968                           ;MOTEapp.c: 384: {
 16969                           ;MOTEapp.c: 385: activeState = moteWaitAbp;
 16970  0015AA  0E04               	movlw	4
 16971  0015AC  D750               	goto	L14
 16972  0015AE                     l426:
 16973                           
 16974                           ; BSR set to: 0
 16975                           ;MOTEapp.c: 387: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 16976                           
 16977                           ; BSR set to: 0
 16978  0015AE  0E67               	movlw	low _moduleResonseBuffer
 16979  0015B0  6F60               	movwf	strcmp@s1& (0+255),b
 16980  0015B2  0E01               	movlw	high _moduleResonseBuffer
 16981  0015B4  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 16982  0015B6  0E58               	movlw	low STR_45
 16983  0015B8  6F62               	movwf	strcmp@s2& (0+255),b
 16984  0015BA  0E7D               	movlw	high STR_45
 16985  0015BC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 16986  0015BE  EC5B  F02C         	call	_strcmp	;wreg free
 16987  0015C2  0100               	movlb	0	; () banked
 16988  0015C4  5160               	movf	?_strcmp& (0+255),w,b
 16989  0015C6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 16990  0015C8  A4D8               	btfss	status,2,c
 16991  0015CA  D023               	goto	l428
 16992                           
 16993                           ; BSR set to: 0
 16994                           ;MOTEapp.c: 388: {
 16995                           ;MOTEapp.c: 389: oled_clear();
 16996  0015CC  EC7E  F030         	call	_oled_clear	;wreg free
 16997                           
 16998                           ;MOTEapp.c: 390: oled_putString("Valid Keys",0,0);
 16999  0015D0  0EB5               	movlw	low STR_46
 17000  0015D2  0100               	movlb	0	; () banked
 17001  0015D4  6F72               	movwf	oled_putString@string& (0+255),b
 17002  0015D6  0E7E               	movlw	high STR_46
 17003  0015D8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17004  0015DA  5172               	movf	oled_putString@string& (0+255),w,b
 17005  0015DC  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17006  0015DE  A4D8               	btfss	status,2,c
 17007  0015E0  0E00               	movlw	low (__mediumconst shr (0+16))
 17008  0015E2  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17009  0015E4  0E00               	movlw	0
 17010  0015E6  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17011  0015E8  0E00               	movlw	0
 17012  0015EA  6F76               	movwf	oled_putString@start_page& (0+255),b
 17013  0015EC  EC14  F029         	call	_oled_putString	;wreg free
 17014                           
 17015                           ;MOTEapp.c: 391: oled_putString("Required",0,1);
 17016  0015F0  0E1A               	movlw	low STR_47
 17017  0015F2  0100               	movlb	0	; () banked
 17018  0015F4  6F72               	movwf	oled_putString@string& (0+255),b
 17019  0015F6  0E7F               	movlw	high STR_47
 17020  0015F8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17021  0015FA  5172               	movf	oled_putString@string& (0+255),w,b
 17022  0015FC  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17023  0015FE  A4D8               	btfss	status,2,c
 17024  001600  0E00               	movlw	low (__mediumconst shr (0+16))
 17025  001602  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17026  001604  0E00               	movlw	0
 17027  001606  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17028  001608  0E01               	movlw	1
 17029  00160A  6F76               	movwf	oled_putString@start_page& (0+255),b
 17030  00160C  EC14  F029         	call	_oled_putString	;wreg free
 17031  001610  D08A               	goto	l10805
 17032  001612                     l428:
 17033                           
 17034                           ; BSR set to: 0
 17035                           ;MOTEapp.c: 394: else
 17036                           ;MOTEapp.c: 395: {
 17037                           ;MOTEapp.c: 396: sendCommand("mac join abp");
 17038                           
 17039                           ; BSR set to: 0
 17040  001612  0EE8               	movlw	low STR_41
 17041  001614  6F61               	movwf	sendCommand@string& (0+255),b
 17042  001616  0E7D               	movlw	high STR_41
 17043  001618  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17044  00161A  EC5B  F02E         	call	_sendCommand	;wreg free
 17045  00161E                     l10773:
 17046                           
 17047                           ;MOTEapp.c: 397: activeState = moteCheckAbp;
 17048  00161E  0E03               	movlw	3
 17049  001620  D715               	goto	L13
 17050  001622                     
 17051                           ; BSR set to: 0
 17052                           ;MOTEapp.c: 402: if ( messageReady )
 17053                           
 17054                           ; BSR set to: 0
 17055  001622  517D               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 17056  001624  B4D8               	btfsc	status,2,c
 17057  001626  D19D               	goto	l411
 17058                           
 17059                           ; BSR set to: 0
 17060                           ;MOTEapp.c: 403: {
 17061                           ;MOTEapp.c: 404: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 17062  001628  0E67               	movlw	low _moduleResonseBuffer
 17063  00162A  6F60               	movwf	strcmp@s1& (0+255),b
 17064  00162C  0E01               	movlw	high _moduleResonseBuffer
 17065  00162E  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17066  001630  0E23               	movlw	low STR_49
 17067  001632  6F62               	movwf	strcmp@s2& (0+255),b
 17068  001634  0E7F               	movlw	high STR_49
 17069  001636  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17070  001638  EC5B  F02C         	call	_strcmp	;wreg free
 17071  00163C  0100               	movlb	0	; () banked
 17072  00163E  5160               	movf	?_strcmp& (0+255),w,b
 17073  001640  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17074  001642  A4D8               	btfss	status,2,c
 17075  001644  D023               	goto	l432
 17076                           
 17077                           ; BSR set to: 0
 17078                           ;MOTEapp.c: 405: {
 17079                           ;MOTEapp.c: 406: oled_clear();
 17080  001646  EC7E  F030         	call	_oled_clear	;wreg free
 17081                           
 17082                           ;MOTEapp.c: 407: oled_putString("ABP Join ",0,0);
 17083  00164A  0ED5               	movlw	low STR_50
 17084  00164C  0100               	movlb	0	; () banked
 17085  00164E  6F72               	movwf	oled_putString@string& (0+255),b
 17086  001650  0E7E               	movlw	high STR_50
 17087  001652  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17088  001654  5172               	movf	oled_putString@string& (0+255),w,b
 17089  001656  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17090  001658  A4D8               	btfss	status,2,c
 17091  00165A  0E00               	movlw	low (__mediumconst shr (0+16))
 17092  00165C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17093  00165E  0E00               	movlw	0
 17094  001660  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17095  001662  0E00               	movlw	0
 17096  001664  6F76               	movwf	oled_putString@start_page& (0+255),b
 17097  001666  EC14  F029         	call	_oled_putString	;wreg free
 17098                           
 17099                           ;MOTEapp.c: 408: oled_putString("Successful",0,1);
 17100  00166A  0E9F               	movlw	low STR_51
 17101  00166C  0100               	movlb	0	; () banked
 17102  00166E  6F72               	movwf	oled_putString@string& (0+255),b
 17103  001670  0E7E               	movlw	high STR_51
 17104  001672  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17105  001674  5172               	movf	oled_putString@string& (0+255),w,b
 17106  001676  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17107  001678  A4D8               	btfss	status,2,c
 17108  00167A  0E00               	movlw	low (__mediumconst shr (0+16))
 17109  00167C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17110  00167E  0E00               	movlw	0
 17111  001680  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17112  001682  0E01               	movlw	1
 17113  001684  6F76               	movwf	oled_putString@start_page& (0+255),b
 17114  001686  EC14  F029         	call	_oled_putString	;wreg free
 17115  00168A  D0A4               	goto	l10827
 17116  00168C                     l432:
 17117                           
 17118                           ; BSR set to: 0
 17119                           ;MOTEapp.c: 411: else
 17120                           ;MOTEapp.c: 412: {
 17121                           ;MOTEapp.c: 413: sendCommand("mac reset");
 17122                           
 17123                           ; BSR set to: 0
 17124  00168C  0EF3               	movlw	low STR_52
 17125  00168E  6F61               	movwf	sendCommand@string& (0+255),b
 17126  001690  0E7E               	movlw	high STR_52
 17127  001692  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17128  001694  EC5B  F02E         	call	_sendCommand	;wreg free
 17129  001698                     l10789:
 17130                           
 17131                           ;MOTEapp.c: 414: activeState = moteReset;
 17132  001698  0E01               	movlw	1
 17133  00169A  D6D8               	goto	L13
 17134  00169C                     
 17135                           ; BSR set to: 0
 17136                           ;MOTEapp.c: 420: if ( messageReady )
 17137                           
 17138                           ; BSR set to: 0
 17139  00169C  517D               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 17140  00169E  B4D8               	btfsc	status,2,c
 17141  0016A0  D160               	goto	l411
 17142                           
 17143                           ; BSR set to: 0
 17144                           ;MOTEapp.c: 421: {
 17145                           ;MOTEapp.c: 422: if(strcmp(moduleResonseBuffer, "ok") == 0)
 17146  0016A2  0E67               	movlw	low _moduleResonseBuffer
 17147  0016A4  6F60               	movwf	strcmp@s1& (0+255),b
 17148  0016A6  0E01               	movlw	high _moduleResonseBuffer
 17149  0016A8  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17150  0016AA  0EF8               	movlw	low STR_44
 17151  0016AC  6F62               	movwf	strcmp@s2& (0+255),b
 17152  0016AE  0E7F               	movlw	high STR_44
 17153  0016B0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17154  0016B2  EC5B  F02C         	call	_strcmp	;wreg free
 17155  0016B6  0100               	movlb	0	; () banked
 17156  0016B8  5160               	movf	?_strcmp& (0+255),w,b
 17157  0016BA  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17158  0016BC  A4D8               	btfss	status,2,c
 17159  0016BE  D002               	goto	l436
 17160                           
 17161                           ; BSR set to: 0
 17162                           ;MOTEapp.c: 423: {
 17163                           ;MOTEapp.c: 424: activeState = moteWaitOtaa;
 17164  0016C0  0E06               	movlw	6
 17165  0016C2  D6C5               	goto	L14
 17166  0016C4                     l436:
 17167                           
 17168                           ; BSR set to: 0
 17169                           ;MOTEapp.c: 426: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 17170                           
 17171                           ; BSR set to: 0
 17172  0016C4  0E67               	movlw	low _moduleResonseBuffer
 17173  0016C6  6F60               	movwf	strcmp@s1& (0+255),b
 17174  0016C8  0E01               	movlw	high _moduleResonseBuffer
 17175  0016CA  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17176  0016CC  0E58               	movlw	low STR_45
 17177  0016CE  6F62               	movwf	strcmp@s2& (0+255),b
 17178  0016D0  0E7D               	movlw	high STR_45
 17179  0016D2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17180  0016D4  EC5B  F02C         	call	_strcmp	;wreg free
 17181  0016D8  0100               	movlb	0	; () banked
 17182  0016DA  5160               	movf	?_strcmp& (0+255),w,b
 17183  0016DC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17184  0016DE  A4D8               	btfss	status,2,c
 17185  0016E0  D024               	goto	l438
 17186                           
 17187                           ; BSR set to: 0
 17188                           ;MOTEapp.c: 427: {
 17189                           ;MOTEapp.c: 428: oled_clear();
 17190  0016E2  EC7E  F030         	call	_oled_clear	;wreg free
 17191                           
 17192                           ;MOTEapp.c: 429: oled_putString("Valid Keys",0,0);
 17193  0016E6  0EB5               	movlw	low STR_46
 17194  0016E8  0100               	movlb	0	; () banked
 17195  0016EA  6F72               	movwf	oled_putString@string& (0+255),b
 17196  0016EC  0E7E               	movlw	high STR_46
 17197  0016EE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17198  0016F0  5172               	movf	oled_putString@string& (0+255),w,b
 17199  0016F2  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17200  0016F4  A4D8               	btfss	status,2,c
 17201  0016F6  0E00               	movlw	low (__mediumconst shr (0+16))
 17202  0016F8  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17203  0016FA  0E00               	movlw	0
 17204  0016FC  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17205  0016FE  0E00               	movlw	0
 17206  001700  6F76               	movwf	oled_putString@start_page& (0+255),b
 17207  001702  EC14  F029         	call	_oled_putString	;wreg free
 17208                           
 17209                           ;MOTEapp.c: 430: oled_putString("Required",0,1);
 17210  001706  0E1A               	movlw	low STR_47
 17211  001708  0100               	movlb	0	; () banked
 17212  00170A  6F72               	movwf	oled_putString@string& (0+255),b
 17213  00170C  0E7F               	movlw	high STR_47
 17214  00170E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17215  001710  5172               	movf	oled_putString@string& (0+255),w,b
 17216  001712  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17217  001714  A4D8               	btfss	status,2,c
 17218  001716  0E00               	movlw	low (__mediumconst shr (0+16))
 17219  001718  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17220  00171A  0E00               	movlw	0
 17221  00171C  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17222  00171E  0E01               	movlw	1
 17223  001720  6F76               	movwf	oled_putString@start_page& (0+255),b
 17224  001722  EC14  F029         	call	_oled_putString	;wreg free
 17225  001726                     l10805:
 17226                           
 17227                           ;MOTEapp.c: 431: activeState = moteNeedKeys;
 17228  001726  0E09               	movlw	9
 17229  001728  D691               	goto	L13
 17230  00172A                     l438:
 17231                           
 17232                           ; BSR set to: 0
 17233                           ;MOTEapp.c: 433: else if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 17234                           
 17235                           ; BSR set to: 0
 17236  00172A  0E67               	movlw	low _moduleResonseBuffer
 17237  00172C  6F60               	movwf	strcmp@s1& (0+255),b
 17238  00172E  0E01               	movlw	high _moduleResonseBuffer
 17239  001730  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17240  001732  0E4A               	movlw	low STR_57
 17241  001734  6F62               	movwf	strcmp@s2& (0+255),b
 17242  001736  0E7D               	movlw	high STR_57
 17243  001738  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17244  00173A  EC5B  F02C         	call	_strcmp	;wreg free
 17245  00173E  0100               	movlb	0	; () banked
 17246  001740  5160               	movf	?_strcmp& (0+255),w,b
 17247  001742  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17248  001744  A4D8               	btfss	status,2,c
 17249  001746  D007               	goto	l440
 17250                           
 17251                           ; BSR set to: 0
 17252                           ;MOTEapp.c: 434: {
 17253                           ;MOTEapp.c: 435: sendCommand("mac join otaa");
 17254  001748  0E3C               	movlw	low STR_43
 17255  00174A  6F61               	movwf	sendCommand@string& (0+255),b
 17256  00174C  0E7D               	movlw	high STR_43
 17257  00174E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17258  001750  EC5B  F02E         	call	_sendCommand	;wreg free
 17259  001754  D079               	goto	l10839
 17260  001756                     l440:
 17261                           
 17262                           ; BSR set to: 0
 17263                           ;MOTEapp.c: 438: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 17264                           
 17265                           ; BSR set to: 0
 17266  001756  0E67               	movlw	low _moduleResonseBuffer
 17267  001758  6F60               	movwf	strcmp@s1& (0+255),b
 17268  00175A  0E01               	movlw	high _moduleResonseBuffer
 17269  00175C  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17270  00175E  0E94               	movlw	low STR_59
 17271  001760  6F62               	movwf	strcmp@s2& (0+255),b
 17272  001762  0E7E               	movlw	high STR_59
 17273  001764  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17274  001766  EC5B  F02C         	call	_strcmp	;wreg free
 17275  00176A  D07A               	goto	L15
 17276  00176C                     
 17277                           ; BSR set to: 0
 17278                           ;MOTEapp.c: 445: if ( messageReady )
 17279                           
 17280                           ; BSR set to: 0
 17281  00176C  517D               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 17282  00176E  B4D8               	btfsc	status,2,c
 17283  001770  D0F8               	goto	l411
 17284                           
 17285                           ; BSR set to: 0
 17286                           ;MOTEapp.c: 446: {
 17287                           ;MOTEapp.c: 447: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 17288  001772  0E67               	movlw	low _moduleResonseBuffer
 17289  001774  6F60               	movwf	strcmp@s1& (0+255),b
 17290  001776  0E01               	movlw	high _moduleResonseBuffer
 17291  001778  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17292  00177A  0E23               	movlw	low STR_49
 17293  00177C  6F62               	movwf	strcmp@s2& (0+255),b
 17294  00177E  0E7F               	movlw	high STR_49
 17295  001780  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17296  001782  EC5B  F02C         	call	_strcmp	;wreg free
 17297  001786  0100               	movlb	0	; () banked
 17298  001788  5160               	movf	?_strcmp& (0+255),w,b
 17299  00178A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17300  00178C  A4D8               	btfss	status,2,c
 17301  00178E  D024               	goto	l445
 17302                           
 17303                           ; BSR set to: 0
 17304                           ;MOTEapp.c: 448: {
 17305                           ;MOTEapp.c: 449: oled_clear();
 17306  001790  EC7E  F030         	call	_oled_clear	;wreg free
 17307                           
 17308                           ;MOTEapp.c: 450: oled_putString("OTAA Join ",0,0);
 17309  001794  0E89               	movlw	low STR_61
 17310  001796  0100               	movlb	0	; () banked
 17311  001798  6F72               	movwf	oled_putString@string& (0+255),b
 17312  00179A  0E7E               	movlw	high STR_61
 17313  00179C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17314  00179E  5172               	movf	oled_putString@string& (0+255),w,b
 17315  0017A0  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17316  0017A2  A4D8               	btfss	status,2,c
 17317  0017A4  0E00               	movlw	low (__mediumconst shr (0+16))
 17318  0017A6  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17319  0017A8  0E00               	movlw	0
 17320  0017AA  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17321  0017AC  0E00               	movlw	0
 17322  0017AE  6F76               	movwf	oled_putString@start_page& (0+255),b
 17323  0017B0  EC14  F029         	call	_oled_putString	;wreg free
 17324                           
 17325                           ;MOTEapp.c: 451: oled_putString("Successful",0,1);
 17326  0017B4  0E9F               	movlw	low STR_51
 17327  0017B6  0100               	movlb	0	; () banked
 17328  0017B8  6F72               	movwf	oled_putString@string& (0+255),b
 17329  0017BA  0E7E               	movlw	high STR_51
 17330  0017BC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17331  0017BE  5172               	movf	oled_putString@string& (0+255),w,b
 17332  0017C0  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17333  0017C2  A4D8               	btfss	status,2,c
 17334  0017C4  0E00               	movlw	low (__mediumconst shr (0+16))
 17335  0017C6  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17336  0017C8  0E00               	movlw	0
 17337  0017CA  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17338  0017CC  0E01               	movlw	1
 17339  0017CE  6F76               	movwf	oled_putString@start_page& (0+255),b
 17340  0017D0  EC14  F029         	call	_oled_putString	;wreg free
 17341  0017D4                     l10827:
 17342                           
 17343                           ;MOTEapp.c: 452: activeState = moteJoined;
 17344  0017D4  0E07               	movlw	7
 17345  0017D6  D63A               	goto	L13
 17346  0017D8                     l445:
 17347                           
 17348                           ; BSR set to: 0
 17349                           ;MOTEapp.c: 454: else if(strcmp(moduleResonseBuffer, "denied") == 0)
 17350                           
 17351                           ; BSR set to: 0
 17352  0017D8  0E67               	movlw	low _moduleResonseBuffer
 17353  0017DA  6F60               	movwf	strcmp@s1& (0+255),b
 17354  0017DC  0E01               	movlw	high _moduleResonseBuffer
 17355  0017DE  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17356  0017E0  0E96               	movlw	low STR_63
 17357  0017E2  6F62               	movwf	strcmp@s2& (0+255),b
 17358  0017E4  0E7F               	movlw	high STR_63
 17359  0017E6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17360  0017E8  EC5B  F02C         	call	_strcmp	;wreg free
 17361  0017EC  0100               	movlb	0	; () banked
 17362  0017EE  5160               	movf	?_strcmp& (0+255),w,b
 17363  0017F0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17364  0017F2  A4D8               	btfss	status,2,c
 17365  0017F4  D02B               	goto	l447
 17366                           
 17367                           ; BSR set to: 0
 17368                           ;MOTEapp.c: 455: {
 17369                           ;MOTEapp.c: 456: oled_clear();
 17370  0017F6  EC7E  F030         	call	_oled_clear	;wreg free
 17371                           
 17372                           ;MOTEapp.c: 457: oled_putString("OTAA Join",1,0);
 17373  0017FA  0EE9               	movlw	low STR_64
 17374  0017FC  0100               	movlb	0	; () banked
 17375  0017FE  6F72               	movwf	oled_putString@string& (0+255),b
 17376  001800  0E7E               	movlw	high STR_64
 17377  001802  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17378  001804  5172               	movf	oled_putString@string& (0+255),w,b
 17379  001806  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17380  001808  A4D8               	btfss	status,2,c
 17381  00180A  0E00               	movlw	low (__mediumconst shr (0+16))
 17382  00180C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17383  00180E  0E01               	movlw	1
 17384  001810  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17385  001812  0E00               	movlw	0
 17386  001814  6F76               	movwf	oled_putString@start_page& (0+255),b
 17387  001816  EC14  F029         	call	_oled_putString	;wreg free
 17388                           
 17389                           ;MOTEapp.c: 458: oled_putString("Denied",2,1);
 17390  00181A  0E8F               	movlw	low STR_65
 17391  00181C  0100               	movlb	0	; () banked
 17392  00181E  6F72               	movwf	oled_putString@string& (0+255),b
 17393  001820  0E7F               	movlw	high STR_65
 17394  001822  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17395  001824  5172               	movf	oled_putString@string& (0+255),w,b
 17396  001826  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17397  001828  A4D8               	btfss	status,2,c
 17398  00182A  0E00               	movlw	low (__mediumconst shr (0+16))
 17399  00182C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17400  00182E  0E02               	movlw	2
 17401  001830  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17402  001832  0E01               	movlw	1
 17403  001834  6F76               	movwf	oled_putString@start_page& (0+255),b
 17404  001836  EC14  F029         	call	_oled_putString	;wreg free
 17405                           
 17406                           ;MOTEapp.c: 459: sendCommand("mac join otaa");
 17407  00183A  0E3C               	movlw	low STR_43
 17408  00183C  0100               	movlb	0	; () banked
 17409  00183E  6F61               	movwf	sendCommand@string& (0+255),b
 17410  001840  0E7D               	movlw	high STR_43
 17411  001842  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17412  001844  EC5B  F02E         	call	_sendCommand	;wreg free
 17413  001848                     l10839:
 17414                           
 17415                           ;MOTEapp.c: 460: activeState = moteCheckOtaa;
 17416  001848  0E05               	movlw	5
 17417  00184A  D600               	goto	L13
 17418  00184C                     l447:
 17419                           
 17420                           ; BSR set to: 0
 17421                           ;MOTEapp.c: 462: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 17422                           
 17423                           ; BSR set to: 0
 17424  00184C  0E67               	movlw	low _moduleResonseBuffer
 17425  00184E  6F60               	movwf	strcmp@s1& (0+255),b
 17426  001850  0E01               	movlw	high _moduleResonseBuffer
 17427  001852  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17428  001854  0E94               	movlw	low STR_59
 17429  001856  6F62               	movwf	strcmp@s2& (0+255),b
 17430  001858  0E7E               	movlw	high STR_59
 17431  00185A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17432  00185C  EC5B  F02C         	call	_strcmp	;wreg free
 17433  001860                     L15:
 17434  001860  0100               	movlb	0	; () banked
 17435  001862  5160               	movf	?_strcmp& (0+255),w,b
 17436  001864  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17437  001866  A4D8               	btfss	status,2,c
 17438  001868  D07C               	goto	l411
 17439                           
 17440                           ; BSR set to: 0
 17441                           ;MOTEapp.c: 463: {
 17442                           ;MOTEapp.c: 464: activeState = moteStartup;
 17443  00186A  0E00               	movlw	0
 17444  00186C  D5F0               	goto	L14
 17445  00186E                     
 17446                           ; BSR set to: 0
 17447                           ;MOTEapp.c: 469: sendCommand("mac get dr");
 17448                           
 17449                           ; BSR set to: 0
 17450  00186E  0EAA               	movlw	low STR_68
 17451  001870  6F61               	movwf	sendCommand@string& (0+255),b
 17452  001872  0E7E               	movlw	high STR_68
 17453  001874  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17454  001876  EC5B  F02E         	call	_sendCommand	;wreg free
 17455  00187A  D018               	goto	l10855
 17456  00187C                     
 17457                           ; BSR set to: 0
 17458                           ;MOTEapp.c: 473: if ( messageReady )
 17459                           
 17460                           ; BSR set to: 0
 17461  00187C  517D               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 17462  00187E  B4D8               	btfsc	status,2,c
 17463  001880  D070               	goto	l411
 17464                           
 17465                           ; BSR set to: 0
 17466                           ;MOTEapp.c: 474: {
 17467                           ;MOTEapp.c: 475: if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 17468  001882  0E67               	movlw	low _moduleResonseBuffer
 17469  001884  6F60               	movwf	strcmp@s1& (0+255),b
 17470  001886  0E01               	movlw	high _moduleResonseBuffer
 17471  001888  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17472  00188A  0E4A               	movlw	low STR_57
 17473  00188C  6F62               	movwf	strcmp@s2& (0+255),b
 17474  00188E  0E7D               	movlw	high STR_57
 17475  001890  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17476  001892  EC5B  F02C         	call	_strcmp	;wreg free
 17477  001896  0100               	movlb	0	; () banked
 17478  001898  5160               	movf	?_strcmp& (0+255),w,b
 17479  00189A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17480  00189C  A4D8               	btfss	status,2,c
 17481  00189E  D008               	goto	l453
 17482                           
 17483                           ; BSR set to: 0
 17484                           ;MOTEapp.c: 476: {
 17485                           ;MOTEapp.c: 477: sendCommand("mac get dr");
 17486  0018A0  0EAA               	movlw	low STR_68
 17487  0018A2  6F61               	movwf	sendCommand@string& (0+255),b
 17488  0018A4  0E7E               	movlw	high STR_68
 17489  0018A6  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17490  0018A8  EC5B  F02E         	call	_sendCommand	;wreg free
 17491  0018AC                     l10855:
 17492                           
 17493                           ;MOTEapp.c: 478: activeState = moteGetDr;
 17494  0018AC  0E08               	movlw	8
 17495  0018AE  D5CE               	goto	L13
 17496  0018B0                     l453:
 17497                           
 17498                           ; BSR set to: 0
 17499                           ;MOTEapp.c: 480: else
 17500                           ;MOTEapp.c: 481: {
 17501                           ;MOTEapp.c: 482: uint8_t readDataRate;
 17502                           ;MOTEapp.c: 483: readDataRate = moduleResonseBuffer[0] - '0';
 17503                           
 17504                           ; BSR set to: 0
 17505  0018B0  0101               	movlb	1	; () banked
 17506  0018B2  5167               	movf	_moduleResonseBuffer& (0+255),w,b
 17507  0018B4  0FD0               	addlw	208
 17508  0018B6  0100               	movlb	0	; () banked
 17509  0018B8  6F7B               	movwf	moteJoiningProcess@readDataRate& (0+255),b
 17510                           
 17511                           ; BSR set to: 0
 17512                           ;MOTEapp.c: 484: dataRateValue = readDataRate;
 17513  0018BA  C07B  F0FC         	movff	moteJoiningProcess@readDataRate,_dataRateValue
 17514                           
 17515                           ; BSR set to: 0
 17516                           ;MOTEapp.c: 485: joiningComplete = 1;
 17517  0018BE  0E01               	movlw	1
 17518  0018C0  6F7C               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 17519                           
 17520                           ; BSR set to: 0
 17521                           ;MOTEapp.c: 486: }
 17522                           ;MOTEapp.c: 487: }
 17523                           ;MOTEapp.c: 488: break;
 17524                           
 17525                           ; BSR set to: 0
 17526  0018C2  D04F               	goto	l411
 17527  0018C4                     
 17528                           ; BSR set to: 0
 17529                           ;MOTEapp.c: 490: if (selectButton)
 17530                           
 17531                           ; BSR set to: 0
 17532  0018C4  5179               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 17533  0018C6  B4D8               	btfsc	status,2,c
 17534  0018C8  D04C               	goto	l411
 17535                           
 17536                           ; BSR set to: 0
 17537                           ;MOTEapp.c: 491: {
 17538                           ;MOTEapp.c: 492: activeState = moteComFailure;
 17539  0018CA  0E0A               	movlw	10
 17540  0018CC  D5C0               	goto	L14
 17541  0018CE                     
 17542                           ; BSR set to: 0
 17543                           ;MOTEapp.c: 497: DATAEE_WriteByte(0x00, 0x00);
 17544                           
 17545                           ; BSR set to: 0
 17546  0018CE  0E00               	movlw	0
 17547  0018D0  6F60               	movwf	DATAEE_WriteByte@bData& (0+255),b
 17548  0018D2  0E00               	movlw	0
 17549  0018D4  ECAE  F02D         	call	_DATAEE_WriteByte
 17550  0018D8  B281               	btfsc	3969,1,c	;volatile
 17551  0018DA  D002               	goto	u9580
 17552  0018DC  A081               	btfss	3969,0,c	;volatile
 17553  0018DE  D7FC               	goto	l459
 17554  0018E0                     u9580:
 17555                           
 17556                           ;MOTEapp.c: 499: _delay((unsigned long)((16)*(48000000/4000.0)));
 17557  0018E0  0EFA               	movlw	250
 17558  0018E2  0100               	movlb	0	; () banked
 17559  0018E4  6F7A               	movwf	??_moteJoiningProcess& (0+255),b
 17560  0018E6  0E58               	movlw	88
 17561  0018E8                     u11687:
 17562  0018E8  2EE8               	decfsz	wreg,f,c
 17563  0018EA  D7FE               	bra	u11687
 17564  0018EC  2F7A               	decfsz	??_moteJoiningProcess& (0+255),f,b
 17565  0018EE  D7FC               	bra	u11687
 17566  0018F0  F000               	nop	
 17567                           
 17568                           ;MOTEapp.c: 500: _delay((unsigned long)((16)*(48000000/4000.0)));
 17569  0018F2  0EFA               	movlw	250
 17570  0018F4  0100               	movlb	0	; () banked
 17571  0018F6  6F7A               	movwf	??_moteJoiningProcess& (0+255),b
 17572  0018F8  0E58               	movlw	88
 17573  0018FA                     u11697:
 17574  0018FA  2EE8               	decfsz	wreg,f,c
 17575  0018FC  D7FE               	bra	u11697
 17576  0018FE  2F7A               	decfsz	??_moteJoiningProcess& (0+255),f,b
 17577  001900  D7FC               	bra	u11697
 17578  001902  F000               	nop	
 17579                           
 17580                           ;MOTEapp.c: 501: _delay((unsigned long)((16)*(48000000/4000.0)));
 17581  001904  0EFA               	movlw	250
 17582  001906  0100               	movlb	0	; () banked
 17583  001908  6F7A               	movwf	??_moteJoiningProcess& (0+255),b
 17584  00190A  0E58               	movlw	88
 17585  00190C                     u11707:
 17586  00190C  2EE8               	decfsz	wreg,f,c
 17587  00190E  D7FE               	bra	u11707
 17588  001910  2F7A               	decfsz	??_moteJoiningProcess& (0+255),f,b
 17589  001912  D7FC               	bra	u11707
 17590  001914  F000               	nop	
 17591  001916  00FF               	reset		;# 
 17592                           
 17593                           ;MOTEapp.c: 505: }
 17594                           
 17595                           ;MOTEapp.c: 504: break;
 17596  001918  D024               	goto	l411
 17597  00191A                     l406:
 17598  00191A  0100               	movlb	0	; () banked
 17599  00191C  51F4               	movf	_activeState& (0+255),w,b
 17600                           
 17601                           ; Switch size 1, requested type "space"
 17602                           ; Number of cases is 11, Range of values is 0 to 10
 17603                           ; switch strategies available:
 17604                           ; Name         Instructions Cycles
 17605                           ; simple_byte           34    18 (average)
 17606                           ;	Chosen strategy is simple_byte
 17607  00191E  0A00               	xorlw	0	; case 0
 17608  001920  B4D8               	btfsc	status,2,c
 17609  001922  D53C               	goto	l412
 17610  001924  0A01               	xorlw	1	; case 1
 17611  001926  B4D8               	btfsc	status,2,c
 17612  001928  D541               	goto	l413
 17613  00192A  0A03               	xorlw	3	; case 2
 17614  00192C  B4D8               	btfsc	status,2,c
 17615  00192E  D5E9               	goto	l420
 17616  001930  0A01               	xorlw	1	; case 3
 17617  001932  B4D8               	btfsc	status,2,c
 17618  001934  D628               	goto	l424
 17619  001936  0A07               	xorlw	7	; case 4
 17620  001938  B4D8               	btfsc	status,2,c
 17621  00193A  D673               	goto	l430
 17622  00193C  0A01               	xorlw	1	; case 5
 17623  00193E  B4D8               	btfsc	status,2,c
 17624  001940  D6AD               	goto	l434
 17625  001942  0A03               	xorlw	3	; case 6
 17626  001944  B4D8               	btfsc	status,2,c
 17627  001946  D712               	goto	l443
 17628  001948  0A01               	xorlw	1	; case 7
 17629  00194A  B4D8               	btfsc	status,2,c
 17630  00194C  D790               	goto	l450
 17631  00194E  0A0F               	xorlw	15	; case 8
 17632  001950  B4D8               	btfsc	status,2,c
 17633  001952  D794               	goto	l451
 17634  001954  0A01               	xorlw	1	; case 9
 17635  001956  B4D8               	btfsc	status,2,c
 17636  001958  D7B5               	goto	l455
 17637  00195A  0A03               	xorlw	3	; case 10
 17638  00195C  B4D8               	btfsc	status,2,c
 17639  00195E  D7B7               	goto	l457
 17640  001960  D51C               	goto	l407
 17641  001962                     l411:
 17642                           
 17643                           ;MOTEapp.c: 506: return joiningComplete;
 17644                           
 17645                           ; BSR set to: 0
 17646  001962  0100               	movlb	0	; () banked
 17647  001964  517C               	movf	moteJoiningProcess@joiningComplete& (0+255),w,b
 17648  001966  0012               	return	
 17649  001968                     __end_of_moteJoiningProcess:
 17650                           	opt stack 0
 17651                           tblptru	equ	0xFF8
 17652                           tblptrh	equ	0xFF7
 17653                           tblptrl	equ	0xFF6
 17654                           tablat	equ	0xFF5
 17655                           prodh	equ	0xFF4
 17656                           prodl	equ	0xFF3
 17657                           intcon	equ	0xFF2
 17658                           intcon3	equ	0xFF0
 17659                           postinc0	equ	0xFEE
 17660                           wreg	equ	0xFE8
 17661                           indf1	equ	0xFE7
 17662                           postdec1	equ	0xFE5
 17663                           fsr1h	equ	0xFE2
 17664                           fsr1l	equ	0xFE1
 17665                           indf2	equ	0xFDF
 17666                           fsr2h	equ	0xFDA
 17667                           fsr2l	equ	0xFD9
 17668                           status	equ	0xFD8
 17669                           
 17670 ;; *************** function _strncmp *****************
 17671 ;; Defined at:
 17672 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 17673 ;; Parameters:    Size  Location     Type
 17674 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 17675 ;;		 -> moduleResonseBuffer(64), 
 17676 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 17677 ;;		 -> STR_97(7), STR_95(7), STR_93(7), STR_90(7), 
 17678 ;;		 -> STR_35(5), STR_31(5), 
 17679 ;;  len             2    4[BANK0 ] unsigned int 
 17680 ;; Auto vars:     Size  Location     Type
 17681 ;;		None
 17682 ;; Return value:  Size  Location     Type
 17683 ;;                  2    0[BANK0 ] int 
 17684 ;; Registers used:
 17685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17686 ;; Tracked objects:
 17687 ;;		On entry : 0/0
 17688 ;;		On exit  : 0/0
 17689 ;;		Unchanged: 0/0
 17690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17691 ;;      Params:         0       6       0       0       0       0       0       0       0
 17692 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17693 ;;      Temps:          0       3       0       0       0       0       0       0       0
 17694 ;;      Totals:         0       9       0       0       0       0       0       0       0
 17695 ;;Total ram usage:        9 bytes
 17696 ;; Hardware stack levels used:    1
 17697 ;; Hardware stack levels required when called:   11
 17698 ;; This function calls:
 17699 ;;		Nothing
 17700 ;; This function is called by:
 17701 ;;		_moteJoiningProcess
 17702 ;;		_moteRunningProcess
 17703 ;; This function uses a non-reentrant model
 17704 ;;
 17705                           
 17706                           	psect	text49
 17707  004D92                     __ptext49:
 17708                           	opt stack 0
 17709  004D92                     _strncmp:
 17710                           	opt stack 17
 17711                           
 17712                           ; BSR set to: 0
 17713                           ;incstack = 0
 17714  004D92  D037               	goto	l2892
 17715  004D94                     l9763:
 17716  004D94  C060  FFD9         	movff	strncmp@s1,fsr2l
 17717  004D98  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 17718  004D9C  50DF               	movf	indf2,w,c
 17719  004D9E  B4D8               	btfsc	status,2,c
 17720  004DA0  D011               	goto	u8260
 17721  004DA2  C060  FFD9         	movff	strncmp@s1,fsr2l
 17722  004DA6  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 17723  004DAA  50DF               	movf	indf2,w,c
 17724  004DAC  0100               	movlb	0	; () banked
 17725  004DAE  6F66               	movwf	??_strncmp& (0+255),b
 17726  004DB0  C062  FFF6         	movff	strncmp@s2,tblptrl
 17727  004DB4  C063  FFF7         	movff	strncmp@s2+1,tblptrh
 17728  004DB8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17729  004DB8  6AF8               	clrf	tblptru,c
 17730  004DBA                     	endif
 17731  004DBA                     	if	0	;tblptru may be non-zero
 17732  004DBA                     	endif
 17733  004DBA  0008               	tblrd		*
 17734  004DBC  50F5               	movf	tablat,w,c
 17735  004DBE  1966               	xorwf	??_strncmp& (0+255),w,b
 17736  004DC0  B4D8               	btfsc	status,2,c
 17737  004DC2  D01B               	goto	l2894
 17738  004DC4                     u8260:
 17739                           
 17740                           ; BSR set to: 0
 17741  004DC4  C062  FFF6         	movff	strncmp@s2,tblptrl
 17742  004DC8  C063  FFF7         	movff	strncmp@s2+1,tblptrh
 17743  004DCC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17744  004DCC  6AF8               	clrf	tblptru,c
 17745  004DCE                     	endif
 17746  004DCE                     	if	0	;tblptru may be non-zero
 17747  004DCE                     	endif
 17748  004DCE  0008               	tblrd		*
 17749  004DD0  50F5               	movf	tablat,w,c
 17750  004DD2  0100               	movlb	0	; () banked
 17751  004DD4  6F66               	movwf	??_strncmp& (0+255),b
 17752  004DD6  6B67               	clrf	(??_strncmp+1)& (0+255),b
 17753  004DD8  1F66               	comf	??_strncmp& (0+255),f,b
 17754  004DDA  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 17755  004DDC  4B66               	infsnz	??_strncmp& (0+255),f,b
 17756  004DDE  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 17757  004DE0  C060  FFD9         	movff	strncmp@s1,fsr2l
 17758  004DE4  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 17759  004DE8  50DF               	movf	indf2,w,c
 17760  004DEA  6F68               	movwf	(??_strncmp+2)& (0+255),b
 17761  004DEC  5168               	movf	(??_strncmp+2)& (0+255),w,b
 17762  004DEE  2566               	addwf	??_strncmp& (0+255),w,b
 17763  004DF0  6F60               	movwf	?_strncmp& (0+255),b
 17764  004DF2  0E00               	movlw	0
 17765  004DF4  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 17766  004DF6  6F61               	movwf	(?_strncmp+1)& (0+255),b
 17767                           
 17768                           ; BSR set to: 0
 17769  004DF8  0012               	return	
 17770  004DFA                     l2894:
 17771                           
 17772                           ; BSR set to: 0
 17773                           
 17774                           ; BSR set to: 0
 17775  004DFA  4B60               	infsnz	strncmp@s1& (0+255),f,b
 17776  004DFC  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 17777  004DFE  4B62               	infsnz	strncmp@s2& (0+255),f,b
 17778  004E00  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 17779  004E02                     l2892:
 17780                           
 17781                           ; BSR set to: 0
 17782  004E02  0100               	movlb	0	; () banked
 17783  004E04  0764               	decf	strncmp@len& (0+255),f,b
 17784  004E06  A0D8               	btfss	status,0,c
 17785  004E08  0765               	decf	(strncmp@len+1)& (0+255),f,b
 17786  004E0A  2964               	incf	strncmp@len& (0+255),w,b
 17787  004E0C  E1C3               	bnz	l9763
 17788  004E0E  2965               	incf	(strncmp@len+1)& (0+255),w,b
 17789  004E10  A4D8               	btfss	status,2,c
 17790  004E12  D7C0               	goto	l2893
 17791                           
 17792                           ; BSR set to: 0
 17793                           
 17794                           ; BSR set to: 0
 17795  004E14  0E00               	movlw	0
 17796  004E16  6F61               	movwf	(?_strncmp+1)& (0+255),b
 17797  004E18  0E00               	movlw	0
 17798  004E1A  6F60               	movwf	?_strncmp& (0+255),b
 17799  004E1C  0012               	return	
 17800  004E1E                     __end_of_strncmp:
 17801                           	opt stack 0
 17802                           tblptru	equ	0xFF8
 17803                           tblptrh	equ	0xFF7
 17804                           tblptrl	equ	0xFF6
 17805                           tablat	equ	0xFF5
 17806                           prodh	equ	0xFF4
 17807                           prodl	equ	0xFF3
 17808                           intcon	equ	0xFF2
 17809                           intcon3	equ	0xFF0
 17810                           postinc0	equ	0xFEE
 17811                           wreg	equ	0xFE8
 17812                           indf1	equ	0xFE7
 17813                           postdec1	equ	0xFE5
 17814                           fsr1h	equ	0xFE2
 17815                           fsr1l	equ	0xFE1
 17816                           indf2	equ	0xFDF
 17817                           fsr2h	equ	0xFDA
 17818                           fsr2l	equ	0xFD9
 17819                           status	equ	0xFD8
 17820                           
 17821 ;; *************** function _strcmp *****************
 17822 ;; Defined at:
 17823 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
 17824 ;; Parameters:    Size  Location     Type
 17825 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 17826 ;;		 -> moduleResonseBuffer(64), 
 17827 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 17828 ;;		 -> STR_89(3), STR_69(14), STR_67(11), STR_63(7), 
 17829 ;;		 -> STR_60(9), STR_59(11), STR_57(14), STR_54(14), 
 17830 ;;		 -> STR_53(3), STR_49(9), STR_45(14), STR_44(3), 
 17831 ;; Auto vars:     Size  Location     Type
 17832 ;;  r               1    5[BANK0 ] char 
 17833 ;; Return value:  Size  Location     Type
 17834 ;;                  2    0[BANK0 ] int 
 17835 ;; Registers used:
 17836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17837 ;; Tracked objects:
 17838 ;;		On entry : 0/0
 17839 ;;		On exit  : 0/0
 17840 ;;		Unchanged: 0/0
 17841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17842 ;;      Params:         0       4       0       0       0       0       0       0       0
 17843 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17844 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17845 ;;      Totals:         0       6       0       0       0       0       0       0       0
 17846 ;;Total ram usage:        6 bytes
 17847 ;; Hardware stack levels used:    1
 17848 ;; Hardware stack levels required when called:   11
 17849 ;; This function calls:
 17850 ;;		Nothing
 17851 ;; This function is called by:
 17852 ;;		_moteJoiningProcess
 17853 ;;		_moteRunningProcess
 17854 ;; This function uses a non-reentrant model
 17855 ;;
 17856                           
 17857                           	psect	text50
 17858  0058B6                     __ptext50:
 17859                           	opt stack 0
 17860  0058B6                     _strcmp:
 17861                           	opt stack 17
 17862                           
 17863                           ; BSR set to: 0
 17864                           ;incstack = 0
 17865  0058B6  D005               	goto	l2884
 17866  0058B8  0100               	movlb	0	; () banked
 17867  0058BA  4B60               	infsnz	strcmp@s1& (0+255),f,b
 17868  0058BC  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
 17869  0058BE  4B62               	infsnz	strcmp@s2& (0+255),f,b
 17870  0058C0  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
 17871  0058C2                     l2884:
 17872                           
 17873                           ; BSR set to: 0
 17874  0058C2  C060  FFD9         	movff	strcmp@s1,fsr2l
 17875  0058C6  C061  FFDA         	movff	strcmp@s1+1,fsr2h
 17876  0058CA  50DF               	movf	indf2,w,c
 17877  0058CC  0100               	movlb	0	; () banked
 17878  0058CE  6F64               	movwf	??_strcmp& (0+255),b
 17879  0058D0  C062  FFF6         	movff	strcmp@s2,tblptrl
 17880  0058D4  C063  FFF7         	movff	strcmp@s2+1,tblptrh
 17881  0058D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17882  0058D8  6AF8               	clrf	tblptru,c
 17883  0058DA                     	endif
 17884  0058DA                     	if	0	;tblptru may be non-zero
 17885  0058DA                     	endif
 17886  0058DA  0008               	tblrd		*
 17887  0058DC  50F5               	movf	tablat,w,c
 17888  0058DE  0800               	sublw	0
 17889  0058E0  2564               	addwf	??_strcmp& (0+255),w,b
 17890  0058E2  6F65               	movwf	strcmp@r& (0+255),b
 17891  0058E4  5165               	movf	strcmp@r& (0+255),w,b
 17892  0058E6  A4D8               	btfss	status,2,c
 17893  0058E8  D007               	goto	u8290
 17894                           
 17895                           ; BSR set to: 0
 17896  0058EA  C060  FFD9         	movff	strcmp@s1,fsr2l
 17897  0058EE  C061  FFDA         	movff	strcmp@s1+1,fsr2h
 17898  0058F2  50DF               	movf	indf2,w,c
 17899  0058F4  A4D8               	btfss	status,2,c
 17900  0058F6  D7E0               	goto	l2885
 17901  0058F8                     u8290:
 17902                           
 17903                           ; BSR set to: 0
 17904                           
 17905                           ; BSR set to: 0
 17906                           
 17907                           ; BSR set to: 0
 17908  0058F8  5165               	movf	strcmp@r& (0+255),w,b
 17909  0058FA  6F60               	movwf	?_strcmp& (0+255),b
 17910  0058FC  6B61               	clrf	(?_strcmp+1)& (0+255),b
 17911  0058FE  BF60               	btfsc	?_strcmp& (0+255),7,b
 17912  005900  0761               	decf	(?_strcmp+1)& (0+255),f,b
 17913  005902  0012               	return	
 17914  005904                     __end_of_strcmp:
 17915                           	opt stack 0
 17916                           tblptru	equ	0xFF8
 17917                           tblptrh	equ	0xFF7
 17918                           tblptrl	equ	0xFF6
 17919                           tablat	equ	0xFF5
 17920                           prodh	equ	0xFF4
 17921                           prodl	equ	0xFF3
 17922                           intcon	equ	0xFF2
 17923                           intcon3	equ	0xFF0
 17924                           postinc0	equ	0xFEE
 17925                           wreg	equ	0xFE8
 17926                           indf1	equ	0xFE7
 17927                           postdec1	equ	0xFE5
 17928                           fsr1h	equ	0xFE2
 17929                           fsr1l	equ	0xFE1
 17930                           indf2	equ	0xFDF
 17931                           fsr2h	equ	0xFDA
 17932                           fsr2l	equ	0xFD9
 17933                           status	equ	0xFD8
 17934                           
 17935 ;; *************** function _moteApp_delayms *****************
 17936 ;; Defined at:
 17937 ;;		line 187 in file "../Includes/Board/MOTEapp.c"
 17938 ;; Parameters:    Size  Location     Type
 17939 ;;  length          2    0[BANK0 ] unsigned int 
 17940 ;; Auto vars:     Size  Location     Type
 17941 ;;  counter         2    3[BANK0 ] unsigned int 
 17942 ;; Return value:  Size  Location     Type
 17943 ;;                  1    wreg      void 
 17944 ;; Registers used:
 17945 ;;		wreg, status,2, status,0
 17946 ;; Tracked objects:
 17947 ;;		On entry : 0/0
 17948 ;;		On exit  : 0/0
 17949 ;;		Unchanged: 0/0
 17950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17951 ;;      Params:         0       2       0       0       0       0       0       0       0
 17952 ;;      Locals:         0       2       0       0       0       0       0       0       0
 17953 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17954 ;;      Totals:         0       5       0       0       0       0       0       0       0
 17955 ;;Total ram usage:        5 bytes
 17956 ;; Hardware stack levels used:    1
 17957 ;; Hardware stack levels required when called:   11
 17958 ;; This function calls:
 17959 ;;		Nothing
 17960 ;; This function is called by:
 17961 ;;		_main
 17962 ;;		_test_powerup
 17963 ;;		_moduleResync
 17964 ;;		_moteJoiningProcess
 17965 ;;		_moteRunningProcess
 17966 ;;		_moteApp_GoToSleep
 17967 ;;		_moteApp_setSensorsInput
 17968 ;; This function uses a non-reentrant model
 17969 ;;
 17970                           
 17971                           	psect	text51
 17972  005D50                     __ptext51:
 17973                           	opt stack 0
 17974  005D50                     _moteApp_delayms:
 17975                           	opt stack 16
 17976                           
 17977                           ;MOTEapp.c: 189: uint16_t counter;
 17978                           ;MOTEapp.c: 190: for(counter = 0; counter < length; counter++)
 17979                           
 17980                           ; BSR set to: 0
 17981                           ;incstack = 0
 17982  005D50  0E00               	movlw	0
 17983  005D52  0100               	movlb	0	; () banked
 17984  005D54  6F64               	movwf	(moteApp_delayms@counter+1)& (0+255),b
 17985  005D56  0E00               	movlw	0
 17986  005D58  6F63               	movwf	moteApp_delayms@counter& (0+255),b
 17987  005D5A  D00C               	goto	l364
 17988  005D5C                     
 17989                           ; BSR set to: 0
 17990                           ;MOTEapp.c: 191: {
 17991                           ;MOTEapp.c: 192: _delay((unsigned long)((1)*(48000000/4000.0)));
 17992                           
 17993                           ; BSR set to: 0
 17994  005D5C  0E10               	movlw	16
 17995  005D5E  0100               	movlb	0	; () banked
 17996  005D60  6F62               	movwf	??_moteApp_delayms& (0+255),b
 17997  005D62  0E94               	movlw	148
 17998  005D64                     u11717:
 17999  005D64  2EE8               	decfsz	wreg,f,c
 18000  005D66  D7FE               	bra	u11717
 18001  005D68  2F62               	decfsz	??_moteApp_delayms& (0+255),f,b
 18002  005D6A  D7FC               	bra	u11717
 18003  005D6C  F000               	nop	
 18004  005D6E  0100               	movlb	0	; () banked
 18005  005D70  4B63               	infsnz	moteApp_delayms@counter& (0+255),f,b
 18006  005D72  2B64               	incf	(moteApp_delayms@counter+1)& (0+255),f,b
 18007  005D74                     l364:
 18008                           
 18009                           ; BSR set to: 0
 18010  005D74  5160               	movf	moteApp_delayms@length& (0+255),w,b
 18011  005D76  5D63               	subwf	moteApp_delayms@counter& (0+255),w,b
 18012  005D78  5161               	movf	(moteApp_delayms@length+1)& (0+255),w,b
 18013  005D7A  5964               	subwfb	(moteApp_delayms@counter+1)& (0+255),w,b
 18014  005D7C  B0D8               	btfsc	status,0,c
 18015  005D7E  0012               	return	
 18016  005D80  D7ED               	goto	l365
 18017  005D82                     __end_of_moteApp_delayms:
 18018                           	opt stack 0
 18019                           tblptru	equ	0xFF8
 18020                           tblptrh	equ	0xFF7
 18021                           tblptrl	equ	0xFF6
 18022                           tablat	equ	0xFF5
 18023                           prodh	equ	0xFF4
 18024                           prodl	equ	0xFF3
 18025                           intcon	equ	0xFF2
 18026                           intcon3	equ	0xFF0
 18027                           postinc0	equ	0xFEE
 18028                           wreg	equ	0xFE8
 18029                           indf1	equ	0xFE7
 18030                           postdec1	equ	0xFE5
 18031                           fsr1h	equ	0xFE2
 18032                           fsr1l	equ	0xFE1
 18033                           indf2	equ	0xFDF
 18034                           fsr2h	equ	0xFDA
 18035                           fsr2l	equ	0xFD9
 18036                           status	equ	0xFD8
 18037                           
 18038 ;; *************** function _DATAEE_WriteByte *****************
 18039 ;; Defined at:
 18040 ;;		line 166 in file "../Includes/MccGenerated/memory.c"
 18041 ;; Parameters:    Size  Location     Type
 18042 ;;  bAdd            1    wreg     unsigned char 
 18043 ;;  bData           1    0[BANK0 ] unsigned char 
 18044 ;; Auto vars:     Size  Location     Type
 18045 ;;  bAdd            1    1[BANK0 ] unsigned char 
 18046 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 18047 ;; Return value:  Size  Location     Type
 18048 ;;                  1    wreg      void 
 18049 ;; Registers used:
 18050 ;;		wreg, status,2
 18051 ;; Tracked objects:
 18052 ;;		On entry : 0/0
 18053 ;;		On exit  : 0/0
 18054 ;;		Unchanged: 0/0
 18055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18056 ;;      Params:         0       1       0       0       0       0       0       0       0
 18057 ;;      Locals:         0       2       0       0       0       0       0       0       0
 18058 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18059 ;;      Totals:         0       3       0       0       0       0       0       0       0
 18060 ;;Total ram usage:        3 bytes
 18061 ;; Hardware stack levels used:    1
 18062 ;; Hardware stack levels required when called:   11
 18063 ;; This function calls:
 18064 ;;		Nothing
 18065 ;; This function is called by:
 18066 ;;		_main
 18067 ;;		_moteJoiningProcess
 18068 ;; This function uses a non-reentrant model
 18069 ;;
 18070                           
 18071                           	psect	text52
 18072  005B5C                     __ptext52:
 18073                           	opt stack 0
 18074  005B5C                     _DATAEE_WriteByte:
 18075                           	opt stack 17
 18076                           
 18077                           ; BSR set to: 0
 18078                           ;incstack = 0
 18079                           ;DATAEE_WriteByte@bAdd stored from wreg
 18080  005B5C  0100               	movlb	0	; () banked
 18081  005B5E  6F61               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 18082                           
 18083                           ;memory.c: 168: uint8_t GIEBitValue = INTCONbits.GIE;
 18084  005B60  0E00               	movlw	0
 18085  005B62  BEF2               	btfsc	intcon,7,c	;volatile
 18086  005B64  0E01               	movlw	1
 18087  005B66  0100               	movlb	0	; () banked
 18088  005B68  6F62               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 18089                           
 18090                           ; BSR set to: 0
 18091                           ;memory.c: 170: EEADR = (bAdd & 0xFF);
 18092  005B6A  C061  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
 18093                           
 18094                           ; BSR set to: 0
 18095                           ;memory.c: 171: EEDATA = bData;
 18096  005B6E  C060  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
 18097                           
 18098                           ; BSR set to: 0
 18099                           ;memory.c: 172: EECON1bits.EEPGD = 0;
 18100  005B72  9EA6               	bcf	4006,7,c	;volsfr
 18101                           
 18102                           ; BSR set to: 0
 18103                           ;memory.c: 173: EECON1bits.CFGS = 0;
 18104  005B74  9CA6               	bcf	4006,6,c	;volsfr
 18105                           
 18106                           ; BSR set to: 0
 18107                           ;memory.c: 174: EECON1bits.WREN = 1;
 18108  005B76  84A6               	bsf	4006,2,c	;volsfr
 18109                           
 18110                           ; BSR set to: 0
 18111                           ;memory.c: 175: INTCONbits.GIE = 0;
 18112  005B78  9EF2               	bcf	intcon,7,c	;volatile
 18113                           
 18114                           ; BSR set to: 0
 18115                           ;memory.c: 176: EECON2 = 0x55;
 18116  005B7A  0E55               	movlw	85
 18117  005B7C  6EA7               	movwf	4007,c	;volsfr
 18118                           
 18119                           ; BSR set to: 0
 18120                           ;memory.c: 177: EECON2 = 0xAA;
 18121  005B7E  0EAA               	movlw	170
 18122  005B80  6EA7               	movwf	4007,c	;volsfr
 18123                           
 18124                           ; BSR set to: 0
 18125                           ;memory.c: 178: EECON1bits.WR = 1;
 18126  005B82  82A6               	bsf	4006,1,c	;volsfr
 18127  005B84                     
 18128                           ; BSR set to: 0
 18129                           ;memory.c: 181: {
 18130  005B84  B2A6               	btfsc	4006,1,c	;volsfr
 18131  005B86  D7FE               	goto	l1629
 18132                           
 18133                           ;memory.c: 182: }
 18134                           ;memory.c: 184: EECON1bits.WREN = 0;
 18135  005B88  94A6               	bcf	4006,2,c	;volsfr
 18136                           
 18137                           ;memory.c: 185: INTCONbits.GIE = GIEBitValue;
 18138  005B8A  0100               	movlb	0	; () banked
 18139  005B8C  B162               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 18140  005B8E  D002               	bra	u8125
 18141  005B90  9EF2               	bcf	intcon,7,c	;volatile
 18142  005B92  D001               	bra	u8126
 18143  005B94                     u8125:
 18144  005B94  8EF2               	bsf	intcon,7,c	;volatile
 18145  005B96                     u8126:
 18146  005B96  0012               	return		;funcret
 18147  005B98                     __end_of_DATAEE_WriteByte:
 18148                           	opt stack 0
 18149                           tblptru	equ	0xFF8
 18150                           tblptrh	equ	0xFF7
 18151                           tblptrl	equ	0xFF6
 18152                           tablat	equ	0xFF5
 18153                           prodh	equ	0xFF4
 18154                           prodl	equ	0xFF3
 18155                           intcon	equ	0xFF2
 18156                           intcon3	equ	0xFF0
 18157                           postinc0	equ	0xFEE
 18158                           wreg	equ	0xFE8
 18159                           indf1	equ	0xFE7
 18160                           postdec1	equ	0xFE5
 18161                           fsr1h	equ	0xFE2
 18162                           fsr1l	equ	0xFE1
 18163                           indf2	equ	0xFDF
 18164                           fsr2h	equ	0xFDA
 18165                           fsr2l	equ	0xFD9
 18166                           status	equ	0xFD8
 18167                           
 18168 ;; *************** function _moteApp_searchFrameGPS *****************
 18169 ;; Defined at:
 18170 ;;		line 1529 in file "../Includes/Board/MOTEapp.c"
 18171 ;; Parameters:    Size  Location     Type
 18172 ;;		None
 18173 ;; Auto vars:     Size  Location     Type
 18174 ;;  i               1   39[BANK0 ] unsigned char 
 18175 ;;  c               1   38[BANK0 ] unsigned char 
 18176 ;;  cs              1   37[BANK0 ] unsigned char 
 18177 ;;  ccs             1   36[BANK0 ] unsigned char 
 18178 ;; Return value:  Size  Location     Type
 18179 ;;                  1    wreg      void 
 18180 ;; Registers used:
 18181 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18182 ;; Tracked objects:
 18183 ;;		On entry : 0/0
 18184 ;;		On exit  : 0/0
 18185 ;;		Unchanged: 0/0
 18186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18187 ;;      Params:         0       0       0       0       0       0       0       0       0
 18188 ;;      Locals:         0       4       0       0       0       0       0       0       0
 18189 ;;      Temps:          0       2       0       0       0       0       0       0       0
 18190 ;;      Totals:         0       6       0       0       0       0       0       0       0
 18191 ;;Total ram usage:        6 bytes
 18192 ;; Hardware stack levels used:    1
 18193 ;; Hardware stack levels required when called:   16
 18194 ;; This function calls:
 18195 ;;		_emptyFIFO
 18196 ;;		_oled_clear
 18197 ;;		_oled_putStringLineN
 18198 ;;		_oled_putint8
 18199 ;;		_outFIFO
 18200 ;;		_unhex
 18201 ;; This function is called by:
 18202 ;;		_moteHandler
 18203 ;; This function uses a non-reentrant model
 18204 ;;
 18205                           
 18206                           	psect	text53
 18207  002780                     __ptext53:
 18208                           	opt stack 0
 18209  002780                     _moteApp_searchFrameGPS:
 18210                           	opt stack 13
 18211                           
 18212                           ;MOTEapp.c: 1531: uint8_t c;
 18213                           ;MOTEapp.c: 1532: uint8_t i, cs, ccs;
 18214                           ;MOTEapp.c: 1534: switch(statusSSFG)
 18215                           
 18216                           ;incstack = 0
 18217  002780  D0DE               	goto	l781
 18218  002782                     
 18219                           ;MOTEapp.c: 1539: {
 18220                           ;MOTEapp.c: 1540: c = outFIFO();
 18221  002782  EC07  F02E         	call	_outFIFO	;wreg free
 18222  002786  0100               	movlb	0	; () banked
 18223  002788  6F86               	movwf	moteApp_searchFrameGPS@c& (0+255),b
 18224                           
 18225                           ; BSR set to: 0
 18226                           ;MOTEapp.c: 1541: if( c == '$')
 18227  00278A  0E24               	movlw	36
 18228  00278C  1986               	xorwf	moteApp_searchFrameGPS@c& (0+255),w,b
 18229  00278E  A4D8               	btfss	status,2,c
 18230  002790  D004               	goto	l785
 18231                           
 18232                           ; BSR set to: 0
 18233                           ;MOTEapp.c: 1542: {
 18234                           ;MOTEapp.c: 1543: countSearchFrameGPS = 0;
 18235  002792  0E00               	movlw	0
 18236  002794  6FEC               	movwf	_countSearchFrameGPS& (0+255),b
 18237                           
 18238                           ;MOTEapp.c: 1544: statusSSFG = SSFG_SENTENCE;
 18239  002796  0E01               	movlw	1
 18240  002798  6FF2               	movwf	_statusSSFG& (0+255),b
 18241  00279A                     l785:
 18242                           
 18243                           ; BSR set to: 0
 18244                           
 18245                           ; BSR set to: 0
 18246  00279A  ECEC  F030         	call	_emptyFIFO	;wreg free
 18247  00279E  06E8               	decf	wreg,f,c
 18248  0027A0  A4D8               	btfss	status,2,c
 18249  0027A2  D7EF               	goto	l784
 18250                           
 18251                           ;MOTEapp.c: 1545: }
 18252                           ;MOTEapp.c: 1546: }
 18253                           ;MOTEapp.c: 1547: if(statusSSFG != SSFG_SENTENCE)
 18254  0027A4  0100               	movlb	0	; () banked
 18255  0027A6  05F2               	decf	_statusSSFG& (0+255),w,b
 18256  0027A8  A4D8               	btfss	status,2,c
 18257  0027AA  0012               	return	
 18258  0027AC  D021               	goto	l794
 18259  0027AE                     
 18260                           ;MOTEapp.c: 1554: {
 18261                           ;MOTEapp.c: 1555: c = outFIFO();
 18262                           
 18263                           ; BSR set to: 0
 18264  0027AE  EC07  F02E         	call	_outFIFO	;wreg free
 18265  0027B2  0100               	movlb	0	; () banked
 18266  0027B4  6F86               	movwf	moteApp_searchFrameGPS@c& (0+255),b
 18267                           
 18268                           ; BSR set to: 0
 18269                           ;MOTEapp.c: 1556: if( c == sentenceName[countSearchFrameGPS] )
 18270  0027B6  51EC               	movf	_countSearchFrameGPS& (0+255),w,b
 18271  0027B8  0D01               	mullw	1
 18272  0027BA  0EF1               	movlw	low _sentenceName
 18273  0027BC  24F3               	addwf	prodl,w,c
 18274  0027BE  6EF6               	movwf	tblptrl,c
 18275  0027C0  0E75               	movlw	high _sentenceName
 18276  0027C2  20F4               	addwfc	prodh,w,c
 18277  0027C4  6EF7               	movwf	tblptrh,c
 18278  0027C6                     	if	1	;There are 3 active tblptr bytes
 18279  0027C6  6AF8               	clrf	tblptru,c
 18280  0027C8  0E00               	movlw	low (__mediumconst shr (0+16))
 18281  0027CA  22F8               	addwfc	tblptru,f,c
 18282  0027CC                     	endif
 18283  0027CC  0008               	tblrd		*
 18284  0027CE  50F5               	movf	tablat,w,c
 18285  0027D0  1986               	xorwf	moteApp_searchFrameGPS@c& (0+255),w,b
 18286  0027D2  A4D8               	btfss	status,2,c
 18287  0027D4  D00A               	goto	l792
 18288                           
 18289                           ; BSR set to: 0
 18290                           ;MOTEapp.c: 1557: {
 18291                           ;MOTEapp.c: 1558: countSearchFrameGPS++;
 18292  0027D6  2BEC               	incf	_countSearchFrameGPS& (0+255),f,b
 18293                           
 18294                           ; BSR set to: 0
 18295                           ;MOTEapp.c: 1559: if( countSearchFrameGPS == 5 )
 18296  0027D8  0E05               	movlw	5
 18297  0027DA  19EC               	xorwf	_countSearchFrameGPS& (0+255),w,b
 18298  0027DC  A4D8               	btfss	status,2,c
 18299  0027DE  D008               	goto	l794
 18300                           
 18301                           ; BSR set to: 0
 18302                           ;MOTEapp.c: 1560: {
 18303                           ;MOTEapp.c: 1561: countSearchFrameGPS = 0;
 18304  0027E0  0E00               	movlw	0
 18305  0027E2  6FEC               	movwf	_countSearchFrameGPS& (0+255),b
 18306                           
 18307                           ;MOTEapp.c: 1562: statusSSFG = SSFG_GET_DATA;
 18308  0027E4  0E02               	movlw	2
 18309  0027E6  6FF2               	movwf	_statusSSFG& (0+255),b
 18310                           
 18311                           ; BSR set to: 0
 18312                           ;MOTEapp.c: 1563: }
 18313                           ;MOTEapp.c: 1564: }
 18314  0027E8  D003               	goto	l794
 18315  0027EA                     l792:
 18316                           
 18317                           ; BSR set to: 0
 18318                           ;MOTEapp.c: 1565: else
 18319                           ;MOTEapp.c: 1566: {
 18320                           ;MOTEapp.c: 1567: statusSSFG = SSFG_BEBIN;
 18321                           
 18322                           ; BSR set to: 0
 18323  0027EA  0E00               	movlw	0
 18324  0027EC  6FF2               	movwf	_statusSSFG& (0+255),b
 18325                           
 18326                           ;MOTEapp.c: 1568: break;
 18327  0027EE  0012               	return	
 18328  0027F0                     l794:
 18329                           
 18330                           ; BSR set to: 0
 18331                           
 18332                           ; BSR set to: 0
 18333                           
 18334                           ; BSR set to: 0
 18335  0027F0  ECEC  F030         	call	_emptyFIFO	;wreg free
 18336  0027F4  06E8               	decf	wreg,f,c
 18337  0027F6  B4D8               	btfsc	status,2,c
 18338  0027F8  0012               	return	
 18339  0027FA  D7D9               	goto	l791
 18340  0027FC                     
 18341                           ;MOTEapp.c: 1578: {
 18342                           ;MOTEapp.c: 1579: c = outFIFO();
 18343  0027FC  EC07  F02E         	call	_outFIFO	;wreg free
 18344  002800  0100               	movlb	0	; () banked
 18345  002802  6F86               	movwf	moteApp_searchFrameGPS@c& (0+255),b
 18346                           
 18347                           ; BSR set to: 0
 18348                           ;MOTEapp.c: 1580: if(c == '\r')
 18349  002804  0E0D               	movlw	13
 18350  002806  1986               	xorwf	moteApp_searchFrameGPS@c& (0+255),w,b
 18351  002808  A4D8               	btfss	status,2,c
 18352  00280A  D00D               	goto	l800
 18353                           
 18354                           ; BSR set to: 0
 18355                           ;MOTEapp.c: 1581: {
 18356                           ;MOTEapp.c: 1582: dataFrameGPS[countSearchFrameGPS] = 0;
 18357  00280C  51EC               	movf	_countSearchFrameGPS& (0+255),w,b
 18358  00280E  0D01               	mullw	1
 18359  002810  0E00               	movlw	low _dataFrameGPS
 18360  002812  24F3               	addwf	prodl,w,c
 18361  002814  6ED9               	movwf	fsr2l,c
 18362  002816  0E03               	movlw	high _dataFrameGPS
 18363  002818  20F4               	addwfc	prodh,w,c
 18364  00281A  6EDA               	movwf	fsr2h,c
 18365  00281C  0E00               	movlw	0
 18366  00281E  6EDF               	movwf	indf2,c
 18367                           
 18368                           ; BSR set to: 0
 18369                           ;MOTEapp.c: 1583: statusSSFG = SSFG_CHECK;
 18370  002820  0E03               	movlw	3
 18371  002822  6FF2               	movwf	_statusSSFG& (0+255),b
 18372                           
 18373                           ;MOTEapp.c: 1584: }
 18374  002824  D00B               	goto	l801
 18375  002826                     l800:
 18376                           
 18377                           ; BSR set to: 0
 18378                           ;MOTEapp.c: 1585: else
 18379                           ;MOTEapp.c: 1586: {
 18380                           ;MOTEapp.c: 1587: dataFrameGPS[countSearchFrameGPS] = c;
 18381                           
 18382                           ; BSR set to: 0
 18383  002826  51EC               	movf	_countSearchFrameGPS& (0+255),w,b
 18384  002828  0D01               	mullw	1
 18385  00282A  0E00               	movlw	low _dataFrameGPS
 18386  00282C  24F3               	addwf	prodl,w,c
 18387  00282E  6ED9               	movwf	fsr2l,c
 18388  002830  0E03               	movlw	high _dataFrameGPS
 18389  002832  20F4               	addwfc	prodh,w,c
 18390  002834  6EDA               	movwf	fsr2h,c
 18391  002836  C086  FFDF         	movff	moteApp_searchFrameGPS@c,indf2
 18392                           
 18393                           ; BSR set to: 0
 18394                           ;MOTEapp.c: 1588: countSearchFrameGPS ++;
 18395  00283A  2BEC               	incf	_countSearchFrameGPS& (0+255),f,b
 18396  00283C                     l801:
 18397                           
 18398                           ; BSR set to: 0
 18399                           
 18400                           ; BSR set to: 0
 18401  00283C  ECEC  F030         	call	_emptyFIFO	;wreg free
 18402  002840  06E8               	decf	wreg,f,c
 18403  002842  A4D8               	btfss	status,2,c
 18404  002844  D7DB               	goto	l799
 18405                           
 18406                           ;MOTEapp.c: 1589: }
 18407                           ;MOTEapp.c: 1590: }
 18408                           ;MOTEapp.c: 1591: if(statusSSFG != SSFG_CHECK)
 18409  002846  0E03               	movlw	3
 18410  002848  0100               	movlb	0	; () banked
 18411  00284A  19F2               	xorwf	_statusSSFG& (0+255),w,b
 18412  00284C  A4D8               	btfss	status,2,c
 18413  00284E  0012               	return	
 18414                           
 18415                           ; BSR set to: 0
 18416                           ;MOTEapp.c: 1596: i = 0;
 18417                           
 18418                           ; BSR set to: 0
 18419                           
 18420                           ;MOTEapp.c: 1594: }
 18421                           ;MOTEapp.c: 1595: case SSFG_CHECK:
 18422                           
 18423                           ; BSR set to: 0
 18424                           
 18425                           ; BSR set to: 0
 18426                           ;MOTEapp.c: 1592: {
 18427                           ;MOTEapp.c: 1593: break;
 18428  002850  0E00               	movlw	0
 18429  002852  6F87               	movwf	moteApp_searchFrameGPS@i& (0+255),b
 18430                           
 18431                           ;MOTEapp.c: 1597: cs = 0;
 18432  002854  0E00               	movlw	0
 18433  002856  6F85               	movwf	moteApp_searchFrameGPS@cs& (0+255),b
 18434                           
 18435                           ; BSR set to: 0
 18436                           ;MOTEapp.c: 1599: cs ^= 'G';
 18437  002858  0E47               	movlw	71
 18438  00285A  1B85               	xorwf	moteApp_searchFrameGPS@cs& (0+255),f,b
 18439                           
 18440                           ; BSR set to: 0
 18441                           ;MOTEapp.c: 1600: cs ^= 'P';
 18442  00285C  0E50               	movlw	80
 18443  00285E  1B85               	xorwf	moteApp_searchFrameGPS@cs& (0+255),f,b
 18444                           
 18445                           ; BSR set to: 0
 18446                           ;MOTEapp.c: 1601: cs ^= 'G';
 18447  002860  0E47               	movlw	71
 18448  002862  1B85               	xorwf	moteApp_searchFrameGPS@cs& (0+255),f,b
 18449                           
 18450                           ; BSR set to: 0
 18451                           ;MOTEapp.c: 1602: cs ^= 'L';
 18452  002864  0E4C               	movlw	76
 18453  002866  1B85               	xorwf	moteApp_searchFrameGPS@cs& (0+255),f,b
 18454                           
 18455                           ; BSR set to: 0
 18456                           ;MOTEapp.c: 1603: cs ^= 'L';
 18457  002868  0E4C               	movlw	76
 18458  00286A  1B85               	xorwf	moteApp_searchFrameGPS@cs& (0+255),f,b
 18459  00286C                     
 18460                           ; BSR set to: 0
 18461                           ;MOTEapp.c: 1606: {
 18462                           ;MOTEapp.c: 1607: if(i >= countSearchFrameGPS)
 18463                           
 18464                           ; BSR set to: 0
 18465  00286C  51EC               	movf	_countSearchFrameGPS& (0+255),w,b
 18466  00286E  5D87               	subwf	moteApp_searchFrameGPS@i& (0+255),w,b
 18467  002870  B0D8               	btfsc	status,0,c
 18468  002872  D04B               	goto	l807
 18469                           
 18470                           ; BSR set to: 0
 18471                           ;MOTEapp.c: 1610: }
 18472                           ;MOTEapp.c: 1611: if(dataFrameGPS[i] == '*')
 18473                           
 18474                           ; BSR set to: 0
 18475                           
 18476                           ; BSR set to: 0
 18477                           ;MOTEapp.c: 1608: {
 18478                           ;MOTEapp.c: 1609: break;
 18479  002874  5187               	movf	moteApp_searchFrameGPS@i& (0+255),w,b
 18480  002876  0D01               	mullw	1
 18481  002878  0E00               	movlw	low _dataFrameGPS
 18482  00287A  24F3               	addwf	prodl,w,c
 18483  00287C  6ED9               	movwf	fsr2l,c
 18484  00287E  0E03               	movlw	high _dataFrameGPS
 18485  002880  20F4               	addwfc	prodh,w,c
 18486  002882  6EDA               	movwf	fsr2h,c
 18487  002884  0E2A               	movlw	42
 18488  002886  18DE               	xorwf	postinc2,w,c
 18489  002888  A4D8               	btfss	status,2,c
 18490  00288A  D033               	goto	l808
 18491                           
 18492                           ; BSR set to: 0
 18493                           ;MOTEapp.c: 1612: {
 18494                           ;MOTEapp.c: 1613: ccs = unhex(dataFrameGPS[i + 1])*16;
 18495  00288C  5187               	movf	moteApp_searchFrameGPS@i& (0+255),w,b
 18496  00288E  6F82               	movwf	??_moteApp_searchFrameGPS& (0+255),b
 18497  002890  6B83               	clrf	(??_moteApp_searchFrameGPS+1)& (0+255),b
 18498  002892  0E01               	movlw	1
 18499  002894  2782               	addwf	??_moteApp_searchFrameGPS& (0+255),f,b
 18500  002896  0E00               	movlw	0
 18501  002898  2383               	addwfc	(??_moteApp_searchFrameGPS+1)& (0+255),f,b
 18502  00289A  0E00               	movlw	low _dataFrameGPS
 18503  00289C  2582               	addwf	??_moteApp_searchFrameGPS& (0+255),w,b
 18504  00289E  6ED9               	movwf	fsr2l,c
 18505  0028A0  0E03               	movlw	high _dataFrameGPS
 18506  0028A2  2183               	addwfc	(??_moteApp_searchFrameGPS+1)& (0+255),w,b
 18507  0028A4  6EDA               	movwf	fsr2h,c
 18508  0028A6  50DF               	movf	indf2,w,c
 18509  0028A8  EC69  F02F         	call	_unhex
 18510  0028AC  0D10               	mullw	16
 18511  0028AE  CFF3 F084          	movff	prodl,moteApp_searchFrameGPS@ccs
 18512                           
 18513                           ;MOTEapp.c: 1614: ccs += unhex(dataFrameGPS[i + 2]);
 18514  0028B2  0100               	movlb	0	; () banked
 18515  0028B4  5187               	movf	moteApp_searchFrameGPS@i& (0+255),w,b
 18516  0028B6  6F82               	movwf	??_moteApp_searchFrameGPS& (0+255),b
 18517  0028B8  6B83               	clrf	(??_moteApp_searchFrameGPS+1)& (0+255),b
 18518  0028BA  0E02               	movlw	2
 18519  0028BC  2782               	addwf	??_moteApp_searchFrameGPS& (0+255),f,b
 18520  0028BE  0E00               	movlw	0
 18521  0028C0  2383               	addwfc	(??_moteApp_searchFrameGPS+1)& (0+255),f,b
 18522  0028C2  0E00               	movlw	low _dataFrameGPS
 18523  0028C4  2582               	addwf	??_moteApp_searchFrameGPS& (0+255),w,b
 18524  0028C6  6ED9               	movwf	fsr2l,c
 18525  0028C8  0E03               	movlw	high _dataFrameGPS
 18526  0028CA  2183               	addwfc	(??_moteApp_searchFrameGPS+1)& (0+255),w,b
 18527  0028CC  6EDA               	movwf	fsr2h,c
 18528  0028CE  50DF               	movf	indf2,w,c
 18529  0028D0  EC69  F02F         	call	_unhex
 18530  0028D4  0100               	movlb	0	; () banked
 18531  0028D6  2784               	addwf	moteApp_searchFrameGPS@ccs& (0+255),f,b
 18532                           
 18533                           ; BSR set to: 0
 18534                           ;MOTEapp.c: 1615: countSearchFrameGPS = i;
 18535  0028D8  C087  F0EC         	movff	moteApp_searchFrameGPS@i,_countSearchFrameGPS
 18536                           
 18537                           ; BSR set to: 0
 18538                           ;MOTEapp.c: 1616: dataFrameGPS[i] = 0;
 18539  0028DC  5187               	movf	moteApp_searchFrameGPS@i& (0+255),w,b
 18540  0028DE  0D01               	mullw	1
 18541  0028E0  0E00               	movlw	low _dataFrameGPS
 18542  0028E2  24F3               	addwf	prodl,w,c
 18543  0028E4  6ED9               	movwf	fsr2l,c
 18544  0028E6  0E03               	movlw	high _dataFrameGPS
 18545  0028E8  20F4               	addwfc	prodh,w,c
 18546  0028EA  6EDA               	movwf	fsr2h,c
 18547  0028EC  0E00               	movlw	0
 18548  0028EE  6EDF               	movwf	indf2,c
 18549                           
 18550                           ;MOTEapp.c: 1617: break;
 18551  0028F0  D00C               	goto	l807
 18552  0028F2                     l808:
 18553                           
 18554                           ; BSR set to: 0
 18555                           ;MOTEapp.c: 1619: else
 18556                           ;MOTEapp.c: 1620: {
 18557                           ;MOTEapp.c: 1621: cs ^= dataFrameGPS[i];
 18558                           
 18559                           ; BSR set to: 0
 18560  0028F2  5187               	movf	moteApp_searchFrameGPS@i& (0+255),w,b
 18561  0028F4  0D01               	mullw	1
 18562  0028F6  0E00               	movlw	low _dataFrameGPS
 18563  0028F8  24F3               	addwf	prodl,w,c
 18564  0028FA  6ED9               	movwf	fsr2l,c
 18565  0028FC  0E03               	movlw	high _dataFrameGPS
 18566  0028FE  20F4               	addwfc	prodh,w,c
 18567  002900  6EDA               	movwf	fsr2h,c
 18568  002902  50DF               	movf	indf2,w,c
 18569  002904  1B85               	xorwf	moteApp_searchFrameGPS@cs& (0+255),f,b
 18570                           
 18571                           ; BSR set to: 0
 18572                           ;MOTEapp.c: 1622: i++;
 18573  002906  2B87               	incf	moteApp_searchFrameGPS@i& (0+255),f,b
 18574                           
 18575                           ; BSR set to: 0
 18576                           
 18577                           ; BSR set to: 0
 18578  002908  D7B1               	goto	l805
 18579  00290A                     l807:
 18580                           
 18581                           ; BSR set to: 0
 18582                           ;MOTEapp.c: 1623: }
 18583                           ;MOTEapp.c: 1624: }
 18584                           ;MOTEapp.c: 1625: oled_clear();
 18585                           
 18586                           ; BSR set to: 0
 18587  00290A  EC7E  F030         	call	_oled_clear	;wreg free
 18588                           
 18589                           ;MOTEapp.c: 1626: if(cs == ccs)
 18590  00290E  0100               	movlb	0	; () banked
 18591  002910  5184               	movf	moteApp_searchFrameGPS@ccs& (0+255),w,b
 18592  002912  1985               	xorwf	moteApp_searchFrameGPS@cs& (0+255),w,b
 18593  002914  A4D8               	btfss	status,2,c
 18594  002916  D007               	goto	l811
 18595                           
 18596                           ; BSR set to: 0
 18597                           ;MOTEapp.c: 1627: {
 18598                           ;MOTEapp.c: 1628: oled_putStringLineN(dataFrameGPS);
 18599  002918  0E00               	movlw	low _dataFrameGPS
 18600  00291A  6F6C               	movwf	oled_putStringLineN@string& (0+255),b
 18601  00291C  0E03               	movlw	high _dataFrameGPS
 18602  00291E  6F6D               	movwf	(oled_putStringLineN@string+1)& (0+255),b
 18603  002920  EC0B  F02C         	call	_oled_putStringLineN	;wreg free
 18604                           
 18605                           ;MOTEapp.c: 1629: }
 18606  002924  D008               	goto	l812
 18607  002926                     l811:
 18608                           
 18609                           ;MOTEapp.c: 1630: else
 18610                           ;MOTEapp.c: 1631: {
 18611                           ;MOTEapp.c: 1632: oled_putint8(ccs, 0, 0);
 18612  002926  0E00               	movlw	0
 18613  002928  0100               	movlb	0	; () banked
 18614  00292A  6F78               	movwf	oled_putint8@station_dot& (0+255),b
 18615  00292C  0E00               	movlw	0
 18616  00292E  6F79               	movwf	oled_putint8@start_page& (0+255),b
 18617  002930  5184               	movf	moteApp_searchFrameGPS@ccs& (0+255),w,b
 18618  002932  ECF0  F023         	call	_oled_putint8
 18619  002936                     l812:
 18620                           
 18621                           ;MOTEapp.c: 1633: }
 18622                           ;MOTEapp.c: 1634: statusSSFG = SSFG_BEBIN;
 18623  002936  0E00               	movlw	0
 18624  002938  0100               	movlb	0	; () banked
 18625  00293A  6FF2               	movwf	_statusSSFG& (0+255),b
 18626                           
 18627                           ; BSR set to: 0
 18628                           ;MOTEapp.c: 1636: }
 18629                           
 18630                           ;MOTEapp.c: 1635: break;
 18631  00293C  0012               	return	
 18632  00293E                     l781:
 18633                           
 18634                           ; BSR set to: 0
 18635  00293E  0100               	movlb	0	; () banked
 18636  002940  51F2               	movf	_statusSSFG& (0+255),w,b
 18637                           
 18638                           ; Switch size 1, requested type "space"
 18639                           ; Number of cases is 4, Range of values is 0 to 3
 18640                           ; switch strategies available:
 18641                           ; Name         Instructions Cycles
 18642                           ; simple_byte           13     7 (average)
 18643                           ;	Chosen strategy is simple_byte
 18644  002942  0A00               	xorlw	0	; case 0
 18645  002944  B4D8               	btfsc	status,2,c
 18646  002946  D729               	goto	l785
 18647  002948  0A01               	xorlw	1	; case 1
 18648  00294A  B4D8               	btfsc	status,2,c
 18649  00294C  D751               	goto	l794
 18650  00294E  0A03               	xorlw	3	; case 2
 18651  002950  B4D8               	btfsc	status,2,c
 18652  002952  D774               	goto	l801
 18653  002954  0A01               	xorlw	1	; case 3
 18654  002956  D77A               	goto	L16
 18655  002958                     __end_of_moteApp_searchFrameGPS:
 18656                           	opt stack 0
 18657                           tblptru	equ	0xFF8
 18658                           tblptrh	equ	0xFF7
 18659                           tblptrl	equ	0xFF6
 18660                           tablat	equ	0xFF5
 18661                           prodh	equ	0xFF4
 18662                           prodl	equ	0xFF3
 18663                           intcon	equ	0xFF2
 18664                           intcon3	equ	0xFF0
 18665                           postinc0	equ	0xFEE
 18666                           wreg	equ	0xFE8
 18667                           indf1	equ	0xFE7
 18668                           postdec1	equ	0xFE5
 18669                           fsr1h	equ	0xFE2
 18670                           fsr1l	equ	0xFE1
 18671                           indf2	equ	0xFDF
 18672                           postinc2	equ	0xFDE
 18673                           fsr2h	equ	0xFDA
 18674                           fsr2l	equ	0xFD9
 18675                           status	equ	0xFD8
 18676                           
 18677 ;; *************** function _unhex *****************
 18678 ;; Defined at:
 18679 ;;		line 1172 in file "../Includes/Board/MOTEapp.c"
 18680 ;; Parameters:    Size  Location     Type
 18681 ;;  c               1    wreg     unsigned char 
 18682 ;; Auto vars:     Size  Location     Type
 18683 ;;  c               1    0[BANK0 ] unsigned char 
 18684 ;; Return value:  Size  Location     Type
 18685 ;;                  1    wreg      unsigned char 
 18686 ;; Registers used:
 18687 ;;		wreg, status,2, status,0
 18688 ;; Tracked objects:
 18689 ;;		On entry : 0/0
 18690 ;;		On exit  : 0/0
 18691 ;;		Unchanged: 0/0
 18692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18693 ;;      Params:         0       0       0       0       0       0       0       0       0
 18694 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18695 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18696 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18697 ;;Total ram usage:        1 bytes
 18698 ;; Hardware stack levels used:    1
 18699 ;; Hardware stack levels required when called:   11
 18700 ;; This function calls:
 18701 ;;		Nothing
 18702 ;; This function is called by:
 18703 ;;		_moteApp_searchFrameGPS
 18704 ;; This function uses a non-reentrant model
 18705 ;;
 18706                           
 18707                           	psect	text54
 18708  005ED2                     __ptext54:
 18709                           	opt stack 0
 18710  005ED2                     _unhex:
 18711                           	opt stack 17
 18712                           
 18713                           ;incstack = 0
 18714                           ;unhex@c stored from wreg
 18715  005ED2  0100               	movlb	0	; () banked
 18716  005ED4  6F60               	movwf	unhex@c& (0+255),b
 18717                           
 18718                           ;MOTEapp.c: 1174: if (c >= '0' && c <= '9')
 18719  005ED6  0E2F               	movlw	47
 18720  005ED8  0100               	movlb	0	; () banked
 18721  005EDA  6560               	cpfsgt	unhex@c& (0+255),b
 18722  005EDC  D006               	goto	l669
 18723                           
 18724                           ; BSR set to: 0
 18725  005EDE  0E3A               	movlw	58
 18726  005EE0  6160               	cpfslt	unhex@c& (0+255),b
 18727  005EE2  D003               	goto	l669
 18728                           
 18729                           ; BSR set to: 0
 18730                           ;MOTEapp.c: 1175: return c - '0';
 18731  005EE4  5160               	movf	unhex@c& (0+255),w,b
 18732  005EE6  0FD0               	addlw	208
 18733                           
 18734                           ; BSR set to: 0
 18735  005EE8  0012               	return	
 18736  005EEA                     l669:
 18737                           
 18738                           ; BSR set to: 0
 18739                           ;MOTEapp.c: 1176: if (c >= 'A' && c <= 'F')
 18740                           
 18741                           ; BSR set to: 0
 18742  005EEA  0E40               	movlw	64
 18743  005EEC  6560               	cpfsgt	unhex@c& (0+255),b
 18744  005EEE  D006               	goto	l671
 18745                           
 18746                           ; BSR set to: 0
 18747  005EF0  0E47               	movlw	71
 18748  005EF2  6160               	cpfslt	unhex@c& (0+255),b
 18749  005EF4  D003               	goto	l671
 18750                           
 18751                           ; BSR set to: 0
 18752                           ;MOTEapp.c: 1177: return c - 'A' + 10;
 18753  005EF6  5160               	movf	unhex@c& (0+255),w,b
 18754  005EF8  0FC9               	addlw	201
 18755                           
 18756                           ; BSR set to: 0
 18757  005EFA  0012               	return	
 18758  005EFC                     l671:
 18759                           
 18760                           ; BSR set to: 0
 18761                           ;MOTEapp.c: 1178: return '-';
 18762                           
 18763                           ; BSR set to: 0
 18764  005EFC  0E2D               	movlw	45
 18765  005EFE  0012               	return	
 18766  005F00                     __end_of_unhex:
 18767                           	opt stack 0
 18768                           tblptru	equ	0xFF8
 18769                           tblptrh	equ	0xFF7
 18770                           tblptrl	equ	0xFF6
 18771                           tablat	equ	0xFF5
 18772                           prodh	equ	0xFF4
 18773                           prodl	equ	0xFF3
 18774                           intcon	equ	0xFF2
 18775                           intcon3	equ	0xFF0
 18776                           postinc0	equ	0xFEE
 18777                           wreg	equ	0xFE8
 18778                           indf1	equ	0xFE7
 18779                           postdec1	equ	0xFE5
 18780                           fsr1h	equ	0xFE2
 18781                           fsr1l	equ	0xFE1
 18782                           indf2	equ	0xFDF
 18783                           postinc2	equ	0xFDE
 18784                           fsr2h	equ	0xFDA
 18785                           fsr2l	equ	0xFD9
 18786                           status	equ	0xFD8
 18787                           
 18788 ;; *************** function _outFIFO *****************
 18789 ;; Defined at:
 18790 ;;		line 272 in file "../Includes/Drivers/swUart.c"
 18791 ;; Parameters:    Size  Location     Type
 18792 ;;		None
 18793 ;; Auto vars:     Size  Location     Type
 18794 ;;  retVal          1    0[BANK0 ] unsigned char 
 18795 ;; Return value:  Size  Location     Type
 18796 ;;                  1    wreg      unsigned char 
 18797 ;; Registers used:
 18798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18799 ;; Tracked objects:
 18800 ;;		On entry : 0/0
 18801 ;;		On exit  : 0/0
 18802 ;;		Unchanged: 0/0
 18803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18804 ;;      Params:         0       0       0       0       0       0       0       0       0
 18805 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18806 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18807 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18808 ;;Total ram usage:        1 bytes
 18809 ;; Hardware stack levels used:    1
 18810 ;; Hardware stack levels required when called:   11
 18811 ;; This function calls:
 18812 ;;		Nothing
 18813 ;; This function is called by:
 18814 ;;		_moteApp_searchFrameGPS
 18815 ;; This function uses a non-reentrant model
 18816 ;;
 18817                           
 18818                           	psect	text55
 18819  005C0E                     __ptext55:
 18820                           	opt stack 0
 18821  005C0E                     _outFIFO:
 18822                           	opt stack 17
 18823                           
 18824                           ;swUart.c: 274: uint8_t retVal = 0;
 18825                           
 18826                           ; BSR set to: 0
 18827                           ;incstack = 0
 18828  005C0E  0E00               	movlw	0
 18829  005C10  0100               	movlb	0	; () banked
 18830  005C12  6F60               	movwf	outFIFO@retVal& (0+255),b
 18831                           
 18832                           ; BSR set to: 0
 18833                           ;swUart.c: 275: (INTCONbits.GIE = 0);
 18834  005C14  9EF2               	bcf	intcon,7,c	;volatile
 18835                           
 18836                           ; BSR set to: 0
 18837                           ;swUart.c: 276: if(countIn != countOut)
 18838  005C16  51E4               	movf	_countOut& (0+255),w,b
 18839  005C18  19E3               	xorwf	_countIn& (0+255),w,b
 18840  005C1A  B4D8               	btfsc	status,2,c
 18841  005C1C  D011               	goto	l1242
 18842                           
 18843                           ; BSR set to: 0
 18844                           ;swUart.c: 277: {
 18845                           ;swUart.c: 278: retVal = buffer_rx[countOut];
 18846  005C1E  51E4               	movf	_countOut& (0+255),w,b
 18847  005C20  0D01               	mullw	1
 18848  005C22  0E00               	movlw	low _buffer_rx
 18849  005C24  24F3               	addwf	prodl,w,c
 18850  005C26  6ED9               	movwf	fsr2l,c
 18851  005C28  0E06               	movlw	high _buffer_rx
 18852  005C2A  20F4               	addwfc	prodh,w,c
 18853  005C2C  6EDA               	movwf	fsr2h,c
 18854  005C2E  50DF               	movf	indf2,w,c
 18855  005C30  6F60               	movwf	outFIFO@retVal& (0+255),b
 18856                           
 18857                           ; BSR set to: 0
 18858                           ;swUart.c: 279: countOut ++;
 18859  005C32  2BE4               	incf	_countOut& (0+255),f,b
 18860                           
 18861                           ; BSR set to: 0
 18862                           ;swUart.c: 280: if(countOut == 200){
 18863  005C34  0EC8               	movlw	200
 18864  005C36  19E4               	xorwf	_countOut& (0+255),w,b
 18865  005C38  A4D8               	btfss	status,2,c
 18866  005C3A  D002               	goto	l1242
 18867                           
 18868                           ; BSR set to: 0
 18869                           ;swUart.c: 281: countOut = 0;
 18870  005C3C  0E00               	movlw	0
 18871  005C3E  6FE4               	movwf	_countOut& (0+255),b
 18872  005C40                     l1242:
 18873                           
 18874                           ; BSR set to: 0
 18875                           ;swUart.c: 282: }
 18876                           ;swUart.c: 283: }
 18877                           ;swUart.c: 284: (INTCONbits.GIE = 1);
 18878                           
 18879                           ; BSR set to: 0
 18880                           
 18881                           ; BSR set to: 0
 18882  005C40  8EF2               	bsf	intcon,7,c	;volatile
 18883                           
 18884                           ;swUart.c: 285: return retVal;
 18885  005C42  5160               	movf	outFIFO@retVal& (0+255),w,b
 18886  005C44  0012               	return	
 18887  005C46                     __end_of_outFIFO:
 18888                           	opt stack 0
 18889                           tblptru	equ	0xFF8
 18890                           tblptrh	equ	0xFF7
 18891                           tblptrl	equ	0xFF6
 18892                           tablat	equ	0xFF5
 18893                           prodh	equ	0xFF4
 18894                           prodl	equ	0xFF3
 18895                           intcon	equ	0xFF2
 18896                           intcon3	equ	0xFF0
 18897                           postinc0	equ	0xFEE
 18898                           wreg	equ	0xFE8
 18899                           indf1	equ	0xFE7
 18900                           postdec1	equ	0xFE5
 18901                           fsr1h	equ	0xFE2
 18902                           fsr1l	equ	0xFE1
 18903                           indf2	equ	0xFDF
 18904                           postinc2	equ	0xFDE
 18905                           fsr2h	equ	0xFDA
 18906                           fsr2l	equ	0xFD9
 18907                           status	equ	0xFD8
 18908                           
 18909 ;; *************** function _oled_putint8 *****************
 18910 ;; Defined at:
 18911 ;;		line 278 in file "../Includes/Drivers/SSD1306oLED.c"
 18912 ;; Parameters:    Size  Location     Type
 18913 ;;  number          1    wreg     unsigned char 
 18914 ;;  station_dot     1   24[BANK0 ] unsigned char 
 18915 ;;  start_page      1   25[BANK0 ] unsigned char 
 18916 ;; Auto vars:     Size  Location     Type
 18917 ;;  number          1   33[BANK0 ] unsigned char 
 18918 ;;  numData         6   27[BANK0 ] struct .
 18919 ;;  negative        1   26[BANK0 ] unsigned char 
 18920 ;; Return value:  Size  Location     Type
 18921 ;;                  1    wreg      void 
 18922 ;; Registers used:
 18923 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18924 ;; Tracked objects:
 18925 ;;		On entry : 0/0
 18926 ;;		On exit  : 0/0
 18927 ;;		Unchanged: 0/0
 18928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18929 ;;      Params:         0       2       0       0       0       0       0       0       0
 18930 ;;      Locals:         0       8       0       0       0       0       0       0       0
 18931 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18932 ;;      Totals:         0      10       0       0       0       0       0       0       0
 18933 ;;Total ram usage:       10 bytes
 18934 ;; Hardware stack levels used:    1
 18935 ;; Hardware stack levels required when called:   15
 18936 ;; This function calls:
 18937 ;;		___awmod
 18938 ;;		___lbdiv
 18939 ;;		_oled_putString
 18940 ;; This function is called by:
 18941 ;;		_moteHandler
 18942 ;;		_moteRunningProcess
 18943 ;;		_moteApp_testSensors
 18944 ;;		_moteApp_searchFrameGPS
 18945 ;; This function uses a non-reentrant model
 18946 ;;
 18947                           
 18948                           	psect	text56
 18949  0047E0                     __ptext56:
 18950                           	opt stack 0
 18951  0047E0                     _oled_putint8:
 18952                           	opt stack 13
 18953                           
 18954                           ; BSR set to: 0
 18955                           ;incstack = 0
 18956                           ;oled_putint8@number stored from wreg
 18957  0047E0  0100               	movlb	0	; () banked
 18958  0047E2  6F81               	movwf	oled_putint8@number& (0+255),b
 18959                           
 18960                           ;SSD1306oLED.c: 280: display_data_t numData;
 18961                           ;SSD1306oLED.c: 281: bool negative = 0;
 18962  0047E4  0E00               	movlw	0
 18963  0047E6  0100               	movlb	0	; () banked
 18964  0047E8  6F7A               	movwf	oled_putint8@negative& (0+255),b
 18965                           
 18966                           ; BSR set to: 0
 18967                           ;SSD1306oLED.c: 283: if(number & 0x80)
 18968  0047EA  AF81               	btfss	oled_putint8@number& (0+255),7,b
 18969  0047EC  D002               	goto	l1083
 18970                           
 18971                           ; BSR set to: 0
 18972                           ;SSD1306oLED.c: 284: negative = 1;
 18973  0047EE  0E01               	movlw	1
 18974  0047F0  6F7A               	movwf	oled_putint8@negative& (0+255),b
 18975  0047F2                     l1083:
 18976                           
 18977                           ; BSR set to: 0
 18978                           ;SSD1306oLED.c: 285: number = (number & 0x7F);
 18979                           
 18980                           ; BSR set to: 0
 18981  0047F2  5181               	movf	oled_putint8@number& (0+255),w,b
 18982  0047F4  0B7F               	andlw	127
 18983  0047F6  6F81               	movwf	oled_putint8@number& (0+255),b
 18984                           
 18985                           ; BSR set to: 0
 18986                           ;SSD1306oLED.c: 287: numData.d2 = '0' + (number % 10);
 18987  0047F8  C081  F060         	movff	oled_putint8@number,___awmod@dividend
 18988  0047FC  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 18989  0047FE  0E00               	movlw	0
 18990  004800  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 18991  004802  0E0A               	movlw	10
 18992  004804  6F62               	movwf	___awmod@divisor& (0+255),b
 18993  004806  ECC0  F029         	call	___awmod	;wreg free
 18994  00480A  0100               	movlb	0	; () banked
 18995  00480C  5160               	movf	?___awmod& (0+255),w,b
 18996  00480E  0F30               	addlw	48
 18997  004810  6F7D               	movwf	(oled_putint8@numData+2)& (0+255),b
 18998                           
 18999                           ; BSR set to: 0
 19000                           ;SSD1306oLED.c: 288: number /= 10;
 19001  004812  0E0A               	movlw	10
 19002  004814  6F60               	movwf	___lbdiv@divisor& (0+255),b
 19003  004816  5181               	movf	oled_putint8@number& (0+255),w,b
 19004  004818  EC51  F02D         	call	___lbdiv
 19005  00481C  0100               	movlb	0	; () banked
 19006  00481E  6F81               	movwf	oled_putint8@number& (0+255),b
 19007                           
 19008                           ; BSR set to: 0
 19009                           ;SSD1306oLED.c: 289: numData.d1 = '0' + (number % 10);
 19010  004820  C081  F060         	movff	oled_putint8@number,___awmod@dividend
 19011  004824  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 19012  004826  0E00               	movlw	0
 19013  004828  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 19014  00482A  0E0A               	movlw	10
 19015  00482C  6F62               	movwf	___awmod@divisor& (0+255),b
 19016  00482E  ECC0  F029         	call	___awmod	;wreg free
 19017  004832  0100               	movlb	0	; () banked
 19018  004834  5160               	movf	?___awmod& (0+255),w,b
 19019  004836  0F30               	addlw	48
 19020  004838  6F7C               	movwf	(oled_putint8@numData+1)& (0+255),b
 19021                           
 19022                           ; BSR set to: 0
 19023                           ;SSD1306oLED.c: 290: number /= 10;
 19024  00483A  0E0A               	movlw	10
 19025  00483C  6F60               	movwf	___lbdiv@divisor& (0+255),b
 19026  00483E  5181               	movf	oled_putint8@number& (0+255),w,b
 19027  004840  EC51  F02D         	call	___lbdiv
 19028  004844  0100               	movlb	0	; () banked
 19029  004846  6F81               	movwf	oled_putint8@number& (0+255),b
 19030                           
 19031                           ; BSR set to: 0
 19032                           ;SSD1306oLED.c: 291: numData.d0 = '0' + (number % 10);
 19033  004848  C081  F060         	movff	oled_putint8@number,___awmod@dividend
 19034  00484C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 19035  00484E  0E00               	movlw	0
 19036  004850  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 19037  004852  0E0A               	movlw	10
 19038  004854  6F62               	movwf	___awmod@divisor& (0+255),b
 19039  004856  ECC0  F029         	call	___awmod	;wreg free
 19040  00485A  0100               	movlb	0	; () banked
 19041  00485C  5160               	movf	?___awmod& (0+255),w,b
 19042  00485E  0F30               	addlw	48
 19043  004860  6F7B               	movwf	oled_putint8@numData& (0+255),b
 19044                           
 19045                           ; BSR set to: 0
 19046                           ;SSD1306oLED.c: 292: if(negative)
 19047  004862  517A               	movf	oled_putint8@negative& (0+255),w,b
 19048  004864  B4D8               	btfsc	status,2,c
 19049  004866  D002               	goto	l1084
 19050                           
 19051                           ; BSR set to: 0
 19052                           ;SSD1306oLED.c: 293: numData.d0 = '-';
 19053  004868  0E2D               	movlw	45
 19054  00486A  6F7B               	movwf	oled_putint8@numData& (0+255),b
 19055  00486C                     l1084:
 19056                           
 19057                           ; BSR set to: 0
 19058                           ;SSD1306oLED.c: 295: numData.b[3]=0;
 19059  00486C  0E00               	movlw	0
 19060  00486E  6F7E               	movwf	(oled_putint8@numData+3)& (0+255),b
 19061                           
 19062                           ; BSR set to: 0
 19063                           ;SSD1306oLED.c: 297: oled_putString(numData.b,station_dot,start_page);
 19064  004870  0E7B               	movlw	low oled_putint8@numData
 19065  004872  6F72               	movwf	oled_putString@string& (0+255),b
 19066  004874  0E00               	movlw	high oled_putint8@numData
 19067  004876  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 19068  004878  5172               	movf	oled_putString@string& (0+255),w,b
 19069  00487A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 19070  00487C  A4D8               	btfss	status,2,c
 19071  00487E  0E20               	movlw	32
 19072  004880  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 19073  004882  C078  F075         	movff	oled_putint8@station_dot,oled_putString@station_dot
 19074  004886  C079  F076         	movff	oled_putint8@start_page,oled_putString@start_page
 19075  00488A  EC14  F029         	call	_oled_putString	;wreg free
 19076  00488E  0012               	return		;funcret
 19077  004890                     __end_of_oled_putint8:
 19078                           	opt stack 0
 19079                           tblptru	equ	0xFF8
 19080                           tblptrh	equ	0xFF7
 19081                           tblptrl	equ	0xFF6
 19082                           tablat	equ	0xFF5
 19083                           prodh	equ	0xFF4
 19084                           prodl	equ	0xFF3
 19085                           intcon	equ	0xFF2
 19086                           intcon3	equ	0xFF0
 19087                           postinc0	equ	0xFEE
 19088                           wreg	equ	0xFE8
 19089                           indf1	equ	0xFE7
 19090                           postdec1	equ	0xFE5
 19091                           fsr1h	equ	0xFE2
 19092                           fsr1l	equ	0xFE1
 19093                           indf2	equ	0xFDF
 19094                           postinc2	equ	0xFDE
 19095                           fsr2h	equ	0xFDA
 19096                           fsr2l	equ	0xFD9
 19097                           status	equ	0xFD8
 19098                           
 19099 ;; *************** function ___lbdiv *****************
 19100 ;; Defined at:
 19101 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lbdiv.c"
 19102 ;; Parameters:    Size  Location     Type
 19103 ;;  dividend        1    wreg     unsigned char 
 19104 ;;  divisor         1    0[BANK0 ] unsigned char 
 19105 ;; Auto vars:     Size  Location     Type
 19106 ;;  dividend        1    1[BANK0 ] unsigned char 
 19107 ;;  quotient        1    3[BANK0 ] unsigned char 
 19108 ;;  counter         1    2[BANK0 ] unsigned char 
 19109 ;; Return value:  Size  Location     Type
 19110 ;;                  1    wreg      unsigned char 
 19111 ;; Registers used:
 19112 ;;		wreg, status,2, status,0
 19113 ;; Tracked objects:
 19114 ;;		On entry : 0/0
 19115 ;;		On exit  : 0/0
 19116 ;;		Unchanged: 0/0
 19117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19118 ;;      Params:         0       1       0       0       0       0       0       0       0
 19119 ;;      Locals:         0       3       0       0       0       0       0       0       0
 19120 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19121 ;;      Totals:         0       4       0       0       0       0       0       0       0
 19122 ;;Total ram usage:        4 bytes
 19123 ;; Hardware stack levels used:    1
 19124 ;; Hardware stack levels required when called:   11
 19125 ;; This function calls:
 19126 ;;		Nothing
 19127 ;; This function is called by:
 19128 ;;		_moteApp_add8bToDataBuffer
 19129 ;;		_oled_putUint8
 19130 ;;		_oled_putint8
 19131 ;; This function uses a non-reentrant model
 19132 ;;
 19133                           
 19134                           	psect	text57
 19135  005AA2                     __ptext57:
 19136                           	opt stack 0
 19137  005AA2                     ___lbdiv:
 19138                           	opt stack 16
 19139                           
 19140                           ;incstack = 0
 19141                           ;___lbdiv@dividend stored from wreg
 19142  005AA2  0100               	movlb	0	; () banked
 19143  005AA4  6F61               	movwf	___lbdiv@dividend& (0+255),b
 19144  005AA6  0E00               	movlw	0
 19145  005AA8  0100               	movlb	0	; () banked
 19146  005AAA  6F63               	movwf	___lbdiv@quotient& (0+255),b
 19147                           
 19148                           ; BSR set to: 0
 19149  005AAC  5160               	movf	___lbdiv@divisor& (0+255),w,b
 19150  005AAE  B4D8               	btfsc	status,2,c
 19151  005AB0  D015               	goto	l2659
 19152                           
 19153                           ; BSR set to: 0
 19154  005AB2  0E01               	movlw	1
 19155  005AB4  6F62               	movwf	___lbdiv@counter& (0+255),b
 19156  005AB6  D003               	goto	l2654
 19157  005AB8                     
 19158                           ; BSR set to: 0
 19159                           
 19160                           ; BSR set to: 0
 19161  005AB8  90D8               	bcf	status,0,c
 19162  005ABA  3760               	rlcf	___lbdiv@divisor& (0+255),f,b
 19163                           
 19164                           ; BSR set to: 0
 19165  005ABC  2B62               	incf	___lbdiv@counter& (0+255),f,b
 19166  005ABE                     l2654:
 19167                           
 19168                           ; BSR set to: 0
 19169                           
 19170                           ; BSR set to: 0
 19171  005ABE  AF60               	btfss	___lbdiv@divisor& (0+255),7,b
 19172  005AC0  D7FB               	goto	l2655
 19173  005AC2                     u7990:
 19174                           
 19175                           ; BSR set to: 0
 19176                           
 19177                           ; BSR set to: 0
 19178                           
 19179                           ; BSR set to: 0
 19180  005AC2  90D8               	bcf	status,0,c
 19181  005AC4  3763               	rlcf	___lbdiv@quotient& (0+255),f,b
 19182  005AC6  5160               	movf	___lbdiv@divisor& (0+255),w,b
 19183  005AC8  5D61               	subwf	___lbdiv@dividend& (0+255),w,b
 19184  005ACA  A0D8               	btfss	status,0,c
 19185  005ACC  D003               	goto	l2658
 19186                           
 19187                           ; BSR set to: 0
 19188  005ACE  5160               	movf	___lbdiv@divisor& (0+255),w,b
 19189  005AD0  5F61               	subwf	___lbdiv@dividend& (0+255),f,b
 19190                           
 19191                           ; BSR set to: 0
 19192  005AD2  8163               	bsf	___lbdiv@quotient& (0+255),0,b
 19193  005AD4                     l2658:
 19194                           
 19195                           ; BSR set to: 0
 19196                           
 19197                           ; BSR set to: 0
 19198  005AD4  90D8               	bcf	status,0,c
 19199  005AD6  3360               	rrcf	___lbdiv@divisor& (0+255),f,b
 19200                           
 19201                           ; BSR set to: 0
 19202  005AD8  2F62               	decfsz	___lbdiv@counter& (0+255),f,b
 19203  005ADA  D7F3               	goto	u7990
 19204  005ADC                     l2659:
 19205                           
 19206                           ; BSR set to: 0
 19207                           
 19208                           ; BSR set to: 0
 19209                           
 19210                           ; BSR set to: 0
 19211  005ADC  5163               	movf	___lbdiv@quotient& (0+255),w,b
 19212  005ADE  0012               	return	
 19213  005AE0                     __end_of___lbdiv:
 19214                           	opt stack 0
 19215                           tblptru	equ	0xFF8
 19216                           tblptrh	equ	0xFF7
 19217                           tblptrl	equ	0xFF6
 19218                           tablat	equ	0xFF5
 19219                           prodh	equ	0xFF4
 19220                           prodl	equ	0xFF3
 19221                           intcon	equ	0xFF2
 19222                           intcon3	equ	0xFF0
 19223                           postinc0	equ	0xFEE
 19224                           wreg	equ	0xFE8
 19225                           indf1	equ	0xFE7
 19226                           postdec1	equ	0xFE5
 19227                           fsr1h	equ	0xFE2
 19228                           fsr1l	equ	0xFE1
 19229                           indf2	equ	0xFDF
 19230                           postinc2	equ	0xFDE
 19231                           fsr2h	equ	0xFDA
 19232                           fsr2l	equ	0xFD9
 19233                           status	equ	0xFD8
 19234                           
 19235 ;; *************** function ___awmod *****************
 19236 ;; Defined at:
 19237 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 19238 ;; Parameters:    Size  Location     Type
 19239 ;;  dividend        2    0[BANK0 ] int 
 19240 ;;  divisor         2    2[BANK0 ] int 
 19241 ;; Auto vars:     Size  Location     Type
 19242 ;;  sign            1    5[BANK0 ] unsigned char 
 19243 ;;  counter         1    4[BANK0 ] unsigned char 
 19244 ;; Return value:  Size  Location     Type
 19245 ;;                  2    0[BANK0 ] int 
 19246 ;; Registers used:
 19247 ;;		wreg, status,2, status,0
 19248 ;; Tracked objects:
 19249 ;;		On entry : 0/0
 19250 ;;		On exit  : 0/0
 19251 ;;		Unchanged: 0/0
 19252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19253 ;;      Params:         0       4       0       0       0       0       0       0       0
 19254 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19255 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19256 ;;      Totals:         0       6       0       0       0       0       0       0       0
 19257 ;;Total ram usage:        6 bytes
 19258 ;; Hardware stack levels used:    1
 19259 ;; Hardware stack levels required when called:   11
 19260 ;; This function calls:
 19261 ;;		Nothing
 19262 ;; This function is called by:
 19263 ;;		_moteApp_add8bToDataBuffer
 19264 ;;		_oled_putUint8
 19265 ;;		_oled_putint8
 19266 ;; This function uses a non-reentrant model
 19267 ;;
 19268                           
 19269                           	psect	text58
 19270  005380                     __ptext58:
 19271                           	opt stack 0
 19272  005380                     ___awmod:
 19273                           	opt stack 16
 19274                           
 19275                           ; BSR set to: 0
 19276                           ;incstack = 0
 19277  005380  0E00               	movlw	0
 19278  005382  0100               	movlb	0	; () banked
 19279  005384  6F65               	movwf	___awmod@sign& (0+255),b
 19280                           
 19281                           ; BSR set to: 0
 19282  005386  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19283  005388  D006               	goto	l2505
 19284                           
 19285                           ; BSR set to: 0
 19286  00538A  6D60               	negf	___awmod@dividend& (0+255),b
 19287  00538C  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 19288  00538E  B0D8               	btfsc	status,0,c
 19289  005390  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 19290                           
 19291                           ; BSR set to: 0
 19292  005392  0E01               	movlw	1
 19293  005394  6F65               	movwf	___awmod@sign& (0+255),b
 19294  005396                     l2505:
 19295                           
 19296                           ; BSR set to: 0
 19297                           
 19298                           ; BSR set to: 0
 19299  005396  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19300  005398  D004               	goto	l2506
 19301                           
 19302                           ; BSR set to: 0
 19303  00539A  6D62               	negf	___awmod@divisor& (0+255),b
 19304  00539C  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 19305  00539E  B0D8               	btfsc	status,0,c
 19306  0053A0  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 19307  0053A2                     l2506:
 19308                           
 19309                           ; BSR set to: 0
 19310                           
 19311                           ; BSR set to: 0
 19312  0053A2  5162               	movf	___awmod@divisor& (0+255),w,b
 19313  0053A4  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19314  0053A6  B4D8               	btfsc	status,2,c
 19315  0053A8  D018               	goto	l2513
 19316                           
 19317                           ; BSR set to: 0
 19318  0053AA  0E01               	movlw	1
 19319  0053AC  6F64               	movwf	___awmod@counter& (0+255),b
 19320  0053AE  D004               	goto	l2508
 19321  0053B0                     
 19322                           ; BSR set to: 0
 19323                           
 19324                           ; BSR set to: 0
 19325  0053B0  90D8               	bcf	status,0,c
 19326  0053B2  3762               	rlcf	___awmod@divisor& (0+255),f,b
 19327  0053B4  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19328  0053B6  2B64               	incf	___awmod@counter& (0+255),f,b
 19329  0053B8                     l2508:
 19330                           
 19331                           ; BSR set to: 0
 19332                           
 19333                           ; BSR set to: 0
 19334  0053B8  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19335  0053BA  D7FA               	goto	l2509
 19336  0053BC                     u7880:
 19337                           
 19338                           ; BSR set to: 0
 19339                           
 19340                           ; BSR set to: 0
 19341                           
 19342                           ; BSR set to: 0
 19343  0053BC  5162               	movf	___awmod@divisor& (0+255),w,b
 19344  0053BE  5D60               	subwf	___awmod@dividend& (0+255),w,b
 19345  0053C0  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 19346  0053C2  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19347  0053C4  A0D8               	btfss	status,0,c
 19348  0053C6  D004               	goto	l2512
 19349                           
 19350                           ; BSR set to: 0
 19351  0053C8  5162               	movf	___awmod@divisor& (0+255),w,b
 19352  0053CA  5F60               	subwf	___awmod@dividend& (0+255),f,b
 19353  0053CC  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 19354  0053CE  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19355  0053D0                     l2512:
 19356                           
 19357                           ; BSR set to: 0
 19358                           
 19359                           ; BSR set to: 0
 19360  0053D0  90D8               	bcf	status,0,c
 19361  0053D2  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19362  0053D4  3362               	rrcf	___awmod@divisor& (0+255),f,b
 19363                           
 19364                           ; BSR set to: 0
 19365  0053D6  2F64               	decfsz	___awmod@counter& (0+255),f,b
 19366  0053D8  D7F1               	goto	u7880
 19367  0053DA                     l2513:
 19368                           
 19369                           ; BSR set to: 0
 19370                           
 19371                           ; BSR set to: 0
 19372                           
 19373                           ; BSR set to: 0
 19374  0053DA  5165               	movf	___awmod@sign& (0+255),w,b
 19375  0053DC  B4D8               	btfsc	status,2,c
 19376  0053DE  D004               	goto	l2514
 19377                           
 19378                           ; BSR set to: 0
 19379  0053E0  6D60               	negf	___awmod@dividend& (0+255),b
 19380  0053E2  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 19381  0053E4  B0D8               	btfsc	status,0,c
 19382  0053E6  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 19383  0053E8                     l2514:
 19384                           
 19385                           ; BSR set to: 0
 19386                           
 19387                           ; BSR set to: 0
 19388  0053E8  C060  F060         	movff	___awmod@dividend,?___awmod
 19389  0053EC  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 19390  0053F0  0012               	return	
 19391  0053F2                     __end_of___awmod:
 19392                           	opt stack 0
 19393                           tblptru	equ	0xFF8
 19394                           tblptrh	equ	0xFF7
 19395                           tblptrl	equ	0xFF6
 19396                           tablat	equ	0xFF5
 19397                           prodh	equ	0xFF4
 19398                           prodl	equ	0xFF3
 19399                           intcon	equ	0xFF2
 19400                           intcon3	equ	0xFF0
 19401                           postinc0	equ	0xFEE
 19402                           wreg	equ	0xFE8
 19403                           indf1	equ	0xFE7
 19404                           postdec1	equ	0xFE5
 19405                           fsr1h	equ	0xFE2
 19406                           fsr1l	equ	0xFE1
 19407                           indf2	equ	0xFDF
 19408                           postinc2	equ	0xFDE
 19409                           fsr2h	equ	0xFDA
 19410                           fsr2l	equ	0xFD9
 19411                           status	equ	0xFD8
 19412                           
 19413 ;; *************** function _oled_putStringLineN *****************
 19414 ;; Defined at:
 19415 ;;		line 331 in file "../Includes/Drivers/SSD1306oLED.c"
 19416 ;; Parameters:    Size  Location     Type
 19417 ;;  string          2   12[BANK0 ] PTR const unsigned char 
 19418 ;;		 -> dataFrameGPS(200), 
 19419 ;; Auto vars:     Size  Location     Type
 19420 ;;  index           1   16[BANK0 ] unsigned char 
 19421 ;;  page            1   15[BANK0 ] unsigned char 
 19422 ;;  indexLine       1   14[BANK0 ] unsigned char 
 19423 ;; Return value:  Size  Location     Type
 19424 ;;                  1    wreg      void 
 19425 ;; Registers used:
 19426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19427 ;; Tracked objects:
 19428 ;;		On entry : 0/0
 19429 ;;		On exit  : 0/0
 19430 ;;		Unchanged: 0/0
 19431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19432 ;;      Params:         0       2       0       0       0       0       0       0       0
 19433 ;;      Locals:         0       3       0       0       0       0       0       0       0
 19434 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19435 ;;      Totals:         0       5       0       0       0       0       0       0       0
 19436 ;;Total ram usage:        5 bytes
 19437 ;; Hardware stack levels used:    1
 19438 ;; Hardware stack levels required when called:   14
 19439 ;; This function calls:
 19440 ;;		___awdiv
 19441 ;;		_oled_putChar
 19442 ;; This function is called by:
 19443 ;;		_moteApp_searchFrameGPS
 19444 ;; This function uses a non-reentrant model
 19445 ;;
 19446                           
 19447                           	psect	text59
 19448  005816                     __ptext59:
 19449                           	opt stack 0
 19450  005816                     _oled_putStringLineN:
 19451                           	opt stack 14
 19452                           
 19453                           ;SSD1306oLED.c: 333: uint8_t index;
 19454                           ;SSD1306oLED.c: 334: uint8_t indexLine;
 19455                           ;SSD1306oLED.c: 335: uint8_t page;
 19456                           ;SSD1306oLED.c: 337: for(index = 0;; index++)
 19457                           
 19458                           ; BSR set to: 0
 19459                           ;incstack = 0
 19460  005816  0E00               	movlw	0
 19461  005818  0100               	movlb	0	; () banked
 19462  00581A  6F70               	movwf	oled_putStringLineN@index& (0+255),b
 19463  00581C                     
 19464                           ; BSR set to: 0
 19465                           ;SSD1306oLED.c: 338: {
 19466                           ;SSD1306oLED.c: 339: if (*string != 0)
 19467                           
 19468                           ; BSR set to: 0
 19469  00581C  C06C  FFD9         	movff	oled_putStringLineN@string,fsr2l
 19470  005820  C06D  FFDA         	movff	oled_putStringLineN@string+1,fsr2h
 19471  005824  50DF               	movf	indf2,w,c
 19472  005826  B4D8               	btfsc	status,2,c
 19473  005828  0012               	return	
 19474                           
 19475                           ; BSR set to: 0
 19476                           ;SSD1306oLED.c: 340: {
 19477                           ;SSD1306oLED.c: 341: page = index / 16;
 19478  00582A  C070  F060         	movff	oled_putStringLineN@index,___awdiv@dividend
 19479  00582E  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 19480  005830  0E00               	movlw	0
 19481  005832  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 19482  005834  0E10               	movlw	16
 19483  005836  6F62               	movwf	___awdiv@divisor& (0+255),b
 19484  005838  EC0F  F027         	call	___awdiv	;wreg free
 19485  00583C  0100               	movlb	0	; () banked
 19486  00583E  5160               	movf	?___awdiv& (0+255),w,b
 19487  005840  6F6F               	movwf	oled_putStringLineN@page& (0+255),b
 19488                           
 19489                           ; BSR set to: 0
 19490                           ;SSD1306oLED.c: 342: indexLine = index % 16;
 19491  005842  5170               	movf	oled_putStringLineN@index& (0+255),w,b
 19492  005844  0B0F               	andlw	15
 19493  005846  6F6E               	movwf	oled_putStringLineN@indexLine& (0+255),b
 19494                           
 19495                           ; BSR set to: 0
 19496                           ;SSD1306oLED.c: 344: oled_putChar(*string, indexLine, page);
 19497  005848  C06E  F062         	movff	oled_putStringLineN@indexLine,oled_putChar@station_dot
 19498  00584C  C06F  F063         	movff	oled_putStringLineN@page,oled_putChar@start_page
 19499  005850  C06C  FFD9         	movff	oled_putStringLineN@string,fsr2l
 19500  005854  C06D  FFDA         	movff	oled_putStringLineN@string+1,fsr2h
 19501  005858  50DF               	movf	indf2,w,c
 19502  00585A  EC94  F027         	call	_oled_putChar
 19503                           
 19504                           ;SSD1306oLED.c: 345: *string++;
 19505  00585E  0100               	movlb	0	; () banked
 19506  005860  4B6C               	infsnz	oled_putStringLineN@string& (0+255),f,b
 19507  005862  2B6D               	incf	(oled_putStringLineN@string+1)& (0+255),f,b
 19508                           
 19509                           ; BSR set to: 0
 19510                           
 19511                           ; BSR set to: 0
 19512                           
 19513                           ; BSR set to: 0
 19514                           ;SSD1306oLED.c: 347: else
 19515                           ;SSD1306oLED.c: 348: {
 19516                           ;SSD1306oLED.c: 349: break;
 19517                           
 19518                           ;SSD1306oLED.c: 346: }
 19519  005864  2B70               	incf	oled_putStringLineN@index& (0+255),f,b
 19520  005866  D7DA               	goto	l1096
 19521  005868                     __end_of_oled_putStringLineN:
 19522                           	opt stack 0
 19523                           tblptru	equ	0xFF8
 19524                           tblptrh	equ	0xFF7
 19525                           tblptrl	equ	0xFF6
 19526                           tablat	equ	0xFF5
 19527                           prodh	equ	0xFF4
 19528                           prodl	equ	0xFF3
 19529                           intcon	equ	0xFF2
 19530                           intcon3	equ	0xFF0
 19531                           postinc0	equ	0xFEE
 19532                           wreg	equ	0xFE8
 19533                           indf1	equ	0xFE7
 19534                           postdec1	equ	0xFE5
 19535                           fsr1h	equ	0xFE2
 19536                           fsr1l	equ	0xFE1
 19537                           indf2	equ	0xFDF
 19538                           postinc2	equ	0xFDE
 19539                           fsr2h	equ	0xFDA
 19540                           fsr2l	equ	0xFD9
 19541                           status	equ	0xFD8
 19542                           
 19543 ;; *************** function ___awdiv *****************
 19544 ;; Defined at:
 19545 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 19546 ;; Parameters:    Size  Location     Type
 19547 ;;  dividend        2    0[BANK0 ] int 
 19548 ;;  divisor         2    2[BANK0 ] int 
 19549 ;; Auto vars:     Size  Location     Type
 19550 ;;  quotient        2    6[BANK0 ] int 
 19551 ;;  sign            1    5[BANK0 ] unsigned char 
 19552 ;;  counter         1    4[BANK0 ] unsigned char 
 19553 ;; Return value:  Size  Location     Type
 19554 ;;                  2    0[BANK0 ] int 
 19555 ;; Registers used:
 19556 ;;		wreg, status,2, status,0
 19557 ;; Tracked objects:
 19558 ;;		On entry : 0/0
 19559 ;;		On exit  : 0/0
 19560 ;;		Unchanged: 0/0
 19561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19562 ;;      Params:         0       4       0       0       0       0       0       0       0
 19563 ;;      Locals:         0       4       0       0       0       0       0       0       0
 19564 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19565 ;;      Totals:         0       8       0       0       0       0       0       0       0
 19566 ;;Total ram usage:        8 bytes
 19567 ;; Hardware stack levels used:    1
 19568 ;; Hardware stack levels required when called:   11
 19569 ;; This function calls:
 19570 ;;		Nothing
 19571 ;; This function is called by:
 19572 ;;		_oled_putStringLineN
 19573 ;; This function uses a non-reentrant model
 19574 ;;
 19575                           
 19576                           	psect	text60
 19577  004E1E                     __ptext60:
 19578                           	opt stack 0
 19579  004E1E                     ___awdiv:
 19580                           	opt stack 16
 19581                           
 19582                           ; BSR set to: 0
 19583                           ;incstack = 0
 19584  004E1E  0E00               	movlw	0
 19585  004E20  0100               	movlb	0	; () banked
 19586  004E22  6F65               	movwf	___awdiv@sign& (0+255),b
 19587                           
 19588                           ; BSR set to: 0
 19589  004E24  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19590  004E26  D006               	goto	l2492
 19591                           
 19592                           ; BSR set to: 0
 19593  004E28  6D62               	negf	___awdiv@divisor& (0+255),b
 19594  004E2A  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19595  004E2C  B0D8               	btfsc	status,0,c
 19596  004E2E  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19597                           
 19598                           ; BSR set to: 0
 19599  004E30  0E01               	movlw	1
 19600  004E32  6F65               	movwf	___awdiv@sign& (0+255),b
 19601  004E34                     l2492:
 19602                           
 19603                           ; BSR set to: 0
 19604                           
 19605                           ; BSR set to: 0
 19606  004E34  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19607  004E36  D006               	goto	l2493
 19608                           
 19609                           ; BSR set to: 0
 19610  004E38  6D60               	negf	___awdiv@dividend& (0+255),b
 19611  004E3A  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19612  004E3C  B0D8               	btfsc	status,0,c
 19613  004E3E  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19614                           
 19615                           ; BSR set to: 0
 19616  004E40  0E01               	movlw	1
 19617  004E42  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 19618  004E44                     l2493:
 19619                           
 19620                           ; BSR set to: 0
 19621                           
 19622                           ; BSR set to: 0
 19623  004E44  0E00               	movlw	0
 19624  004E46  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 19625  004E48  0E00               	movlw	0
 19626  004E4A  6F66               	movwf	___awdiv@quotient& (0+255),b
 19627                           
 19628                           ; BSR set to: 0
 19629  004E4C  5162               	movf	___awdiv@divisor& (0+255),w,b
 19630  004E4E  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19631  004E50  B4D8               	btfsc	status,2,c
 19632  004E52  D01C               	goto	l2500
 19633                           
 19634                           ; BSR set to: 0
 19635  004E54  0E01               	movlw	1
 19636  004E56  6F64               	movwf	___awdiv@counter& (0+255),b
 19637  004E58  D004               	goto	l2495
 19638  004E5A                     
 19639                           ; BSR set to: 0
 19640                           
 19641                           ; BSR set to: 0
 19642  004E5A  90D8               	bcf	status,0,c
 19643  004E5C  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 19644  004E5E  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19645  004E60  2B64               	incf	___awdiv@counter& (0+255),f,b
 19646  004E62                     l2495:
 19647                           
 19648                           ; BSR set to: 0
 19649                           
 19650                           ; BSR set to: 0
 19651  004E62  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19652  004E64  D7FA               	goto	l2496
 19653  004E66                     u7820:
 19654                           
 19655                           ; BSR set to: 0
 19656                           
 19657                           ; BSR set to: 0
 19658                           
 19659                           ; BSR set to: 0
 19660  004E66  90D8               	bcf	status,0,c
 19661  004E68  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 19662  004E6A  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19663                           
 19664                           ; BSR set to: 0
 19665  004E6C  5162               	movf	___awdiv@divisor& (0+255),w,b
 19666  004E6E  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 19667  004E70  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19668  004E72  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19669  004E74  A0D8               	btfss	status,0,c
 19670  004E76  D005               	goto	l2499
 19671                           
 19672                           ; BSR set to: 0
 19673  004E78  5162               	movf	___awdiv@divisor& (0+255),w,b
 19674  004E7A  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 19675  004E7C  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19676  004E7E  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19677                           
 19678                           ; BSR set to: 0
 19679  004E80  8166               	bsf	___awdiv@quotient& (0+255),0,b
 19680  004E82                     l2499:
 19681                           
 19682                           ; BSR set to: 0
 19683                           
 19684                           ; BSR set to: 0
 19685  004E82  90D8               	bcf	status,0,c
 19686  004E84  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19687  004E86  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 19688                           
 19689                           ; BSR set to: 0
 19690  004E88  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 19691  004E8A  D7ED               	goto	u7820
 19692  004E8C                     l2500:
 19693                           
 19694                           ; BSR set to: 0
 19695                           
 19696                           ; BSR set to: 0
 19697                           
 19698                           ; BSR set to: 0
 19699  004E8C  5165               	movf	___awdiv@sign& (0+255),w,b
 19700  004E8E  B4D8               	btfsc	status,2,c
 19701  004E90  D004               	goto	l2501
 19702                           
 19703                           ; BSR set to: 0
 19704  004E92  6D66               	negf	___awdiv@quotient& (0+255),b
 19705  004E94  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19706  004E96  B0D8               	btfsc	status,0,c
 19707  004E98  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19708  004E9A                     l2501:
 19709                           
 19710                           ; BSR set to: 0
 19711                           
 19712                           ; BSR set to: 0
 19713  004E9A  C066  F060         	movff	___awdiv@quotient,?___awdiv
 19714  004E9E  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 19715  004EA2  0012               	return	
 19716  004EA4                     __end_of___awdiv:
 19717                           	opt stack 0
 19718                           tblptru	equ	0xFF8
 19719                           tblptrh	equ	0xFF7
 19720                           tblptrl	equ	0xFF6
 19721                           tablat	equ	0xFF5
 19722                           prodh	equ	0xFF4
 19723                           prodl	equ	0xFF3
 19724                           intcon	equ	0xFF2
 19725                           intcon3	equ	0xFF0
 19726                           postinc0	equ	0xFEE
 19727                           wreg	equ	0xFE8
 19728                           indf1	equ	0xFE7
 19729                           postdec1	equ	0xFE5
 19730                           fsr1h	equ	0xFE2
 19731                           fsr1l	equ	0xFE1
 19732                           indf2	equ	0xFDF
 19733                           postinc2	equ	0xFDE
 19734                           fsr2h	equ	0xFDA
 19735                           fsr2l	equ	0xFD9
 19736                           status	equ	0xFD8
 19737                           
 19738 ;; *************** function _emptyFIFO *****************
 19739 ;; Defined at:
 19740 ;;		line 289 in file "../Includes/Drivers/swUart.c"
 19741 ;; Parameters:    Size  Location     Type
 19742 ;;		None
 19743 ;; Auto vars:     Size  Location     Type
 19744 ;;		None
 19745 ;; Return value:  Size  Location     Type
 19746 ;;                  1    wreg      unsigned char 
 19747 ;; Registers used:
 19748 ;;		wreg, status,2, status,0
 19749 ;; Tracked objects:
 19750 ;;		On entry : 0/0
 19751 ;;		On exit  : 0/0
 19752 ;;		Unchanged: 0/0
 19753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19754 ;;      Params:         0       0       0       0       0       0       0       0       0
 19755 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19756 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19757 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19758 ;;Total ram usage:        0 bytes
 19759 ;; Hardware stack levels used:    1
 19760 ;; Hardware stack levels required when called:   11
 19761 ;; This function calls:
 19762 ;;		Nothing
 19763 ;; This function is called by:
 19764 ;;		_moteApp_searchFrameGPS
 19765 ;; This function uses a non-reentrant model
 19766 ;;
 19767                           
 19768                           	psect	text61
 19769  0061D8                     __ptext61:
 19770                           	opt stack 0
 19771  0061D8                     _emptyFIFO:
 19772                           	opt stack 17
 19773                           
 19774                           ;swUart.c: 291: if(countIn == countOut)
 19775                           
 19776                           ; BSR set to: 0
 19777                           ;incstack = 0
 19778  0061D8  0100               	movlb	0	; () banked
 19779  0061DA  51E4               	movf	_countOut& (0+255),w,b
 19780  0061DC  19E3               	xorwf	_countIn& (0+255),w,b
 19781  0061DE  A4D8               	btfss	status,2,c
 19782  0061E0  D002               	goto	l1246
 19783                           
 19784                           ; BSR set to: 0
 19785                           ;swUart.c: 292: {
 19786                           ;swUart.c: 293: return 1;
 19787  0061E2  0E01               	movlw	1
 19788                           
 19789                           ; BSR set to: 0
 19790  0061E4  0012               	return	
 19791  0061E6                     l1246:
 19792                           
 19793                           ; BSR set to: 0
 19794                           ;swUart.c: 294: }
 19795                           ;swUart.c: 295: return 0;
 19796                           
 19797                           ; BSR set to: 0
 19798  0061E6  0E00               	movlw	0
 19799  0061E8  0012               	return	
 19800  0061EA                     __end_of_emptyFIFO:
 19801                           	opt stack 0
 19802                           tblptru	equ	0xFF8
 19803                           tblptrh	equ	0xFF7
 19804                           tblptrl	equ	0xFF6
 19805                           tablat	equ	0xFF5
 19806                           prodh	equ	0xFF4
 19807                           prodl	equ	0xFF3
 19808                           intcon	equ	0xFF2
 19809                           intcon3	equ	0xFF0
 19810                           postinc0	equ	0xFEE
 19811                           wreg	equ	0xFE8
 19812                           indf1	equ	0xFE7
 19813                           postdec1	equ	0xFE5
 19814                           fsr1h	equ	0xFE2
 19815                           fsr1l	equ	0xFE1
 19816                           indf2	equ	0xFDF
 19817                           postinc2	equ	0xFDE
 19818                           fsr2h	equ	0xFDA
 19819                           fsr2l	equ	0xFD9
 19820                           status	equ	0xFD8
 19821                           
 19822 ;; *************** function _USBapp_exitCDCState *****************
 19823 ;; Defined at:
 19824 ;;		line 139 in file "../Includes/Board/USBapp.c"
 19825 ;; Parameters:    Size  Location     Type
 19826 ;;  usbState        1    wreg     enum E5838
 19827 ;; Auto vars:     Size  Location     Type
 19828 ;;  usbState        1    0[BANK0 ] enum E5838
 19829 ;; Return value:  Size  Location     Type
 19830 ;;                  1    wreg      void 
 19831 ;; Registers used:
 19832 ;;		wreg
 19833 ;; Tracked objects:
 19834 ;;		On entry : 0/0
 19835 ;;		On exit  : 0/0
 19836 ;;		Unchanged: 0/0
 19837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19838 ;;      Params:         0       0       0       0       0       0       0       0       0
 19839 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19840 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19841 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19842 ;;Total ram usage:        1 bytes
 19843 ;; Hardware stack levels used:    1
 19844 ;; Hardware stack levels required when called:   11
 19845 ;; This function calls:
 19846 ;;		Nothing
 19847 ;; This function is called by:
 19848 ;;		_moteHandler
 19849 ;; This function uses a non-reentrant model
 19850 ;;
 19851                           
 19852                           	psect	text62
 19853  006278                     __ptext62:
 19854                           	opt stack 0
 19855  006278                     _USBapp_exitCDCState:
 19856                           	opt stack 18
 19857                           
 19858                           ; BSR set to: 0
 19859                           ;incstack = 0
 19860                           ;USBapp_exitCDCState@usbState stored from wreg
 19861  006278  0100               	movlb	0	; () banked
 19862  00627A  6F60               	movwf	USBapp_exitCDCState@usbState& (0+255),b
 19863                           
 19864                           ;USBapp.c: 141: exitUSB = usbState;
 19865  00627C  C060  F0F9         	movff	USBapp_exitCDCState@usbState,_exitUSB
 19866  006280  0012               	return		;funcret
 19867  006282                     __end_of_USBapp_exitCDCState:
 19868                           	opt stack 0
 19869                           tblptru	equ	0xFF8
 19870                           tblptrh	equ	0xFF7
 19871                           tblptrl	equ	0xFF6
 19872                           tablat	equ	0xFF5
 19873                           prodh	equ	0xFF4
 19874                           prodl	equ	0xFF3
 19875                           intcon	equ	0xFF2
 19876                           intcon3	equ	0xFF0
 19877                           postinc0	equ	0xFEE
 19878                           wreg	equ	0xFE8
 19879                           indf1	equ	0xFE7
 19880                           postdec1	equ	0xFE5
 19881                           fsr1h	equ	0xFE2
 19882                           fsr1l	equ	0xFE1
 19883                           indf2	equ	0xFDF
 19884                           postinc2	equ	0xFDE
 19885                           fsr2h	equ	0xFDA
 19886                           fsr2l	equ	0xFD9
 19887                           status	equ	0xFD8
 19888                           
 19889 ;; *************** function _USBapp_exitCDC *****************
 19890 ;; Defined at:
 19891 ;;		line 134 in file "../Includes/Board/USBapp.c"
 19892 ;; Parameters:    Size  Location     Type
 19893 ;;		None
 19894 ;; Auto vars:     Size  Location     Type
 19895 ;;		None
 19896 ;; Return value:  Size  Location     Type
 19897 ;;                  1    wreg      enum E5902
 19898 ;; Registers used:
 19899 ;;		wreg, status,2
 19900 ;; Tracked objects:
 19901 ;;		On entry : 0/0
 19902 ;;		On exit  : 0/0
 19903 ;;		Unchanged: 0/0
 19904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19905 ;;      Params:         0       0       0       0       0       0       0       0       0
 19906 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19907 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19908 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19909 ;;Total ram usage:        0 bytes
 19910 ;; Hardware stack levels used:    1
 19911 ;; Hardware stack levels required when called:   11
 19912 ;; This function calls:
 19913 ;;		Nothing
 19914 ;; This function is called by:
 19915 ;;		_moteHandler
 19916 ;; This function uses a non-reentrant model
 19917 ;;
 19918                           
 19919                           	psect	text63
 19920  0062C8                     __ptext63:
 19921                           	opt stack 0
 19922  0062C8                     _USBapp_exitCDC:
 19923                           	opt stack 18
 19924                           
 19925                           ;USBapp.c: 136: return exitUSB;
 19926                           
 19927                           ;incstack = 0
 19928  0062C8  0100               	movlb	0	; () banked
 19929  0062CA  51F9               	movf	_exitUSB& (0+255),w,b
 19930  0062CC  0012               	return	
 19931  0062CE                     __end_of_USBapp_exitCDC:
 19932                           	opt stack 0
 19933                           tblptru	equ	0xFF8
 19934                           tblptrh	equ	0xFF7
 19935                           tblptrl	equ	0xFF6
 19936                           tablat	equ	0xFF5
 19937                           prodh	equ	0xFF4
 19938                           prodl	equ	0xFF3
 19939                           intcon	equ	0xFF2
 19940                           intcon3	equ	0xFF0
 19941                           postinc0	equ	0xFEE
 19942                           wreg	equ	0xFE8
 19943                           indf1	equ	0xFE7
 19944                           postdec1	equ	0xFE5
 19945                           fsr1h	equ	0xFE2
 19946                           fsr1l	equ	0xFE1
 19947                           indf2	equ	0xFDF
 19948                           postinc2	equ	0xFDE
 19949                           fsr2h	equ	0xFDA
 19950                           fsr2l	equ	0xFD9
 19951                           status	equ	0xFD8
 19952                           
 19953 ;; *************** function _TMRapp_Handler *****************
 19954 ;; Defined at:
 19955 ;;		line 57 in file "../Includes/Drivers/TMRapp.c"
 19956 ;; Parameters:    Size  Location     Type
 19957 ;;		None
 19958 ;; Auto vars:     Size  Location     Type
 19959 ;;		None
 19960 ;; Return value:  Size  Location     Type
 19961 ;;                  1    wreg      void 
 19962 ;; Registers used:
 19963 ;;		wreg, status,2, status,0, cstack
 19964 ;; Tracked objects:
 19965 ;;		On entry : 0/0
 19966 ;;		On exit  : 0/0
 19967 ;;		Unchanged: 0/0
 19968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19969 ;;      Params:         0       0       0       0       0       0       0       0       0
 19970 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19971 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19972 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19973 ;;Total ram usage:        0 bytes
 19974 ;; Hardware stack levels used:    1
 19975 ;; Hardware stack levels required when called:   12
 19976 ;; This function calls:
 19977 ;;		___almod
 19978 ;;		___lwmod
 19979 ;; This function is called by:
 19980 ;;		_moteHandler
 19981 ;; This function uses a non-reentrant model
 19982 ;;
 19983                           
 19984                           	psect	text64
 19985  003482                     __ptext64:
 19986                           	opt stack 0
 19987  003482                     _TMRapp_Handler:
 19988                           	opt stack 17
 19989                           
 19990                           ;TMRapp.c: 60: timerMsTickCount++;
 19991                           
 19992                           ; BSR set to: 0
 19993                           ;incstack = 0
 19994  003482  0100               	movlb	0	; () banked
 19995  003484  4BD8               	infsnz	_timerMsTickCount& (0+255),f,b
 19996  003486  2BD9               	incf	(_timerMsTickCount+1)& (0+255),f,b
 19997                           
 19998                           ; BSR set to: 0
 19999                           ;TMRapp.c: 62: if ( (timerMsTickCount % 10) == 0)
 20000  003488  C0D8  F060         	movff	_timerMsTickCount,___lwmod@dividend
 20001  00348C  C0D9  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 20002  003490  0E00               	movlw	0
 20003  003492  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20004  003494  0E0A               	movlw	10
 20005  003496  6F62               	movwf	___lwmod@divisor& (0+255),b
 20006  003498  ECCD  F02C         	call	___lwmod	;wreg free
 20007  00349C  0100               	movlb	0	; () banked
 20008  00349E  5160               	movf	?___lwmod& (0+255),w,b
 20009  0034A0  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20010  0034A2  A4D8               	btfss	status,2,c
 20011  0034A4  0012               	return	
 20012                           
 20013                           ; BSR set to: 0
 20014                           ;TMRapp.c: 63: {
 20015                           ;TMRapp.c: 64: appTimer.mSecTenTick = 1;
 20016  0034A6  83F8               	bsf	_appTimer& (0+255),1,b
 20017                           
 20018                           ; BSR set to: 0
 20019                           ;TMRapp.c: 65: if ( (timerMsTickCount % 100) == 0)
 20020  0034A8  C0D8  F060         	movff	_timerMsTickCount,___lwmod@dividend
 20021  0034AC  C0D9  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 20022  0034B0  0E00               	movlw	0
 20023  0034B2  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20024  0034B4  0E64               	movlw	100
 20025  0034B6  6F62               	movwf	___lwmod@divisor& (0+255),b
 20026  0034B8  ECCD  F02C         	call	___lwmod	;wreg free
 20027  0034BC  0100               	movlb	0	; () banked
 20028  0034BE  5160               	movf	?___lwmod& (0+255),w,b
 20029  0034C0  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20030  0034C2  A4D8               	btfss	status,2,c
 20031  0034C4  0012               	return	
 20032                           
 20033                           ; BSR set to: 0
 20034                           ;TMRapp.c: 66: {
 20035                           ;TMRapp.c: 67: appTimer.mSecHundredTick = 1;
 20036  0034C6  85F8               	bsf	_appTimer& (0+255),2,b
 20037                           
 20038                           ; BSR set to: 0
 20039                           ;TMRapp.c: 68: if ( (timerMsTickCount % 1000) == 0)
 20040  0034C8  C0D8  F060         	movff	_timerMsTickCount,___lwmod@dividend
 20041  0034CC  C0D9  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 20042  0034D0  0E03               	movlw	3
 20043  0034D2  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20044  0034D4  0EE8               	movlw	232
 20045  0034D6  6F62               	movwf	___lwmod@divisor& (0+255),b
 20046  0034D8  ECCD  F02C         	call	___lwmod	;wreg free
 20047  0034DC  0100               	movlb	0	; () banked
 20048  0034DE  5160               	movf	?___lwmod& (0+255),w,b
 20049  0034E0  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20050  0034E2  A4D8               	btfss	status,2,c
 20051  0034E4  0012               	return	
 20052                           
 20053                           ; BSR set to: 0
 20054                           ;TMRapp.c: 69: {
 20055                           ;TMRapp.c: 70: appTimer.SecTick = 1;
 20056  0034E6  87F8               	bsf	_appTimer& (0+255),3,b
 20057                           
 20058                           ; BSR set to: 0
 20059                           ;TMRapp.c: 71: if ( (timerMsTickCount % 60000) == 0)
 20060  0034E8  C0D8  F060         	movff	_timerMsTickCount,___almod@dividend
 20061  0034EC  C0D9  F061         	movff	_timerMsTickCount+1,___almod@dividend+1
 20062  0034F0  6B62               	clrf	(___almod@dividend+2)& (0+255),b
 20063  0034F2  6B63               	clrf	(___almod@dividend+3)& (0+255),b
 20064  0034F4  0E60               	movlw	96
 20065  0034F6  6F64               	movwf	___almod@divisor& (0+255),b
 20066  0034F8  0EEA               	movlw	234
 20067  0034FA  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 20068  0034FC  0E00               	movlw	0
 20069  0034FE  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 20070  003500  0E00               	movlw	0
 20071  003502  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 20072  003504  ECA0  F024         	call	___almod	;wreg free
 20073  003508  0100               	movlb	0	; () banked
 20074  00350A  5160               	movf	?___almod& (0+255),w,b
 20075  00350C  1161               	iorwf	(?___almod+1)& (0+255),w,b
 20076  00350E  1162               	iorwf	(?___almod+2)& (0+255),w,b
 20077  003510  1163               	iorwf	(?___almod+3)& (0+255),w,b
 20078  003512  A4D8               	btfss	status,2,c
 20079  003514  0012               	return	
 20080                           
 20081                           ; BSR set to: 0
 20082                           ;TMRapp.c: 72: {
 20083                           ;TMRapp.c: 73: timerMinTickCount++;
 20084  003516  4A3C               	infsnz	_timerMinTickCount,f,c
 20085  003518  2A3D               	incf	_timerMinTickCount+1,f,c
 20086                           
 20087                           ; BSR set to: 0
 20088                           ;TMRapp.c: 74: appTimer.MinTick = 1;
 20089  00351A  89F8               	bsf	_appTimer& (0+255),4,b
 20090                           
 20091                           ; BSR set to: 0
 20092                           ;TMRapp.c: 75: if ( (timerMinTickCount % 60) == 0)
 20093  00351C  C03C  F060         	movff	_timerMinTickCount,___lwmod@dividend
 20094  003520  C03D  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 20095  003524  0E00               	movlw	0
 20096  003526  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20097  003528  0E3C               	movlw	60
 20098  00352A  6F62               	movwf	___lwmod@divisor& (0+255),b
 20099  00352C  ECCD  F02C         	call	___lwmod	;wreg free
 20100  003530  0100               	movlb	0	; () banked
 20101  003532  5160               	movf	?___lwmod& (0+255),w,b
 20102  003534  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20103  003536  A4D8               	btfss	status,2,c
 20104  003538  0012               	return	
 20105                           
 20106                           ; BSR set to: 0
 20107                           ;TMRapp.c: 76: {
 20108                           ;TMRapp.c: 77: appTimer.HourTick = 1;
 20109  00353A  8BF8               	bsf	_appTimer& (0+255),5,b
 20110                           
 20111                           ; BSR set to: 0
 20112                           ;TMRapp.c: 78: if ( (timerMinTickCount % 720) == 0)
 20113  00353C  C03C  F060         	movff	_timerMinTickCount,___lwmod@dividend
 20114  003540  C03D  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 20115  003544  0E02               	movlw	2
 20116  003546  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20117  003548  0ED0               	movlw	208
 20118  00354A  6F62               	movwf	___lwmod@divisor& (0+255),b
 20119  00354C  ECCD  F02C         	call	___lwmod	;wreg free
 20120  003550  0100               	movlb	0	; () banked
 20121  003552  5160               	movf	?___lwmod& (0+255),w,b
 20122  003554  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20123  003556  A4D8               	btfss	status,2,c
 20124  003558  0012               	return	
 20125                           
 20126                           ; BSR set to: 0
 20127                           ;TMRapp.c: 79: {
 20128                           ;TMRapp.c: 80: appTimer.HalfDayTick = 1;
 20129  00355A  8DF8               	bsf	_appTimer& (0+255),6,b
 20130                           
 20131                           ; BSR set to: 0
 20132                           ;TMRapp.c: 81: if ( (timerMinTickCount % 1440) == 0)
 20133  00355C  C03C  F060         	movff	_timerMinTickCount,___lwmod@dividend
 20134  003560  C03D  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 20135  003564  0E05               	movlw	5
 20136  003566  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20137  003568  0EA0               	movlw	160
 20138  00356A  6F62               	movwf	___lwmod@divisor& (0+255),b
 20139  00356C  ECCD  F02C         	call	___lwmod	;wreg free
 20140  003570  0100               	movlb	0	; () banked
 20141  003572  5160               	movf	?___lwmod& (0+255),w,b
 20142  003574  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20143  003576  A4D8               	btfss	status,2,c
 20144  003578  0012               	return	
 20145                           
 20146                           ; BSR set to: 0
 20147                           ;TMRapp.c: 82: {
 20148                           ;TMRapp.c: 83: appTimer.DayTick = 1;
 20149  00357A  8FF8               	bsf	_appTimer& (0+255),7,b
 20150                           
 20151                           ; BSR set to: 0
 20152                           ;TMRapp.c: 85: timerMsTickCount = 0;
 20153  00357C  0E00               	movlw	0
 20154  00357E  6FD9               	movwf	(_timerMsTickCount+1)& (0+255),b
 20155  003580  0E00               	movlw	0
 20156  003582  6FD8               	movwf	_timerMsTickCount& (0+255),b
 20157                           
 20158                           ;TMRapp.c: 86: timerMinTickCount = 0;
 20159  003584  0E00               	movlw	0
 20160  003586  6E3D               	movwf	_timerMinTickCount+1,c
 20161  003588  0E00               	movlw	0
 20162  00358A  6E3C               	movwf	_timerMinTickCount,c
 20163                           
 20164                           ; BSR set to: 0
 20165                           
 20166                           ; BSR set to: 0
 20167                           
 20168                           ; BSR set to: 0
 20169                           
 20170                           ; BSR set to: 0
 20171                           
 20172                           ; BSR set to: 0
 20173                           
 20174                           ; BSR set to: 0
 20175  00358C  0012               	return	
 20176  00358E                     __end_of_TMRapp_Handler:
 20177                           	opt stack 0
 20178                           tblptru	equ	0xFF8
 20179                           tblptrh	equ	0xFF7
 20180                           tblptrl	equ	0xFF6
 20181                           tablat	equ	0xFF5
 20182                           prodh	equ	0xFF4
 20183                           prodl	equ	0xFF3
 20184                           intcon	equ	0xFF2
 20185                           intcon3	equ	0xFF0
 20186                           postinc0	equ	0xFEE
 20187                           wreg	equ	0xFE8
 20188                           indf1	equ	0xFE7
 20189                           postdec1	equ	0xFE5
 20190                           fsr1h	equ	0xFE2
 20191                           fsr1l	equ	0xFE1
 20192                           indf2	equ	0xFDF
 20193                           postinc2	equ	0xFDE
 20194                           fsr2h	equ	0xFDA
 20195                           fsr2l	equ	0xFD9
 20196                           status	equ	0xFD8
 20197                           
 20198 ;; *************** function ___lwmod *****************
 20199 ;; Defined at:
 20200 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 20201 ;; Parameters:    Size  Location     Type
 20202 ;;  dividend        2    0[BANK0 ] unsigned int 
 20203 ;;  divisor         2    2[BANK0 ] unsigned int 
 20204 ;; Auto vars:     Size  Location     Type
 20205 ;;  counter         1    4[BANK0 ] unsigned char 
 20206 ;; Return value:  Size  Location     Type
 20207 ;;                  2    0[BANK0 ] unsigned int 
 20208 ;; Registers used:
 20209 ;;		wreg, status,2, status,0
 20210 ;; Tracked objects:
 20211 ;;		On entry : 0/0
 20212 ;;		On exit  : 0/0
 20213 ;;		Unchanged: 0/0
 20214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20215 ;;      Params:         0       4       0       0       0       0       0       0       0
 20216 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20217 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20218 ;;      Totals:         0       5       0       0       0       0       0       0       0
 20219 ;;Total ram usage:        5 bytes
 20220 ;; Hardware stack levels used:    1
 20221 ;; Hardware stack levels required when called:   11
 20222 ;; This function calls:
 20223 ;;		Nothing
 20224 ;; This function is called by:
 20225 ;;		_TMRapp_Handler
 20226 ;;		_moteApp_add16bToDataBuffer
 20227 ;;		_oled_putUint16
 20228 ;; This function uses a non-reentrant model
 20229 ;;
 20230                           
 20231                           	psect	text65
 20232  00599A                     __ptext65:
 20233                           	opt stack 0
 20234  00599A                     ___lwmod:
 20235                           	opt stack 17
 20236                           
 20237                           ; BSR set to: 0
 20238                           ;incstack = 0
 20239  00599A  0100               	movlb	0	; () banked
 20240  00599C  5162               	movf	___lwmod@divisor& (0+255),w,b
 20241  00599E  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 20242  0059A0  B4D8               	btfsc	status,2,c
 20243  0059A2  D018               	goto	l2743
 20244                           
 20245                           ; BSR set to: 0
 20246  0059A4  0E01               	movlw	1
 20247  0059A6  6F64               	movwf	___lwmod@counter& (0+255),b
 20248  0059A8  D004               	goto	l2738
 20249  0059AA                     
 20250                           ; BSR set to: 0
 20251                           
 20252                           ; BSR set to: 0
 20253  0059AA  90D8               	bcf	status,0,c
 20254  0059AC  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 20255  0059AE  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 20256  0059B0  2B64               	incf	___lwmod@counter& (0+255),f,b
 20257  0059B2                     l2738:
 20258                           
 20259                           ; BSR set to: 0
 20260                           
 20261                           ; BSR set to: 0
 20262  0059B2  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 20263  0059B4  D7FA               	goto	l2739
 20264  0059B6                     u8990:
 20265                           
 20266                           ; BSR set to: 0
 20267                           
 20268                           ; BSR set to: 0
 20269                           
 20270                           ; BSR set to: 0
 20271  0059B6  5162               	movf	___lwmod@divisor& (0+255),w,b
 20272  0059B8  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 20273  0059BA  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 20274  0059BC  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 20275  0059BE  A0D8               	btfss	status,0,c
 20276  0059C0  D004               	goto	l2742
 20277                           
 20278                           ; BSR set to: 0
 20279  0059C2  5162               	movf	___lwmod@divisor& (0+255),w,b
 20280  0059C4  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 20281  0059C6  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 20282  0059C8  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 20283  0059CA                     l2742:
 20284                           
 20285                           ; BSR set to: 0
 20286                           
 20287                           ; BSR set to: 0
 20288  0059CA  90D8               	bcf	status,0,c
 20289  0059CC  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 20290  0059CE  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 20291                           
 20292                           ; BSR set to: 0
 20293  0059D0  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 20294  0059D2  D7F1               	goto	u8990
 20295  0059D4                     l2743:
 20296                           
 20297                           ; BSR set to: 0
 20298                           
 20299                           ; BSR set to: 0
 20300  0059D4  C060  F060         	movff	___lwmod@dividend,?___lwmod
 20301  0059D8  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 20302                           
 20303                           ; BSR set to: 0
 20304  0059DC  0012               	return		;funcret
 20305  0059DE                     __end_of___lwmod:
 20306                           	opt stack 0
 20307                           tblptru	equ	0xFF8
 20308                           tblptrh	equ	0xFF7
 20309                           tblptrl	equ	0xFF6
 20310                           tablat	equ	0xFF5
 20311                           prodh	equ	0xFF4
 20312                           prodl	equ	0xFF3
 20313                           intcon	equ	0xFF2
 20314                           intcon3	equ	0xFF0
 20315                           postinc0	equ	0xFEE
 20316                           wreg	equ	0xFE8
 20317                           indf1	equ	0xFE7
 20318                           postdec1	equ	0xFE5
 20319                           fsr1h	equ	0xFE2
 20320                           fsr1l	equ	0xFE1
 20321                           indf2	equ	0xFDF
 20322                           postinc2	equ	0xFDE
 20323                           fsr2h	equ	0xFDA
 20324                           fsr2l	equ	0xFD9
 20325                           status	equ	0xFD8
 20326                           
 20327 ;; *************** function ___almod *****************
 20328 ;; Defined at:
 20329 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\almod.c"
 20330 ;; Parameters:    Size  Location     Type
 20331 ;;  dividend        4    0[BANK0 ] long 
 20332 ;;  divisor         4    4[BANK0 ] long 
 20333 ;; Auto vars:     Size  Location     Type
 20334 ;;  sign            1    9[BANK0 ] unsigned char 
 20335 ;;  counter         1    8[BANK0 ] unsigned char 
 20336 ;; Return value:  Size  Location     Type
 20337 ;;                  4    0[BANK0 ] long 
 20338 ;; Registers used:
 20339 ;;		wreg, status,2, status,0
 20340 ;; Tracked objects:
 20341 ;;		On entry : 0/0
 20342 ;;		On exit  : 0/0
 20343 ;;		Unchanged: 0/0
 20344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20345 ;;      Params:         0       8       0       0       0       0       0       0       0
 20346 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20347 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20348 ;;      Totals:         0      10       0       0       0       0       0       0       0
 20349 ;;Total ram usage:       10 bytes
 20350 ;; Hardware stack levels used:    1
 20351 ;; Hardware stack levels required when called:   11
 20352 ;; This function calls:
 20353 ;;		Nothing
 20354 ;; This function is called by:
 20355 ;;		_TMRapp_Handler
 20356 ;; This function uses a non-reentrant model
 20357 ;;
 20358                           
 20359                           	psect	text66
 20360  004940                     __ptext66:
 20361                           	opt stack 0
 20362  004940                     ___almod:
 20363                           	opt stack 17
 20364                           
 20365                           ; BSR set to: 0
 20366                           ;incstack = 0
 20367  004940  0E00               	movlw	0
 20368  004942  0100               	movlb	0	; () banked
 20369  004944  6F69               	movwf	___almod@sign& (0+255),b
 20370                           
 20371                           ; BSR set to: 0
 20372  004946  AF63               	btfss	(___almod@dividend+3)& (0+255),7,b
 20373  004948  D00A               	goto	l2393
 20374                           
 20375                           ; BSR set to: 0
 20376  00494A  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 20377  00494C  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 20378  00494E  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 20379  004950  6D60               	negf	___almod@dividend& (0+255),b
 20380  004952  0E00               	movlw	0
 20381  004954  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 20382  004956  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 20383  004958  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 20384                           
 20385                           ; BSR set to: 0
 20386  00495A  0E01               	movlw	1
 20387  00495C  6F69               	movwf	___almod@sign& (0+255),b
 20388  00495E                     l2393:
 20389                           
 20390                           ; BSR set to: 0
 20391                           
 20392                           ; BSR set to: 0
 20393  00495E  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 20394  004960  D008               	goto	l2394
 20395                           
 20396                           ; BSR set to: 0
 20397  004962  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 20398  004964  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 20399  004966  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 20400  004968  6D64               	negf	___almod@divisor& (0+255),b
 20401  00496A  0E00               	movlw	0
 20402  00496C  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 20403  00496E  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 20404  004970  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 20405  004972                     l2394:
 20406                           
 20407                           ; BSR set to: 0
 20408                           
 20409                           ; BSR set to: 0
 20410  004972  5164               	movf	___almod@divisor& (0+255),w,b
 20411  004974  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 20412  004976  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 20413  004978  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 20414  00497A  B4D8               	btfsc	status,2,c
 20415  00497C  D024               	goto	l2401
 20416                           
 20417                           ; BSR set to: 0
 20418  00497E  0E01               	movlw	1
 20419  004980  6F68               	movwf	___almod@counter& (0+255),b
 20420  004982  D006               	goto	l2396
 20421  004984                     
 20422                           ; BSR set to: 0
 20423                           
 20424                           ; BSR set to: 0
 20425  004984  90D8               	bcf	status,0,c
 20426  004986  3764               	rlcf	___almod@divisor& (0+255),f,b
 20427  004988  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 20428  00498A  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 20429  00498C  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 20430  00498E  2B68               	incf	___almod@counter& (0+255),f,b
 20431  004990                     l2396:
 20432                           
 20433                           ; BSR set to: 0
 20434                           
 20435                           ; BSR set to: 0
 20436  004990  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 20437  004992  D7F8               	goto	l2397
 20438  004994                     u8950:
 20439                           
 20440                           ; BSR set to: 0
 20441                           
 20442                           ; BSR set to: 0
 20443                           
 20444                           ; BSR set to: 0
 20445  004994  5164               	movf	___almod@divisor& (0+255),w,b
 20446  004996  5D60               	subwf	___almod@dividend& (0+255),w,b
 20447  004998  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 20448  00499A  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 20449  00499C  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 20450  00499E  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 20451  0049A0  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 20452  0049A2  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 20453  0049A4  A0D8               	btfss	status,0,c
 20454  0049A6  D008               	goto	l2400
 20455                           
 20456                           ; BSR set to: 0
 20457  0049A8  5164               	movf	___almod@divisor& (0+255),w,b
 20458  0049AA  5F60               	subwf	___almod@dividend& (0+255),f,b
 20459  0049AC  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 20460  0049AE  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 20461  0049B0  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 20462  0049B2  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 20463  0049B4  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 20464  0049B6  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 20465  0049B8                     l2400:
 20466                           
 20467                           ; BSR set to: 0
 20468                           
 20469                           ; BSR set to: 0
 20470  0049B8  90D8               	bcf	status,0,c
 20471  0049BA  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 20472  0049BC  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 20473  0049BE  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 20474  0049C0  3364               	rrcf	___almod@divisor& (0+255),f,b
 20475                           
 20476                           ; BSR set to: 0
 20477  0049C2  2F68               	decfsz	___almod@counter& (0+255),f,b
 20478  0049C4  D7E7               	goto	u8950
 20479  0049C6                     l2401:
 20480                           
 20481                           ; BSR set to: 0
 20482                           
 20483                           ; BSR set to: 0
 20484                           
 20485                           ; BSR set to: 0
 20486  0049C6  5169               	movf	___almod@sign& (0+255),w,b
 20487  0049C8  B4D8               	btfsc	status,2,c
 20488  0049CA  D008               	goto	l2402
 20489                           
 20490                           ; BSR set to: 0
 20491  0049CC  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 20492  0049CE  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 20493  0049D0  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 20494  0049D2  6D60               	negf	___almod@dividend& (0+255),b
 20495  0049D4  0E00               	movlw	0
 20496  0049D6  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 20497  0049D8  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 20498  0049DA  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 20499  0049DC                     l2402:
 20500                           
 20501                           ; BSR set to: 0
 20502                           
 20503                           ; BSR set to: 0
 20504  0049DC  C060  F060         	movff	___almod@dividend,?___almod
 20505  0049E0  C061  F061         	movff	___almod@dividend+1,?___almod+1
 20506  0049E4  C062  F062         	movff	___almod@dividend+2,?___almod+2
 20507  0049E8  C063  F063         	movff	___almod@dividend+3,?___almod+3
 20508  0049EC  0012               	return	
 20509  0049EE                     __end_of___almod:
 20510                           	opt stack 0
 20511                           tblptru	equ	0xFF8
 20512                           tblptrh	equ	0xFF7
 20513                           tblptrl	equ	0xFF6
 20514                           tablat	equ	0xFF5
 20515                           prodh	equ	0xFF4
 20516                           prodl	equ	0xFF3
 20517                           intcon	equ	0xFF2
 20518                           intcon3	equ	0xFF0
 20519                           postinc0	equ	0xFEE
 20520                           wreg	equ	0xFE8
 20521                           indf1	equ	0xFE7
 20522                           postdec1	equ	0xFE5
 20523                           fsr1h	equ	0xFE2
 20524                           fsr1l	equ	0xFE1
 20525                           indf2	equ	0xFDF
 20526                           postinc2	equ	0xFDE
 20527                           fsr2h	equ	0xFDA
 20528                           fsr2l	equ	0xFD9
 20529                           status	equ	0xFD8
 20530                           
 20531 ;; *************** function _TMRapp_ClearBitFlags *****************
 20532 ;; Defined at:
 20533 ;;		line 51 in file "../Includes/Drivers/TMRapp.c"
 20534 ;; Parameters:    Size  Location     Type
 20535 ;;		None
 20536 ;; Auto vars:     Size  Location     Type
 20537 ;;		None
 20538 ;; Return value:  Size  Location     Type
 20539 ;;                  1    wreg      void 
 20540 ;; Registers used:
 20541 ;;		wreg, status,2
 20542 ;; Tracked objects:
 20543 ;;		On entry : 0/0
 20544 ;;		On exit  : 0/0
 20545 ;;		Unchanged: 0/0
 20546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20547 ;;      Params:         0       0       0       0       0       0       0       0       0
 20548 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20549 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20550 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20551 ;;Total ram usage:        0 bytes
 20552 ;; Hardware stack levels used:    1
 20553 ;; Hardware stack levels required when called:   11
 20554 ;; This function calls:
 20555 ;;		Nothing
 20556 ;; This function is called by:
 20557 ;;		_moteHandler
 20558 ;; This function uses a non-reentrant model
 20559 ;;
 20560                           
 20561                           	psect	text67
 20562  0062A8                     __ptext67:
 20563                           	opt stack 0
 20564  0062A8                     _TMRapp_ClearBitFlags:
 20565                           	opt stack 18
 20566                           
 20567                           ;TMRapp.c: 54: appTimer.TicksBitMap = 0x00;
 20568                           
 20569                           ; BSR set to: 0
 20570                           ;incstack = 0
 20571  0062A8  0E00               	movlw	0
 20572  0062AA  0100               	movlb	0	; () banked
 20573  0062AC  6FF8               	movwf	_appTimer& (0+255),b
 20574                           
 20575                           ; BSR set to: 0
 20576  0062AE  0012               	return		;funcret
 20577  0062B0                     __end_of_TMRapp_ClearBitFlags:
 20578                           	opt stack 0
 20579                           tblptru	equ	0xFF8
 20580                           tblptrh	equ	0xFF7
 20581                           tblptrl	equ	0xFF6
 20582                           tablat	equ	0xFF5
 20583                           prodh	equ	0xFF4
 20584                           prodl	equ	0xFF3
 20585                           intcon	equ	0xFF2
 20586                           intcon3	equ	0xFF0
 20587                           postinc0	equ	0xFEE
 20588                           wreg	equ	0xFE8
 20589                           indf1	equ	0xFE7
 20590                           postdec1	equ	0xFE5
 20591                           fsr1h	equ	0xFE2
 20592                           fsr1l	equ	0xFE1
 20593                           indf2	equ	0xFDF
 20594                           postinc2	equ	0xFDE
 20595                           fsr2h	equ	0xFDA
 20596                           fsr2l	equ	0xFD9
 20597                           status	equ	0xFD8
 20598                           
 20599 ;; *************** function _MOTEapp_TimerBasedTask *****************
 20600 ;; Defined at:
 20601 ;;		line 1052 in file "../Includes/Board/MOTEapp.c"
 20602 ;; Parameters:    Size  Location     Type
 20603 ;;  timerTask       1    wreg     struct .
 20604 ;; Auto vars:     Size  Location     Type
 20605 ;;  timerTask       1    0[BANK0 ] struct .
 20606 ;; Return value:  Size  Location     Type
 20607 ;;                  1    wreg      void 
 20608 ;; Registers used:
 20609 ;;		wreg, status,2, status,0
 20610 ;; Tracked objects:
 20611 ;;		On entry : 0/0
 20612 ;;		On exit  : 0/0
 20613 ;;		Unchanged: 0/0
 20614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20615 ;;      Params:         0       0       0       0       0       0       0       0       0
 20616 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20617 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20618 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20619 ;;Total ram usage:        1 bytes
 20620 ;; Hardware stack levels used:    1
 20621 ;; Hardware stack levels required when called:   11
 20622 ;; This function calls:
 20623 ;;		Nothing
 20624 ;; This function is called by:
 20625 ;;		_moteHandler
 20626 ;; This function uses a non-reentrant model
 20627 ;;
 20628                           
 20629                           	psect	text68
 20630  006082                     __ptext68:
 20631                           	opt stack 0
 20632  006082                     _MOTEapp_TimerBasedTask:
 20633                           	opt stack 18
 20634                           
 20635                           ; BSR set to: 0
 20636                           ;incstack = 0
 20637                           ;MOTEapp_TimerBasedTask@timerTask stored from wreg
 20638  006082  0100               	movlb	0	; () banked
 20639  006084  6F60               	movwf	MOTEapp_TimerBasedTask@timerTask& (0+255),b
 20640                           
 20641                           ;MOTEapp.c: 1057: if (timerTask.mSecTenTick)
 20642  006086  0100               	movlb	0	; () banked
 20643  006088  A360               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),1,b
 20644  00608A  D003               	goto	l621
 20645                           
 20646                           ; BSR set to: 0
 20647                           ;MOTEapp.c: 1058: {
 20648                           ;MOTEapp.c: 1060: m10SecTicker++;
 20649  00608C  0101               	movlb	1	; () banked
 20650  00608E  4B58               	infsnz	_m10SecTicker& (0+255),f,b
 20651  006090  2B59               	incf	(_m10SecTicker+1)& (0+255),f,b
 20652  006092                     l621:
 20653                           
 20654                           ;MOTEapp.c: 1066: }
 20655                           ;MOTEapp.c: 1067: if (timerTask.SecTick)
 20656                           
 20657                           ; BSR set to: 1
 20658                           
 20659                           ;MOTEapp.c: 1063: {
 20660                           
 20661                           ; BSR set to: 1
 20662                           
 20663                           ; BSR set to: 1
 20664  006092  0100               	movlb	0	; () banked
 20665  006094  B760               	btfsc	MOTEapp_TimerBasedTask@timerTask& (0+255),3,b
 20666                           
 20667                           ; BSR set to: 0
 20668                           ;MOTEapp.c: 1068: {
 20669                           ;MOTEapp.c: 1070: secTicker++;
 20670  006096  2BEF               	incf	_secTicker& (0+255),f,b
 20671                           
 20672                           ; BSR set to: 0
 20673                           ;MOTEapp.c: 1071: }
 20674                           ;MOTEapp.c: 1072: if (timerTask.MinTick)
 20675                           
 20676                           ; BSR set to: 0
 20677  006098  A960               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),4,b
 20678  00609A  0012               	return	
 20679                           
 20680                           ; BSR set to: 0
 20681                           ;MOTEapp.c: 1073: {
 20682                           ;MOTEapp.c: 1075: minTicker++;
 20683  00609C  0101               	movlb	1	; () banked
 20684  00609E  2B63               	incf	_minTicker& (0+255),f,b
 20685                           
 20686                           ; BSR set to: 1
 20687                           
 20688                           ; BSR set to: 1
 20689                           
 20690                           ;MOTEapp.c: 1082: {
 20691                           
 20692                           ; BSR set to: 1
 20693                           
 20694                           ; BSR set to: 1
 20695                           
 20696                           ;MOTEapp.c: 1078: {
 20697                           
 20698                           ; BSR set to: 1
 20699                           
 20700                           ; BSR set to: 1
 20701  0060A0  0012               	return	
 20702  0060A2                     __end_of_MOTEapp_TimerBasedTask:
 20703                           	opt stack 0
 20704                           tblptru	equ	0xFF8
 20705                           tblptrh	equ	0xFF7
 20706                           tblptrl	equ	0xFF6
 20707                           tablat	equ	0xFF5
 20708                           prodh	equ	0xFF4
 20709                           prodl	equ	0xFF3
 20710                           intcon	equ	0xFF2
 20711                           intcon3	equ	0xFF0
 20712                           postinc0	equ	0xFEE
 20713                           wreg	equ	0xFE8
 20714                           indf1	equ	0xFE7
 20715                           postdec1	equ	0xFE5
 20716                           fsr1h	equ	0xFE2
 20717                           fsr1l	equ	0xFE1
 20718                           indf2	equ	0xFDF
 20719                           postinc2	equ	0xFDE
 20720                           fsr2h	equ	0xFDA
 20721                           fsr2l	equ	0xFD9
 20722                           status	equ	0xFD8
 20723                           
 20724 ;; *************** function _moteApp_clearCommand *****************
 20725 ;; Defined at:
 20726 ;;		line 1284 in file "../Includes/Board/MOTEapp.c"
 20727 ;; Parameters:    Size  Location     Type
 20728 ;;		None
 20729 ;; Auto vars:     Size  Location     Type
 20730 ;;		None
 20731 ;; Return value:  Size  Location     Type
 20732 ;;                  1    wreg      void 
 20733 ;; Registers used:
 20734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20735 ;; Tracked objects:
 20736 ;;		On entry : 0/0
 20737 ;;		On exit  : 0/0
 20738 ;;		Unchanged: 0/0
 20739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20740 ;;      Params:         0       0       0       0       0       0       0       0       0
 20741 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20742 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20743 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20744 ;;Total ram usage:        0 bytes
 20745 ;; Hardware stack levels used:    1
 20746 ;; Hardware stack levels required when called:   14
 20747 ;; This function calls:
 20748 ;;		_sendCommand
 20749 ;; This function is called by:
 20750 ;;		_main
 20751 ;; This function uses a non-reentrant model
 20752 ;;
 20753                           
 20754                           	psect	text69
 20755  00622C                     __ptext69:
 20756                           	opt stack 0
 20757  00622C                     _moteApp_clearCommand:
 20758                           	opt stack 16
 20759                           
 20760                           ;MOTEapp.c: 1286: sendCommand("\r\n");
 20761                           
 20762                           ;incstack = 0
 20763  00622C  0E06               	movlw	low (STR_177+23)
 20764  00622E  0100               	movlb	0	; () banked
 20765  006230  6F61               	movwf	sendCommand@string& (0+255),b
 20766  006232  0E7A               	movlw	high (STR_177+23)
 20767  006234  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 20768  006236  EC5B  F02E         	call	_sendCommand	;wreg free
 20769  00623A  0012               	return		;funcret
 20770  00623C                     __end_of_moteApp_clearCommand:
 20771                           	opt stack 0
 20772                           tblptru	equ	0xFF8
 20773                           tblptrh	equ	0xFF7
 20774                           tblptrl	equ	0xFF6
 20775                           tablat	equ	0xFF5
 20776                           prodh	equ	0xFF4
 20777                           prodl	equ	0xFF3
 20778                           intcon	equ	0xFF2
 20779                           intcon3	equ	0xFF0
 20780                           postinc0	equ	0xFEE
 20781                           wreg	equ	0xFE8
 20782                           indf1	equ	0xFE7
 20783                           postdec1	equ	0xFE5
 20784                           fsr1h	equ	0xFE2
 20785                           fsr1l	equ	0xFE1
 20786                           indf2	equ	0xFDF
 20787                           postinc2	equ	0xFDE
 20788                           fsr2h	equ	0xFDA
 20789                           fsr2l	equ	0xFD9
 20790                           status	equ	0xFD8
 20791                           
 20792 ;; *************** function _sendCommand *****************
 20793 ;; Defined at:
 20794 ;;		line 1139 in file "../Includes/Board/MOTEapp.c"
 20795 ;; Parameters:    Size  Location     Type
 20796 ;;  string          2    1[BANK0 ] PTR const unsigned char 
 20797 ;;		 -> STR_186(22), STR_185(22), STR_184(27), STR_183(27), 
 20798 ;;		 -> STR_178(26), STR_177(26), STR_176(26), STR_175(26), 
 20799 ;;		 -> STR_174(3), STR_173(9), STR_172(15), STR_171(13), 
 20800 ;;		 -> STR_170(13), STR_169(13), STR_168(13), STR_167(13), 
 20801 ;;		 -> STR_166(13), STR_165(13), STR_164(13), STR_163(16), 
 20802 ;;		 -> STR_70(11), STR_68(11), STR_66(14), STR_58(14), 
 20803 ;;		 -> STR_52(10), STR_48(13), STR_43(14), STR_41(13), 
 20804 ;;		 -> STR_39(10), STR_30(10), STR_22(20), STR_21(2), 
 20805 ;; Auto vars:     Size  Location     Type
 20806 ;;		None
 20807 ;; Return value:  Size  Location     Type
 20808 ;;                  1    wreg      void 
 20809 ;; Registers used:
 20810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20811 ;; Tracked objects:
 20812 ;;		On entry : 0/0
 20813 ;;		On exit  : 0/0
 20814 ;;		Unchanged: 0/0
 20815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20816 ;;      Params:         0       2       0       0       0       0       0       0       0
 20817 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20818 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20819 ;;      Totals:         0       2       0       0       0       0       0       0       0
 20820 ;;Total ram usage:        2 bytes
 20821 ;; Hardware stack levels used:    1
 20822 ;; Hardware stack levels required when called:   13
 20823 ;; This function calls:
 20824 ;;		_EUSART_Write
 20825 ;;		_EndLine
 20826 ;; This function is called by:
 20827 ;;		_moduleResync
 20828 ;;		_moduleSleep
 20829 ;;		_moteJoiningProcess
 20830 ;;		_MOTEapp_SetDataRateSetting
 20831 ;;		_moteApp_clearCommand
 20832 ;;		_moteApp_toggleLeds
 20833 ;;		_moteApp_setSensorsInput
 20834 ;;		_moteApp_getTempValue
 20835 ;;		_moteApp_getLightValue
 20836 ;; This function uses a non-reentrant model
 20837 ;;
 20838                           
 20839                           	psect	text70
 20840  005CB6                     __ptext70:
 20841                           	opt stack 0
 20842  005CB6                     _sendCommand:
 20843                           	opt stack 14
 20844                           
 20845                           ;MOTEapp.c: 1142: while (*string)
 20846                           
 20847                           ;incstack = 0
 20848  005CB6  D00C               	goto	l652
 20849  005CB8                     
 20850                           ;MOTEapp.c: 1143: {
 20851                           ;MOTEapp.c: 1144: EUSART_Write(*string++);
 20852  005CB8  C061  FFF6         	movff	sendCommand@string,tblptrl
 20853  005CBC  C062  FFF7         	movff	sendCommand@string+1,tblptrh
 20854  005CC0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20855  005CC0  6AF8               	clrf	tblptru,c
 20856  005CC2                     	endif
 20857  005CC2                     	if	0	;tblptru may be non-zero
 20858  005CC2                     	endif
 20859  005CC2  0008               	tblrd		*
 20860  005CC4  50F5               	movf	tablat,w,c
 20861  005CC6  EC70  F02D         	call	_EUSART_Write
 20862  005CCA  0100               	movlb	0	; () banked
 20863  005CCC  4B61               	infsnz	sendCommand@string& (0+255),f,b
 20864  005CCE  2B62               	incf	(sendCommand@string+1)& (0+255),f,b
 20865  005CD0                     l652:
 20866                           
 20867                           ; BSR set to: 0
 20868  005CD0  C061  FFF6         	movff	sendCommand@string,tblptrl
 20869  005CD4  C062  FFF7         	movff	sendCommand@string+1,tblptrh
 20870  005CD8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20871  005CD8  6AF8               	clrf	tblptru,c
 20872  005CDA                     	endif
 20873  005CDA                     	if	0	;tblptru may be non-zero
 20874  005CDA                     	endif
 20875  005CDA  0008               	tblrd		*
 20876  005CDC  50F5               	movf	tablat,w,c
 20877  005CDE  0900               	iorlw	0
 20878  005CE0  A4D8               	btfss	status,2,c
 20879  005CE2  D7EA               	goto	l653
 20880                           
 20881                           ;MOTEapp.c: 1145: }
 20882                           ;MOTEapp.c: 1146: EndLine();
 20883  005CE4  EC1E  F031         	call	_EndLine	;wreg free
 20884  005CE8  0012               	return		;funcret
 20885  005CEA                     __end_of_sendCommand:
 20886                           	opt stack 0
 20887                           tblptru	equ	0xFF8
 20888                           tblptrh	equ	0xFF7
 20889                           tblptrl	equ	0xFF6
 20890                           tablat	equ	0xFF5
 20891                           prodh	equ	0xFF4
 20892                           prodl	equ	0xFF3
 20893                           intcon	equ	0xFF2
 20894                           intcon3	equ	0xFF0
 20895                           postinc0	equ	0xFEE
 20896                           wreg	equ	0xFE8
 20897                           indf1	equ	0xFE7
 20898                           postdec1	equ	0xFE5
 20899                           fsr1h	equ	0xFE2
 20900                           fsr1l	equ	0xFE1
 20901                           indf2	equ	0xFDF
 20902                           postinc2	equ	0xFDE
 20903                           fsr2h	equ	0xFDA
 20904                           fsr2l	equ	0xFD9
 20905                           status	equ	0xFD8
 20906                           
 20907 ;; *************** function _EndLine *****************
 20908 ;; Defined at:
 20909 ;;		line 1133 in file "../Includes/Board/MOTEapp.c"
 20910 ;; Parameters:    Size  Location     Type
 20911 ;;		None
 20912 ;; Auto vars:     Size  Location     Type
 20913 ;;		None
 20914 ;; Return value:  Size  Location     Type
 20915 ;;                  1    wreg      void 
 20916 ;; Registers used:
 20917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20918 ;; Tracked objects:
 20919 ;;		On entry : 0/0
 20920 ;;		On exit  : 0/0
 20921 ;;		Unchanged: 0/0
 20922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20923 ;;      Params:         0       0       0       0       0       0       0       0       0
 20924 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20925 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20926 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20927 ;;Total ram usage:        0 bytes
 20928 ;; Hardware stack levels used:    1
 20929 ;; Hardware stack levels required when called:   12
 20930 ;; This function calls:
 20931 ;;		_EUSART_Write
 20932 ;; This function is called by:
 20933 ;;		_sendCommand
 20934 ;;		_sendDataCommand
 20935 ;; This function uses a non-reentrant model
 20936 ;;
 20937                           
 20938                           	psect	text71
 20939  00623C                     __ptext71:
 20940                           	opt stack 0
 20941  00623C                     _EndLine:
 20942                           	opt stack 14
 20943                           
 20944                           ;MOTEapp.c: 1135: EUSART_Write(0x0D);
 20945                           
 20946                           ;incstack = 0
 20947  00623C  0E0D               	movlw	13
 20948  00623E  EC70  F02D         	call	_EUSART_Write
 20949                           
 20950                           ;MOTEapp.c: 1136: EUSART_Write(0x0A);
 20951  006242  0E0A               	movlw	10
 20952  006244  EC70  F02D         	call	_EUSART_Write
 20953  006248  0012               	return		;funcret
 20954  00624A                     __end_of_EndLine:
 20955                           	opt stack 0
 20956                           tblptru	equ	0xFF8
 20957                           tblptrh	equ	0xFF7
 20958                           tblptrl	equ	0xFF6
 20959                           tablat	equ	0xFF5
 20960                           prodh	equ	0xFF4
 20961                           prodl	equ	0xFF3
 20962                           intcon	equ	0xFF2
 20963                           intcon3	equ	0xFF0
 20964                           postinc0	equ	0xFEE
 20965                           wreg	equ	0xFE8
 20966                           indf1	equ	0xFE7
 20967                           postdec1	equ	0xFE5
 20968                           fsr1h	equ	0xFE2
 20969                           fsr1l	equ	0xFE1
 20970                           indf2	equ	0xFDF
 20971                           postinc2	equ	0xFDE
 20972                           fsr2h	equ	0xFDA
 20973                           fsr2l	equ	0xFD9
 20974                           status	equ	0xFD8
 20975                           
 20976 ;; *************** function _USBapp_handlerState *****************
 20977 ;; Defined at:
 20978 ;;		line 78 in file "../Includes/Board/USBapp.c"
 20979 ;; Parameters:    Size  Location     Type
 20980 ;;  state           1    wreg     enum E5833
 20981 ;; Auto vars:     Size  Location     Type
 20982 ;;  state           1    0[BANK0 ] enum E5833
 20983 ;; Return value:  Size  Location     Type
 20984 ;;                  1    wreg      void 
 20985 ;; Registers used:
 20986 ;;		wreg
 20987 ;; Tracked objects:
 20988 ;;		On entry : 0/0
 20989 ;;		On exit  : 0/0
 20990 ;;		Unchanged: 0/0
 20991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20992 ;;      Params:         0       0       0       0       0       0       0       0       0
 20993 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20994 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20995 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20996 ;;Total ram usage:        1 bytes
 20997 ;; Hardware stack levels used:    1
 20998 ;; Hardware stack levels required when called:   11
 20999 ;; This function calls:
 21000 ;;		Nothing
 21001 ;; This function is called by:
 21002 ;;		_main
 21003 ;; This function uses a non-reentrant model
 21004 ;;
 21005                           
 21006                           	psect	text72
 21007  006282                     __ptext72:
 21008                           	opt stack 0
 21009  006282                     _USBapp_handlerState:
 21010                           	opt stack 19
 21011                           
 21012                           ;incstack = 0
 21013                           ;USBapp_handlerState@state stored from wreg
 21014  006282  0100               	movlb	0	; () banked
 21015  006284  6F60               	movwf	USBapp_handlerState@state& (0+255),b
 21016                           
 21017                           ;USBapp.c: 80: usbState = state;
 21018  006286  C060  F051         	movff	USBapp_handlerState@state,_usbState
 21019  00628A  0012               	return		;funcret
 21020  00628C                     __end_of_USBapp_handlerState:
 21021                           	opt stack 0
 21022                           tblptru	equ	0xFF8
 21023                           tblptrh	equ	0xFF7
 21024                           tblptrl	equ	0xFF6
 21025                           tablat	equ	0xFF5
 21026                           prodh	equ	0xFF4
 21027                           prodl	equ	0xFF3
 21028                           intcon	equ	0xFF2
 21029                           intcon3	equ	0xFF0
 21030                           postinc0	equ	0xFEE
 21031                           wreg	equ	0xFE8
 21032                           indf1	equ	0xFE7
 21033                           postdec1	equ	0xFE5
 21034                           fsr1h	equ	0xFE2
 21035                           fsr1l	equ	0xFE1
 21036                           indf2	equ	0xFDF
 21037                           postinc2	equ	0xFDE
 21038                           fsr2h	equ	0xFDA
 21039                           fsr2l	equ	0xFD9
 21040                           status	equ	0xFD8
 21041                           
 21042 ;; *************** function _USBapp_Handler *****************
 21043 ;; Defined at:
 21044 ;;		line 86 in file "../Includes/Board/USBapp.c"
 21045 ;; Parameters:    Size  Location     Type
 21046 ;;		None
 21047 ;; Auto vars:     Size  Location     Type
 21048 ;;  buttonPress     1   24[BANK0 ] enum E5867
 21049 ;; Return value:  Size  Location     Type
 21050 ;;                  1    wreg      void 
 21051 ;; Registers used:
 21052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21053 ;; Tracked objects:
 21054 ;;		On entry : 0/0
 21055 ;;		On exit  : 0/0
 21056 ;;		Unchanged: 0/0
 21057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21058 ;;      Params:         0       0       0       0       0       0       0       0       0
 21059 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21060 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21061 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21062 ;;Total ram usage:        1 bytes
 21063 ;; Hardware stack levels used:    1
 21064 ;; Hardware stack levels required when called:   16
 21065 ;; This function calls:
 21066 ;;		_USBapp_DeviceCdcEmulatorHandler
 21067 ;;		_oled_clear
 21068 ;;		_oled_putString
 21069 ;;		_service_pushbutton
 21070 ;; This function is called by:
 21071 ;;		_main
 21072 ;; This function uses a non-reentrant model
 21073 ;;
 21074                           
 21075                           	psect	text73
 21076  00404E                     __ptext73:
 21077                           	opt stack 0
 21078  00404E                     _USBapp_Handler:
 21079                           	opt stack 14
 21080                           
 21081                           ;USBapp.c: 90: {
 21082                           ;USBapp.c: 91: switch(usbState)
 21083                           
 21084                           ;incstack = 0
 21085                           ;USBapp.c: 89: do
 21086  00404E  D04D               	goto	l896
 21087  004050                     
 21088                           ;USBapp.c: 94: while(1);
 21089  004050  D7FF               	goto	l897
 21090  004052                     
 21091                           ;USBapp.c: 98: oled_clear();
 21092  004052  EC7E  F030         	call	_oled_clear	;wreg free
 21093                           
 21094                           ;USBapp.c: 99: oled_putString("CDC Mode",1,0);
 21095  004056  0E11               	movlw	low STR_187
 21096  004058  0100               	movlb	0	; () banked
 21097  00405A  6F72               	movwf	oled_putString@string& (0+255),b
 21098  00405C  0E7F               	movlw	high STR_187
 21099  00405E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 21100  004060  5172               	movf	oled_putString@string& (0+255),w,b
 21101  004062  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 21102  004064  A4D8               	btfss	status,2,c
 21103  004066  0E00               	movlw	low (__mediumconst shr (0+16))
 21104  004068  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 21105  00406A  0E01               	movlw	1
 21106  00406C  6F75               	movwf	oled_putString@station_dot& (0+255),b
 21107  00406E  0E00               	movlw	0
 21108  004070  6F76               	movwf	oled_putString@start_page& (0+255),b
 21109  004072  EC14  F029         	call	_oled_putString	;wreg free
 21110                           
 21111                           ;USBapp.c: 100: oled_putString("Command",2,1);
 21112  004076  0E62               	movlw	low STR_188
 21113  004078  0100               	movlb	0	; () banked
 21114  00407A  6F72               	movwf	oled_putString@string& (0+255),b
 21115  00407C  0E7F               	movlw	high STR_188
 21116  00407E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 21117  004080  5172               	movf	oled_putString@string& (0+255),w,b
 21118  004082  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 21119  004084  A4D8               	btfss	status,2,c
 21120  004086  0E00               	movlw	low (__mediumconst shr (0+16))
 21121  004088  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 21122  00408A  0E02               	movlw	2
 21123  00408C  6F75               	movwf	oled_putString@station_dot& (0+255),b
 21124  00408E  0E01               	movlw	1
 21125  004090  6F76               	movwf	oled_putString@start_page& (0+255),b
 21126  004092  EC14  F029         	call	_oled_putString	;wreg free
 21127                           
 21128                           ;USBapp.c: 101: oled_putString("USB Handler",0,2);
 21129  004096  0E29               	movlw	low STR_189
 21130  004098  0100               	movlb	0	; () banked
 21131  00409A  6F72               	movwf	oled_putString@string& (0+255),b
 21132  00409C  0E7E               	movlw	high STR_189
 21133  00409E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 21134  0040A0  5172               	movf	oled_putString@string& (0+255),w,b
 21135  0040A2  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 21136  0040A4  A4D8               	btfss	status,2,c
 21137  0040A6  0E00               	movlw	low (__mediumconst shr (0+16))
 21138  0040A8  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 21139  0040AA  0E00               	movlw	0
 21140  0040AC  6F75               	movwf	oled_putString@station_dot& (0+255),b
 21141  0040AE  0E02               	movlw	2
 21142  0040B0  6F76               	movwf	oled_putString@start_page& (0+255),b
 21143  0040B2  EC14  F029         	call	_oled_putString	;wreg free
 21144                           
 21145                           ;USBapp.c: 103: usbState = USB_RUNNING;
 21146  0040B6  0E01               	movlw	1
 21147  0040B8  D006               	goto	L17
 21148  0040BA                     
 21149                           ;USBapp.c: 107: if( USBDeviceState < CONFIGURED_STATE )
 21150  0040BA  0E20               	movlw	32
 21151  0040BC  0100               	movlb	0	; () banked
 21152  0040BE  61EB               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 21153  0040C0  D001               	goto	l904
 21154  0040C2  D01E               	goto	l901
 21155  0040C4                     l904:
 21156                           
 21157                           ; BSR set to: 0
 21158                           ;USBapp.c: 111: }
 21159                           ;USBapp.c: 112: usbState = USB_CDC;
 21160                           
 21161                           ; BSR set to: 0
 21162  0040C4  0E02               	movlw	2
 21163  0040C6                     L17:
 21164  0040C6  6E51               	movwf	_usbState,c
 21165                           
 21166                           ;USBapp.c: 113: break;
 21167  0040C8  D01B               	goto	l901
 21168  0040CA                     
 21169                           ;USBapp.c: 116: USBapp_DeviceCdcEmulatorHandler();
 21170                           
 21171                           ; BSR set to: 0
 21172  0040CA  EC06  F01E         	call	_USBapp_DeviceCdcEmulatorHandler	;wreg free
 21173                           
 21174                           ;USBapp.c: 120: buttonStates_t buttonPress = Released;
 21175  0040CE  0E03               	movlw	3
 21176  0040D0  0100               	movlb	0	; () banked
 21177  0040D2  6F78               	movwf	USBapp_Handler@buttonPress& (0+255),b
 21178                           
 21179                           ; BSR set to: 0
 21180                           ;USBapp.c: 121: buttonPress = service_pushbutton();
 21181  0040D4  EC63  F02A         	call	_service_pushbutton	;wreg free
 21182  0040D8  0100               	movlb	0	; () banked
 21183  0040DA  6F78               	movwf	USBapp_Handler@buttonPress& (0+255),b
 21184                           
 21185                           ; BSR set to: 0
 21186                           ;USBapp.c: 122: if (buttonPress != Released )
 21187  0040DC  0E03               	movlw	3
 21188  0040DE  1978               	xorwf	USBapp_Handler@buttonPress& (0+255),w,b
 21189  0040E0  B4D8               	btfsc	status,2,c
 21190  0040E2  D00E               	goto	l901
 21191                           
 21192                           ; BSR set to: 0
 21193                           ;USBapp.c: 123: {
 21194                           ;USBapp.c: 124: exitUSB = USB_BAT;
 21195  0040E4  0E02               	movlw	2
 21196  0040E6  6FF9               	movwf	_exitUSB& (0+255),b
 21197                           
 21198                           ; BSR set to: 0
 21199                           ;USBapp.c: 127: }
 21200                           
 21201                           ; BSR set to: 0
 21202                           ;USBapp.c: 125: }
 21203                           ;USBapp.c: 126: break;
 21204  0040E8  D00B               	goto	l901
 21205  0040EA                     l896:
 21206                           
 21207                           ; BSR set to: 0
 21208  0040EA  5051               	movf	_usbState,w,c
 21209                           
 21210                           ; Switch size 1, requested type "space"
 21211                           ; Number of cases is 3, Range of values is 0 to 2
 21212                           ; switch strategies available:
 21213                           ; Name         Instructions Cycles
 21214                           ; simple_byte           10     6 (average)
 21215                           ;	Chosen strategy is simple_byte
 21216  0040EC  0A00               	xorlw	0	; case 0
 21217  0040EE  B4D8               	btfsc	status,2,c
 21218  0040F0  D7B0               	goto	l902
 21219  0040F2  0A01               	xorlw	1	; case 1
 21220  0040F4  B4D8               	btfsc	status,2,c
 21221  0040F6  D7E1               	goto	l903
 21222  0040F8  0A03               	xorlw	3	; case 2
 21223  0040FA  B4D8               	btfsc	status,2,c
 21224  0040FC  D7E6               	goto	l906
 21225  0040FE  D7A8               	goto	l897
 21226  004100                     l901:
 21227                           
 21228                           ;USBapp.c: 128: }while((PORTAbits.RA0) && (exitUSB == NO_USB));
 21229  004100  A080               	btfss	3968,0,c	;volatile
 21230  004102  D004               	goto	u10520
 21231  004104  0100               	movlb	0	; () banked
 21232  004106  51F9               	movf	_exitUSB& (0+255),w,b
 21233  004108  B4D8               	btfsc	status,2,c
 21234  00410A  D7EF               	goto	l896
 21235  00410C                     u10520:
 21236                           
 21237                           ;USBapp.c: 129: __nop();
 21238                           
 21239                           ; BSR set to: 0
 21240  00410C  F000               	nop	
 21241                           
 21242                           ;USBapp.c: 130: if (exitUSB != USB_BAT)
 21243  00410E  0E02               	movlw	2
 21244  004110  0100               	movlb	0	; () banked
 21245  004112  19F9               	xorwf	_exitUSB& (0+255),w,b
 21246  004114  B4D8               	btfsc	status,2,c
 21247  004116  0012               	return	
 21248                           
 21249                           ; BSR set to: 0
 21250                           ;USBapp.c: 131: exitUSB = NO_USB;
 21251  004118  0E00               	movlw	0
 21252  00411A  6FF9               	movwf	_exitUSB& (0+255),b
 21253  00411C  0012               	return	
 21254  00411E                     __end_of_USBapp_Handler:
 21255                           	opt stack 0
 21256                           tblptru	equ	0xFF8
 21257                           tblptrh	equ	0xFF7
 21258                           tblptrl	equ	0xFF6
 21259                           tablat	equ	0xFF5
 21260                           prodh	equ	0xFF4
 21261                           prodl	equ	0xFF3
 21262                           intcon	equ	0xFF2
 21263                           intcon3	equ	0xFF0
 21264                           postinc0	equ	0xFEE
 21265                           wreg	equ	0xFE8
 21266                           indf1	equ	0xFE7
 21267                           postdec1	equ	0xFE5
 21268                           fsr1h	equ	0xFE2
 21269                           fsr1l	equ	0xFE1
 21270                           indf2	equ	0xFDF
 21271                           postinc2	equ	0xFDE
 21272                           fsr2h	equ	0xFDA
 21273                           fsr2l	equ	0xFD9
 21274                           status	equ	0xFD8
 21275                           
 21276 ;; *************** function _service_pushbutton *****************
 21277 ;; Defined at:
 21278 ;;		line 49 in file "../Includes/Drivers/buttons.c"
 21279 ;; Parameters:    Size  Location     Type
 21280 ;;		None
 21281 ;; Auto vars:     Size  Location     Type
 21282 ;;  bs              1    0[BANK0 ] enum E5748
 21283 ;; Return value:  Size  Location     Type
 21284 ;;                  1    wreg      enum E5836
 21285 ;; Registers used:
 21286 ;;		wreg, status,2, status,0
 21287 ;; Tracked objects:
 21288 ;;		On entry : 0/0
 21289 ;;		On exit  : 0/0
 21290 ;;		Unchanged: 0/0
 21291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21292 ;;      Params:         0       0       0       0       0       0       0       0       0
 21293 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21294 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21295 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21296 ;;Total ram usage:        1 bytes
 21297 ;; Hardware stack levels used:    1
 21298 ;; Hardware stack levels required when called:   11
 21299 ;; This function calls:
 21300 ;;		Nothing
 21301 ;; This function is called by:
 21302 ;;		_moteHandler
 21303 ;;		_USBapp_Handler
 21304 ;; This function uses a non-reentrant model
 21305 ;;
 21306                           
 21307                           	psect	text74
 21308  0054C6                     __ptext74:
 21309                           	opt stack 0
 21310  0054C6                     _service_pushbutton:
 21311                           	opt stack 18
 21312                           
 21313                           ;buttons.c: 51: static uint32_t PB_Timer = 0;
 21314                           ;buttons.c: 52: static uint8_t Release_Timer = 0;
 21315                           ;buttons.c: 53: buttonStates_t bs = NoButton;
 21316                           
 21317                           ; BSR set to: 0
 21318                           ;incstack = 0
 21319  0054C6  0E00               	movlw	0
 21320  0054C8  0100               	movlb	0	; () banked
 21321  0054CA  6F60               	movwf	service_pushbutton@bs& (0+255),b
 21322                           
 21323                           ; BSR set to: 0
 21324                           ;buttons.c: 55: if ((PORTBbits.RB1 == 0) || (PORTBbits.RB0 == 0) )
 21325  0054CC  A281               	btfss	3969,1,c	;volatile
 21326  0054CE  D002               	goto	u9300
 21327                           
 21328                           ; BSR set to: 0
 21329  0054D0  B081               	btfsc	3969,0,c	;volatile
 21330  0054D2  D018               	goto	l989
 21331  0054D4                     u9300:
 21332                           
 21333                           ; BSR set to: 0
 21334                           ;buttons.c: 56: {
 21335                           ;buttons.c: 57: ++PB_Timer;
 21336                           
 21337                           ; BSR set to: 0
 21338  0054D4  0E01               	movlw	1
 21339  0054D6  0101               	movlb	1	; () banked
 21340  0054D8  274A               	addwf	service_pushbutton@PB_Timer& (0+255),f,b
 21341  0054DA  0E00               	movlw	0
 21342  0054DC  234B               	addwfc	(service_pushbutton@PB_Timer+1)& (0+255),f,b
 21343  0054DE  234C               	addwfc	(service_pushbutton@PB_Timer+2)& (0+255),f,b
 21344  0054E0  234D               	addwfc	(service_pushbutton@PB_Timer+3)& (0+255),f,b
 21345                           
 21346                           ;buttons.c: 61: if (PB_Timer == 55)
 21347  0054E2  0E37               	movlw	55
 21348  0054E4  194A               	xorwf	service_pushbutton@PB_Timer& (0+255),w,b
 21349  0054E6  114B               	iorwf	(service_pushbutton@PB_Timer+1)& (0+255),w,b
 21350  0054E8  114C               	iorwf	(service_pushbutton@PB_Timer+2)& (0+255),w,b
 21351  0054EA  114D               	iorwf	(service_pushbutton@PB_Timer+3)& (0+255),w,b
 21352  0054EC  A4D8               	btfss	status,2,c
 21353  0054EE  D008               	goto	l992
 21354                           
 21355                           ; BSR set to: 1
 21356                           ;buttons.c: 62: {
 21357                           ;buttons.c: 63: Release_Timer = 0;
 21358  0054F0  0E00               	movlw	0
 21359  0054F2  6E50               	movwf	service_pushbutton@Release_Timer,c
 21360                           
 21361                           ; BSR set to: 1
 21362                           ;buttons.c: 65: if (PORTBbits.RB1 == 0)
 21363  0054F4  B281               	btfsc	3969,1,c	;volatile
 21364  0054F6  D002               	goto	l993
 21365                           
 21366                           ; BSR set to: 1
 21367                           ;buttons.c: 66: {
 21368                           ;buttons.c: 67: bs = ShortPress1;
 21369  0054F8  0E01               	movlw	1
 21370  0054FA  D016               	goto	L20
 21371  0054FC                     l993:
 21372                           
 21373                           ;buttons.c: 69: else
 21374                           ;buttons.c: 70: {
 21375                           ;buttons.c: 71: bs = ShortPress2;
 21376                           
 21377                           ; BSR set to: 0
 21378  0054FC  0E02               	movlw	2
 21379  0054FE  D014               	goto	L20
 21380  005500                     l992:
 21381                           
 21382                           ;buttons.c: 74: else
 21383                           ;buttons.c: 75: {
 21384                           ;buttons.c: 76: bs = NoButton;
 21385                           
 21386                           ; BSR set to: 0
 21387  005500  0E00               	movlw	0
 21388  005502  D012               	goto	L20
 21389  005504                     l989:
 21390                           
 21391                           ; BSR set to: 0
 21392                           ;buttons.c: 79: else
 21393                           ;buttons.c: 80: {
 21394                           ;buttons.c: 81: if (Release_Timer == 20)
 21395                           
 21396                           ; BSR set to: 0
 21397  005504  0E14               	movlw	20
 21398  005506  1850               	xorwf	service_pushbutton@Release_Timer,w,c
 21399  005508  A4D8               	btfss	status,2,c
 21400  00550A  D00C               	goto	l997
 21401                           
 21402                           ; BSR set to: 0
 21403                           ;buttons.c: 82: {
 21404                           ;buttons.c: 83: PB_Timer = 0;
 21405  00550C  0E00               	movlw	0
 21406  00550E  0101               	movlb	1	; () banked
 21407  005510  6F4A               	movwf	service_pushbutton@PB_Timer& (0+255),b
 21408  005512  0E00               	movlw	0
 21409  005514  6F4B               	movwf	(service_pushbutton@PB_Timer+1)& (0+255),b
 21410  005516  0E00               	movlw	0
 21411  005518  6F4C               	movwf	(service_pushbutton@PB_Timer+2)& (0+255),b
 21412  00551A  0E00               	movlw	0
 21413  00551C  6F4D               	movwf	(service_pushbutton@PB_Timer+3)& (0+255),b
 21414                           
 21415                           ;buttons.c: 84: Release_Timer = 0;
 21416  00551E  0E00               	movlw	0
 21417  005520  6E50               	movwf	service_pushbutton@Release_Timer,c
 21418                           
 21419                           ;buttons.c: 85: }
 21420  005522  D001               	goto	l998
 21421  005524                     l997:
 21422                           
 21423                           ;buttons.c: 86: else
 21424                           ;buttons.c: 87: {
 21425                           ;buttons.c: 88: Release_Timer++;
 21426                           
 21427                           ; BSR set to: 1
 21428  005524  2A50               	incf	service_pushbutton@Release_Timer,f,c
 21429  005526                     l998:
 21430                           
 21431                           ;buttons.c: 89: }
 21432                           ;buttons.c: 90: bs = Released;
 21433  005526  0E03               	movlw	3
 21434  005528                     L20:
 21435  005528  0100               	movlb	0	; () banked
 21436  00552A  6F60               	movwf	service_pushbutton@bs& (0+255),b
 21437                           
 21438                           ; BSR set to: 0
 21439                           ;buttons.c: 91: }
 21440                           ;buttons.c: 93: return bs;
 21441                           
 21442                           ; BSR set to: 0
 21443  00552C  5160               	movf	service_pushbutton@bs& (0+255),w,b
 21444  00552E  0012               	return	
 21445  005530                     __end_of_service_pushbutton:
 21446                           	opt stack 0
 21447                           tblptru	equ	0xFF8
 21448                           tblptrh	equ	0xFF7
 21449                           tblptrl	equ	0xFF6
 21450                           tablat	equ	0xFF5
 21451                           prodh	equ	0xFF4
 21452                           prodl	equ	0xFF3
 21453                           intcon	equ	0xFF2
 21454                           intcon3	equ	0xFF0
 21455                           postinc0	equ	0xFEE
 21456                           wreg	equ	0xFE8
 21457                           indf1	equ	0xFE7
 21458                           postdec1	equ	0xFE5
 21459                           fsr1h	equ	0xFE2
 21460                           fsr1l	equ	0xFE1
 21461                           indf2	equ	0xFDF
 21462                           postinc2	equ	0xFDE
 21463                           fsr2h	equ	0xFDA
 21464                           fsr2l	equ	0xFD9
 21465                           status	equ	0xFD8
 21466                           
 21467 ;; *************** function _oled_putString *****************
 21468 ;; Defined at:
 21469 ;;		line 354 in file "../Includes/Drivers/SSD1306oLED.c"
 21470 ;; Parameters:    Size  Location     Type
 21471 ;;  string          3   18[BANK0 ] PTR const unsigned char 
 21472 ;;		 -> oled_putUint16@numData(6), oled_putint8@numData(6), oled_putUint8@numData(6), ROM(32767), 
 21473 ;;		 -> STR_189(12), STR_188(8), STR_187(9), storedLight(5), 
 21474 ;;		 -> STR_182(5), STR_181(8), STR_180(8), STR_179(9), 
 21475 ;;		 -> STR_162(16), STR_161(17), STR_160(17), STR_159(4), 
 21476 ;;		 -> STR_158(4), STR_157(4), STR_156(4), STR_155(4), 
 21477 ;;		 -> STR_154(4), STR_153(4), STR_152(16), STR_151(17), 
 21478 ;;		 -> STR_150(4), STR_149(4), STR_148(4), STR_147(4), 
 21479 ;;		 -> STR_146(4), STR_145(4), STR_144(4), STR_143(4), 
 21480 ;;		 -> STR_142(4), STR_141(4), STR_140(4), STR_139(4), 
 21481 ;;		 -> STR_138(4), STR_137(16), STR_136(12), STR_135(17), 
 21482 ;;		 -> STR_134(16), STR_133(16), STR_132(16), STR_131(15), 
 21483 ;;		 -> STR_130(15), STR_129(16), STR_128(4), STR_127(3), 
 21484 ;;		 -> STR_126(3), STR_125(3), STR_124(3), STR_123(2), 
 21485 ;;		 -> STR_122(5), STR_121(7), STR_120(17), STR_119(17), 
 21486 ;;		 -> STR_118(2), STR_117(7), STR_116(7), STR_115(16), 
 21487 ;;		 -> STR_114(16), STR_113(15), STR_112(15), STR_111(17), 
 21488 ;;		 -> STR_110(16), STR_109(17), STR_108(17), STR_107(7), 
 21489 ;;		 -> STR_106(10), STR_105(17), STR_104(16), STR_103(16), 
 21490 ;;		 -> STR_102(16), STR_101(16), STR_100(17), STR_99(17), 
 21491 ;;		 -> STR_98(16), STR_96(19), STR_94(17), STR_92(17), 
 21492 ;;		 -> STR_91(17), responseData(32), responsePortNum(3), STR_88(13), 
 21493 ;;		 -> STR_87(12), STR_86(12), STR_83(18), STR_82(13), 
 21494 ;;		 -> STR_81(17), STR_80(16), STR_79(17), STR_78(17), 
 21495 ;;		 -> STR_77(16), STR_76(17), STR_75(17), STR_73(13), 
 21496 ;;		 -> STR_72(12), STR_71(17), STR_65(7), STR_64(10), 
 21497 ;;		 -> STR_62(11), STR_61(11), STR_56(9), STR_55(11), 
 21498 ;;		 -> STR_51(11), STR_50(10), STR_47(9), STR_46(11), 
 21499 ;;		 -> STR_42(17), STR_40(17), STR_38(17), STR_37(17), 
 21500 ;;		 -> STR_36(17), STR_34(17), STR_33(17), STR_32(17), 
 21501 ;;		 -> moduleResonseBuffer(64), STR_29(17), STR_28(17), STR_27(17), 
 21502 ;;		 -> STR_26(17), STR_25(9), STR_24(10), STR_23(5), 
 21503 ;;		 -> STR_20(9), STR_19(8), STR_18(8), STR_17(9), 
 21504 ;;		 -> STR_16(10), STR_15(11), STR_14(13), STR_13(13), 
 21505 ;;		 -> STR_12(13), STR_11(12), STR_10(13), STR_9(9), 
 21506 ;;		 -> STR_8(12), STR_7(16), STR_6(2), STR_5(2), 
 21507 ;;		 -> STR_4(9), STR_3(15), STR_2(15), STR_1(15), 
 21508 ;;  station_dot     1   21[BANK0 ] unsigned char 
 21509 ;;  start_page      1   22[BANK0 ] unsigned char 
 21510 ;; Auto vars:     Size  Location     Type
 21511 ;;  index           1   23[BANK0 ] unsigned char 
 21512 ;; Return value:  Size  Location     Type
 21513 ;;                  1    wreg      void 
 21514 ;; Registers used:
 21515 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21516 ;; Tracked objects:
 21517 ;;		On entry : 0/0
 21518 ;;		On exit  : 0/0
 21519 ;;		Unchanged: 0/0
 21520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21521 ;;      Params:         0       5       0       0       0       0       0       0       0
 21522 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21523 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21524 ;;      Totals:         0       6       0       0       0       0       0       0       0
 21525 ;;Total ram usage:        6 bytes
 21526 ;; Hardware stack levels used:    1
 21527 ;; Hardware stack levels required when called:   14
 21528 ;; This function calls:
 21529 ;;		_oled_putChar
 21530 ;; This function is called by:
 21531 ;;		_main
 21532 ;;		_test_oled
 21533 ;;		_test_switch
 21534 ;;		_test_comms
 21535 ;;		_test_leds
 21536 ;;		_moteHandler
 21537 ;;		_moteJoiningProcess
 21538 ;;		_moteRunningProcess
 21539 ;;		_moteApp_testSensors
 21540 ;;		_USBapp_Handler
 21541 ;;		_oled_putUint8
 21542 ;;		_oled_putint8
 21543 ;;		_test_adc
 21544 ;;		_test_rf
 21545 ;;		_oled_putUint16
 21546 ;;		_printfOled
 21547 ;; This function uses a non-reentrant model
 21548 ;;
 21549                           
 21550                           	psect	text75
 21551  005228                     __ptext75:
 21552                           	opt stack 0
 21553  005228                     _oled_putString:
 21554                           	opt stack 14
 21555                           
 21556                           ;SSD1306oLED.c: 356: uint8_t index;
 21557                           ;SSD1306oLED.c: 357: for(index = station_dot; index < 16; index++)
 21558                           
 21559                           ; BSR set to: 0
 21560                           ;incstack = 0
 21561  005228  C075  F077         	movff	oled_putString@station_dot,oled_putString@index
 21562  00522C  0E0F               	movlw	15
 21563  00522E  0100               	movlb	0	; () banked
 21564  005230  6577               	cpfsgt	oled_putString@index& (0+255),b
 21565  005232  D001               	goto	l1103
 21566  005234  0012               	return	
 21567  005236                     l1103:
 21568                           
 21569                           ; BSR set to: 0
 21570                           ;SSD1306oLED.c: 358: {
 21571                           ;SSD1306oLED.c: 359: if (*string != 0)
 21572                           
 21573                           ; BSR set to: 0
 21574  005236  C072  FFF6         	movff	oled_putString@string,tblptrl
 21575  00523A  C073  FFF7         	movff	oled_putString@string+1,tblptrh
 21576  00523E  C074  FFF8         	movff	oled_putString@string+2,tblptru
 21577  005242  BAF8               	btfsc	tblptru,5,c
 21578  005244  D003               	bra	u6677
 21579  005246  0008               	tblrd		*
 21580  005248  50F5               	movf	tablat,w,c
 21581  00524A  D005               	bra	u6670
 21582  00524C                     u6677:
 21583  00524C  CFF6 FFE9          	movff	tblptrl,fsr0l
 21584  005250  CFF7 FFEA          	movff	tblptrh,fsr0h
 21585  005254  50EF               	movf	indf0,w,c
 21586  005256                     u6670:
 21587  005256  0900               	iorlw	0
 21588  005258  B4D8               	btfsc	status,2,c
 21589  00525A  0012               	return	
 21590                           
 21591                           ;SSD1306oLED.c: 360: {
 21592                           ;SSD1306oLED.c: 361: oled_putChar(*string, index, start_page);
 21593  00525C  C077  F062         	movff	oled_putString@index,oled_putChar@station_dot
 21594  005260  C076  F063         	movff	oled_putString@start_page,oled_putChar@start_page
 21595  005264  C072  FFF6         	movff	oled_putString@string,tblptrl
 21596  005268  C073  FFF7         	movff	oled_putString@string+1,tblptrh
 21597  00526C  C074  FFF8         	movff	oled_putString@string+2,tblptru
 21598  005270  BAF8               	btfsc	tblptru,5,c
 21599  005272  D003               	bra	u6697
 21600  005274  0008               	tblrd		*
 21601  005276  50F5               	movf	tablat,w,c
 21602  005278  D005               	bra	u6690
 21603  00527A                     u6697:
 21604  00527A  CFF6 FFE9          	movff	tblptrl,fsr0l
 21605  00527E  CFF7 FFEA          	movff	tblptrh,fsr0h
 21606  005282  50EF               	movf	indf0,w,c
 21607  005284                     u6690:
 21608  005284  EC94  F027         	call	_oled_putChar
 21609                           
 21610                           ;SSD1306oLED.c: 362: *string++;
 21611  005288  0100               	movlb	0	; () banked
 21612  00528A  0E01               	movlw	1
 21613  00528C  2772               	addwf	oled_putString@string& (0+255),f,b
 21614  00528E  0E00               	movlw	0
 21615  005290  2373               	addwfc	(oled_putString@string+1)& (0+255),f,b
 21616  005292  0E00               	movlw	0
 21617  005294  2374               	addwfc	(oled_putString@string+2)& (0+255),f,b
 21618                           
 21619                           ; BSR set to: 0
 21620                           
 21621                           ; BSR set to: 0
 21622                           
 21623                           ; BSR set to: 0
 21624                           ;SSD1306oLED.c: 364: else
 21625                           ;SSD1306oLED.c: 365: {
 21626                           ;SSD1306oLED.c: 366: break;
 21627                           
 21628                           ;SSD1306oLED.c: 363: }
 21629  005296  2B77               	incf	oled_putString@index& (0+255),f,b
 21630                           
 21631                           ; BSR set to: 0
 21632  005298  0E0F               	movlw	15
 21633  00529A  D7CA               	goto	L21
 21634  00529C                     __end_of_oled_putString:
 21635                           	opt stack 0
 21636                           tblptru	equ	0xFF8
 21637                           tblptrh	equ	0xFF7
 21638                           tblptrl	equ	0xFF6
 21639                           tablat	equ	0xFF5
 21640                           prodh	equ	0xFF4
 21641                           prodl	equ	0xFF3
 21642                           intcon	equ	0xFF2
 21643                           intcon3	equ	0xFF0
 21644                           indf0	equ	0xFEF
 21645                           postinc0	equ	0xFEE
 21646                           fsr0h	equ	0xFEA
 21647                           fsr0l	equ	0xFE9
 21648                           wreg	equ	0xFE8
 21649                           indf1	equ	0xFE7
 21650                           postdec1	equ	0xFE5
 21651                           fsr1h	equ	0xFE2
 21652                           fsr1l	equ	0xFE1
 21653                           indf2	equ	0xFDF
 21654                           postinc2	equ	0xFDE
 21655                           fsr2h	equ	0xFDA
 21656                           fsr2l	equ	0xFD9
 21657                           status	equ	0xFD8
 21658                           
 21659 ;; *************** function _oled_clear *****************
 21660 ;; Defined at:
 21661 ;;		line 371 in file "../Includes/Drivers/SSD1306oLED.c"
 21662 ;; Parameters:    Size  Location     Type
 21663 ;;		None
 21664 ;; Auto vars:     Size  Location     Type
 21665 ;;		None
 21666 ;; Return value:  Size  Location     Type
 21667 ;;                  1    wreg      void 
 21668 ;; Registers used:
 21669 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21670 ;; Tracked objects:
 21671 ;;		On entry : 0/0
 21672 ;;		On exit  : 0/0
 21673 ;;		Unchanged: 0/0
 21674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21675 ;;      Params:         0       0       0       0       0       0       0       0       0
 21676 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21677 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21678 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21679 ;;Total ram usage:        0 bytes
 21680 ;; Hardware stack levels used:    1
 21681 ;; Hardware stack levels required when called:   15
 21682 ;; This function calls:
 21683 ;;		_oled_clearRow
 21684 ;; This function is called by:
 21685 ;;		_main
 21686 ;;		_test_powerup
 21687 ;;		_test_oled
 21688 ;;		_test_switch
 21689 ;;		_moteHandler
 21690 ;;		_moteJoiningProcess
 21691 ;;		_moteRunningProcess
 21692 ;;		_moteApp_testSensors
 21693 ;;		_moteApp_searchFrameGPS
 21694 ;;		_USBapp_Handler
 21695 ;;		_oled_init
 21696 ;;		_test_adc
 21697 ;;		_test_rf
 21698 ;;		_printfOled
 21699 ;; This function uses a non-reentrant model
 21700 ;;
 21701                           
 21702                           	psect	text76
 21703  0060FC                     __ptext76:
 21704                           	opt stack 0
 21705  0060FC                     _oled_clear:
 21706                           	opt stack 13
 21707                           
 21708                           ;SSD1306oLED.c: 373: oled_clearRow(0);
 21709                           
 21710                           ;incstack = 0
 21711  0060FC  0E00               	movlw	0
 21712  0060FE  ECFB  F02F         	call	_oled_clearRow
 21713                           
 21714                           ;SSD1306oLED.c: 374: oled_clearRow(1);
 21715  006102  0E01               	movlw	1
 21716  006104  ECFB  F02F         	call	_oled_clearRow
 21717                           
 21718                           ;SSD1306oLED.c: 375: oled_clearRow(2);
 21719  006108  0E02               	movlw	2
 21720  00610A  ECFB  F02F         	call	_oled_clearRow
 21721                           
 21722                           ;SSD1306oLED.c: 376: oled_clearRow(3);
 21723  00610E  0E03               	movlw	3
 21724  006110  ECFB  F02F         	call	_oled_clearRow
 21725  006114  0012               	return		;funcret
 21726  006116                     __end_of_oled_clear:
 21727                           	opt stack 0
 21728                           tblptru	equ	0xFF8
 21729                           tblptrh	equ	0xFF7
 21730                           tblptrl	equ	0xFF6
 21731                           tablat	equ	0xFF5
 21732                           prodh	equ	0xFF4
 21733                           prodl	equ	0xFF3
 21734                           intcon	equ	0xFF2
 21735                           intcon3	equ	0xFF0
 21736                           indf0	equ	0xFEF
 21737                           postinc0	equ	0xFEE
 21738                           fsr0h	equ	0xFEA
 21739                           fsr0l	equ	0xFE9
 21740                           wreg	equ	0xFE8
 21741                           indf1	equ	0xFE7
 21742                           postdec1	equ	0xFE5
 21743                           fsr1h	equ	0xFE2
 21744                           fsr1l	equ	0xFE1
 21745                           indf2	equ	0xFDF
 21746                           postinc2	equ	0xFDE
 21747                           fsr2h	equ	0xFDA
 21748                           fsr2l	equ	0xFD9
 21749                           status	equ	0xFD8
 21750                           
 21751 ;; *************** function _oled_clearRow *****************
 21752 ;; Defined at:
 21753 ;;		line 379 in file "../Includes/Drivers/SSD1306oLED.c"
 21754 ;; Parameters:    Size  Location     Type
 21755 ;;  page            1    wreg     unsigned char 
 21756 ;; Auto vars:     Size  Location     Type
 21757 ;;  page            1   12[BANK0 ] unsigned char 
 21758 ;;  index           1   13[BANK0 ] unsigned char 
 21759 ;; Return value:  Size  Location     Type
 21760 ;;                  1    wreg      void 
 21761 ;; Registers used:
 21762 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21763 ;; Tracked objects:
 21764 ;;		On entry : 0/0
 21765 ;;		On exit  : 0/0
 21766 ;;		Unchanged: 0/0
 21767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21768 ;;      Params:         0       0       0       0       0       0       0       0       0
 21769 ;;      Locals:         0       2       0       0       0       0       0       0       0
 21770 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21771 ;;      Totals:         0       2       0       0       0       0       0       0       0
 21772 ;;Total ram usage:        2 bytes
 21773 ;; Hardware stack levels used:    1
 21774 ;; Hardware stack levels required when called:   14
 21775 ;; This function calls:
 21776 ;;		_oled_putChar
 21777 ;; This function is called by:
 21778 ;;		_oled_clear
 21779 ;; This function uses a non-reentrant model
 21780 ;;
 21781                           
 21782                           	psect	text77
 21783  005FF6                     __ptext77:
 21784                           	opt stack 0
 21785  005FF6                     _oled_clearRow:
 21786                           	opt stack 13
 21787                           
 21788                           ;incstack = 0
 21789                           ;oled_clearRow@page stored from wreg
 21790  005FF6  0100               	movlb	0	; () banked
 21791  005FF8  6F6C               	movwf	oled_clearRow@page& (0+255),b
 21792                           
 21793                           ;SSD1306oLED.c: 381: uint8_t index;
 21794                           ;SSD1306oLED.c: 383: for(index = 0; index < 16; index++)
 21795  005FFA  0E00               	movlw	0
 21796  005FFC  0100               	movlb	0	; () banked
 21797  005FFE  6F6D               	movwf	oled_clearRow@index& (0+255),b
 21798  006000                     l8197:
 21799                           
 21800                           ; BSR set to: 0
 21801  006000  0E0F               	movlw	15
 21802  006002  656D               	cpfsgt	oled_clearRow@index& (0+255),b
 21803  006004  D001               	goto	l1113
 21804  006006  0012               	return	
 21805  006008                     l1113:
 21806                           
 21807                           ; BSR set to: 0
 21808                           ;SSD1306oLED.c: 384: {
 21809                           ;SSD1306oLED.c: 385: oled_putChar( ' ', index, page);
 21810                           
 21811                           ; BSR set to: 0
 21812  006008  C06D  F062         	movff	oled_clearRow@index,oled_putChar@station_dot
 21813  00600C  C06C  F063         	movff	oled_clearRow@page,oled_putChar@start_page
 21814  006010  0E20               	movlw	32
 21815  006012  EC94  F027         	call	_oled_putChar
 21816  006016  0100               	movlb	0	; () banked
 21817  006018  2B6D               	incf	oled_clearRow@index& (0+255),f,b
 21818  00601A  D7F2               	goto	l8197
 21819  00601C                     __end_of_oled_clearRow:
 21820                           	opt stack 0
 21821                           tblptru	equ	0xFF8
 21822                           tblptrh	equ	0xFF7
 21823                           tblptrl	equ	0xFF6
 21824                           tablat	equ	0xFF5
 21825                           prodh	equ	0xFF4
 21826                           prodl	equ	0xFF3
 21827                           intcon	equ	0xFF2
 21828                           intcon3	equ	0xFF0
 21829                           indf0	equ	0xFEF
 21830                           postinc0	equ	0xFEE
 21831                           fsr0h	equ	0xFEA
 21832                           fsr0l	equ	0xFE9
 21833                           wreg	equ	0xFE8
 21834                           indf1	equ	0xFE7
 21835                           postdec1	equ	0xFE5
 21836                           fsr1h	equ	0xFE2
 21837                           fsr1l	equ	0xFE1
 21838                           indf2	equ	0xFDF
 21839                           postinc2	equ	0xFDE
 21840                           fsr2h	equ	0xFDA
 21841                           fsr2l	equ	0xFD9
 21842                           status	equ	0xFD8
 21843                           
 21844 ;; *************** function _oled_putChar *****************
 21845 ;; Defined at:
 21846 ;;		line 318 in file "../Includes/Drivers/SSD1306oLED.c"
 21847 ;; Parameters:    Size  Location     Type
 21848 ;;  k               1    wreg     unsigned char 
 21849 ;;  station_dot     1    2[BANK0 ] unsigned char 
 21850 ;;  start_page      1    3[BANK0 ] unsigned char 
 21851 ;; Auto vars:     Size  Location     Type
 21852 ;;  k               1   10[BANK0 ] unsigned char 
 21853 ;;  index           1   11[BANK0 ] unsigned char 
 21854 ;; Return value:  Size  Location     Type
 21855 ;;                  1    wreg      void 
 21856 ;; Registers used:
 21857 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21858 ;; Tracked objects:
 21859 ;;		On entry : 0/0
 21860 ;;		On exit  : 0/0
 21861 ;;		Unchanged: 0/0
 21862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21863 ;;      Params:         0       2       0       0       0       0       0       0       0
 21864 ;;      Locals:         0       2       0       0       0       0       0       0       0
 21865 ;;      Temps:          0       6       0       0       0       0       0       0       0
 21866 ;;      Totals:         0      10       0       0       0       0       0       0       0
 21867 ;;Total ram usage:       10 bytes
 21868 ;; Hardware stack levels used:    1
 21869 ;; Hardware stack levels required when called:   13
 21870 ;; This function calls:
 21871 ;;		_Set_Column_Address
 21872 ;;		_Set_Page_Address
 21873 ;;		_oled_writeData
 21874 ;; This function is called by:
 21875 ;;		_moteApp_testSensors
 21876 ;;		_oled_putStringLineN
 21877 ;;		_oled_putString
 21878 ;;		_oled_clearRow
 21879 ;;		_test_adc
 21880 ;; This function uses a non-reentrant model
 21881 ;;
 21882                           
 21883                           	psect	text78
 21884  004F28                     __ptext78:
 21885                           	opt stack 0
 21886  004F28                     _oled_putChar:
 21887                           	opt stack 14
 21888                           
 21889                           ; BSR set to: 0
 21890                           ;incstack = 0
 21891                           ;oled_putChar@k stored from wreg
 21892  004F28  0100               	movlb	0	; () banked
 21893  004F2A  6F6A               	movwf	oled_putChar@k& (0+255),b
 21894                           
 21895                           ;SSD1306oLED.c: 320: uint8_t index;
 21896                           ;SSD1306oLED.c: 322: Set_Page_Address(start_page);
 21897  004F2C  0100               	movlb	0	; () banked
 21898  004F2E  5163               	movf	oled_putChar@start_page& (0+255),w,b
 21899  004F30  ECD8  F030         	call	_Set_Page_Address
 21900                           
 21901                           ;SSD1306oLED.c: 323: Set_Column_Address(0x00 + station_dot * 8 + 4);
 21902  004F34  0100               	movlb	0	; () banked
 21903  004F36  5162               	movf	oled_putChar@station_dot& (0+255),w,b
 21904  004F38  0D08               	mullw	8
 21905  004F3A  50F3               	movf	prodl,w,c
 21906  004F3C  0F04               	addlw	4
 21907  004F3E  EC70  F030         	call	_Set_Column_Address
 21908                           
 21909                           ;SSD1306oLED.c: 325: for(index = 0; index < 8; index++)
 21910  004F42  0E00               	movlw	0
 21911  004F44  0100               	movlb	0	; () banked
 21912  004F46  6F6B               	movwf	oled_putChar@index& (0+255),b
 21913  004F48                     l8061:
 21914                           
 21915                           ; BSR set to: 0
 21916  004F48  0E07               	movlw	7
 21917  004F4A  656B               	cpfsgt	oled_putChar@index& (0+255),b
 21918  004F4C  D001               	goto	l1091
 21919  004F4E  0012               	return	
 21920  004F50                     l1091:
 21921                           
 21922                           ; BSR set to: 0
 21923                           ;SSD1306oLED.c: 326: {
 21924                           ;SSD1306oLED.c: 327: oled_writeData(*(selectedFont + 8 * (k - 0x20) + index));
 21925                           
 21926                           ; BSR set to: 0
 21927  004F50  516B               	movf	oled_putChar@index& (0+255),w,b
 21928  004F52  0D01               	mullw	1
 21929  004F54  0E00               	movlw	0
 21930  004F56  6F64               	movwf	??_oled_putChar& (0+255),b
 21931  004F58  0EFF               	movlw	255
 21932  004F5A  6F65               	movwf	(??_oled_putChar+1)& (0+255),b
 21933  004F5C  516A               	movf	oled_putChar@k& (0+255),w,b
 21934  004F5E  6F66               	movwf	(??_oled_putChar+2)& (0+255),b
 21935  004F60  6B67               	clrf	(??_oled_putChar+3)& (0+255),b
 21936  004F62  90D8               	bcf	status,0,c
 21937  004F64  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 21938  004F66  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 21939  004F68  90D8               	bcf	status,0,c
 21940  004F6A  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 21941  004F6C  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 21942  004F6E  90D8               	bcf	status,0,c
 21943  004F70  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 21944  004F72  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 21945  004F74  5164               	movf	??_oled_putChar& (0+255),w,b
 21946  004F76  2766               	addwf	(??_oled_putChar+2)& (0+255),f,b
 21947  004F78  5165               	movf	(??_oled_putChar+1)& (0+255),w,b
 21948  004F7A  2367               	addwfc	(??_oled_putChar+3)& (0+255),f,b
 21949  004F7C  C1FD  F068         	movff	_selectedFont,??_oled_putChar+4
 21950  004F80  C1FE  F069         	movff	_selectedFont+1,??_oled_putChar+5
 21951  004F84  5166               	movf	(??_oled_putChar+2)& (0+255),w,b
 21952  004F86  2768               	addwf	(??_oled_putChar+4)& (0+255),f,b
 21953  004F88  5167               	movf	(??_oled_putChar+3)& (0+255),w,b
 21954  004F8A  2369               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 21955  004F8C  50F3               	movf	prodl,w,c
 21956  004F8E  2768               	addwf	(??_oled_putChar+4)& (0+255),f,b
 21957  004F90  50F4               	movf	prodh,w,c
 21958  004F92  2369               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 21959  004F94  C068  FFF6         	movff	??_oled_putChar+4,tblptrl
 21960  004F98  C069  FFF7         	movff	??_oled_putChar+5,tblptrh
 21961  004F9C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21962  004F9C  6AF8               	clrf	tblptru,c
 21963  004F9E                     	endif
 21964  004F9E                     	if	0	;tblptru may be non-zero
 21965  004F9E                     	endif
 21966  004F9E  0008               	tblrd		*
 21967  004FA0  50F5               	movf	tablat,w,c
 21968  004FA2  EC98  F030         	call	_oled_writeData
 21969  004FA6  0100               	movlb	0	; () banked
 21970  004FA8  2B6B               	incf	oled_putChar@index& (0+255),f,b
 21971  004FAA  D7CE               	goto	l8061
 21972  004FAC                     __end_of_oled_putChar:
 21973                           	opt stack 0
 21974                           tblptru	equ	0xFF8
 21975                           tblptrh	equ	0xFF7
 21976                           tblptrl	equ	0xFF6
 21977                           tablat	equ	0xFF5
 21978                           prodh	equ	0xFF4
 21979                           prodl	equ	0xFF3
 21980                           intcon	equ	0xFF2
 21981                           intcon3	equ	0xFF0
 21982                           indf0	equ	0xFEF
 21983                           postinc0	equ	0xFEE
 21984                           fsr0h	equ	0xFEA
 21985                           fsr0l	equ	0xFE9
 21986                           wreg	equ	0xFE8
 21987                           indf1	equ	0xFE7
 21988                           postdec1	equ	0xFE5
 21989                           fsr1h	equ	0xFE2
 21990                           fsr1l	equ	0xFE1
 21991                           indf2	equ	0xFDF
 21992                           postinc2	equ	0xFDE
 21993                           fsr2h	equ	0xFDA
 21994                           fsr2l	equ	0xFD9
 21995                           status	equ	0xFD8
 21996                           
 21997 ;; *************** function _oled_writeData *****************
 21998 ;; Defined at:
 21999 ;;		line 465 in file "../Includes/Drivers/SSD1306oLED.c"
 22000 ;; Parameters:    Size  Location     Type
 22001 ;;  data            1    wreg     unsigned char 
 22002 ;; Auto vars:     Size  Location     Type
 22003 ;;  data            1    0[BANK0 ] unsigned char 
 22004 ;; Return value:  Size  Location     Type
 22005 ;;                  1    wreg      void 
 22006 ;; Registers used:
 22007 ;;		wreg
 22008 ;; Tracked objects:
 22009 ;;		On entry : 0/0
 22010 ;;		On exit  : 0/0
 22011 ;;		Unchanged: 0/0
 22012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22013 ;;      Params:         0       0       0       0       0       0       0       0       0
 22014 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22015 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22016 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22017 ;;Total ram usage:        1 bytes
 22018 ;; Hardware stack levels used:    1
 22019 ;; Hardware stack levels required when called:   11
 22020 ;; This function calls:
 22021 ;;		Nothing
 22022 ;; This function is called by:
 22023 ;;		_oled_putChar
 22024 ;; This function uses a non-reentrant model
 22025 ;;
 22026                           
 22027                           	psect	text79
 22028  006130                     __ptext79:
 22029                           	opt stack 0
 22030  006130                     _oled_writeData:
 22031                           	opt stack 15
 22032                           
 22033                           ; BSR set to: 0
 22034                           ;incstack = 0
 22035                           ;oled_writeData@data stored from wreg
 22036  006130  0100               	movlb	0	; () banked
 22037  006132  6F60               	movwf	oled_writeData@data& (0+255),b
 22038                           
 22039                           ;SSD1306oLED.c: 467: LATBbits.LATB4=0;
 22040  006134  988A               	bcf	3978,4,c	;volatile
 22041                           
 22042                           ;SSD1306oLED.c: 468: LATCbits.LATC0=1;
 22043  006136  808B               	bsf	3979,0,c	;volatile
 22044                           
 22045                           ;SSD1306oLED.c: 469: LATD=data;
 22046  006138  C060  FF8C         	movff	oled_writeData@data,3980	;volatile
 22047                           
 22048                           ;SSD1306oLED.c: 470: LATCbits.LATC1=0;
 22049  00613C  928B               	bcf	3979,1,c	;volatile
 22050                           
 22051                           ;SSD1306oLED.c: 471: __nop();
 22052  00613E  F000               	nop	
 22053                           
 22054                           ;SSD1306oLED.c: 472: LATCbits.LATC1=1;
 22055  006140  828B               	bsf	3979,1,c	;volatile
 22056                           
 22057                           ;SSD1306oLED.c: 473: LATBbits.LATB4=1;
 22058  006142  888A               	bsf	3978,4,c	;volatile
 22059  006144  0012               	return	
 22060  006146                     __end_of_oled_writeData:
 22061                           	opt stack 0
 22062                           tblptru	equ	0xFF8
 22063                           tblptrh	equ	0xFF7
 22064                           tblptrl	equ	0xFF6
 22065                           tablat	equ	0xFF5
 22066                           prodh	equ	0xFF4
 22067                           prodl	equ	0xFF3
 22068                           intcon	equ	0xFF2
 22069                           intcon3	equ	0xFF0
 22070                           indf0	equ	0xFEF
 22071                           postinc0	equ	0xFEE
 22072                           fsr0h	equ	0xFEA
 22073                           fsr0l	equ	0xFE9
 22074                           wreg	equ	0xFE8
 22075                           indf1	equ	0xFE7
 22076                           postdec1	equ	0xFE5
 22077                           fsr1h	equ	0xFE2
 22078                           fsr1l	equ	0xFE1
 22079                           indf2	equ	0xFDF
 22080                           postinc2	equ	0xFDE
 22081                           fsr2h	equ	0xFDA
 22082                           fsr2l	equ	0xFD9
 22083                           status	equ	0xFD8
 22084                           
 22085 ;; *************** function _Set_Page_Address *****************
 22086 ;; Defined at:
 22087 ;;		line 241 in file "../Includes/Drivers/SSD1306oLED.c"
 22088 ;; Parameters:    Size  Location     Type
 22089 ;;  address         1    wreg     unsigned char 
 22090 ;; Auto vars:     Size  Location     Type
 22091 ;;  address         1    1[BANK0 ] unsigned char 
 22092 ;; Return value:  Size  Location     Type
 22093 ;;                  1    wreg      void 
 22094 ;; Registers used:
 22095 ;;		wreg, status,2, status,0, cstack
 22096 ;; Tracked objects:
 22097 ;;		On entry : 0/0
 22098 ;;		On exit  : 0/0
 22099 ;;		Unchanged: 0/0
 22100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22101 ;;      Params:         0       0       0       0       0       0       0       0       0
 22102 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22103 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22104 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22105 ;;Total ram usage:        1 bytes
 22106 ;; Hardware stack levels used:    1
 22107 ;; Hardware stack levels required when called:   12
 22108 ;; This function calls:
 22109 ;;		_oled_writeCommand
 22110 ;; This function is called by:
 22111 ;;		_oled_putChar
 22112 ;; This function uses a non-reentrant model
 22113 ;;
 22114                           
 22115                           	psect	text80
 22116  0061B0                     __ptext80:
 22117                           	opt stack 0
 22118  0061B0                     _Set_Page_Address:
 22119                           	opt stack 14
 22120                           
 22121                           ;incstack = 0
 22122                           ;Set_Page_Address@address stored from wreg
 22123  0061B0  0100               	movlb	0	; () banked
 22124  0061B2  6F61               	movwf	Set_Page_Address@address& (0+255),b
 22125                           
 22126                           ;SSD1306oLED.c: 243: address = 0xb0 | address;
 22127  0061B4  0100               	movlb	0	; () banked
 22128  0061B6  5161               	movf	Set_Page_Address@address& (0+255),w,b
 22129  0061B8  09B0               	iorlw	176
 22130  0061BA  6F61               	movwf	Set_Page_Address@address& (0+255),b
 22131                           
 22132                           ; BSR set to: 0
 22133                           ;SSD1306oLED.c: 244: oled_writeCommand(address);
 22134  0061BC  5161               	movf	Set_Page_Address@address& (0+255),w,b
 22135  0061BE  ECA3  F030         	call	_oled_writeCommand
 22136  0061C2  0012               	return	
 22137  0061C4                     __end_of_Set_Page_Address:
 22138                           	opt stack 0
 22139                           tblptru	equ	0xFF8
 22140                           tblptrh	equ	0xFF7
 22141                           tblptrl	equ	0xFF6
 22142                           tablat	equ	0xFF5
 22143                           prodh	equ	0xFF4
 22144                           prodl	equ	0xFF3
 22145                           intcon	equ	0xFF2
 22146                           intcon3	equ	0xFF0
 22147                           indf0	equ	0xFEF
 22148                           postinc0	equ	0xFEE
 22149                           fsr0h	equ	0xFEA
 22150                           fsr0l	equ	0xFE9
 22151                           wreg	equ	0xFE8
 22152                           indf1	equ	0xFE7
 22153                           postdec1	equ	0xFE5
 22154                           fsr1h	equ	0xFE2
 22155                           fsr1l	equ	0xFE1
 22156                           indf2	equ	0xFDF
 22157                           postinc2	equ	0xFDE
 22158                           fsr2h	equ	0xFDA
 22159                           fsr2l	equ	0xFD9
 22160                           status	equ	0xFD8
 22161                           
 22162 ;; *************** function _Set_Column_Address *****************
 22163 ;; Defined at:
 22164 ;;		line 249 in file "../Includes/Drivers/SSD1306oLED.c"
 22165 ;; Parameters:    Size  Location     Type
 22166 ;;  address         1    wreg     unsigned char 
 22167 ;; Auto vars:     Size  Location     Type
 22168 ;;  address         1    1[BANK0 ] unsigned char 
 22169 ;; Return value:  Size  Location     Type
 22170 ;;                  1    wreg      void 
 22171 ;; Registers used:
 22172 ;;		wreg, status,2, status,0, cstack
 22173 ;; Tracked objects:
 22174 ;;		On entry : 0/0
 22175 ;;		On exit  : 0/0
 22176 ;;		Unchanged: 0/0
 22177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22178 ;;      Params:         0       0       0       0       0       0       0       0       0
 22179 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22180 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22181 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22182 ;;Total ram usage:        1 bytes
 22183 ;; Hardware stack levels used:    1
 22184 ;; Hardware stack levels required when called:   12
 22185 ;; This function calls:
 22186 ;;		_oled_writeCommand
 22187 ;; This function is called by:
 22188 ;;		_oled_putChar
 22189 ;; This function uses a non-reentrant model
 22190 ;;
 22191                           
 22192                           	psect	text81
 22193  0060E0                     __ptext81:
 22194                           	opt stack 0
 22195  0060E0                     _Set_Column_Address:
 22196                           	opt stack 14
 22197                           
 22198                           ;incstack = 0
 22199                           ;Set_Column_Address@address stored from wreg
 22200  0060E0  0100               	movlb	0	; () banked
 22201  0060E2  6F61               	movwf	Set_Column_Address@address& (0+255),b
 22202                           
 22203                           ;SSD1306oLED.c: 251: oled_writeCommand((0x10|(address>>4)));
 22204  0060E4  0100               	movlb	0	; () banked
 22205  0060E6  3961               	swapf	Set_Column_Address@address& (0+255),w,b
 22206  0060E8  0B0F               	andlw	15
 22207  0060EA  0910               	iorlw	16
 22208  0060EC  ECA3  F030         	call	_oled_writeCommand
 22209                           
 22210                           ;SSD1306oLED.c: 252: oled_writeCommand((0x0f&address));
 22211  0060F0  0100               	movlb	0	; () banked
 22212  0060F2  5161               	movf	Set_Column_Address@address& (0+255),w,b
 22213  0060F4  0B0F               	andlw	15
 22214  0060F6  ECA3  F030         	call	_oled_writeCommand
 22215  0060FA  0012               	return	
 22216  0060FC                     __end_of_Set_Column_Address:
 22217                           	opt stack 0
 22218                           tblptru	equ	0xFF8
 22219                           tblptrh	equ	0xFF7
 22220                           tblptrl	equ	0xFF6
 22221                           tablat	equ	0xFF5
 22222                           prodh	equ	0xFF4
 22223                           prodl	equ	0xFF3
 22224                           intcon	equ	0xFF2
 22225                           intcon3	equ	0xFF0
 22226                           indf0	equ	0xFEF
 22227                           postinc0	equ	0xFEE
 22228                           fsr0h	equ	0xFEA
 22229                           fsr0l	equ	0xFE9
 22230                           wreg	equ	0xFE8
 22231                           indf1	equ	0xFE7
 22232                           postdec1	equ	0xFE5
 22233                           fsr1h	equ	0xFE2
 22234                           fsr1l	equ	0xFE1
 22235                           indf2	equ	0xFDF
 22236                           postinc2	equ	0xFDE
 22237                           fsr2h	equ	0xFDA
 22238                           fsr2l	equ	0xFD9
 22239                           status	equ	0xFD8
 22240                           
 22241 ;; *************** function _oled_writeCommand *****************
 22242 ;; Defined at:
 22243 ;;		line 453 in file "../Includes/Drivers/SSD1306oLED.c"
 22244 ;; Parameters:    Size  Location     Type
 22245 ;;  command         1    wreg     unsigned char 
 22246 ;; Auto vars:     Size  Location     Type
 22247 ;;  command         1    0[BANK0 ] unsigned char 
 22248 ;; Return value:  Size  Location     Type
 22249 ;;                  1    wreg      void 
 22250 ;; Registers used:
 22251 ;;		wreg
 22252 ;; Tracked objects:
 22253 ;;		On entry : 0/0
 22254 ;;		On exit  : 0/0
 22255 ;;		Unchanged: 0/0
 22256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22257 ;;      Params:         0       0       0       0       0       0       0       0       0
 22258 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22259 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22260 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22261 ;;Total ram usage:        1 bytes
 22262 ;; Hardware stack levels used:    1
 22263 ;; Hardware stack levels required when called:   11
 22264 ;; This function calls:
 22265 ;;		Nothing
 22266 ;; This function is called by:
 22267 ;;		_Set_Page_Address
 22268 ;;		_Set_Column_Address
 22269 ;;		_oled_devInit
 22270 ;;		_oled_setDisplay
 22271 ;;		_oled_displayOff
 22272 ;;		_oled_setContrastControlRegister
 22273 ;;		_oled_initialDispayLine
 22274 ;;		_oled_powerControl
 22275 ;;		_oled_regulorResistorSelect
 22276 ;; This function uses a non-reentrant model
 22277 ;;
 22278                           
 22279                           	psect	text82
 22280  006146                     __ptext82:
 22281                           	opt stack 0
 22282  006146                     _oled_writeCommand:
 22283                           	opt stack 14
 22284                           
 22285                           ;incstack = 0
 22286                           ;oled_writeCommand@command stored from wreg
 22287  006146  0100               	movlb	0	; () banked
 22288  006148  6F60               	movwf	oled_writeCommand@command& (0+255),b
 22289                           
 22290                           ;SSD1306oLED.c: 455: LATBbits.LATB4=0;
 22291  00614A  988A               	bcf	3978,4,c	;volatile
 22292                           
 22293                           ;SSD1306oLED.c: 456: LATCbits.LATC0=0;
 22294  00614C  908B               	bcf	3979,0,c	;volatile
 22295                           
 22296                           ;SSD1306oLED.c: 457: LATD=command;
 22297  00614E  C060  FF8C         	movff	oled_writeCommand@command,3980	;volatile
 22298                           
 22299                           ;SSD1306oLED.c: 458: LATCbits.LATC1=0;
 22300  006152  928B               	bcf	3979,1,c	;volatile
 22301                           
 22302                           ;SSD1306oLED.c: 459: __nop();
 22303  006154  F000               	nop	
 22304                           
 22305                           ;SSD1306oLED.c: 460: LATCbits.LATC1=1;
 22306  006156  828B               	bsf	3979,1,c	;volatile
 22307                           
 22308                           ;SSD1306oLED.c: 461: LATBbits.LATB4=1;
 22309  006158  888A               	bsf	3978,4,c	;volatile
 22310  00615A  0012               	return	
 22311  00615C                     __end_of_oled_writeCommand:
 22312                           	opt stack 0
 22313                           tblptru	equ	0xFF8
 22314                           tblptrh	equ	0xFF7
 22315                           tblptrl	equ	0xFF6
 22316                           tablat	equ	0xFF5
 22317                           prodh	equ	0xFF4
 22318                           prodl	equ	0xFF3
 22319                           intcon	equ	0xFF2
 22320                           intcon3	equ	0xFF0
 22321                           indf0	equ	0xFEF
 22322                           postinc0	equ	0xFEE
 22323                           fsr0h	equ	0xFEA
 22324                           fsr0l	equ	0xFE9
 22325                           wreg	equ	0xFE8
 22326                           indf1	equ	0xFE7
 22327                           postdec1	equ	0xFE5
 22328                           fsr1h	equ	0xFE2
 22329                           fsr1l	equ	0xFE1
 22330                           indf2	equ	0xFDF
 22331                           postinc2	equ	0xFDE
 22332                           fsr2h	equ	0xFDA
 22333                           fsr2l	equ	0xFD9
 22334                           status	equ	0xFD8
 22335                           
 22336 ;; *************** function _USBapp_DeviceCdcEmulatorHandler *****************
 22337 ;; Defined at:
 22338 ;;		line 162 in file "../Includes/Board/USBapp.c"
 22339 ;; Parameters:    Size  Location     Type
 22340 ;;		None
 22341 ;; Auto vars:     Size  Location     Type
 22342 ;;		None
 22343 ;; Return value:  Size  Location     Type
 22344 ;;                  1    wreg      void 
 22345 ;; Registers used:
 22346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22347 ;; Tracked objects:
 22348 ;;		On entry : 0/0
 22349 ;;		On exit  : 0/0
 22350 ;;		Unchanged: 0/0
 22351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22352 ;;      Params:         0       0       0       0       0       0       0       0       0
 22353 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22354 ;;      Temps:          0       1       0       0       0       0       0       0       0
 22355 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22356 ;;Total ram usage:        1 bytes
 22357 ;; Hardware stack levels used:    1
 22358 ;; Hardware stack levels required when called:   13
 22359 ;; This function calls:
 22360 ;;		_CDCTxService
 22361 ;;		_EUSART_Read
 22362 ;;		_EUSART_Write
 22363 ;;		_MOTEapp_setResponseReady
 22364 ;;		_USBapp_getrxByteFlag
 22365 ;;		_getsUSBUSART
 22366 ;;		_putUSBUSART
 22367 ;; This function is called by:
 22368 ;;		_USBapp_Handler
 22369 ;; This function uses a non-reentrant model
 22370 ;;
 22371                           
 22372                           	psect	text83
 22373  003C0C                     __ptext83:
 22374                           	opt stack 0
 22375  003C0C                     _USBapp_DeviceCdcEmulatorHandler:
 22376                           	opt stack 16
 22377                           
 22378                           ;USBapp.c: 165: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 22379                           
 22380                           ;incstack = 0
 22381  003C0C  0E1F               	movlw	31
 22382  003C0E  0100               	movlb	0	; () banked
 22383  003C10  65EB               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
 22384  003C12  0012               	return	
 22385                           
 22386                           ; BSR set to: 0
 22387  003C14  B260               	btfsc	3936,1,c	;volatile
 22388  003C16  0012               	return	
 22389                           
 22390                           ; BSR set to: 0
 22391                           ;USBapp.c: 168: if (RS232_Out_Data_Rdy == 0)
 22392                           
 22393                           ; BSR set to: 0
 22394                           
 22395                           ; BSR set to: 0
 22396                           ;USBapp.c: 166: return;
 22397  003C18  51E7               	movf	_RS232_Out_Data_Rdy& (0+255),w,b
 22398  003C1A  A4D8               	btfss	status,2,c
 22399  003C1C  D011               	goto	l931
 22400                           
 22401                           ; BSR set to: 0
 22402                           ;USBapp.c: 169: {
 22403                           ;USBapp.c: 170: LastRS232Out = getsUSBUSART(USB_Buffer,64);
 22404  003C1E  0E80               	movlw	low _USB_Buffer
 22405  003C20  6F67               	movwf	getsUSBUSART@buffer& (0+255),b
 22406  003C22  0E02               	movlw	high _USB_Buffer
 22407  003C24  6F68               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 22408  003C26  0E40               	movlw	64
 22409  003C28  6F69               	movwf	getsUSBUSART@len& (0+255),b
 22410  003C2A  EC39  F023         	call	_getsUSBUSART	;wreg free
 22411  003C2E  0100               	movlb	0	; () banked
 22412  003C30  6FE6               	movwf	_LastRS232Out& (0+255),b
 22413                           
 22414                           ; BSR set to: 0
 22415                           ;USBapp.c: 171: if(LastRS232Out > 0)
 22416  003C32  51E6               	movf	_LastRS232Out& (0+255),w,b
 22417  003C34  B4D8               	btfsc	status,2,c
 22418  003C36  D004               	goto	l931
 22419                           
 22420                           ; BSR set to: 0
 22421                           ;USBapp.c: 172: {
 22422                           ;USBapp.c: 173: RS232_Out_Data_Rdy = 1;
 22423  003C38  0E01               	movlw	1
 22424  003C3A  6FE7               	movwf	_RS232_Out_Data_Rdy& (0+255),b
 22425                           
 22426                           ;USBapp.c: 174: RS232cp = 0;
 22427  003C3C  0E00               	movlw	0
 22428  003C3E  6FE5               	movwf	_RS232cp& (0+255),b
 22429  003C40                     l931:
 22430                           
 22431                           ; BSR set to: 0
 22432                           ;USBapp.c: 175: }
 22433                           ;USBapp.c: 176: }
 22434                           ;USBapp.c: 179: if(RS232_Out_Data_Rdy && TXSTAbits.TRMT)
 22435                           
 22436                           ; BSR set to: 0
 22437  003C40  51E7               	movf	_RS232_Out_Data_Rdy& (0+255),w,b
 22438  003C42  A4D8               	btfss	status,2,c
 22439                           
 22440                           ; BSR set to: 0
 22441  003C44  A2AC               	btfss	4012,1,c	;volatile
 22442  003C46  D013               	goto	l933
 22443                           
 22444                           ; BSR set to: 0
 22445                           ;USBapp.c: 180: {
 22446                           ;USBapp.c: 182: EUSART_Write(USB_Buffer[RS232cp]);
 22447  003C48  51E5               	movf	_RS232cp& (0+255),w,b
 22448  003C4A  0D01               	mullw	1
 22449  003C4C  0E80               	movlw	low _USB_Buffer
 22450  003C4E  24F3               	addwf	prodl,w,c
 22451  003C50  6ED9               	movwf	fsr2l,c
 22452  003C52  0E02               	movlw	high _USB_Buffer
 22453  003C54  20F4               	addwfc	prodh,w,c
 22454  003C56  6EDA               	movwf	fsr2h,c
 22455  003C58  50DF               	movf	indf2,w,c
 22456  003C5A  EC70  F02D         	call	_EUSART_Write
 22457                           
 22458                           ;USBapp.c: 183: ++RS232cp;
 22459  003C5E  0100               	movlb	0	; () banked
 22460  003C60  2BE5               	incf	_RS232cp& (0+255),f,b
 22461                           
 22462                           ; BSR set to: 0
 22463                           ;USBapp.c: 184: if (RS232cp == LastRS232Out)
 22464  003C62  51E6               	movf	_LastRS232Out& (0+255),w,b
 22465  003C64  19E5               	xorwf	_RS232cp& (0+255),w,b
 22466  003C66  A4D8               	btfss	status,2,c
 22467  003C68  D002               	goto	l933
 22468                           
 22469                           ; BSR set to: 0
 22470                           ;USBapp.c: 185: RS232_Out_Data_Rdy = 0;
 22471  003C6A  0E00               	movlw	0
 22472  003C6C  6FE7               	movwf	_RS232_Out_Data_Rdy& (0+255),b
 22473  003C6E                     l933:
 22474                           
 22475                           ; BSR set to: 0
 22476                           ;USBapp.c: 186: }
 22477                           ;USBapp.c: 189: if ((eusartRxCount))
 22478                           
 22479                           ; BSR set to: 0
 22480  003C6E  51F5               	movf	_eusartRxCount& (0+255),w,b	;volatile
 22481  003C70  B4D8               	btfsc	status,2,c
 22482  003C72  D025               	goto	l935
 22483                           
 22484                           ; BSR set to: 0
 22485                           ;USBapp.c: 190: {
 22486                           ;USBapp.c: 191: if(USBapp_getrxByteFlag() && (NextUSBOut < (64 - 1)))
 22487  003C74  EC67  F031         	call	_USBapp_getrxByteFlag	;wreg free
 22488  003C78  0900               	iorlw	0
 22489  003C7A  B4D8               	btfsc	status,2,c
 22490  003C7C  D020               	goto	l935
 22491  003C7E  0E3F               	movlw	63
 22492  003C80  0100               	movlb	0	; () banked
 22493  003C82  61E8               	cpfslt	_NextUSBOut& (0+255),b
 22494  003C84  D01C               	goto	l935
 22495                           
 22496                           ; BSR set to: 0
 22497                           ;USBapp.c: 192: {
 22498                           ;USBapp.c: 193: __nop();
 22499  003C86  F000               	nop	
 22500                           
 22501                           ;USBapp.c: 194: USB_Buffer[NextUSBOut] = EUSART_Read();
 22502  003C88  ECEA  F02D         	call	_EUSART_Read	;wreg free
 22503  003C8C  0100               	movlb	0	; () banked
 22504  003C8E  6F6D               	movwf	??_USBapp_DeviceCdcEmulatorHandler& (0+255),b
 22505  003C90  51E8               	movf	_NextUSBOut& (0+255),w,b
 22506  003C92  0D01               	mullw	1
 22507  003C94  0E80               	movlw	low _USB_Buffer
 22508  003C96  24F3               	addwf	prodl,w,c
 22509  003C98  6ED9               	movwf	fsr2l,c
 22510  003C9A  0E02               	movlw	high _USB_Buffer
 22511  003C9C  20F4               	addwfc	prodh,w,c
 22512  003C9E  6EDA               	movwf	fsr2h,c
 22513  003CA0  C06D  FFDF         	movff	??_USBapp_DeviceCdcEmulatorHandler,indf2
 22514                           
 22515                           ; BSR set to: 0
 22516                           ;USBapp.c: 195: ++NextUSBOut;
 22517  003CA4  2BE8               	incf	_NextUSBOut& (0+255),f,b
 22518                           
 22519                           ; BSR set to: 0
 22520                           ;USBapp.c: 196: USB_Buffer[NextUSBOut] = 0;
 22521  003CA6  51E8               	movf	_NextUSBOut& (0+255),w,b
 22522  003CA8  0D01               	mullw	1
 22523  003CAA  0E80               	movlw	low _USB_Buffer
 22524  003CAC  24F3               	addwf	prodl,w,c
 22525  003CAE  6ED9               	movwf	fsr2l,c
 22526  003CB0  0E02               	movlw	high _USB_Buffer
 22527  003CB2  20F4               	addwfc	prodh,w,c
 22528  003CB4  6EDA               	movwf	fsr2h,c
 22529  003CB6  0E00               	movlw	0
 22530  003CB8  6EDF               	movwf	indf2,c
 22531                           
 22532                           ; BSR set to: 0
 22533                           ;USBapp.c: 197: rxByteFlag = 0;
 22534  003CBA  0E00               	movlw	0
 22535  003CBC  6FE9               	movwf	_rxByteFlag& (0+255),b	;volatile
 22536  003CBE                     l935:
 22537                           
 22538                           ;USBapp.c: 198: }
 22539                           ;USBapp.c: 199: }
 22540                           ;USBapp.c: 203: if(((cdc_trf_state == 0)) && (NextUSBOut > 0))
 22541                           
 22542                           ; BSR set to: 0
 22543                           
 22544                           ; BSR set to: 0
 22545  003CBE  0100               	movlb	0	; () banked
 22546  003CC0  51EA               	movf	_cdc_trf_state& (0+255),w,b
 22547  003CC2  A4D8               	btfss	status,2,c
 22548  003CC4  D010               	goto	l936
 22549                           
 22550                           ; BSR set to: 0
 22551  003CC6  51E8               	movf	_NextUSBOut& (0+255),w,b
 22552  003CC8  B4D8               	btfsc	status,2,c
 22553  003CCA  D00D               	goto	l936
 22554                           
 22555                           ; BSR set to: 0
 22556                           ;USBapp.c: 204: {
 22557                           ;USBapp.c: 205: putUSBUSART(&USB_Buffer[0], NextUSBOut);
 22558  003CCC  0E80               	movlw	low _USB_Buffer
 22559  003CCE  6F60               	movwf	putUSBUSART@data& (0+255),b
 22560  003CD0  0E02               	movlw	high _USB_Buffer
 22561  003CD2  6F61               	movwf	(putUSBUSART@data+1)& (0+255),b
 22562  003CD4  C0E8  F062         	movff	_NextUSBOut,putUSBUSART@length
 22563  003CD8  EC0E  F030         	call	_putUSBUSART	;wreg free
 22564                           
 22565                           ;USBapp.c: 206: MOTEapp_setResponseReady();
 22566  003CDC  EC58  F031         	call	_MOTEapp_setResponseReady	;wreg free
 22567                           
 22568                           ;USBapp.c: 207: NextUSBOut = 0;
 22569  003CE0  0E00               	movlw	0
 22570  003CE2  0100               	movlb	0	; () banked
 22571  003CE4  6FE8               	movwf	_NextUSBOut& (0+255),b
 22572  003CE6                     l936:
 22573                           
 22574                           ; BSR set to: 0
 22575                           ;USBapp.c: 208: }
 22576                           ;USBapp.c: 210: CDCTxService();
 22577                           
 22578                           ; BSR set to: 0
 22579  003CE6  EC07  F016         	call	_CDCTxService	;wreg free
 22580  003CEA  0012               	return		;funcret
 22581  003CEC                     __end_of_USBapp_DeviceCdcEmulatorHandler:
 22582                           	opt stack 0
 22583                           tblptru	equ	0xFF8
 22584                           tblptrh	equ	0xFF7
 22585                           tblptrl	equ	0xFF6
 22586                           tablat	equ	0xFF5
 22587                           prodh	equ	0xFF4
 22588                           prodl	equ	0xFF3
 22589                           intcon	equ	0xFF2
 22590                           intcon3	equ	0xFF0
 22591                           indf0	equ	0xFEF
 22592                           postinc0	equ	0xFEE
 22593                           fsr0h	equ	0xFEA
 22594                           fsr0l	equ	0xFE9
 22595                           wreg	equ	0xFE8
 22596                           indf1	equ	0xFE7
 22597                           postdec1	equ	0xFE5
 22598                           fsr1h	equ	0xFE2
 22599                           fsr1l	equ	0xFE1
 22600                           indf2	equ	0xFDF
 22601                           postinc2	equ	0xFDE
 22602                           fsr2h	equ	0xFDA
 22603                           fsr2l	equ	0xFD9
 22604                           status	equ	0xFD8
 22605                           
 22606 ;; *************** function _putUSBUSART *****************
 22607 ;; Defined at:
 22608 ;;		line 503 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 22609 ;; Parameters:    Size  Location     Type
 22610 ;;  data            2    0[BANK0 ] PTR unsigned char 
 22611 ;;		 -> USB_Buffer(64), 
 22612 ;;  length          1    2[BANK0 ] unsigned char 
 22613 ;; Auto vars:     Size  Location     Type
 22614 ;;		None
 22615 ;; Return value:  Size  Location     Type
 22616 ;;                  1    wreg      void 
 22617 ;; Registers used:
 22618 ;;		wreg, status,2, status,0
 22619 ;; Tracked objects:
 22620 ;;		On entry : 0/0
 22621 ;;		On exit  : 0/0
 22622 ;;		Unchanged: 0/0
 22623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22624 ;;      Params:         0       3       0       0       0       0       0       0       0
 22625 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22626 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22627 ;;      Totals:         0       3       0       0       0       0       0       0       0
 22628 ;;Total ram usage:        3 bytes
 22629 ;; Hardware stack levels used:    1
 22630 ;; Hardware stack levels required when called:   11
 22631 ;; This function calls:
 22632 ;;		Nothing
 22633 ;; This function is called by:
 22634 ;;		_USBapp_DeviceCdcEmulatorHandler
 22635 ;; This function uses a non-reentrant model
 22636 ;;
 22637                           
 22638                           	psect	text84
 22639  00601C                     __ptext84:
 22640                           	opt stack 0
 22641  00601C                     _putUSBUSART:
 22642                           	opt stack 17
 22643                           
 22644                           ;usb_device_cdc.c: 528: {PIE3bits.USBIE = 0;};
 22645                           
 22646                           ;incstack = 0
 22647  00601C  94A3               	bcf	4003,2,c	;volatile
 22648                           
 22649                           ;usb_device_cdc.c: 529: if(cdc_trf_state == 0)
 22650  00601E  0100               	movlb	0	; () banked
 22651  006020  51EA               	movf	_cdc_trf_state& (0+255),w,b
 22652  006022  A4D8               	btfss	status,2,c
 22653  006024  D00A               	goto	l2269
 22654                           
 22655                           ; BSR set to: 0
 22656                           ;usb_device_cdc.c: 530: {
 22657                           ;usb_device_cdc.c: 531: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 22658  006026  C060  F151         	movff	putUSBUSART@data,_pCDCSrc
 22659  00602A  C061  F152         	movff	putUSBUSART@data+1,_pCDCSrc+1
 22660                           
 22661                           ; BSR set to: 0
 22662  00602E  C062  F0DC         	movff	putUSBUSART@length,_cdc_tx_len
 22663                           
 22664                           ; BSR set to: 0
 22665  006032  0E01               	movlw	1
 22666  006034  6E40               	movwf	_cdc_mem_type,c
 22667                           
 22668                           ; BSR set to: 0
 22669  006036  0E01               	movlw	1
 22670  006038  6FEA               	movwf	_cdc_trf_state& (0+255),b
 22671  00603A                     l2269:
 22672                           
 22673                           ; BSR set to: 0
 22674                           ;usb_device_cdc.c: 532: }
 22675                           ;usb_device_cdc.c: 533: {PIE3bits.USBIE = 1;};
 22676                           
 22677                           ; BSR set to: 0
 22678  00603A  84A3               	bsf	4003,2,c	;volatile
 22679                           
 22680                           ; BSR set to: 0
 22681  00603C  0012               	return		;funcret
 22682  00603E                     __end_of_putUSBUSART:
 22683                           	opt stack 0
 22684                           tblptru	equ	0xFF8
 22685                           tblptrh	equ	0xFF7
 22686                           tblptrl	equ	0xFF6
 22687                           tablat	equ	0xFF5
 22688                           prodh	equ	0xFF4
 22689                           prodl	equ	0xFF3
 22690                           intcon	equ	0xFF2
 22691                           intcon3	equ	0xFF0
 22692                           indf0	equ	0xFEF
 22693                           postinc0	equ	0xFEE
 22694                           fsr0h	equ	0xFEA
 22695                           fsr0l	equ	0xFE9
 22696                           wreg	equ	0xFE8
 22697                           indf1	equ	0xFE7
 22698                           postdec1	equ	0xFE5
 22699                           fsr1h	equ	0xFE2
 22700                           fsr1l	equ	0xFE1
 22701                           indf2	equ	0xFDF
 22702                           postinc2	equ	0xFDE
 22703                           fsr2h	equ	0xFDA
 22704                           fsr2l	equ	0xFD9
 22705                           status	equ	0xFD8
 22706                           
 22707 ;; *************** function _getsUSBUSART *****************
 22708 ;; Defined at:
 22709 ;;		line 432 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 22710 ;; Parameters:    Size  Location     Type
 22711 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 22712 ;;		 -> USB_Buffer(64), 
 22713 ;;  len             1    9[BANK0 ] unsigned char 
 22714 ;; Auto vars:     Size  Location     Type
 22715 ;;		None
 22716 ;; Return value:  Size  Location     Type
 22717 ;;                  1    wreg      unsigned char 
 22718 ;; Registers used:
 22719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22720 ;; Tracked objects:
 22721 ;;		On entry : 0/0
 22722 ;;		On exit  : 0/0
 22723 ;;		Unchanged: 0/0
 22724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22725 ;;      Params:         0       3       0       0       0       0       0       0       0
 22726 ;;      Locals:         0       2       0       0       0       0       0       0       0
 22727 ;;      Temps:          0       1       0       0       0       0       0       0       0
 22728 ;;      Totals:         0       6       0       0       0       0       0       0       0
 22729 ;;Total ram usage:        6 bytes
 22730 ;; Hardware stack levels used:    1
 22731 ;; Hardware stack levels required when called:   12
 22732 ;; This function calls:
 22733 ;;		_USBTransferOnePacket
 22734 ;; This function is called by:
 22735 ;;		_USBapp_DeviceCdcEmulatorHandler
 22736 ;; This function uses a non-reentrant model
 22737 ;;
 22738                           
 22739                           	psect	text85
 22740  004672                     __ptext85:
 22741                           	opt stack 0
 22742  004672                     _getsUSBUSART:
 22743                           	opt stack 16
 22744                           
 22745                           ;usb_device_cdc.c: 434: cdc_rx_len = 0;
 22746                           
 22747                           ; BSR set to: 0
 22748                           ;incstack = 0
 22749  004672  0E00               	movlw	0
 22750  004674  0100               	movlb	0	; () banked
 22751  004676  6FDD               	movwf	_cdc_rx_len& (0+255),b
 22752                           
 22753                           ; BSR set to: 0
 22754                           ;usb_device_cdc.c: 436: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 22755  004678  51D6               	movf	_CDCDataOutHandle& (0+255),w,b
 22756  00467A  11D7               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 22757  00467C  B4D8               	btfsc	status,2,c
 22758  00467E  D00F               	goto	l2259
 22759                           
 22760                           ; BSR set to: 0
 22761  004680  C0D6  FFD9         	movff	_CDCDataOutHandle,fsr2l
 22762  004684  C0D7  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 22763  004688  AEDF               	btfss	indf2,7,c
 22764  00468A  D003               	goto	u8640
 22765  00468C  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 22766  00468E  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 22767  004690  D002               	goto	u8648
 22768  004692                     u8640:
 22769  004692  0100               	movlb	0	; () banked
 22770  004694  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 22771  004696                     u8648:
 22772  004696  516A               	movf	??_getsUSBUSART& (0+255),w,b
 22773  004698  6F6B               	movwf	_getsUSBUSART$6669& (0+255),b
 22774  00469A  6B6C               	clrf	(_getsUSBUSART$6669+1)& (0+255),b
 22775  00469C  D004               	goto	l2261
 22776  00469E                     l2259:
 22777                           
 22778                           ; BSR set to: 0
 22779                           
 22780                           ; BSR set to: 0
 22781  00469E  0E00               	movlw	0
 22782  0046A0  6F6C               	movwf	(_getsUSBUSART$6669+1)& (0+255),b
 22783  0046A2  0E00               	movlw	0
 22784  0046A4  6F6B               	movwf	_getsUSBUSART$6669& (0+255),b
 22785  0046A6                     l2261:
 22786                           
 22787                           ; BSR set to: 0
 22788                           
 22789                           ; BSR set to: 0
 22790  0046A6  516B               	movf	_getsUSBUSART$6669& (0+255),w,b
 22791  0046A8  116C               	iorwf	(_getsUSBUSART$6669+1)& (0+255),w,b
 22792  0046AA  A4D8               	btfss	status,2,c
 22793  0046AC  D03B               	goto	l2257
 22794                           
 22795                           ; BSR set to: 0
 22796                           ;usb_device_cdc.c: 437: {
 22797                           ;usb_device_cdc.c: 442: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 22798  0046AE  EE20 F001          	lfsr	2,1
 22799  0046B2  51D6               	movf	_CDCDataOutHandle& (0+255),w,b
 22800  0046B4  26D9               	addwf	fsr2l,f,c
 22801  0046B6  51D7               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 22802  0046B8  22DA               	addwfc	fsr2h,f,c
 22803  0046BA  5169               	movf	getsUSBUSART@len& (0+255),w,b
 22804  0046BC  5CDE               	subwf	postinc2,w,c
 22805  0046BE  B0D8               	btfsc	status,0,c
 22806  0046C0  D008               	goto	l2262
 22807                           
 22808                           ; BSR set to: 0
 22809                           ;usb_device_cdc.c: 443: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 22810  0046C2  EE20 F001          	lfsr	2,1
 22811  0046C6  51D6               	movf	_CDCDataOutHandle& (0+255),w,b
 22812  0046C8  26D9               	addwf	fsr2l,f,c
 22813  0046CA  51D7               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 22814  0046CC  22DA               	addwfc	fsr2h,f,c
 22815  0046CE  50DF               	movf	indf2,w,c
 22816  0046D0  6F69               	movwf	getsUSBUSART@len& (0+255),b
 22817  0046D2                     l2262:
 22818                           
 22819                           ; BSR set to: 0
 22820                           ;usb_device_cdc.c: 448: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 22821                           
 22822                           ; BSR set to: 0
 22823  0046D2  0E00               	movlw	0
 22824  0046D4  6FDD               	movwf	_cdc_rx_len& (0+255),b
 22825  0046D6  D013               	goto	l2263
 22826  0046D8                     
 22827                           ; BSR set to: 0
 22828                           ;usb_device_cdc.c: 449: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 22829                           
 22830                           ; BSR set to: 0
 22831  0046D8  51DD               	movf	_cdc_rx_len& (0+255),w,b
 22832  0046DA  0D01               	mullw	1
 22833  0046DC  0E40               	movlw	64
 22834  0046DE  24F3               	addwf	prodl,w,c
 22835  0046E0  6ED9               	movwf	fsr2l,c
 22836  0046E2  0E05               	movlw	5
 22837  0046E4  20F4               	addwfc	prodh,w,c
 22838  0046E6  6EDA               	movwf	fsr2h,c
 22839  0046E8  51DD               	movf	_cdc_rx_len& (0+255),w,b
 22840  0046EA  0D01               	mullw	1
 22841  0046EC  50F3               	movf	prodl,w,c
 22842  0046EE  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 22843  0046F0  6EE1               	movwf	fsr1l,c
 22844  0046F2  50F4               	movf	prodh,w,c
 22845  0046F4  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 22846  0046F6  6EE2               	movwf	fsr1h,c
 22847  0046F8  CFDF FFE7          	movff	indf2,indf1
 22848                           
 22849                           ; BSR set to: 0
 22850  0046FC  2BDD               	incf	_cdc_rx_len& (0+255),f,b
 22851  0046FE                     l2263:
 22852                           
 22853                           ; BSR set to: 0
 22854                           
 22855                           ; BSR set to: 0
 22856  0046FE  5169               	movf	getsUSBUSART@len& (0+255),w,b
 22857  004700  5DDD               	subwf	_cdc_rx_len& (0+255),w,b
 22858  004702  A0D8               	btfss	status,0,c
 22859  004704  D7E9               	goto	l2264
 22860                           
 22861                           ; BSR set to: 0
 22862                           ;usb_device_cdc.c: 455: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 22863                           
 22864                           ; BSR set to: 0
 22865  004706  0E00               	movlw	0
 22866  004708  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 22867  00470A  0E40               	movlw	64
 22868  00470C  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 22869  00470E  0E05               	movlw	5
 22870  004710  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 22871  004712  0E40               	movlw	64
 22872  004714  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 22873  004716  0E02               	movlw	2
 22874  004718  EC7D  F022         	call	_USBTransferOnePacket
 22875  00471C  C060  F0D6         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 22876  004720  C061  F0D7         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 22877  004724                     l2257:
 22878                           
 22879                           ;usb_device_cdc.c: 457: }
 22880                           ;usb_device_cdc.c: 459: return cdc_rx_len;
 22881  004724  0100               	movlb	0	; () banked
 22882  004726  51DD               	movf	_cdc_rx_len& (0+255),w,b
 22883  004728  0012               	return	
 22884  00472A                     __end_of_getsUSBUSART:
 22885                           	opt stack 0
 22886                           tblptru	equ	0xFF8
 22887                           tblptrh	equ	0xFF7
 22888                           tblptrl	equ	0xFF6
 22889                           tablat	equ	0xFF5
 22890                           prodh	equ	0xFF4
 22891                           prodl	equ	0xFF3
 22892                           intcon	equ	0xFF2
 22893                           intcon3	equ	0xFF0
 22894                           indf0	equ	0xFEF
 22895                           postinc0	equ	0xFEE
 22896                           fsr0h	equ	0xFEA
 22897                           fsr0l	equ	0xFE9
 22898                           wreg	equ	0xFE8
 22899                           indf1	equ	0xFE7
 22900                           postdec1	equ	0xFE5
 22901                           fsr1h	equ	0xFE2
 22902                           fsr1l	equ	0xFE1
 22903                           indf2	equ	0xFDF
 22904                           postinc2	equ	0xFDE
 22905                           fsr2h	equ	0xFDA
 22906                           fsr2l	equ	0xFD9
 22907                           status	equ	0xFD8
 22908                           
 22909 ;; *************** function _USBapp_getrxByteFlag *****************
 22910 ;; Defined at:
 22911 ;;		line 268 in file "../Includes/Board/USBapp.c"
 22912 ;; Parameters:    Size  Location     Type
 22913 ;;		None
 22914 ;; Auto vars:     Size  Location     Type
 22915 ;;		None
 22916 ;; Return value:  Size  Location     Type
 22917 ;;                  1    wreg      unsigned char 
 22918 ;; Registers used:
 22919 ;;		wreg, status,2
 22920 ;; Tracked objects:
 22921 ;;		On entry : 0/0
 22922 ;;		On exit  : 0/0
 22923 ;;		Unchanged: 0/0
 22924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22925 ;;      Params:         0       0       0       0       0       0       0       0       0
 22926 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22927 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22928 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22929 ;;Total ram usage:        0 bytes
 22930 ;; Hardware stack levels used:    1
 22931 ;; Hardware stack levels required when called:   11
 22932 ;; This function calls:
 22933 ;;		Nothing
 22934 ;; This function is called by:
 22935 ;;		_USBapp_DeviceCdcEmulatorHandler
 22936 ;; This function uses a non-reentrant model
 22937 ;;
 22938                           
 22939                           	psect	text86
 22940  0062CE                     __ptext86:
 22941                           	opt stack 0
 22942  0062CE                     _USBapp_getrxByteFlag:
 22943                           	opt stack 17
 22944                           
 22945                           ;USBapp.c: 270: return rxByteFlag;
 22946                           
 22947                           ; BSR set to: 0
 22948                           ;incstack = 0
 22949  0062CE  0100               	movlb	0	; () banked
 22950  0062D0  51E9               	movf	_rxByteFlag& (0+255),w,b	;volatile
 22951  0062D2  0012               	return	
 22952  0062D4                     __end_of_USBapp_getrxByteFlag:
 22953                           	opt stack 0
 22954                           tblptru	equ	0xFF8
 22955                           tblptrh	equ	0xFF7
 22956                           tblptrl	equ	0xFF6
 22957                           tablat	equ	0xFF5
 22958                           prodh	equ	0xFF4
 22959                           prodl	equ	0xFF3
 22960                           intcon	equ	0xFF2
 22961                           intcon3	equ	0xFF0
 22962                           indf0	equ	0xFEF
 22963                           postinc0	equ	0xFEE
 22964                           fsr0h	equ	0xFEA
 22965                           fsr0l	equ	0xFE9
 22966                           wreg	equ	0xFE8
 22967                           indf1	equ	0xFE7
 22968                           postdec1	equ	0xFE5
 22969                           fsr1h	equ	0xFE2
 22970                           fsr1l	equ	0xFE1
 22971                           indf2	equ	0xFDF
 22972                           postinc2	equ	0xFDE
 22973                           fsr2h	equ	0xFDA
 22974                           fsr2l	equ	0xFD9
 22975                           status	equ	0xFD8
 22976                           
 22977 ;; *************** function _MOTEapp_setResponseReady *****************
 22978 ;; Defined at:
 22979 ;;		line 1128 in file "../Includes/Board/MOTEapp.c"
 22980 ;; Parameters:    Size  Location     Type
 22981 ;;		None
 22982 ;; Auto vars:     Size  Location     Type
 22983 ;;		None
 22984 ;; Return value:  Size  Location     Type
 22985 ;;                  1    wreg      void 
 22986 ;; Registers used:
 22987 ;;		wreg, status,2
 22988 ;; Tracked objects:
 22989 ;;		On entry : 0/0
 22990 ;;		On exit  : 0/0
 22991 ;;		Unchanged: 0/0
 22992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22993 ;;      Params:         0       0       0       0       0       0       0       0       0
 22994 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22995 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22996 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22997 ;;Total ram usage:        0 bytes
 22998 ;; Hardware stack levels used:    1
 22999 ;; Hardware stack levels required when called:   11
 23000 ;; This function calls:
 23001 ;;		Nothing
 23002 ;; This function is called by:
 23003 ;;		_USBapp_DeviceCdcEmulatorHandler
 23004 ;; This function uses a non-reentrant model
 23005 ;;
 23006                           
 23007                           	psect	text87
 23008  0062B0                     __ptext87:
 23009                           	opt stack 0
 23010  0062B0                     _MOTEapp_setResponseReady:
 23011                           	opt stack 17
 23012                           
 23013                           ;MOTEapp.c: 1130: responseReady = 1;
 23014                           
 23015                           ; BSR set to: 0
 23016                           ;incstack = 0
 23017  0062B0  0E01               	movlw	1
 23018  0062B2  0101               	movlb	1	; () banked
 23019  0062B4  6F66               	movwf	_responseReady& (0+255),b
 23020                           
 23021                           ; BSR set to: 1
 23022  0062B6  0012               	return		;funcret
 23023  0062B8                     __end_of_MOTEapp_setResponseReady:
 23024                           	opt stack 0
 23025                           tblptru	equ	0xFF8
 23026                           tblptrh	equ	0xFF7
 23027                           tblptrl	equ	0xFF6
 23028                           tablat	equ	0xFF5
 23029                           prodh	equ	0xFF4
 23030                           prodl	equ	0xFF3
 23031                           intcon	equ	0xFF2
 23032                           intcon3	equ	0xFF0
 23033                           indf0	equ	0xFEF
 23034                           postinc0	equ	0xFEE
 23035                           fsr0h	equ	0xFEA
 23036                           fsr0l	equ	0xFE9
 23037                           wreg	equ	0xFE8
 23038                           indf1	equ	0xFE7
 23039                           postdec1	equ	0xFE5
 23040                           fsr1h	equ	0xFE2
 23041                           fsr1l	equ	0xFE1
 23042                           indf2	equ	0xFDF
 23043                           postinc2	equ	0xFDE
 23044                           fsr2h	equ	0xFDA
 23045                           fsr2l	equ	0xFD9
 23046                           status	equ	0xFD8
 23047                           
 23048 ;; *************** function _EUSART_Write *****************
 23049 ;; Defined at:
 23050 ;;		line 139 in file "../Includes/MccGenerated/eusart.c"
 23051 ;; Parameters:    Size  Location     Type
 23052 ;;  txData          1    wreg     unsigned char 
 23053 ;; Auto vars:     Size  Location     Type
 23054 ;;  txData          1    0[BANK0 ] unsigned char 
 23055 ;; Return value:  Size  Location     Type
 23056 ;;                  1    wreg      void 
 23057 ;; Registers used:
 23058 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23059 ;; Tracked objects:
 23060 ;;		On entry : 0/0
 23061 ;;		On exit  : 0/0
 23062 ;;		Unchanged: 0/0
 23063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23064 ;;      Params:         0       0       0       0       0       0       0       0       0
 23065 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23066 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23067 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23068 ;;Total ram usage:        1 bytes
 23069 ;; Hardware stack levels used:    1
 23070 ;; Hardware stack levels required when called:   11
 23071 ;; This function calls:
 23072 ;;		Nothing
 23073 ;; This function is called by:
 23074 ;;		_EndLine
 23075 ;;		_sendCommand
 23076 ;;		_sendDataCommand
 23077 ;;		_USBapp_DeviceCdcEmulatorHandler
 23078 ;; This function uses a non-reentrant model
 23079 ;;
 23080                           
 23081                           	psect	text88
 23082  005AE0                     __ptext88:
 23083                           	opt stack 0
 23084  005AE0                     _EUSART_Write:
 23085                           	opt stack 14
 23086                           
 23087                           ; BSR set to: 1
 23088                           ;incstack = 0
 23089                           ;EUSART_Write@txData stored from wreg
 23090  005AE0  0100               	movlb	0	; () banked
 23091  005AE2  6F60               	movwf	EUSART_Write@txData& (0+255),b
 23092  005AE4                     
 23093                           ;eusart.c: 142: {
 23094                           
 23095                           ;eusart.c: 141: while(0 == eusartTxBufferRemaining)
 23096  005AE4  0100               	movlb	0	; () banked
 23097  005AE6  51E0               	movf	_eusartTxBufferRemaining& (0+255),w,b	;volatile
 23098  005AE8  B4D8               	btfsc	status,2,c
 23099  005AEA  D7FC               	goto	l8071
 23100                           
 23101                           ; BSR set to: 0
 23102                           ;eusart.c: 143: }
 23103                           ;eusart.c: 145: if(0 == PIE1bits.TXIE)
 23104  005AEC  B89D               	btfsc	3997,4,c	;volatile
 23105  005AEE  D003               	goto	l1303
 23106                           
 23107                           ; BSR set to: 0
 23108                           ;eusart.c: 146: {
 23109                           ;eusart.c: 147: TXREG = txData;
 23110  005AF0  C060  FFAD         	movff	EUSART_Write@txData,4013	;volatile
 23111                           
 23112                           ;eusart.c: 148: }
 23113  005AF4  D012               	goto	l1304
 23114  005AF6                     l1303:
 23115                           
 23116                           ; BSR set to: 0
 23117                           ;eusart.c: 149: else
 23118                           ;eusart.c: 150: {
 23119                           ;eusart.c: 151: PIE1bits.TXIE = 0;
 23120  005AF6  989D               	bcf	3997,4,c	;volatile
 23121                           
 23122                           ; BSR set to: 0
 23123                           ;eusart.c: 152: eusartTxBuffer[eusartTxHead++] = txData;
 23124  005AF8  51E2               	movf	_eusartTxHead& (0+255),w,b
 23125  005AFA  0D01               	mullw	1
 23126  005AFC  0E40               	movlw	low _eusartTxBuffer
 23127  005AFE  24F3               	addwf	prodl,w,c
 23128  005B00  6ED9               	movwf	fsr2l,c
 23129  005B02  0E02               	movlw	high _eusartTxBuffer
 23130  005B04  20F4               	addwfc	prodh,w,c
 23131  005B06  6EDA               	movwf	fsr2h,c
 23132  005B08  C060  FFDF         	movff	EUSART_Write@txData,indf2
 23133                           
 23134                           ; BSR set to: 0
 23135  005B0C  2BE2               	incf	_eusartTxHead& (0+255),f,b
 23136                           
 23137                           ; BSR set to: 0
 23138                           ;eusart.c: 153: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 23139  005B0E  0E3F               	movlw	63
 23140  005B10  65E2               	cpfsgt	_eusartTxHead& (0+255),b
 23141  005B12  D002               	goto	l1305
 23142                           
 23143                           ; BSR set to: 0
 23144                           ;eusart.c: 154: {
 23145                           ;eusart.c: 155: eusartTxHead = 0;
 23146  005B14  0E00               	movlw	0
 23147  005B16  6FE2               	movwf	_eusartTxHead& (0+255),b
 23148  005B18                     l1305:
 23149                           
 23150                           ; BSR set to: 0
 23151                           ;eusart.c: 156: }
 23152                           ;eusart.c: 157: eusartTxBufferRemaining--;
 23153                           
 23154                           ; BSR set to: 0
 23155  005B18  07E0               	decf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
 23156  005B1A                     l1304:
 23157                           
 23158                           ; BSR set to: 0
 23159                           ;eusart.c: 158: }
 23160                           ;eusart.c: 159: PIE1bits.TXIE = 1;
 23161                           
 23162                           ; BSR set to: 0
 23163  005B1A  889D               	bsf	3997,4,c	;volatile
 23164                           
 23165                           ; BSR set to: 0
 23166  005B1C  0012               	return		;funcret
 23167  005B1E                     __end_of_EUSART_Write:
 23168                           	opt stack 0
 23169                           tblptru	equ	0xFF8
 23170                           tblptrh	equ	0xFF7
 23171                           tblptrl	equ	0xFF6
 23172                           tablat	equ	0xFF5
 23173                           prodh	equ	0xFF4
 23174                           prodl	equ	0xFF3
 23175                           intcon	equ	0xFF2
 23176                           intcon3	equ	0xFF0
 23177                           indf0	equ	0xFEF
 23178                           postinc0	equ	0xFEE
 23179                           fsr0h	equ	0xFEA
 23180                           fsr0l	equ	0xFE9
 23181                           wreg	equ	0xFE8
 23182                           indf1	equ	0xFE7
 23183                           postdec1	equ	0xFE5
 23184                           fsr1h	equ	0xFE2
 23185                           fsr1l	equ	0xFE1
 23186                           indf2	equ	0xFDF
 23187                           postinc2	equ	0xFDE
 23188                           fsr2h	equ	0xFDA
 23189                           fsr2l	equ	0xFD9
 23190                           status	equ	0xFD8
 23191                           
 23192 ;; *************** function _EUSART_Read *****************
 23193 ;; Defined at:
 23194 ;;		line 117 in file "../Includes/MccGenerated/eusart.c"
 23195 ;; Parameters:    Size  Location     Type
 23196 ;;		None
 23197 ;; Auto vars:     Size  Location     Type
 23198 ;;  readValue       1    0[BANK0 ] unsigned char 
 23199 ;; Return value:  Size  Location     Type
 23200 ;;                  1    wreg      unsigned char 
 23201 ;; Registers used:
 23202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23203 ;; Tracked objects:
 23204 ;;		On entry : 0/0
 23205 ;;		On exit  : 0/0
 23206 ;;		Unchanged: 0/0
 23207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23208 ;;      Params:         0       0       0       0       0       0       0       0       0
 23209 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23210 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23211 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23212 ;;Total ram usage:        1 bytes
 23213 ;; Hardware stack levels used:    1
 23214 ;; Hardware stack levels required when called:   11
 23215 ;; This function calls:
 23216 ;;		Nothing
 23217 ;; This function is called by:
 23218 ;;		_MOTEapp_getModuleResponse
 23219 ;;		_USBapp_DeviceCdcEmulatorHandler
 23220 ;; This function uses a non-reentrant model
 23221 ;;
 23222                           
 23223                           	psect	text89
 23224  005BD4                     __ptext89:
 23225                           	opt stack 0
 23226  005BD4                     _EUSART_Read:
 23227                           	opt stack 15
 23228                           
 23229                           ;eusart.c: 119: uint8_t readValue = 0;
 23230                           
 23231                           ; BSR set to: 0
 23232                           ;incstack = 0
 23233  005BD4  0E00               	movlw	0
 23234  005BD6  0100               	movlb	0	; () banked
 23235  005BD8  6F60               	movwf	EUSART_Read@readValue& (0+255),b
 23236                           
 23237                           ;eusart.c: 121: while(0 == eusartRxCount)
 23238  005BDA  D001               	goto	l1293
 23239  005BDC                     l1294:
 23240                           
 23241                           ; BSR set to: 0
 23242                           ;eusart.c: 122: {
 23243                           ;eusart.c: 123: LATAbits.LATA7 = 1;
 23244  005BDC  8E89               	bsf	3977,7,c	;volatile
 23245  005BDE                     l1293:
 23246                           
 23247                           ; BSR set to: 0
 23248                           
 23249                           ; BSR set to: 0
 23250  005BDE  51F5               	movf	_eusartRxCount& (0+255),w,b	;volatile
 23251  005BE0  B4D8               	btfsc	status,2,c
 23252  005BE2  D7FC               	goto	l1294
 23253                           
 23254                           ; BSR set to: 0
 23255                           ;eusart.c: 124: }
 23256                           ;eusart.c: 126: PIE1bits.RCIE = 0;
 23257  005BE4  9A9D               	bcf	3997,5,c	;volatile
 23258                           
 23259                           ; BSR set to: 0
 23260                           ;eusart.c: 128: readValue = eusartRxBuffer[eusartRxTail++];
 23261  005BE6  51DE               	movf	_eusartRxTail& (0+255),w,b
 23262  005BE8  0D01               	mullw	1
 23263  005BEA  0E00               	movlw	low _eusartRxBuffer
 23264  005BEC  24F3               	addwf	prodl,w,c
 23265  005BEE  6ED9               	movwf	fsr2l,c
 23266  005BF0  0E02               	movlw	high _eusartRxBuffer
 23267  005BF2  20F4               	addwfc	prodh,w,c
 23268  005BF4  6EDA               	movwf	fsr2h,c
 23269  005BF6  50DF               	movf	indf2,w,c
 23270  005BF8  6F60               	movwf	EUSART_Read@readValue& (0+255),b
 23271                           
 23272                           ; BSR set to: 0
 23273  005BFA  2BDE               	incf	_eusartRxTail& (0+255),f,b
 23274                           
 23275                           ; BSR set to: 0
 23276                           ;eusart.c: 129: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 23277  005BFC  0E3F               	movlw	63
 23278  005BFE  65DE               	cpfsgt	_eusartRxTail& (0+255),b
 23279  005C00  D002               	goto	l1296
 23280                           
 23281                           ; BSR set to: 0
 23282                           ;eusart.c: 130: {
 23283                           ;eusart.c: 131: eusartRxTail = 0;
 23284  005C02  0E00               	movlw	0
 23285  005C04  6FDE               	movwf	_eusartRxTail& (0+255),b
 23286  005C06                     l1296:
 23287                           
 23288                           ; BSR set to: 0
 23289                           ;eusart.c: 132: }
 23290                           ;eusart.c: 133: eusartRxCount--;
 23291                           
 23292                           ; BSR set to: 0
 23293  005C06  07F5               	decf	_eusartRxCount& (0+255),f,b	;volatile
 23294                           
 23295                           ; BSR set to: 0
 23296                           ;eusart.c: 134: PIE1bits.RCIE = 1;
 23297  005C08  8A9D               	bsf	3997,5,c	;volatile
 23298                           
 23299                           ; BSR set to: 0
 23300                           ;eusart.c: 136: return readValue;
 23301  005C0A  5160               	movf	EUSART_Read@readValue& (0+255),w,b
 23302  005C0C  0012               	return	
 23303  005C0E                     __end_of_EUSART_Read:
 23304                           	opt stack 0
 23305                           tblptru	equ	0xFF8
 23306                           tblptrh	equ	0xFF7
 23307                           tblptrl	equ	0xFF6
 23308                           tablat	equ	0xFF5
 23309                           prodh	equ	0xFF4
 23310                           prodl	equ	0xFF3
 23311                           intcon	equ	0xFF2
 23312                           intcon3	equ	0xFF0
 23313                           indf0	equ	0xFEF
 23314                           postinc0	equ	0xFEE
 23315                           fsr0h	equ	0xFEA
 23316                           fsr0l	equ	0xFE9
 23317                           wreg	equ	0xFE8
 23318                           indf1	equ	0xFE7
 23319                           postdec1	equ	0xFE5
 23320                           fsr1h	equ	0xFE2
 23321                           fsr1l	equ	0xFE1
 23322                           indf2	equ	0xFDF
 23323                           postinc2	equ	0xFDE
 23324                           fsr2h	equ	0xFDA
 23325                           fsr2l	equ	0xFD9
 23326                           status	equ	0xFD8
 23327                           
 23328 ;; *************** function _CDCTxService *****************
 23329 ;; Defined at:
 23330 ;;		line 783 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 23331 ;; Parameters:    Size  Location     Type
 23332 ;;		None
 23333 ;; Auto vars:     Size  Location     Type
 23334 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 23335 ;;  i               1   10[BANK0 ] unsigned char 
 23336 ;; Return value:  Size  Location     Type
 23337 ;;                  1    wreg      void 
 23338 ;; Registers used:
 23339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23340 ;; Tracked objects:
 23341 ;;		On entry : 0/0
 23342 ;;		On exit  : 0/0
 23343 ;;		Unchanged: 0/0
 23344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23345 ;;      Params:         0       0       0       0       0       0       0       0       0
 23346 ;;      Locals:         0       4       0       0       0       0       0       0       0
 23347 ;;      Temps:          0       1       0       0       0       0       0       0       0
 23348 ;;      Totals:         0       5       0       0       0       0       0       0       0
 23349 ;;Total ram usage:        5 bytes
 23350 ;; Hardware stack levels used:    1
 23351 ;; Hardware stack levels required when called:   12
 23352 ;; This function calls:
 23353 ;;		_USBTransferOnePacket
 23354 ;; This function is called by:
 23355 ;;		_USBapp_DeviceCdcEmulatorHandler
 23356 ;; This function uses a non-reentrant model
 23357 ;;
 23358                           
 23359                           	psect	text90
 23360  002C0E                     __ptext90:
 23361                           	opt stack 0
 23362  002C0E                     _CDCTxService:
 23363                           	opt stack 16
 23364                           
 23365                           ;usb_device_cdc.c: 785: uint8_t byte_to_send;
 23366                           ;usb_device_cdc.c: 786: uint8_t i;
 23367                           ;usb_device_cdc.c: 788: {PIE3bits.USBIE = 0;};
 23368                           
 23369                           ; BSR set to: 0
 23370                           ;incstack = 0
 23371  002C0E  94A3               	bcf	4003,2,c	;volatile
 23372                           
 23373                           ;usb_device_cdc.c: 790: {};
 23374                           ;usb_device_cdc.c: 792: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 23375  002C10  5032               	movf	_CDCDataInHandle,w,c
 23376  002C12  1033               	iorwf	_CDCDataInHandle+1,w,c
 23377  002C14  B4D8               	btfsc	status,2,c
 23378  002C16  D010               	goto	l2289
 23379  002C18  C032  FFD9         	movff	_CDCDataInHandle,fsr2l
 23380  002C1C  C033  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 23381  002C20  AEDF               	btfss	indf2,7,c
 23382  002C22  D004               	goto	u8700
 23383  002C24  0100               	movlb	0	; () banked
 23384  002C26  6B67               	clrf	??_CDCTxService& (0+255),b
 23385  002C28  2B67               	incf	??_CDCTxService& (0+255),f,b
 23386  002C2A  D002               	goto	u8708
 23387  002C2C                     u8700:
 23388  002C2C  0100               	movlb	0	; () banked
 23389  002C2E  6B67               	clrf	??_CDCTxService& (0+255),b
 23390  002C30                     u8708:
 23391  002C30  5167               	movf	??_CDCTxService& (0+255),w,b
 23392  002C32  6F68               	movwf	_CDCTxService$6717& (0+255),b
 23393  002C34  6B69               	clrf	(_CDCTxService$6717+1)& (0+255),b
 23394  002C36  D005               	goto	l2291
 23395  002C38                     l2289:
 23396                           
 23397                           ; BSR set to: 0
 23398  002C38  0E00               	movlw	0
 23399  002C3A  0100               	movlb	0	; () banked
 23400  002C3C  6F69               	movwf	(_CDCTxService$6717+1)& (0+255),b
 23401  002C3E  0E00               	movlw	0
 23402  002C40  6F68               	movwf	_CDCTxService$6717& (0+255),b
 23403  002C42                     l2291:
 23404                           
 23405                           ; BSR set to: 0
 23406                           
 23407                           ; BSR set to: 0
 23408  002C42  5168               	movf	_CDCTxService$6717& (0+255),w,b
 23409  002C44  1169               	iorwf	(_CDCTxService$6717+1)& (0+255),w,b
 23410  002C46  B4D8               	btfsc	status,2,c
 23411  002C48  D002               	goto	l2287
 23412                           
 23413                           ; BSR set to: 0
 23414                           ;usb_device_cdc.c: 793: {
 23415                           ;usb_device_cdc.c: 794: {PIE3bits.USBIE = 1;};
 23416  002C4A  84A3               	bsf	4003,2,c	;volatile
 23417                           
 23418                           ;usb_device_cdc.c: 795: return;
 23419  002C4C  0012               	return	
 23420  002C4E                     l2287:
 23421                           
 23422                           ; BSR set to: 0
 23423                           ;usb_device_cdc.c: 796: }
 23424                           ;usb_device_cdc.c: 803: if(cdc_trf_state == 3)
 23425                           
 23426                           ; BSR set to: 0
 23427  002C4E  0E03               	movlw	3
 23428  002C50  19EA               	xorwf	_cdc_trf_state& (0+255),w,b
 23429  002C52  A4D8               	btfss	status,2,c
 23430  002C54  D002               	goto	l2293
 23431                           
 23432                           ; BSR set to: 0
 23433                           ;usb_device_cdc.c: 804: cdc_trf_state = 0;
 23434  002C56  0E00               	movlw	0
 23435  002C58  6FEA               	movwf	_cdc_trf_state& (0+255),b
 23436  002C5A                     l2293:
 23437                           
 23438                           ; BSR set to: 0
 23439                           ;usb_device_cdc.c: 809: if(cdc_trf_state == 0)
 23440  002C5A  51EA               	movf	_cdc_trf_state& (0+255),w,b
 23441  002C5C  A4D8               	btfss	status,2,c
 23442  002C5E  D002               	goto	l2294
 23443                           
 23444                           ; BSR set to: 0
 23445                           ;usb_device_cdc.c: 810: {
 23446                           ;usb_device_cdc.c: 811: {PIE3bits.USBIE = 1;};
 23447  002C60  84A3               	bsf	4003,2,c	;volatile
 23448                           
 23449                           ;usb_device_cdc.c: 812: return;
 23450  002C62  0012               	return	
 23451  002C64                     l2294:
 23452                           
 23453                           ; BSR set to: 0
 23454                           ;usb_device_cdc.c: 813: }
 23455                           ;usb_device_cdc.c: 818: if(cdc_trf_state == 2)
 23456                           
 23457                           ; BSR set to: 0
 23458  002C64  0E02               	movlw	2
 23459  002C66  19EA               	xorwf	_cdc_trf_state& (0+255),w,b
 23460  002C68  A4D8               	btfss	status,2,c
 23461  002C6A  D013               	goto	l2295
 23462                           
 23463                           ; BSR set to: 0
 23464                           ;usb_device_cdc.c: 819: {
 23465                           ;usb_device_cdc.c: 820: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 23466  002C6C  0E01               	movlw	1
 23467  002C6E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 23468  002C70  0E00               	movlw	0
 23469  002C72  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 23470  002C74  0E00               	movlw	0
 23471  002C76  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 23472  002C78  0E00               	movlw	0
 23473  002C7A  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 23474  002C7C  0E02               	movlw	2
 23475  002C7E  EC7D  F022         	call	_USBTransferOnePacket
 23476  002C82  C060  F032         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 23477  002C86  C061  F033         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 23478                           
 23479                           ;usb_device_cdc.c: 822: cdc_trf_state = 3;
 23480  002C8A  0E03               	movlw	3
 23481  002C8C  0100               	movlb	0	; () banked
 23482  002C8E  6FEA               	movwf	_cdc_trf_state& (0+255),b
 23483                           
 23484                           ;usb_device_cdc.c: 823: }
 23485  002C90  D05F               	goto	l2297
 23486  002C92                     l2295:
 23487                           
 23488                           ; BSR set to: 0
 23489                           ;usb_device_cdc.c: 824: else if(cdc_trf_state == 1)
 23490                           
 23491                           ; BSR set to: 0
 23492  002C92  05EA               	decf	_cdc_trf_state& (0+255),w,b
 23493  002C94  A4D8               	btfss	status,2,c
 23494  002C96  D05C               	goto	l2297
 23495                           
 23496                           ; BSR set to: 0
 23497                           ;usb_device_cdc.c: 825: {
 23498                           ;usb_device_cdc.c: 829: if(cdc_tx_len > sizeof(cdc_data_tx))
 23499  002C98  0E40               	movlw	64
 23500  002C9A  65DC               	cpfsgt	_cdc_tx_len& (0+255),b
 23501  002C9C  D003               	goto	l2298
 23502                           
 23503                           ; BSR set to: 0
 23504                           ;usb_device_cdc.c: 830: byte_to_send = sizeof(cdc_data_tx);
 23505  002C9E  0E40               	movlw	64
 23506  002CA0  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 23507  002CA2  D002               	goto	l2299
 23508  002CA4                     l2298:
 23509                           
 23510                           ; BSR set to: 0
 23511                           ;usb_device_cdc.c: 831: else
 23512                           ;usb_device_cdc.c: 832: byte_to_send = cdc_tx_len;
 23513  002CA4  C0DC  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 23514  002CA8                     l2299:
 23515                           
 23516                           ; BSR set to: 0
 23517                           ;usb_device_cdc.c: 837: cdc_tx_len = cdc_tx_len - byte_to_send;
 23518                           
 23519                           ; BSR set to: 0
 23520  002CA8  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 23521  002CAA  0800               	sublw	0
 23522  002CAC  25DC               	addwf	_cdc_tx_len& (0+255),w,b
 23523  002CAE  6FDC               	movwf	_cdc_tx_len& (0+255),b
 23524                           
 23525                           ;usb_device_cdc.c: 839: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 23526  002CB0  0E00               	movlw	0
 23527  002CB2  0101               	movlb	1	; () banked
 23528  002CB4  6F4E               	movwf	_pCDCDst& (0+255),b
 23529  002CB6  0E05               	movlw	5
 23530  002CB8  6F4F               	movwf	(_pCDCDst+1)& (0+255),b
 23531                           
 23532                           ; BSR set to: 1
 23533                           ;usb_device_cdc.c: 841: i = byte_to_send;
 23534  002CBA  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 23535                           
 23536                           ; BSR set to: 1
 23537                           ;usb_device_cdc.c: 842: if(cdc_mem_type == 0x00)
 23538  002CBE  5040               	movf	_cdc_mem_type,w,c
 23539  002CC0  B4D8               	btfsc	status,2,c
 23540  002CC2  D012               	goto	l2301
 23541  002CC4  D027               	goto	l2305
 23542  002CC6                     
 23543                           ;usb_device_cdc.c: 845: {
 23544                           ;usb_device_cdc.c: 846: *pCDCDst.bRam = *pCDCSrc.bRom;
 23545                           
 23546                           ; BSR set to: 1
 23547  002CC6  C151  FFD9         	movff	_pCDCSrc,fsr2l
 23548  002CCA  C152  FFDA         	movff	_pCDCSrc+1,fsr2h
 23549  002CCE  C14E  FFE1         	movff	_pCDCDst,fsr1l
 23550  002CD2  C14F  FFE2         	movff	_pCDCDst+1,fsr1h
 23551  002CD6  CFDF FFE7          	movff	indf2,indf1
 23552                           
 23553                           ;usb_device_cdc.c: 847: pCDCDst.bRam++;
 23554  002CDA  0101               	movlb	1	; () banked
 23555  002CDC  4B4E               	infsnz	_pCDCDst& (0+255),f,b
 23556  002CDE  2B4F               	incf	(_pCDCDst+1)& (0+255),f,b
 23557                           
 23558                           ; BSR set to: 1
 23559                           ;usb_device_cdc.c: 848: pCDCSrc.bRom++;
 23560  002CE0  4B51               	infsnz	_pCDCSrc& (0+255),f,b
 23561  002CE2  2B52               	incf	(_pCDCSrc+1)& (0+255),f,b
 23562                           
 23563                           ; BSR set to: 1
 23564                           ;usb_device_cdc.c: 849: i--;
 23565  002CE4  0100               	movlb	0	; () banked
 23566  002CE6  076A               	decf	CDCTxService@i& (0+255),f,b
 23567  002CE8                     l2301:
 23568                           
 23569                           ; BSR set to: 0
 23570  002CE8  0100               	movlb	0	; () banked
 23571  002CEA  516A               	movf	CDCTxService@i& (0+255),w,b
 23572  002CEC  B4D8               	btfsc	status,2,c
 23573  002CEE  D016               	goto	u8790
 23574  002CF0  D7EA               	goto	l2302
 23575  002CF2                     
 23576                           ; BSR set to: 0
 23577                           ;usb_device_cdc.c: 855: {
 23578                           ;usb_device_cdc.c: 856: *pCDCDst.bRam = *pCDCSrc.bRam;
 23579                           
 23580                           ; BSR set to: 0
 23581  002CF2  C151  FFD9         	movff	_pCDCSrc,fsr2l
 23582  002CF6  C152  FFDA         	movff	_pCDCSrc+1,fsr2h
 23583  002CFA  C14E  FFE1         	movff	_pCDCDst,fsr1l
 23584  002CFE  C14F  FFE2         	movff	_pCDCDst+1,fsr1h
 23585  002D02  CFDF FFE7          	movff	indf2,indf1
 23586                           
 23587                           ; BSR set to: 0
 23588                           ;usb_device_cdc.c: 857: pCDCDst.bRam++;
 23589  002D06  0101               	movlb	1	; () banked
 23590  002D08  4B4E               	infsnz	_pCDCDst& (0+255),f,b
 23591  002D0A  2B4F               	incf	(_pCDCDst+1)& (0+255),f,b
 23592                           
 23593                           ; BSR set to: 1
 23594                           ;usb_device_cdc.c: 858: pCDCSrc.bRam++;
 23595  002D0C  4B51               	infsnz	_pCDCSrc& (0+255),f,b
 23596  002D0E  2B52               	incf	(_pCDCSrc+1)& (0+255),f,b
 23597                           
 23598                           ; BSR set to: 1
 23599                           ;usb_device_cdc.c: 859: i--;
 23600  002D10  0100               	movlb	0	; () banked
 23601  002D12  076A               	decf	CDCTxService@i& (0+255),f,b
 23602  002D14                     l2305:
 23603                           
 23604                           ; BSR set to: 0
 23605  002D14  0100               	movlb	0	; () banked
 23606  002D16  516A               	movf	CDCTxService@i& (0+255),w,b
 23607  002D18  A4D8               	btfss	status,2,c
 23608  002D1A  D7EB               	goto	l2306
 23609  002D1C                     u8790:
 23610                           
 23611                           ; BSR set to: 0
 23612                           ;usb_device_cdc.c: 860: }
 23613                           ;usb_device_cdc.c: 861: }
 23614                           ;usb_device_cdc.c: 867: if(cdc_tx_len == 0)
 23615                           
 23616                           ; BSR set to: 0
 23617                           
 23618                           ; BSR set to: 0
 23619  002D1C  51DC               	movf	_cdc_tx_len& (0+255),w,b
 23620  002D1E  A4D8               	btfss	status,2,c
 23621  002D20  D008               	goto	l2310
 23622                           
 23623                           ; BSR set to: 0
 23624                           ;usb_device_cdc.c: 868: {
 23625                           ;usb_device_cdc.c: 869: if(byte_to_send == 64)
 23626  002D22  0E40               	movlw	64
 23627  002D24  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 23628  002D26  A4D8               	btfss	status,2,c
 23629  002D28  D002               	goto	l2309
 23630                           
 23631                           ; BSR set to: 0
 23632                           ;usb_device_cdc.c: 870: cdc_trf_state = 2;
 23633  002D2A  0E02               	movlw	2
 23634  002D2C  D001               	goto	L22
 23635  002D2E                     l2309:
 23636                           
 23637                           ; BSR set to: 0
 23638                           ;usb_device_cdc.c: 871: else
 23639                           ;usb_device_cdc.c: 872: cdc_trf_state = 3;
 23640                           
 23641                           ; BSR set to: 0
 23642  002D2E  0E03               	movlw	3
 23643  002D30                     L22:
 23644  002D30  6FEA               	movwf	_cdc_trf_state& (0+255),b
 23645  002D32                     l2310:
 23646                           
 23647                           ; BSR set to: 0
 23648                           ;usb_device_cdc.c: 873: }
 23649                           ;usb_device_cdc.c: 874: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 23650                           
 23651                           ; BSR set to: 0
 23652                           
 23653                           ; BSR set to: 0
 23654  002D32  0E01               	movlw	1
 23655  002D34  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 23656  002D36  0E00               	movlw	0
 23657  002D38  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 23658  002D3A  0E05               	movlw	5
 23659  002D3C  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 23660  002D3E  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 23661  002D42  0E02               	movlw	2
 23662  002D44  EC7D  F022         	call	_USBTransferOnePacket
 23663  002D48  C060  F032         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 23664  002D4C  C061  F033         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 23665  002D50                     l2297:
 23666                           
 23667                           ;usb_device_cdc.c: 876: }
 23668                           ;usb_device_cdc.c: 878: {PIE3bits.USBIE = 1;};
 23669  002D50  84A3               	bsf	4003,2,c	;volatile
 23670  002D52  0012               	return		;funcret
 23671  002D54                     __end_of_CDCTxService:
 23672                           	opt stack 0
 23673                           tblptru	equ	0xFF8
 23674                           tblptrh	equ	0xFF7
 23675                           tblptrl	equ	0xFF6
 23676                           tablat	equ	0xFF5
 23677                           prodh	equ	0xFF4
 23678                           prodl	equ	0xFF3
 23679                           intcon	equ	0xFF2
 23680                           intcon3	equ	0xFF0
 23681                           indf0	equ	0xFEF
 23682                           postinc0	equ	0xFEE
 23683                           fsr0h	equ	0xFEA
 23684                           fsr0l	equ	0xFE9
 23685                           wreg	equ	0xFE8
 23686                           indf1	equ	0xFE7
 23687                           postdec1	equ	0xFE5
 23688                           fsr1h	equ	0xFE2
 23689                           fsr1l	equ	0xFE1
 23690                           indf2	equ	0xFDF
 23691                           postinc2	equ	0xFDE
 23692                           fsr2h	equ	0xFDA
 23693                           fsr2l	equ	0xFD9
 23694                           status	equ	0xFD8
 23695                           
 23696 ;; *************** function _USBTransferOnePacket *****************
 23697 ;; Defined at:
 23698 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 23699 ;; Parameters:    Size  Location     Type
 23700 ;;  ep              1    wreg     unsigned char 
 23701 ;;  dir             1    0[BANK0 ] unsigned char 
 23702 ;;  data            2    1[BANK0 ] PTR unsigned char 
 23703 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 23704 ;;  len             1    3[BANK0 ] unsigned char 
 23705 ;; Auto vars:     Size  Location     Type
 23706 ;;  ep              1    4[BANK0 ] unsigned char 
 23707 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 23708 ;;		 -> BDT(48), NULL(0), 
 23709 ;; Return value:  Size  Location     Type
 23710 ;;                  2    0[BANK0 ] PTR void 
 23711 ;; Registers used:
 23712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23713 ;; Tracked objects:
 23714 ;;		On entry : 0/0
 23715 ;;		On exit  : 0/0
 23716 ;;		Unchanged: 0/0
 23717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23718 ;;      Params:         0       4       0       0       0       0       0       0       0
 23719 ;;      Locals:         0       3       0       0       0       0       0       0       0
 23720 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23721 ;;      Totals:         0       7       0       0       0       0       0       0       0
 23722 ;;Total ram usage:        7 bytes
 23723 ;; Hardware stack levels used:    1
 23724 ;; Hardware stack levels required when called:   11
 23725 ;; This function calls:
 23726 ;;		Nothing
 23727 ;; This function is called by:
 23728 ;;		_getsUSBUSART
 23729 ;;		_CDCTxService
 23730 ;;		_USBCDCEventHandler
 23731 ;; This function uses a non-reentrant model
 23732 ;;
 23733                           
 23734                           	psect	text91
 23735  0044FA                     __ptext91:
 23736                           	opt stack 0
 23737  0044FA                     _USBTransferOnePacket:
 23738                           	opt stack 16
 23739                           
 23740                           ;incstack = 0
 23741                           ;USBTransferOnePacket@ep stored from wreg
 23742  0044FA  0100               	movlb	0	; () banked
 23743  0044FC  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 23744                           
 23745                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 23746                           ;usb_device.c: 762: if(dir != 0)
 23747  0044FE  0100               	movlb	0	; () banked
 23748  004500  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 23749  004502  B4D8               	btfsc	status,2,c
 23750  004504  D007               	goto	l1972
 23751                           
 23752                           ; BSR set to: 0
 23753                           ;usb_device.c: 763: {
 23754                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 23755  004506  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 23756  004508  0D02               	mullw	2
 23757  00450A  0ECA               	movlw	low _pBDTEntryIn
 23758  00450C  24F3               	addwf	prodl,w,c
 23759  00450E  6ED9               	movwf	fsr2l,c
 23760  004510  0E00               	movlw	high _pBDTEntryIn
 23761  004512  D006               	goto	L23
 23762  004514                     l1972:
 23763                           
 23764                           ; BSR set to: 0
 23765                           ;usb_device.c: 767: else
 23766                           ;usb_device.c: 768: {
 23767                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 23768                           
 23769                           ; BSR set to: 0
 23770  004514  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 23771  004516  0D02               	mullw	2
 23772  004518  0E40               	movlw	low _pBDTEntryOut
 23773  00451A  24F3               	addwf	prodl,w,c
 23774  00451C  6ED9               	movwf	fsr2l,c
 23775  00451E  0E01               	movlw	high _pBDTEntryOut
 23776  004520                     L23:
 23777  004520  20F4               	addwfc	prodh,w,c
 23778  004522  6EDA               	movwf	fsr2h,c
 23779  004524  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 23780  004528  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 23781                           
 23782                           ; BSR set to: 0
 23783                           ;usb_device.c: 771: }
 23784                           ;usb_device.c: 775: if(handle == 0)
 23785                           
 23786                           ; BSR set to: 0
 23787  00452C  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 23788  00452E  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 23789  004530  A4D8               	btfss	status,2,c
 23790  004532  D005               	goto	l1974
 23791                           
 23792                           ; BSR set to: 0
 23793                           ;usb_device.c: 776: {
 23794                           ;usb_device.c: 777: return 0;
 23795  004534  0E00               	movlw	0
 23796  004536  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 23797  004538  0E00               	movlw	0
 23798  00453A  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 23799                           
 23800                           ; BSR set to: 0
 23801  00453C  0012               	return	
 23802  00453E                     l1974:
 23803                           
 23804                           ; BSR set to: 0
 23805                           ;usb_device.c: 778: }
 23806                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 23807                           
 23808                           ; BSR set to: 0
 23809  00453E  EE20 F002          	lfsr	2,2
 23810  004542  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 23811  004544  26D9               	addwf	fsr2l,f,c
 23812  004546  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 23813  004548  22DA               	addwfc	fsr2h,f,c
 23814  00454A  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 23815  00454E  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 23816                           
 23817                           ;usb_device.c: 781: handle->CNT = len;
 23818  004552  EE20 F001          	lfsr	2,1
 23819  004556  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 23820  004558  26D9               	addwf	fsr2l,f,c
 23821  00455A  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 23822  00455C  22DA               	addwfc	fsr2h,f,c
 23823  00455E  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 23824                           
 23825                           ; BSR set to: 0
 23826                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 23827  004562  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 23828  004566  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 23829  00456A  0E40               	movlw	64
 23830  00456C  16DF               	andwf	indf2,f,c
 23831                           
 23832                           ; BSR set to: 0
 23833                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 23834  00456E  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 23835  004572  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 23836  004576  0E00               	movlw	0
 23837  004578  86DB               	bsf	plusw2,3,c
 23838                           
 23839                           ; BSR set to: 0
 23840                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 23841  00457A  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 23842  00457E  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 23843  004582  0E00               	movlw	0
 23844  004584  8EDB               	bsf	plusw2,7,c
 23845                           
 23846                           ; BSR set to: 0
 23847                           ;usb_device.c: 787: if(dir != 0)
 23848  004586  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 23849  004588  B4D8               	btfsc	status,2,c
 23850  00458A  D007               	goto	l1976
 23851                           
 23852                           ; BSR set to: 0
 23853                           ;usb_device.c: 788: {
 23854                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 23855  00458C  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 23856  00458E  0D02               	mullw	2
 23857  004590  0ECA               	movlw	low _pBDTEntryIn
 23858  004592  24F3               	addwf	prodl,w,c
 23859  004594  6ED9               	movwf	fsr2l,c
 23860  004596  0E00               	movlw	high _pBDTEntryIn
 23861  004598  D006               	goto	L24
 23862  00459A                     l1976:
 23863                           
 23864                           ; BSR set to: 0
 23865                           ;usb_device.c: 792: else
 23866                           ;usb_device.c: 793: {
 23867                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 23868                           
 23869                           ; BSR set to: 0
 23870  00459A  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 23871  00459C  0D02               	mullw	2
 23872  00459E  0E40               	movlw	low _pBDTEntryOut
 23873  0045A0  24F3               	addwf	prodl,w,c
 23874  0045A2  6ED9               	movwf	fsr2l,c
 23875  0045A4  0E01               	movlw	high _pBDTEntryOut
 23876  0045A6                     L24:
 23877  0045A6  20F4               	addwfc	prodh,w,c
 23878  0045A8  6EDA               	movwf	fsr2h,c
 23879  0045AA  0E04               	movlw	4
 23880  0045AC  1ADF               	xorwf	indf2,f,c
 23881                           
 23882                           ; BSR set to: 0
 23883                           ;usb_device.c: 796: }
 23884                           ;usb_device.c: 797: return (void*)handle;
 23885                           
 23886                           ; BSR set to: 0
 23887  0045AE  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 23888  0045B2  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 23889  0045B6  0012               	return	
 23890  0045B8                     __end_of_USBTransferOnePacket:
 23891                           	opt stack 0
 23892                           tblptru	equ	0xFF8
 23893                           tblptrh	equ	0xFF7
 23894                           tblptrl	equ	0xFF6
 23895                           tablat	equ	0xFF5
 23896                           prodh	equ	0xFF4
 23897                           prodl	equ	0xFF3
 23898                           intcon	equ	0xFF2
 23899                           intcon3	equ	0xFF0
 23900                           indf0	equ	0xFEF
 23901                           postinc0	equ	0xFEE
 23902                           fsr0h	equ	0xFEA
 23903                           fsr0l	equ	0xFE9
 23904                           wreg	equ	0xFE8
 23905                           indf1	equ	0xFE7
 23906                           postdec1	equ	0xFE5
 23907                           fsr1h	equ	0xFE2
 23908                           fsr1l	equ	0xFE1
 23909                           indf2	equ	0xFDF
 23910                           postinc2	equ	0xFDE
 23911                           postdec2	equ	0xFDD
 23912                           plusw2	equ	0xFDB
 23913                           fsr2h	equ	0xFDA
 23914                           fsr2l	equ	0xFD9
 23915                           status	equ	0xFD8
 23916                           
 23917 ;; *************** function _USBDeviceInit *****************
 23918 ;; Defined at:
 23919 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 23920 ;; Parameters:    Size  Location     Type
 23921 ;;		None
 23922 ;; Auto vars:     Size  Location     Type
 23923 ;;  i               1    8[BANK0 ] unsigned char 
 23924 ;; Return value:  Size  Location     Type
 23925 ;;                  1    wreg      void 
 23926 ;; Registers used:
 23927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23928 ;; Tracked objects:
 23929 ;;		On entry : 0/0
 23930 ;;		On exit  : 0/0
 23931 ;;		Unchanged: 0/0
 23932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23933 ;;      Params:         0       0       0       0       0       0       0       0       0
 23934 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23935 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23936 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23937 ;;Total ram usage:        1 bytes
 23938 ;; Hardware stack levels used:    1
 23939 ;; Hardware stack levels required when called:   12
 23940 ;; This function calls:
 23941 ;;		_memset
 23942 ;; This function is called by:
 23943 ;;		_main
 23944 ;; This function uses a non-reentrant model
 23945 ;;
 23946                           
 23947                           	psect	text92
 23948  0030F6                     __ptext92:
 23949                           	opt stack 0
 23950  0030F6                     _USBDeviceInit:
 23951                           	opt stack 18
 23952                           
 23953                           ;usb_device.c: 239: uint8_t i;
 23954                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 23955                           
 23956                           ; BSR set to: 0
 23957                           ;incstack = 0
 23958  0030F6  94A3               	bcf	4003,2,c	;volatile
 23959                           
 23960                           ;usb_device.c: 244: {UEIR = 0;};
 23961  0030F8  0E00               	movlw	0
 23962  0030FA  6E67               	movwf	3943,c	;volatile
 23963                           
 23964                           ;usb_device.c: 247: {UIR = 0;};
 23965  0030FC  0E00               	movlw	0
 23966  0030FE  6E65               	movwf	3941,c	;volatile
 23967                           
 23968                           ;usb_device.c: 250: UEP0 = 0;
 23969  003100  0E00               	movlw	0
 23970  003102  6E6A               	movwf	3946,c	;volatile
 23971                           
 23972                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 23973  003104  0E6B               	movlw	107
 23974  003106  0100               	movlb	0	; () banked
 23975  003108  6F60               	movwf	memset@p1& (0+255),b
 23976  00310A  0E0F               	movlw	15
 23977  00310C  6F61               	movwf	(memset@p1+1)& (0+255),b
 23978  00310E  0E00               	movlw	0
 23979  003110  6F63               	movwf	(memset@c+1)& (0+255),b
 23980  003112  0E00               	movlw	0
 23981  003114  6F62               	movwf	memset@c& (0+255),b
 23982  003116  0E00               	movlw	0
 23983  003118  6F65               	movwf	(memset@n+1)& (0+255),b
 23984  00311A  0E02               	movlw	2
 23985  00311C  6F64               	movwf	memset@n& (0+255),b
 23986  00311E  ECF2  F02E         	call	_memset	;wreg free
 23987                           
 23988                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 23989  003122  0E16               	movlw	22
 23990  003124  6E62               	movwf	3938,c	;volatile
 23991  003126  0E9F               	movlw	159
 23992  003128  6E66               	movwf	3942,c	;volatile
 23993  00312A  0E7B               	movlw	123
 23994  00312C  6E64               	movwf	3940,c	;volatile
 23995                           
 23996                           ;usb_device.c: 257: ;
 23997                           ;usb_device.c: 260: ;
 23998                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 23999  00312E  0E00               	movlw	0
 24000  003130  0100               	movlb	0	; () banked
 24001  003132  6F68               	movwf	USBDeviceInit@i& (0+255),b
 24002  003134                     l11741:
 24003                           
 24004                           ; BSR set to: 0
 24005  003134  0E0B               	movlw	11
 24006  003136  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 24007  003138  D001               	goto	l1932
 24008  00313A  D00E               	goto	u10430
 24009  00313C                     l1932:
 24010                           
 24011                           ; BSR set to: 0
 24012                           ;usb_device.c: 264: {
 24013                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 24014                           
 24015                           ; BSR set to: 0
 24016  00313C  5168               	movf	USBDeviceInit@i& (0+255),w,b
 24017  00313E  0D04               	mullw	4
 24018  003140  0E00               	movlw	0
 24019  003142  24F3               	addwf	prodl,w,c
 24020  003144  6ED9               	movwf	fsr2l,c
 24021  003146  0E04               	movlw	4
 24022  003148  20F4               	addwfc	prodh,w,c
 24023  00314A  6EDA               	movwf	fsr2h,c
 24024  00314C  6ADE               	clrf	postinc2,c
 24025  00314E  6ADE               	clrf	postinc2,c
 24026  003150  6ADE               	clrf	postinc2,c
 24027  003152  6ADD               	clrf	postdec2,c
 24028                           
 24029                           ; BSR set to: 0
 24030  003154  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 24031  003156  D7EE               	goto	l11741
 24032  003158                     u10430:
 24033                           
 24034                           ; BSR set to: 0
 24035                           ;usb_device.c: 266: }
 24036                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 24037  003158  8C60               	bsf	3936,6,c	;volatile
 24038                           
 24039                           ; BSR set to: 0
 24040                           ;usb_device.c: 272: UADDR = 0x00;
 24041  00315A  0E00               	movlw	0
 24042  00315C  6E63               	movwf	3939,c	;volatile
 24043                           
 24044                           ; BSR set to: 0
 24045                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 24046  00315E  9860               	bcf	3936,4,c	;volatile
 24047                           
 24048                           ; BSR set to: 0
 24049                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 24050  003160  9C60               	bcf	3936,6,c	;volatile
 24051                           
 24052                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 24053  003162  D009               	goto	l1934
 24054  003164                     
 24055                           ; BSR set to: 0
 24056                           ;usb_device.c: 282: {
 24057                           ;usb_device.c: 283: (UIR &= 0xF7);
 24058                           
 24059                           ; BSR set to: 0
 24060  003164  9665               	bcf	3941,3,c	;volatile
 24061                           
 24062                           ; BSR set to: 0
 24063                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 24064  003166  0E00               	movlw	0
 24065  003168  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 24066                           
 24067                           ; BSR set to: 0
 24068                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 24069  00316A  0E00               	movlw	0
 24070  00316C  6FBF               	movwf	(_outPipes+3)& (0+255),b	;volatile
 24071                           
 24072                           ; BSR set to: 0
 24073                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 24074  00316E  0E00               	movlw	0
 24075  003170  6FC1               	movwf	(_outPipes+5)& (0+255),b	;volatile
 24076  003172  0E00               	movlw	0
 24077  003174  6FC0               	movwf	(_outPipes+4)& (0+255),b	;volatile
 24078  003176                     l1934:
 24079                           
 24080                           ; BSR set to: 0
 24081                           
 24082                           ; BSR set to: 0
 24083  003176  B665               	btfsc	3941,3,c	;volatile
 24084  003178  D7F5               	goto	l1935
 24085                           
 24086                           ; BSR set to: 0
 24087                           ;usb_device.c: 288: }
 24088                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 24089                           
 24090                           ; BSR set to: 0
 24091  00317A  0E01               	movlw	1
 24092  00317C  6E44               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 24093                           
 24094                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 24095  00317E  0E01               	movlw	1
 24096  003180  6E43               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 24097                           
 24098                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 24099  003182  0E00               	movlw	0
 24100  003184  6E42               	movwf	_USBDeferINDataStagePackets,c	;volatile
 24101                           
 24102                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 24103  003186  0E00               	movlw	0
 24104  003188  6E41               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 24105                           
 24106                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 24107  00318A  0E00               	movlw	0
 24108  00318C  0101               	movlb	1	; () banked
 24109  00318E  6F5D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 24110                           
 24111                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 24112  003190  0E00               	movlw	0
 24113  003192  0100               	movlb	0	; () banked
 24114  003194  6F68               	movwf	USBDeviceInit@i& (0+255),b
 24115  003196                     l11769:
 24116                           
 24117                           ; BSR set to: 0
 24118  003196  0E02               	movlw	2
 24119  003198  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 24120  00319A  D001               	goto	l1937
 24121  00319C  D02E               	goto	u10460
 24122  00319E                     l1937:
 24123                           
 24124                           ; BSR set to: 0
 24125                           ;usb_device.c: 302: {
 24126                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 24127                           
 24128                           ; BSR set to: 0
 24129  00319E  5168               	movf	USBDeviceInit@i& (0+255),w,b
 24130  0031A0  0D02               	mullw	2
 24131  0031A2  0ECA               	movlw	low _pBDTEntryIn
 24132  0031A4  24F3               	addwf	prodl,w,c
 24133  0031A6  6ED9               	movwf	fsr2l,c
 24134  0031A8  0E00               	movlw	high _pBDTEntryIn
 24135  0031AA  20F4               	addwfc	prodh,w,c
 24136  0031AC  6EDA               	movwf	fsr2h,c
 24137  0031AE  0E00               	movlw	0
 24138  0031B0  6EDE               	movwf	postinc2,c
 24139  0031B2  0E00               	movlw	0
 24140  0031B4  6EDD               	movwf	postdec2,c
 24141                           
 24142                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 24143  0031B6  5168               	movf	USBDeviceInit@i& (0+255),w,b
 24144  0031B8  0D02               	mullw	2
 24145  0031BA  0E40               	movlw	low _pBDTEntryOut
 24146  0031BC  24F3               	addwf	prodl,w,c
 24147  0031BE  6ED9               	movwf	fsr2l,c
 24148  0031C0  0E01               	movlw	high _pBDTEntryOut
 24149  0031C2  20F4               	addwfc	prodh,w,c
 24150  0031C4  6EDA               	movwf	fsr2h,c
 24151  0031C6  0E00               	movlw	0
 24152  0031C8  6EDE               	movwf	postinc2,c
 24153  0031CA  0E00               	movlw	0
 24154  0031CC  6EDD               	movwf	postdec2,c
 24155                           
 24156                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 24157  0031CE  5168               	movf	USBDeviceInit@i& (0+255),w,b
 24158  0031D0  0D01               	mullw	1
 24159  0031D2  0ED3               	movlw	low _ep_data_in
 24160  0031D4  24F3               	addwf	prodl,w,c
 24161  0031D6  6ED9               	movwf	fsr2l,c
 24162  0031D8  0E00               	movlw	high _ep_data_in
 24163  0031DA  20F4               	addwfc	prodh,w,c
 24164  0031DC  6EDA               	movwf	fsr2h,c
 24165  0031DE  0E00               	movlw	0
 24166  0031E0  6EDF               	movwf	indf2,c
 24167                           
 24168                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 24169  0031E2  5168               	movf	USBDeviceInit@i& (0+255),w,b
 24170  0031E4  0D01               	mullw	1
 24171  0031E6  0ED0               	movlw	low _ep_data_out
 24172  0031E8  24F3               	addwf	prodl,w,c
 24173  0031EA  6ED9               	movwf	fsr2l,c
 24174  0031EC  0E00               	movlw	high _ep_data_out
 24175  0031EE  20F4               	addwfc	prodh,w,c
 24176  0031F0  6EDA               	movwf	fsr2h,c
 24177  0031F2  0E00               	movlw	0
 24178  0031F4  6EDF               	movwf	indf2,c
 24179                           
 24180                           ; BSR set to: 0
 24181  0031F6  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 24182  0031F8  D7CE               	goto	l11769
 24183  0031FA                     u10460:
 24184                           
 24185                           ; BSR set to: 0
 24186                           ;usb_device.c: 307: }
 24187                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 24188                           
 24189                           ; BSR set to: 0
 24190  0031FA  0E08               	movlw	8
 24191  0031FC  6FCA               	movwf	_pBDTEntryIn& (0+255),b
 24192  0031FE  0E04               	movlw	4
 24193  003200  6FCB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 24194                           
 24195                           ; BSR set to: 0
 24196                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 24197  003202  0E16               	movlw	22
 24198  003204  6E6A               	movwf	3946,c	;volatile
 24199                           
 24200                           ; BSR set to: 0
 24201                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 24202  003206  0E04               	movlw	4
 24203  003208  0104               	movlb	4	; () banked
 24204  00320A  6F03               	movwf	3,b	;volatile
 24205  00320C  0E30               	movlw	48
 24206  00320E  6F02               	movwf	2,b	;volatile
 24207                           
 24208                           ; BSR set to: 4
 24209                           ;usb_device.c: 315: BDT[0].CNT = 8;
 24210  003210  0E08               	movlw	8
 24211  003212  6F01               	movwf	1,b	;volatile
 24212                           
 24213                           ; BSR set to: 4
 24214                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 24215  003214  0E04               	movlw	4
 24216  003216  6F00               	movwf	0,b	;volatile
 24217                           
 24218                           ; BSR set to: 4
 24219                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 24220  003218  8F00               	bsf	0,7,b	;volatile
 24221                           
 24222                           ; BSR set to: 4
 24223                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 24224  00321A  0E00               	movlw	0
 24225  00321C  6E5A               	movwf	_USBActiveConfiguration,c	;volatile
 24226                           
 24227                           ; BSR set to: 4
 24228                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 24229  00321E  0E00               	movlw	0
 24230  003220  0100               	movlb	0	; () banked
 24231  003222  6FEB               	movwf	_USBDeviceState& (0+255),b	;volatile
 24232                           
 24233                           ; BSR set to: 0
 24234  003224  0012               	return		;funcret
 24235  003226                     __end_of_USBDeviceInit:
 24236                           	opt stack 0
 24237                           tblptru	equ	0xFF8
 24238                           tblptrh	equ	0xFF7
 24239                           tblptrl	equ	0xFF6
 24240                           tablat	equ	0xFF5
 24241                           prodh	equ	0xFF4
 24242                           prodl	equ	0xFF3
 24243                           intcon	equ	0xFF2
 24244                           intcon3	equ	0xFF0
 24245                           indf0	equ	0xFEF
 24246                           postinc0	equ	0xFEE
 24247                           fsr0h	equ	0xFEA
 24248                           fsr0l	equ	0xFE9
 24249                           wreg	equ	0xFE8
 24250                           indf1	equ	0xFE7
 24251                           postdec1	equ	0xFE5
 24252                           fsr1h	equ	0xFE2
 24253                           fsr1l	equ	0xFE1
 24254                           indf2	equ	0xFDF
 24255                           postinc2	equ	0xFDE
 24256                           postdec2	equ	0xFDD
 24257                           plusw2	equ	0xFDB
 24258                           fsr2h	equ	0xFDA
 24259                           fsr2l	equ	0xFD9
 24260                           status	equ	0xFD8
 24261                           
 24262 ;; *************** function _memset *****************
 24263 ;; Defined at:
 24264 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 24265 ;; Parameters:    Size  Location     Type
 24266 ;;  p1              2    0[BANK0 ] PTR void 
 24267 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 24268 ;;  c               2    2[BANK0 ] int 
 24269 ;;  n               2    4[BANK0 ] unsigned int 
 24270 ;; Auto vars:     Size  Location     Type
 24271 ;;  p               2    6[BANK0 ] PTR unsigned char 
 24272 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 24273 ;; Return value:  Size  Location     Type
 24274 ;;                  2    0[BANK0 ] PTR void 
 24275 ;; Registers used:
 24276 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24277 ;; Tracked objects:
 24278 ;;		On entry : 0/0
 24279 ;;		On exit  : 0/0
 24280 ;;		Unchanged: 0/0
 24281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24282 ;;      Params:         0       6       0       0       0       0       0       0       0
 24283 ;;      Locals:         0       2       0       0       0       0       0       0       0
 24284 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24285 ;;      Totals:         0       8       0       0       0       0       0       0       0
 24286 ;;Total ram usage:        8 bytes
 24287 ;; Hardware stack levels used:    1
 24288 ;; Hardware stack levels required when called:   11
 24289 ;; This function calls:
 24290 ;;		Nothing
 24291 ;; This function is called by:
 24292 ;;		_USBDeviceInit
 24293 ;; This function uses a non-reentrant model
 24294 ;;
 24295                           
 24296                           	psect	text93
 24297  005DE4                     __ptext93:
 24298                           	opt stack 0
 24299  005DE4                     _memset:
 24300                           	opt stack 18
 24301                           
 24302                           ; BSR set to: 0
 24303                           ;incstack = 0
 24304  005DE4  C060  F066         	movff	memset@p1,memset@p
 24305  005DE8  C061  F067         	movff	memset@p1+1,memset@p+1
 24306  005DEC  D009               	goto	l2758
 24307  005DEE                     l11563:
 24308  005DEE  C066  FFD9         	movff	memset@p,fsr2l
 24309  005DF2  C067  FFDA         	movff	memset@p+1,fsr2h
 24310  005DF6  C062  FFDF         	movff	memset@c,indf2
 24311  005DFA  0100               	movlb	0	; () banked
 24312  005DFC  4B66               	infsnz	memset@p& (0+255),f,b
 24313  005DFE  2B67               	incf	(memset@p+1)& (0+255),f,b
 24314  005E00                     l2758:
 24315                           
 24316                           ; BSR set to: 0
 24317  005E00  0100               	movlb	0	; () banked
 24318  005E02  0764               	decf	memset@n& (0+255),f,b
 24319  005E04  A0D8               	btfss	status,0,c
 24320  005E06  0765               	decf	(memset@n+1)& (0+255),f,b
 24321  005E08  2964               	incf	memset@n& (0+255),w,b
 24322  005E0A  E1F1               	bnz	l11563
 24323  005E0C  2965               	incf	(memset@n+1)& (0+255),w,b
 24324  005E0E  B4D8               	btfsc	status,2,c
 24325  005E10  0012               	return	
 24326  005E12  D7ED               	goto	l2759
 24327  005E14                     __end_of_memset:
 24328                           	opt stack 0
 24329                           tblptru	equ	0xFF8
 24330                           tblptrh	equ	0xFF7
 24331                           tblptrl	equ	0xFF6
 24332                           tablat	equ	0xFF5
 24333                           prodh	equ	0xFF4
 24334                           prodl	equ	0xFF3
 24335                           intcon	equ	0xFF2
 24336                           intcon3	equ	0xFF0
 24337                           indf0	equ	0xFEF
 24338                           postinc0	equ	0xFEE
 24339                           fsr0h	equ	0xFEA
 24340                           fsr0l	equ	0xFE9
 24341                           wreg	equ	0xFE8
 24342                           indf1	equ	0xFE7
 24343                           postdec1	equ	0xFE5
 24344                           fsr1h	equ	0xFE2
 24345                           fsr1l	equ	0xFE1
 24346                           indf2	equ	0xFDF
 24347                           postinc2	equ	0xFDE
 24348                           postdec2	equ	0xFDD
 24349                           plusw2	equ	0xFDB
 24350                           fsr2h	equ	0xFDA
 24351                           fsr2l	equ	0xFD9
 24352                           status	equ	0xFD8
 24353                           
 24354 ;; *************** function _USBDeviceAttach *****************
 24355 ;; Defined at:
 24356 ;;		line 1046 in file "../Includes/Usb/Framework/usb_device.c"
 24357 ;; Parameters:    Size  Location     Type
 24358 ;;		None
 24359 ;; Auto vars:     Size  Location     Type
 24360 ;;		None
 24361 ;; Return value:  Size  Location     Type
 24362 ;;                  1    wreg      void 
 24363 ;; Registers used:
 24364 ;;		wreg, status,2
 24365 ;; Tracked objects:
 24366 ;;		On entry : 0/0
 24367 ;;		On exit  : 0/0
 24368 ;;		Unchanged: 0/0
 24369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24370 ;;      Params:         0       0       0       0       0       0       0       0       0
 24371 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24372 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24373 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24374 ;;Total ram usage:        0 bytes
 24375 ;; Hardware stack levels used:    1
 24376 ;; Hardware stack levels required when called:   11
 24377 ;; This function calls:
 24378 ;;		Nothing
 24379 ;; This function is called by:
 24380 ;;		_main
 24381 ;; This function uses a non-reentrant model
 24382 ;;
 24383                           
 24384                           	psect	text94
 24385  005CEA                     __ptext94:
 24386                           	opt stack 0
 24387  005CEA                     _USBDeviceAttach:
 24388                           	opt stack 19
 24389                           
 24390                           ;usb_device.c: 1050: {
 24391                           ;usb_device.c: 1051: if(1 == 1)
 24392                           
 24393                           ; BSR set to: 0
 24394                           ;incstack = 0
 24395  005CEA  0100               	movlb	0	; () banked
 24396  005CEC  51EB               	movf	_USBDeviceState& (0+255),w,b	;volatile
 24397  005CEE  A4D8               	btfss	status,2,c
 24398  005CF0  0012               	return	
 24399                           
 24400                           ; BSR set to: 0
 24401                           ;usb_device.c: 1052: {
 24402                           ;usb_device.c: 1054: UCON = 0;
 24403  005CF2  0E00               	movlw	0
 24404  005CF4  6E60               	movwf	3936,c	;volatile
 24405                           
 24406                           ;usb_device.c: 1057: UIE = 0;
 24407  005CF6  0E00               	movlw	0
 24408  005CF8  6E64               	movwf	3940,c	;volatile
 24409                           
 24410                           ;usb_device.c: 1061: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 24411  005CFA  0E16               	movlw	22
 24412  005CFC  6E62               	movwf	3938,c	;volatile
 24413  005CFE  0E9F               	movlw	159
 24414  005D00  6E66               	movwf	3942,c	;volatile
 24415  005D02  0E7B               	movlw	123
 24416  005D04  6E64               	movwf	3940,c	;volatile
 24417                           
 24418                           ; BSR set to: 0
 24419                           ;usb_device.c: 1063: {RCONbits.IPEN = 1;IPR3bits.USBIP = 1;PIE3bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 24420  005D06  8ED0               	bsf	4048,7,c	;volatile
 24421                           
 24422                           ; BSR set to: 0
 24423  005D08  84A5               	bsf	4005,2,c	;volatile
 24424                           
 24425                           ; BSR set to: 0
 24426  005D0A  84A3               	bsf	4003,2,c	;volatile
 24427                           
 24428                           ; BSR set to: 0
 24429  005D0C  8EF2               	bsf	intcon,7,c	;volatile
 24430                           
 24431                           ;usb_device.c: 1066: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 24432  005D0E  D001               	goto	l1994
 24433  005D10                     l1995:
 24434  005D10  8660               	bsf	3936,3,c	;volatile
 24435  005D12                     l1994:
 24436  005D12  A660               	btfss	3936,3,c	;volatile
 24437  005D14  D7FD               	goto	l1995
 24438                           
 24439                           ;usb_device.c: 1069: USBDeviceState = ATTACHED_STATE;
 24440  005D16  0E01               	movlw	1
 24441  005D18  0100               	movlb	0	; () banked
 24442  005D1A  6FEB               	movwf	_USBDeviceState& (0+255),b	;volatile
 24443                           
 24444                           ; BSR set to: 0
 24445  005D1C  0012               	return	
 24446  005D1E                     __end_of_USBDeviceAttach:
 24447                           	opt stack 0
 24448                           tblptru	equ	0xFF8
 24449                           tblptrh	equ	0xFF7
 24450                           tblptrl	equ	0xFF6
 24451                           tablat	equ	0xFF5
 24452                           prodh	equ	0xFF4
 24453                           prodl	equ	0xFF3
 24454                           intcon	equ	0xFF2
 24455                           intcon3	equ	0xFF0
 24456                           indf0	equ	0xFEF
 24457                           postinc0	equ	0xFEE
 24458                           fsr0h	equ	0xFEA
 24459                           fsr0l	equ	0xFE9
 24460                           wreg	equ	0xFE8
 24461                           indf1	equ	0xFE7
 24462                           postdec1	equ	0xFE5
 24463                           fsr1h	equ	0xFE2
 24464                           fsr1l	equ	0xFE1
 24465                           indf2	equ	0xFDF
 24466                           postinc2	equ	0xFDE
 24467                           postdec2	equ	0xFDD
 24468                           plusw2	equ	0xFDB
 24469                           fsr2h	equ	0xFDA
 24470                           fsr2l	equ	0xFD9
 24471                           status	equ	0xFD8
 24472                           
 24473 ;; *************** function _SYSTEM_Initialize *****************
 24474 ;; Defined at:
 24475 ;;		line 94 in file "../Includes/MccGenerated/mcc.c"
 24476 ;; Parameters:    Size  Location     Type
 24477 ;;		None
 24478 ;; Auto vars:     Size  Location     Type
 24479 ;;		None
 24480 ;; Return value:  Size  Location     Type
 24481 ;;                  1    wreg      void 
 24482 ;; Registers used:
 24483 ;;		wreg, status,2, status,0, cstack
 24484 ;; Tracked objects:
 24485 ;;		On entry : 0/0
 24486 ;;		On exit  : 0/0
 24487 ;;		Unchanged: 0/0
 24488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24489 ;;      Params:         0       0       0       0       0       0       0       0       0
 24490 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24491 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24492 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24493 ;;Total ram usage:        0 bytes
 24494 ;; Hardware stack levels used:    1
 24495 ;; Hardware stack levels required when called:   13
 24496 ;; This function calls:
 24497 ;;		_ADC_Initialize
 24498 ;;		_CMP1_Initialize
 24499 ;;		_EUSART_Initialize
 24500 ;;		_InitSwUart
 24501 ;;		_OSCILLATOR_Initialize
 24502 ;;		_PIN_MANAGER_Initialize
 24503 ;;		_TMR0_Initialize
 24504 ;;		_TMR1_Initialize
 24505 ;;		_TMR2_Initialize
 24506 ;;		_TMR3_Initialize
 24507 ;; This function is called by:
 24508 ;;		_main
 24509 ;; This function uses a non-reentrant model
 24510 ;;
 24511                           
 24512                           	psect	text95
 24513  005F2C                     __ptext95:
 24514                           	opt stack 0
 24515  005F2C                     _SYSTEM_Initialize:
 24516                           	opt stack 17
 24517                           
 24518                           ;mcc.c: 96: OSCILLATOR_Initialize();
 24519                           
 24520                           ; BSR set to: 0
 24521                           ;incstack = 0
 24522  005F2C  ECAE  F030         	call	_OSCILLATOR_Initialize	;wreg free
 24523                           
 24524                           ;mcc.c: 97: PIN_MANAGER_Initialize();
 24525  005F30  ECE1  F02B         	call	_PIN_MANAGER_Initialize	;wreg free
 24526                           
 24527                           ;mcc.c: 99: TMR1_Initialize();
 24528  005F34  ECC1  F02E         	call	_TMR1_Initialize	;wreg free
 24529                           
 24530                           ;mcc.c: 100: TMR2_Initialize();
 24531  005F38  ECE2  F030         	call	_TMR2_Initialize	;wreg free
 24532                           
 24533                           ;mcc.c: 101: TMR3_Initialize();
 24534  005F3C  EC1F  F030         	call	_TMR3_Initialize	;wreg free
 24535                           
 24536                           ;mcc.c: 102: EUSART_Initialize();
 24537  005F40  EC23  F02E         	call	_EUSART_Initialize	;wreg free
 24538                           
 24539                           ;mcc.c: 103: TMR0_Initialize();
 24540  005F44  EC51  F030         	call	_TMR0_Initialize	;wreg free
 24541                           
 24542                           ;mcc.c: 104: ADC_Initialize();
 24543  005F48  EC8B  F030         	call	_ADC_Initialize	;wreg free
 24544                           
 24545                           ;mcc.c: 105: CMP1_Initialize();
 24546  005F4C  ECF5  F030         	call	_CMP1_Initialize	;wreg free
 24547                           
 24548                           ;mcc.c: 107: InitSwUart();
 24549  005F50  EC30  F030         	call	_InitSwUart	;wreg free
 24550  005F54  0012               	return		;funcret
 24551  005F56                     __end_of_SYSTEM_Initialize:
 24552                           	opt stack 0
 24553                           tblptru	equ	0xFF8
 24554                           tblptrh	equ	0xFF7
 24555                           tblptrl	equ	0xFF6
 24556                           tablat	equ	0xFF5
 24557                           prodh	equ	0xFF4
 24558                           prodl	equ	0xFF3
 24559                           intcon	equ	0xFF2
 24560                           intcon3	equ	0xFF0
 24561                           indf0	equ	0xFEF
 24562                           postinc0	equ	0xFEE
 24563                           fsr0h	equ	0xFEA
 24564                           fsr0l	equ	0xFE9
 24565                           wreg	equ	0xFE8
 24566                           indf1	equ	0xFE7
 24567                           postdec1	equ	0xFE5
 24568                           fsr1h	equ	0xFE2
 24569                           fsr1l	equ	0xFE1
 24570                           indf2	equ	0xFDF
 24571                           postinc2	equ	0xFDE
 24572                           postdec2	equ	0xFDD
 24573                           plusw2	equ	0xFDB
 24574                           fsr2h	equ	0xFDA
 24575                           fsr2l	equ	0xFD9
 24576                           status	equ	0xFD8
 24577                           
 24578 ;; *************** function _TMR3_Initialize *****************
 24579 ;; Defined at:
 24580 ;;		line 67 in file "../Includes/MccGenerated/tmr3.c"
 24581 ;; Parameters:    Size  Location     Type
 24582 ;;		None
 24583 ;; Auto vars:     Size  Location     Type
 24584 ;;		None
 24585 ;; Return value:  Size  Location     Type
 24586 ;;                  1    wreg      void 
 24587 ;; Registers used:
 24588 ;;		wreg, status,2, cstack
 24589 ;; Tracked objects:
 24590 ;;		On entry : 0/0
 24591 ;;		On exit  : 0/0
 24592 ;;		Unchanged: 0/0
 24593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24594 ;;      Params:         0       0       0       0       0       0       0       0       0
 24595 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24596 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24597 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24598 ;;Total ram usage:        0 bytes
 24599 ;; Hardware stack levels used:    1
 24600 ;; Hardware stack levels required when called:   12
 24601 ;; This function calls:
 24602 ;;		_TMR3_StartTimer
 24603 ;; This function is called by:
 24604 ;;		_SYSTEM_Initialize
 24605 ;; This function uses a non-reentrant model
 24606 ;;
 24607                           
 24608                           	psect	text96
 24609  00603E                     __ptext96:
 24610                           	opt stack 0
 24611  00603E                     _TMR3_Initialize:
 24612                           	opt stack 17
 24613                           
 24614                           ;tmr3.c: 72: T3CON = 0x04;
 24615                           
 24616                           ;incstack = 0
 24617  00603E  0E04               	movlw	4
 24618  006040  6EB1               	movwf	4017,c	;volatile
 24619                           
 24620                           ;tmr3.c: 75: T3GCON = 0x00;
 24621  006042  0E00               	movlw	0
 24622  006044  6EB4               	movwf	4020,c	;volatile
 24623                           
 24624                           ;tmr3.c: 78: TMR3H = 0xD5;
 24625  006046  0ED5               	movlw	213
 24626  006048  6EB3               	movwf	4019,c	;volatile
 24627                           
 24628                           ;tmr3.c: 81: TMR3L = 0xD0;
 24629  00604A  0ED0               	movlw	208
 24630  00604C  6EB2               	movwf	4018,c	;volatile
 24631                           
 24632                           ;tmr3.c: 84: timer3ReloadVal=TMR3;
 24633  00604E  CFB2 F038          	movff	4018,_timer3ReloadVal	;volatile
 24634  006052  CFB3 F039          	movff	4019,_timer3ReloadVal+1	;volatile
 24635                           
 24636                           ;tmr3.c: 87: PIR2bits.TMR3IF = 0;
 24637  006056  92A1               	bcf	4001,1,c	;volatile
 24638                           
 24639                           ;tmr3.c: 90: PIE2bits.TMR3IE = 1;
 24640  006058  82A0               	bsf	4000,1,c	;volatile
 24641                           
 24642                           ;tmr3.c: 93: TMR3_StartTimer();
 24643  00605A  EC6F  F031         	call	_TMR3_StartTimer	;wreg free
 24644  00605E  0012               	return		;funcret
 24645  006060                     __end_of_TMR3_Initialize:
 24646                           	opt stack 0
 24647                           tblptru	equ	0xFF8
 24648                           tblptrh	equ	0xFF7
 24649                           tblptrl	equ	0xFF6
 24650                           tablat	equ	0xFF5
 24651                           prodh	equ	0xFF4
 24652                           prodl	equ	0xFF3
 24653                           intcon	equ	0xFF2
 24654                           intcon3	equ	0xFF0
 24655                           indf0	equ	0xFEF
 24656                           postinc0	equ	0xFEE
 24657                           fsr0h	equ	0xFEA
 24658                           fsr0l	equ	0xFE9
 24659                           wreg	equ	0xFE8
 24660                           indf1	equ	0xFE7
 24661                           postdec1	equ	0xFE5
 24662                           fsr1h	equ	0xFE2
 24663                           fsr1l	equ	0xFE1
 24664                           indf2	equ	0xFDF
 24665                           postinc2	equ	0xFDE
 24666                           postdec2	equ	0xFDD
 24667                           plusw2	equ	0xFDB
 24668                           fsr2h	equ	0xFDA
 24669                           fsr2l	equ	0xFD9
 24670                           status	equ	0xFD8
 24671                           
 24672 ;; *************** function _TMR3_StartTimer *****************
 24673 ;; Defined at:
 24674 ;;		line 96 in file "../Includes/MccGenerated/tmr3.c"
 24675 ;; Parameters:    Size  Location     Type
 24676 ;;		None
 24677 ;; Auto vars:     Size  Location     Type
 24678 ;;		None
 24679 ;; Return value:  Size  Location     Type
 24680 ;;                  1    wreg      void 
 24681 ;; Registers used:
 24682 ;;		None
 24683 ;; Tracked objects:
 24684 ;;		On entry : 0/0
 24685 ;;		On exit  : 0/0
 24686 ;;		Unchanged: 0/0
 24687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24688 ;;      Params:         0       0       0       0       0       0       0       0       0
 24689 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24690 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24691 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24692 ;;Total ram usage:        0 bytes
 24693 ;; Hardware stack levels used:    1
 24694 ;; Hardware stack levels required when called:   11
 24695 ;; This function calls:
 24696 ;;		Nothing
 24697 ;; This function is called by:
 24698 ;;		_TMR3_Initialize
 24699 ;; This function uses a non-reentrant model
 24700 ;;
 24701                           
 24702                           	psect	text97
 24703  0062DE                     __ptext97:
 24704                           	opt stack 0
 24705  0062DE                     _TMR3_StartTimer:
 24706                           	opt stack 17
 24707                           
 24708                           ;tmr3.c: 99: T3CONbits.TMR3ON = 1;
 24709                           
 24710                           ;incstack = 0
 24711  0062DE  80B1               	bsf	4017,0,c	;volatile
 24712  0062E0  0012               	return		;funcret
 24713  0062E2                     __end_of_TMR3_StartTimer:
 24714                           	opt stack 0
 24715                           tblptru	equ	0xFF8
 24716                           tblptrh	equ	0xFF7
 24717                           tblptrl	equ	0xFF6
 24718                           tablat	equ	0xFF5
 24719                           prodh	equ	0xFF4
 24720                           prodl	equ	0xFF3
 24721                           intcon	equ	0xFF2
 24722                           intcon3	equ	0xFF0
 24723                           indf0	equ	0xFEF
 24724                           postinc0	equ	0xFEE
 24725                           fsr0h	equ	0xFEA
 24726                           fsr0l	equ	0xFE9
 24727                           wreg	equ	0xFE8
 24728                           indf1	equ	0xFE7
 24729                           postdec1	equ	0xFE5
 24730                           fsr1h	equ	0xFE2
 24731                           fsr1l	equ	0xFE1
 24732                           indf2	equ	0xFDF
 24733                           postinc2	equ	0xFDE
 24734                           postdec2	equ	0xFDD
 24735                           plusw2	equ	0xFDB
 24736                           fsr2h	equ	0xFDA
 24737                           fsr2l	equ	0xFD9
 24738                           status	equ	0xFD8
 24739                           
 24740 ;; *************** function _TMR2_Initialize *****************
 24741 ;; Defined at:
 24742 ;;		line 58 in file "../Includes/MccGenerated/tmr2.c"
 24743 ;; Parameters:    Size  Location     Type
 24744 ;;		None
 24745 ;; Auto vars:     Size  Location     Type
 24746 ;;		None
 24747 ;; Return value:  Size  Location     Type
 24748 ;;                  1    wreg      void 
 24749 ;; Registers used:
 24750 ;;		wreg, status,2, cstack
 24751 ;; Tracked objects:
 24752 ;;		On entry : 0/0
 24753 ;;		On exit  : 0/0
 24754 ;;		Unchanged: 0/0
 24755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24756 ;;      Params:         0       0       0       0       0       0       0       0       0
 24757 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24758 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24759 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24760 ;;Total ram usage:        0 bytes
 24761 ;; Hardware stack levels used:    1
 24762 ;; Hardware stack levels required when called:   12
 24763 ;; This function calls:
 24764 ;;		_TMR2_StartTimer
 24765 ;; This function is called by:
 24766 ;;		_SYSTEM_Initialize
 24767 ;; This function uses a non-reentrant model
 24768 ;;
 24769                           
 24770                           	psect	text98
 24771  0061C4                     __ptext98:
 24772                           	opt stack 0
 24773  0061C4                     _TMR2_Initialize:
 24774                           	opt stack 17
 24775                           
 24776                           ;tmr2.c: 62: T2CON = 0x7A;
 24777                           
 24778                           ;incstack = 0
 24779  0061C4  0E7A               	movlw	122
 24780  0061C6  6EBA               	movwf	4026,c	;volatile
 24781                           
 24782                           ;tmr2.c: 65: PR2 = 0x9B;
 24783  0061C8  0E9B               	movlw	155
 24784  0061CA  6EBB               	movwf	4027,c	;volatile
 24785                           
 24786                           ;tmr2.c: 68: TMR2 = 0x00;
 24787  0061CC  0E00               	movlw	0
 24788  0061CE  6EBC               	movwf	4028,c	;volatile
 24789                           
 24790                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
 24791  0061D0  929E               	bcf	3998,1,c	;volatile
 24792                           
 24793                           ;tmr2.c: 74: TMR2_StartTimer();
 24794  0061D2  EC71  F031         	call	_TMR2_StartTimer	;wreg free
 24795  0061D6  0012               	return		;funcret
 24796  0061D8                     __end_of_TMR2_Initialize:
 24797                           	opt stack 0
 24798                           tblptru	equ	0xFF8
 24799                           tblptrh	equ	0xFF7
 24800                           tblptrl	equ	0xFF6
 24801                           tablat	equ	0xFF5
 24802                           prodh	equ	0xFF4
 24803                           prodl	equ	0xFF3
 24804                           intcon	equ	0xFF2
 24805                           intcon3	equ	0xFF0
 24806                           indf0	equ	0xFEF
 24807                           postinc0	equ	0xFEE
 24808                           fsr0h	equ	0xFEA
 24809                           fsr0l	equ	0xFE9
 24810                           wreg	equ	0xFE8
 24811                           indf1	equ	0xFE7
 24812                           postdec1	equ	0xFE5
 24813                           fsr1h	equ	0xFE2
 24814                           fsr1l	equ	0xFE1
 24815                           indf2	equ	0xFDF
 24816                           postinc2	equ	0xFDE
 24817                           postdec2	equ	0xFDD
 24818                           plusw2	equ	0xFDB
 24819                           fsr2h	equ	0xFDA
 24820                           fsr2l	equ	0xFD9
 24821                           status	equ	0xFD8
 24822                           
 24823 ;; *************** function _TMR2_StartTimer *****************
 24824 ;; Defined at:
 24825 ;;		line 77 in file "../Includes/MccGenerated/tmr2.c"
 24826 ;; Parameters:    Size  Location     Type
 24827 ;;		None
 24828 ;; Auto vars:     Size  Location     Type
 24829 ;;		None
 24830 ;; Return value:  Size  Location     Type
 24831 ;;                  1    wreg      void 
 24832 ;; Registers used:
 24833 ;;		None
 24834 ;; Tracked objects:
 24835 ;;		On entry : 0/0
 24836 ;;		On exit  : 0/0
 24837 ;;		Unchanged: 0/0
 24838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24839 ;;      Params:         0       0       0       0       0       0       0       0       0
 24840 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24841 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24842 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24843 ;;Total ram usage:        0 bytes
 24844 ;; Hardware stack levels used:    1
 24845 ;; Hardware stack levels required when called:   11
 24846 ;; This function calls:
 24847 ;;		Nothing
 24848 ;; This function is called by:
 24849 ;;		_TMR2_Initialize
 24850 ;; This function uses a non-reentrant model
 24851 ;;
 24852                           
 24853                           	psect	text99
 24854  0062E2                     __ptext99:
 24855                           	opt stack 0
 24856  0062E2                     _TMR2_StartTimer:
 24857                           	opt stack 17
 24858                           
 24859                           ;tmr2.c: 79: T2CONbits.TMR2ON = 1;
 24860                           
 24861                           ;incstack = 0
 24862  0062E2  84BA               	bsf	4026,2,c	;volatile
 24863  0062E4  0012               	return		;funcret
 24864  0062E6                     __end_of_TMR2_StartTimer:
 24865                           	opt stack 0
 24866                           tblptru	equ	0xFF8
 24867                           tblptrh	equ	0xFF7
 24868                           tblptrl	equ	0xFF6
 24869                           tablat	equ	0xFF5
 24870                           prodh	equ	0xFF4
 24871                           prodl	equ	0xFF3
 24872                           intcon	equ	0xFF2
 24873                           intcon3	equ	0xFF0
 24874                           indf0	equ	0xFEF
 24875                           postinc0	equ	0xFEE
 24876                           fsr0h	equ	0xFEA
 24877                           fsr0l	equ	0xFE9
 24878                           wreg	equ	0xFE8
 24879                           indf1	equ	0xFE7
 24880                           postdec1	equ	0xFE5
 24881                           fsr1h	equ	0xFE2
 24882                           fsr1l	equ	0xFE1
 24883                           indf2	equ	0xFDF
 24884                           postinc2	equ	0xFDE
 24885                           postdec2	equ	0xFDD
 24886                           plusw2	equ	0xFDB
 24887                           fsr2h	equ	0xFDA
 24888                           fsr2l	equ	0xFD9
 24889                           status	equ	0xFD8
 24890                           
 24891 ;; *************** function _TMR1_Initialize *****************
 24892 ;; Defined at:
 24893 ;;		line 63 in file "../Includes/MccGenerated/tmr1.c"
 24894 ;; Parameters:    Size  Location     Type
 24895 ;;		None
 24896 ;; Auto vars:     Size  Location     Type
 24897 ;;		None
 24898 ;; Return value:  Size  Location     Type
 24899 ;;                  1    wreg      void 
 24900 ;; Registers used:
 24901 ;;		wreg, status,2, status,0, cstack
 24902 ;; Tracked objects:
 24903 ;;		On entry : 0/0
 24904 ;;		On exit  : 0/0
 24905 ;;		Unchanged: 0/0
 24906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24907 ;;      Params:         0       0       0       0       0       0       0       0       0
 24908 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24909 ;;      Temps:          0       2       0       0       0       0       0       0       0
 24910 ;;      Totals:         0       2       0       0       0       0       0       0       0
 24911 ;;Total ram usage:        2 bytes
 24912 ;; Hardware stack levels used:    1
 24913 ;; Hardware stack levels required when called:   12
 24914 ;; This function calls:
 24915 ;;		_TMR1_StartTimer
 24916 ;; This function is called by:
 24917 ;;		_SYSTEM_Initialize
 24918 ;; This function uses a non-reentrant model
 24919 ;;
 24920                           
 24921                           	psect	text100
 24922  005D82                     __ptext100:
 24923                           	opt stack 0
 24924  005D82                     _TMR1_Initialize:
 24925                           	opt stack 17
 24926                           
 24927                           ;tmr1.c: 68: T1CON = 0x00;
 24928                           
 24929                           ;incstack = 0
 24930  005D82  0E00               	movlw	0
 24931  005D84  6ECD               	movwf	4045,c	;volatile
 24932                           
 24933                           ;tmr1.c: 71: T1GCON = 0x00;
 24934  005D86  0E00               	movlw	0
 24935  005D88  6ECC               	movwf	4044,c	;volatile
 24936                           
 24937                           ;tmr1.c: 74: TMR1H = 0xD0;
 24938  005D8A  0ED0               	movlw	208
 24939  005D8C  6ECF               	movwf	4047,c	;volatile
 24940                           
 24941                           ;tmr1.c: 77: TMR1L = 0x20;
 24942  005D8E  0E20               	movlw	32
 24943  005D90  6ECE               	movwf	4046,c	;volatile
 24944                           
 24945                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
 24946  005D92  50CE               	movf	4046,w,c	;volatile
 24947  005D94  CFCF F060          	movff	4047,??_TMR1_Initialize	;volatile
 24948  005D98  0100               	movlb	0	; () banked
 24949  005D9A  6B61               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 24950  005D9C  C060  F061         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 24951  005DA0  6B60               	clrf	??_TMR1_Initialize& (0+255),b
 24952  005DA2  1160               	iorwf	??_TMR1_Initialize& (0+255),w,b
 24953  005DA4  6E3A               	movwf	_timer1ReloadVal,c	;volatile
 24954  005DA6  5161               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 24955  005DA8  6E3B               	movwf	_timer1ReloadVal+1,c	;volatile
 24956                           
 24957                           ; BSR set to: 0
 24958                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
 24959  005DAA  909E               	bcf	3998,0,c	;volatile
 24960                           
 24961                           ; BSR set to: 0
 24962                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
 24963  005DAC  809D               	bsf	3997,0,c	;volatile
 24964                           
 24965                           ; BSR set to: 0
 24966                           ;tmr1.c: 89: TMR1_StartTimer();
 24967  005DAE  EC73  F031         	call	_TMR1_StartTimer	;wreg free
 24968  005DB2  0012               	return		;funcret
 24969  005DB4                     __end_of_TMR1_Initialize:
 24970                           	opt stack 0
 24971                           tblptru	equ	0xFF8
 24972                           tblptrh	equ	0xFF7
 24973                           tblptrl	equ	0xFF6
 24974                           tablat	equ	0xFF5
 24975                           prodh	equ	0xFF4
 24976                           prodl	equ	0xFF3
 24977                           intcon	equ	0xFF2
 24978                           intcon3	equ	0xFF0
 24979                           indf0	equ	0xFEF
 24980                           postinc0	equ	0xFEE
 24981                           fsr0h	equ	0xFEA
 24982                           fsr0l	equ	0xFE9
 24983                           wreg	equ	0xFE8
 24984                           indf1	equ	0xFE7
 24985                           postdec1	equ	0xFE5
 24986                           fsr1h	equ	0xFE2
 24987                           fsr1l	equ	0xFE1
 24988                           indf2	equ	0xFDF
 24989                           postinc2	equ	0xFDE
 24990                           postdec2	equ	0xFDD
 24991                           plusw2	equ	0xFDB
 24992                           fsr2h	equ	0xFDA
 24993                           fsr2l	equ	0xFD9
 24994                           status	equ	0xFD8
 24995                           
 24996 ;; *************** function _TMR1_StartTimer *****************
 24997 ;; Defined at:
 24998 ;;		line 92 in file "../Includes/MccGenerated/tmr1.c"
 24999 ;; Parameters:    Size  Location     Type
 25000 ;;		None
 25001 ;; Auto vars:     Size  Location     Type
 25002 ;;		None
 25003 ;; Return value:  Size  Location     Type
 25004 ;;                  1    wreg      void 
 25005 ;; Registers used:
 25006 ;;		None
 25007 ;; Tracked objects:
 25008 ;;		On entry : 0/0
 25009 ;;		On exit  : 0/0
 25010 ;;		Unchanged: 0/0
 25011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25012 ;;      Params:         0       0       0       0       0       0       0       0       0
 25013 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25014 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25015 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25016 ;;Total ram usage:        0 bytes
 25017 ;; Hardware stack levels used:    1
 25018 ;; Hardware stack levels required when called:   11
 25019 ;; This function calls:
 25020 ;;		Nothing
 25021 ;; This function is called by:
 25022 ;;		_TMR1_Initialize
 25023 ;; This function uses a non-reentrant model
 25024 ;;
 25025                           
 25026                           	psect	text101
 25027  0062E6                     __ptext101:
 25028                           	opt stack 0
 25029  0062E6                     _TMR1_StartTimer:
 25030                           	opt stack 17
 25031                           
 25032                           ;tmr1.c: 95: T1CONbits.TMR1ON = 1;
 25033                           
 25034                           ;incstack = 0
 25035  0062E6  80CD               	bsf	4045,0,c	;volatile
 25036  0062E8  0012               	return		;funcret
 25037  0062EA                     __end_of_TMR1_StartTimer:
 25038                           	opt stack 0
 25039                           tblptru	equ	0xFF8
 25040                           tblptrh	equ	0xFF7
 25041                           tblptrl	equ	0xFF6
 25042                           tablat	equ	0xFF5
 25043                           prodh	equ	0xFF4
 25044                           prodl	equ	0xFF3
 25045                           intcon	equ	0xFF2
 25046                           intcon3	equ	0xFF0
 25047                           indf0	equ	0xFEF
 25048                           postinc0	equ	0xFEE
 25049                           fsr0h	equ	0xFEA
 25050                           fsr0l	equ	0xFE9
 25051                           wreg	equ	0xFE8
 25052                           indf1	equ	0xFE7
 25053                           postdec1	equ	0xFE5
 25054                           fsr1h	equ	0xFE2
 25055                           fsr1l	equ	0xFE1
 25056                           indf2	equ	0xFDF
 25057                           postinc2	equ	0xFDE
 25058                           postdec2	equ	0xFDD
 25059                           plusw2	equ	0xFDB
 25060                           fsr2h	equ	0xFDA
 25061                           fsr2l	equ	0xFD9
 25062                           status	equ	0xFD8
 25063                           
 25064 ;; *************** function _TMR0_Initialize *****************
 25065 ;; Defined at:
 25066 ;;		line 63 in file "../Includes/MccGenerated/tmr0.c"
 25067 ;; Parameters:    Size  Location     Type
 25068 ;;		None
 25069 ;; Auto vars:     Size  Location     Type
 25070 ;;		None
 25071 ;; Return value:  Size  Location     Type
 25072 ;;                  1    wreg      void 
 25073 ;; Registers used:
 25074 ;;		wreg, status,2, cstack
 25075 ;; Tracked objects:
 25076 ;;		On entry : 0/0
 25077 ;;		On exit  : 0/0
 25078 ;;		Unchanged: 0/0
 25079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25080 ;;      Params:         0       0       0       0       0       0       0       0       0
 25081 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25082 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25083 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25084 ;;Total ram usage:        0 bytes
 25085 ;; Hardware stack levels used:    1
 25086 ;; Hardware stack levels required when called:   12
 25087 ;; This function calls:
 25088 ;;		_TMR0_StartTimer
 25089 ;; This function is called by:
 25090 ;;		_SYSTEM_Initialize
 25091 ;; This function uses a non-reentrant model
 25092 ;;
 25093                           
 25094                           	psect	text102
 25095  0060A2                     __ptext102:
 25096                           	opt stack 0
 25097  0060A2                     _TMR0_Initialize:
 25098                           	opt stack 17
 25099                           
 25100                           ;tmr0.c: 67: T0CONbits.T0CS = 0;
 25101                           
 25102                           ;incstack = 0
 25103  0060A2  9AD5               	bcf	4053,5,c	;volatile
 25104                           
 25105                           ;tmr0.c: 68: T0CONbits.T0SE = 0;
 25106  0060A4  98D5               	bcf	4053,4,c	;volatile
 25107                           
 25108                           ;tmr0.c: 69: T0CONbits.PSA = 0;
 25109  0060A6  96D5               	bcf	4053,3,c	;volatile
 25110                           
 25111                           ;tmr0.c: 70: T0CONbits.T0PS2 = 0;
 25112  0060A8  94D5               	bcf	4053,2,c	;volatile
 25113                           
 25114                           ;tmr0.c: 71: T0CONbits.T0PS1 = 1;
 25115  0060AA  82D5               	bsf	4053,1,c	;volatile
 25116                           
 25117                           ;tmr0.c: 72: T0CONbits.T0PS0 = 0;
 25118  0060AC  90D5               	bcf	4053,0,c	;volatile
 25119                           
 25120                           ;tmr0.c: 77: timer0ReloadVal=110;
 25121  0060AE  0E00               	movlw	0
 25122  0060B0  0101               	movlb	1	; () banked
 25123  0060B2  6F57               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
 25124  0060B4  0E6E               	movlw	110
 25125  0060B6  6F56               	movwf	_timer0ReloadVal& (0+255),b	;volatile
 25126                           
 25127                           ; BSR set to: 1
 25128                           ;tmr0.c: 80: INTCONbits.TMR0IF = 0;
 25129  0060B8  94F2               	bcf	intcon,2,c	;volatile
 25130                           
 25131                           ; BSR set to: 1
 25132                           ;tmr0.c: 83: INTCONbits.TMR0IE = 1;
 25133  0060BA  8AF2               	bsf	intcon,5,c	;volatile
 25134                           
 25135                           ; BSR set to: 1
 25136                           ;tmr0.c: 86: TMR0_StartTimer();
 25137  0060BC  EC75  F031         	call	_TMR0_StartTimer	;wreg free
 25138  0060C0  0012               	return		;funcret
 25139  0060C2                     __end_of_TMR0_Initialize:
 25140                           	opt stack 0
 25141                           tblptru	equ	0xFF8
 25142                           tblptrh	equ	0xFF7
 25143                           tblptrl	equ	0xFF6
 25144                           tablat	equ	0xFF5
 25145                           prodh	equ	0xFF4
 25146                           prodl	equ	0xFF3
 25147                           intcon	equ	0xFF2
 25148                           intcon3	equ	0xFF0
 25149                           indf0	equ	0xFEF
 25150                           postinc0	equ	0xFEE
 25151                           fsr0h	equ	0xFEA
 25152                           fsr0l	equ	0xFE9
 25153                           wreg	equ	0xFE8
 25154                           indf1	equ	0xFE7
 25155                           postdec1	equ	0xFE5
 25156                           fsr1h	equ	0xFE2
 25157                           fsr1l	equ	0xFE1
 25158                           indf2	equ	0xFDF
 25159                           postinc2	equ	0xFDE
 25160                           postdec2	equ	0xFDD
 25161                           plusw2	equ	0xFDB
 25162                           fsr2h	equ	0xFDA
 25163                           fsr2l	equ	0xFD9
 25164                           status	equ	0xFD8
 25165                           
 25166 ;; *************** function _TMR0_StartTimer *****************
 25167 ;; Defined at:
 25168 ;;		line 89 in file "../Includes/MccGenerated/tmr0.c"
 25169 ;; Parameters:    Size  Location     Type
 25170 ;;		None
 25171 ;; Auto vars:     Size  Location     Type
 25172 ;;		None
 25173 ;; Return value:  Size  Location     Type
 25174 ;;                  1    wreg      void 
 25175 ;; Registers used:
 25176 ;;		None
 25177 ;; Tracked objects:
 25178 ;;		On entry : 0/0
 25179 ;;		On exit  : 0/0
 25180 ;;		Unchanged: 0/0
 25181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25182 ;;      Params:         0       0       0       0       0       0       0       0       0
 25183 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25184 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25185 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25186 ;;Total ram usage:        0 bytes
 25187 ;; Hardware stack levels used:    1
 25188 ;; Hardware stack levels required when called:   11
 25189 ;; This function calls:
 25190 ;;		Nothing
 25191 ;; This function is called by:
 25192 ;;		_TMR0_Initialize
 25193 ;; This function uses a non-reentrant model
 25194 ;;
 25195                           
 25196                           	psect	text103
 25197  0062EA                     __ptext103:
 25198                           	opt stack 0
 25199  0062EA                     _TMR0_StartTimer:
 25200                           	opt stack 17
 25201                           
 25202                           ;tmr0.c: 92: T0CONbits.TMR0ON = 1;
 25203                           
 25204                           ;incstack = 0
 25205  0062EA  8ED5               	bsf	4053,7,c	;volatile
 25206  0062EC  0012               	return		;funcret
 25207  0062EE                     __end_of_TMR0_StartTimer:
 25208                           	opt stack 0
 25209                           tblptru	equ	0xFF8
 25210                           tblptrh	equ	0xFF7
 25211                           tblptrl	equ	0xFF6
 25212                           tablat	equ	0xFF5
 25213                           prodh	equ	0xFF4
 25214                           prodl	equ	0xFF3
 25215                           intcon	equ	0xFF2
 25216                           intcon3	equ	0xFF0
 25217                           indf0	equ	0xFEF
 25218                           postinc0	equ	0xFEE
 25219                           fsr0h	equ	0xFEA
 25220                           fsr0l	equ	0xFE9
 25221                           wreg	equ	0xFE8
 25222                           indf1	equ	0xFE7
 25223                           postdec1	equ	0xFE5
 25224                           fsr1h	equ	0xFE2
 25225                           fsr1l	equ	0xFE1
 25226                           indf2	equ	0xFDF
 25227                           postinc2	equ	0xFDE
 25228                           postdec2	equ	0xFDD
 25229                           plusw2	equ	0xFDB
 25230                           fsr2h	equ	0xFDA
 25231                           fsr2l	equ	0xFD9
 25232                           status	equ	0xFD8
 25233                           
 25234 ;; *************** function _PIN_MANAGER_Initialize *****************
 25235 ;; Defined at:
 25236 ;;		line 51 in file "../Includes/MccGenerated/pin_manager.c"
 25237 ;; Parameters:    Size  Location     Type
 25238 ;;		None
 25239 ;; Auto vars:     Size  Location     Type
 25240 ;;		None
 25241 ;; Return value:  Size  Location     Type
 25242 ;;                  1    wreg      void 
 25243 ;; Registers used:
 25244 ;;		wreg, status,2
 25245 ;; Tracked objects:
 25246 ;;		On entry : 0/0
 25247 ;;		On exit  : 0/0
 25248 ;;		Unchanged: 0/0
 25249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25250 ;;      Params:         0       0       0       0       0       0       0       0       0
 25251 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25252 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25253 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25254 ;;Total ram usage:        0 bytes
 25255 ;; Hardware stack levels used:    1
 25256 ;; Hardware stack levels required when called:   11
 25257 ;; This function calls:
 25258 ;;		Nothing
 25259 ;; This function is called by:
 25260 ;;		_moteApp_GoToSleep
 25261 ;;		_SYSTEM_Initialize
 25262 ;; This function uses a non-reentrant model
 25263 ;;
 25264                           
 25265                           	psect	text104
 25266  0057C2                     __ptext104:
 25267                           	opt stack 0
 25268  0057C2                     _PIN_MANAGER_Initialize:
 25269                           	opt stack 16
 25270                           
 25271                           ;pin_manager.c: 55: TRISAbits.TRISA0 = 1;
 25272                           
 25273                           ;incstack = 0
 25274  0057C2  8092               	bsf	3986,0,c	;volatile
 25275                           
 25276                           ;pin_manager.c: 56: TRISAbits.TRISA1 = 1;
 25277  0057C4  8292               	bsf	3986,1,c	;volatile
 25278                           
 25279                           ;pin_manager.c: 57: TRISAbits.TRISA2 = 1;
 25280  0057C6  8492               	bsf	3986,2,c	;volatile
 25281                           
 25282                           ;pin_manager.c: 58: TRISAbits.TRISA3 = 1;
 25283  0057C8  8692               	bsf	3986,3,c	;volatile
 25284                           
 25285                           ;pin_manager.c: 60: LATEbits.LATE2 = 0;
 25286  0057CA  948D               	bcf	3981,2,c	;volatile
 25287                           
 25288                           ;pin_manager.c: 61: TRISEbits.TRISE2 = 0;
 25289  0057CC  9496               	bcf	3990,2,c	;volatile
 25290                           
 25291                           ;pin_manager.c: 62: TRISAbits.TRISA5 = 0;
 25292  0057CE  9A92               	bcf	3986,5,c	;volatile
 25293                           
 25294                           ;pin_manager.c: 63: TRISAbits.TRISA6 = 0;
 25295  0057D0  9C92               	bcf	3986,6,c	;volatile
 25296                           
 25297                           ;pin_manager.c: 64: TRISAbits.TRISA7 = 0;
 25298  0057D2  9E92               	bcf	3986,7,c	;volatile
 25299                           
 25300                           ;pin_manager.c: 66: INTCON2bits.nRBPU = 0;
 25301  0057D4  9EF1               	bcf	intcon2,7,c	;volatile
 25302                           
 25303                           ;pin_manager.c: 67: IOCBbits.IOCB7 = 1;
 25304  0057D6  8E86               	bsf	3974,7,c	;volatile
 25305                           
 25306                           ;pin_manager.c: 68: INTCONbits.IOCIE = 1;
 25307  0057D8  86F2               	bsf	intcon,3,c	;volatile
 25308                           
 25309                           ;pin_manager.c: 69: TRISBbits.TRISB1 = 1;
 25310  0057DA  8293               	bsf	3987,1,c	;volatile
 25311                           
 25312                           ;pin_manager.c: 70: TRISBbits.TRISB0 = 1;
 25313  0057DC  8093               	bsf	3987,0,c	;volatile
 25314                           
 25315                           ;pin_manager.c: 71: TRISBbits.TRISB7 = 1;
 25316  0057DE  8E93               	bsf	3987,7,c	;volatile
 25317                           
 25318                           ;pin_manager.c: 72: TRISBbits.TRISB2 = 0;
 25319  0057E0  9493               	bcf	3987,2,c	;volatile
 25320                           
 25321                           ;pin_manager.c: 73: TRISBbits.TRISB3 = 0;
 25322  0057E2  9693               	bcf	3987,3,c	;volatile
 25323                           
 25324                           ;pin_manager.c: 74: TRISBbits.TRISB4 = 0;
 25325  0057E4  9893               	bcf	3987,4,c	;volatile
 25326                           
 25327                           ;pin_manager.c: 75: TRISBbits.TRISB5 = 0;
 25328  0057E6  9A93               	bcf	3987,5,c	;volatile
 25329                           
 25330                           ;pin_manager.c: 77: TRISCbits.TRISC0 = 0;
 25331  0057E8  9094               	bcf	3988,0,c	;volatile
 25332                           
 25333                           ;pin_manager.c: 78: TRISCbits.TRISC1 = 0;
 25334  0057EA  9294               	bcf	3988,1,c	;volatile
 25335                           
 25336                           ;pin_manager.c: 79: TRISCbits.TRISC2 = 1;
 25337  0057EC  8494               	bsf	3988,2,c	;volatile
 25338                           
 25339                           ;pin_manager.c: 80: TRISCbits.TRISC6 = 0;
 25340  0057EE  9C94               	bcf	3988,6,c	;volatile
 25341                           
 25342                           ;pin_manager.c: 81: TRISCbits.TRISC7 = 1;
 25343  0057F0  8E94               	bsf	3988,7,c	;volatile
 25344                           
 25345                           ;pin_manager.c: 83: TRISD = 0b00000000;
 25346  0057F2  0E00               	movlw	0
 25347  0057F4  6E95               	movwf	3989,c	;volatile
 25348                           
 25349                           ;pin_manager.c: 85: TRISEbits.TRISE2 = 0;
 25350  0057F6  9496               	bcf	3990,2,c	;volatile
 25351                           
 25352                           ;pin_manager.c: 88: LATAbits.LATA5 = 0;
 25353  0057F8  9A89               	bcf	3977,5,c	;volatile
 25354                           
 25355                           ;pin_manager.c: 89: LATAbits.LATA6 = 0;
 25356  0057FA  9C89               	bcf	3977,6,c	;volatile
 25357                           
 25358                           ;pin_manager.c: 90: LATAbits.LATA7 = 0;
 25359  0057FC  9E89               	bcf	3977,7,c	;volatile
 25360                           
 25361                           ;pin_manager.c: 92: LATBbits.LATB2 = 0;
 25362  0057FE  948A               	bcf	3978,2,c	;volatile
 25363                           
 25364                           ;pin_manager.c: 94: LATCbits.LATC2 = 0;
 25365  005800  948B               	bcf	3979,2,c	;volatile
 25366                           
 25367                           ;pin_manager.c: 95: LATCbits.LATC6 = 0;
 25368  005802  9C8B               	bcf	3979,6,c	;volatile
 25369                           
 25370                           ;pin_manager.c: 97: LATEbits.LATE2 = 1;
 25371  005804  848D               	bsf	3981,2,c	;volatile
 25372                           
 25373                           ;pin_manager.c: 99: ANSELAbits.ANSA0 = 0;
 25374  005806  010F               	movlb	15	; () banked
 25375  005808  915B               	bcf	91,0,b	;volatile
 25376                           
 25377                           ; BSR set to: 15
 25378                           ;pin_manager.c: 100: ANSELAbits.ANSA1 = 1;
 25379  00580A  835B               	bsf	91,1,b	;volatile
 25380                           
 25381                           ; BSR set to: 15
 25382                           ;pin_manager.c: 101: ANSELAbits.ANSA2 = 1;
 25383  00580C  855B               	bsf	91,2,b	;volatile
 25384                           
 25385                           ; BSR set to: 15
 25386                           ;pin_manager.c: 102: ANSELAbits.ANSA3 = 1;
 25387  00580E  875B               	bsf	91,3,b	;volatile
 25388                           
 25389                           ; BSR set to: 15
 25390                           ;pin_manager.c: 103: ANSELCbits.ANSC7 = 0;
 25391  005810  9F5D               	bcf	93,7,b	;volatile
 25392                           
 25393                           ; BSR set to: 15
 25394                           ;pin_manager.c: 104: ANSELCbits.ANSC6 = 0;
 25395  005812  9D5D               	bcf	93,6,b	;volatile
 25396                           
 25397                           ; BSR set to: 15
 25398  005814  0012               	return		;funcret
 25399  005816                     __end_of_PIN_MANAGER_Initialize:
 25400                           	opt stack 0
 25401                           tblptru	equ	0xFF8
 25402                           tblptrh	equ	0xFF7
 25403                           tblptrl	equ	0xFF6
 25404                           tablat	equ	0xFF5
 25405                           prodh	equ	0xFF4
 25406                           prodl	equ	0xFF3
 25407                           intcon	equ	0xFF2
 25408                           intcon2	equ	0xFF1
 25409                           intcon3	equ	0xFF0
 25410                           indf0	equ	0xFEF
 25411                           postinc0	equ	0xFEE
 25412                           fsr0h	equ	0xFEA
 25413                           fsr0l	equ	0xFE9
 25414                           wreg	equ	0xFE8
 25415                           indf1	equ	0xFE7
 25416                           postdec1	equ	0xFE5
 25417                           fsr1h	equ	0xFE2
 25418                           fsr1l	equ	0xFE1
 25419                           indf2	equ	0xFDF
 25420                           postinc2	equ	0xFDE
 25421                           postdec2	equ	0xFDD
 25422                           plusw2	equ	0xFDB
 25423                           fsr2h	equ	0xFDA
 25424                           fsr2l	equ	0xFD9
 25425                           status	equ	0xFD8
 25426                           
 25427 ;; *************** function _OSCILLATOR_Initialize *****************
 25428 ;; Defined at:
 25429 ;;		line 111 in file "../Includes/MccGenerated/mcc.c"
 25430 ;; Parameters:    Size  Location     Type
 25431 ;;		None
 25432 ;; Auto vars:     Size  Location     Type
 25433 ;;		None
 25434 ;; Return value:  Size  Location     Type
 25435 ;;                  1    wreg      void 
 25436 ;; Registers used:
 25437 ;;		wreg, status,2
 25438 ;; Tracked objects:
 25439 ;;		On entry : 0/0
 25440 ;;		On exit  : 0/0
 25441 ;;		Unchanged: 0/0
 25442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25443 ;;      Params:         0       0       0       0       0       0       0       0       0
 25444 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25445 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25446 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25447 ;;Total ram usage:        0 bytes
 25448 ;; Hardware stack levels used:    1
 25449 ;; Hardware stack levels required when called:   11
 25450 ;; This function calls:
 25451 ;;		Nothing
 25452 ;; This function is called by:
 25453 ;;		_SYSTEM_Initialize
 25454 ;; This function uses a non-reentrant model
 25455 ;;
 25456                           
 25457                           	psect	text105
 25458  00615C                     __ptext105:
 25459                           	opt stack 0
 25460  00615C                     _OSCILLATOR_Initialize:
 25461                           	opt stack 18
 25462                           
 25463                           ;mcc.c: 113: OSCTUNE = 0x80;
 25464                           
 25465                           ; BSR set to: 15
 25466                           ;incstack = 0
 25467  00615C  0E80               	movlw	128
 25468  00615E  6E9B               	movwf	3995,c	;volatile
 25469                           
 25470                           ;mcc.c: 114: OSCCON = 0x70;
 25471  006160  0E70               	movlw	112
 25472  006162  6ED3               	movwf	4051,c	;volatile
 25473                           
 25474                           ;mcc.c: 115: OSCCON2 = 0x10;
 25475  006164  0E10               	movlw	16
 25476  006166  6ED2               	movwf	4050,c	;volatile
 25477  006168  AED2               	btfss	4050,7,c	;volatile
 25478  00616A  D7FE               	goto	l1411
 25479                           
 25480                           ;mcc.c: 117: ACTCON = 0x90;
 25481  00616C  0E90               	movlw	144
 25482  00616E  6EB5               	movwf	4021,c	;volatile
 25483  006170  0012               	return		;funcret
 25484  006172                     __end_of_OSCILLATOR_Initialize:
 25485                           	opt stack 0
 25486                           tblptru	equ	0xFF8
 25487                           tblptrh	equ	0xFF7
 25488                           tblptrl	equ	0xFF6
 25489                           tablat	equ	0xFF5
 25490                           prodh	equ	0xFF4
 25491                           prodl	equ	0xFF3
 25492                           intcon	equ	0xFF2
 25493                           intcon2	equ	0xFF1
 25494                           intcon3	equ	0xFF0
 25495                           indf0	equ	0xFEF
 25496                           postinc0	equ	0xFEE
 25497                           fsr0h	equ	0xFEA
 25498                           fsr0l	equ	0xFE9
 25499                           wreg	equ	0xFE8
 25500                           indf1	equ	0xFE7
 25501                           postdec1	equ	0xFE5
 25502                           fsr1h	equ	0xFE2
 25503                           fsr1l	equ	0xFE1
 25504                           indf2	equ	0xFDF
 25505                           postinc2	equ	0xFDE
 25506                           postdec2	equ	0xFDD
 25507                           plusw2	equ	0xFDB
 25508                           fsr2h	equ	0xFDA
 25509                           fsr2l	equ	0xFD9
 25510                           status	equ	0xFD8
 25511                           
 25512 ;; *************** function _InitSwUart *****************
 25513 ;; Defined at:
 25514 ;;		line 82 in file "../Includes/Drivers/swUart.c"
 25515 ;; Parameters:    Size  Location     Type
 25516 ;;		None
 25517 ;; Auto vars:     Size  Location     Type
 25518 ;;		None
 25519 ;; Return value:  Size  Location     Type
 25520 ;;                  1    wreg      void 
 25521 ;; Registers used:
 25522 ;;		wreg, status,2
 25523 ;; Tracked objects:
 25524 ;;		On entry : 0/0
 25525 ;;		On exit  : 0/0
 25526 ;;		Unchanged: 0/0
 25527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25528 ;;      Params:         0       0       0       0       0       0       0       0       0
 25529 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25530 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25531 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25532 ;;Total ram usage:        0 bytes
 25533 ;; Hardware stack levels used:    1
 25534 ;; Hardware stack levels required when called:   11
 25535 ;; This function calls:
 25536 ;;		Nothing
 25537 ;; This function is called by:
 25538 ;;		_SYSTEM_Initialize
 25539 ;; This function uses a non-reentrant model
 25540 ;;
 25541                           
 25542                           	psect	text106
 25543  006060                     __ptext106:
 25544                           	opt stack 0
 25545  006060                     _InitSwUart:
 25546                           	opt stack 18
 25547                           
 25548                           ;swUart.c: 84: status = SILENT;
 25549                           
 25550                           ;incstack = 0
 25551  006060  0E00               	movlw	0
 25552  006062  6E4F               	movwf	_status,c
 25553                           
 25554                           ;swUart.c: 85: n_bit = 0;
 25555  006064  0E00               	movlw	0
 25556  006066  6E5B               	movwf	_n_bit,c
 25557                           
 25558                           ;swUart.c: 86: rx_data = 0;
 25559  006068  0E00               	movlw	0
 25560  00606A  6E4E               	movwf	_rx_data,c
 25561                           
 25562                           ;swUart.c: 87: cs = 0;
 25563  00606C  0E00               	movlw	0
 25564  00606E  0101               	movlb	1	; () banked
 25565  006070  6F5E               	movwf	_cs& (0+255),b
 25566                           
 25567                           ;swUart.c: 88: countBitsSilent = 0;
 25568  006072  0E00               	movlw	0
 25569  006074  6E4D               	movwf	_countBitsSilent,c
 25570                           
 25571                           ;swUart.c: 90: countOut = 0;
 25572  006076  0E00               	movlw	0
 25573  006078  0100               	movlb	0	; () banked
 25574  00607A  6FE4               	movwf	_countOut& (0+255),b
 25575                           
 25576                           ;swUart.c: 91: countIn = 0;
 25577  00607C  0E00               	movlw	0
 25578  00607E  6FE3               	movwf	_countIn& (0+255),b
 25579                           
 25580                           ; BSR set to: 0
 25581  006080  0012               	return		;funcret
 25582  006082                     __end_of_InitSwUart:
 25583                           	opt stack 0
 25584                           tblptru	equ	0xFF8
 25585                           tblptrh	equ	0xFF7
 25586                           tblptrl	equ	0xFF6
 25587                           tablat	equ	0xFF5
 25588                           prodh	equ	0xFF4
 25589                           prodl	equ	0xFF3
 25590                           intcon	equ	0xFF2
 25591                           intcon2	equ	0xFF1
 25592                           intcon3	equ	0xFF0
 25593                           indf0	equ	0xFEF
 25594                           postinc0	equ	0xFEE
 25595                           fsr0h	equ	0xFEA
 25596                           fsr0l	equ	0xFE9
 25597                           wreg	equ	0xFE8
 25598                           indf1	equ	0xFE7
 25599                           postdec1	equ	0xFE5
 25600                           fsr1h	equ	0xFE2
 25601                           fsr1l	equ	0xFE1
 25602                           indf2	equ	0xFDF
 25603                           postinc2	equ	0xFDE
 25604                           postdec2	equ	0xFDD
 25605                           plusw2	equ	0xFDB
 25606                           fsr2h	equ	0xFDA
 25607                           fsr2l	equ	0xFD9
 25608                           status	equ	0xFD8
 25609                           
 25610 ;; *************** function _EUSART_Initialize *****************
 25611 ;; Defined at:
 25612 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 25613 ;; Parameters:    Size  Location     Type
 25614 ;;		None
 25615 ;; Auto vars:     Size  Location     Type
 25616 ;;		None
 25617 ;; Return value:  Size  Location     Type
 25618 ;;                  1    wreg      void 
 25619 ;; Registers used:
 25620 ;;		wreg, status,2
 25621 ;; Tracked objects:
 25622 ;;		On entry : 0/0
 25623 ;;		On exit  : 0/0
 25624 ;;		Unchanged: 0/0
 25625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25626 ;;      Params:         0       0       0       0       0       0       0       0       0
 25627 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25628 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25629 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25630 ;;Total ram usage:        0 bytes
 25631 ;; Hardware stack levels used:    1
 25632 ;; Hardware stack levels required when called:   11
 25633 ;; This function calls:
 25634 ;;		Nothing
 25635 ;; This function is called by:
 25636 ;;		_SYSTEM_Initialize
 25637 ;; This function uses a non-reentrant model
 25638 ;;
 25639                           
 25640                           	psect	text107
 25641  005C46                     __ptext107:
 25642                           	opt stack 0
 25643  005C46                     _EUSART_Initialize:
 25644                           	opt stack 18
 25645                           
 25646                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 25647                           
 25648                           ; BSR set to: 0
 25649                           ;incstack = 0
 25650  005C46  9A9D               	bcf	3997,5,c	;volatile
 25651                           
 25652                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 25653  005C48  989D               	bcf	3997,4,c	;volatile
 25654                           
 25655                           ;eusart.c: 85: BAUDCON = 0x48;
 25656  005C4A  0E48               	movlw	72
 25657  005C4C  6EB8               	movwf	4024,c	;volatile
 25658                           
 25659                           ;eusart.c: 88: RCSTA = 0x90;
 25660  005C4E  0E90               	movlw	144
 25661  005C50  6EAB               	movwf	4011,c	;volatile
 25662                           
 25663                           ;eusart.c: 91: TXSTA = 0x26;
 25664  005C52  0E26               	movlw	38
 25665  005C54  6EAC               	movwf	4012,c	;volatile
 25666                           
 25667                           ;eusart.c: 95: SPBRG = 0xD0;
 25668  005C56  0ED0               	movlw	208
 25669  005C58  6EAF               	movwf	4015,c	;volatile
 25670                           
 25671                           ;eusart.c: 100: SPBRGH = 0x00;
 25672  005C5A  0E00               	movlw	0
 25673  005C5C  6EB0               	movwf	4016,c	;volatile
 25674                           
 25675                           ;eusart.c: 103: eusartTxHead = 0;
 25676  005C5E  0E00               	movlw	0
 25677  005C60  0100               	movlb	0	; () banked
 25678  005C62  6FE2               	movwf	_eusartTxHead& (0+255),b
 25679                           
 25680                           ;eusart.c: 104: eusartTxTail = 0;
 25681  005C64  0E00               	movlw	0
 25682  005C66  6FE1               	movwf	_eusartTxTail& (0+255),b
 25683                           
 25684                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 25685  005C68  0E40               	movlw	64
 25686  005C6A  6FE0               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
 25687                           
 25688                           ;eusart.c: 107: eusartRxHead = 0;
 25689  005C6C  0E00               	movlw	0
 25690  005C6E  6FDF               	movwf	_eusartRxHead& (0+255),b
 25691                           
 25692                           ;eusart.c: 108: eusartRxTail = 0;
 25693  005C70  0E00               	movlw	0
 25694  005C72  6FDE               	movwf	_eusartRxTail& (0+255),b
 25695                           
 25696                           ;eusart.c: 109: eusartRxCount = 0;
 25697  005C74  0E00               	movlw	0
 25698  005C76  6FF5               	movwf	_eusartRxCount& (0+255),b	;volatile
 25699                           
 25700                           ; BSR set to: 0
 25701                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 25702  005C78  8A9D               	bsf	3997,5,c	;volatile
 25703                           
 25704                           ; BSR set to: 0
 25705                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 25706  005C7A  88AB               	bsf	4011,4,c	;volatile
 25707                           
 25708                           ; BSR set to: 0
 25709  005C7C  0012               	return		;funcret
 25710  005C7E                     __end_of_EUSART_Initialize:
 25711                           	opt stack 0
 25712                           tblptru	equ	0xFF8
 25713                           tblptrh	equ	0xFF7
 25714                           tblptrl	equ	0xFF6
 25715                           tablat	equ	0xFF5
 25716                           prodh	equ	0xFF4
 25717                           prodl	equ	0xFF3
 25718                           intcon	equ	0xFF2
 25719                           intcon2	equ	0xFF1
 25720                           intcon3	equ	0xFF0
 25721                           indf0	equ	0xFEF
 25722                           postinc0	equ	0xFEE
 25723                           fsr0h	equ	0xFEA
 25724                           fsr0l	equ	0xFE9
 25725                           wreg	equ	0xFE8
 25726                           indf1	equ	0xFE7
 25727                           postdec1	equ	0xFE5
 25728                           fsr1h	equ	0xFE2
 25729                           fsr1l	equ	0xFE1
 25730                           indf2	equ	0xFDF
 25731                           postinc2	equ	0xFDE
 25732                           postdec2	equ	0xFDD
 25733                           plusw2	equ	0xFDB
 25734                           fsr2h	equ	0xFDA
 25735                           fsr2l	equ	0xFD9
 25736                           status	equ	0xFD8
 25737                           
 25738 ;; *************** function _CMP1_Initialize *****************
 25739 ;; Defined at:
 25740 ;;		line 58 in file "../Includes/MccGenerated/cmp1.c"
 25741 ;; Parameters:    Size  Location     Type
 25742 ;;		None
 25743 ;; Auto vars:     Size  Location     Type
 25744 ;;		None
 25745 ;; Return value:  Size  Location     Type
 25746 ;;                  1    wreg      void 
 25747 ;; Registers used:
 25748 ;;		wreg, status,2
 25749 ;; Tracked objects:
 25750 ;;		On entry : 0/0
 25751 ;;		On exit  : 0/0
 25752 ;;		Unchanged: 0/0
 25753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25754 ;;      Params:         0       0       0       0       0       0       0       0       0
 25755 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25756 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25757 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25758 ;;Total ram usage:        0 bytes
 25759 ;; Hardware stack levels used:    1
 25760 ;; Hardware stack levels required when called:   11
 25761 ;; This function calls:
 25762 ;;		Nothing
 25763 ;; This function is called by:
 25764 ;;		_SYSTEM_Initialize
 25765 ;; This function uses a non-reentrant model
 25766 ;;
 25767                           
 25768                           	psect	text108
 25769  0061EA                     __ptext108:
 25770                           	opt stack 0
 25771  0061EA                     _CMP1_Initialize:
 25772                           	opt stack 18
 25773                           
 25774                           ;cmp1.c: 65: PIE2bits.C1IE = 0;
 25775                           
 25776                           ; BSR set to: 0
 25777                           ;incstack = 0
 25778  0061EA  9CA0               	bcf	4000,6,c	;volatile
 25779                           
 25780                           ;cmp1.c: 70: CM1CON0 = 0x9C;
 25781  0061EC  0E9C               	movlw	156
 25782  0061EE  6E98               	movwf	3992,c	;volatile
 25783                           
 25784                           ;cmp1.c: 73: CM2CON1bits.C1RSEL = 0x1;
 25785  0061F0  8A9A               	bsf	3994,5,c	;volatile
 25786                           
 25787                           ;cmp1.c: 76: CM2CON1bits.C1SYNC = 0x0;
 25788  0061F2  929A               	bcf	3994,1,c	;volatile
 25789                           
 25790                           ;cmp1.c: 79: CM2CON1bits.C1HYS = 0x0;
 25791  0061F4  969A               	bcf	3994,3,c	;volatile
 25792                           
 25793                           ;cmp1.c: 83: PIR2bits.C1IF = 0;
 25794  0061F6  9CA1               	bcf	4001,6,c	;volatile
 25795                           
 25796                           ;cmp1.c: 86: PIE2bits.C1IE = 0;
 25797  0061F8  9CA0               	bcf	4000,6,c	;volatile
 25798  0061FA  0012               	return		;funcret
 25799  0061FC                     __end_of_CMP1_Initialize:
 25800                           	opt stack 0
 25801                           tblptru	equ	0xFF8
 25802                           tblptrh	equ	0xFF7
 25803                           tblptrl	equ	0xFF6
 25804                           tablat	equ	0xFF5
 25805                           prodh	equ	0xFF4
 25806                           prodl	equ	0xFF3
 25807                           intcon	equ	0xFF2
 25808                           intcon2	equ	0xFF1
 25809                           intcon3	equ	0xFF0
 25810                           indf0	equ	0xFEF
 25811                           postinc0	equ	0xFEE
 25812                           fsr0h	equ	0xFEA
 25813                           fsr0l	equ	0xFE9
 25814                           wreg	equ	0xFE8
 25815                           indf1	equ	0xFE7
 25816                           postdec1	equ	0xFE5
 25817                           fsr1h	equ	0xFE2
 25818                           fsr1l	equ	0xFE1
 25819                           indf2	equ	0xFDF
 25820                           postinc2	equ	0xFDE
 25821                           postdec2	equ	0xFDD
 25822                           plusw2	equ	0xFDB
 25823                           fsr2h	equ	0xFDA
 25824                           fsr2l	equ	0xFD9
 25825                           status	equ	0xFD8
 25826                           
 25827 ;; *************** function _ADC_Initialize *****************
 25828 ;; Defined at:
 25829 ;;		line 65 in file "../Includes/MccGenerated/adc.c"
 25830 ;; Parameters:    Size  Location     Type
 25831 ;;		None
 25832 ;; Auto vars:     Size  Location     Type
 25833 ;;		None
 25834 ;; Return value:  Size  Location     Type
 25835 ;;                  1    wreg      void 
 25836 ;; Registers used:
 25837 ;;		wreg, status,2
 25838 ;; Tracked objects:
 25839 ;;		On entry : 0/0
 25840 ;;		On exit  : 0/0
 25841 ;;		Unchanged: 0/0
 25842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25843 ;;      Params:         0       0       0       0       0       0       0       0       0
 25844 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25845 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25846 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25847 ;;Total ram usage:        0 bytes
 25848 ;; Hardware stack levels used:    1
 25849 ;; Hardware stack levels required when called:   11
 25850 ;; This function calls:
 25851 ;;		Nothing
 25852 ;; This function is called by:
 25853 ;;		_SYSTEM_Initialize
 25854 ;; This function uses a non-reentrant model
 25855 ;;
 25856                           
 25857                           	psect	text109
 25858  006116                     __ptext109:
 25859                           	opt stack 0
 25860  006116                     _ADC_Initialize:
 25861                           	opt stack 18
 25862                           
 25863                           ;adc.c: 68: VREFCON0 = 0b10100000;
 25864                           
 25865                           ;incstack = 0
 25866  006116  0EA0               	movlw	160
 25867  006118  6E7D               	movwf	3965,c	;volatile
 25868                           
 25869                           ;adc.c: 70: ADCON0 = 0x01;
 25870  00611A  0E01               	movlw	1
 25871  00611C  6EC2               	movwf	4034,c	;volatile
 25872                           
 25873                           ;adc.c: 73: ADCON1 = 0x08;
 25874  00611E  0E08               	movlw	8
 25875  006120  6EC1               	movwf	4033,c	;volatile
 25876                           
 25877                           ;adc.c: 76: ADCON2 = 0b10001110;
 25878  006122  0E8E               	movlw	142
 25879  006124  6EC0               	movwf	4032,c	;volatile
 25880                           
 25881                           ;adc.c: 79: ADRESL = 0x00;
 25882  006126  0E00               	movlw	0
 25883  006128  6EC3               	movwf	4035,c	;volatile
 25884                           
 25885                           ;adc.c: 82: ADRESH = 0x00;
 25886  00612A  0E00               	movlw	0
 25887  00612C  6EC4               	movwf	4036,c	;volatile
 25888  00612E  0012               	return		;funcret
 25889  006130                     __end_of_ADC_Initialize:
 25890                           	opt stack 0
 25891                           tblptru	equ	0xFF8
 25892                           tblptrh	equ	0xFF7
 25893                           tblptrl	equ	0xFF6
 25894                           tablat	equ	0xFF5
 25895                           prodh	equ	0xFF4
 25896                           prodl	equ	0xFF3
 25897                           intcon	equ	0xFF2
 25898                           intcon2	equ	0xFF1
 25899                           intcon3	equ	0xFF0
 25900                           indf0	equ	0xFEF
 25901                           postinc0	equ	0xFEE
 25902                           fsr0h	equ	0xFEA
 25903                           fsr0l	equ	0xFE9
 25904                           wreg	equ	0xFE8
 25905                           indf1	equ	0xFE7
 25906                           postdec1	equ	0xFE5
 25907                           fsr1h	equ	0xFE2
 25908                           fsr1l	equ	0xFE1
 25909                           indf2	equ	0xFDF
 25910                           postinc2	equ	0xFDE
 25911                           postdec2	equ	0xFDD
 25912                           plusw2	equ	0xFDB
 25913                           fsr2h	equ	0xFDA
 25914                           fsr2l	equ	0xFD9
 25915                           status	equ	0xFD8
 25916                           
 25917 ;; *************** function _MOTEapp_handlerState *****************
 25918 ;; Defined at:
 25919 ;;		line 203 in file "../Includes/Board/MOTEapp.c"
 25920 ;; Parameters:    Size  Location     Type
 25921 ;;  state           1    wreg     enum E5864
 25922 ;; Auto vars:     Size  Location     Type
 25923 ;;  state           1    0[BANK0 ] enum E5864
 25924 ;; Return value:  Size  Location     Type
 25925 ;;                  1    wreg      void 
 25926 ;; Registers used:
 25927 ;;		wreg
 25928 ;; Tracked objects:
 25929 ;;		On entry : 0/0
 25930 ;;		On exit  : 0/0
 25931 ;;		Unchanged: 0/0
 25932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25933 ;;      Params:         0       0       0       0       0       0       0       0       0
 25934 ;;      Locals:         0       1       0       0       0       0       0       0       0
 25935 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25936 ;;      Totals:         0       1       0       0       0       0       0       0       0
 25937 ;;Total ram usage:        1 bytes
 25938 ;; Hardware stack levels used:    1
 25939 ;; Hardware stack levels required when called:   11
 25940 ;; This function calls:
 25941 ;;		Nothing
 25942 ;; This function is called by:
 25943 ;;		_main
 25944 ;; This function uses a non-reentrant model
 25945 ;;
 25946                           
 25947                           	psect	text110
 25948  00628C                     __ptext110:
 25949                           	opt stack 0
 25950  00628C                     _MOTEapp_handlerState:
 25951                           	opt stack 19
 25952                           
 25953                           ;incstack = 0
 25954                           ;MOTEapp_handlerState@state stored from wreg
 25955  00628C  0100               	movlb	0	; () banked
 25956  00628E  6F60               	movwf	MOTEapp_handlerState@state& (0+255),b
 25957                           
 25958                           ;MOTEapp.c: 205: moteState = state;
 25959  006290  C060  F0FF         	movff	MOTEapp_handlerState@state,_moteState
 25960  006294  0012               	return		;funcret
 25961  006296                     __end_of_MOTEapp_handlerState:
 25962                           	opt stack 0
 25963                           tblptru	equ	0xFF8
 25964                           tblptrh	equ	0xFF7
 25965                           tblptrl	equ	0xFF6
 25966                           tablat	equ	0xFF5
 25967                           prodh	equ	0xFF4
 25968                           prodl	equ	0xFF3
 25969                           intcon	equ	0xFF2
 25970                           intcon2	equ	0xFF1
 25971                           intcon3	equ	0xFF0
 25972                           indf0	equ	0xFEF
 25973                           postinc0	equ	0xFEE
 25974                           fsr0h	equ	0xFEA
 25975                           fsr0l	equ	0xFE9
 25976                           wreg	equ	0xFE8
 25977                           indf1	equ	0xFE7
 25978                           postdec1	equ	0xFE5
 25979                           fsr1h	equ	0xFE2
 25980                           fsr1l	equ	0xFE1
 25981                           indf2	equ	0xFDF
 25982                           postinc2	equ	0xFDE
 25983                           postdec2	equ	0xFDD
 25984                           plusw2	equ	0xFDB
 25985                           fsr2h	equ	0xFDA
 25986                           fsr2l	equ	0xFD9
 25987                           status	equ	0xFD8
 25988                           
 25989 ;; *************** function _DATAEE_ReadByte *****************
 25990 ;; Defined at:
 25991 ;;		line 188 in file "../Includes/MccGenerated/memory.c"
 25992 ;; Parameters:    Size  Location     Type
 25993 ;;  bAdd            1    wreg     unsigned char 
 25994 ;; Auto vars:     Size  Location     Type
 25995 ;;  bAdd            1    0[BANK0 ] unsigned char 
 25996 ;; Return value:  Size  Location     Type
 25997 ;;                  1    wreg      unsigned char 
 25998 ;; Registers used:
 25999 ;;		wreg, status,2
 26000 ;; Tracked objects:
 26001 ;;		On entry : 0/0
 26002 ;;		On exit  : 0/0
 26003 ;;		Unchanged: 0/0
 26004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26005 ;;      Params:         0       0       0       0       0       0       0       0       0
 26006 ;;      Locals:         0       1       0       0       0       0       0       0       0
 26007 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26008 ;;      Totals:         0       1       0       0       0       0       0       0       0
 26009 ;;Total ram usage:        1 bytes
 26010 ;; Hardware stack levels used:    1
 26011 ;; Hardware stack levels required when called:   11
 26012 ;; This function calls:
 26013 ;;		Nothing
 26014 ;; This function is called by:
 26015 ;;		_main
 26016 ;; This function uses a non-reentrant model
 26017 ;;
 26018                           
 26019                           	psect	text111
 26020  006172                     __ptext111:
 26021                           	opt stack 0
 26022  006172                     _DATAEE_ReadByte:
 26023                           	opt stack 19
 26024                           
 26025                           ;incstack = 0
 26026                           ;DATAEE_ReadByte@bAdd stored from wreg
 26027  006172  0100               	movlb	0	; () banked
 26028  006174  6F60               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 26029                           
 26030                           ;memory.c: 190: EEADR = (bAdd & 0xFF);
 26031  006176  C060  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
 26032                           
 26033                           ;memory.c: 191: EECON1bits.CFGS = 0;
 26034  00617A  9CA6               	bcf	4006,6,c	;volsfr
 26035                           
 26036                           ;memory.c: 192: EECON1bits.EEPGD = 0;
 26037  00617C  9EA6               	bcf	4006,7,c	;volsfr
 26038                           
 26039                           ;memory.c: 193: EECON1bits.RD = 1;
 26040  00617E  80A6               	bsf	4006,0,c	;volsfr
 26041                           
 26042                           ;memory.c: 194: __nop();
 26043  006180  F000               	nop	
 26044                           
 26045                           ;memory.c: 195: __nop();
 26046  006182  F000               	nop	
 26047                           
 26048                           ;memory.c: 197: return (EEDATA);
 26049  006184  50A8               	movf	4008,w,c	;volatile
 26050  006186  0012               	return	
 26051  006188                     __end_of_DATAEE_ReadByte:
 26052                           	opt stack 0
 26053                           tblptru	equ	0xFF8
 26054                           tblptrh	equ	0xFF7
 26055                           tblptrl	equ	0xFF6
 26056                           tablat	equ	0xFF5
 26057                           prodh	equ	0xFF4
 26058                           prodl	equ	0xFF3
 26059                           intcon	equ	0xFF2
 26060                           intcon2	equ	0xFF1
 26061                           intcon3	equ	0xFF0
 26062                           indf0	equ	0xFEF
 26063                           postinc0	equ	0xFEE
 26064                           fsr0h	equ	0xFEA
 26065                           fsr0l	equ	0xFE9
 26066                           wreg	equ	0xFE8
 26067                           indf1	equ	0xFE7
 26068                           postdec1	equ	0xFE5
 26069                           fsr1h	equ	0xFE2
 26070                           fsr1l	equ	0xFE1
 26071                           indf2	equ	0xFDF
 26072                           postinc2	equ	0xFDE
 26073                           postdec2	equ	0xFDD
 26074                           plusw2	equ	0xFDB
 26075                           fsr2h	equ	0xFDA
 26076                           fsr2l	equ	0xFD9
 26077                           status	equ	0xFD8
 26078                           
 26079 ;; *************** function _INTERRUPT_InterruptManager *****************
 26080 ;; Defined at:
 26081 ;;		line 56 in file "../Includes/MccGenerated/interrupt_manager.c"
 26082 ;; Parameters:    Size  Location     Type
 26083 ;;		None
 26084 ;; Auto vars:     Size  Location     Type
 26085 ;;  aux             1    0        unsigned char 
 26086 ;; Return value:  Size  Location     Type
 26087 ;;                  1    wreg      void 
 26088 ;; Registers used:
 26089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 26090 ;; Tracked objects:
 26091 ;;		On entry : 0/0
 26092 ;;		On exit  : 0/0
 26093 ;;		Unchanged: 0/0
 26094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26095 ;;      Params:         0       0       0       0       0       0       0       0       0
 26096 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26097 ;;      Temps:         18       0       0       0       0       0       0       0       0
 26098 ;;      Totals:        18       0       0       0       0       0       0       0       0
 26099 ;;Total ram usage:       18 bytes
 26100 ;; Hardware stack levels used:    1
 26101 ;; Hardware stack levels required when called:   10
 26102 ;; This function calls:
 26103 ;;		_CMP1_ISR
 26104 ;;		_EUSART_Receive_ISR
 26105 ;;		_EUSART_Transmit_ISR
 26106 ;;		_InterruptPinRX
 26107 ;;		_InterruptTimerUART
 26108 ;;		_TMR0_ISR
 26109 ;;		_TMR1_ISR
 26110 ;;		_TMR3_ISR
 26111 ;;		_TMRapp_Tick
 26112 ;;		_USBDeviceTasks
 26113 ;;		_USBapp_setrxByteFlag
 26114 ;; This function is called by:
 26115 ;;		Interrupt level 2
 26116 ;; This function uses a non-reentrant model
 26117 ;;
 26118                           
 26119                           	psect	intcode
 26120  000008                     __pintcode:
 26121                           	opt stack 0
 26122  000008                     _INTERRUPT_InterruptManager:
 26123                           	opt stack 11
 26124                           
 26125                           ;incstack = 0
 26126  000008  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 26127  00000A  CFFA F020          	movff	pclath,??_INTERRUPT_InterruptManager
 26128  00000E  CFFB F021          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 26129  000012  CFE9 F022          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 26130  000016  CFEA F023          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 26131  00001A  CFE1 F024          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 26132  00001E  CFE2 F025          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 26133  000022  CFD9 F026          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 26134  000026  CFDA F027          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 26135  00002A  CFF3 F028          	movff	prodl,??_INTERRUPT_InterruptManager+8
 26136  00002E  CFF4 F029          	movff	prodh,??_INTERRUPT_InterruptManager+9
 26137  000032  CFF6 F02A          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 26138  000036  CFF7 F02B          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 26139  00003A  CFF8 F02C          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 26140  00003E  CFF5 F02D          	movff	tablat,??_INTERRUPT_InterruptManager+13
 26141  000042  C05E  F02E         	movff	btemp,??_INTERRUPT_InterruptManager+14
 26142  000046  C05F  F02F         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
 26143  00004A  C060  F030         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
 26144  00004E  C061  F031         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
 26145                           
 26146                           ;interrupt_manager.c: 59: uint8_t aux;
 26147                           ;interrupt_manager.c: 62: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 26148  000052  B09D               	btfsc	3997,0,c	;volatile
 26149  000054  A09E               	btfss	3998,0,c	;volatile
 26150  000056  D004               	goto	i2l1362
 26151                           
 26152                           ;interrupt_manager.c: 63: {
 26153                           ;interrupt_manager.c: 64: TMR1_ISR();
 26154  000058  EC2B  F031         	call	_TMR1_ISR	;wreg free
 26155                           
 26156                           ;interrupt_manager.c: 66: TMRapp_Tick();
 26157  00005C  EC6A  F031         	call	_TMRapp_Tick	;wreg free
 26158  000060                     i2l1362:
 26159                           
 26160                           ;interrupt_manager.c: 67: }
 26161                           ;interrupt_manager.c: 68: if(PIE2bits.TMR3IE == 1 && PIR2bits.TMR3IF == 1)
 26162  000060  B2A0               	btfsc	4000,1,c	;volatile
 26163  000062  A2A1               	btfss	4001,1,c	;volatile
 26164  000064  D003               	goto	i2l1363
 26165                           
 26166                           ;interrupt_manager.c: 69: {
 26167                           ;interrupt_manager.c: 70: TMR3_ISR();
 26168  000066  EC61  F030         	call	_TMR3_ISR	;wreg free
 26169                           
 26170                           ;interrupt_manager.c: 71: }
 26171  00006A  D013               	goto	i2l1369
 26172  00006C                     i2l1363:
 26173                           
 26174                           ;interrupt_manager.c: 72: else if( (PIE1bits.RCIE == 1) && (PIR1bits.RCIF == 1) )
 26175  00006C  BA9D               	btfsc	3997,5,c	;volatile
 26176  00006E  AA9E               	btfss	3998,5,c	;volatile
 26177  000070  D005               	goto	i2l1365
 26178                           
 26179                           ;interrupt_manager.c: 73: {
 26180                           ;interrupt_manager.c: 74: USBapp_setrxByteFlag();
 26181  000072  EC5C  F031         	call	_USBapp_setrxByteFlag	;wreg free
 26182                           
 26183                           ;interrupt_manager.c: 75: EUSART_Receive_ISR();
 26184  000076  EC3A  F02F         	call	_EUSART_Receive_ISR	;wreg free
 26185                           
 26186                           ;interrupt_manager.c: 76: }
 26187  00007A  D00B               	goto	i2l1369
 26188  00007C                     i2l1365:
 26189                           
 26190                           ;interrupt_manager.c: 77: else if( (PIE1bits.TXIE == 1) && (PIR1bits.TXIF == 1) )
 26191  00007C  B89D               	btfsc	3997,4,c	;volatile
 26192  00007E  A89E               	btfss	3998,4,c	;volatile
 26193  000080  D003               	goto	i2l1367
 26194                           
 26195                           ;interrupt_manager.c: 78: {
 26196                           ;interrupt_manager.c: 79: EUSART_Transmit_ISR();
 26197  000082  EC22  F02F         	call	_EUSART_Transmit_ISR	;wreg free
 26198                           
 26199                           ;interrupt_manager.c: 80: }
 26200  000086  D005               	goto	i2l1369
 26201  000088                     i2l1367:
 26202                           
 26203                           ;interrupt_manager.c: 81: else if(PIE2bits.C1IE == 1 && PIR2bits.C1IF == 1)
 26204  000088  BCA0               	btfsc	4000,6,c	;volatile
 26205  00008A  ACA1               	btfss	4001,6,c	;volatile
 26206  00008C  D002               	goto	i2l1369
 26207                           
 26208                           ;interrupt_manager.c: 82: {
 26209                           ;interrupt_manager.c: 83: CMP1_ISR();
 26210  00008E  EC7F  F031         	call	_CMP1_ISR	;wreg free
 26211  000092                     i2l1369:
 26212                           
 26213                           ;interrupt_manager.c: 84: }
 26214                           ;interrupt_manager.c: 85: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 26215  000092  BAF2               	btfsc	intcon,5,c	;volatile
 26216  000094  A4F2               	btfss	intcon,2,c	;volatile
 26217  000096  D005               	goto	i2l1370
 26218                           
 26219                           ;interrupt_manager.c: 86: {
 26220                           ;interrupt_manager.c: 87: TMR0_ISR();
 26221  000098  EC77  F031         	call	_TMR0_ISR	;wreg free
 26222                           
 26223                           ;interrupt_manager.c: 88: InterruptTimerUART();
 26224  00009C  EC1C  F022         	call	_InterruptTimerUART	;wreg free
 26225                           
 26226                           ;interrupt_manager.c: 91: }
 26227  0000A0  D008               	goto	i2l1373
 26228  0000A2                     i2l1370:
 26229                           
 26230                           ;interrupt_manager.c: 92: else if(INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1)
 26231  0000A2  B6F2               	btfsc	intcon,3,c	;volatile
 26232  0000A4  A0F2               	btfss	intcon,0,c	;volatile
 26233  0000A6  D003               	goto	i2l1372
 26234                           
 26235                           ;interrupt_manager.c: 93: {
 26236                           ;interrupt_manager.c: 103: InterruptPinRX();
 26237  0000A8  EC82  F02C         	call	_InterruptPinRX	;wreg free
 26238                           
 26239                           ;interrupt_manager.c: 116: }
 26240  0000AC  D002               	goto	i2l1373
 26241  0000AE                     i2l1372:
 26242                           
 26243                           ;interrupt_manager.c: 117: else
 26244                           ;interrupt_manager.c: 118: {
 26245                           ;interrupt_manager.c: 120: USBDeviceTasks();
 26246  0000AE  ECE2  F017         	call	_USBDeviceTasks	;wreg free
 26247  0000B2                     i2l1373:
 26248  0000B2  C031  F061         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
 26249  0000B6  C030  F060         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
 26250  0000BA  C02F  F05F         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
 26251  0000BE  C02E  F05E         	movff	??_INTERRUPT_InterruptManager+14,btemp
 26252  0000C2  C02D  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 26253  0000C6  C02C  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 26254  0000CA  C02B  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 26255  0000CE  C02A  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 26256  0000D2  C029  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 26257  0000D6  C028  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 26258  0000DA  C027  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 26259  0000DE  C026  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 26260  0000E2  C025  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 26261  0000E6  C024  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 26262  0000EA  C023  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 26263  0000EE  C022  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 26264  0000F2  C021  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 26265  0000F6  C020  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 26266  0000FA  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 26267  0000FC  0011               	retfie		f
 26268  0000FE                     __end_of_INTERRUPT_InterruptManager:
 26269                           	opt stack 0
 26270                           pclatu	equ	0xFFB
 26271                           pclath	equ	0xFFA
 26272                           tblptru	equ	0xFF8
 26273                           tblptrh	equ	0xFF7
 26274                           tblptrl	equ	0xFF6
 26275                           tablat	equ	0xFF5
 26276                           prodh	equ	0xFF4
 26277                           prodl	equ	0xFF3
 26278                           intcon	equ	0xFF2
 26279                           intcon2	equ	0xFF1
 26280                           intcon3	equ	0xFF0
 26281                           indf0	equ	0xFEF
 26282                           postinc0	equ	0xFEE
 26283                           fsr0h	equ	0xFEA
 26284                           fsr0l	equ	0xFE9
 26285                           wreg	equ	0xFE8
 26286                           indf1	equ	0xFE7
 26287                           postdec1	equ	0xFE5
 26288                           fsr1h	equ	0xFE2
 26289                           fsr1l	equ	0xFE1
 26290                           indf2	equ	0xFDF
 26291                           postinc2	equ	0xFDE
 26292                           postdec2	equ	0xFDD
 26293                           plusw2	equ	0xFDB
 26294                           fsr2h	equ	0xFDA
 26295                           fsr2l	equ	0xFD9
 26296                           status	equ	0xFD8
 26297                           
 26298 ;; *************** function _USBapp_setrxByteFlag *****************
 26299 ;; Defined at:
 26300 ;;		line 263 in file "../Includes/Board/USBapp.c"
 26301 ;; Parameters:    Size  Location     Type
 26302 ;;		None
 26303 ;; Auto vars:     Size  Location     Type
 26304 ;;		None
 26305 ;; Return value:  Size  Location     Type
 26306 ;;                  1    wreg      void 
 26307 ;; Registers used:
 26308 ;;		wreg, status,2
 26309 ;; Tracked objects:
 26310 ;;		On entry : 0/0
 26311 ;;		On exit  : 0/0
 26312 ;;		Unchanged: 0/0
 26313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26314 ;;      Params:         0       0       0       0       0       0       0       0       0
 26315 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26316 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26317 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26318 ;;Total ram usage:        0 bytes
 26319 ;; Hardware stack levels used:    1
 26320 ;; This function calls:
 26321 ;;		Nothing
 26322 ;; This function is called by:
 26323 ;;		_INTERRUPT_InterruptManager
 26324 ;; This function uses a non-reentrant model
 26325 ;;
 26326                           
 26327                           	psect	text113
 26328  0062B8                     __ptext113:
 26329                           	opt stack 0
 26330  0062B8                     _USBapp_setrxByteFlag:
 26331                           	opt stack 20
 26332                           
 26333                           ;USBapp.c: 265: rxByteFlag = 1;
 26334                           
 26335                           ;incstack = 0
 26336  0062B8  0E01               	movlw	1
 26337  0062BA  0100               	movlb	0	; () banked
 26338  0062BC  6FE9               	movwf	_rxByteFlag& (0+255),b	;volatile
 26339                           
 26340                           ; BSR set to: 0
 26341  0062BE  0012               	return		;funcret
 26342  0062C0                     __end_of_USBapp_setrxByteFlag:
 26343                           	opt stack 0
 26344                           pclatu	equ	0xFFB
 26345                           pclath	equ	0xFFA
 26346                           tblptru	equ	0xFF8
 26347                           tblptrh	equ	0xFF7
 26348                           tblptrl	equ	0xFF6
 26349                           tablat	equ	0xFF5
 26350                           prodh	equ	0xFF4
 26351                           prodl	equ	0xFF3
 26352                           intcon	equ	0xFF2
 26353                           intcon2	equ	0xFF1
 26354                           intcon3	equ	0xFF0
 26355                           indf0	equ	0xFEF
 26356                           postinc0	equ	0xFEE
 26357                           fsr0h	equ	0xFEA
 26358                           fsr0l	equ	0xFE9
 26359                           wreg	equ	0xFE8
 26360                           indf1	equ	0xFE7
 26361                           postdec1	equ	0xFE5
 26362                           fsr1h	equ	0xFE2
 26363                           fsr1l	equ	0xFE1
 26364                           indf2	equ	0xFDF
 26365                           postinc2	equ	0xFDE
 26366                           postdec2	equ	0xFDD
 26367                           plusw2	equ	0xFDB
 26368                           fsr2h	equ	0xFDA
 26369                           fsr2l	equ	0xFD9
 26370                           status	equ	0xFD8
 26371                           
 26372 ;; *************** function _USBDeviceTasks *****************
 26373 ;; Defined at:
 26374 ;;		line 428 in file "../Includes/Usb/Framework/usb_device.c"
 26375 ;; Parameters:    Size  Location     Type
 26376 ;;		None
 26377 ;; Auto vars:     Size  Location     Type
 26378 ;;  i               1   30[COMRAM] unsigned char 
 26379 ;; Return value:  Size  Location     Type
 26380 ;;                  1    wreg      void 
 26381 ;; Registers used:
 26382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 26383 ;; Tracked objects:
 26384 ;;		On entry : 0/0
 26385 ;;		On exit  : 0/0
 26386 ;;		Unchanged: 0/0
 26387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26388 ;;      Params:         0       0       0       0       0       0       0       0       0
 26389 ;;      Locals:         1       0       0       0       0       0       0       0       0
 26390 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26391 ;;      Totals:         1       0       0       0       0       0       0       0       0
 26392 ;;Total ram usage:        1 bytes
 26393 ;; Hardware stack levels used:    1
 26394 ;; Hardware stack levels required when called:    9
 26395 ;; This function calls:
 26396 ;;		_USBCtrlEPAllowStatusStage
 26397 ;;		_USBCtrlEPService
 26398 ;;		_USBStallHandler
 26399 ;;		_USBSuspend
 26400 ;;		_USBWakeFromSuspend
 26401 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26402 ;;		i2_USBDeviceInit
 26403 ;; This function is called by:
 26404 ;;		_INTERRUPT_InterruptManager
 26405 ;; This function uses a non-reentrant model
 26406 ;;
 26407                           
 26408                           	psect	text114
 26409  002FC4                     __ptext114:
 26410                           	opt stack 0
 26411  002FC4                     _USBDeviceTasks:
 26412                           	opt stack 11
 26413                           
 26414                           ;usb_device.c: 430: uint8_t i;
 26415                           ;usb_device.c: 432: if(USBDeviceState == ATTACHED_STATE)
 26416                           
 26417                           ; BSR set to: 0
 26418                           ;incstack = 0
 26419  002FC4  0100               	movlb	0	; () banked
 26420  002FC6  05EB               	decf	_USBDeviceState& (0+255),w,b	;volatile
 26421  002FC8  B4D8               	btfsc	status,2,c
 26422                           
 26423                           ; BSR set to: 0
 26424                           ;usb_device.c: 433: {
 26425                           ;usb_device.c: 443: if(!UCONbits.SE0)
 26426  002FCA  BA60               	btfsc	3936,5,c	;volatile
 26427  002FCC  D006               	goto	i2l1943
 26428                           
 26429                           ; BSR set to: 0
 26430                           ;usb_device.c: 444: {
 26431                           ;usb_device.c: 445: {UIR = 0;};
 26432  002FCE  0E00               	movlw	0
 26433  002FD0  6E65               	movwf	3941,c	;volatile
 26434                           
 26435                           ; BSR set to: 0
 26436                           ;usb_device.c: 446: UIEbits.URSTIE = 1;
 26437  002FD2  8064               	bsf	3940,0,c	;volatile
 26438                           
 26439                           ; BSR set to: 0
 26440                           ;usb_device.c: 447: UIEbits.IDLEIE = 1;
 26441  002FD4  8864               	bsf	3940,4,c	;volatile
 26442                           
 26443                           ;usb_device.c: 448: USBDeviceState = POWERED_STATE;
 26444  002FD6  0E02               	movlw	2
 26445  002FD8  6FEB               	movwf	_USBDeviceState& (0+255),b	;volatile
 26446  002FDA                     i2l1943:
 26447                           
 26448                           ; BSR set to: 0
 26449                           ;usb_device.c: 449: }
 26450                           ;usb_device.c: 450: }
 26451                           ;usb_device.c: 454: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 26452                           
 26453                           ; BSR set to: 0
 26454                           
 26455                           ; BSR set to: 0
 26456  002FDA  B465               	btfsc	3941,2,c	;volatile
 26457                           
 26458                           ; BSR set to: 0
 26459  002FDC  A464               	btfss	3940,2,c	;volatile
 26460  002FDE  D003               	goto	i2l1944
 26461                           
 26462                           ; BSR set to: 0
 26463                           ;usb_device.c: 455: {
 26464                           ;usb_device.c: 456: (UIR &= 0xFB);
 26465  002FE0  9465               	bcf	3941,2,c	;volatile
 26466                           
 26467                           ; BSR set to: 0
 26468                           ;usb_device.c: 457: USBWakeFromSuspend();
 26469  002FE2  EC0A  F02F         	call	_USBWakeFromSuspend	;wreg free
 26470  002FE6                     i2l1944:
 26471                           
 26472                           ;usb_device.c: 458: }
 26473                           ;usb_device.c: 463: if(UCONbits.SUSPND==1)
 26474  002FE6  A260               	btfss	3936,1,c	;volatile
 26475  002FE8  D002               	goto	i2l1945
 26476                           
 26477                           ;usb_device.c: 464: {
 26478                           ;usb_device.c: 465: PIR3bits.USBIF = 0;;
 26479  002FEA  94A4               	bcf	4004,2,c	;volatile
 26480                           
 26481                           ;usb_device.c: 466: return;
 26482  002FEC  0012               	return	
 26483  002FEE                     i2l1945:
 26484                           
 26485                           ;usb_device.c: 467: }
 26486                           ;usb_device.c: 479: if(UIRbits.URSTIF && UIEbits.URSTIE)
 26487  002FEE  B065               	btfsc	3941,0,c	;volatile
 26488  002FF0  A064               	btfss	3940,0,c	;volatile
 26489  002FF2  D007               	goto	i2l1947
 26490                           
 26491                           ;usb_device.c: 480: {
 26492                           ;usb_device.c: 481: USBDeviceInit();
 26493  002FF4  EC13  F019         	call	i2_USBDeviceInit	;wreg free
 26494                           
 26495                           ;usb_device.c: 485: {PIE3bits.USBIE = 1;};
 26496  002FF8  84A3               	bsf	4003,2,c	;volatile
 26497                           
 26498                           ;usb_device.c: 487: USBDeviceState = DEFAULT_STATE;
 26499  002FFA  0E04               	movlw	4
 26500  002FFC  0100               	movlb	0	; () banked
 26501  002FFE  6FEB               	movwf	_USBDeviceState& (0+255),b	;volatile
 26502                           
 26503                           ; BSR set to: 0
 26504                           ;usb_device.c: 489: (UIR &= 0xFE);
 26505  003000  9065               	bcf	3941,0,c	;volatile
 26506  003002                     i2l1947:
 26507                           
 26508                           ;usb_device.c: 490: }
 26509                           ;usb_device.c: 495: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 26510                           
 26511                           ; BSR set to: 0
 26512  003002  B865               	btfsc	3941,4,c	;volatile
 26513  003004  A864               	btfss	3940,4,c	;volatile
 26514  003006  D003               	goto	i2l1948
 26515                           
 26516                           ;usb_device.c: 496: {
 26517                           ;usb_device.c: 497: USBSuspend();
 26518  003008  ECAB  F02F         	call	_USBSuspend	;wreg free
 26519                           
 26520                           ;usb_device.c: 498: (UIR &= 0xEF);
 26521  00300C  9865               	bcf	3941,4,c	;volatile
 26522  00300E                     i2l1948:
 26523                           
 26524                           ;usb_device.c: 499: }
 26525                           ;usb_device.c: 501: if(UIRbits.SOFIF)
 26526  00300E  AC65               	btfss	3941,6,c	;volatile
 26527  003010  D018               	goto	i2l1952
 26528                           
 26529                           ;usb_device.c: 502: {
 26530                           ;usb_device.c: 503: if(UIEbits.SOFIE)
 26531  003012  AC64               	btfss	3940,6,c	;volatile
 26532  003014  D00E               	goto	i2l1950
 26533                           
 26534                           ;usb_device.c: 504: {
 26535                           ;usb_device.c: 505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 26536  003016  0E00               	movlw	0
 26537  003018  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26538  00301A  0E73               	movlw	115
 26539  00301C  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26540  00301E  0E00               	movlw	0
 26541  003020  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26542  003022  0E00               	movlw	0
 26543  003024  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26544  003026  0E00               	movlw	0
 26545  003028  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26546  00302A  0E01               	movlw	1
 26547  00302C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26548  00302E  EC2D  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26549  003032                     i2l1950:
 26550                           
 26551                           ;usb_device.c: 506: }
 26552                           ;usb_device.c: 507: (UIR &= 0xBF);
 26553  003032  9C65               	bcf	3941,6,c	;volatile
 26554                           
 26555                           ;usb_device.c: 512: if(USBStatusStageTimeoutCounter != 0u)
 26556  003034  5046               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 26557  003036  A4D8               	btfss	status,2,c
 26558                           
 26559                           ;usb_device.c: 513: {
 26560                           ;usb_device.c: 514: USBStatusStageTimeoutCounter--;
 26561  003038  0646               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 26562                           
 26563                           ;usb_device.c: 515: }
 26564                           ;usb_device.c: 521: if(USBStatusStageTimeoutCounter == 0)
 26565  00303A  5046               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 26566  00303C  B4D8               	btfsc	status,2,c
 26567                           
 26568                           ;usb_device.c: 522: {
 26569                           ;usb_device.c: 523: USBCtrlEPAllowStatusStage();
 26570  00303E  EC59  F021         	call	_USBCtrlEPAllowStatusStage	;wreg free
 26571  003042                     i2l1952:
 26572                           
 26573                           ;usb_device.c: 524: }
 26574                           ;usb_device.c: 525: }
 26575                           ;usb_device.c: 527: if(UIRbits.STALLIF && UIEbits.STALLIE)
 26576  003042  BA65               	btfsc	3941,5,c	;volatile
 26577  003044  AA64               	btfss	3940,5,c	;volatile
 26578  003046  D002               	goto	i2l1953
 26579                           
 26580                           ;usb_device.c: 528: {
 26581                           ;usb_device.c: 529: USBStallHandler();
 26582  003048  EC10  F02D         	call	_USBStallHandler	;wreg free
 26583  00304C                     i2l1953:
 26584                           
 26585                           ;usb_device.c: 530: }
 26586                           ;usb_device.c: 532: if(UIRbits.UERRIF && UIEbits.UERRIE)
 26587  00304C  B265               	btfsc	3941,1,c	;volatile
 26588  00304E  A264               	btfss	3940,1,c	;volatile
 26589  003050  D00F               	goto	i2l1954
 26590                           
 26591                           ;usb_device.c: 533: {
 26592                           ;usb_device.c: 534: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 26593  003052  0E7F               	movlw	127
 26594  003054  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26595  003056  680E               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26596  003058  0E00               	movlw	0
 26597  00305A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26598  00305C  0E00               	movlw	0
 26599  00305E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26600  003060  0E00               	movlw	0
 26601  003062  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26602  003064  0E01               	movlw	1
 26603  003066  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26604  003068  EC2D  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26605                           
 26606                           ;usb_device.c: 535: {UEIR = 0;};
 26607  00306C  0E00               	movlw	0
 26608  00306E  6E67               	movwf	3943,c	;volatile
 26609  003070                     i2l1954:
 26610                           
 26611                           ;usb_device.c: 536: }
 26612                           ;usb_device.c: 543: if(USBDeviceState < DEFAULT_STATE)
 26613  003070  0E04               	movlw	4
 26614  003072  0100               	movlb	0	; () banked
 26615  003074  61EB               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 26616  003076  D002               	goto	i2l1955
 26617                           
 26618                           ; BSR set to: 0
 26619                           ;usb_device.c: 544: {
 26620                           ;usb_device.c: 545: PIR3bits.USBIF = 0;;
 26621  003078  94A4               	bcf	4004,2,c	;volatile
 26622                           
 26623                           ;usb_device.c: 546: return;
 26624  00307A  0012               	return	
 26625  00307C                     i2l1955:
 26626                           
 26627                           ; BSR set to: 0
 26628                           ;usb_device.c: 547: }
 26629                           ;usb_device.c: 552: if(UIEbits.TRNIE)
 26630  00307C  A664               	btfss	3940,3,c	;volatile
 26631  00307E  D039               	goto	i2u1104_40
 26632                           
 26633                           ; BSR set to: 0
 26634                           ;usb_device.c: 553: {
 26635                           ;usb_device.c: 554: for(i = 0; i < 4u; i++)
 26636  003080  0E00               	movlw	0
 26637  003082  6E1F               	movwf	USBDeviceTasks@i,c
 26638  003084                     i2l12175:
 26639                           
 26640                           ; BSR set to: 0
 26641  003084  0E03               	movlw	3
 26642  003086  641F               	cpfsgt	USBDeviceTasks@i,c
 26643  003088  D001               	goto	i2l1957
 26644  00308A  D033               	goto	i2u1104_40
 26645  00308C                     i2l1957:
 26646                           
 26647                           ;usb_device.c: 555: {
 26648                           ;usb_device.c: 556: if(UIRbits.TRNIF)
 26649  00308C  A665               	btfss	3941,3,c	;volatile
 26650  00308E  D031               	goto	i2u1104_40
 26651                           
 26652                           ;usb_device.c: 557: {
 26653                           ;usb_device.c: 559: USTATcopy.Val = USTAT;
 26654  003090  CF61 F059          	movff	3937,_USTATcopy	;volatile
 26655                           
 26656                           ;usb_device.c: 560: endpoint_number = USTATcopy.endpoint_number;
 26657  003094  3059               	rrcf	_USTATcopy,w,c	;volatile
 26658  003096  32E8               	rrcf	wreg,f,c
 26659  003098  32E8               	rrcf	wreg,f,c
 26660  00309A  0B0F               	andlw	15
 26661  00309C  6E48               	movwf	_endpoint_number,c	;volatile
 26662                           
 26663                           ;usb_device.c: 562: (UIR &= 0xF7);
 26664  00309E  9665               	bcf	3941,3,c	;volatile
 26665                           
 26666                           ;usb_device.c: 566: if(USTATcopy.direction == 0)
 26667  0030A0  B459               	btfsc	_USTATcopy,2,c	;volatile
 26668  0030A2  D007               	goto	i2l1960
 26669                           
 26670                           ;usb_device.c: 567: {
 26671                           ;usb_device.c: 568: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 26672  0030A4  5048               	movf	_endpoint_number,w,c	;volatile
 26673  0030A6  0D01               	mullw	1
 26674  0030A8  0ED0               	movlw	low _ep_data_out
 26675  0030AA  24F3               	addwf	prodl,w,c
 26676  0030AC  6ED9               	movwf	fsr2l,c
 26677  0030AE  0E00               	movlw	high _ep_data_out
 26678  0030B0  D006               	goto	L25
 26679  0030B2                     i2l1960:
 26680                           
 26681                           ;usb_device.c: 570: else
 26682                           ;usb_device.c: 571: {
 26683                           ;usb_device.c: 572: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 26684                           
 26685                           ; BSR set to: 0
 26686  0030B2  5048               	movf	_endpoint_number,w,c	;volatile
 26687  0030B4  0D01               	mullw	1
 26688  0030B6  0ED3               	movlw	low _ep_data_in
 26689  0030B8  24F3               	addwf	prodl,w,c
 26690  0030BA  6ED9               	movwf	fsr2l,c
 26691  0030BC  0E00               	movlw	high _ep_data_in
 26692  0030BE                     L25:
 26693  0030BE  20F4               	addwfc	prodh,w,c
 26694  0030C0  6EDA               	movwf	fsr2h,c
 26695  0030C2  0100               	movlb	0	; () banked
 26696  0030C4  70DF               	btg	indf2,0,c
 26697                           
 26698                           ; BSR set to: 0
 26699                           ;usb_device.c: 573: }
 26700                           ;usb_device.c: 577: if(endpoint_number == 0)
 26701                           
 26702                           ; BSR set to: 0
 26703  0030C6  5048               	movf	_endpoint_number,w,c	;volatile
 26704  0030C8  A4D8               	btfss	status,2,c
 26705  0030CA  D003               	goto	i2l1962
 26706                           
 26707                           ; BSR set to: 0
 26708                           ;usb_device.c: 578: {
 26709                           ;usb_device.c: 579: USBCtrlEPService();
 26710  0030CC  EC8F  F020         	call	_USBCtrlEPService	;wreg free
 26711                           
 26712                           ;usb_device.c: 580: }
 26713  0030D0  D00E               	goto	i2l1964
 26714  0030D2                     i2l1962:
 26715                           
 26716                           ;usb_device.c: 581: else
 26717                           ;usb_device.c: 582: {
 26718                           ;usb_device.c: 583: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 26719  0030D2  0E00               	movlw	0
 26720  0030D4  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26721  0030D6  0E72               	movlw	114
 26722  0030D8  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26723  0030DA  0E59               	movlw	low _USTATcopy
 26724  0030DC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26725  0030DE  0E00               	movlw	high _USTATcopy
 26726  0030E0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26727  0030E2  0E00               	movlw	0
 26728  0030E4  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26729  0030E6  0E00               	movlw	0
 26730  0030E8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26731  0030EA  EC2D  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26732  0030EE                     i2l1964:
 26733  0030EE  2A1F               	incf	USBDeviceTasks@i,f,c
 26734  0030F0  D7C9               	goto	i2l12175
 26735  0030F2                     i2u1104_40:
 26736                           
 26737                           ;usb_device.c: 589: }
 26738                           ;usb_device.c: 590: }
 26739                           ;usb_device.c: 591: }
 26740                           ;usb_device.c: 593: PIR3bits.USBIF = 0;;
 26741  0030F2  94A4               	bcf	4004,2,c	;volatile
 26742  0030F4  0012               	return		;funcret
 26743  0030F6                     __end_of_USBDeviceTasks:
 26744                           	opt stack 0
 26745                           pclatu	equ	0xFFB
 26746                           pclath	equ	0xFFA
 26747                           tblptru	equ	0xFF8
 26748                           tblptrh	equ	0xFF7
 26749                           tblptrl	equ	0xFF6
 26750                           tablat	equ	0xFF5
 26751                           prodh	equ	0xFF4
 26752                           prodl	equ	0xFF3
 26753                           intcon	equ	0xFF2
 26754                           intcon2	equ	0xFF1
 26755                           intcon3	equ	0xFF0
 26756                           indf0	equ	0xFEF
 26757                           postinc0	equ	0xFEE
 26758                           fsr0h	equ	0xFEA
 26759                           fsr0l	equ	0xFE9
 26760                           wreg	equ	0xFE8
 26761                           indf1	equ	0xFE7
 26762                           postdec1	equ	0xFE5
 26763                           fsr1h	equ	0xFE2
 26764                           fsr1l	equ	0xFE1
 26765                           indf2	equ	0xFDF
 26766                           postinc2	equ	0xFDE
 26767                           postdec2	equ	0xFDD
 26768                           plusw2	equ	0xFDB
 26769                           fsr2h	equ	0xFDA
 26770                           fsr2l	equ	0xFD9
 26771                           status	equ	0xFD8
 26772                           
 26773 ;; *************** function i2_USBDeviceInit *****************
 26774 ;; Defined at:
 26775 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 26776 ;; Parameters:    Size  Location     Type
 26777 ;;		None
 26778 ;; Auto vars:     Size  Location     Type
 26779 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 26780 ;; Return value:  Size  Location     Type
 26781 ;;                  1    wreg      void 
 26782 ;; Registers used:
 26783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26784 ;; Tracked objects:
 26785 ;;		On entry : 0/0
 26786 ;;		On exit  : 0/0
 26787 ;;		Unchanged: 0/0
 26788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26789 ;;      Params:         0       0       0       0       0       0       0       0       0
 26790 ;;      Locals:         1       0       0       0       0       0       0       0       0
 26791 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26792 ;;      Totals:         1       0       0       0       0       0       0       0       0
 26793 ;;Total ram usage:        1 bytes
 26794 ;; Hardware stack levels used:    1
 26795 ;; Hardware stack levels required when called:    1
 26796 ;; This function calls:
 26797 ;;		i2_memset
 26798 ;; This function is called by:
 26799 ;;		_USBDeviceTasks
 26800 ;; This function uses a non-reentrant model
 26801 ;;
 26802                           
 26803                           	psect	text115
 26804  003226                     __ptext115:
 26805                           	opt stack 0
 26806  003226                     i2_USBDeviceInit:
 26807                           	opt stack 18
 26808                           
 26809                           ;usb_device.c: 239: uint8_t i;
 26810                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 26811                           
 26812                           ;incstack = 0
 26813  003226  94A3               	bcf	4003,2,c	;volatile
 26814                           
 26815                           ;usb_device.c: 244: {UEIR = 0;};
 26816  003228  0E00               	movlw	0
 26817  00322A  6E67               	movwf	3943,c	;volatile
 26818                           
 26819                           ;usb_device.c: 247: {UIR = 0;};
 26820  00322C  0E00               	movlw	0
 26821  00322E  6E65               	movwf	3941,c	;volatile
 26822                           
 26823                           ;usb_device.c: 250: UEP0 = 0;
 26824  003230  0E00               	movlw	0
 26825  003232  6E6A               	movwf	3946,c	;volatile
 26826                           
 26827                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 26828  003234  0E6B               	movlw	107
 26829  003236  6E01               	movwf	i2memset@p1,c
 26830  003238  0E0F               	movlw	15
 26831  00323A  6E02               	movwf	i2memset@p1+1,c
 26832  00323C  0E00               	movlw	0
 26833  00323E  6E04               	movwf	i2memset@c+1,c
 26834  003240  0E00               	movlw	0
 26835  003242  6E03               	movwf	i2memset@c,c
 26836  003244  0E00               	movlw	0
 26837  003246  6E06               	movwf	i2memset@n+1,c
 26838  003248  0E02               	movlw	2
 26839  00324A  6E05               	movwf	i2memset@n,c
 26840  00324C  EC80  F02F         	call	i2_memset	;wreg free
 26841                           
 26842                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 26843  003250  0E16               	movlw	22
 26844  003252  6E62               	movwf	3938,c	;volatile
 26845  003254  0E9F               	movlw	159
 26846  003256  6E66               	movwf	3942,c	;volatile
 26847  003258  0E7B               	movlw	123
 26848  00325A  6E64               	movwf	3940,c	;volatile
 26849                           
 26850                           ;usb_device.c: 257: ;
 26851                           ;usb_device.c: 260: ;
 26852                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 26853  00325C  0E00               	movlw	0
 26854  00325E  6E09               	movwf	i2USBDeviceInit@i,c
 26855  003260                     i2l11655:
 26856  003260  0E0B               	movlw	11
 26857  003262  6409               	cpfsgt	i2USBDeviceInit@i,c
 26858  003264  D001               	goto	i2l1932
 26859  003266  D00E               	goto	i2u1038_40
 26860  003268                     i2l1932:
 26861                           
 26862                           ;usb_device.c: 264: {
 26863                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 26864  003268  5009               	movf	i2USBDeviceInit@i,w,c
 26865  00326A  0D04               	mullw	4
 26866  00326C  0E00               	movlw	0
 26867  00326E  24F3               	addwf	prodl,w,c
 26868  003270  6ED9               	movwf	fsr2l,c
 26869  003272  0E04               	movlw	4
 26870  003274  20F4               	addwfc	prodh,w,c
 26871  003276  6EDA               	movwf	fsr2h,c
 26872  003278  6ADE               	clrf	postinc2,c
 26873  00327A  6ADE               	clrf	postinc2,c
 26874  00327C  6ADE               	clrf	postinc2,c
 26875  00327E  6ADD               	clrf	postdec2,c
 26876  003280  2A09               	incf	i2USBDeviceInit@i,f,c
 26877  003282  D7EE               	goto	i2l11655
 26878  003284                     i2u1038_40:
 26879                           
 26880                           ;usb_device.c: 266: }
 26881                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 26882  003284  8C60               	bsf	3936,6,c	;volatile
 26883                           
 26884                           ;usb_device.c: 272: UADDR = 0x00;
 26885  003286  0E00               	movlw	0
 26886  003288  6E63               	movwf	3939,c	;volatile
 26887                           
 26888                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 26889  00328A  9860               	bcf	3936,4,c	;volatile
 26890                           
 26891                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 26892  00328C  9C60               	bcf	3936,6,c	;volatile
 26893                           
 26894                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 26895  00328E  D00A               	goto	i2l1934
 26896  003290                     
 26897                           ;usb_device.c: 282: {
 26898                           ;usb_device.c: 283: (UIR &= 0xF7);
 26899  003290  9665               	bcf	3941,3,c	;volatile
 26900                           
 26901                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 26902  003292  0E00               	movlw	0
 26903  003294  0100               	movlb	0	; () banked
 26904  003296  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26905                           
 26906                           ; BSR set to: 0
 26907                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 26908  003298  0E00               	movlw	0
 26909  00329A  6FBF               	movwf	(_outPipes+3)& (0+255),b	;volatile
 26910                           
 26911                           ; BSR set to: 0
 26912                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 26913  00329C  0E00               	movlw	0
 26914  00329E  6FC1               	movwf	(_outPipes+5)& (0+255),b	;volatile
 26915  0032A0  0E00               	movlw	0
 26916  0032A2  6FC0               	movwf	(_outPipes+4)& (0+255),b	;volatile
 26917  0032A4                     i2l1934:
 26918                           
 26919                           ; BSR set to: 0
 26920  0032A4  B665               	btfsc	3941,3,c	;volatile
 26921  0032A6  D7F4               	goto	i2l1935
 26922                           
 26923                           ;usb_device.c: 288: }
 26924                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 26925  0032A8  0E01               	movlw	1
 26926  0032AA  6E44               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 26927                           
 26928                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 26929  0032AC  0E01               	movlw	1
 26930  0032AE  6E43               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 26931                           
 26932                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 26933  0032B0  0E00               	movlw	0
 26934  0032B2  6E42               	movwf	_USBDeferINDataStagePackets,c	;volatile
 26935                           
 26936                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 26937  0032B4  0E00               	movlw	0
 26938  0032B6  6E41               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 26939                           
 26940                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 26941  0032B8  0E00               	movlw	0
 26942  0032BA  0101               	movlb	1	; () banked
 26943  0032BC  6F5D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 26944                           
 26945                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 26946  0032BE  0E00               	movlw	0
 26947  0032C0  6E09               	movwf	i2USBDeviceInit@i,c
 26948  0032C2                     i2l11683:
 26949                           
 26950                           ; BSR set to: 1
 26951  0032C2  0E02               	movlw	2
 26952  0032C4  6409               	cpfsgt	i2USBDeviceInit@i,c
 26953  0032C6  D001               	goto	i2l1937
 26954  0032C8  D02E               	goto	i2u1041_40
 26955  0032CA                     i2l1937:
 26956                           
 26957                           ;usb_device.c: 302: {
 26958                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 26959                           
 26960                           ; BSR set to: 1
 26961  0032CA  5009               	movf	i2USBDeviceInit@i,w,c
 26962  0032CC  0D02               	mullw	2
 26963  0032CE  0ECA               	movlw	low _pBDTEntryIn
 26964  0032D0  24F3               	addwf	prodl,w,c
 26965  0032D2  6ED9               	movwf	fsr2l,c
 26966  0032D4  0E00               	movlw	high _pBDTEntryIn
 26967  0032D6  20F4               	addwfc	prodh,w,c
 26968  0032D8  6EDA               	movwf	fsr2h,c
 26969  0032DA  0E00               	movlw	0
 26970  0032DC  6EDE               	movwf	postinc2,c
 26971  0032DE  0E00               	movlw	0
 26972  0032E0  6EDD               	movwf	postdec2,c
 26973                           
 26974                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 26975  0032E2  5009               	movf	i2USBDeviceInit@i,w,c
 26976  0032E4  0D02               	mullw	2
 26977  0032E6  0E40               	movlw	low _pBDTEntryOut
 26978  0032E8  24F3               	addwf	prodl,w,c
 26979  0032EA  6ED9               	movwf	fsr2l,c
 26980  0032EC  0E01               	movlw	high _pBDTEntryOut
 26981  0032EE  20F4               	addwfc	prodh,w,c
 26982  0032F0  6EDA               	movwf	fsr2h,c
 26983  0032F2  0E00               	movlw	0
 26984  0032F4  6EDE               	movwf	postinc2,c
 26985  0032F6  0E00               	movlw	0
 26986  0032F8  6EDD               	movwf	postdec2,c
 26987                           
 26988                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 26989  0032FA  5009               	movf	i2USBDeviceInit@i,w,c
 26990  0032FC  0D01               	mullw	1
 26991  0032FE  0ED3               	movlw	low _ep_data_in
 26992  003300  24F3               	addwf	prodl,w,c
 26993  003302  6ED9               	movwf	fsr2l,c
 26994  003304  0E00               	movlw	high _ep_data_in
 26995  003306  20F4               	addwfc	prodh,w,c
 26996  003308  6EDA               	movwf	fsr2h,c
 26997  00330A  0E00               	movlw	0
 26998  00330C  6EDF               	movwf	indf2,c
 26999                           
 27000                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 27001  00330E  5009               	movf	i2USBDeviceInit@i,w,c
 27002  003310  0D01               	mullw	1
 27003  003312  0ED0               	movlw	low _ep_data_out
 27004  003314  24F3               	addwf	prodl,w,c
 27005  003316  6ED9               	movwf	fsr2l,c
 27006  003318  0E00               	movlw	high _ep_data_out
 27007  00331A  20F4               	addwfc	prodh,w,c
 27008  00331C  6EDA               	movwf	fsr2h,c
 27009  00331E  0E00               	movlw	0
 27010  003320  6EDF               	movwf	indf2,c
 27011  003322  2A09               	incf	i2USBDeviceInit@i,f,c
 27012  003324  D7CE               	goto	i2l11683
 27013  003326                     i2u1041_40:
 27014                           
 27015                           ;usb_device.c: 307: }
 27016                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 27017  003326  0E08               	movlw	8
 27018  003328  0100               	movlb	0	; () banked
 27019  00332A  6FCA               	movwf	_pBDTEntryIn& (0+255),b
 27020  00332C  0E04               	movlw	4
 27021  00332E  6FCB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 27022                           
 27023                           ; BSR set to: 0
 27024                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 27025  003330  0E16               	movlw	22
 27026  003332  6E6A               	movwf	3946,c	;volatile
 27027                           
 27028                           ; BSR set to: 0
 27029                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 27030  003334  0E04               	movlw	4
 27031  003336  0104               	movlb	4	; () banked
 27032  003338  6F03               	movwf	3,b	;volatile
 27033  00333A  0E30               	movlw	48
 27034  00333C  6F02               	movwf	2,b	;volatile
 27035                           
 27036                           ; BSR set to: 4
 27037                           ;usb_device.c: 315: BDT[0].CNT = 8;
 27038  00333E  0E08               	movlw	8
 27039  003340  6F01               	movwf	1,b	;volatile
 27040                           
 27041                           ; BSR set to: 4
 27042                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 27043  003342  0E04               	movlw	4
 27044  003344  6F00               	movwf	0,b	;volatile
 27045                           
 27046                           ; BSR set to: 4
 27047                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 27048  003346  8F00               	bsf	0,7,b	;volatile
 27049                           
 27050                           ; BSR set to: 4
 27051                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 27052  003348  0E00               	movlw	0
 27053  00334A  6E5A               	movwf	_USBActiveConfiguration,c	;volatile
 27054                           
 27055                           ; BSR set to: 4
 27056                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 27057  00334C  0E00               	movlw	0
 27058  00334E  0100               	movlb	0	; () banked
 27059  003350  6FEB               	movwf	_USBDeviceState& (0+255),b	;volatile
 27060                           
 27061                           ; BSR set to: 0
 27062  003352  0012               	return		;funcret
 27063  003354                     __end_ofi2_USBDeviceInit:
 27064                           	opt stack 0
 27065                           pclatu	equ	0xFFB
 27066                           pclath	equ	0xFFA
 27067                           tblptru	equ	0xFF8
 27068                           tblptrh	equ	0xFF7
 27069                           tblptrl	equ	0xFF6
 27070                           tablat	equ	0xFF5
 27071                           prodh	equ	0xFF4
 27072                           prodl	equ	0xFF3
 27073                           intcon	equ	0xFF2
 27074                           intcon2	equ	0xFF1
 27075                           intcon3	equ	0xFF0
 27076                           indf0	equ	0xFEF
 27077                           postinc0	equ	0xFEE
 27078                           fsr0h	equ	0xFEA
 27079                           fsr0l	equ	0xFE9
 27080                           wreg	equ	0xFE8
 27081                           indf1	equ	0xFE7
 27082                           postdec1	equ	0xFE5
 27083                           fsr1h	equ	0xFE2
 27084                           fsr1l	equ	0xFE1
 27085                           indf2	equ	0xFDF
 27086                           postinc2	equ	0xFDE
 27087                           postdec2	equ	0xFDD
 27088                           plusw2	equ	0xFDB
 27089                           fsr2h	equ	0xFDA
 27090                           fsr2l	equ	0xFD9
 27091                           status	equ	0xFD8
 27092                           
 27093 ;; *************** function _USBWakeFromSuspend *****************
 27094 ;; Defined at:
 27095 ;;		line 1944 in file "../Includes/Usb/Framework/usb_device.c"
 27096 ;; Parameters:    Size  Location     Type
 27097 ;;		None
 27098 ;; Auto vars:     Size  Location     Type
 27099 ;;		None
 27100 ;; Return value:  Size  Location     Type
 27101 ;;                  1    wreg      void 
 27102 ;; Registers used:
 27103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27104 ;; Tracked objects:
 27105 ;;		On entry : 0/0
 27106 ;;		On exit  : 0/0
 27107 ;;		Unchanged: 0/0
 27108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27109 ;;      Params:         0       0       0       0       0       0       0       0       0
 27110 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27111 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27112 ;;      Totals:         0       0       0       0       0       0       0       0       0
 27113 ;;Total ram usage:        0 bytes
 27114 ;; Hardware stack levels used:    1
 27115 ;; Hardware stack levels required when called:    5
 27116 ;; This function calls:
 27117 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27118 ;; This function is called by:
 27119 ;;		_USBDeviceTasks
 27120 ;; This function uses a non-reentrant model
 27121 ;;
 27122                           
 27123                           	psect	text116
 27124  005E14                     __ptext116:
 27125                           	opt stack 0
 27126  005E14                     _USBWakeFromSuspend:
 27127                           	opt stack 14
 27128                           
 27129                           ;usb_device.c: 1946: USBBusIsSuspended = 0;
 27130                           
 27131                           ; BSR set to: 0
 27132                           ;incstack = 0
 27133  005E14  0E00               	movlw	0
 27134  005E16  0101               	movlb	1	; () banked
 27135  005E18  6F5D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 27136                           
 27137                           ; BSR set to: 1
 27138                           ;usb_device.c: 1952: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 27139  005E1A  0E00               	movlw	0
 27140  005E1C  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27141  005E1E  0E74               	movlw	116
 27142  005E20  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27143  005E22  0E00               	movlw	0
 27144  005E24  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 27145  005E26  0E00               	movlw	0
 27146  005E28  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 27147  005E2A  0E00               	movlw	0
 27148  005E2C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27149  005E2E  0E00               	movlw	0
 27150  005E30  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27151  005E32  EC2D  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27152                           
 27153                           ;usb_device.c: 1958: UCONbits.SUSPND = 0;
 27154  005E36  9260               	bcf	3936,1,c	;volatile
 27155                           
 27156                           ;usb_device.c: 1960: UIEbits.ACTVIE = 0;
 27157  005E38  9464               	bcf	3940,2,c	;volatile
 27158                           
 27159                           ;usb_device.c: 1976: while(UIRbits.ACTVIF)
 27160  005E3A  D001               	goto	i2l2103
 27161  005E3C                     
 27162                           ;usb_device.c: 1977: {
 27163                           ;usb_device.c: 1978: (UIR &= 0xFB);
 27164  005E3C  9465               	bcf	3941,2,c	;volatile
 27165  005E3E                     i2l2103:
 27166  005E3E  A465               	btfss	3941,2,c	;volatile
 27167  005E40  0012               	return	
 27168  005E42  D7FC               	goto	i2l2104
 27169  005E44                     __end_of_USBWakeFromSuspend:
 27170                           	opt stack 0
 27171                           pclatu	equ	0xFFB
 27172                           pclath	equ	0xFFA
 27173                           tblptru	equ	0xFF8
 27174                           tblptrh	equ	0xFF7
 27175                           tblptrl	equ	0xFF6
 27176                           tablat	equ	0xFF5
 27177                           prodh	equ	0xFF4
 27178                           prodl	equ	0xFF3
 27179                           intcon	equ	0xFF2
 27180                           intcon2	equ	0xFF1
 27181                           intcon3	equ	0xFF0
 27182                           indf0	equ	0xFEF
 27183                           postinc0	equ	0xFEE
 27184                           fsr0h	equ	0xFEA
 27185                           fsr0l	equ	0xFE9
 27186                           wreg	equ	0xFE8
 27187                           indf1	equ	0xFE7
 27188                           postdec1	equ	0xFE5
 27189                           fsr1h	equ	0xFE2
 27190                           fsr1l	equ	0xFE1
 27191                           indf2	equ	0xFDF
 27192                           postinc2	equ	0xFDE
 27193                           postdec2	equ	0xFDD
 27194                           plusw2	equ	0xFDB
 27195                           fsr2h	equ	0xFDA
 27196                           fsr2l	equ	0xFD9
 27197                           status	equ	0xFD8
 27198                           
 27199 ;; *************** function _USBSuspend *****************
 27200 ;; Defined at:
 27201 ;;		line 1889 in file "../Includes/Usb/Framework/usb_device.c"
 27202 ;; Parameters:    Size  Location     Type
 27203 ;;		None
 27204 ;; Auto vars:     Size  Location     Type
 27205 ;;		None
 27206 ;; Return value:  Size  Location     Type
 27207 ;;                  1    wreg      void 
 27208 ;; Registers used:
 27209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27210 ;; Tracked objects:
 27211 ;;		On entry : 0/0
 27212 ;;		On exit  : 0/0
 27213 ;;		Unchanged: 0/0
 27214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27215 ;;      Params:         0       0       0       0       0       0       0       0       0
 27216 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27217 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27218 ;;      Totals:         0       0       0       0       0       0       0       0       0
 27219 ;;Total ram usage:        0 bytes
 27220 ;; Hardware stack levels used:    1
 27221 ;; Hardware stack levels required when called:    5
 27222 ;; This function calls:
 27223 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27224 ;; This function is called by:
 27225 ;;		_USBDeviceTasks
 27226 ;; This function uses a non-reentrant model
 27227 ;;
 27228                           
 27229                           	psect	text117
 27230  005F56                     __ptext117:
 27231                           	opt stack 0
 27232  005F56                     _USBSuspend:
 27233                           	opt stack 14
 27234                           
 27235                           ;usb_device.c: 1914: UIEbits.ACTVIE = 1;
 27236                           
 27237                           ;incstack = 0
 27238  005F56  8464               	bsf	3940,2,c	;volatile
 27239                           
 27240                           ;usb_device.c: 1915: (UIR &= 0xEF);
 27241  005F58  9865               	bcf	3941,4,c	;volatile
 27242                           
 27243                           ;usb_device.c: 1917: UCONbits.SUSPND = 1;
 27244  005F5A  8260               	bsf	3936,1,c	;volatile
 27245                           
 27246                           ;usb_device.c: 1919: USBBusIsSuspended = 1;
 27247  005F5C  0E01               	movlw	1
 27248  005F5E  0101               	movlb	1	; () banked
 27249  005F60  6F5D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 27250                           
 27251                           ; BSR set to: 1
 27252                           ;usb_device.c: 1926: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 27253  005F62  0E00               	movlw	0
 27254  005F64  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27255  005F66  0E75               	movlw	117
 27256  005F68  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27257  005F6A  0E00               	movlw	0
 27258  005F6C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 27259  005F6E  0E00               	movlw	0
 27260  005F70  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 27261  005F72  0E00               	movlw	0
 27262  005F74  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27263  005F76  0E00               	movlw	0
 27264  005F78  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27265  005F7A  EC2D  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27266  005F7E  0012               	return		;funcret
 27267  005F80                     __end_of_USBSuspend:
 27268                           	opt stack 0
 27269                           pclatu	equ	0xFFB
 27270                           pclath	equ	0xFFA
 27271                           tblptru	equ	0xFF8
 27272                           tblptrh	equ	0xFF7
 27273                           tblptrl	equ	0xFF6
 27274                           tablat	equ	0xFF5
 27275                           prodh	equ	0xFF4
 27276                           prodl	equ	0xFF3
 27277                           intcon	equ	0xFF2
 27278                           intcon2	equ	0xFF1
 27279                           intcon3	equ	0xFF0
 27280                           indf0	equ	0xFEF
 27281                           postinc0	equ	0xFEE
 27282                           fsr0h	equ	0xFEA
 27283                           fsr0l	equ	0xFE9
 27284                           wreg	equ	0xFE8
 27285                           indf1	equ	0xFE7
 27286                           postdec1	equ	0xFE5
 27287                           fsr1h	equ	0xFE2
 27288                           fsr1l	equ	0xFE1
 27289                           indf2	equ	0xFDF
 27290                           postinc2	equ	0xFDE
 27291                           postdec2	equ	0xFDD
 27292                           plusw2	equ	0xFDB
 27293                           fsr2h	equ	0xFDA
 27294                           fsr2l	equ	0xFD9
 27295                           status	equ	0xFD8
 27296                           
 27297 ;; *************** function _USBStallHandler *****************
 27298 ;; Defined at:
 27299 ;;		line 1846 in file "../Includes/Usb/Framework/usb_device.c"
 27300 ;; Parameters:    Size  Location     Type
 27301 ;;		None
 27302 ;; Auto vars:     Size  Location     Type
 27303 ;;		None
 27304 ;; Return value:  Size  Location     Type
 27305 ;;                  1    wreg      void 
 27306 ;; Registers used:
 27307 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27308 ;; Tracked objects:
 27309 ;;		On entry : 0/0
 27310 ;;		On exit  : 0/0
 27311 ;;		Unchanged: 0/0
 27312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27313 ;;      Params:         0       0       0       0       0       0       0       0       0
 27314 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27315 ;;      Temps:          1       0       0       0       0       0       0       0       0
 27316 ;;      Totals:         1       0       0       0       0       0       0       0       0
 27317 ;;Total ram usage:        1 bytes
 27318 ;; Hardware stack levels used:    1
 27319 ;; This function calls:
 27320 ;;		Nothing
 27321 ;; This function is called by:
 27322 ;;		_USBDeviceTasks
 27323 ;; This function uses a non-reentrant model
 27324 ;;
 27325                           
 27326                           	psect	text118
 27327  005A20                     __ptext118:
 27328                           	opt stack 0
 27329  005A20                     _USBStallHandler:
 27330                           	opt stack 19
 27331                           
 27332                           ;usb_device.c: 1858: if(UEP0bits.EPSTALL == 1)
 27333                           
 27334                           ;incstack = 0
 27335  005A20  A06A               	btfss	3946,0,c	;volatile
 27336  005A22  D01D               	goto	i2l2095
 27337                           
 27338                           ;usb_device.c: 1859: {
 27339                           ;usb_device.c: 1861: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 27340  005A24  C036  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 27341  005A28  C037  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 27342  005A2C  0E80               	movlw	128
 27343  005A2E  18DE               	xorwf	postinc2,w,c
 27344  005A30  A4D8               	btfss	status,2,c
 27345  005A32  D014               	goto	i2l2096
 27346  005A34  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 27347  005A38  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27348  005A3C  0E84               	movlw	132
 27349  005A3E  18DE               	xorwf	postinc2,w,c
 27350  005A40  A4D8               	btfss	status,2,c
 27351  005A42  D00C               	goto	i2l2096
 27352                           
 27353                           ;usb_device.c: 1862: {
 27354                           ;usb_device.c: 1864: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 27355  005A44  C036  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 27356  005A48  C037  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 27357  005A4C  0E0C               	movlw	12
 27358  005A4E  6EDF               	movwf	indf2,c
 27359                           
 27360                           ;usb_device.c: 1865: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 27361  005A50  C036  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 27362  005A54  C037  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 27363  005A58  0E00               	movlw	0
 27364  005A5A  8EDB               	bsf	plusw2,7,c
 27365  005A5C                     i2l2096:
 27366                           
 27367                           ;usb_device.c: 1866: }
 27368                           ;usb_device.c: 1867: UEP0bits.EPSTALL = 0;
 27369  005A5C  906A               	bcf	3946,0,c	;volatile
 27370  005A5E                     i2l2095:
 27371                           
 27372                           ;usb_device.c: 1868: }
 27373                           ;usb_device.c: 1870: (UIR &= 0xDF);
 27374  005A5E  9A65               	bcf	3941,5,c	;volatile
 27375  005A60  0012               	return		;funcret
 27376  005A62                     __end_of_USBStallHandler:
 27377                           	opt stack 0
 27378                           pclatu	equ	0xFFB
 27379                           pclath	equ	0xFFA
 27380                           tblptru	equ	0xFF8
 27381                           tblptrh	equ	0xFF7
 27382                           tblptrl	equ	0xFF6
 27383                           tablat	equ	0xFF5
 27384                           prodh	equ	0xFF4
 27385                           prodl	equ	0xFF3
 27386                           intcon	equ	0xFF2
 27387                           intcon2	equ	0xFF1
 27388                           intcon3	equ	0xFF0
 27389                           indf0	equ	0xFEF
 27390                           postinc0	equ	0xFEE
 27391                           fsr0h	equ	0xFEA
 27392                           fsr0l	equ	0xFE9
 27393                           wreg	equ	0xFE8
 27394                           indf1	equ	0xFE7
 27395                           postdec1	equ	0xFE5
 27396                           fsr1h	equ	0xFE2
 27397                           fsr1l	equ	0xFE1
 27398                           indf2	equ	0xFDF
 27399                           postinc2	equ	0xFDE
 27400                           postdec2	equ	0xFDD
 27401                           plusw2	equ	0xFDB
 27402                           fsr2h	equ	0xFDA
 27403                           fsr2l	equ	0xFD9
 27404                           status	equ	0xFD8
 27405                           
 27406 ;; *************** function _USBCtrlEPService *****************
 27407 ;; Defined at:
 27408 ;;		line 2004 in file "../Includes/Usb/Framework/usb_device.c"
 27409 ;; Parameters:    Size  Location     Type
 27410 ;;		None
 27411 ;; Auto vars:     Size  Location     Type
 27412 ;;  setup_cnt       1   29[COMRAM] unsigned char 
 27413 ;; Return value:  Size  Location     Type
 27414 ;;                  1    wreg      void 
 27415 ;; Registers used:
 27416 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 27417 ;; Tracked objects:
 27418 ;;		On entry : 0/0
 27419 ;;		On exit  : 0/0
 27420 ;;		Unchanged: 0/0
 27421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27422 ;;      Params:         0       0       0       0       0       0       0       0       0
 27423 ;;      Locals:         1       0       0       0       0       0       0       0       0
 27424 ;;      Temps:          2       0       0       0       0       0       0       0       0
 27425 ;;      Totals:         3       0       0       0       0       0       0       0       0
 27426 ;;Total ram usage:        3 bytes
 27427 ;; Hardware stack levels used:    1
 27428 ;; Hardware stack levels required when called:    8
 27429 ;; This function calls:
 27430 ;;		_USBCtrlTrfInHandler
 27431 ;;		_USBCtrlTrfOutHandler
 27432 ;;		_USBCtrlTrfSetupHandler
 27433 ;; This function is called by:
 27434 ;;		_USBDeviceTasks
 27435 ;; This function uses a non-reentrant model
 27436 ;;
 27437                           
 27438                           	psect	text119
 27439  00411E                     __ptext119:
 27440                           	opt stack 0
 27441  00411E                     _USBCtrlEPService:
 27442                           	opt stack 11
 27443                           
 27444                           ;usb_device.c: 2009: USBStatusStageTimeoutCounter = (uint8_t)45;
 27445                           
 27446                           ;incstack = 0
 27447  00411E  0E2D               	movlw	45
 27448  004120  6E46               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 27449                           
 27450                           ;usb_device.c: 2012: if((USTATcopy.Val & ~0x02) == 0x00)
 27451  004122  C059  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 27452  004126  0EFD               	movlw	253
 27453  004128  161C               	andwf	??_USBCtrlEPService,f,c
 27454  00412A  A4D8               	btfss	status,2,c
 27455  00412C  D057               	goto	i2l2109
 27456                           
 27457                           ;usb_device.c: 2013: {
 27458                           ;usb_device.c: 2015: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 27459  00412E  C059  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 27460  004132  90D8               	bcf	status,0,c
 27461  004134  321C               	rrcf	??_USBCtrlEPService,f,c
 27462  004136  0E3F               	movlw	63
 27463  004138  161C               	andwf	??_USBCtrlEPService,f,c
 27464  00413A  501C               	movf	??_USBCtrlEPService,w,c
 27465  00413C  0D04               	mullw	4
 27466  00413E  0E00               	movlw	0
 27467  004140  24F3               	addwf	prodl,w,c
 27468  004142  6E36               	movwf	_pBDTEntryEP0OutCurrent,c
 27469  004144  0E04               	movlw	4
 27470  004146  20F4               	addwfc	prodh,w,c
 27471  004148  6E37               	movwf	_pBDTEntryEP0OutCurrent+1,c
 27472                           
 27473                           ;usb_device.c: 2019: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 27474  00414A  C036  F034         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 27475  00414E  C037  F035         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 27476                           
 27477                           ;usb_device.c: 2021: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 27478  004152  0E04               	movlw	4
 27479  004154  1A34               	xorwf	_pBDTEntryEP0OutNext,f,c
 27480                           
 27481                           ;usb_device.c: 2024: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 27482  004156  C036  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 27483  00415A  C037  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 27484  00415E  30DF               	rrcf	indf2,w,c
 27485  004160  32E8               	rrcf	wreg,f,c
 27486  004162  0B0F               	andlw	15
 27487  004164  0A0D               	xorlw	13
 27488  004166  A4D8               	btfss	status,2,c
 27489  004168  D036               	goto	i2l2110
 27490                           
 27491                           ;usb_device.c: 2025: {
 27492                           ;usb_device.c: 2026: unsigned char setup_cnt;
 27493                           ;usb_device.c: 2032: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 27494  00416A  0E00               	movlw	0
 27495  00416C  6E1E               	movwf	USBCtrlEPService@setup_cnt,c
 27496  00416E                     i2l11617:
 27497  00416E  0E07               	movlw	7
 27498  004170  641E               	cpfsgt	USBCtrlEPService@setup_cnt,c
 27499  004172  D001               	goto	i2l2111
 27500  004174  D023               	goto	i2u1035_40
 27501  004176                     i2l2111:
 27502                           
 27503                           ;usb_device.c: 2033: {
 27504                           ;usb_device.c: 2034: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 27505  004176  EE20 F002          	lfsr	2,2
 27506  00417A  5036               	movf	_pBDTEntryEP0OutCurrent,w,c
 27507  00417C  26D9               	addwf	fsr2l,f,c
 27508  00417E  5037               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 27509  004180  22DA               	addwfc	fsr2h,f,c
 27510  004182  CFDE F01C          	movff	postinc2,??_USBCtrlEPService
 27511  004186  CFDD F01D          	movff	postdec2,??_USBCtrlEPService+1
 27512  00418A  C01C  FFD9         	movff	??_USBCtrlEPService,fsr2l
 27513  00418E  C01D  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 27514  004192  501E               	movf	USBCtrlEPService@setup_cnt,w,c
 27515  004194  0D01               	mullw	1
 27516  004196  0E30               	movlw	48
 27517  004198  24F3               	addwf	prodl,w,c
 27518  00419A  6EE1               	movwf	fsr1l,c
 27519  00419C  0E04               	movlw	4
 27520  00419E  20F4               	addwfc	prodh,w,c
 27521  0041A0  6EE2               	movwf	fsr1h,c
 27522  0041A2  CFDF FFE7          	movff	indf2,indf1
 27523                           
 27524                           ;usb_device.c: 2035: pBDTEntryEP0OutCurrent->ADR++;
 27525  0041A6  EE20 F002          	lfsr	2,2
 27526  0041AA  5036               	movf	_pBDTEntryEP0OutCurrent,w,c
 27527  0041AC  26D9               	addwf	fsr2l,f,c
 27528  0041AE  5037               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 27529  0041B0  22DA               	addwfc	fsr2h,f,c
 27530  0041B2  2ADE               	incf	postinc2,f,c
 27531  0041B4  0E00               	movlw	0
 27532  0041B6  22DD               	addwfc	postdec2,f,c
 27533  0041B8  2A1E               	incf	USBCtrlEPService@setup_cnt,f,c
 27534  0041BA  D7D9               	goto	i2l11617
 27535  0041BC                     i2u1035_40:
 27536                           
 27537                           ;usb_device.c: 2036: }
 27538                           ;usb_device.c: 2037: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 27539  0041BC  EE20 F002          	lfsr	2,2
 27540  0041C0  5036               	movf	_pBDTEntryEP0OutCurrent,w,c
 27541  0041C2  26D9               	addwf	fsr2l,f,c
 27542  0041C4  5037               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 27543  0041C6  22DA               	addwfc	fsr2h,f,c
 27544  0041C8  0E30               	movlw	48
 27545  0041CA  6EDE               	movwf	postinc2,c
 27546  0041CC  0E04               	movlw	4
 27547  0041CE  6EDD               	movwf	postdec2,c
 27548                           
 27549                           ;usb_device.c: 2040: USBCtrlTrfSetupHandler();
 27550  0041D0  ECD6  F027         	call	_USBCtrlTrfSetupHandler	;wreg free
 27551                           
 27552                           ;usb_device.c: 2041: }
 27553  0041D4  0012               	return	
 27554  0041D6                     i2l2110:
 27555                           
 27556                           ;usb_device.c: 2042: else
 27557                           ;usb_device.c: 2043: {
 27558                           ;usb_device.c: 2045: USBCtrlTrfOutHandler();
 27559  0041D6  EC5B  F02B         	call	_USBCtrlTrfOutHandler	;wreg free
 27560                           
 27561                           ;usb_device.c: 2046: }
 27562                           ;usb_device.c: 2047: }
 27563  0041DA  0012               	return	
 27564  0041DC                     i2l2109:
 27565                           
 27566                           ;usb_device.c: 2048: else if((USTATcopy.Val & ~0x02) == 0x04)
 27567  0041DC  5059               	movf	_USTATcopy,w,c	;volatile
 27568  0041DE  0BFD               	andlw	253
 27569  0041E0  0A04               	xorlw	4
 27570  0041E2  A4D8               	btfss	status,2,c
 27571  0041E4  0012               	return	
 27572                           
 27573                           ;usb_device.c: 2049: {
 27574                           ;usb_device.c: 2052: USBCtrlTrfInHandler();
 27575  0041E6  ECE5  F01E         	call	_USBCtrlTrfInHandler	;wreg free
 27576  0041EA  0012               	return	
 27577  0041EC                     __end_of_USBCtrlEPService:
 27578                           	opt stack 0
 27579                           pclatu	equ	0xFFB
 27580                           pclath	equ	0xFFA
 27581                           tblptru	equ	0xFF8
 27582                           tblptrh	equ	0xFF7
 27583                           tblptrl	equ	0xFF6
 27584                           tablat	equ	0xFF5
 27585                           prodh	equ	0xFF4
 27586                           prodl	equ	0xFF3
 27587                           intcon	equ	0xFF2
 27588                           intcon2	equ	0xFF1
 27589                           intcon3	equ	0xFF0
 27590                           indf0	equ	0xFEF
 27591                           postinc0	equ	0xFEE
 27592                           fsr0h	equ	0xFEA
 27593                           fsr0l	equ	0xFE9
 27594                           wreg	equ	0xFE8
 27595                           indf1	equ	0xFE7
 27596                           postdec1	equ	0xFE5
 27597                           fsr1h	equ	0xFE2
 27598                           fsr1l	equ	0xFE1
 27599                           indf2	equ	0xFDF
 27600                           postinc2	equ	0xFDE
 27601                           postdec2	equ	0xFDD
 27602                           plusw2	equ	0xFDB
 27603                           fsr2h	equ	0xFDA
 27604                           fsr2l	equ	0xFD9
 27605                           status	equ	0xFD8
 27606                           
 27607 ;; *************** function _USBCtrlTrfSetupHandler *****************
 27608 ;; Defined at:
 27609 ;;		line 2097 in file "../Includes/Usb/Framework/usb_device.c"
 27610 ;; Parameters:    Size  Location     Type
 27611 ;;		None
 27612 ;; Auto vars:     Size  Location     Type
 27613 ;;		None
 27614 ;; Return value:  Size  Location     Type
 27615 ;;                  1    wreg      void 
 27616 ;; Registers used:
 27617 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27618 ;; Tracked objects:
 27619 ;;		On entry : 0/0
 27620 ;;		On exit  : 0/0
 27621 ;;		Unchanged: 0/0
 27622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27623 ;;      Params:         0       0       0       0       0       0       0       0       0
 27624 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27625 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27626 ;;      Totals:         0       0       0       0       0       0       0       0       0
 27627 ;;Total ram usage:        0 bytes
 27628 ;; Hardware stack levels used:    1
 27629 ;; Hardware stack levels required when called:    7
 27630 ;; This function calls:
 27631 ;;		_USBCheckStdRequest
 27632 ;;		_USBCtrlEPServiceComplete
 27633 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27634 ;; This function is called by:
 27635 ;;		_USBCtrlEPService
 27636 ;; This function uses a non-reentrant model
 27637 ;;
 27638                           
 27639                           	psect	text120
 27640  004FAC                     __ptext120:
 27641                           	opt stack 0
 27642  004FAC                     _USBCtrlTrfSetupHandler:
 27643                           	opt stack 11
 27644                           
 27645                           ;usb_device.c: 2102: shortPacketStatus = 0;
 27646                           
 27647                           ;incstack = 0
 27648  004FAC  0E00               	movlw	0
 27649  004FAE  6E4B               	movwf	_shortPacketStatus,c	;volatile
 27650                           
 27651                           ;usb_device.c: 2103: USBDeferStatusStagePacket = 0;
 27652  004FB0  0E00               	movlw	0
 27653  004FB2  6E45               	movwf	_USBDeferStatusStagePacket,c	;volatile
 27654                           
 27655                           ;usb_device.c: 2104: USBDeferINDataStagePackets = 0;
 27656  004FB4  0E00               	movlw	0
 27657  004FB6  6E42               	movwf	_USBDeferINDataStagePackets,c	;volatile
 27658                           
 27659                           ;usb_device.c: 2105: USBDeferOUTDataStagePackets = 0;
 27660  004FB8  0E00               	movlw	0
 27661  004FBA  6E41               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 27662                           
 27663                           ;usb_device.c: 2106: BothEP0OutUOWNsSet = 0;
 27664  004FBC  0E00               	movlw	0
 27665  004FBE  6E47               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 27666                           
 27667                           ;usb_device.c: 2107: controlTransferState = 0;
 27668  004FC0  0E00               	movlw	0
 27669  004FC2  6E4A               	movwf	_controlTransferState,c	;volatile
 27670                           
 27671                           ;usb_device.c: 2116: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 27672  004FC4  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 27673  004FC8  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27674  004FCC  0E7F               	movlw	127
 27675  004FCE  16DF               	andwf	indf2,f,c
 27676                           
 27677                           ;usb_device.c: 2117: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 27678  004FD0  0E04               	movlw	4
 27679  004FD2  0100               	movlb	0	; () banked
 27680  004FD4  1BCA               	xorwf	_pBDTEntryIn& (0+255),f,b
 27681                           
 27682                           ; BSR set to: 0
 27683                           ;usb_device.c: 2118: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 27684  004FD6  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 27685  004FDA  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27686  004FDE  0E7F               	movlw	127
 27687  004FE0  16DF               	andwf	indf2,f,c
 27688                           
 27689                           ; BSR set to: 0
 27690                           ;usb_device.c: 2119: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 27691  004FE2  0E04               	movlw	4
 27692  004FE4  1BCA               	xorwf	_pBDTEntryIn& (0+255),f,b
 27693                           
 27694                           ; BSR set to: 0
 27695                           ;usb_device.c: 2120: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 27696  004FE6  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27697  004FEA  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27698  004FEE  0E7F               	movlw	127
 27699  004FF0  16DF               	andwf	indf2,f,c
 27700                           
 27701                           ; BSR set to: 0
 27702                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 27703  004FF2  0E00               	movlw	0
 27704  004FF4  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27705                           
 27706                           ; BSR set to: 0
 27707                           ;usb_device.c: 2123: inPipes[0].wCount.Val = 0;
 27708  004FF6  0E00               	movlw	0
 27709  004FF8  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27710  004FFA  0E00               	movlw	0
 27711  004FFC  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27712                           
 27713                           ; BSR set to: 0
 27714                           ;usb_device.c: 2124: outPipes[0].info.Val = 0;
 27715  004FFE  0E00               	movlw	0
 27716  005000  6FBF               	movwf	(_outPipes+3)& (0+255),b	;volatile
 27717                           
 27718                           ; BSR set to: 0
 27719                           ;usb_device.c: 2125: outPipes[0].wCount.Val = 0;
 27720  005002  0E00               	movlw	0
 27721  005004  6FC1               	movwf	(_outPipes+5)& (0+255),b	;volatile
 27722  005006  0E00               	movlw	0
 27723  005008  6FC0               	movwf	(_outPipes+4)& (0+255),b	;volatile
 27724                           
 27725                           ; BSR set to: 0
 27726                           ;usb_device.c: 2131: USBCheckStdRequest();
 27727  00500A  EC24  F01D         	call	_USBCheckStdRequest	;wreg free
 27728                           
 27729                           ;usb_device.c: 2132: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 27730  00500E  0E00               	movlw	0
 27731  005010  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27732  005012  0E03               	movlw	3
 27733  005014  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27734  005016  0E00               	movlw	0
 27735  005018  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 27736  00501A  0E00               	movlw	0
 27737  00501C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 27738  00501E  0E00               	movlw	0
 27739  005020  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27740  005022  0E00               	movlw	0
 27741  005024  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27742  005026  EC2D  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27743                           
 27744                           ;usb_device.c: 2145: USBCtrlEPServiceComplete();
 27745  00502A  ECC2  F01B         	call	_USBCtrlEPServiceComplete	;wreg free
 27746  00502E  0012               	return		;funcret
 27747  005030                     __end_of_USBCtrlTrfSetupHandler:
 27748                           	opt stack 0
 27749                           pclatu	equ	0xFFB
 27750                           pclath	equ	0xFFA
 27751                           tblptru	equ	0xFF8
 27752                           tblptrh	equ	0xFF7
 27753                           tblptrl	equ	0xFF6
 27754                           tablat	equ	0xFF5
 27755                           prodh	equ	0xFF4
 27756                           prodl	equ	0xFF3
 27757                           intcon	equ	0xFF2
 27758                           intcon2	equ	0xFF1
 27759                           intcon3	equ	0xFF0
 27760                           indf0	equ	0xFEF
 27761                           postinc0	equ	0xFEE
 27762                           fsr0h	equ	0xFEA
 27763                           fsr0l	equ	0xFE9
 27764                           wreg	equ	0xFE8
 27765                           indf1	equ	0xFE7
 27766                           postdec1	equ	0xFE5
 27767                           fsr1h	equ	0xFE2
 27768                           fsr1l	equ	0xFE1
 27769                           indf2	equ	0xFDF
 27770                           postinc2	equ	0xFDE
 27771                           postdec2	equ	0xFDD
 27772                           plusw2	equ	0xFDB
 27773                           fsr2h	equ	0xFDA
 27774                           fsr2l	equ	0xFD9
 27775                           status	equ	0xFD8
 27776                           
 27777 ;; *************** function _USBCtrlEPServiceComplete *****************
 27778 ;; Defined at:
 27779 ;;		line 1282 in file "../Includes/Usb/Framework/usb_device.c"
 27780 ;; Parameters:    Size  Location     Type
 27781 ;;		None
 27782 ;; Auto vars:     Size  Location     Type
 27783 ;;		None
 27784 ;; Return value:  Size  Location     Type
 27785 ;;                  1    wreg      void 
 27786 ;; Registers used:
 27787 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27788 ;; Tracked objects:
 27789 ;;		On entry : 0/0
 27790 ;;		On exit  : 0/0
 27791 ;;		Unchanged: 0/0
 27792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27793 ;;      Params:         0       0       0       0       0       0       0       0       0
 27794 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27795 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27796 ;;      Totals:         0       0       0       0       0       0       0       0       0
 27797 ;;Total ram usage:        0 bytes
 27798 ;; Hardware stack levels used:    1
 27799 ;; Hardware stack levels required when called:    2
 27800 ;; This function calls:
 27801 ;;		_USBCtrlEPAllowDataStage
 27802 ;;		_USBCtrlEPAllowStatusStage
 27803 ;; This function is called by:
 27804 ;;		_USBCtrlTrfSetupHandler
 27805 ;; This function uses a non-reentrant model
 27806 ;;
 27807                           
 27808                           	psect	text121
 27809  003784                     __ptext121:
 27810                           	opt stack 0
 27811  003784                     _USBCtrlEPServiceComplete:
 27812                           	opt stack 15
 27813                           
 27814                           ;usb_device.c: 1288: UCONbits.PKTDIS = 0;
 27815                           
 27816                           ;incstack = 0
 27817  003784  9860               	bcf	3936,4,c	;volatile
 27818                           
 27819                           ;usb_device.c: 1294: if(inPipes[0].info.bits.busy == 0)
 27820  003786  0100               	movlb	0	; () banked
 27821  003788  BFC7               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 27822  00378A  D038               	goto	i2l2019
 27823                           
 27824                           ; BSR set to: 0
 27825                           ;usb_device.c: 1295: {
 27826                           ;usb_device.c: 1296: if(outPipes[0].info.bits.busy == 1)
 27827  00378C  AFBF               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 27828  00378E  D00B               	goto	i2l2020
 27829                           
 27830                           ; BSR set to: 0
 27831                           ;usb_device.c: 1297: {
 27832                           ;usb_device.c: 1298: controlTransferState = 2;
 27833  003790  0E02               	movlw	2
 27834  003792  6E4A               	movwf	_controlTransferState,c	;volatile
 27835                           
 27836                           ;usb_device.c: 1309: if(USBDeferOUTDataStagePackets == 0)
 27837  003794  5041               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 27838  003796  B4D8               	btfsc	status,2,c
 27839                           
 27840                           ; BSR set to: 0
 27841                           ;usb_device.c: 1310: {
 27842                           ;usb_device.c: 1311: USBCtrlEPAllowDataStage();
 27843  003798  EC9D  F025         	call	_USBCtrlEPAllowDataStage	;wreg free
 27844                           
 27845                           ;usb_device.c: 1312: }
 27846                           ;usb_device.c: 1316: USBStatusStageEnabledFlag2 = 0;
 27847  00379C  0E00               	movlw	0
 27848  00379E  6E43               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 27849                           
 27850                           ;usb_device.c: 1317: USBStatusStageEnabledFlag1 = 0;
 27851  0037A0  0E00               	movlw	0
 27852  0037A2  6E44               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 27853                           
 27854                           ;usb_device.c: 1318: }
 27855  0037A4  0012               	return	
 27856  0037A6                     i2l2020:
 27857                           
 27858                           ;usb_device.c: 1319: else
 27859                           ;usb_device.c: 1320: {
 27860                           ;usb_device.c: 1325: pBDTEntryEP0OutNext->CNT = 8;
 27861  0037A6  EE20 F001          	lfsr	2,1
 27862  0037AA  5034               	movf	_pBDTEntryEP0OutNext,w,c
 27863  0037AC  26D9               	addwf	fsr2l,f,c
 27864  0037AE  5035               	movf	_pBDTEntryEP0OutNext+1,w,c
 27865  0037B0  22DA               	addwfc	fsr2h,f,c
 27866  0037B2  0E08               	movlw	8
 27867  0037B4  6EDF               	movwf	indf2,c
 27868                           
 27869                           ;usb_device.c: 1326: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 27870  0037B6  EE20 F002          	lfsr	2,2
 27871  0037BA  5034               	movf	_pBDTEntryEP0OutNext,w,c
 27872  0037BC  26D9               	addwf	fsr2l,f,c
 27873  0037BE  5035               	movf	_pBDTEntryEP0OutNext+1,w,c
 27874  0037C0  22DA               	addwfc	fsr2h,f,c
 27875  0037C2  0E30               	movlw	48
 27876  0037C4  6EDE               	movwf	postinc2,c
 27877  0037C6  0E04               	movlw	4
 27878  0037C8  6EDD               	movwf	postdec2,c
 27879                           
 27880                           ;usb_device.c: 1327: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 27881  0037CA  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27882  0037CE  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27883  0037D2  0E0C               	movlw	12
 27884  0037D4  6EDF               	movwf	indf2,c
 27885                           
 27886                           ;usb_device.c: 1328: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 27887  0037D6  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27888  0037DA  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27889  0037DE  0E00               	movlw	0
 27890  0037E0  8EDB               	bsf	plusw2,7,c
 27891                           
 27892                           ;usb_device.c: 1329: pBDTEntryIn[0]->STAT.Val = 0x04;
 27893  0037E2  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 27894  0037E6  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27895  0037EA  0E04               	movlw	4
 27896  0037EC  6EDF               	movwf	indf2,c
 27897                           
 27898                           ;usb_device.c: 1330: pBDTEntryIn[0]->STAT.Val |= 0x80;
 27899  0037EE  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 27900  0037F2  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27901  0037F6  0E00               	movlw	0
 27902  0037F8  8EDB               	bsf	plusw2,7,c
 27903                           
 27904                           ;usb_device.c: 1331: }
 27905                           ;usb_device.c: 1332: }
 27906  0037FA  0012               	return	
 27907  0037FC                     i2l2019:
 27908                           
 27909                           ; BSR set to: 0
 27910                           ;usb_device.c: 1333: else
 27911                           ;usb_device.c: 1334: {
 27912                           ;usb_device.c: 1335: if(SetupPkt.DataDir == (0x80>>7))
 27913  0037FC  0104               	movlb	4	; () banked
 27914  0037FE  AF30               	btfss	48,7,b	;volatile
 27915  003800  D010               	goto	i2l2024
 27916                           
 27917                           ; BSR set to: 4
 27918                           ;usb_device.c: 1336: {
 27919                           ;usb_device.c: 1337: controlTransferState = 1;
 27920  003802  0E01               	movlw	1
 27921  003804  6E4A               	movwf	_controlTransferState,c	;volatile
 27922                           
 27923                           ;usb_device.c: 1351: if(USBDeferINDataStagePackets == 0)
 27924  003806  5042               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 27925  003808  B4D8               	btfsc	status,2,c
 27926                           
 27927                           ; BSR set to: 4
 27928                           ;usb_device.c: 1352: {
 27929                           ;usb_device.c: 1353: USBCtrlEPAllowDataStage();
 27930  00380A  EC9D  F025         	call	_USBCtrlEPAllowDataStage	;wreg free
 27931                           
 27932                           ;usb_device.c: 1354: }
 27933                           ;usb_device.c: 1376: USBStatusStageEnabledFlag2 = 0;
 27934  00380E  0E00               	movlw	0
 27935  003810  6E43               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 27936                           
 27937                           ;usb_device.c: 1377: USBStatusStageEnabledFlag1 = 0;
 27938  003812  0E00               	movlw	0
 27939  003814  6E44               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 27940                           
 27941                           ;usb_device.c: 1378: if(USBDeferStatusStagePacket == 0)
 27942  003816  5045               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 27943  003818  A4D8               	btfss	status,2,c
 27944  00381A  0012               	return	
 27945                           
 27946                           ;usb_device.c: 1379: {
 27947                           ;usb_device.c: 1380: USBCtrlEPAllowStatusStage();
 27948  00381C  EC59  F021         	call	_USBCtrlEPAllowStatusStage	;wreg free
 27949                           
 27950                           ;usb_device.c: 1381: }
 27951                           ;usb_device.c: 1382: }
 27952  003820  0012               	return	
 27953  003822                     i2l2024:
 27954                           
 27955                           ;usb_device.c: 1383: else
 27956                           ;usb_device.c: 1384: {
 27957                           ;usb_device.c: 1395: controlTransferState = 2;
 27958  003822  0E02               	movlw	2
 27959  003824  6E4A               	movwf	_controlTransferState,c	;volatile
 27960                           
 27961                           ;usb_device.c: 1398: pBDTEntryEP0OutNext->CNT = 8;
 27962  003826  EE20 F001          	lfsr	2,1
 27963  00382A  5034               	movf	_pBDTEntryEP0OutNext,w,c
 27964  00382C  26D9               	addwf	fsr2l,f,c
 27965  00382E  5035               	movf	_pBDTEntryEP0OutNext+1,w,c
 27966  003830  22DA               	addwfc	fsr2h,f,c
 27967  003832  0E08               	movlw	8
 27968  003834  6EDF               	movwf	indf2,c
 27969                           
 27970                           ;usb_device.c: 1399: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 27971  003836  EE20 F002          	lfsr	2,2
 27972  00383A  5034               	movf	_pBDTEntryEP0OutNext,w,c
 27973  00383C  26D9               	addwf	fsr2l,f,c
 27974  00383E  5035               	movf	_pBDTEntryEP0OutNext+1,w,c
 27975  003840  22DA               	addwfc	fsr2h,f,c
 27976  003842  0E30               	movlw	48
 27977  003844  6EDE               	movwf	postinc2,c
 27978  003846  0E04               	movlw	4
 27979  003848  6EDD               	movwf	postdec2,c
 27980                           
 27981                           ;usb_device.c: 1400: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 27982  00384A  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27983  00384E  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27984  003852  0E04               	movlw	4
 27985  003854  6EDF               	movwf	indf2,c
 27986                           
 27987                           ;usb_device.c: 1401: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 27988  003856  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27989  00385A  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27990  00385E  0E00               	movlw	0
 27991  003860  8EDB               	bsf	plusw2,7,c
 27992                           
 27993                           ;usb_device.c: 1404: USBStatusStageEnabledFlag2 = 0;
 27994  003862  0E00               	movlw	0
 27995  003864  6E43               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 27996                           
 27997                           ;usb_device.c: 1405: USBStatusStageEnabledFlag1 = 0;
 27998  003866  0E00               	movlw	0
 27999  003868  6E44               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 28000                           
 28001                           ;usb_device.c: 1406: if(USBDeferStatusStagePacket == 0)
 28002  00386A  5045               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 28003  00386C  A4D8               	btfss	status,2,c
 28004  00386E  0012               	return	
 28005                           
 28006                           ;usb_device.c: 1407: {
 28007                           ;usb_device.c: 1408: USBCtrlEPAllowStatusStage();
 28008  003870  EC59  F021         	call	_USBCtrlEPAllowStatusStage	;wreg free
 28009  003874  0012               	return	
 28010  003876                     __end_of_USBCtrlEPServiceComplete:
 28011                           	opt stack 0
 28012                           pclatu	equ	0xFFB
 28013                           pclath	equ	0xFFA
 28014                           tblptru	equ	0xFF8
 28015                           tblptrh	equ	0xFF7
 28016                           tblptrl	equ	0xFF6
 28017                           tablat	equ	0xFF5
 28018                           prodh	equ	0xFF4
 28019                           prodl	equ	0xFF3
 28020                           intcon	equ	0xFF2
 28021                           intcon2	equ	0xFF1
 28022                           intcon3	equ	0xFF0
 28023                           indf0	equ	0xFEF
 28024                           postinc0	equ	0xFEE
 28025                           fsr0h	equ	0xFEA
 28026                           fsr0l	equ	0xFE9
 28027                           wreg	equ	0xFE8
 28028                           indf1	equ	0xFE7
 28029                           postdec1	equ	0xFE5
 28030                           fsr1h	equ	0xFE2
 28031                           fsr1l	equ	0xFE1
 28032                           indf2	equ	0xFDF
 28033                           postinc2	equ	0xFDE
 28034                           postdec2	equ	0xFDD
 28035                           plusw2	equ	0xFDB
 28036                           fsr2h	equ	0xFDA
 28037                           fsr2l	equ	0xFD9
 28038                           status	equ	0xFD8
 28039                           
 28040 ;; *************** function _USBCtrlEPAllowDataStage *****************
 28041 ;; Defined at:
 28042 ;;		line 1173 in file "../Includes/Usb/Framework/usb_device.c"
 28043 ;; Parameters:    Size  Location     Type
 28044 ;;		None
 28045 ;; Auto vars:     Size  Location     Type
 28046 ;;		None
 28047 ;; Return value:  Size  Location     Type
 28048 ;;                  1    wreg      void 
 28049 ;; Registers used:
 28050 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28051 ;; Tracked objects:
 28052 ;;		On entry : 0/0
 28053 ;;		On exit  : 0/0
 28054 ;;		Unchanged: 0/0
 28055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28056 ;;      Params:         0       0       0       0       0       0       0       0       0
 28057 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28058 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28059 ;;      Totals:         0       0       0       0       0       0       0       0       0
 28060 ;;Total ram usage:        0 bytes
 28061 ;; Hardware stack levels used:    1
 28062 ;; Hardware stack levels required when called:    1
 28063 ;; This function calls:
 28064 ;;		_USBCtrlTrfTxService
 28065 ;; This function is called by:
 28066 ;;		_USBCtrlEPServiceComplete
 28067 ;; This function uses a non-reentrant model
 28068 ;;
 28069                           
 28070                           	psect	text122
 28071  004B3A                     __ptext122:
 28072                           	opt stack 0
 28073  004B3A                     _USBCtrlEPAllowDataStage:
 28074                           	opt stack 15
 28075                           
 28076                           ;usb_device.c: 1175: USBDeferINDataStagePackets = 0;
 28077                           
 28078                           ;incstack = 0
 28079  004B3A  0E00               	movlw	0
 28080  004B3C  6E42               	movwf	_USBDeferINDataStagePackets,c	;volatile
 28081                           
 28082                           ;usb_device.c: 1176: USBDeferOUTDataStagePackets = 0;
 28083  004B3E  0E00               	movlw	0
 28084  004B40  6E41               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 28085                           
 28086                           ;usb_device.c: 1178: if(controlTransferState == 2)
 28087  004B42  0E02               	movlw	2
 28088  004B44  184A               	xorwf	_controlTransferState,w,c	;volatile
 28089  004B46  A4D8               	btfss	status,2,c
 28090  004B48  D01F               	goto	i2l2008
 28091                           
 28092                           ;usb_device.c: 1179: {
 28093                           ;usb_device.c: 1181: pBDTEntryEP0OutNext->CNT = 8;
 28094  004B4A  EE20 F001          	lfsr	2,1
 28095  004B4E  5034               	movf	_pBDTEntryEP0OutNext,w,c
 28096  004B50  26D9               	addwf	fsr2l,f,c
 28097  004B52  5035               	movf	_pBDTEntryEP0OutNext+1,w,c
 28098  004B54  22DA               	addwfc	fsr2h,f,c
 28099  004B56  0E08               	movlw	8
 28100  004B58  6EDF               	movwf	indf2,c
 28101                           
 28102                           ;usb_device.c: 1182: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 28103  004B5A  EE20 F002          	lfsr	2,2
 28104  004B5E  5034               	movf	_pBDTEntryEP0OutNext,w,c
 28105  004B60  26D9               	addwf	fsr2l,f,c
 28106  004B62  5035               	movf	_pBDTEntryEP0OutNext+1,w,c
 28107  004B64  22DA               	addwfc	fsr2h,f,c
 28108  004B66  0E38               	movlw	56
 28109  004B68  6EDE               	movwf	postinc2,c
 28110  004B6A  0E04               	movlw	4
 28111  004B6C  6EDD               	movwf	postdec2,c
 28112                           
 28113                           ;usb_device.c: 1183: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 28114  004B6E  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28115  004B72  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28116  004B76  0E48               	movlw	72
 28117  004B78  6EDF               	movwf	indf2,c
 28118                           
 28119                           ;usb_device.c: 1184: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28120  004B7A  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28121  004B7E  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28122  004B82  0E00               	movlw	0
 28123  004B84  8EDB               	bsf	plusw2,7,c
 28124                           
 28125                           ;usb_device.c: 1185: }
 28126  004B86  0012               	return	
 28127  004B88                     i2l2008:
 28128                           
 28129                           ;usb_device.c: 1186: else
 28130                           ;usb_device.c: 1187: {
 28131                           ;usb_device.c: 1190: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 28132  004B88  0100               	movlb	0	; () banked
 28133  004B8A  51C8               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 28134  004B8C  0104               	movlb	4	; () banked
 28135  004B8E  5D36               	subwf	54,w,b	;volatile
 28136  004B90  0100               	movlb	0	; () banked
 28137  004B92  51C9               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 28138  004B94  0104               	movlb	4	; () banked
 28139  004B96  5937               	subwfb	55,w,b	;volatile
 28140  004B98  B0D8               	btfsc	status,0,c
 28141  004B9A  D004               	goto	i2l2010
 28142                           
 28143                           ; BSR set to: 4
 28144                           ;usb_device.c: 1191: {
 28145                           ;usb_device.c: 1192: inPipes[0].wCount.Val = SetupPkt.wLength;
 28146  004B9C  C436 F0C8          	movff	1078,_inPipes+4	;volatile
 28147  004BA0  C437 F0C9          	movff	1079,_inPipes+5	;volatile
 28148  004BA4                     i2l2010:
 28149                           
 28150                           ; BSR set to: 4
 28151                           ;usb_device.c: 1193: }
 28152                           ;usb_device.c: 1194: USBCtrlTrfTxService();
 28153                           
 28154                           ; BSR set to: 4
 28155  004BA4  ECBD  F01F         	call	_USBCtrlTrfTxService	;wreg free
 28156                           
 28157                           ;usb_device.c: 1199: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 28158  004BA8  0100               	movlb	0	; () banked
 28159  004BAA  EE20 F002          	lfsr	2,2
 28160  004BAE  51CA               	movf	_pBDTEntryIn& (0+255),w,b
 28161  004BB0  26D9               	addwf	fsr2l,f,c
 28162  004BB2  51CB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 28163  004BB4  22DA               	addwfc	fsr2h,f,c
 28164  004BB6  0E38               	movlw	56
 28165  004BB8  6EDE               	movwf	postinc2,c
 28166  004BBA  0E04               	movlw	4
 28167  004BBC  6EDD               	movwf	postdec2,c
 28168                           
 28169                           ; BSR set to: 0
 28170                           ;usb_device.c: 1200: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 28171  004BBE  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 28172  004BC2  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28173  004BC6  0E48               	movlw	72
 28174  004BC8  6EDF               	movwf	indf2,c
 28175                           
 28176                           ; BSR set to: 0
 28177                           ;usb_device.c: 1201: pBDTEntryIn[0]->STAT.Val |= 0x80;
 28178  004BCA  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 28179  004BCE  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28180  004BD2  0E00               	movlw	0
 28181  004BD4  8EDB               	bsf	plusw2,7,c
 28182  004BD6  0012               	return	
 28183  004BD8                     __end_of_USBCtrlEPAllowDataStage:
 28184                           	opt stack 0
 28185                           pclatu	equ	0xFFB
 28186                           pclath	equ	0xFFA
 28187                           tblptru	equ	0xFF8
 28188                           tblptrh	equ	0xFF7
 28189                           tblptrl	equ	0xFF6
 28190                           tablat	equ	0xFF5
 28191                           prodh	equ	0xFF4
 28192                           prodl	equ	0xFF3
 28193                           intcon	equ	0xFF2
 28194                           intcon2	equ	0xFF1
 28195                           intcon3	equ	0xFF0
 28196                           indf0	equ	0xFEF
 28197                           postinc0	equ	0xFEE
 28198                           fsr0h	equ	0xFEA
 28199                           fsr0l	equ	0xFE9
 28200                           wreg	equ	0xFE8
 28201                           indf1	equ	0xFE7
 28202                           postdec1	equ	0xFE5
 28203                           fsr1h	equ	0xFE2
 28204                           fsr1l	equ	0xFE1
 28205                           indf2	equ	0xFDF
 28206                           postinc2	equ	0xFDE
 28207                           postdec2	equ	0xFDD
 28208                           plusw2	equ	0xFDB
 28209                           fsr2h	equ	0xFDA
 28210                           fsr2l	equ	0xFD9
 28211                           status	equ	0xFD8
 28212                           
 28213 ;; *************** function _USBCheckStdRequest *****************
 28214 ;; Defined at:
 28215 ;;		line 2317 in file "../Includes/Usb/Framework/usb_device.c"
 28216 ;; Parameters:    Size  Location     Type
 28217 ;;		None
 28218 ;; Auto vars:     Size  Location     Type
 28219 ;;		None
 28220 ;; Return value:  Size  Location     Type
 28221 ;;                  1    wreg      void 
 28222 ;; Registers used:
 28223 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28224 ;; Tracked objects:
 28225 ;;		On entry : 0/0
 28226 ;;		On exit  : 0/0
 28227 ;;		Unchanged: 0/0
 28228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28229 ;;      Params:         0       0       0       0       0       0       0       0       0
 28230 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28231 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28232 ;;      Totals:         0       0       0       0       0       0       0       0       0
 28233 ;;Total ram usage:        0 bytes
 28234 ;; Hardware stack levels used:    1
 28235 ;; Hardware stack levels required when called:    6
 28236 ;; This function calls:
 28237 ;;		_USBStdFeatureReqHandler
 28238 ;;		_USBStdGetDscHandler
 28239 ;;		_USBStdGetStatusHandler
 28240 ;;		_USBStdSetCfgHandler
 28241 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28242 ;; This function is called by:
 28243 ;;		_USBCtrlTrfSetupHandler
 28244 ;; This function uses a non-reentrant model
 28245 ;;
 28246                           
 28247                           	psect	text123
 28248  003A48                     __ptext123:
 28249                           	opt stack 0
 28250  003A48                     _USBCheckStdRequest:
 28251                           	opt stack 11
 28252                           
 28253                           ;usb_device.c: 2319: if(SetupPkt.RequestType != (0x00>>5)) return;
 28254                           
 28255                           ;incstack = 0
 28256  003A48  0104               	movlb	4	; () banked
 28257  003A4A  3930               	swapf	48,w,b	;volatile
 28258  003A4C  32E8               	rrcf	wreg,f,c
 28259  003A4E  0B03               	andlw	3
 28260  003A50  0900               	iorlw	0
 28261  003A52  A4D8               	btfss	status,2,c
 28262  003A54  0012               	return	
 28263  003A56  D047               	goto	i2l2145
 28264  003A58                     i2l2146:
 28265                           
 28266                           ; BSR set to: 4
 28267                           ;usb_device.c: 2324: inPipes[0].info.bits.busy = 1;
 28268  003A58  0100               	movlb	0	; () banked
 28269  003A5A  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28270                           
 28271                           ; BSR set to: 0
 28272                           ;usb_device.c: 2325: USBDeviceState = ADR_PENDING_STATE;
 28273  003A5C  0E08               	movlw	8
 28274  003A5E  6FEB               	movwf	_USBDeviceState& (0+255),b	;volatile
 28275                           
 28276                           ;usb_device.c: 2327: break;
 28277  003A60  0012               	return	
 28278  003A62                     
 28279                           ;usb_device.c: 2329: USBStdGetDscHandler();
 28280                           
 28281                           ; BSR set to: 0
 28282  003A62  ECAA  F016         	call	_USBStdGetDscHandler	;wreg free
 28283                           
 28284                           ;usb_device.c: 2330: break;
 28285  003A66  0012               	return	
 28286  003A68                     
 28287                           ;usb_device.c: 2332: USBStdSetCfgHandler();
 28288  003A68  EC95  F01D         	call	_USBStdSetCfgHandler	;wreg free
 28289                           
 28290                           ;usb_device.c: 2333: break;
 28291  003A6C  0012               	return	
 28292  003A6E                     
 28293                           ;usb_device.c: 2335: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 28294  003A6E  0E5A               	movlw	low _USBActiveConfiguration
 28295  003A70  0100               	movlb	0	; () banked
 28296  003A72  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 28297  003A74  0E00               	movlw	high _USBActiveConfiguration
 28298  003A76  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28299                           
 28300                           ; BSR set to: 0
 28301                           ;usb_device.c: 2336: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 28302  003A78  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 28303                           
 28304                           ; BSR set to: 0
 28305                           ;usb_device.c: 2337: inPipes[0].wCount.v[0] = 1;
 28306  003A7A  0E01               	movlw	1
 28307  003A7C  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 28308                           
 28309                           ; BSR set to: 0
 28310                           ;usb_device.c: 2338: inPipes[0].info.bits.busy = 1;
 28311  003A7E  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28312                           
 28313                           ;usb_device.c: 2339: break;
 28314  003A80  0012               	return	
 28315  003A82                     
 28316                           ;usb_device.c: 2341: USBStdGetStatusHandler();
 28317                           
 28318                           ; BSR set to: 0
 28319  003A82  ECF7  F024         	call	_USBStdGetStatusHandler	;wreg free
 28320                           
 28321                           ;usb_device.c: 2342: break;
 28322  003A86  0012               	return	
 28323  003A88                     
 28324                           ;usb_device.c: 2344: case 3:
 28325                           ;usb_device.c: 2345: USBStdFeatureReqHandler();
 28326  003A88  EC8E  F012         	call	_USBStdFeatureReqHandler	;wreg free
 28327                           
 28328                           ;usb_device.c: 2346: break;
 28329  003A8C  0012               	return	
 28330  003A8E                     
 28331                           ;usb_device.c: 2348: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 28332  003A8E  0104               	movlb	4	; () banked
 28333  003A90  5134               	movf	52,w,b	;volatile
 28334  003A92  0D01               	mullw	1
 28335  003A94  0E57               	movlw	low _USBAlternateInterface
 28336  003A96  24F3               	addwf	prodl,w,c
 28337  003A98  0100               	movlb	0	; () banked
 28338  003A9A  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 28339  003A9C  0E00               	movlw	high _USBAlternateInterface
 28340  003A9E  20F4               	addwfc	prodh,w,c
 28341  003AA0  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28342                           
 28343                           ; BSR set to: 0
 28344                           ;usb_device.c: 2349: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 28345  003AA2  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 28346                           
 28347                           ; BSR set to: 0
 28348                           ;usb_device.c: 2350: inPipes[0].wCount.v[0] = 1;
 28349  003AA4  0E01               	movlw	1
 28350  003AA6  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 28351                           
 28352                           ; BSR set to: 0
 28353                           ;usb_device.c: 2351: inPipes[0].info.bits.busy = 1;
 28354  003AA8  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28355                           
 28356                           ;usb_device.c: 2352: break;
 28357  003AAA  0012               	return	
 28358  003AAC                     i2l2155:
 28359                           
 28360                           ; BSR set to: 4
 28361                           ;usb_device.c: 2354: inPipes[0].info.bits.busy = 1;
 28362  003AAC  0100               	movlb	0	; () banked
 28363  003AAE  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28364                           
 28365                           ; BSR set to: 0
 28366                           ;usb_device.c: 2355: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 28367  003AB0  0104               	movlb	4	; () banked
 28368  003AB2  5134               	movf	52,w,b	;volatile
 28369  003AB4  0D01               	mullw	1
 28370  003AB6  0E57               	movlw	low _USBAlternateInterface
 28371  003AB8  24F3               	addwf	prodl,w,c
 28372  003ABA  6ED9               	movwf	fsr2l,c
 28373  003ABC  0E00               	movlw	high _USBAlternateInterface
 28374  003ABE  20F4               	addwfc	prodh,w,c
 28375  003AC0  6EDA               	movwf	fsr2h,c
 28376  003AC2  C432 FFDF          	movff	1074,indf2	;volatile
 28377                           
 28378                           ;usb_device.c: 2356: break;
 28379  003AC6  0012               	return	
 28380  003AC8                     
 28381                           ; BSR set to: 4
 28382                           ;usb_device.c: 2358: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 28383                           
 28384                           ; BSR set to: 4
 28385  003AC8  0E00               	movlw	0
 28386  003ACA  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 28387  003ACC  0E02               	movlw	2
 28388  003ACE  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 28389  003AD0  0E00               	movlw	0
 28390  003AD2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 28391  003AD4  0E00               	movlw	0
 28392  003AD6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 28393  003AD8  0E00               	movlw	0
 28394  003ADA  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 28395  003ADC  0E00               	movlw	0
 28396  003ADE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 28397  003AE0  EC2D  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 28398                           
 28399                           ;usb_device.c: 2363: }
 28400                           
 28401                           ;usb_device.c: 2362: break;
 28402                           
 28403                           ;usb_device.c: 2361: default:
 28404                           
 28405                           ;usb_device.c: 2360: case 12:
 28406                           
 28407                           ;usb_device.c: 2359: break;
 28408  003AE4  0012               	return	
 28409  003AE6                     i2l2145:
 28410  003AE6  0104               	movlb	4	; () banked
 28411  003AE8  5131               	movf	49,w,b	;volatile
 28412                           
 28413                           ; Switch size 1, requested type "space"
 28414                           ; Number of cases is 11, Range of values is 0 to 12
 28415                           ; switch strategies available:
 28416                           ; Name         Instructions Cycles
 28417                           ; simple_byte           34    18 (average)
 28418                           ;	Chosen strategy is simple_byte
 28419  003AEA  0A00               	xorlw	0	; case 0
 28420  003AEC  B4D8               	btfsc	status,2,c
 28421  003AEE  D7C9               	goto	i2l2151
 28422  003AF0  0A01               	xorlw	1	; case 1
 28423  003AF2  B4D8               	btfsc	status,2,c
 28424  003AF4  D7C9               	goto	i2l2152
 28425  003AF6  0A02               	xorlw	2	; case 3
 28426  003AF8  B4D8               	btfsc	status,2,c
 28427  003AFA  D7C6               	goto	i2l2152
 28428  003AFC  0A06               	xorlw	6	; case 5
 28429  003AFE  B4D8               	btfsc	status,2,c
 28430  003B00  D7AB               	goto	i2l2146
 28431  003B02  0A03               	xorlw	3	; case 6
 28432  003B04  B4D8               	btfsc	status,2,c
 28433  003B06  D7AD               	goto	i2l2148
 28434  003B08  0A01               	xorlw	1	; case 7
 28435  003B0A  B4D8               	btfsc	status,2,c
 28436  003B0C  D7DD               	goto	i2l2156
 28437  003B0E  0A0F               	xorlw	15	; case 8
 28438  003B10  B4D8               	btfsc	status,2,c
 28439  003B12  D7AD               	goto	i2l2150
 28440  003B14  0A01               	xorlw	1	; case 9
 28441  003B16  B4D8               	btfsc	status,2,c
 28442  003B18  D7A7               	goto	i2l2149
 28443  003B1A  0A03               	xorlw	3	; case 10
 28444  003B1C  B4D8               	btfsc	status,2,c
 28445  003B1E  D7B7               	goto	i2l2154
 28446  003B20  0A01               	xorlw	1	; case 11
 28447  003B22  B4D8               	btfsc	status,2,c
 28448  003B24  D7C3               	goto	i2l2155
 28449  003B26  0A07               	xorlw	7	; case 12
 28450  003B28  0012               	return	
 28451  003B2A                     __end_of_USBCheckStdRequest:
 28452                           	opt stack 0
 28453                           pclatu	equ	0xFFB
 28454                           pclath	equ	0xFFA
 28455                           tblptru	equ	0xFF8
 28456                           tblptrh	equ	0xFF7
 28457                           tblptrl	equ	0xFF6
 28458                           tablat	equ	0xFF5
 28459                           prodh	equ	0xFF4
 28460                           prodl	equ	0xFF3
 28461                           intcon	equ	0xFF2
 28462                           intcon2	equ	0xFF1
 28463                           intcon3	equ	0xFF0
 28464                           indf0	equ	0xFEF
 28465                           postinc0	equ	0xFEE
 28466                           fsr0h	equ	0xFEA
 28467                           fsr0l	equ	0xFE9
 28468                           wreg	equ	0xFE8
 28469                           indf1	equ	0xFE7
 28470                           postdec1	equ	0xFE5
 28471                           fsr1h	equ	0xFE2
 28472                           fsr1l	equ	0xFE1
 28473                           indf2	equ	0xFDF
 28474                           postinc2	equ	0xFDE
 28475                           postdec2	equ	0xFDD
 28476                           plusw2	equ	0xFDB
 28477                           fsr2h	equ	0xFDA
 28478                           fsr2l	equ	0xFD9
 28479                           status	equ	0xFD8
 28480                           
 28481 ;; *************** function _USBStdSetCfgHandler *****************
 28482 ;; Defined at:
 28483 ;;		line 1629 in file "../Includes/Usb/Framework/usb_device.c"
 28484 ;; Parameters:    Size  Location     Type
 28485 ;;		None
 28486 ;; Auto vars:     Size  Location     Type
 28487 ;;  i               1   21[COMRAM] unsigned char 
 28488 ;; Return value:  Size  Location     Type
 28489 ;;                  1    wreg      void 
 28490 ;; Registers used:
 28491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28492 ;; Tracked objects:
 28493 ;;		On entry : 0/0
 28494 ;;		On exit  : 0/0
 28495 ;;		Unchanged: 0/0
 28496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28497 ;;      Params:         0       0       0       0       0       0       0       0       0
 28498 ;;      Locals:         1       0       0       0       0       0       0       0       0
 28499 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28500 ;;      Totals:         1       0       0       0       0       0       0       0       0
 28501 ;;Total ram usage:        1 bytes
 28502 ;; Hardware stack levels used:    1
 28503 ;; Hardware stack levels required when called:    5
 28504 ;; This function calls:
 28505 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28506 ;;		i2_memset
 28507 ;; This function is called by:
 28508 ;;		_USBCheckStdRequest
 28509 ;; This function uses a non-reentrant model
 28510 ;;
 28511                           
 28512                           	psect	text124
 28513  003B2A                     __ptext124:
 28514                           	opt stack 0
 28515  003B2A                     _USBStdSetCfgHandler:
 28516                           	opt stack 11
 28517                           
 28518                           ;usb_device.c: 1631: uint8_t i;
 28519                           ;usb_device.c: 1634: inPipes[0].info.bits.busy = 1;
 28520                           
 28521                           ;incstack = 0
 28522  003B2A  0100               	movlb	0	; () banked
 28523  003B2C  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28524                           
 28525                           ; BSR set to: 0
 28526                           ;usb_device.c: 1637: memset((void*)&UEP1,0x00,(2));;
 28527  003B2E  0E6B               	movlw	107
 28528  003B30  6E01               	movwf	i2memset@p1,c
 28529  003B32  0E0F               	movlw	15
 28530  003B34  6E02               	movwf	i2memset@p1+1,c
 28531  003B36  0E00               	movlw	0
 28532  003B38  6E04               	movwf	i2memset@c+1,c
 28533  003B3A  0E00               	movlw	0
 28534  003B3C  6E03               	movwf	i2memset@c,c
 28535  003B3E  0E00               	movlw	0
 28536  003B40  6E06               	movwf	i2memset@n+1,c
 28537  003B42  0E02               	movlw	2
 28538  003B44  6E05               	movwf	i2memset@n,c
 28539  003B46  EC80  F02F         	call	i2_memset	;wreg free
 28540                           
 28541                           ;usb_device.c: 1640: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 28542  003B4A  0E00               	movlw	0
 28543  003B4C  6E01               	movwf	i2memset@p1,c
 28544  003B4E  0E04               	movlw	4
 28545  003B50  6E02               	movwf	i2memset@p1+1,c
 28546  003B52  0E00               	movlw	0
 28547  003B54  6E04               	movwf	i2memset@c+1,c
 28548  003B56  0E00               	movlw	0
 28549  003B58  6E03               	movwf	i2memset@c,c
 28550  003B5A  0E00               	movlw	0
 28551  003B5C  6E06               	movwf	i2memset@n+1,c
 28552  003B5E  0E30               	movlw	48
 28553  003B60  6E05               	movwf	i2memset@n,c
 28554  003B62  EC80  F02F         	call	i2_memset	;wreg free
 28555                           
 28556                           ;usb_device.c: 1643: UCONbits.PPBRST = 1;
 28557  003B66  8C60               	bsf	3936,6,c	;volatile
 28558                           
 28559                           ;usb_device.c: 1648: for(i = 0; i < (uint8_t)(2+1u); i++)
 28560  003B68  0E00               	movlw	0
 28561  003B6A  6E16               	movwf	USBStdSetCfgHandler@i,c
 28562  003B6C                     i2l8475:
 28563  003B6C  0E02               	movlw	2
 28564  003B6E  6416               	cpfsgt	USBStdSetCfgHandler@i,c
 28565  003B70  D001               	goto	i2l2060
 28566  003B72  D016               	goto	i2u631_40
 28567  003B74                     i2l2060:
 28568                           
 28569                           ;usb_device.c: 1649: {
 28570                           ;usb_device.c: 1650: ep_data_in[i].Val = 0u;
 28571  003B74  5016               	movf	USBStdSetCfgHandler@i,w,c
 28572  003B76  0D01               	mullw	1
 28573  003B78  0ED3               	movlw	low _ep_data_in
 28574  003B7A  24F3               	addwf	prodl,w,c
 28575  003B7C  6ED9               	movwf	fsr2l,c
 28576  003B7E  0E00               	movlw	high _ep_data_in
 28577  003B80  20F4               	addwfc	prodh,w,c
 28578  003B82  6EDA               	movwf	fsr2h,c
 28579  003B84  0E00               	movlw	0
 28580  003B86  6EDF               	movwf	indf2,c
 28581                           
 28582                           ;usb_device.c: 1651: ep_data_out[i].Val = 0u;
 28583  003B88  5016               	movf	USBStdSetCfgHandler@i,w,c
 28584  003B8A  0D01               	mullw	1
 28585  003B8C  0ED0               	movlw	low _ep_data_out
 28586  003B8E  24F3               	addwf	prodl,w,c
 28587  003B90  6ED9               	movwf	fsr2l,c
 28588  003B92  0E00               	movlw	high _ep_data_out
 28589  003B94  20F4               	addwfc	prodh,w,c
 28590  003B96  6EDA               	movwf	fsr2h,c
 28591  003B98  0E00               	movlw	0
 28592  003B9A  6EDF               	movwf	indf2,c
 28593  003B9C  2A16               	incf	USBStdSetCfgHandler@i,f,c
 28594  003B9E  D7E6               	goto	i2l8475
 28595  003BA0                     i2u631_40:
 28596                           
 28597                           ;usb_device.c: 1652: }
 28598                           ;usb_device.c: 1655: memset((void*)&USBAlternateInterface,0x00,2);
 28599  003BA0  0E57               	movlw	low _USBAlternateInterface
 28600  003BA2  6E01               	movwf	i2memset@p1,c
 28601  003BA4  0E00               	movlw	high _USBAlternateInterface
 28602  003BA6  6E02               	movwf	i2memset@p1+1,c
 28603  003BA8  0E00               	movlw	0
 28604  003BAA  6E04               	movwf	i2memset@c+1,c
 28605  003BAC  0E00               	movlw	0
 28606  003BAE  6E03               	movwf	i2memset@c,c
 28607  003BB0  0E00               	movlw	0
 28608  003BB2  6E06               	movwf	i2memset@n+1,c
 28609  003BB4  0E02               	movlw	2
 28610  003BB6  6E05               	movwf	i2memset@n,c
 28611  003BB8  EC80  F02F         	call	i2_memset	;wreg free
 28612                           
 28613                           ;usb_device.c: 1658: UCONbits.PPBRST = 0;
 28614  003BBC  9C60               	bcf	3936,6,c	;volatile
 28615                           
 28616                           ;usb_device.c: 1660: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 28617  003BBE  0E08               	movlw	8
 28618  003BC0  0100               	movlb	0	; () banked
 28619  003BC2  6FCA               	movwf	_pBDTEntryIn& (0+255),b
 28620  003BC4  0E04               	movlw	4
 28621  003BC6  6FCB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 28622                           
 28623                           ; BSR set to: 0
 28624                           ;usb_device.c: 1663: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 28625  003BC8  0E00               	movlw	0
 28626  003BCA  6E36               	movwf	_pBDTEntryEP0OutCurrent,c
 28627  003BCC  0E04               	movlw	4
 28628  003BCE  6E37               	movwf	_pBDTEntryEP0OutCurrent+1,c
 28629                           
 28630                           ; BSR set to: 0
 28631                           ;usb_device.c: 1664: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 28632  003BD0  C036  F034         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 28633  003BD4  C037  F035         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 28634                           
 28635                           ; BSR set to: 0
 28636                           ;usb_device.c: 1667: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 28637  003BD8  C432 F05A          	movff	1074,_USBActiveConfiguration	;volatile
 28638                           
 28639                           ; BSR set to: 0
 28640                           ;usb_device.c: 1670: if(USBActiveConfiguration == 0)
 28641  003BDC  505A               	movf	_USBActiveConfiguration,w,c	;volatile
 28642  003BDE  A4D8               	btfss	status,2,c
 28643  003BE0  D003               	goto	i2l2062
 28644                           
 28645                           ; BSR set to: 0
 28646                           ;usb_device.c: 1671: {
 28647                           ;usb_device.c: 1673: USBDeviceState = ADDRESS_STATE;
 28648  003BE2  0E10               	movlw	16
 28649  003BE4  6FEB               	movwf	_USBDeviceState& (0+255),b	;volatile
 28650                           
 28651                           ;usb_device.c: 1674: }
 28652  003BE6  0012               	return	
 28653  003BE8                     i2l2062:
 28654                           
 28655                           ; BSR set to: 0
 28656                           ;usb_device.c: 1675: else
 28657                           ;usb_device.c: 1676: {
 28658                           ;usb_device.c: 1678: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 28659                           
 28660                           ; BSR set to: 0
 28661  003BE8  0E00               	movlw	0
 28662  003BEA  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 28663  003BEC  0E01               	movlw	1
 28664  003BEE  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 28665  003BF0  0E5A               	movlw	low _USBActiveConfiguration
 28666  003BF2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 28667  003BF4  0E00               	movlw	high _USBActiveConfiguration
 28668  003BF6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 28669  003BF8  0E00               	movlw	0
 28670  003BFA  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 28671  003BFC  0E01               	movlw	1
 28672  003BFE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 28673  003C00  EC2D  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 28674                           
 28675                           ;usb_device.c: 1683: USBDeviceState = CONFIGURED_STATE;
 28676  003C04  0E20               	movlw	32
 28677  003C06  0100               	movlb	0	; () banked
 28678  003C08  6FEB               	movwf	_USBDeviceState& (0+255),b	;volatile
 28679  003C0A  0012               	return	
 28680  003C0C                     __end_of_USBStdSetCfgHandler:
 28681                           	opt stack 0
 28682                           pclatu	equ	0xFFB
 28683                           pclath	equ	0xFFA
 28684                           tblptru	equ	0xFF8
 28685                           tblptrh	equ	0xFF7
 28686                           tblptrl	equ	0xFF6
 28687                           tablat	equ	0xFF5
 28688                           prodh	equ	0xFF4
 28689                           prodl	equ	0xFF3
 28690                           intcon	equ	0xFF2
 28691                           intcon2	equ	0xFF1
 28692                           intcon3	equ	0xFF0
 28693                           indf0	equ	0xFEF
 28694                           postinc0	equ	0xFEE
 28695                           fsr0h	equ	0xFEA
 28696                           fsr0l	equ	0xFE9
 28697                           wreg	equ	0xFE8
 28698                           indf1	equ	0xFE7
 28699                           postdec1	equ	0xFE5
 28700                           fsr1h	equ	0xFE2
 28701                           fsr1l	equ	0xFE1
 28702                           indf2	equ	0xFDF
 28703                           postinc2	equ	0xFDE
 28704                           postdec2	equ	0xFDD
 28705                           plusw2	equ	0xFDB
 28706                           fsr2h	equ	0xFDA
 28707                           fsr2l	equ	0xFD9
 28708                           status	equ	0xFD8
 28709                           
 28710 ;; *************** function i2_memset *****************
 28711 ;; Defined at:
 28712 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 28713 ;; Parameters:    Size  Location     Type
 28714 ;;  p1              2    0[COMRAM] PTR void 
 28715 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 28716 ;;  c               2    2[COMRAM] int 
 28717 ;;  n               2    4[COMRAM] unsigned int 
 28718 ;; Auto vars:     Size  Location     Type
 28719 ;;  memset          2    6[COMRAM] PTR unsigned char 
 28720 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 28721 ;; Return value:  Size  Location     Type
 28722 ;;                  2    0[COMRAM] PTR void 
 28723 ;; Registers used:
 28724 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28725 ;; Tracked objects:
 28726 ;;		On entry : 0/0
 28727 ;;		On exit  : 0/0
 28728 ;;		Unchanged: 0/0
 28729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28730 ;;      Params:         6       0       0       0       0       0       0       0       0
 28731 ;;      Locals:         2       0       0       0       0       0       0       0       0
 28732 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28733 ;;      Totals:         8       0       0       0       0       0       0       0       0
 28734 ;;Total ram usage:        8 bytes
 28735 ;; Hardware stack levels used:    1
 28736 ;; This function calls:
 28737 ;;		Nothing
 28738 ;; This function is called by:
 28739 ;;		_USBStdSetCfgHandler
 28740 ;;		i2_USBDeviceInit
 28741 ;; This function uses a non-reentrant model
 28742 ;;
 28743                           
 28744                           	psect	text125
 28745  005F00                     __ptext125:
 28746                           	opt stack 0
 28747  005F00                     i2_memset:
 28748                           	opt stack 18
 28749                           
 28750                           ; BSR set to: 0
 28751                           ;incstack = 0
 28752  005F00  C001  F007         	movff	i2memset@p1,i2memset@p
 28753  005F04  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 28754  005F08  D008               	goto	i2l2758
 28755  005F0A                     i2l8295:
 28756  005F0A  C007  FFD9         	movff	i2memset@p,fsr2l
 28757  005F0E  C008  FFDA         	movff	i2memset@p+1,fsr2h
 28758  005F12  C003  FFDF         	movff	i2memset@c,indf2
 28759  005F16  4A07               	infsnz	i2memset@p,f,c
 28760  005F18  2A08               	incf	i2memset@p+1,f,c
 28761  005F1A                     i2l2758:
 28762  005F1A  0605               	decf	i2memset@n,f,c
 28763  005F1C  A0D8               	btfss	status,0,c
 28764  005F1E  0606               	decf	i2memset@n+1,f,c
 28765  005F20  2805               	incf	i2memset@n,w,c
 28766  005F22  E1F3               	bnz	i2l8295
 28767  005F24  2806               	incf	i2memset@n+1,w,c
 28768  005F26  B4D8               	btfsc	status,2,c
 28769  005F28  0012               	return	
 28770  005F2A  D7EF               	goto	i2l2759
 28771  005F2C                     __end_ofi2_memset:
 28772                           	opt stack 0
 28773                           pclatu	equ	0xFFB
 28774                           pclath	equ	0xFFA
 28775                           tblptru	equ	0xFF8
 28776                           tblptrh	equ	0xFF7
 28777                           tblptrl	equ	0xFF6
 28778                           tablat	equ	0xFF5
 28779                           prodh	equ	0xFF4
 28780                           prodl	equ	0xFF3
 28781                           intcon	equ	0xFF2
 28782                           intcon2	equ	0xFF1
 28783                           intcon3	equ	0xFF0
 28784                           indf0	equ	0xFEF
 28785                           postinc0	equ	0xFEE
 28786                           fsr0h	equ	0xFEA
 28787                           fsr0l	equ	0xFE9
 28788                           wreg	equ	0xFE8
 28789                           indf1	equ	0xFE7
 28790                           postdec1	equ	0xFE5
 28791                           fsr1h	equ	0xFE2
 28792                           fsr1l	equ	0xFE1
 28793                           indf2	equ	0xFDF
 28794                           postinc2	equ	0xFDE
 28795                           postdec2	equ	0xFDD
 28796                           plusw2	equ	0xFDB
 28797                           fsr2h	equ	0xFDA
 28798                           fsr2l	equ	0xFD9
 28799                           status	equ	0xFD8
 28800                           
 28801 ;; *************** function _USBStdGetStatusHandler *****************
 28802 ;; Defined at:
 28803 ;;		line 1773 in file "../Includes/Usb/Framework/usb_device.c"
 28804 ;; Parameters:    Size  Location     Type
 28805 ;;		None
 28806 ;; Auto vars:     Size  Location     Type
 28807 ;;  p               2    1[COMRAM] PTR struct __BDT
 28808 ;;		 -> BDT(48), NULL(0), 
 28809 ;; Return value:  Size  Location     Type
 28810 ;;                  1    wreg      void 
 28811 ;; Registers used:
 28812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28813 ;; Tracked objects:
 28814 ;;		On entry : 0/0
 28815 ;;		On exit  : 0/0
 28816 ;;		Unchanged: 0/0
 28817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28818 ;;      Params:         0       0       0       0       0       0       0       0       0
 28819 ;;      Locals:         2       0       0       0       0       0       0       0       0
 28820 ;;      Temps:          1       0       0       0       0       0       0       0       0
 28821 ;;      Totals:         3       0       0       0       0       0       0       0       0
 28822 ;;Total ram usage:        3 bytes
 28823 ;; Hardware stack levels used:    1
 28824 ;; This function calls:
 28825 ;;		Nothing
 28826 ;; This function is called by:
 28827 ;;		_USBCheckStdRequest
 28828 ;; This function uses a non-reentrant model
 28829 ;;
 28830                           
 28831                           	psect	text126
 28832  0049EE                     __ptext126:
 28833                           	opt stack 0
 28834  0049EE                     _USBStdGetStatusHandler:
 28835                           	opt stack 16
 28836                           
 28837                           ;usb_device.c: 1775: CtrlTrfData[0] = 0;
 28838                           
 28839                           ;incstack = 0
 28840  0049EE  0E00               	movlw	0
 28841  0049F0  0104               	movlb	4	; () banked
 28842  0049F2  6F38               	movwf	56,b	;volatile
 28843                           
 28844                           ;usb_device.c: 1776: CtrlTrfData[1] = 0;
 28845  0049F4  0E00               	movlw	0
 28846  0049F6  6F39               	movwf	57,b	;volatile
 28847                           
 28848                           ;usb_device.c: 1778: switch(SetupPkt.Recipient)
 28849  0049F8  D038               	goto	i2l2081
 28850  0049FA                     i2l2082:
 28851                           
 28852                           ; BSR set to: 4
 28853                           ;usb_device.c: 1781: inPipes[0].info.bits.busy = 1;
 28854  0049FA  0100               	movlb	0	; () banked
 28855  0049FC  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28856                           
 28857                           ;usb_device.c: 1789: }
 28858                           ;usb_device.c: 1791: if(RemoteWakeup == 1)
 28859                           
 28860                           ; BSR set to: 4
 28861                           
 28862                           ; BSR set to: 0
 28863                           ;usb_device.c: 1787: {
 28864                           ;usb_device.c: 1788: CtrlTrfData[0]|=0x01;
 28865                           
 28866                           ;usb_device.c: 1786: if(0 == 1)
 28867  0049FE  0449               	decf	_RemoteWakeup,w,c	;volatile
 28868  004A00  A4D8               	btfss	status,2,c
 28869  004A02  D03E               	goto	i2l2085
 28870                           
 28871                           ;usb_device.c: 1792: {
 28872                           ;usb_device.c: 1793: CtrlTrfData[0]|=0x02;
 28873  004A04  0104               	movlb	4	; () banked
 28874  004A06  8338               	bsf	56,1,b	;volatile
 28875                           
 28876                           ; BSR set to: 4
 28877                           ;usb_device.c: 1794: }
 28878                           ;usb_device.c: 1795: break;
 28879  004A08  D03B               	goto	i2l2085
 28880  004A0A                     i2l2086:
 28881                           
 28882                           ; BSR set to: 4
 28883                           ;usb_device.c: 1797: inPipes[0].info.bits.busy = 1;
 28884  004A0A  0100               	movlb	0	; () banked
 28885  004A0C  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28886                           
 28887                           ;usb_device.c: 1798: break;
 28888  004A0E  D038               	goto	i2l2085
 28889  004A10                     i2l2087:
 28890                           
 28891                           ; BSR set to: 4
 28892                           ;usb_device.c: 1800: inPipes[0].info.bits.busy = 1;
 28893  004A10  0100               	movlb	0	; () banked
 28894  004A12  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28895                           
 28896                           ;usb_device.c: 1804: {
 28897                           ;usb_device.c: 1805: BDT_ENTRY *p;
 28898                           ;usb_device.c: 1807: if(SetupPkt.EPDir == 0)
 28899  004A14  0104               	movlb	4	; () banked
 28900  004A16  BF34               	btfsc	52,7,b	;volatile
 28901  004A18  D00A               	goto	i2l2088
 28902                           
 28903                           ; BSR set to: 4
 28904                           ;usb_device.c: 1808: {
 28905                           ;usb_device.c: 1809: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 28906  004A1A  5134               	movf	52,w,b	;volatile
 28907  004A1C  0B0F               	andlw	15
 28908  004A1E  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 28909  004A20  5001               	movf	??_USBStdGetStatusHandler,w,c
 28910  004A22  0D02               	mullw	2
 28911  004A24  0E40               	movlw	low _pBDTEntryOut
 28912  004A26  24F3               	addwf	prodl,w,c
 28913  004A28  6ED9               	movwf	fsr2l,c
 28914  004A2A  0E01               	movlw	high _pBDTEntryOut
 28915  004A2C  D009               	goto	L26
 28916  004A2E                     i2l2088:
 28917                           
 28918                           ; BSR set to: 4
 28919                           ;usb_device.c: 1811: else
 28920                           ;usb_device.c: 1812: {
 28921                           ;usb_device.c: 1813: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 28922                           
 28923                           ; BSR set to: 4
 28924  004A2E  5134               	movf	52,w,b	;volatile
 28925  004A30  0B0F               	andlw	15
 28926  004A32  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 28927  004A34  5001               	movf	??_USBStdGetStatusHandler,w,c
 28928  004A36  0D02               	mullw	2
 28929  004A38  0ECA               	movlw	low _pBDTEntryIn
 28930  004A3A  24F3               	addwf	prodl,w,c
 28931  004A3C  6ED9               	movwf	fsr2l,c
 28932  004A3E  0E00               	movlw	high _pBDTEntryIn
 28933  004A40                     L26:
 28934  004A40  20F4               	addwfc	prodh,w,c
 28935  004A42  6EDA               	movwf	fsr2h,c
 28936  004A44  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 28937  004A48  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 28938                           
 28939                           ; BSR set to: 4
 28940                           ;usb_device.c: 1814: }
 28941                           ;usb_device.c: 1816: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 28942                           
 28943                           ; BSR set to: 4
 28944  004A4C  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 28945  004A50  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 28946  004A54  AEDF               	btfss	indf2,7,c
 28947  004A56  D014               	goto	i2l2085
 28948                           
 28949                           ; BSR set to: 4
 28950  004A58  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 28951  004A5C  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 28952  004A60  A4DF               	btfss	indf2,2,c
 28953  004A62  D00E               	goto	i2l2085
 28954                           
 28955                           ; BSR set to: 4
 28956                           ;usb_device.c: 1817: CtrlTrfData[0]=0x01;
 28957  004A64  0E01               	movlw	1
 28958  004A66  6F38               	movwf	56,b	;volatile
 28959                           
 28960                           ; BSR set to: 4
 28961                           ;usb_device.c: 1819: }
 28962                           ;usb_device.c: 1820: }
 28963                           
 28964                           ; BSR set to: 4
 28965                           ;usb_device.c: 1818: break;
 28966  004A68  D00B               	goto	i2l2085
 28967  004A6A                     i2l2081:
 28968                           
 28969                           ; BSR set to: 4
 28970                           
 28971                           ; BSR set to: 4
 28972  004A6A  5130               	movf	48,w,b	;volatile
 28973  004A6C  0B1F               	andlw	31
 28974                           
 28975                           ; Switch size 1, requested type "space"
 28976                           ; Number of cases is 3, Range of values is 0 to 2
 28977                           ; switch strategies available:
 28978                           ; Name         Instructions Cycles
 28979                           ; simple_byte           10     6 (average)
 28980                           ;	Chosen strategy is simple_byte
 28981  004A6E  0A00               	xorlw	0	; case 0
 28982  004A70  B4D8               	btfsc	status,2,c
 28983  004A72  D7C3               	goto	i2l2082
 28984  004A74  0A01               	xorlw	1	; case 1
 28985  004A76  B4D8               	btfsc	status,2,c
 28986  004A78  D7C8               	goto	i2l2086
 28987  004A7A  0A03               	xorlw	3	; case 2
 28988  004A7C  B4D8               	btfsc	status,2,c
 28989  004A7E  D7C8               	goto	i2l2087
 28990  004A80                     i2l2085:
 28991                           
 28992                           ;usb_device.c: 1822: if(inPipes[0].info.bits.busy == 1)
 28993  004A80  0100               	movlb	0	; () banked
 28994  004A82  AFC7               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 28995  004A84  0012               	return	
 28996                           
 28997                           ; BSR set to: 0
 28998                           ;usb_device.c: 1823: {
 28999                           ;usb_device.c: 1824: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 29000  004A86  0E38               	movlw	56
 29001  004A88  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 29002  004A8A  0E04               	movlw	4
 29003  004A8C  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 29004                           
 29005                           ; BSR set to: 0
 29006                           ;usb_device.c: 1825: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 29007  004A8E  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 29008                           
 29009                           ; BSR set to: 0
 29010                           ;usb_device.c: 1826: inPipes[0].wCount.v[0] = 2;
 29011  004A90  0E02               	movlw	2
 29012  004A92  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 29013  004A94  0012               	return	
 29014  004A96                     __end_of_USBStdGetStatusHandler:
 29015                           	opt stack 0
 29016                           pclatu	equ	0xFFB
 29017                           pclath	equ	0xFFA
 29018                           tblptru	equ	0xFF8
 29019                           tblptrh	equ	0xFF7
 29020                           tblptrl	equ	0xFF6
 29021                           tablat	equ	0xFF5
 29022                           prodh	equ	0xFF4
 29023                           prodl	equ	0xFF3
 29024                           intcon	equ	0xFF2
 29025                           intcon2	equ	0xFF1
 29026                           intcon3	equ	0xFF0
 29027                           indf0	equ	0xFEF
 29028                           postinc0	equ	0xFEE
 29029                           fsr0h	equ	0xFEA
 29030                           fsr0l	equ	0xFE9
 29031                           wreg	equ	0xFE8
 29032                           indf1	equ	0xFE7
 29033                           postdec1	equ	0xFE5
 29034                           fsr1h	equ	0xFE2
 29035                           fsr1l	equ	0xFE1
 29036                           indf2	equ	0xFDF
 29037                           postinc2	equ	0xFDE
 29038                           postdec2	equ	0xFDD
 29039                           plusw2	equ	0xFDB
 29040                           fsr2h	equ	0xFDA
 29041                           fsr2l	equ	0xFD9
 29042                           status	equ	0xFD8
 29043                           
 29044 ;; *************** function _USBStdGetDscHandler *****************
 29045 ;; Defined at:
 29046 ;;		line 1704 in file "../Includes/Usb/Framework/usb_device.c"
 29047 ;; Parameters:    Size  Location     Type
 29048 ;;		None
 29049 ;; Auto vars:     Size  Location     Type
 29050 ;;		None
 29051 ;; Return value:  Size  Location     Type
 29052 ;;                  1    wreg      void 
 29053 ;; Registers used:
 29054 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 29055 ;; Tracked objects:
 29056 ;;		On entry : 0/0
 29057 ;;		On exit  : 0/0
 29058 ;;		Unchanged: 0/0
 29059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29060 ;;      Params:         0       0       0       0       0       0       0       0       0
 29061 ;;      Locals:         0       0       0       0       0       0       0       0       0
 29062 ;;      Temps:          2       0       0       0       0       0       0       0       0
 29063 ;;      Totals:         2       0       0       0       0       0       0       0       0
 29064 ;;Total ram usage:        2 bytes
 29065 ;; Hardware stack levels used:    1
 29066 ;; This function calls:
 29067 ;;		Nothing
 29068 ;; This function is called by:
 29069 ;;		_USBCheckStdRequest
 29070 ;; This function uses a non-reentrant model
 29071 ;;
 29072                           
 29073                           	psect	text127
 29074  002D54                     __ptext127:
 29075                           	opt stack 0
 29076  002D54                     _USBStdGetDscHandler:
 29077                           	opt stack 16
 29078                           
 29079                           ;usb_device.c: 1706: if(SetupPkt.bmRequestType == 0x80)
 29080                           
 29081                           ; BSR set to: 0
 29082                           ;incstack = 0
 29083  002D54  0E80               	movlw	128
 29084  002D56  0104               	movlb	4	; () banked
 29085  002D58  1930               	xorwf	48,w,b	;volatile
 29086  002D5A  A4D8               	btfss	status,2,c
 29087  002D5C  0012               	return	
 29088                           
 29089                           ; BSR set to: 4
 29090                           ;usb_device.c: 1707: {
 29091                           ;usb_device.c: 1708: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 29092  002D5E  0EC0               	movlw	192
 29093  002D60  0100               	movlb	0	; () banked
 29094  002D62  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 29095                           
 29096                           ;usb_device.c: 1710: switch(SetupPkt.bDescriptorType)
 29097  002D64  D088               	goto	i2l2068
 29098  002D66                     
 29099                           ;usb_device.c: 1713: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 29100                           
 29101                           ; BSR set to: 0
 29102  002D66  0EA3               	movlw	low _device_dsc
 29103  002D68  0100               	movlb	0	; () banked
 29104  002D6A  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 29105  002D6C  0E79               	movlw	high _device_dsc
 29106  002D6E  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 29107                           
 29108                           ; BSR set to: 0
 29109                           ;usb_device.c: 1714: inPipes[0].wCount.Val = sizeof(device_dsc);
 29110  002D70  0E00               	movlw	0
 29111  002D72  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 29112  002D74  0E12               	movlw	18
 29113  002D76  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 29114                           
 29115                           ;usb_device.c: 1715: break;
 29116  002D78  0012               	return	
 29117  002D7A                     
 29118                           ;usb_device.c: 1720: if(SetupPkt.bDscIndex < 1)
 29119                           
 29120                           ; BSR set to: 0
 29121  002D7A  0104               	movlb	4	; () banked
 29122  002D7C  5132               	movf	50,w,b	;volatile
 29123  002D7E  A4D8               	btfss	status,2,c
 29124  002D80  D043               	goto	i2l2072
 29125                           
 29126                           ; BSR set to: 4
 29127                           ;usb_device.c: 1721: {
 29128                           ;usb_device.c: 1722: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 29129  002D82  5132               	movf	50,w,b	;volatile
 29130  002D84  0D02               	mullw	2
 29131  002D86  0EF6               	movlw	low _USB_CD_Ptr
 29132  002D88  24F3               	addwf	prodl,w,c
 29133  002D8A  6EF6               	movwf	tblptrl,c
 29134  002D8C  0E75               	movlw	high _USB_CD_Ptr
 29135  002D8E  20F4               	addwfc	prodh,w,c
 29136  002D90  6EF7               	movwf	tblptrh,c
 29137  002D92                     	if	1	;There are 3 active tblptr bytes
 29138  002D92  6AF8               	clrf	tblptru,c
 29139  002D94  0E00               	movlw	low (__mediumconst shr (0+16))
 29140  002D96  22F8               	addwfc	tblptru,f,c
 29141  002D98                     	endif
 29142  002D98  0009               	tblrd		*+
 29143  002D9A  CFF5 F0C4          	movff	tablat,_inPipes	;volatile
 29144  002D9E  000A               	tblrd		*-
 29145  002DA0  CFF5 F0C5          	movff	tablat,_inPipes+1	;volatile
 29146                           
 29147                           ; BSR set to: 4
 29148                           ;usb_device.c: 1727: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 29149  002DA4  0E02               	movlw	2
 29150  002DA6  0100               	movlb	0	; () banked
 29151  002DA8  25C4               	addwf	_inPipes& (0+255),w,b	;volatile
 29152  002DAA  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 29153  002DAC  0E00               	movlw	0
 29154  002DAE  21C5               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 29155  002DB0  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 29156  002DB2  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 29157  002DB6  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 29158  002DBA  6AF8               	clrf	tblptru,c
 29159  002DBC  0E07               	movlw	(high __ramtop+-1)
 29160  002DBE  64F7               	cpfsgt	tblptrh,c
 29161  002DC0  D003               	bra	i2u635_47
 29162  002DC2  0008               	tblrd		*
 29163  002DC4  50F5               	movf	tablat,w,c
 29164  002DC6  D005               	bra	i2u635_40
 29165  002DC8                     i2u635_47:
 29166  002DC8  CFF6 FFE9          	movff	tblptrl,fsr0l
 29167  002DCC  CFF7 FFEA          	movff	tblptrh,fsr0h
 29168  002DD0  50EF               	movf	indf0,w,c
 29169  002DD2                     i2u635_40:
 29170  002DD2  0100               	movlb	0	; () banked
 29171  002DD4  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 29172                           
 29173                           ; BSR set to: 0
 29174                           ;usb_device.c: 1728: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 29175  002DD6  0E03               	movlw	3
 29176  002DD8  25C4               	addwf	_inPipes& (0+255),w,b	;volatile
 29177  002DDA  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 29178  002DDC  0E00               	movlw	0
 29179  002DDE  21C5               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 29180  002DE0  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 29181  002DE2  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 29182  002DE6  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 29183  002DEA  6AF8               	clrf	tblptru,c
 29184  002DEC  0E07               	movlw	(high __ramtop+-1)
 29185  002DEE  64F7               	cpfsgt	tblptrh,c
 29186  002DF0  D003               	bra	i2u636_47
 29187  002DF2  0008               	tblrd		*
 29188  002DF4  50F5               	movf	tablat,w,c
 29189  002DF6  D005               	bra	i2u636_40
 29190  002DF8                     i2u636_47:
 29191  002DF8  CFF6 FFE9          	movff	tblptrl,fsr0l
 29192  002DFC  CFF7 FFEA          	movff	tblptrh,fsr0h
 29193  002E00  50EF               	movf	indf0,w,c
 29194  002E02                     i2u636_40:
 29195  002E02  0100               	movlb	0	; () banked
 29196  002E04  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 29197                           
 29198                           ;usb_device.c: 1729: }
 29199  002E06  0012               	return	
 29200  002E08                     i2l2072:
 29201                           
 29202                           ;usb_device.c: 1730: else
 29203                           ;usb_device.c: 1731: {
 29204                           ;usb_device.c: 1732: inPipes[0].info.Val = 0;
 29205                           
 29206                           ; BSR set to: 0
 29207  002E08  0E00               	movlw	0
 29208  002E0A  0100               	movlb	0	; () banked
 29209  002E0C  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 29210                           
 29211                           ; BSR set to: 0
 29212                           ;usb_device.c: 1733: }
 29213                           ;usb_device.c: 1734: break;
 29214  002E0E  0012               	return	
 29215  002E10                     
 29216                           ;usb_device.c: 1739: if(SetupPkt.bDscIndex<3)
 29217                           
 29218                           ; BSR set to: 0
 29219  002E10  0E03               	movlw	3
 29220  002E12  0104               	movlb	4	; () banked
 29221  002E14  6132               	cpfslt	50,b	;volatile
 29222  002E16  D027               	goto	i2l2075
 29223                           
 29224                           ; BSR set to: 4
 29225                           ;usb_device.c: 1740: {
 29226                           ;usb_device.c: 1742: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 29227  002E18  5132               	movf	50,w,b	;volatile
 29228  002E1A  0D02               	mullw	2
 29229  002E1C  0EEB               	movlw	low _USB_SD_Ptr
 29230  002E1E  24F3               	addwf	prodl,w,c
 29231  002E20  6EF6               	movwf	tblptrl,c
 29232  002E22  0E75               	movlw	high _USB_SD_Ptr
 29233  002E24  20F4               	addwfc	prodh,w,c
 29234  002E26  6EF7               	movwf	tblptrh,c
 29235  002E28                     	if	1	;There are 3 active tblptr bytes
 29236  002E28  6AF8               	clrf	tblptru,c
 29237  002E2A  0E00               	movlw	low (__mediumconst shr (0+16))
 29238  002E2C  22F8               	addwfc	tblptru,f,c
 29239  002E2E                     	endif
 29240  002E2E  0009               	tblrd		*+
 29241  002E30  CFF5 F0C4          	movff	tablat,_inPipes	;volatile
 29242  002E34  000A               	tblrd		*-
 29243  002E36  CFF5 F0C5          	movff	tablat,_inPipes+1	;volatile
 29244                           
 29245                           ; BSR set to: 4
 29246                           ;usb_device.c: 1744: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 29247  002E3A  C0C4  FFF6         	movff	_inPipes,tblptrl	;volatile
 29248  002E3E  C0C5  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 29249  002E42  6AF8               	clrf	tblptru,c
 29250  002E44  0E07               	movlw	(high __ramtop+-1)
 29251  002E46  64F7               	cpfsgt	tblptrh,c
 29252  002E48  D003               	bra	i2u638_47
 29253  002E4A  0008               	tblrd		*
 29254  002E4C  50F5               	movf	tablat,w,c
 29255  002E4E  D005               	bra	i2u638_40
 29256  002E50                     i2u638_47:
 29257  002E50  CFF6 FFE9          	movff	tblptrl,fsr0l
 29258  002E54  CFF7 FFEA          	movff	tblptrh,fsr0h
 29259  002E58  50EF               	movf	indf0,w,c
 29260  002E5A                     i2u638_40:
 29261  002E5A  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 29262  002E5C  5001               	movf	??_USBStdGetDscHandler,w,c
 29263  002E5E  0100               	movlb	0	; () banked
 29264  002E60  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 29265  002E62  6BC9               	clrf	(_inPipes+5)& (0+255),b	;volatile
 29266                           
 29267                           ;usb_device.c: 1745: }
 29268  002E64  0012               	return	
 29269  002E66                     i2l2075:
 29270                           
 29271                           ;usb_device.c: 1746: else
 29272                           ;usb_device.c: 1747: {
 29273                           ;usb_device.c: 1748: inPipes[0].info.Val = 0;
 29274                           
 29275                           ; BSR set to: 0
 29276  002E66  0E00               	movlw	0
 29277  002E68  0100               	movlb	0	; () banked
 29278  002E6A  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 29279                           
 29280                           ; BSR set to: 0
 29281                           ;usb_device.c: 1749: }
 29282                           ;usb_device.c: 1750: break;
 29283  002E6C  0012               	return	
 29284  002E6E                     
 29285                           ;usb_device.c: 1752: inPipes[0].info.Val = 0;
 29286                           
 29287                           ; BSR set to: 0
 29288  002E6E  0E00               	movlw	0
 29289  002E70  0100               	movlb	0	; () banked
 29290  002E72  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 29291                           
 29292                           ; BSR set to: 0
 29293                           ;usb_device.c: 1754: }
 29294                           
 29295                           ;usb_device.c: 1753: break;
 29296  002E74  0012               	return	
 29297  002E76                     i2l2068:
 29298                           
 29299                           ; BSR set to: 0
 29300                           
 29301                           ; BSR set to: 0
 29302  002E76  0104               	movlb	4	; () banked
 29303  002E78  5133               	movf	51,w,b	;volatile
 29304                           
 29305                           ; Switch size 1, requested type "space"
 29306                           ; Number of cases is 3, Range of values is 1 to 3
 29307                           ; switch strategies available:
 29308                           ; Name         Instructions Cycles
 29309                           ; simple_byte           10     6 (average)
 29310                           ;	Chosen strategy is simple_byte
 29311  002E7A  0A01               	xorlw	1	; case 1
 29312  002E7C  B4D8               	btfsc	status,2,c
 29313  002E7E  D773               	goto	i2l2069
 29314  002E80  0A03               	xorlw	3	; case 2
 29315  002E82  B4D8               	btfsc	status,2,c
 29316  002E84  D77A               	goto	i2l2071
 29317  002E86  0A01               	xorlw	1	; case 3
 29318  002E88  B4D8               	btfsc	status,2,c
 29319  002E8A  D7C2               	goto	i2l2074
 29320  002E8C  D7F0               	goto	i2l2077
 29321  002E8E                     __end_of_USBStdGetDscHandler:
 29322                           	opt stack 0
 29323                           pclatu	equ	0xFFB
 29324                           pclath	equ	0xFFA
 29325                           tblptru	equ	0xFF8
 29326                           tblptrh	equ	0xFF7
 29327                           tblptrl	equ	0xFF6
 29328                           tablat	equ	0xFF5
 29329                           prodh	equ	0xFF4
 29330                           prodl	equ	0xFF3
 29331                           intcon	equ	0xFF2
 29332                           intcon2	equ	0xFF1
 29333                           intcon3	equ	0xFF0
 29334                           indf0	equ	0xFEF
 29335                           postinc0	equ	0xFEE
 29336                           fsr0h	equ	0xFEA
 29337                           fsr0l	equ	0xFE9
 29338                           wreg	equ	0xFE8
 29339                           indf1	equ	0xFE7
 29340                           postdec1	equ	0xFE5
 29341                           fsr1h	equ	0xFE2
 29342                           fsr1l	equ	0xFE1
 29343                           indf2	equ	0xFDF
 29344                           postinc2	equ	0xFDE
 29345                           postdec2	equ	0xFDD
 29346                           plusw2	equ	0xFDB
 29347                           fsr2h	equ	0xFDA
 29348                           fsr2l	equ	0xFD9
 29349                           status	equ	0xFD8
 29350                           
 29351 ;; *************** function _USBStdFeatureReqHandler *****************
 29352 ;; Defined at:
 29353 ;;		line 2385 in file "../Includes/Usb/Framework/usb_device.c"
 29354 ;; Parameters:    Size  Location     Type
 29355 ;;		None
 29356 ;; Auto vars:     Size  Location     Type
 29357 ;;  p               2   25[COMRAM] PTR struct __BDT
 29358 ;;		 -> BDT(48), NULL(0), 
 29359 ;;  pUEP            2   22[COMRAM] PTR unsigned char 
 29360 ;;		 -> UEP0(1), 
 29361 ;;  current_ep_d    1   24[COMRAM] struct .
 29362 ;; Return value:  Size  Location     Type
 29363 ;;                  1    wreg      void 
 29364 ;; Registers used:
 29365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29366 ;; Tracked objects:
 29367 ;;		On entry : 0/0
 29368 ;;		On exit  : 0/0
 29369 ;;		Unchanged: 0/0
 29370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29371 ;;      Params:         0       0       0       0       0       0       0       0       0
 29372 ;;      Locals:         5       0       0       0       0       0       0       0       0
 29373 ;;      Temps:          1       0       0       0       0       0       0       0       0
 29374 ;;      Totals:         6       0       0       0       0       0       0       0       0
 29375 ;;Total ram usage:        6 bytes
 29376 ;; Hardware stack levels used:    1
 29377 ;; Hardware stack levels required when called:    5
 29378 ;; This function calls:
 29379 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 29380 ;; This function is called by:
 29381 ;;		_USBCheckStdRequest
 29382 ;; This function uses a non-reentrant model
 29383 ;;
 29384                           
 29385                           	psect	text128
 29386  00251C                     __ptext128:
 29387                           	opt stack 0
 29388  00251C                     _USBStdFeatureReqHandler:
 29389                           	opt stack 11
 29390                           
 29391                           ;usb_device.c: 2387: BDT_ENTRY *p;
 29392                           ;usb_device.c: 2388: EP_STATUS current_ep_data;
 29393                           ;usb_device.c: 2390: unsigned char* pUEP;
 29394                           ;usb_device.c: 2393: if((SetupPkt.bFeature == 1)&&
 29395                           ;usb_device.c: 2394: (SetupPkt.Recipient == (0x00)))
 29396                           
 29397                           ;incstack = 0
 29398  00251C  0104               	movlb	4	; () banked
 29399  00251E  0532               	decf	50,w,b	;volatile
 29400  002520  A4D8               	btfss	status,2,c
 29401  002522  D010               	goto	i2l2163
 29402                           
 29403                           ; BSR set to: 4
 29404  002524  5130               	movf	48,w,b	;volatile
 29405  002526  0B1F               	andlw	31
 29406  002528  0900               	iorlw	0
 29407  00252A  A4D8               	btfss	status,2,c
 29408  00252C  D00B               	goto	i2l2163
 29409                           
 29410                           ; BSR set to: 4
 29411                           ;usb_device.c: 2395: {
 29412                           ;usb_device.c: 2396: inPipes[0].info.bits.busy = 1;
 29413  00252E  0100               	movlb	0	; () banked
 29414  002530  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 29415                           
 29416                           ; BSR set to: 0
 29417                           ;usb_device.c: 2397: if(SetupPkt.bRequest == 3)
 29418  002532  0E03               	movlw	3
 29419  002534  0104               	movlb	4	; () banked
 29420  002536  1931               	xorwf	49,w,b	;volatile
 29421  002538  A4D8               	btfss	status,2,c
 29422  00253A  D002               	goto	i2l2162
 29423                           
 29424                           ; BSR set to: 4
 29425                           ;usb_device.c: 2398: RemoteWakeup = 1;
 29426  00253C  0E01               	movlw	1
 29427  00253E  D001               	goto	L27
 29428  002540                     i2l2162:
 29429                           
 29430                           ; BSR set to: 4
 29431                           ;usb_device.c: 2399: else
 29432                           ;usb_device.c: 2400: RemoteWakeup = 0;
 29433                           
 29434                           ; BSR set to: 4
 29435  002540  0E00               	movlw	0
 29436  002542                     L27:
 29437  002542  6E49               	movwf	_RemoteWakeup,c	;volatile
 29438  002544                     i2l2163:
 29439                           
 29440                           ; BSR set to: 4
 29441                           ;usb_device.c: 2401: }
 29442                           ;usb_device.c: 2404: if((SetupPkt.bFeature == 0)&&
 29443                           ;usb_device.c: 2405: (SetupPkt.Recipient == (0x02))&&
 29444                           ;usb_device.c: 2406: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 29445                           ;usb_device.c: 2407: (USBDeviceState == CONFIGURED_STATE))
 29446                           
 29447                           ; BSR set to: 4
 29448  002544  5132               	movf	50,w,b	;volatile
 29449  002546  A4D8               	btfss	status,2,c
 29450  002548  0012               	return	
 29451                           
 29452                           ; BSR set to: 4
 29453  00254A  5130               	movf	48,w,b	;volatile
 29454  00254C  0B1F               	andlw	31
 29455  00254E  0A02               	xorlw	2
 29456  002550  A4D8               	btfss	status,2,c
 29457  002552  0012               	return	
 29458                           
 29459                           ; BSR set to: 4
 29460  002554  5134               	movf	52,w,b	;volatile
 29461  002556  0B0F               	andlw	15
 29462  002558  0900               	iorlw	0
 29463  00255A  B4D8               	btfsc	status,2,c
 29464  00255C  0012               	return	
 29465                           
 29466                           ; BSR set to: 4
 29467  00255E  5134               	movf	52,w,b	;volatile
 29468  002560  0B0F               	andlw	15
 29469  002562  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29470  002564  0E03               	movlw	3
 29471  002566  6016               	cpfslt	??_USBStdFeatureReqHandler,c
 29472  002568  0012               	return	
 29473                           
 29474                           ; BSR set to: 4
 29475  00256A  0E20               	movlw	32
 29476  00256C  0100               	movlb	0	; () banked
 29477  00256E  19EB               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 29478  002570  A4D8               	btfss	status,2,c
 29479  002572  0012               	return	
 29480                           
 29481                           ; BSR set to: 0
 29482                           ;usb_device.c: 2408: {
 29483                           ;usb_device.c: 2411: inPipes[0].info.bits.busy = 1;
 29484  002574  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 29485                           
 29486                           ;usb_device.c: 2414: if(SetupPkt.EPDir == 0)
 29487  002576  0104               	movlb	4	; () banked
 29488  002578  BF34               	btfsc	52,7,b	;volatile
 29489  00257A  D019               	goto	i2l2165
 29490                           
 29491                           ; BSR set to: 4
 29492                           ;usb_device.c: 2415: {
 29493                           ;usb_device.c: 2416: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 29494  00257C  5134               	movf	52,w,b	;volatile
 29495  00257E  0B0F               	andlw	15
 29496  002580  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29497  002582  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29498  002584  0D02               	mullw	2
 29499  002586  0E40               	movlw	low _pBDTEntryOut
 29500  002588  24F3               	addwf	prodl,w,c
 29501  00258A  6ED9               	movwf	fsr2l,c
 29502  00258C  0E01               	movlw	high _pBDTEntryOut
 29503  00258E  20F4               	addwfc	prodh,w,c
 29504  002590  6EDA               	movwf	fsr2h,c
 29505  002592  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 29506  002596  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 29507                           
 29508                           ;usb_device.c: 2417: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 29509  00259A  5134               	movf	52,w,b	;volatile
 29510  00259C  0B0F               	andlw	15
 29511  00259E  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29512  0025A0  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29513  0025A2  0D01               	mullw	1
 29514  0025A4  0ED0               	movlw	low _ep_data_out
 29515  0025A6  24F3               	addwf	prodl,w,c
 29516  0025A8  6ED9               	movwf	fsr2l,c
 29517  0025AA  0E00               	movlw	high _ep_data_out
 29518  0025AC  D018               	goto	L28
 29519  0025AE                     i2l2165:
 29520                           
 29521                           ; BSR set to: 4
 29522                           ;usb_device.c: 2419: else
 29523                           ;usb_device.c: 2420: {
 29524                           ;usb_device.c: 2421: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 29525                           
 29526                           ; BSR set to: 4
 29527  0025AE  5134               	movf	52,w,b	;volatile
 29528  0025B0  0B0F               	andlw	15
 29529  0025B2  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29530  0025B4  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29531  0025B6  0D02               	mullw	2
 29532  0025B8  0ECA               	movlw	low _pBDTEntryIn
 29533  0025BA  24F3               	addwf	prodl,w,c
 29534  0025BC  6ED9               	movwf	fsr2l,c
 29535  0025BE  0E00               	movlw	high _pBDTEntryIn
 29536  0025C0  20F4               	addwfc	prodh,w,c
 29537  0025C2  6EDA               	movwf	fsr2h,c
 29538  0025C4  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 29539  0025C8  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 29540                           
 29541                           ;usb_device.c: 2422: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 29542  0025CC  5134               	movf	52,w,b	;volatile
 29543  0025CE  0B0F               	andlw	15
 29544  0025D0  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29545  0025D2  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29546  0025D4  0D01               	mullw	1
 29547  0025D6  0ED3               	movlw	low _ep_data_in
 29548  0025D8  24F3               	addwf	prodl,w,c
 29549  0025DA  6ED9               	movwf	fsr2l,c
 29550  0025DC  0E00               	movlw	high _ep_data_in
 29551  0025DE                     L28:
 29552  0025DE  20F4               	addwfc	prodh,w,c
 29553  0025E0  6EDA               	movwf	fsr2h,c
 29554  0025E2  50DF               	movf	indf2,w,c
 29555  0025E4  6E19               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 29556                           
 29557                           ; BSR set to: 4
 29558                           ;usb_device.c: 2423: }
 29559                           ;usb_device.c: 2428: if(current_ep_data.bits.ping_pong_state == 0)
 29560                           
 29561                           ; BSR set to: 4
 29562  0025E6  B019               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 29563  0025E8  D002               	goto	i2l2167
 29564                           
 29565                           ; BSR set to: 4
 29566                           ;usb_device.c: 2429: {
 29567                           ;usb_device.c: 2430: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 29568  0025EA  941A               	bcf	USBStdFeatureReqHandler@p,2,c
 29569                           
 29570                           ;usb_device.c: 2431: }
 29571  0025EC  D001               	goto	i2l2168
 29572  0025EE                     i2l2167:
 29573                           
 29574                           ; BSR set to: 4
 29575                           ;usb_device.c: 2432: else
 29576                           ;usb_device.c: 2433: {
 29577                           ;usb_device.c: 2434: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 29578                           
 29579                           ; BSR set to: 4
 29580  0025EE  841A               	bsf	USBStdFeatureReqHandler@p,2,c
 29581  0025F0                     i2l2168:
 29582                           
 29583                           ; BSR set to: 4
 29584                           ;usb_device.c: 2435: }
 29585                           ;usb_device.c: 2439: if(SetupPkt.EPDir == 0)
 29586                           
 29587                           ; BSR set to: 4
 29588  0025F0  BF34               	btfsc	52,7,b	;volatile
 29589  0025F2  D00A               	goto	i2l2169
 29590                           
 29591                           ; BSR set to: 4
 29592                           ;usb_device.c: 2440: {
 29593                           ;usb_device.c: 2441: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 29594  0025F4  5134               	movf	52,w,b	;volatile
 29595  0025F6  0B0F               	andlw	15
 29596  0025F8  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29597  0025FA  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29598  0025FC  0D02               	mullw	2
 29599  0025FE  0E40               	movlw	low _pBDTEntryOut
 29600  002600  24F3               	addwf	prodl,w,c
 29601  002602  6ED9               	movwf	fsr2l,c
 29602  002604  0E01               	movlw	high _pBDTEntryOut
 29603  002606  D009               	goto	L29
 29604  002608                     i2l2169:
 29605                           
 29606                           ; BSR set to: 4
 29607                           ;usb_device.c: 2443: else
 29608                           ;usb_device.c: 2444: {
 29609                           ;usb_device.c: 2445: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 29610                           
 29611                           ; BSR set to: 4
 29612  002608  5134               	movf	52,w,b	;volatile
 29613  00260A  0B0F               	andlw	15
 29614  00260C  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29615  00260E  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29616  002610  0D02               	mullw	2
 29617  002612  0ECA               	movlw	low _pBDTEntryIn
 29618  002614  24F3               	addwf	prodl,w,c
 29619  002616  6ED9               	movwf	fsr2l,c
 29620  002618  0E00               	movlw	high _pBDTEntryIn
 29621  00261A                     L29:
 29622  00261A  20F4               	addwfc	prodh,w,c
 29623  00261C  6EDA               	movwf	fsr2h,c
 29624  00261E  C01A  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 29625  002622  C01B  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 29626                           
 29627                           ; BSR set to: 4
 29628                           ;usb_device.c: 2446: }
 29629                           ;usb_device.c: 2449: if(SetupPkt.bRequest == 3)
 29630                           
 29631                           ; BSR set to: 4
 29632  002626  0E03               	movlw	3
 29633  002628  1931               	xorwf	49,w,b	;volatile
 29634  00262A  A4D8               	btfss	status,2,c
 29635  00262C  D02D               	goto	i2l2171
 29636                           
 29637                           ; BSR set to: 4
 29638                           ;usb_device.c: 2450: {
 29639                           ;usb_device.c: 2451: if(p->STAT.UOWN == 1)
 29640  00262E  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29641  002632  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29642  002636  AEDF               	btfss	indf2,7,c
 29643  002638  D01A               	goto	i2l2174
 29644                           
 29645                           ; BSR set to: 4
 29646                           ;usb_device.c: 2452: {
 29647                           ;usb_device.c: 2455: if(SetupPkt.EPDir == 0)
 29648  00263A  BF34               	btfsc	52,7,b	;volatile
 29649  00263C  D00A               	goto	i2l2173
 29650                           
 29651                           ; BSR set to: 4
 29652                           ;usb_device.c: 2456: {
 29653                           ;usb_device.c: 2457: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 29654  00263E  5134               	movf	52,w,b	;volatile
 29655  002640  0B0F               	andlw	15
 29656  002642  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29657  002644  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29658  002646  0D01               	mullw	1
 29659  002648  0ED0               	movlw	low _ep_data_out
 29660  00264A  24F3               	addwf	prodl,w,c
 29661  00264C  6ED9               	movwf	fsr2l,c
 29662  00264E  0E00               	movlw	high _ep_data_out
 29663  002650  D00A               	goto	L30
 29664  002652                     i2l2173:
 29665                           
 29666                           ;usb_device.c: 2459: else
 29667                           ;usb_device.c: 2460: {
 29668                           ;usb_device.c: 2461: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 29669                           
 29670                           ; BSR set to: 0
 29671  002652  0104               	movlb	4	; () banked
 29672  002654  5134               	movf	52,w,b	;volatile
 29673  002656  0B0F               	andlw	15
 29674  002658  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29675  00265A  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29676  00265C  0D01               	mullw	1
 29677  00265E  0ED3               	movlw	low _ep_data_in
 29678  002660  24F3               	addwf	prodl,w,c
 29679  002662  6ED9               	movwf	fsr2l,c
 29680  002664  0E00               	movlw	high _ep_data_in
 29681  002666                     L30:
 29682  002666  20F4               	addwfc	prodh,w,c
 29683  002668  6EDA               	movwf	fsr2h,c
 29684  00266A  0100               	movlb	0	; () banked
 29685  00266C  82DF               	bsf	indf2,1,c
 29686  00266E                     i2l2174:
 29687                           
 29688                           ;usb_device.c: 2462: }
 29689                           ;usb_device.c: 2463: }
 29690                           ;usb_device.c: 2466: p->STAT.Val |= 0x04;
 29691                           
 29692                           ; BSR set to: 0
 29693                           
 29694                           ; BSR set to: 0
 29695  00266E  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29696  002672  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29697  002676  0E00               	movlw	0
 29698  002678  84DB               	bsf	plusw2,2,c
 29699                           
 29700                           ;usb_device.c: 2467: p->STAT.Val |= 0x80;
 29701  00267A  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29702  00267E  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29703  002682  0E00               	movlw	0
 29704  002684  8EDB               	bsf	plusw2,7,c
 29705                           
 29706                           ;usb_device.c: 2468: }
 29707  002686  0012               	return	
 29708  002688                     i2l2171:
 29709                           
 29710                           ;usb_device.c: 2469: else
 29711                           ;usb_device.c: 2470: {
 29712                           ;usb_device.c: 2473: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 29713  002688  0E04               	movlw	4
 29714  00268A  1A1A               	xorwf	USBStdFeatureReqHandler@p,f,c
 29715                           
 29716                           ;usb_device.c: 2475: if(p->STAT.UOWN == 1)
 29717  00268C  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29718  002690  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29719  002694  AEDF               	btfss	indf2,7,c
 29720  002696  D01B               	goto	i2l2176
 29721                           
 29722                           ;usb_device.c: 2476: {
 29723                           ;usb_device.c: 2479: p->STAT.Val &= (~0x80);
 29724  002698  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29725  00269C  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29726  0026A0  0E7F               	movlw	127
 29727  0026A2  16DF               	andwf	indf2,f,c
 29728                           
 29729                           ;usb_device.c: 2480: p->STAT.Val |= 0x40;
 29730  0026A4  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29731  0026A8  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29732  0026AC  0E00               	movlw	0
 29733  0026AE  8CDB               	bsf	plusw2,6,c
 29734                           
 29735                           ;usb_device.c: 2481: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 29736  0026B0  0E00               	movlw	0
 29737  0026B2  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 29738  0026B4  0E05               	movlw	5
 29739  0026B6  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 29740  0026B8  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 29741  0026BC  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 29742  0026C0  0E00               	movlw	0
 29743  0026C2  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 29744  0026C4  0E02               	movlw	2
 29745  0026C6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 29746  0026C8  EC2D  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 29747                           
 29748                           ;usb_device.c: 2482: }
 29749  0026CC  D006               	goto	i2l2177
 29750  0026CE                     i2l2176:
 29751                           
 29752                           ;usb_device.c: 2483: else
 29753                           ;usb_device.c: 2484: {
 29754                           ;usb_device.c: 2486: p->STAT.Val |= 0x40;
 29755  0026CE  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29756  0026D2  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29757  0026D6  0E00               	movlw	0
 29758  0026D8  8CDB               	bsf	plusw2,6,c
 29759  0026DA                     i2l2177:
 29760                           
 29761                           ;usb_device.c: 2487: }
 29762                           ;usb_device.c: 2491: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 29763  0026DA  0E04               	movlw	4
 29764  0026DC  1A1A               	xorwf	USBStdFeatureReqHandler@p,f,c
 29765                           
 29766                           ;usb_device.c: 2497: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 29767  0026DE  B219               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 29768  0026E0  D006               	goto	i2u660_40
 29769  0026E2  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29770  0026E6  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29771  0026EA  AEDF               	btfss	indf2,7,c
 29772  0026EC  D030               	goto	i2l2178
 29773  0026EE                     i2u660_40:
 29774                           
 29775                           ;usb_device.c: 2498: {
 29776                           ;usb_device.c: 2499: if(SetupPkt.EPDir == 0)
 29777  0026EE  0104               	movlb	4	; () banked
 29778  0026F0  BF34               	btfsc	52,7,b	;volatile
 29779  0026F2  D00A               	goto	i2l2181
 29780                           
 29781                           ; BSR set to: 4
 29782                           ;usb_device.c: 2500: {
 29783                           ;usb_device.c: 2501: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 29784  0026F4  5134               	movf	52,w,b	;volatile
 29785  0026F6  0B0F               	andlw	15
 29786  0026F8  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29787  0026FA  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29788  0026FC  0D01               	mullw	1
 29789  0026FE  0ED0               	movlw	low _ep_data_out
 29790  002700  24F3               	addwf	prodl,w,c
 29791  002702  6ED9               	movwf	fsr2l,c
 29792  002704  0E00               	movlw	high _ep_data_out
 29793  002706  D00A               	goto	L31
 29794  002708                     i2l2181:
 29795                           
 29796                           ;usb_device.c: 2503: else
 29797                           ;usb_device.c: 2504: {
 29798                           ;usb_device.c: 2505: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 29799                           
 29800                           ; BSR set to: 0
 29801  002708  0104               	movlb	4	; () banked
 29802  00270A  5134               	movf	52,w,b	;volatile
 29803  00270C  0B0F               	andlw	15
 29804  00270E  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29805  002710  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29806  002712  0D01               	mullw	1
 29807  002714  0ED3               	movlw	low _ep_data_in
 29808  002716  24F3               	addwf	prodl,w,c
 29809  002718  6ED9               	movwf	fsr2l,c
 29810  00271A  0E00               	movlw	high _ep_data_in
 29811  00271C                     L31:
 29812  00271C  20F4               	addwfc	prodh,w,c
 29813  00271E  6EDA               	movwf	fsr2h,c
 29814  002720  0100               	movlb	0	; () banked
 29815  002722  92DF               	bcf	indf2,1,c
 29816                           
 29817                           ; BSR set to: 0
 29818                           ;usb_device.c: 2506: }
 29819                           ;usb_device.c: 2508: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 29820                           
 29821                           ; BSR set to: 0
 29822  002724  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29823  002728  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29824  00272C  0E3B               	movlw	59
 29825  00272E  16DF               	andwf	indf2,f,c
 29826                           
 29827                           ; BSR set to: 0
 29828                           ;usb_device.c: 2511: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 29829  002730  0E00               	movlw	0
 29830  002732  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 29831  002734  0E05               	movlw	5
 29832  002736  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 29833  002738  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 29834  00273C  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 29835  002740  0E00               	movlw	0
 29836  002742  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 29837  002744  0E02               	movlw	2
 29838  002746  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 29839  002748  EC2D  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 29840                           
 29841                           ;usb_device.c: 2512: }
 29842  00274C  D006               	goto	i2l2183
 29843  00274E                     i2l2178:
 29844                           
 29845                           ;usb_device.c: 2513: else
 29846                           ;usb_device.c: 2514: {
 29847                           ;usb_device.c: 2516: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 29848  00274E  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29849  002752  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29850  002756  0E3B               	movlw	59
 29851  002758  16DF               	andwf	indf2,f,c
 29852  00275A                     i2l2183:
 29853                           
 29854                           ;usb_device.c: 2517: }
 29855                           ;usb_device.c: 2519: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 29856  00275A  0104               	movlb	4	; () banked
 29857  00275C  5134               	movf	52,w,b	;volatile
 29858  00275E  0B0F               	andlw	15
 29859  002760  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29860  002762  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29861  002764  0D01               	mullw	1
 29862  002766  0E6A               	movlw	106
 29863  002768  24F3               	addwf	prodl,w,c
 29864  00276A  6E17               	movwf	USBStdFeatureReqHandler@pUEP,c
 29865  00276C  0E0F               	movlw	15
 29866  00276E  20F4               	addwfc	prodh,w,c
 29867  002770  6E18               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 29868                           
 29869                           ; BSR set to: 4
 29870                           ;usb_device.c: 2522: *pUEP &= ~0x0001;
 29871  002772  C017  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 29872  002776  C018  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 29873  00277A  0EFE               	movlw	254
 29874  00277C  16DF               	andwf	indf2,f,c
 29875                           
 29876                           ; BSR set to: 4
 29877  00277E  0012               	return	
 29878  002780                     __end_of_USBStdFeatureReqHandler:
 29879                           	opt stack 0
 29880                           pclatu	equ	0xFFB
 29881                           pclath	equ	0xFFA
 29882                           tblptru	equ	0xFF8
 29883                           tblptrh	equ	0xFF7
 29884                           tblptrl	equ	0xFF6
 29885                           tablat	equ	0xFF5
 29886                           prodh	equ	0xFF4
 29887                           prodl	equ	0xFF3
 29888                           intcon	equ	0xFF2
 29889                           intcon2	equ	0xFF1
 29890                           intcon3	equ	0xFF0
 29891                           indf0	equ	0xFEF
 29892                           postinc0	equ	0xFEE
 29893                           fsr0h	equ	0xFEA
 29894                           fsr0l	equ	0xFE9
 29895                           wreg	equ	0xFE8
 29896                           indf1	equ	0xFE7
 29897                           postdec1	equ	0xFE5
 29898                           fsr1h	equ	0xFE2
 29899                           fsr1l	equ	0xFE1
 29900                           indf2	equ	0xFDF
 29901                           postinc2	equ	0xFDE
 29902                           postdec2	equ	0xFDD
 29903                           plusw2	equ	0xFDB
 29904                           fsr2h	equ	0xFDA
 29905                           fsr2l	equ	0xFD9
 29906                           status	equ	0xFD8
 29907                           
 29908 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 29909 ;; Defined at:
 29910 ;;		line 308 in file "../Includes/Board/USBapp.c"
 29911 ;; Parameters:    Size  Location     Type
 29912 ;;  event           2   13[COMRAM] enum E5983
 29913 ;;  pdata           2   15[COMRAM] PTR void 
 29914 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(48), NULL(0), 
 29915 ;;  size            2   17[COMRAM] unsigned int 
 29916 ;; Auto vars:     Size  Location     Type
 29917 ;;		None
 29918 ;; Return value:  Size  Location     Type
 29919 ;;                  1    wreg      unsigned char 
 29920 ;; Registers used:
 29921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29922 ;; Tracked objects:
 29923 ;;		On entry : 0/0
 29924 ;;		On exit  : 0/0
 29925 ;;		Unchanged: 0/0
 29926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29927 ;;      Params:         6       0       0       0       0       0       0       0       0
 29928 ;;      Locals:         0       0       0       0       0       0       0       0       0
 29929 ;;      Temps:          2       0       0       0       0       0       0       0       0
 29930 ;;      Totals:         8       0       0       0       0       0       0       0       0
 29931 ;;Total ram usage:        8 bytes
 29932 ;; Hardware stack levels used:    1
 29933 ;; Hardware stack levels required when called:    4
 29934 ;; This function calls:
 29935 ;;		_USBCheckCDCRequest
 29936 ;;		_USBapp_CdcEmulatorInitialize
 29937 ;; This function is called by:
 29938 ;;		_USBDeviceTasks
 29939 ;;		_USBStdSetCfgHandler
 29940 ;;		_USBSuspend
 29941 ;;		_USBWakeFromSuspend
 29942 ;;		_USBCtrlTrfSetupHandler
 29943 ;;		_USBCheckStdRequest
 29944 ;;		_USBStdFeatureReqHandler
 29945 ;; This function uses a non-reentrant model
 29946 ;;
 29947                           
 29948                           	psect	text129
 29949  00565A                     __ptext129:
 29950                           	opt stack 0
 29951  00565A                     _USER_USB_CALLBACK_EVENT_HANDLER:
 29952                           	opt stack 15
 29953                           
 29954                           ;USBapp.c: 310: switch( (int) event )
 29955                           
 29956                           ;incstack = 0
 29957  00565A  D006               	goto	i2l968
 29958  00565C                     
 29959                           ;USBapp.c: 334: USBapp_CdcEmulatorInitialize();
 29960  00565C  ECB6  F02B         	call	_USBapp_CdcEmulatorInitialize	;wreg free
 29961                           
 29962                           ;USBapp.c: 338: break;
 29963                           
 29964                           ;USBapp.c: 337: case EVENT_SET_DESCRIPTOR:
 29965                           
 29966                           ;USBapp.c: 335: break;
 29967  005660  0012               	return	
 29968  005662                     
 29969                           ;USBapp.c: 343: USBCheckCDCRequest();
 29970  005662  EC48  F024         	call	_USBCheckCDCRequest	;wreg free
 29971                           
 29972                           ;USBapp.c: 354: }
 29973                           
 29974                           ;USBapp.c: 353: break;
 29975                           
 29976                           ;USBapp.c: 352: default:
 29977                           
 29978                           ;USBapp.c: 350: break;
 29979                           
 29980                           ;USBapp.c: 349: case EVENT_TRANSFER_TERMINATED:
 29981                           
 29982                           ;USBapp.c: 347: break;
 29983                           
 29984                           ;USBapp.c: 346: case EVENT_BUS_ERROR:
 29985                           
 29986                           ;USBapp.c: 344: break;
 29987  005666  0012               	return	
 29988  005668                     i2l968:
 29989  005668  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 29990  00566C  C00F  F015         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 29991                           
 29992                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 29993                           ; Switch size 1, requested type "space"
 29994                           ; Number of cases is 2, Range of values is 0 to 127
 29995                           ; switch strategies available:
 29996                           ; Name         Instructions Cycles
 29997                           ; simple_byte            7     4 (average)
 29998                           ;	Chosen strategy is simple_byte
 29999  005670  5015               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 30000  005672  0A00               	xorlw	0	; case 0
 30001  005674  B4D8               	btfsc	status,2,c
 30002  005676  D004               	goto	i2l12611
 30003  005678  0A7F               	xorlw	127	; case 127
 30004  00567A  A4D8               	btfss	status,2,c
 30005  00567C  0012               	return	
 30006  00567E  D018               	goto	i2l12613
 30007  005680                     i2l12611:
 30008                           
 30009                           ; Switch size 1, requested type "space"
 30010                           ; Number of cases is 8, Range of values is 1 to 117
 30011                           ; switch strategies available:
 30012                           ; Name         Instructions Cycles
 30013                           ; simple_byte           25    13 (average)
 30014                           ;	Chosen strategy is simple_byte
 30015  005680  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 30016  005682  0A01               	xorlw	1	; case 1
 30017  005684  B4D8               	btfsc	status,2,c
 30018  005686  D7EA               	goto	i2l974
 30019  005688  0A03               	xorlw	3	; case 2
 30020  00568A  B4D8               	btfsc	status,2,c
 30021  00568C  0012               	return	
 30022  00568E  0A01               	xorlw	1	; case 3
 30023  005690  B4D8               	btfsc	status,2,c
 30024  005692  D7E7               	goto	i2l976
 30025  005694  0A06               	xorlw	6	; case 5
 30026  005696  B4D8               	btfsc	status,2,c
 30027  005698  0012               	return	
 30028  00569A  0A77               	xorlw	119	; case 114
 30029  00569C  B4D8               	btfsc	status,2,c
 30030  00569E  0012               	return	
 30031  0056A0  0A01               	xorlw	1	; case 115
 30032  0056A2  B4D8               	btfsc	status,2,c
 30033  0056A4  0012               	return	
 30034  0056A6  0A07               	xorlw	7	; case 116
 30035  0056A8  B4D8               	btfsc	status,2,c
 30036  0056AA  0012               	return	
 30037  0056AC  0A01               	xorlw	1	; case 117
 30038  0056AE  0012               	return	
 30039  0056B0                     i2l12613:
 30040                           
 30041                           ; Switch size 1, requested type "space"
 30042                           ; Number of cases is 1, Range of values is 255 to 255
 30043                           ; switch strategies available:
 30044                           ; Name         Instructions Cycles
 30045                           ; simple_byte            4     3 (average)
 30046                           ;	Chosen strategy is simple_byte
 30047  0056B0  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 30048  0056B2  0AFF               	xorlw	255	; case 255
 30049  0056B4  0012               	return	
 30050  0056B6                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 30051                           	opt stack 0
 30052                           pclatu	equ	0xFFB
 30053                           pclath	equ	0xFFA
 30054                           tblptru	equ	0xFF8
 30055                           tblptrh	equ	0xFF7
 30056                           tblptrl	equ	0xFF6
 30057                           tablat	equ	0xFF5
 30058                           prodh	equ	0xFF4
 30059                           prodl	equ	0xFF3
 30060                           intcon	equ	0xFF2
 30061                           intcon2	equ	0xFF1
 30062                           intcon3	equ	0xFF0
 30063                           indf0	equ	0xFEF
 30064                           postinc0	equ	0xFEE
 30065                           fsr0h	equ	0xFEA
 30066                           fsr0l	equ	0xFE9
 30067                           wreg	equ	0xFE8
 30068                           indf1	equ	0xFE7
 30069                           postdec1	equ	0xFE5
 30070                           fsr1h	equ	0xFE2
 30071                           fsr1l	equ	0xFE1
 30072                           indf2	equ	0xFDF
 30073                           postinc2	equ	0xFDE
 30074                           postdec2	equ	0xFDD
 30075                           plusw2	equ	0xFDB
 30076                           fsr2h	equ	0xFDA
 30077                           fsr2l	equ	0xFD9
 30078                           status	equ	0xFD8
 30079                           
 30080 ;; *************** function _USBapp_CdcEmulatorInitialize *****************
 30081 ;; Defined at:
 30082 ;;		line 144 in file "../Includes/Board/USBapp.c"
 30083 ;; Parameters:    Size  Location     Type
 30084 ;;		None
 30085 ;; Auto vars:     Size  Location     Type
 30086 ;;  i               1   12[COMRAM] unsigned char 
 30087 ;; Return value:  Size  Location     Type
 30088 ;;                  1    wreg      void 
 30089 ;; Registers used:
 30090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30091 ;; Tracked objects:
 30092 ;;		On entry : 0/0
 30093 ;;		On exit  : 0/0
 30094 ;;		Unchanged: 0/0
 30095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30096 ;;      Params:         0       0       0       0       0       0       0       0       0
 30097 ;;      Locals:         1       0       0       0       0       0       0       0       0
 30098 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30099 ;;      Totals:         1       0       0       0       0       0       0       0       0
 30100 ;;Total ram usage:        1 bytes
 30101 ;; Hardware stack levels used:    1
 30102 ;; Hardware stack levels required when called:    3
 30103 ;; This function calls:
 30104 ;;		_CDCInitEP
 30105 ;;		i2_EUSART_Initialize
 30106 ;; This function is called by:
 30107 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 30108 ;; This function uses a non-reentrant model
 30109 ;;
 30110                           
 30111                           	psect	text130
 30112  00576C                     __ptext130:
 30113                           	opt stack 0
 30114  00576C                     _USBapp_CdcEmulatorInitialize:
 30115                           	opt stack 15
 30116                           
 30117                           ;USBapp.c: 147: CDCInitEP();
 30118                           
 30119                           ;incstack = 0
 30120  00576C  ECCB  F02A         	call	_CDCInitEP	;wreg free
 30121                           
 30122                           ;USBapp.c: 148: line_coding.bCharFormat = 0;
 30123  005770  0E00               	movlw	0
 30124  005772  0101               	movlb	1	; () banked
 30125  005774  6FED               	movwf	(_line_coding+4)& (0+255),b
 30126                           
 30127                           ; BSR set to: 1
 30128                           ;USBapp.c: 149: line_coding.bDataBits = 8;
 30129  005776  0E08               	movlw	8
 30130  005778  6FEF               	movwf	(_line_coding+6)& (0+255),b
 30131                           
 30132                           ; BSR set to: 1
 30133                           ;USBapp.c: 150: line_coding.bParityType = 0;
 30134  00577A  0E00               	movlw	0
 30135  00577C  6FEE               	movwf	(_line_coding+5)& (0+255),b
 30136                           
 30137                           ; BSR set to: 1
 30138                           ;USBapp.c: 151: line_coding.dwDTERate = 19200;
 30139  00577E  0E00               	movlw	0
 30140  005780  6FE9               	movwf	_line_coding& (0+255),b
 30141  005782  0E4B               	movlw	75
 30142  005784  6FEA               	movwf	(_line_coding+1)& (0+255),b
 30143  005786  0E00               	movlw	0
 30144  005788  6FEB               	movwf	(_line_coding+2)& (0+255),b
 30145  00578A  0E00               	movlw	0
 30146  00578C  6FEC               	movwf	(_line_coding+3)& (0+255),b
 30147                           
 30148                           ; BSR set to: 1
 30149                           ;USBapp.c: 152: EUSART_Initialize();
 30150  00578E  EC3F  F02E         	call	i2_EUSART_Initialize	;wreg free
 30151                           
 30152                           ;USBapp.c: 154: for (unsigned char i = 0; i <sizeof (USB_Buffer); i++)
 30153  005792  0E00               	movlw	0
 30154  005794  6E0D               	movwf	USBapp_CdcEmulatorInitialize@i,c
 30155  005796                     i2l8103:
 30156  005796  0E3F               	movlw	63
 30157  005798  640D               	cpfsgt	USBapp_CdcEmulatorInitialize@i,c
 30158  00579A  D001               	goto	i2l921
 30159  00579C  D00C               	goto	i2u594_40
 30160  00579E                     i2l921:
 30161                           
 30162                           ;USBapp.c: 155: {
 30163                           ;USBapp.c: 156: USB_Buffer[i] = 0;
 30164  00579E  500D               	movf	USBapp_CdcEmulatorInitialize@i,w,c
 30165  0057A0  0D01               	mullw	1
 30166  0057A2  0E80               	movlw	low _USB_Buffer
 30167  0057A4  24F3               	addwf	prodl,w,c
 30168  0057A6  6ED9               	movwf	fsr2l,c
 30169  0057A8  0E02               	movlw	high _USB_Buffer
 30170  0057AA  20F4               	addwfc	prodh,w,c
 30171  0057AC  6EDA               	movwf	fsr2h,c
 30172  0057AE  0E00               	movlw	0
 30173  0057B0  6EDF               	movwf	indf2,c
 30174  0057B2  2A0D               	incf	USBapp_CdcEmulatorInitialize@i,f,c
 30175  0057B4  D7F0               	goto	i2l8103
 30176  0057B6                     i2u594_40:
 30177                           
 30178                           ;USBapp.c: 157: }
 30179                           ;USBapp.c: 158: NextUSBOut = 0;
 30180  0057B6  0E00               	movlw	0
 30181  0057B8  0100               	movlb	0	; () banked
 30182  0057BA  6FE8               	movwf	_NextUSBOut& (0+255),b
 30183                           
 30184                           ;USBapp.c: 159: LastRS232Out = 0;
 30185  0057BC  0E00               	movlw	0
 30186  0057BE  6FE6               	movwf	_LastRS232Out& (0+255),b
 30187                           
 30188                           ; BSR set to: 0
 30189  0057C0  0012               	return		;funcret
 30190  0057C2                     __end_of_USBapp_CdcEmulatorInitialize:
 30191                           	opt stack 0
 30192                           pclatu	equ	0xFFB
 30193                           pclath	equ	0xFFA
 30194                           tblptru	equ	0xFF8
 30195                           tblptrh	equ	0xFF7
 30196                           tblptrl	equ	0xFF6
 30197                           tablat	equ	0xFF5
 30198                           prodh	equ	0xFF4
 30199                           prodl	equ	0xFF3
 30200                           intcon	equ	0xFF2
 30201                           intcon2	equ	0xFF1
 30202                           intcon3	equ	0xFF0
 30203                           indf0	equ	0xFEF
 30204                           postinc0	equ	0xFEE
 30205                           fsr0h	equ	0xFEA
 30206                           fsr0l	equ	0xFE9
 30207                           wreg	equ	0xFE8
 30208                           indf1	equ	0xFE7
 30209                           postdec1	equ	0xFE5
 30210                           fsr1h	equ	0xFE2
 30211                           fsr1l	equ	0xFE1
 30212                           indf2	equ	0xFDF
 30213                           postinc2	equ	0xFDE
 30214                           postdec2	equ	0xFDD
 30215                           plusw2	equ	0xFDB
 30216                           fsr2h	equ	0xFDA
 30217                           fsr2l	equ	0xFD9
 30218                           status	equ	0xFD8
 30219                           
 30220 ;; *************** function _CDCInitEP *****************
 30221 ;; Defined at:
 30222 ;;		line 296 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 30223 ;; Parameters:    Size  Location     Type
 30224 ;;		None
 30225 ;; Auto vars:     Size  Location     Type
 30226 ;;		None
 30227 ;; Return value:  Size  Location     Type
 30228 ;;                  1    wreg      void 
 30229 ;; Registers used:
 30230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30231 ;; Tracked objects:
 30232 ;;		On entry : 0/0
 30233 ;;		On exit  : 0/0
 30234 ;;		Unchanged: 0/0
 30235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30236 ;;      Params:         0       0       0       0       0       0       0       0       0
 30237 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30238 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30239 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30240 ;;Total ram usage:        0 bytes
 30241 ;; Hardware stack levels used:    1
 30242 ;; Hardware stack levels required when called:    2
 30243 ;; This function calls:
 30244 ;;		_USBEnableEndpoint
 30245 ;;		i2_USBTransferOnePacket
 30246 ;; This function is called by:
 30247 ;;		_USBapp_CdcEmulatorInitialize
 30248 ;; This function uses a non-reentrant model
 30249 ;;
 30250                           
 30251                           	psect	text131
 30252  005596                     __ptext131:
 30253                           	opt stack 0
 30254  005596                     _CDCInitEP:
 30255                           	opt stack 15
 30256                           
 30257                           ;usb_device_cdc.c: 299: line_coding.dwDTERate = 19200;
 30258                           
 30259                           ; BSR set to: 0
 30260                           ;incstack = 0
 30261  005596  0E00               	movlw	0
 30262  005598  0101               	movlb	1	; () banked
 30263  00559A  6FE9               	movwf	_line_coding& (0+255),b
 30264  00559C  0E4B               	movlw	75
 30265  00559E  6FEA               	movwf	(_line_coding+1)& (0+255),b
 30266  0055A0  0E00               	movlw	0
 30267  0055A2  6FEB               	movwf	(_line_coding+2)& (0+255),b
 30268  0055A4  0E00               	movlw	0
 30269  0055A6  6FEC               	movwf	(_line_coding+3)& (0+255),b
 30270                           
 30271                           ;usb_device_cdc.c: 300: line_coding.bCharFormat = 0x00;
 30272  0055A8  0E00               	movlw	0
 30273  0055AA  6FED               	movwf	(_line_coding+4)& (0+255),b
 30274                           
 30275                           ;usb_device_cdc.c: 301: line_coding.bParityType = 0x00;
 30276  0055AC  0E00               	movlw	0
 30277  0055AE  6FEE               	movwf	(_line_coding+5)& (0+255),b
 30278                           
 30279                           ;usb_device_cdc.c: 302: line_coding.bDataBits = 0x08;
 30280  0055B0  0E08               	movlw	8
 30281  0055B2  6FEF               	movwf	(_line_coding+6)& (0+255),b
 30282                           
 30283                           ;usb_device_cdc.c: 304: cdc_rx_len = 0;
 30284  0055B4  0E00               	movlw	0
 30285  0055B6  0100               	movlb	0	; () banked
 30286  0055B8  6FDD               	movwf	_cdc_rx_len& (0+255),b
 30287                           
 30288                           ; BSR set to: 0
 30289                           ;usb_device_cdc.c: 317: USBEnableEndpoint(1,0x02|0x10|0x08);
 30290  0055BA  0E1A               	movlw	26
 30291  0055BC  6E09               	movwf	USBEnableEndpoint@options,c
 30292  0055BE  0E01               	movlw	1
 30293  0055C0  ECCC  F02D         	call	_USBEnableEndpoint
 30294                           
 30295                           ;usb_device_cdc.c: 318: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 30296  0055C4  0E1E               	movlw	30
 30297  0055C6  6E09               	movwf	USBEnableEndpoint@options,c
 30298  0055C8  0E02               	movlw	2
 30299  0055CA  ECCC  F02D         	call	_USBEnableEndpoint
 30300                           
 30301                           ;usb_device_cdc.c: 320: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 30302  0055CE  0E00               	movlw	0
 30303  0055D0  6E01               	movwf	i2USBTransferOnePacket@dir,c
 30304  0055D2  0E40               	movlw	64
 30305  0055D4  6E02               	movwf	i2USBTransferOnePacket@data,c
 30306  0055D6  0E05               	movlw	5
 30307  0055D8  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 30308  0055DA  0E40               	movlw	64
 30309  0055DC  6E04               	movwf	i2USBTransferOnePacket@len,c
 30310  0055DE  0E02               	movlw	2
 30311  0055E0  ECDC  F022         	call	i2_USBTransferOnePacket
 30312  0055E4  C001  F0D6         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 30313  0055E8  C002  F0D7         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 30314                           
 30315                           ;usb_device_cdc.c: 321: CDCDataInHandle = (0);
 30316  0055EC  0E00               	movlw	0
 30317  0055EE  6E32               	movwf	_CDCDataInHandle,c
 30318  0055F0  0E00               	movlw	0
 30319  0055F2  6E33               	movwf	_CDCDataInHandle+1,c
 30320                           
 30321                           ;usb_device_cdc.c: 326: cdc_trf_state = 0;
 30322  0055F4  0E00               	movlw	0
 30323  0055F6  0100               	movlb	0	; () banked
 30324  0055F8  6FEA               	movwf	_cdc_trf_state& (0+255),b
 30325                           
 30326                           ; BSR set to: 0
 30327  0055FA  0012               	return		;funcret
 30328  0055FC                     __end_of_CDCInitEP:
 30329                           	opt stack 0
 30330                           pclatu	equ	0xFFB
 30331                           pclath	equ	0xFFA
 30332                           tblptru	equ	0xFF8
 30333                           tblptrh	equ	0xFF7
 30334                           tblptrl	equ	0xFF6
 30335                           tablat	equ	0xFF5
 30336                           prodh	equ	0xFF4
 30337                           prodl	equ	0xFF3
 30338                           intcon	equ	0xFF2
 30339                           intcon2	equ	0xFF1
 30340                           intcon3	equ	0xFF0
 30341                           indf0	equ	0xFEF
 30342                           postinc0	equ	0xFEE
 30343                           fsr0h	equ	0xFEA
 30344                           fsr0l	equ	0xFE9
 30345                           wreg	equ	0xFE8
 30346                           indf1	equ	0xFE7
 30347                           postdec1	equ	0xFE5
 30348                           fsr1h	equ	0xFE2
 30349                           fsr1l	equ	0xFE1
 30350                           indf2	equ	0xFDF
 30351                           postinc2	equ	0xFDE
 30352                           postdec2	equ	0xFDD
 30353                           plusw2	equ	0xFDB
 30354                           fsr2h	equ	0xFDA
 30355                           fsr2l	equ	0xFD9
 30356                           status	equ	0xFD8
 30357                           
 30358 ;; *************** function i2_USBTransferOnePacket *****************
 30359 ;; Defined at:
 30360 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 30361 ;; Parameters:    Size  Location     Type
 30362 ;;  ep              1    wreg     unsigned char 
 30363 ;;  dir             1    0[COMRAM] unsigned char 
 30364 ;;  data            2    1[COMRAM] PTR unsigned char 
 30365 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 30366 ;;  len             1    3[COMRAM] unsigned char 
 30367 ;; Auto vars:     Size  Location     Type
 30368 ;;  ep              1    4[COMRAM] unsigned char 
 30369 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 30370 ;;		 -> BDT(48), NULL(0), 
 30371 ;; Return value:  Size  Location     Type
 30372 ;;                  2    0[COMRAM] PTR void 
 30373 ;; Registers used:
 30374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30375 ;; Tracked objects:
 30376 ;;		On entry : 0/0
 30377 ;;		On exit  : 0/0
 30378 ;;		Unchanged: 0/0
 30379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30380 ;;      Params:         4       0       0       0       0       0       0       0       0
 30381 ;;      Locals:         3       0       0       0       0       0       0       0       0
 30382 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30383 ;;      Totals:         7       0       0       0       0       0       0       0       0
 30384 ;;Total ram usage:        7 bytes
 30385 ;; Hardware stack levels used:    1
 30386 ;; This function calls:
 30387 ;;		Nothing
 30388 ;; This function is called by:
 30389 ;;		_CDCInitEP
 30390 ;; This function uses a non-reentrant model
 30391 ;;
 30392                           
 30393                           	psect	text132
 30394  0045B8                     __ptext132:
 30395                           	opt stack 0
 30396  0045B8                     i2_USBTransferOnePacket:
 30397                           	opt stack 16
 30398                           
 30399                           ; BSR set to: 0
 30400                           ;incstack = 0
 30401                           ;i2USBTransferOnePacket@ep stored from wreg
 30402  0045B8  6E05               	movwf	i2USBTransferOnePacket@ep,c
 30403                           
 30404                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 30405                           ;usb_device.c: 762: if(dir != 0)
 30406  0045BA  5001               	movf	i2USBTransferOnePacket@dir,w,c
 30407  0045BC  B4D8               	btfsc	status,2,c
 30408  0045BE  D007               	goto	i2l1972
 30409                           
 30410                           ;usb_device.c: 763: {
 30411                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 30412  0045C0  5005               	movf	i2USBTransferOnePacket@ep,w,c
 30413  0045C2  0D02               	mullw	2
 30414  0045C4  0ECA               	movlw	low _pBDTEntryIn
 30415  0045C6  24F3               	addwf	prodl,w,c
 30416  0045C8  6ED9               	movwf	fsr2l,c
 30417  0045CA  0E00               	movlw	high _pBDTEntryIn
 30418  0045CC  D006               	goto	L32
 30419  0045CE                     i2l1972:
 30420                           
 30421                           ;usb_device.c: 767: else
 30422                           ;usb_device.c: 768: {
 30423                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 30424  0045CE  5005               	movf	i2USBTransferOnePacket@ep,w,c
 30425  0045D0  0D02               	mullw	2
 30426  0045D2  0E40               	movlw	low _pBDTEntryOut
 30427  0045D4  24F3               	addwf	prodl,w,c
 30428  0045D6  6ED9               	movwf	fsr2l,c
 30429  0045D8  0E01               	movlw	high _pBDTEntryOut
 30430  0045DA                     L32:
 30431  0045DA  20F4               	addwfc	prodh,w,c
 30432  0045DC  6EDA               	movwf	fsr2h,c
 30433  0045DE  CFDE F006          	movff	postinc2,i2USBTransferOnePacket@handle
 30434  0045E2  CFDD F007          	movff	postdec2,i2USBTransferOnePacket@handle+1
 30435                           
 30436                           ;usb_device.c: 771: }
 30437                           ;usb_device.c: 775: if(handle == 0)
 30438  0045E6  5006               	movf	i2USBTransferOnePacket@handle,w,c
 30439  0045E8  1007               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 30440  0045EA  A4D8               	btfss	status,2,c
 30441  0045EC  D005               	goto	i2l1974
 30442                           
 30443                           ;usb_device.c: 776: {
 30444                           ;usb_device.c: 777: return 0;
 30445  0045EE  0E00               	movlw	0
 30446  0045F0  6E01               	movwf	?i2_USBTransferOnePacket,c
 30447  0045F2  0E00               	movlw	0
 30448  0045F4  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 30449  0045F6  0012               	return	
 30450  0045F8                     i2l1974:
 30451                           
 30452                           ;usb_device.c: 778: }
 30453                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 30454  0045F8  EE20 F002          	lfsr	2,2
 30455  0045FC  5006               	movf	i2USBTransferOnePacket@handle,w,c
 30456  0045FE  26D9               	addwf	fsr2l,f,c
 30457  004600  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 30458  004602  22DA               	addwfc	fsr2h,f,c
 30459  004604  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 30460  004608  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 30461                           
 30462                           ;usb_device.c: 781: handle->CNT = len;
 30463  00460C  EE20 F001          	lfsr	2,1
 30464  004610  5006               	movf	i2USBTransferOnePacket@handle,w,c
 30465  004612  26D9               	addwf	fsr2l,f,c
 30466  004614  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 30467  004616  22DA               	addwfc	fsr2h,f,c
 30468  004618  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 30469                           
 30470                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 30471  00461C  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 30472  004620  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 30473  004624  0E40               	movlw	64
 30474  004626  16DF               	andwf	indf2,f,c
 30475                           
 30476                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 30477  004628  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 30478  00462C  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 30479  004630  0E00               	movlw	0
 30480  004632  86DB               	bsf	plusw2,3,c
 30481                           
 30482                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 30483  004634  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 30484  004638  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 30485  00463C  0E00               	movlw	0
 30486  00463E  8EDB               	bsf	plusw2,7,c
 30487                           
 30488                           ;usb_device.c: 787: if(dir != 0)
 30489  004640  5001               	movf	i2USBTransferOnePacket@dir,w,c
 30490  004642  B4D8               	btfsc	status,2,c
 30491  004644  D007               	goto	i2l1976
 30492                           
 30493                           ;usb_device.c: 788: {
 30494                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 30495  004646  5005               	movf	i2USBTransferOnePacket@ep,w,c
 30496  004648  0D02               	mullw	2
 30497  00464A  0ECA               	movlw	low _pBDTEntryIn
 30498  00464C  24F3               	addwf	prodl,w,c
 30499  00464E  6ED9               	movwf	fsr2l,c
 30500  004650  0E00               	movlw	high _pBDTEntryIn
 30501  004652  D006               	goto	L33
 30502  004654                     i2l1976:
 30503                           
 30504                           ;usb_device.c: 792: else
 30505                           ;usb_device.c: 793: {
 30506                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 30507  004654  5005               	movf	i2USBTransferOnePacket@ep,w,c
 30508  004656  0D02               	mullw	2
 30509  004658  0E40               	movlw	low _pBDTEntryOut
 30510  00465A  24F3               	addwf	prodl,w,c
 30511  00465C  6ED9               	movwf	fsr2l,c
 30512  00465E  0E01               	movlw	high _pBDTEntryOut
 30513  004660                     L33:
 30514  004660  20F4               	addwfc	prodh,w,c
 30515  004662  6EDA               	movwf	fsr2h,c
 30516  004664  0E04               	movlw	4
 30517  004666  1ADF               	xorwf	indf2,f,c
 30518                           
 30519                           ;usb_device.c: 796: }
 30520                           ;usb_device.c: 797: return (void*)handle;
 30521  004668  C006  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 30522  00466C  C007  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 30523  004670  0012               	return	
 30524  004672                     __end_ofi2_USBTransferOnePacket:
 30525                           	opt stack 0
 30526                           pclatu	equ	0xFFB
 30527                           pclath	equ	0xFFA
 30528                           tblptru	equ	0xFF8
 30529                           tblptrh	equ	0xFF7
 30530                           tblptrl	equ	0xFF6
 30531                           tablat	equ	0xFF5
 30532                           prodh	equ	0xFF4
 30533                           prodl	equ	0xFF3
 30534                           intcon	equ	0xFF2
 30535                           intcon2	equ	0xFF1
 30536                           intcon3	equ	0xFF0
 30537                           indf0	equ	0xFEF
 30538                           postinc0	equ	0xFEE
 30539                           fsr0h	equ	0xFEA
 30540                           fsr0l	equ	0xFE9
 30541                           wreg	equ	0xFE8
 30542                           indf1	equ	0xFE7
 30543                           postdec1	equ	0xFE5
 30544                           fsr1h	equ	0xFE2
 30545                           fsr1l	equ	0xFE1
 30546                           indf2	equ	0xFDF
 30547                           postinc2	equ	0xFDE
 30548                           postdec2	equ	0xFDD
 30549                           plusw2	equ	0xFDB
 30550                           fsr2h	equ	0xFDA
 30551                           fsr2l	equ	0xFD9
 30552                           status	equ	0xFD8
 30553                           
 30554 ;; *************** function _USBEnableEndpoint *****************
 30555 ;; Defined at:
 30556 ;;		line 645 in file "../Includes/Usb/Framework/usb_device.c"
 30557 ;; Parameters:    Size  Location     Type
 30558 ;;  ep              1    wreg     unsigned char 
 30559 ;;  options         1    8[COMRAM] unsigned char 
 30560 ;; Auto vars:     Size  Location     Type
 30561 ;;  ep              1   11[COMRAM] unsigned char 
 30562 ;;  p               2    9[COMRAM] PTR unsigned char 
 30563 ;;		 -> UEP0(1), 
 30564 ;; Return value:  Size  Location     Type
 30565 ;;                  1    wreg      void 
 30566 ;; Registers used:
 30567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30568 ;; Tracked objects:
 30569 ;;		On entry : 0/0
 30570 ;;		On exit  : 0/0
 30571 ;;		Unchanged: 0/0
 30572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30573 ;;      Params:         1       0       0       0       0       0       0       0       0
 30574 ;;      Locals:         3       0       0       0       0       0       0       0       0
 30575 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30576 ;;      Totals:         4       0       0       0       0       0       0       0       0
 30577 ;;Total ram usage:        4 bytes
 30578 ;; Hardware stack levels used:    1
 30579 ;; Hardware stack levels required when called:    1
 30580 ;; This function calls:
 30581 ;;		_USBConfigureEndpoint
 30582 ;; This function is called by:
 30583 ;;		_CDCInitEP
 30584 ;; This function uses a non-reentrant model
 30585 ;;
 30586                           
 30587                           	psect	text133
 30588  005B98                     __ptext133:
 30589                           	opt stack 0
 30590  005B98                     _USBEnableEndpoint:
 30591                           	opt stack 15
 30592                           
 30593                           ;incstack = 0
 30594                           ;USBEnableEndpoint@ep stored from wreg
 30595  005B98  6E0C               	movwf	USBEnableEndpoint@ep,c
 30596                           
 30597                           ;usb_device.c: 647: unsigned char* p;
 30598                           ;usb_device.c: 651: if(options & 0x04)
 30599  005B9A  A409               	btfss	USBEnableEndpoint@options,2,c
 30600  005B9C  D005               	goto	i2l1967
 30601                           
 30602                           ;usb_device.c: 652: {
 30603                           ;usb_device.c: 653: USBConfigureEndpoint(ep, 0);
 30604  005B9E  0E00               	movlw	0
 30605  005BA0  6E01               	movwf	USBConfigureEndpoint@direction,c
 30606  005BA2  500C               	movf	USBEnableEndpoint@ep,w,c
 30607  005BA4  EC36  F026         	call	_USBConfigureEndpoint
 30608  005BA8                     i2l1967:
 30609                           
 30610                           ;usb_device.c: 654: }
 30611                           ;usb_device.c: 655: if(options & 0x02)
 30612  005BA8  A209               	btfss	USBEnableEndpoint@options,1,c
 30613  005BAA  D005               	goto	i2l1968
 30614                           
 30615                           ;usb_device.c: 656: {
 30616                           ;usb_device.c: 657: USBConfigureEndpoint(ep, 1);
 30617  005BAC  0E01               	movlw	1
 30618  005BAE  6E01               	movwf	USBConfigureEndpoint@direction,c
 30619  005BB0  500C               	movf	USBEnableEndpoint@ep,w,c
 30620  005BB2  EC36  F026         	call	_USBConfigureEndpoint
 30621  005BB6                     i2l1968:
 30622                           
 30623                           ;usb_device.c: 658: }
 30624                           ;usb_device.c: 663: p = (unsigned char*)(&UEP0+ep);
 30625  005BB6  500C               	movf	USBEnableEndpoint@ep,w,c
 30626  005BB8  0D01               	mullw	1
 30627  005BBA  0E6A               	movlw	106
 30628  005BBC  24F3               	addwf	prodl,w,c
 30629  005BBE  6E0A               	movwf	USBEnableEndpoint@p,c
 30630  005BC0  0E0F               	movlw	15
 30631  005BC2  20F4               	addwfc	prodh,w,c
 30632  005BC4  6E0B               	movwf	USBEnableEndpoint@p+1,c
 30633                           
 30634                           ;usb_device.c: 664: *p = options;
 30635  005BC6  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 30636  005BCA  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 30637  005BCE  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 30638  005BD2  0012               	return		;funcret
 30639  005BD4                     __end_of_USBEnableEndpoint:
 30640                           	opt stack 0
 30641                           pclatu	equ	0xFFB
 30642                           pclath	equ	0xFFA
 30643                           tblptru	equ	0xFF8
 30644                           tblptrh	equ	0xFF7
 30645                           tblptrl	equ	0xFF6
 30646                           tablat	equ	0xFF5
 30647                           prodh	equ	0xFF4
 30648                           prodl	equ	0xFF3
 30649                           intcon	equ	0xFF2
 30650                           intcon2	equ	0xFF1
 30651                           intcon3	equ	0xFF0
 30652                           indf0	equ	0xFEF
 30653                           postinc0	equ	0xFEE
 30654                           fsr0h	equ	0xFEA
 30655                           fsr0l	equ	0xFE9
 30656                           wreg	equ	0xFE8
 30657                           indf1	equ	0xFE7
 30658                           postdec1	equ	0xFE5
 30659                           fsr1h	equ	0xFE2
 30660                           fsr1l	equ	0xFE1
 30661                           indf2	equ	0xFDF
 30662                           postinc2	equ	0xFDE
 30663                           postdec2	equ	0xFDD
 30664                           plusw2	equ	0xFDB
 30665                           fsr2h	equ	0xFDA
 30666                           fsr2l	equ	0xFD9
 30667                           status	equ	0xFD8
 30668                           
 30669 ;; *************** function _USBConfigureEndpoint *****************
 30670 ;; Defined at:
 30671 ;;		line 1228 in file "../Includes/Usb/Framework/usb_device.c"
 30672 ;; Parameters:    Size  Location     Type
 30673 ;;  EPNum           1    wreg     unsigned char 
 30674 ;;  direction       1    0[COMRAM] unsigned char 
 30675 ;; Auto vars:     Size  Location     Type
 30676 ;;  EPNum           1    5[COMRAM] unsigned char 
 30677 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 30678 ;;		 -> BDT(48), 
 30679 ;; Return value:  Size  Location     Type
 30680 ;;                  1    wreg      void 
 30681 ;; Registers used:
 30682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30683 ;; Tracked objects:
 30684 ;;		On entry : 0/0
 30685 ;;		On exit  : 0/0
 30686 ;;		Unchanged: 0/0
 30687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30688 ;;      Params:         1       0       0       0       0       0       0       0       0
 30689 ;;      Locals:         3       0       0       0       0       0       0       0       0
 30690 ;;      Temps:          4       0       0       0       0       0       0       0       0
 30691 ;;      Totals:         8       0       0       0       0       0       0       0       0
 30692 ;;Total ram usage:        8 bytes
 30693 ;; Hardware stack levels used:    1
 30694 ;; This function calls:
 30695 ;;		Nothing
 30696 ;; This function is called by:
 30697 ;;		_USBEnableEndpoint
 30698 ;; This function uses a non-reentrant model
 30699 ;;
 30700                           
 30701                           	psect	text134
 30702  004C6C                     __ptext134:
 30703                           	opt stack 0
 30704  004C6C                     _USBConfigureEndpoint:
 30705                           	opt stack 15
 30706                           
 30707                           ;incstack = 0
 30708                           ;USBConfigureEndpoint@EPNum stored from wreg
 30709  004C6C  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 30710                           
 30711                           ;usb_device.c: 1230: volatile BDT_ENTRY* handle;
 30712                           ;usb_device.c: 1234: handle = (volatile BDT_ENTRY*)&BDT[0];
 30713  004C6E  0E00               	movlw	0
 30714  004C70  6E07               	movwf	USBConfigureEndpoint@handle,c
 30715  004C72  0E04               	movlw	4
 30716  004C74  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 30717                           
 30718                           ;usb_device.c: 1235: handle += (4*EPNum+2*direction+0u);
 30719  004C76  5001               	movf	USBConfigureEndpoint@direction,w,c
 30720  004C78  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 30721  004C7A  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 30722  004C7C  90D8               	bcf	status,0,c
 30723  004C7E  3602               	rlcf	??_USBConfigureEndpoint,f,c
 30724  004C80  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 30725  004C82  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 30726  004C84  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 30727  004C86  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 30728  004C88  90D8               	bcf	status,0,c
 30729  004C8A  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 30730  004C8C  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 30731  004C8E  90D8               	bcf	status,0,c
 30732  004C90  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 30733  004C92  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 30734  004C94  5002               	movf	??_USBConfigureEndpoint,w,c
 30735  004C96  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 30736  004C98  5003               	movf	??_USBConfigureEndpoint+1,w,c
 30737  004C9A  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 30738  004C9C  90D8               	bcf	status,0,c
 30739  004C9E  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 30740  004CA0  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 30741  004CA2  90D8               	bcf	status,0,c
 30742  004CA4  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 30743  004CA6  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 30744  004CA8  5004               	movf	??_USBConfigureEndpoint+2,w,c
 30745  004CAA  2607               	addwf	USBConfigureEndpoint@handle,f,c
 30746  004CAC  5005               	movf	??_USBConfigureEndpoint+3,w,c
 30747  004CAE  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 30748                           
 30749                           ;usb_device.c: 1237: handle->STAT.UOWN = 0;
 30750  004CB0  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 30751  004CB4  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 30752  004CB8  9EDF               	bcf	indf2,7,c
 30753                           
 30754                           ;usb_device.c: 1242: if(direction == 0)
 30755  004CBA  5001               	movf	USBConfigureEndpoint@direction,w,c
 30756  004CBC  A4D8               	btfss	status,2,c
 30757  004CBE  D007               	goto	i2l2014
 30758                           
 30759                           ;usb_device.c: 1243: {
 30760                           ;usb_device.c: 1244: pBDTEntryOut[EPNum] = handle;
 30761  004CC0  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 30762  004CC2  0D02               	mullw	2
 30763  004CC4  0E40               	movlw	low _pBDTEntryOut
 30764  004CC6  24F3               	addwf	prodl,w,c
 30765  004CC8  6ED9               	movwf	fsr2l,c
 30766  004CCA  0E01               	movlw	high _pBDTEntryOut
 30767  004CCC  D006               	goto	L34
 30768  004CCE                     i2l2014:
 30769                           
 30770                           ;usb_device.c: 1246: else
 30771                           ;usb_device.c: 1247: {
 30772                           ;usb_device.c: 1248: pBDTEntryIn[EPNum] = handle;
 30773  004CCE  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 30774  004CD0  0D02               	mullw	2
 30775  004CD2  0ECA               	movlw	low _pBDTEntryIn
 30776  004CD4  24F3               	addwf	prodl,w,c
 30777  004CD6  6ED9               	movwf	fsr2l,c
 30778  004CD8  0E00               	movlw	high _pBDTEntryIn
 30779  004CDA                     L34:
 30780  004CDA  20F4               	addwfc	prodh,w,c
 30781  004CDC  6EDA               	movwf	fsr2h,c
 30782  004CDE  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 30783  004CE2  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 30784                           
 30785                           ;usb_device.c: 1249: }
 30786                           ;usb_device.c: 1250: handle->STAT.DTS = 0;
 30787  004CE6  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 30788  004CEA  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 30789  004CEE  9CDF               	bcf	indf2,6,c
 30790                           
 30791                           ;usb_device.c: 1251: (handle+1)->STAT.DTS = 1;
 30792  004CF0  EE20 F004          	lfsr	2,4
 30793  004CF4  5007               	movf	USBConfigureEndpoint@handle,w,c
 30794  004CF6  26D9               	addwf	fsr2l,f,c
 30795  004CF8  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 30796  004CFA  22DA               	addwfc	fsr2h,f,c
 30797  004CFC  8CDF               	bsf	indf2,6,c
 30798  004CFE  0012               	return		;funcret
 30799  004D00                     __end_of_USBConfigureEndpoint:
 30800                           	opt stack 0
 30801                           pclatu	equ	0xFFB
 30802                           pclath	equ	0xFFA
 30803                           tblptru	equ	0xFF8
 30804                           tblptrh	equ	0xFF7
 30805                           tblptrl	equ	0xFF6
 30806                           tablat	equ	0xFF5
 30807                           prodh	equ	0xFF4
 30808                           prodl	equ	0xFF3
 30809                           intcon	equ	0xFF2
 30810                           intcon2	equ	0xFF1
 30811                           intcon3	equ	0xFF0
 30812                           indf0	equ	0xFEF
 30813                           postinc0	equ	0xFEE
 30814                           fsr0h	equ	0xFEA
 30815                           fsr0l	equ	0xFE9
 30816                           wreg	equ	0xFE8
 30817                           indf1	equ	0xFE7
 30818                           postdec1	equ	0xFE5
 30819                           fsr1h	equ	0xFE2
 30820                           fsr1l	equ	0xFE1
 30821                           indf2	equ	0xFDF
 30822                           postinc2	equ	0xFDE
 30823                           postdec2	equ	0xFDD
 30824                           plusw2	equ	0xFDB
 30825                           fsr2h	equ	0xFDA
 30826                           fsr2l	equ	0xFD9
 30827                           status	equ	0xFD8
 30828                           
 30829 ;; *************** function _USBCheckCDCRequest *****************
 30830 ;; Defined at:
 30831 ;;		line 184 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 30832 ;; Parameters:    Size  Location     Type
 30833 ;;		None
 30834 ;; Auto vars:     Size  Location     Type
 30835 ;;		None
 30836 ;; Return value:  Size  Location     Type
 30837 ;;                  1    wreg      void 
 30838 ;; Registers used:
 30839 ;;		wreg, status,2, status,0
 30840 ;; Tracked objects:
 30841 ;;		On entry : 0/0
 30842 ;;		On exit  : 0/0
 30843 ;;		Unchanged: 0/0
 30844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30845 ;;      Params:         0       0       0       0       0       0       0       0       0
 30846 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30847 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30848 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30849 ;;Total ram usage:        0 bytes
 30850 ;; Hardware stack levels used:    1
 30851 ;; This function calls:
 30852 ;;		Nothing
 30853 ;; This function is called by:
 30854 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 30855 ;; This function uses a non-reentrant model
 30856 ;;
 30857                           
 30858                           	psect	text135
 30859  004890                     __ptext135:
 30860                           	opt stack 0
 30861  004890                     _USBCheckCDCRequest:
 30862                           	opt stack 18
 30863                           
 30864                           ;usb_device_cdc.c: 189: if(SetupPkt.Recipient != (0x01)) return;
 30865                           
 30866                           ;incstack = 0
 30867  004890  0104               	movlb	4	; () banked
 30868  004892  5130               	movf	48,w,b	;volatile
 30869  004894  0B1F               	andlw	31
 30870  004896  06E8               	decf	wreg,f,c
 30871  004898  A4D8               	btfss	status,2,c
 30872  00489A  0012               	return	
 30873                           
 30874                           ; BSR set to: 4
 30875                           ;usb_device_cdc.c: 194: if(SetupPkt.RequestType != (0x20>>5)) return;
 30876                           
 30877                           ; BSR set to: 4
 30878                           
 30879                           ; BSR set to: 4
 30880  00489C  3930               	swapf	48,w,b	;volatile
 30881  00489E  32E8               	rrcf	wreg,f,c
 30882  0048A0  0B03               	andlw	3
 30883  0048A2  06E8               	decf	wreg,f,c
 30884  0048A4  A4D8               	btfss	status,2,c
 30885  0048A6  0012               	return	
 30886                           
 30887                           ; BSR set to: 4
 30888                           ;usb_device_cdc.c: 200: if((SetupPkt.bIntfID != 0x0)&&
 30889                           ;usb_device_cdc.c: 201: (SetupPkt.bIntfID != 0x01)) return;
 30890                           
 30891                           ; BSR set to: 4
 30892                           
 30893                           ; BSR set to: 4
 30894  0048A8  5134               	movf	52,w,b	;volatile
 30895  0048AA  B4D8               	btfsc	status,2,c
 30896  0048AC  D037               	goto	i2l2235
 30897                           
 30898                           ; BSR set to: 4
 30899  0048AE  0534               	decf	52,w,b	;volatile
 30900  0048B0  A4D8               	btfss	status,2,c
 30901  0048B2  0012               	return	
 30902  0048B4  D033               	goto	i2l2235
 30903  0048B6                     
 30904                           ; BSR set to: 4
 30905                           ;usb_device_cdc.c: 208: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 30906                           
 30907                           ; BSR set to: 4
 30908  0048B6  0EE1               	movlw	low _dummy_encapsulated_cmd_response
 30909  0048B8  0100               	movlb	0	; () banked
 30910  0048BA  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 30911  0048BC  0E01               	movlw	high _dummy_encapsulated_cmd_response
 30912  0048BE  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 30913                           
 30914                           ; BSR set to: 0
 30915                           ;usb_device_cdc.c: 209: inPipes[0].wCount.Val = 0x08;
 30916  0048C0  0E00               	movlw	0
 30917  0048C2  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 30918  0048C4  0E08               	movlw	8
 30919  0048C6  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 30920                           
 30921                           ; BSR set to: 0
 30922                           ;usb_device_cdc.c: 210: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 30923  0048C8  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 30924                           
 30925                           ; BSR set to: 0
 30926                           ;usb_device_cdc.c: 211: inPipes[0].info.bits.busy = 1;
 30927  0048CA  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 30928                           
 30929                           ;usb_device_cdc.c: 212: break;
 30930  0048CC  0012               	return	
 30931  0048CE                     
 30932                           ;usb_device_cdc.c: 215: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 30933                           
 30934                           ; BSR set to: 0
 30935  0048CE  0EE1               	movlw	low _dummy_encapsulated_cmd_response
 30936  0048D0  0100               	movlb	0	; () banked
 30937  0048D2  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 30938  0048D4  0E01               	movlw	high _dummy_encapsulated_cmd_response
 30939  0048D6  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 30940                           
 30941                           ; BSR set to: 0
 30942                           ;usb_device_cdc.c: 216: inPipes[0].info.bits.busy = 1;
 30943  0048D8  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 30944                           
 30945                           ;usb_device_cdc.c: 217: break;
 30946  0048DA  0012               	return	
 30947  0048DC                     i2l2239:
 30948                           
 30949                           ; BSR set to: 4
 30950                           ;usb_device_cdc.c: 220: outPipes[0].wCount.Val = SetupPkt.wLength;
 30951  0048DC  C436 F0C0          	movff	1078,_outPipes+4	;volatile
 30952  0048E0  C437 F0C1          	movff	1079,_outPipes+5	;volatile
 30953                           
 30954                           ; BSR set to: 4
 30955                           ;usb_device_cdc.c: 221: outPipes[0].pDst.bRam = (uint8_t*)&cdc_notice.SetLineCoding._byt
      +                          e[0];
 30956  0048E4  0ED7               	movlw	low _cdc_notice
 30957  0048E6  0100               	movlb	0	; () banked
 30958  0048E8  6FBC               	movwf	_outPipes& (0+255),b	;volatile
 30959  0048EA  0E01               	movlw	high _cdc_notice
 30960  0048EC  6FBD               	movwf	(_outPipes+1)& (0+255),b	;volatile
 30961                           
 30962                           ;usb_device_cdc.c: 222: outPipes[0].pFunc = &USART_mySetLineCodingHandler;
 30963  0048EE  0E12               	movlw	low _USART_mySetLineCodingHandler
 30964  0048F0  6FC2               	movwf	(_outPipes+6)& (0+255),b	;volatile
 30965  0048F2  0E57               	movlw	high _USART_mySetLineCodingHandler
 30966  0048F4  6FC3               	movwf	(_outPipes+7)& (0+255),b	;volatile
 30967                           
 30968                           ; BSR set to: 0
 30969                           ;usb_device_cdc.c: 223: outPipes[0].info.bits.busy = 1;
 30970  0048F6  8FBF               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 30971                           
 30972                           ;usb_device_cdc.c: 224: break;
 30973  0048F8  0012               	return	
 30974  0048FA                     
 30975                           ;usb_device_cdc.c: 227: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 30976                           
 30977                           ; BSR set to: 0
 30978  0048FA  0EE9               	movlw	low _line_coding
 30979  0048FC  0100               	movlb	0	; () banked
 30980  0048FE  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 30981  004900  0E01               	movlw	high _line_coding
 30982  004902  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 30983                           
 30984                           ; BSR set to: 0
 30985  004904  0E00               	movlw	0
 30986  004906  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 30987  004908  0E07               	movlw	7
 30988  00490A  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 30989                           
 30990                           ; BSR set to: 0
 30991  00490C  0EC1               	movlw	193
 30992  00490E  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 30993                           
 30994                           ;usb_device_cdc.c: 231: break;
 30995  004910  0012               	return	
 30996  004912                     i2l2241:
 30997                           
 30998                           ; BSR set to: 4
 30999                           ;usb_device_cdc.c: 234: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 31000  004912  C432 F15C          	movff	1074,_control_signal_bitmap	;volatile
 31001                           
 31002                           ;usb_device_cdc.c: 255: inPipes[0].info.bits.busy = 1;
 31003  004916  0100               	movlb	0	; () banked
 31004  004918  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 31005                           
 31006                           ; BSR set to: 0
 31007                           ;usb_device_cdc.c: 260: }
 31008                           
 31009                           ; BSR set to: 0
 31010                           ;usb_device_cdc.c: 259: break;
 31011                           
 31012                           ;usb_device_cdc.c: 258: default:
 31013                           
 31014                           ;usb_device_cdc.c: 256: break;
 31015  00491A  0012               	return	
 31016  00491C                     i2l2235:
 31017                           
 31018                           ; BSR set to: 0
 31019  00491C  0104               	movlb	4	; () banked
 31020  00491E  5131               	movf	49,w,b	;volatile
 31021                           
 31022                           ; Switch size 1, requested type "space"
 31023                           ; Number of cases is 5, Range of values is 0 to 34
 31024                           ; switch strategies available:
 31025                           ; Name         Instructions Cycles
 31026                           ; simple_byte           16     9 (average)
 31027                           ;	Chosen strategy is simple_byte
 31028  004920  0A00               	xorlw	0	; case 0
 31029  004922  B4D8               	btfsc	status,2,c
 31030  004924  D7C8               	goto	i2l2236
 31031  004926  0A01               	xorlw	1	; case 1
 31032  004928  B4D8               	btfsc	status,2,c
 31033  00492A  D7D1               	goto	i2l2238
 31034  00492C  0A21               	xorlw	33	; case 32
 31035  00492E  B4D8               	btfsc	status,2,c
 31036  004930  D7D5               	goto	i2l2239
 31037  004932  0A01               	xorlw	1	; case 33
 31038  004934  B4D8               	btfsc	status,2,c
 31039  004936  D7E1               	goto	i2l2240
 31040  004938  0A03               	xorlw	3	; case 34
 31041  00493A  A4D8               	btfss	status,2,c
 31042  00493C  0012               	return	
 31043  00493E  D7E9               	goto	i2l2241
 31044  004940                     __end_of_USBCheckCDCRequest:
 31045                           	opt stack 0
 31046                           pclatu	equ	0xFFB
 31047                           pclath	equ	0xFFA
 31048                           tblptru	equ	0xFF8
 31049                           tblptrh	equ	0xFF7
 31050                           tblptrl	equ	0xFF6
 31051                           tablat	equ	0xFF5
 31052                           prodh	equ	0xFF4
 31053                           prodl	equ	0xFF3
 31054                           intcon	equ	0xFF2
 31055                           intcon2	equ	0xFF1
 31056                           intcon3	equ	0xFF0
 31057                           indf0	equ	0xFEF
 31058                           postinc0	equ	0xFEE
 31059                           fsr0h	equ	0xFEA
 31060                           fsr0l	equ	0xFE9
 31061                           wreg	equ	0xFE8
 31062                           indf1	equ	0xFE7
 31063                           postdec1	equ	0xFE5
 31064                           fsr1h	equ	0xFE2
 31065                           fsr1l	equ	0xFE1
 31066                           indf2	equ	0xFDF
 31067                           postinc2	equ	0xFDE
 31068                           postdec2	equ	0xFDD
 31069                           plusw2	equ	0xFDB
 31070                           fsr2h	equ	0xFDA
 31071                           fsr2l	equ	0xFD9
 31072                           status	equ	0xFD8
 31073                           
 31074 ;; *************** function _USBCtrlTrfOutHandler *****************
 31075 ;; Defined at:
 31076 ;;		line 2169 in file "../Includes/Usb/Framework/usb_device.c"
 31077 ;; Parameters:    Size  Location     Type
 31078 ;;		None
 31079 ;; Auto vars:     Size  Location     Type
 31080 ;;		None
 31081 ;; Return value:  Size  Location     Type
 31082 ;;                  1    wreg      void 
 31083 ;; Registers used:
 31084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 31085 ;; Tracked objects:
 31086 ;;		On entry : 0/0
 31087 ;;		On exit  : 0/0
 31088 ;;		Unchanged: 0/0
 31089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31090 ;;      Params:         0       0       0       0       0       0       0       0       0
 31091 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31092 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31093 ;;      Totals:         0       0       0       0       0       0       0       0       0
 31094 ;;Total ram usage:        0 bytes
 31095 ;; Hardware stack levels used:    1
 31096 ;; Hardware stack levels required when called:    3
 31097 ;; This function calls:
 31098 ;;		_USBCtrlTrfRxService
 31099 ;; This function is called by:
 31100 ;;		_USBCtrlEPService
 31101 ;; This function uses a non-reentrant model
 31102 ;;
 31103                           
 31104                           	psect	text136
 31105  0056B6                     __ptext136:
 31106                           	opt stack 0
 31107  0056B6                     _USBCtrlTrfOutHandler:
 31108                           	opt stack 15
 31109                           
 31110                           ;usb_device.c: 2171: if(controlTransferState == 2)
 31111                           
 31112                           ;incstack = 0
 31113  0056B6  0E02               	movlw	2
 31114  0056B8  184A               	xorwf	_controlTransferState,w,c	;volatile
 31115  0056BA  A4D8               	btfss	status,2,c
 31116  0056BC  D003               	goto	i2l2122
 31117                           
 31118                           ;usb_device.c: 2172: {
 31119                           ;usb_device.c: 2173: USBCtrlTrfRxService();
 31120  0056BE  ECAA  F019         	call	_USBCtrlTrfRxService	;wreg free
 31121                           
 31122                           ;usb_device.c: 2174: }
 31123  0056C2  0012               	return	
 31124  0056C4                     i2l2122:
 31125                           
 31126                           ;usb_device.c: 2175: else
 31127                           ;usb_device.c: 2176: {
 31128                           ;usb_device.c: 2179: controlTransferState = 0;
 31129  0056C4  0E00               	movlw	0
 31130  0056C6  6E4A               	movwf	_controlTransferState,c	;volatile
 31131                           
 31132                           ;usb_device.c: 2186: if(BothEP0OutUOWNsSet == 0)
 31133  0056C8  5047               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 31134  0056CA  A4D8               	btfss	status,2,c
 31135  0056CC  D01F               	goto	i2l2124
 31136                           
 31137                           ;usb_device.c: 2187: {
 31138                           ;usb_device.c: 2188: pBDTEntryEP0OutNext->CNT = 8;
 31139  0056CE  EE20 F001          	lfsr	2,1
 31140  0056D2  5034               	movf	_pBDTEntryEP0OutNext,w,c
 31141  0056D4  26D9               	addwf	fsr2l,f,c
 31142  0056D6  5035               	movf	_pBDTEntryEP0OutNext+1,w,c
 31143  0056D8  22DA               	addwfc	fsr2h,f,c
 31144  0056DA  0E08               	movlw	8
 31145  0056DC  6EDF               	movwf	indf2,c
 31146                           
 31147                           ;usb_device.c: 2189: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 31148  0056DE  EE20 F002          	lfsr	2,2
 31149  0056E2  5034               	movf	_pBDTEntryEP0OutNext,w,c
 31150  0056E4  26D9               	addwf	fsr2l,f,c
 31151  0056E6  5035               	movf	_pBDTEntryEP0OutNext+1,w,c
 31152  0056E8  22DA               	addwfc	fsr2h,f,c
 31153  0056EA  0E30               	movlw	48
 31154  0056EC  6EDE               	movwf	postinc2,c
 31155  0056EE  0E04               	movlw	4
 31156  0056F0  6EDD               	movwf	postdec2,c
 31157                           
 31158                           ;usb_device.c: 2190: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 31159  0056F2  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 31160  0056F6  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 31161  0056FA  0E0C               	movlw	12
 31162  0056FC  6EDF               	movwf	indf2,c
 31163                           
 31164                           ;usb_device.c: 2191: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 31165  0056FE  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 31166  005702  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 31167  005706  0E00               	movlw	0
 31168  005708  8EDB               	bsf	plusw2,7,c
 31169                           
 31170                           ;usb_device.c: 2192: }
 31171  00570A  0012               	return	
 31172  00570C                     i2l2124:
 31173                           
 31174                           ;usb_device.c: 2193: else
 31175                           ;usb_device.c: 2194: {
 31176                           ;usb_device.c: 2195: BothEP0OutUOWNsSet = 0;
 31177  00570C  0E00               	movlw	0
 31178  00570E  6E47               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 31179  005710  0012               	return	
 31180  005712                     __end_of_USBCtrlTrfOutHandler:
 31181                           	opt stack 0
 31182                           pclatu	equ	0xFFB
 31183                           pclath	equ	0xFFA
 31184                           tblptru	equ	0xFF8
 31185                           tblptrh	equ	0xFF7
 31186                           tblptrl	equ	0xFF6
 31187                           tablat	equ	0xFF5
 31188                           prodh	equ	0xFF4
 31189                           prodl	equ	0xFF3
 31190                           intcon	equ	0xFF2
 31191                           intcon2	equ	0xFF1
 31192                           intcon3	equ	0xFF0
 31193                           indf0	equ	0xFEF
 31194                           postinc0	equ	0xFEE
 31195                           fsr0h	equ	0xFEA
 31196                           fsr0l	equ	0xFE9
 31197                           wreg	equ	0xFE8
 31198                           indf1	equ	0xFE7
 31199                           postdec1	equ	0xFE5
 31200                           fsr1h	equ	0xFE2
 31201                           fsr1l	equ	0xFE1
 31202                           indf2	equ	0xFDF
 31203                           postinc2	equ	0xFDE
 31204                           postdec2	equ	0xFDD
 31205                           plusw2	equ	0xFDB
 31206                           fsr2h	equ	0xFDA
 31207                           fsr2l	equ	0xFD9
 31208                           status	equ	0xFD8
 31209                           
 31210 ;; *************** function _USBCtrlTrfRxService *****************
 31211 ;; Defined at:
 31212 ;;		line 1518 in file "../Includes/Usb/Framework/usb_device.c"
 31213 ;; Parameters:    Size  Location     Type
 31214 ;;		None
 31215 ;; Auto vars:     Size  Location     Type
 31216 ;;  byteToRead      1   18[COMRAM] unsigned char 
 31217 ;;  i               1   17[COMRAM] unsigned char 
 31218 ;; Return value:  Size  Location     Type
 31219 ;;                  1    wreg      void 
 31220 ;; Registers used:
 31221 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 31222 ;; Tracked objects:
 31223 ;;		On entry : 0/0
 31224 ;;		On exit  : 0/0
 31225 ;;		Unchanged: 0/0
 31226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31227 ;;      Params:         0       0       0       0       0       0       0       0       0
 31228 ;;      Locals:         2       0       0       0       0       0       0       0       0
 31229 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31230 ;;      Totals:         2       0       0       0       0       0       0       0       0
 31231 ;;Total ram usage:        2 bytes
 31232 ;; Hardware stack levels used:    1
 31233 ;; Hardware stack levels required when called:    2
 31234 ;; This function calls:
 31235 ;;		_USART_mySetLineCodingHandler
 31236 ;;		_USBCtrlEPAllowStatusStage
 31237 ;; This function is called by:
 31238 ;;		_USBCtrlTrfOutHandler
 31239 ;; This function uses a non-reentrant model
 31240 ;;
 31241                           
 31242                           	psect	text137
 31243  003354                     __ptext137:
 31244                           	opt stack 0
 31245  003354                     _USBCtrlTrfRxService:
 31246                           	opt stack 15
 31247                           
 31248                           ;usb_device.c: 1520: uint8_t byteToRead;
 31249                           ;usb_device.c: 1521: uint8_t i;
 31250                           ;usb_device.c: 1525: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 31251                           
 31252                           ;incstack = 0
 31253  003354  EE20 F001          	lfsr	2,1
 31254  003358  5036               	movf	_pBDTEntryEP0OutCurrent,w,c
 31255  00335A  26D9               	addwf	fsr2l,f,c
 31256  00335C  5037               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 31257  00335E  22DA               	addwfc	fsr2h,f,c
 31258  003360  50DF               	movf	indf2,w,c
 31259  003362  6E13               	movwf	USBCtrlTrfRxService@byteToRead,c
 31260                           
 31261                           ;usb_device.c: 1531: if(byteToRead > outPipes[0].wCount.Val)
 31262  003364  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 31263  003366  0100               	movlb	0	; () banked
 31264  003368  5DC0               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 31265  00336A  0E00               	movlw	0
 31266  00336C  59C1               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 31267  00336E  A0D8               	btfss	status,0,c
 31268                           
 31269                           ; BSR set to: 0
 31270                           ;usb_device.c: 1532: {
 31271                           ;usb_device.c: 1533: byteToRead = outPipes[0].wCount.Val;
 31272  003370  C0C0  F013         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 31273                           
 31274                           ; BSR set to: 0
 31275                           ;usb_device.c: 1534: }
 31276                           ;usb_device.c: 1536: outPipes[0].wCount.Val -= byteToRead;
 31277                           
 31278                           ; BSR set to: 0
 31279  003374  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 31280  003376  5FC0               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 31281  003378  0E00               	movlw	0
 31282  00337A  5BC1               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 31283                           
 31284                           ; BSR set to: 0
 31285                           ;usb_device.c: 1540: for(i=0;i<byteToRead;i++)
 31286  00337C  0E00               	movlw	0
 31287  00337E  6E12               	movwf	USBCtrlTrfRxService@i,c
 31288  003380  D011               	goto	i2l2048
 31289  003382                     
 31290                           ; BSR set to: 0
 31291                           ;usb_device.c: 1541: {
 31292                           ;usb_device.c: 1542: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 31293                           
 31294                           ; BSR set to: 0
 31295  003382  5012               	movf	USBCtrlTrfRxService@i,w,c
 31296  003384  0D01               	mullw	1
 31297  003386  0E38               	movlw	56
 31298  003388  24F3               	addwf	prodl,w,c
 31299  00338A  6ED9               	movwf	fsr2l,c
 31300  00338C  0E04               	movlw	4
 31301  00338E  20F4               	addwfc	prodh,w,c
 31302  003390  6EDA               	movwf	fsr2h,c
 31303  003392  C0BC  FFE1         	movff	_outPipes,fsr1l	;volatile
 31304  003396  C0BD  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 31305  00339A  CFDF FFE7          	movff	indf2,indf1
 31306                           
 31307                           ; BSR set to: 0
 31308  00339E  4BBC               	infsnz	_outPipes& (0+255),f,b	;volatile
 31309  0033A0  2BBD               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 31310                           
 31311                           ; BSR set to: 0
 31312  0033A2  2A12               	incf	USBCtrlTrfRxService@i,f,c
 31313  0033A4                     i2l2048:
 31314                           
 31315                           ; BSR set to: 0
 31316                           
 31317                           ; BSR set to: 0
 31318  0033A4  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 31319  0033A6  5C12               	subwf	USBCtrlTrfRxService@i,w,c
 31320  0033A8  A0D8               	btfss	status,0,c
 31321  0033AA  D7EB               	goto	i2l2049
 31322                           
 31323                           ; BSR set to: 0
 31324                           ;usb_device.c: 1543: }
 31325                           ;usb_device.c: 1547: if(outPipes[0].wCount.Val > 0)
 31326                           
 31327                           ; BSR set to: 0
 31328  0033AC  51C0               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 31329  0033AE  11C1               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 31330  0033B0  B4D8               	btfsc	status,2,c
 31331  0033B2  D032               	goto	i2l2051
 31332                           
 31333                           ; BSR set to: 0
 31334                           ;usb_device.c: 1548: {
 31335                           ;usb_device.c: 1549: pBDTEntryEP0OutNext->CNT = 8;
 31336  0033B4  EE20 F001          	lfsr	2,1
 31337  0033B8  5034               	movf	_pBDTEntryEP0OutNext,w,c
 31338  0033BA  26D9               	addwf	fsr2l,f,c
 31339  0033BC  5035               	movf	_pBDTEntryEP0OutNext+1,w,c
 31340  0033BE  22DA               	addwfc	fsr2h,f,c
 31341  0033C0  0E08               	movlw	8
 31342  0033C2  6EDF               	movwf	indf2,c
 31343                           
 31344                           ;usb_device.c: 1550: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 31345  0033C4  EE20 F002          	lfsr	2,2
 31346  0033C8  5034               	movf	_pBDTEntryEP0OutNext,w,c
 31347  0033CA  26D9               	addwf	fsr2l,f,c
 31348  0033CC  5035               	movf	_pBDTEntryEP0OutNext+1,w,c
 31349  0033CE  22DA               	addwfc	fsr2h,f,c
 31350  0033D0  0E38               	movlw	56
 31351  0033D2  6EDE               	movwf	postinc2,c
 31352  0033D4  0E04               	movlw	4
 31353  0033D6  6EDD               	movwf	postdec2,c
 31354                           
 31355                           ; BSR set to: 0
 31356                           ;usb_device.c: 1551: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 31357  0033D8  C036  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 31358  0033DC  C037  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 31359  0033E0  BCDF               	btfsc	indf2,6,c
 31360  0033E2  D00D               	goto	i2l2052
 31361                           
 31362                           ; BSR set to: 0
 31363                           ;usb_device.c: 1552: {
 31364                           ;usb_device.c: 1553: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 31365  0033E4  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 31366  0033E8  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 31367  0033EC  0E48               	movlw	72
 31368  0033EE  6EDF               	movwf	indf2,c
 31369                           
 31370                           ; BSR set to: 0
 31371                           ;usb_device.c: 1554: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 31372  0033F0  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 31373  0033F4  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 31374  0033F8  0E00               	movlw	0
 31375  0033FA  8EDB               	bsf	plusw2,7,c
 31376                           
 31377                           ;usb_device.c: 1555: }
 31378  0033FC  0012               	return	
 31379  0033FE                     i2l2052:
 31380                           
 31381                           ; BSR set to: 0
 31382                           ;usb_device.c: 1556: else
 31383                           ;usb_device.c: 1557: {
 31384                           ;usb_device.c: 1558: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 31385                           
 31386                           ; BSR set to: 0
 31387  0033FE  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 31388  003402  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 31389  003406  0E08               	movlw	8
 31390  003408  6EDF               	movwf	indf2,c
 31391                           
 31392                           ; BSR set to: 0
 31393                           ;usb_device.c: 1559: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 31394  00340A  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 31395  00340E  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 31396  003412  0E00               	movlw	0
 31397  003414  8EDB               	bsf	plusw2,7,c
 31398                           
 31399                           ; BSR set to: 0
 31400                           ;usb_device.c: 1560: }
 31401                           ;usb_device.c: 1561: }
 31402  003416  0012               	return	
 31403  003418                     i2l2051:
 31404                           
 31405                           ; BSR set to: 0
 31406                           ;usb_device.c: 1562: else
 31407                           ;usb_device.c: 1563: {
 31408                           ;usb_device.c: 1567: pBDTEntryEP0OutNext->CNT = 8;
 31409                           
 31410                           ; BSR set to: 0
 31411  003418  EE20 F001          	lfsr	2,1
 31412  00341C  5034               	movf	_pBDTEntryEP0OutNext,w,c
 31413  00341E  26D9               	addwf	fsr2l,f,c
 31414  003420  5035               	movf	_pBDTEntryEP0OutNext+1,w,c
 31415  003422  22DA               	addwfc	fsr2h,f,c
 31416  003424  0E08               	movlw	8
 31417  003426  6EDF               	movwf	indf2,c
 31418                           
 31419                           ;usb_device.c: 1568: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 31420  003428  EE20 F002          	lfsr	2,2
 31421  00342C  5034               	movf	_pBDTEntryEP0OutNext,w,c
 31422  00342E  26D9               	addwf	fsr2l,f,c
 31423  003430  5035               	movf	_pBDTEntryEP0OutNext+1,w,c
 31424  003432  22DA               	addwfc	fsr2h,f,c
 31425  003434  0E30               	movlw	48
 31426  003436  6EDE               	movwf	postinc2,c
 31427  003438  0E04               	movlw	4
 31428  00343A  6EDD               	movwf	postdec2,c
 31429                           
 31430                           ; BSR set to: 0
 31431                           ;usb_device.c: 1572: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 31432  00343C  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 31433  003440  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 31434  003444  0E04               	movlw	4
 31435  003446  6EDF               	movwf	indf2,c
 31436                           
 31437                           ; BSR set to: 0
 31438                           ;usb_device.c: 1573: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 31439  003448  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 31440  00344C  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 31441  003450  0E00               	movlw	0
 31442  003452  8EDB               	bsf	plusw2,7,c
 31443                           
 31444                           ; BSR set to: 0
 31445                           ;usb_device.c: 1580: if(outPipes[0].pFunc != (0))
 31446  003454  51C2               	movf	(_outPipes+6)& (0+255),w,b	;volatile
 31447  003456  11C3               	iorwf	(_outPipes+7)& (0+255),w,b	;volatile
 31448  003458  B4D8               	btfsc	status,2,c
 31449  00345A  D00B               	goto	i2u695_49
 31450                           
 31451                           ; BSR set to: 0
 31452                           ;usb_device.c: 1581: {
 31453                           ;usb_device.c: 1586: outPipes[0].pFunc();
 31454  00345C  D801               	call	i2u695_48
 31455  00345E  D009               	goto	i2u695_49
 31456  003460                     i2u695_48:
 31457  003460  0005               	push	
 31458  003462  6EFA               	movwf	pclath,c
 31459  003464  51C2               	movf	(_outPipes+6)& (0+255),w,b	;volatile
 31460  003466  6EFD               	movwf	tosl,c
 31461  003468  51C3               	movf	(_outPipes+7)& (0+255),w,b	;volatile
 31462  00346A  6EFE               	movwf	tosh,c
 31463  00346C  6AFF               	clrf	tosu,c
 31464  00346E  50FA               	movf	pclath,w,c
 31465  003470  0012               	return		;indir
 31466  003472                     i2u695_49:
 31467                           
 31468                           ;usb_device.c: 1588: }
 31469                           ;usb_device.c: 1589: outPipes[0].info.bits.busy = 0;
 31470  003472  0100               	movlb	0	; () banked
 31471  003474  9FBF               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 31472                           
 31473                           ; BSR set to: 0
 31474                           ;usb_device.c: 1603: if(USBDeferStatusStagePacket == 0)
 31475  003476  5045               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 31476  003478  A4D8               	btfss	status,2,c
 31477  00347A  0012               	return	
 31478                           
 31479                           ; BSR set to: 0
 31480                           ;usb_device.c: 1604: {
 31481                           ;usb_device.c: 1605: USBCtrlEPAllowStatusStage();
 31482  00347C  EC59  F021         	call	_USBCtrlEPAllowStatusStage	;wreg free
 31483  003480  0012               	return	
 31484  003482                     __end_of_USBCtrlTrfRxService:
 31485                           	opt stack 0
 31486                           tosu	equ	0xFFF
 31487                           tosh	equ	0xFFE
 31488                           tosl	equ	0xFFD
 31489                           pclatu	equ	0xFFB
 31490                           pclath	equ	0xFFA
 31491                           tblptru	equ	0xFF8
 31492                           tblptrh	equ	0xFF7
 31493                           tblptrl	equ	0xFF6
 31494                           tablat	equ	0xFF5
 31495                           prodh	equ	0xFF4
 31496                           prodl	equ	0xFF3
 31497                           intcon	equ	0xFF2
 31498                           intcon2	equ	0xFF1
 31499                           intcon3	equ	0xFF0
 31500                           indf0	equ	0xFEF
 31501                           postinc0	equ	0xFEE
 31502                           fsr0h	equ	0xFEA
 31503                           fsr0l	equ	0xFE9
 31504                           wreg	equ	0xFE8
 31505                           indf1	equ	0xFE7
 31506                           postdec1	equ	0xFE5
 31507                           fsr1h	equ	0xFE2
 31508                           fsr1l	equ	0xFE1
 31509                           indf2	equ	0xFDF
 31510                           postinc2	equ	0xFDE
 31511                           postdec2	equ	0xFDD
 31512                           plusw2	equ	0xFDB
 31513                           fsr2h	equ	0xFDA
 31514                           fsr2l	equ	0xFD9
 31515                           status	equ	0xFD8
 31516                           
 31517 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 31518 ;; Defined at:
 31519 ;;		line 1104 in file "../Includes/Usb/Framework/usb_device.c"
 31520 ;; Parameters:    Size  Location     Type
 31521 ;;		None
 31522 ;; Auto vars:     Size  Location     Type
 31523 ;;		None
 31524 ;; Return value:  Size  Location     Type
 31525 ;;                  1    wreg      void 
 31526 ;; Registers used:
 31527 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31528 ;; Tracked objects:
 31529 ;;		On entry : 0/0
 31530 ;;		On exit  : 0/0
 31531 ;;		Unchanged: 0/0
 31532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31533 ;;      Params:         0       0       0       0       0       0       0       0       0
 31534 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31535 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31536 ;;      Totals:         0       0       0       0       0       0       0       0       0
 31537 ;;Total ram usage:        0 bytes
 31538 ;; Hardware stack levels used:    1
 31539 ;; This function calls:
 31540 ;;		Nothing
 31541 ;; This function is called by:
 31542 ;;		_USBDeviceTasks
 31543 ;;		_USBCtrlEPServiceComplete
 31544 ;;		_USBCtrlTrfRxService
 31545 ;; This function uses a non-reentrant model
 31546 ;;
 31547                           
 31548                           	psect	text138
 31549  0042B2                     __ptext138:
 31550                           	opt stack 0
 31551  0042B2                     _USBCtrlEPAllowStatusStage:
 31552                           	opt stack 16
 31553                           
 31554                           ;usb_device.c: 1111: if(USBStatusStageEnabledFlag1 == 0)
 31555                           
 31556                           ;incstack = 0
 31557  0042B2  5044               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 31558  0042B4  A4D8               	btfss	status,2,c
 31559  0042B6  0012               	return	
 31560                           
 31561                           ;usb_device.c: 1112: {
 31562                           ;usb_device.c: 1113: USBStatusStageEnabledFlag1 = 1;
 31563  0042B8  0E01               	movlw	1
 31564  0042BA  6E44               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 31565                           
 31566                           ;usb_device.c: 1114: if(USBStatusStageEnabledFlag2 == 0)
 31567  0042BC  5043               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 31568  0042BE  A4D8               	btfss	status,2,c
 31569  0042C0  0012               	return	
 31570                           
 31571                           ;usb_device.c: 1115: {
 31572                           ;usb_device.c: 1116: USBStatusStageEnabledFlag2 = 1;
 31573  0042C2  0E01               	movlw	1
 31574  0042C4  6E43               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 31575                           
 31576                           ;usb_device.c: 1120: if(controlTransferState == 2)
 31577  0042C6  0E02               	movlw	2
 31578  0042C8  184A               	xorwf	_controlTransferState,w,c	;volatile
 31579  0042CA  A4D8               	btfss	status,2,c
 31580  0042CC  D016               	goto	i2l2002
 31581                           
 31582                           ;usb_device.c: 1121: {
 31583                           ;usb_device.c: 1122: pBDTEntryIn[0]->CNT = 0;
 31584  0042CE  0100               	movlb	0	; () banked
 31585  0042D0  EE20 F001          	lfsr	2,1
 31586  0042D4  51CA               	movf	_pBDTEntryIn& (0+255),w,b
 31587  0042D6  26D9               	addwf	fsr2l,f,c
 31588  0042D8  51CB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 31589  0042DA  22DA               	addwfc	fsr2h,f,c
 31590  0042DC  0E00               	movlw	0
 31591  0042DE  6EDF               	movwf	indf2,c
 31592                           
 31593                           ; BSR set to: 0
 31594                           ;usb_device.c: 1123: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 31595  0042E0  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 31596  0042E4  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31597  0042E8  0E48               	movlw	72
 31598  0042EA  6EDF               	movwf	indf2,c
 31599                           
 31600                           ; BSR set to: 0
 31601                           ;usb_device.c: 1124: pBDTEntryIn[0]->STAT.Val |= 0x80;
 31602  0042EC  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 31603  0042F0  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31604  0042F4  0E00               	movlw	0
 31605  0042F6  8EDB               	bsf	plusw2,7,c
 31606                           
 31607                           ;usb_device.c: 1125: }
 31608  0042F8  0012               	return	
 31609  0042FA                     i2l2002:
 31610                           
 31611                           ;usb_device.c: 1126: else if(controlTransferState == 1)
 31612                           
 31613                           ; BSR set to: 0
 31614  0042FA  044A               	decf	_controlTransferState,w,c	;volatile
 31615  0042FC  A4D8               	btfss	status,2,c
 31616  0042FE  0012               	return	
 31617                           
 31618                           ;usb_device.c: 1127: {
 31619                           ;usb_device.c: 1128: BothEP0OutUOWNsSet = 0;
 31620  004300  0E00               	movlw	0
 31621  004302  6E47               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 31622                           
 31623                           ;usb_device.c: 1132: pBDTEntryEP0OutCurrent->CNT = 8;
 31624  004304  EE20 F001          	lfsr	2,1
 31625  004308  5036               	movf	_pBDTEntryEP0OutCurrent,w,c
 31626  00430A  26D9               	addwf	fsr2l,f,c
 31627  00430C  5037               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 31628  00430E  22DA               	addwfc	fsr2h,f,c
 31629  004310  0E08               	movlw	8
 31630  004312  6EDF               	movwf	indf2,c
 31631                           
 31632                           ;usb_device.c: 1133: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 31633  004314  EE20 F002          	lfsr	2,2
 31634  004318  5036               	movf	_pBDTEntryEP0OutCurrent,w,c
 31635  00431A  26D9               	addwf	fsr2l,f,c
 31636  00431C  5037               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 31637  00431E  22DA               	addwfc	fsr2h,f,c
 31638  004320  0E30               	movlw	48
 31639  004322  6EDE               	movwf	postinc2,c
 31640  004324  0E04               	movlw	4
 31641  004326  6EDD               	movwf	postdec2,c
 31642                           
 31643                           ;usb_device.c: 1134: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 31644  004328  C036  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 31645  00432C  C037  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 31646  004330  0E04               	movlw	4
 31647  004332  6EDF               	movwf	indf2,c
 31648                           
 31649                           ;usb_device.c: 1135: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 31650  004334  C036  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 31651  004338  C037  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 31652  00433C  0E00               	movlw	0
 31653  00433E  8EDB               	bsf	plusw2,7,c
 31654                           
 31655                           ;usb_device.c: 1136: BothEP0OutUOWNsSet = 1;
 31656  004340  0E01               	movlw	1
 31657  004342  6E47               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 31658                           
 31659                           ;usb_device.c: 1139: pBDTEntryEP0OutNext->CNT = 8;
 31660  004344  EE20 F001          	lfsr	2,1
 31661  004348  5034               	movf	_pBDTEntryEP0OutNext,w,c
 31662  00434A  26D9               	addwf	fsr2l,f,c
 31663  00434C  5035               	movf	_pBDTEntryEP0OutNext+1,w,c
 31664  00434E  22DA               	addwfc	fsr2h,f,c
 31665  004350  0E08               	movlw	8
 31666  004352  6EDF               	movwf	indf2,c
 31667                           
 31668                           ;usb_device.c: 1140: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 31669  004354  EE20 F002          	lfsr	2,2
 31670  004358  5034               	movf	_pBDTEntryEP0OutNext,w,c
 31671  00435A  26D9               	addwf	fsr2l,f,c
 31672  00435C  5035               	movf	_pBDTEntryEP0OutNext+1,w,c
 31673  00435E  22DA               	addwfc	fsr2h,f,c
 31674  004360  0E30               	movlw	48
 31675  004362  6EDE               	movwf	postinc2,c
 31676  004364  0E04               	movlw	4
 31677  004366  6EDD               	movwf	postdec2,c
 31678                           
 31679                           ;usb_device.c: 1141: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 31680  004368  C034  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 31681  00436C  C035  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 31682  004370  0E80               	movlw	128
 31683  004372  6EDF               	movwf	indf2,c
 31684  004374  0012               	return	
 31685  004376                     __end_of_USBCtrlEPAllowStatusStage:
 31686                           	opt stack 0
 31687                           tosu	equ	0xFFF
 31688                           tosh	equ	0xFFE
 31689                           tosl	equ	0xFFD
 31690                           pclatu	equ	0xFFB
 31691                           pclath	equ	0xFFA
 31692                           tblptru	equ	0xFF8
 31693                           tblptrh	equ	0xFF7
 31694                           tblptrl	equ	0xFF6
 31695                           tablat	equ	0xFF5
 31696                           prodh	equ	0xFF4
 31697                           prodl	equ	0xFF3
 31698                           intcon	equ	0xFF2
 31699                           intcon2	equ	0xFF1
 31700                           intcon3	equ	0xFF0
 31701                           indf0	equ	0xFEF
 31702                           postinc0	equ	0xFEE
 31703                           fsr0h	equ	0xFEA
 31704                           fsr0l	equ	0xFE9
 31705                           wreg	equ	0xFE8
 31706                           indf1	equ	0xFE7
 31707                           postdec1	equ	0xFE5
 31708                           fsr1h	equ	0xFE2
 31709                           fsr1l	equ	0xFE1
 31710                           indf2	equ	0xFDF
 31711                           postinc2	equ	0xFDE
 31712                           postdec2	equ	0xFDD
 31713                           plusw2	equ	0xFDB
 31714                           fsr2h	equ	0xFDA
 31715                           fsr2l	equ	0xFD9
 31716                           status	equ	0xFD8
 31717                           
 31718 ;; *************** function _USBCtrlTrfInHandler *****************
 31719 ;; Defined at:
 31720 ;;		line 2223 in file "../Includes/Usb/Framework/usb_device.c"
 31721 ;; Parameters:    Size  Location     Type
 31722 ;;		None
 31723 ;; Auto vars:     Size  Location     Type
 31724 ;;  lastDTS         1   17[COMRAM] unsigned char 
 31725 ;; Return value:  Size  Location     Type
 31726 ;;                  1    wreg      void 
 31727 ;; Registers used:
 31728 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 31729 ;; Tracked objects:
 31730 ;;		On entry : 0/0
 31731 ;;		On exit  : 0/0
 31732 ;;		Unchanged: 0/0
 31733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31734 ;;      Params:         0       0       0       0       0       0       0       0       0
 31735 ;;      Locals:         1       0       0       0       0       0       0       0       0
 31736 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31737 ;;      Totals:         1       0       0       0       0       0       0       0       0
 31738 ;;Total ram usage:        1 bytes
 31739 ;; Hardware stack levels used:    1
 31740 ;; Hardware stack levels required when called:    2
 31741 ;; This function calls:
 31742 ;;		_USART_mySetLineCodingHandler
 31743 ;;		_USBCtrlTrfTxService
 31744 ;; This function is called by:
 31745 ;;		_USBCtrlEPService
 31746 ;; This function uses a non-reentrant model
 31747 ;;
 31748                           
 31749                           	psect	text139
 31750  003DCA                     __ptext139:
 31751                           	opt stack 0
 31752  003DCA                     _USBCtrlTrfInHandler:
 31753                           	opt stack 16
 31754                           
 31755                           ;usb_device.c: 2225: uint8_t lastDTS;
 31756                           ;usb_device.c: 2227: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 31757                           
 31758                           ;incstack = 0
 31759  003DCA  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 31760  003DCE  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31761  003DD2  0100               	movlb	0	; () banked
 31762  003DD4  0E00               	movlw	0
 31763  003DD6  BCDF               	btfsc	indf2,6,c
 31764  003DD8  0E01               	movlw	1
 31765  003DDA  6E12               	movwf	USBCtrlTrfInHandler@lastDTS,c
 31766                           
 31767                           ; BSR set to: 0
 31768                           ;usb_device.c: 2230: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 31769  003DDC  0E04               	movlw	4
 31770  003DDE  1BCA               	xorwf	_pBDTEntryIn& (0+255),f,b
 31771                           
 31772                           ; BSR set to: 0
 31773                           ;usb_device.c: 2235: if(USBDeviceState == ADR_PENDING_STATE)
 31774  003DE0  0E08               	movlw	8
 31775  003DE2  19EB               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 31776  003DE4  A4D8               	btfss	status,2,c
 31777  003DE6  D00C               	goto	i2l2131
 31778                           
 31779                           ; BSR set to: 0
 31780                           ;usb_device.c: 2236: {
 31781                           ;usb_device.c: 2237: UADDR = (SetupPkt.bDevADR & 0x7F);
 31782  003DE8  0104               	movlb	4	; () banked
 31783  003DEA  5132               	movf	50,w,b	;volatile
 31784  003DEC  0B7F               	andlw	127
 31785  003DEE  6E63               	movwf	3939,c	;volatile
 31786                           
 31787                           ; BSR set to: 4
 31788                           ;usb_device.c: 2238: if(UADDR != 0u)
 31789  003DF0  5063               	movf	3939,w,c	;volatile
 31790  003DF2  B4D8               	btfsc	status,2,c
 31791  003DF4  D002               	goto	i2l2130
 31792                           
 31793                           ; BSR set to: 4
 31794                           ;usb_device.c: 2239: {
 31795                           ;usb_device.c: 2240: USBDeviceState=ADDRESS_STATE;
 31796  003DF6  0E10               	movlw	16
 31797  003DF8  D001               	goto	L35
 31798  003DFA                     i2l2130:
 31799                           
 31800                           ;usb_device.c: 2242: else
 31801                           ;usb_device.c: 2243: {
 31802                           ;usb_device.c: 2244: USBDeviceState=DEFAULT_STATE;
 31803                           
 31804                           ; BSR set to: 0
 31805  003DFA  0E04               	movlw	4
 31806  003DFC                     L35:
 31807  003DFC  0100               	movlb	0	; () banked
 31808  003DFE  6FEB               	movwf	_USBDeviceState& (0+255),b	;volatile
 31809  003E00                     i2l2131:
 31810                           
 31811                           ; BSR set to: 0
 31812                           ;usb_device.c: 2245: }
 31813                           ;usb_device.c: 2246: }
 31814                           ;usb_device.c: 2249: if(controlTransferState == 1)
 31815                           
 31816                           ; BSR set to: 0
 31817                           
 31818                           ; BSR set to: 0
 31819  003E00  044A               	decf	_controlTransferState,w,c	;volatile
 31820  003E02  A4D8               	btfss	status,2,c
 31821  003E04  D03A               	goto	i2l2132
 31822                           
 31823                           ; BSR set to: 0
 31824                           ;usb_device.c: 2250: {
 31825                           ;usb_device.c: 2251: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 31826  003E06  EE20 F002          	lfsr	2,2
 31827  003E0A  51CA               	movf	_pBDTEntryIn& (0+255),w,b
 31828  003E0C  26D9               	addwf	fsr2l,f,c
 31829  003E0E  51CB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 31830  003E10  22DA               	addwfc	fsr2h,f,c
 31831  003E12  0E38               	movlw	56
 31832  003E14  6EDE               	movwf	postinc2,c
 31833  003E16  0E04               	movlw	4
 31834  003E18  6EDD               	movwf	postdec2,c
 31835                           
 31836                           ; BSR set to: 0
 31837                           ;usb_device.c: 2252: USBCtrlTrfTxService();
 31838  003E1A  ECBD  F01F         	call	_USBCtrlTrfTxService	;wreg free
 31839                           
 31840                           ;usb_device.c: 2258: if(shortPacketStatus == 2)
 31841  003E1E  0E02               	movlw	2
 31842  003E20  184B               	xorwf	_shortPacketStatus,w,c	;volatile
 31843  003E22  A4D8               	btfss	status,2,c
 31844  003E24  D00D               	goto	i2l2133
 31845                           
 31846                           ;usb_device.c: 2259: {
 31847                           ;usb_device.c: 2262: pBDTEntryIn[0]->STAT.Val = 0x04;
 31848  003E26  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 31849  003E2A  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31850  003E2E  0E04               	movlw	4
 31851  003E30  6EDF               	movwf	indf2,c
 31852                           
 31853                           ;usb_device.c: 2263: pBDTEntryIn[0]->STAT.Val |= 0x80;
 31854  003E32  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 31855  003E36  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31856  003E3A  0E00               	movlw	0
 31857  003E3C  8EDB               	bsf	plusw2,7,c
 31858                           
 31859                           ;usb_device.c: 2264: }
 31860  003E3E  0012               	return	
 31861  003E40                     i2l2133:
 31862                           
 31863                           ;usb_device.c: 2265: else
 31864                           ;usb_device.c: 2266: {
 31865                           ;usb_device.c: 2267: if(lastDTS == 0)
 31866  003E40  5012               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 31867  003E42  A4D8               	btfss	status,2,c
 31868  003E44  D00D               	goto	i2l2135
 31869                           
 31870                           ;usb_device.c: 2268: {
 31871                           ;usb_device.c: 2269: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 31872  003E46  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 31873  003E4A  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31874  003E4E  0E48               	movlw	72
 31875  003E50  6EDF               	movwf	indf2,c
 31876                           
 31877                           ;usb_device.c: 2270: pBDTEntryIn[0]->STAT.Val |= 0x80;
 31878  003E52  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 31879  003E56  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31880  003E5A  0E00               	movlw	0
 31881  003E5C  8EDB               	bsf	plusw2,7,c
 31882                           
 31883                           ;usb_device.c: 2271: }
 31884  003E5E  0012               	return	
 31885  003E60                     i2l2135:
 31886                           
 31887                           ;usb_device.c: 2272: else
 31888                           ;usb_device.c: 2273: {
 31889                           ;usb_device.c: 2274: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 31890  003E60  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 31891  003E64  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31892  003E68  0E08               	movlw	8
 31893  003E6A  6EDF               	movwf	indf2,c
 31894                           
 31895                           ;usb_device.c: 2275: pBDTEntryIn[0]->STAT.Val |= 0x80;
 31896  003E6C  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 31897  003E70  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31898  003E74  0E00               	movlw	0
 31899  003E76  8EDB               	bsf	plusw2,7,c
 31900                           
 31901                           ;usb_device.c: 2276: }
 31902                           ;usb_device.c: 2277: }
 31903                           ;usb_device.c: 2278: }
 31904  003E78  0012               	return	
 31905  003E7A                     i2l2132:
 31906                           
 31907                           ; BSR set to: 0
 31908                           ;usb_device.c: 2279: else
 31909                           ;usb_device.c: 2280: {
 31910                           ;usb_device.c: 2284: if(outPipes[0].info.bits.busy == 1)
 31911  003E7A  AFBF               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 31912  003E7C  D011               	goto	i2l2138
 31913                           
 31914                           ; BSR set to: 0
 31915                           ;usb_device.c: 2285: {
 31916                           ;usb_device.c: 2286: if(outPipes[0].pFunc != (0))
 31917  003E7E  51C2               	movf	(_outPipes+6)& (0+255),w,b	;volatile
 31918  003E80  11C3               	iorwf	(_outPipes+7)& (0+255),w,b	;volatile
 31919  003E82  B4D8               	btfsc	status,2,c
 31920  003E84  D00B               	goto	i2u891_49
 31921                           
 31922                           ; BSR set to: 0
 31923                           ;usb_device.c: 2287: {
 31924                           ;usb_device.c: 2288: outPipes[0].pFunc();
 31925  003E86  D801               	call	i2u891_48
 31926  003E88  D009               	goto	i2u891_49
 31927  003E8A                     i2u891_48:
 31928  003E8A  0005               	push	
 31929  003E8C  6EFA               	movwf	pclath,c
 31930  003E8E  51C2               	movf	(_outPipes+6)& (0+255),w,b	;volatile
 31931  003E90  6EFD               	movwf	tosl,c
 31932  003E92  51C3               	movf	(_outPipes+7)& (0+255),w,b	;volatile
 31933  003E94  6EFE               	movwf	tosh,c
 31934  003E96  6AFF               	clrf	tosu,c
 31935  003E98  50FA               	movf	pclath,w,c
 31936  003E9A  0012               	return		;indir
 31937  003E9C                     i2u891_49:
 31938                           
 31939                           ;usb_device.c: 2289: }
 31940                           ;usb_device.c: 2290: outPipes[0].info.bits.busy = 0;
 31941  003E9C  0100               	movlb	0	; () banked
 31942  003E9E  9FBF               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 31943  003EA0                     i2l2138:
 31944                           
 31945                           ; BSR set to: 0
 31946                           ;usb_device.c: 2291: }
 31947                           ;usb_device.c: 2293: controlTransferState = 0;
 31948                           
 31949                           ; BSR set to: 0
 31950  003EA0  0E00               	movlw	0
 31951  003EA2  6E4A               	movwf	_controlTransferState,c	;volatile
 31952  003EA4  0012               	return	
 31953  003EA6                     __end_of_USBCtrlTrfInHandler:
 31954                           	opt stack 0
 31955                           tosu	equ	0xFFF
 31956                           tosh	equ	0xFFE
 31957                           tosl	equ	0xFFD
 31958                           pclatu	equ	0xFFB
 31959                           pclath	equ	0xFFA
 31960                           tblptru	equ	0xFF8
 31961                           tblptrh	equ	0xFF7
 31962                           tblptrl	equ	0xFF6
 31963                           tablat	equ	0xFF5
 31964                           prodh	equ	0xFF4
 31965                           prodl	equ	0xFF3
 31966                           intcon	equ	0xFF2
 31967                           intcon2	equ	0xFF1
 31968                           intcon3	equ	0xFF0
 31969                           indf0	equ	0xFEF
 31970                           postinc0	equ	0xFEE
 31971                           fsr0h	equ	0xFEA
 31972                           fsr0l	equ	0xFE9
 31973                           wreg	equ	0xFE8
 31974                           indf1	equ	0xFE7
 31975                           postdec1	equ	0xFE5
 31976                           fsr1h	equ	0xFE2
 31977                           fsr1l	equ	0xFE1
 31978                           indf2	equ	0xFDF
 31979                           postinc2	equ	0xFDE
 31980                           postdec2	equ	0xFDD
 31981                           plusw2	equ	0xFDB
 31982                           fsr2h	equ	0xFDA
 31983                           fsr2l	equ	0xFD9
 31984                           status	equ	0xFD8
 31985                           
 31986 ;; *************** function _USBCtrlTrfTxService *****************
 31987 ;; Defined at:
 31988 ;;		line 1437 in file "../Includes/Usb/Framework/usb_device.c"
 31989 ;; Parameters:    Size  Location     Type
 31990 ;;		None
 31991 ;; Auto vars:     Size  Location     Type
 31992 ;;  byteToSend      1    0[COMRAM] unsigned char 
 31993 ;; Return value:  Size  Location     Type
 31994 ;;                  1    wreg      void 
 31995 ;; Registers used:
 31996 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 31997 ;; Tracked objects:
 31998 ;;		On entry : 0/0
 31999 ;;		On exit  : 0/0
 32000 ;;		Unchanged: 0/0
 32001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32002 ;;      Params:         0       0       0       0       0       0       0       0       0
 32003 ;;      Locals:         1       0       0       0       0       0       0       0       0
 32004 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32005 ;;      Totals:         1       0       0       0       0       0       0       0       0
 32006 ;;Total ram usage:        1 bytes
 32007 ;; Hardware stack levels used:    1
 32008 ;; This function calls:
 32009 ;;		Nothing
 32010 ;; This function is called by:
 32011 ;;		_USBCtrlEPAllowDataStage
 32012 ;;		_USBCtrlTrfInHandler
 32013 ;; This function uses a non-reentrant model
 32014 ;;
 32015                           
 32016                           	psect	text140
 32017  003F7A                     __ptext140:
 32018                           	opt stack 0
 32019  003F7A                     _USBCtrlTrfTxService:
 32020                           	opt stack 15
 32021                           
 32022                           ;usb_device.c: 1439: uint8_t byteToSend;
 32023                           ;usb_device.c: 1443: byteToSend = 8;
 32024                           
 32025                           ;incstack = 0
 32026  003F7A  0E08               	movlw	8
 32027  003F7C  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 32028                           
 32029                           ;usb_device.c: 1444: if(inPipes[0].wCount.Val < (uint8_t)8)
 32030  003F7E  0100               	movlb	0	; () banked
 32031  003F80  51C9               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 32032  003F82  E110               	bnz	i2l8241
 32033  003F84  0E08               	movlw	8
 32034  003F86  5DC8               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 32035  003F88  B0D8               	btfsc	status,0,c
 32036  003F8A  D00C               	goto	i2l2035
 32037                           
 32038                           ; BSR set to: 0
 32039                           ;usb_device.c: 1445: {
 32040                           ;usb_device.c: 1446: byteToSend = inPipes[0].wCount.Val;
 32041  003F8C  C0C8  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 32042                           
 32043                           ; BSR set to: 0
 32044                           ;usb_device.c: 1453: if(shortPacketStatus == 0)
 32045  003F90  504B               	movf	_shortPacketStatus,w,c	;volatile
 32046  003F92  A4D8               	btfss	status,2,c
 32047  003F94  D002               	goto	i2l2033
 32048                           
 32049                           ; BSR set to: 0
 32050                           ;usb_device.c: 1454: {
 32051                           ;usb_device.c: 1455: shortPacketStatus = 1;
 32052  003F96  0E01               	movlw	1
 32053  003F98  D004               	goto	L36
 32054  003F9A                     i2l2033:
 32055                           
 32056                           ; BSR set to: 0
 32057                           ;usb_device.c: 1457: else if(shortPacketStatus == 1)
 32058                           
 32059                           ; BSR set to: 0
 32060  003F9A  044B               	decf	_shortPacketStatus,w,c	;volatile
 32061  003F9C  A4D8               	btfss	status,2,c
 32062  003F9E  D002               	goto	i2l2035
 32063                           
 32064                           ; BSR set to: 0
 32065                           ;usb_device.c: 1458: {
 32066                           ;usb_device.c: 1459: shortPacketStatus = 2;
 32067  003FA0  0E02               	movlw	2
 32068  003FA2                     L36:
 32069  003FA2  6E4B               	movwf	_shortPacketStatus,c	;volatile
 32070  003FA4                     i2l2035:
 32071  003FA4                     i2l8241:
 32072                           
 32073                           ; BSR set to: 0
 32074                           ;usb_device.c: 1460: }
 32075                           ;usb_device.c: 1461: }
 32076                           ;usb_device.c: 1465: inPipes[0].wCount.Val -= byteToSend;
 32077  003FA4  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 32078  003FA6  5FC8               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 32079  003FA8  0E00               	movlw	0
 32080  003FAA  5BC9               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 32081                           
 32082                           ; BSR set to: 0
 32083                           ;usb_device.c: 1470: pBDTEntryIn[0]->CNT = byteToSend;
 32084  003FAC  EE20 F001          	lfsr	2,1
 32085  003FB0  51CA               	movf	_pBDTEntryIn& (0+255),w,b
 32086  003FB2  26D9               	addwf	fsr2l,f,c
 32087  003FB4  51CB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 32088  003FB6  22DA               	addwfc	fsr2h,f,c
 32089  003FB8  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 32090                           
 32091                           ; BSR set to: 0
 32092                           ;usb_device.c: 1474: pDst = (volatile uint8_t*)CtrlTrfData;
 32093  003FBC  0E38               	movlw	56
 32094  003FBE  0101               	movlb	1	; () banked
 32095  003FC0  6F54               	movwf	_pDst& (0+255),b
 32096  003FC2  0E04               	movlw	4
 32097  003FC4  6F55               	movwf	(_pDst+1)& (0+255),b
 32098                           
 32099                           ; BSR set to: 1
 32100                           ;usb_device.c: 1475: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 32101  003FC6  0100               	movlb	0	; () banked
 32102  003FC8  A1C7               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 32103  003FCA  D01D               	goto	i2l2037
 32104  003FCC  D03C               	goto	i2l2041
 32105  003FCE                     
 32106                           ;usb_device.c: 1478: {
 32107                           ;usb_device.c: 1479: *pDst++ = *inPipes[0].pSrc.bRom++;
 32108                           
 32109                           ; BSR set to: 0
 32110  003FCE  C0C4  FFF6         	movff	_inPipes,tblptrl	;volatile
 32111  003FD2  C0C5  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 32112  003FD6  6AF8               	clrf	tblptru,c
 32113  003FD8  C154  FFD9         	movff	_pDst,fsr2l
 32114  003FDC  C155  FFDA         	movff	_pDst+1,fsr2h
 32115  003FE0  0E07               	movlw	(high __ramtop+-1)
 32116  003FE2  64F7               	cpfsgt	tblptrh,c
 32117  003FE4  D003               	bra	i2u607_47
 32118  003FE6  0008               	tblrd		*
 32119  003FE8  50F5               	movf	tablat,w,c
 32120  003FEA  D005               	bra	i2u607_40
 32121  003FEC                     i2u607_47:
 32122  003FEC  CFF6 FFE9          	movff	tblptrl,fsr0l
 32123  003FF0  CFF7 FFEA          	movff	tblptrh,fsr0h
 32124  003FF4  50EF               	movf	indf0,w,c
 32125  003FF6                     i2u607_40:
 32126  003FF6  6EDF               	movwf	indf2,c
 32127  003FF8  0100               	movlb	0	; () banked
 32128  003FFA  4BC4               	infsnz	_inPipes& (0+255),f,b	;volatile
 32129  003FFC  2BC5               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 32130                           
 32131                           ; BSR set to: 0
 32132  003FFE  0101               	movlb	1	; () banked
 32133  004000  4B54               	infsnz	_pDst& (0+255),f,b
 32134  004002  2B55               	incf	(_pDst+1)& (0+255),f,b
 32135                           
 32136                           ; BSR set to: 1
 32137                           ;usb_device.c: 1480: byteToSend--;
 32138  004004  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 32139  004006                     i2l2037:
 32140                           
 32141                           ; BSR set to: 1
 32142  004006  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 32143  004008  B4D8               	btfsc	status,2,c
 32144  00400A  0012               	return	
 32145  00400C  D7E0               	goto	i2l2038
 32146  00400E                     
 32147                           ;usb_device.c: 1486: {
 32148                           ;usb_device.c: 1487: *pDst++ = *inPipes[0].pSrc.bRam++;
 32149  00400E  C0C4  FFF6         	movff	_inPipes,tblptrl	;volatile
 32150  004012  C0C5  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 32151  004016  6AF8               	clrf	tblptru,c
 32152  004018  C154  FFD9         	movff	_pDst,fsr2l
 32153  00401C  C155  FFDA         	movff	_pDst+1,fsr2h
 32154  004020  0E07               	movlw	(high __ramtop+-1)
 32155  004022  64F7               	cpfsgt	tblptrh,c
 32156  004024  D003               	bra	i2u609_47
 32157  004026  0008               	tblrd		*
 32158  004028  50F5               	movf	tablat,w,c
 32159  00402A  D005               	bra	i2u609_40
 32160  00402C                     i2u609_47:
 32161  00402C  CFF6 FFE9          	movff	tblptrl,fsr0l
 32162  004030  CFF7 FFEA          	movff	tblptrh,fsr0h
 32163  004034  50EF               	movf	indf0,w,c
 32164  004036                     i2u609_40:
 32165  004036  6EDF               	movwf	indf2,c
 32166  004038  0100               	movlb	0	; () banked
 32167  00403A  4BC4               	infsnz	_inPipes& (0+255),f,b	;volatile
 32168  00403C  2BC5               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 32169                           
 32170                           ; BSR set to: 0
 32171  00403E  0101               	movlb	1	; () banked
 32172  004040  4B54               	infsnz	_pDst& (0+255),f,b
 32173  004042  2B55               	incf	(_pDst+1)& (0+255),f,b
 32174                           
 32175                           ; BSR set to: 1
 32176                           ;usb_device.c: 1488: byteToSend--;
 32177  004044  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 32178  004046                     i2l2041:
 32179                           
 32180                           ; BSR set to: 1
 32181  004046  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 32182  004048  B4D8               	btfsc	status,2,c
 32183  00404A  0012               	return	
 32184  00404C  D7E0               	goto	i2l2042
 32185  00404E                     __end_of_USBCtrlTrfTxService:
 32186                           	opt stack 0
 32187                           tosu	equ	0xFFF
 32188                           tosh	equ	0xFFE
 32189                           tosl	equ	0xFFD
 32190                           pclatu	equ	0xFFB
 32191                           pclath	equ	0xFFA
 32192                           tblptru	equ	0xFF8
 32193                           tblptrh	equ	0xFF7
 32194                           tblptrl	equ	0xFF6
 32195                           tablat	equ	0xFF5
 32196                           prodh	equ	0xFF4
 32197                           prodl	equ	0xFF3
 32198                           intcon	equ	0xFF2
 32199                           intcon2	equ	0xFF1
 32200                           intcon3	equ	0xFF0
 32201                           indf0	equ	0xFEF
 32202                           postinc0	equ	0xFEE
 32203                           fsr0h	equ	0xFEA
 32204                           fsr0l	equ	0xFE9
 32205                           wreg	equ	0xFE8
 32206                           indf1	equ	0xFE7
 32207                           postdec1	equ	0xFE5
 32208                           fsr1h	equ	0xFE2
 32209                           fsr1l	equ	0xFE1
 32210                           indf2	equ	0xFDF
 32211                           postinc2	equ	0xFDE
 32212                           postdec2	equ	0xFDD
 32213                           plusw2	equ	0xFDB
 32214                           fsr2h	equ	0xFDA
 32215                           fsr2l	equ	0xFD9
 32216                           status	equ	0xFD8
 32217                           
 32218 ;; *************** function _USART_mySetLineCodingHandler *****************
 32219 ;; Defined at:
 32220 ;;		line 273 in file "../Includes/Board/USBapp.c"
 32221 ;; Parameters:    Size  Location     Type
 32222 ;;		None
 32223 ;; Auto vars:     Size  Location     Type
 32224 ;;  dwBaud          4   13[COMRAM] unsigned long 
 32225 ;; Return value:  Size  Location     Type
 32226 ;;                  1    wreg      void 
 32227 ;; Registers used:
 32228 ;;		wreg, status,2, status,0, cstack
 32229 ;; Tracked objects:
 32230 ;;		On entry : 0/0
 32231 ;;		On exit  : 0/0
 32232 ;;		Unchanged: 0/0
 32233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32234 ;;      Params:         0       0       0       0       0       0       0       0       0
 32235 ;;      Locals:         4       0       0       0       0       0       0       0       0
 32236 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32237 ;;      Totals:         4       0       0       0       0       0       0       0       0
 32238 ;;Total ram usage:        4 bytes
 32239 ;; Hardware stack levels used:    1
 32240 ;; Hardware stack levels required when called:    1
 32241 ;; This function calls:
 32242 ;;		___lldiv
 32243 ;;		i2_EUSART_Initialize
 32244 ;; This function is called by:
 32245 ;;		_USBCheckCDCRequest
 32246 ;;		_USBCtrlTrfRxService
 32247 ;;		_USBCtrlTrfInHandler
 32248 ;; This function uses a non-reentrant model
 32249 ;;
 32250                           
 32251                           	psect	text141
 32252  005712                     __ptext141:
 32253                           	opt stack 0
 32254  005712                     _USART_mySetLineCodingHandler:
 32255                           	opt stack 15
 32256                           
 32257                           ;USBapp.c: 276: {line_coding.dwDTERate=cdc_notice.GetLineCoding.dwDTERate;};
 32258                           
 32259                           ;incstack = 0
 32260  005712  C1D7  F1E9         	movff	_cdc_notice,_line_coding
 32261  005716  C1D8  F1EA         	movff	_cdc_notice+1,_line_coding+1
 32262  00571A  C1D9  F1EB         	movff	_cdc_notice+2,_line_coding+2
 32263  00571E  C1DA  F1EC         	movff	_cdc_notice+3,_line_coding+3
 32264                           
 32265                           ;USBapp.c: 278: uint32_t dwBaud;
 32266                           ;USBapp.c: 279: dwBaud = ((48000000/4) / line_coding.dwDTERate) - 1;
 32267  005722  0E00               	movlw	0
 32268  005724  6E01               	movwf	___lldiv@dividend,c
 32269  005726  0E1B               	movlw	27
 32270  005728  6E02               	movwf	___lldiv@dividend+1,c
 32271  00572A  0EB7               	movlw	183
 32272  00572C  6E03               	movwf	___lldiv@dividend+2,c
 32273  00572E  0E00               	movlw	0
 32274  005730  6E04               	movwf	___lldiv@dividend+3,c
 32275  005732  C1E9  F005         	movff	_line_coding,___lldiv@divisor
 32276  005736  C1EA  F006         	movff	_line_coding+1,___lldiv@divisor+1
 32277  00573A  C1EB  F007         	movff	_line_coding+2,___lldiv@divisor+2
 32278  00573E  C1EC  F008         	movff	_line_coding+3,___lldiv@divisor+3
 32279  005742  EC18  F028         	call	___lldiv	;wreg free
 32280  005746  0EFF               	movlw	255
 32281  005748  2401               	addwf	?___lldiv,w,c
 32282  00574A  6E0E               	movwf	USART_mySetLineCodingHandler@dwBaud,c
 32283  00574C  0EFF               	movlw	255
 32284  00574E  2002               	addwfc	?___lldiv+1,w,c
 32285  005750  6E0F               	movwf	USART_mySetLineCodingHandler@dwBaud+1,c
 32286  005752  0EFF               	movlw	255
 32287  005754  2003               	addwfc	?___lldiv+2,w,c
 32288  005756  6E10               	movwf	USART_mySetLineCodingHandler@dwBaud+2,c
 32289  005758  0EFF               	movlw	255
 32290  00575A  2004               	addwfc	?___lldiv+3,w,c
 32291  00575C  6E11               	movwf	USART_mySetLineCodingHandler@dwBaud+3,c
 32292                           
 32293                           ;USBapp.c: 280: SPBRG = (uint8_t) dwBaud;
 32294  00575E  C00E  FFAF         	movff	USART_mySetLineCodingHandler@dwBaud,4015	;volatile
 32295                           
 32296                           ;USBapp.c: 281: SPBRGH = (uint8_t)((uint16_t) (dwBaud >> 8));
 32297  005762  C00F  FFB0         	movff	USART_mySetLineCodingHandler@dwBaud+1,4016	;volatile
 32298                           
 32299                           ;USBapp.c: 283: EUSART_Initialize();
 32300  005766  EC3F  F02E         	call	i2_EUSART_Initialize	;wreg free
 32301  00576A  0012               	return		;funcret
 32302  00576C                     __end_of_USART_mySetLineCodingHandler:
 32303                           	opt stack 0
 32304                           tosu	equ	0xFFF
 32305                           tosh	equ	0xFFE
 32306                           tosl	equ	0xFFD
 32307                           pclatu	equ	0xFFB
 32308                           pclath	equ	0xFFA
 32309                           tblptru	equ	0xFF8
 32310                           tblptrh	equ	0xFF7
 32311                           tblptrl	equ	0xFF6
 32312                           tablat	equ	0xFF5
 32313                           prodh	equ	0xFF4
 32314                           prodl	equ	0xFF3
 32315                           intcon	equ	0xFF2
 32316                           intcon2	equ	0xFF1
 32317                           intcon3	equ	0xFF0
 32318                           indf0	equ	0xFEF
 32319                           postinc0	equ	0xFEE
 32320                           fsr0h	equ	0xFEA
 32321                           fsr0l	equ	0xFE9
 32322                           wreg	equ	0xFE8
 32323                           indf1	equ	0xFE7
 32324                           postdec1	equ	0xFE5
 32325                           fsr1h	equ	0xFE2
 32326                           fsr1l	equ	0xFE1
 32327                           indf2	equ	0xFDF
 32328                           postinc2	equ	0xFDE
 32329                           postdec2	equ	0xFDD
 32330                           plusw2	equ	0xFDB
 32331                           fsr2h	equ	0xFDA
 32332                           fsr2l	equ	0xFD9
 32333                           status	equ	0xFD8
 32334                           
 32335 ;; *************** function i2_EUSART_Initialize *****************
 32336 ;; Defined at:
 32337 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 32338 ;; Parameters:    Size  Location     Type
 32339 ;;		None
 32340 ;; Auto vars:     Size  Location     Type
 32341 ;;		None
 32342 ;; Return value:  Size  Location     Type
 32343 ;;                  1    wreg      void 
 32344 ;; Registers used:
 32345 ;;		wreg, status,2
 32346 ;; Tracked objects:
 32347 ;;		On entry : 0/0
 32348 ;;		On exit  : 0/0
 32349 ;;		Unchanged: 0/0
 32350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32351 ;;      Params:         0       0       0       0       0       0       0       0       0
 32352 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32353 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32354 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32355 ;;Total ram usage:        0 bytes
 32356 ;; Hardware stack levels used:    1
 32357 ;; This function calls:
 32358 ;;		Nothing
 32359 ;; This function is called by:
 32360 ;;		_USBapp_CdcEmulatorInitialize
 32361 ;;		_USART_mySetLineCodingHandler
 32362 ;; This function uses a non-reentrant model
 32363 ;;
 32364                           
 32365                           	psect	text142
 32366  005C7E                     __ptext142:
 32367                           	opt stack 0
 32368  005C7E                     i2_EUSART_Initialize:
 32369                           	opt stack 17
 32370                           
 32371                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 32372                           
 32373                           ;incstack = 0
 32374  005C7E  9A9D               	bcf	3997,5,c	;volatile
 32375                           
 32376                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 32377  005C80  989D               	bcf	3997,4,c	;volatile
 32378                           
 32379                           ;eusart.c: 85: BAUDCON = 0x48;
 32380  005C82  0E48               	movlw	72
 32381  005C84  6EB8               	movwf	4024,c	;volatile
 32382                           
 32383                           ;eusart.c: 88: RCSTA = 0x90;
 32384  005C86  0E90               	movlw	144
 32385  005C88  6EAB               	movwf	4011,c	;volatile
 32386                           
 32387                           ;eusart.c: 91: TXSTA = 0x26;
 32388  005C8A  0E26               	movlw	38
 32389  005C8C  6EAC               	movwf	4012,c	;volatile
 32390                           
 32391                           ;eusart.c: 95: SPBRG = 0xD0;
 32392  005C8E  0ED0               	movlw	208
 32393  005C90  6EAF               	movwf	4015,c	;volatile
 32394                           
 32395                           ;eusart.c: 100: SPBRGH = 0x00;
 32396  005C92  0E00               	movlw	0
 32397  005C94  6EB0               	movwf	4016,c	;volatile
 32398                           
 32399                           ;eusart.c: 103: eusartTxHead = 0;
 32400  005C96  0E00               	movlw	0
 32401  005C98  0100               	movlb	0	; () banked
 32402  005C9A  6FE2               	movwf	_eusartTxHead& (0+255),b
 32403                           
 32404                           ;eusart.c: 104: eusartTxTail = 0;
 32405  005C9C  0E00               	movlw	0
 32406  005C9E  6FE1               	movwf	_eusartTxTail& (0+255),b
 32407                           
 32408                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 32409  005CA0  0E40               	movlw	64
 32410  005CA2  6FE0               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
 32411                           
 32412                           ;eusart.c: 107: eusartRxHead = 0;
 32413  005CA4  0E00               	movlw	0
 32414  005CA6  6FDF               	movwf	_eusartRxHead& (0+255),b
 32415                           
 32416                           ;eusart.c: 108: eusartRxTail = 0;
 32417  005CA8  0E00               	movlw	0
 32418  005CAA  6FDE               	movwf	_eusartRxTail& (0+255),b
 32419                           
 32420                           ;eusart.c: 109: eusartRxCount = 0;
 32421  005CAC  0E00               	movlw	0
 32422  005CAE  6FF5               	movwf	_eusartRxCount& (0+255),b	;volatile
 32423                           
 32424                           ; BSR set to: 0
 32425                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 32426  005CB0  8A9D               	bsf	3997,5,c	;volatile
 32427                           
 32428                           ; BSR set to: 0
 32429                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 32430  005CB2  88AB               	bsf	4011,4,c	;volatile
 32431                           
 32432                           ; BSR set to: 0
 32433  005CB4  0012               	return		;funcret
 32434  005CB6                     __end_ofi2_EUSART_Initialize:
 32435                           	opt stack 0
 32436                           tosu	equ	0xFFF
 32437                           tosh	equ	0xFFE
 32438                           tosl	equ	0xFFD
 32439                           pclatu	equ	0xFFB
 32440                           pclath	equ	0xFFA
 32441                           tblptru	equ	0xFF8
 32442                           tblptrh	equ	0xFF7
 32443                           tblptrl	equ	0xFF6
 32444                           tablat	equ	0xFF5
 32445                           prodh	equ	0xFF4
 32446                           prodl	equ	0xFF3
 32447                           intcon	equ	0xFF2
 32448                           intcon2	equ	0xFF1
 32449                           intcon3	equ	0xFF0
 32450                           indf0	equ	0xFEF
 32451                           postinc0	equ	0xFEE
 32452                           fsr0h	equ	0xFEA
 32453                           fsr0l	equ	0xFE9
 32454                           wreg	equ	0xFE8
 32455                           indf1	equ	0xFE7
 32456                           postdec1	equ	0xFE5
 32457                           fsr1h	equ	0xFE2
 32458                           fsr1l	equ	0xFE1
 32459                           indf2	equ	0xFDF
 32460                           postinc2	equ	0xFDE
 32461                           postdec2	equ	0xFDD
 32462                           plusw2	equ	0xFDB
 32463                           fsr2h	equ	0xFDA
 32464                           fsr2l	equ	0xFD9
 32465                           status	equ	0xFD8
 32466                           
 32467 ;; *************** function ___lldiv *****************
 32468 ;; Defined at:
 32469 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 32470 ;; Parameters:    Size  Location     Type
 32471 ;;  dividend        4    0[COMRAM] unsigned long 
 32472 ;;  divisor         4    4[COMRAM] unsigned long 
 32473 ;; Auto vars:     Size  Location     Type
 32474 ;;  quotient        4    8[COMRAM] unsigned long 
 32475 ;;  counter         1   12[COMRAM] unsigned char 
 32476 ;; Return value:  Size  Location     Type
 32477 ;;                  4    0[COMRAM] unsigned long 
 32478 ;; Registers used:
 32479 ;;		wreg, status,2, status,0
 32480 ;; Tracked objects:
 32481 ;;		On entry : 0/0
 32482 ;;		On exit  : 0/0
 32483 ;;		Unchanged: 0/0
 32484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32485 ;;      Params:         8       0       0       0       0       0       0       0       0
 32486 ;;      Locals:         5       0       0       0       0       0       0       0       0
 32487 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32488 ;;      Totals:        13       0       0       0       0       0       0       0       0
 32489 ;;Total ram usage:       13 bytes
 32490 ;; Hardware stack levels used:    1
 32491 ;; This function calls:
 32492 ;;		Nothing
 32493 ;; This function is called by:
 32494 ;;		_USART_mySetLineCodingHandler
 32495 ;; This function uses a non-reentrant model
 32496 ;;
 32497                           
 32498                           	psect	text143
 32499  005030                     __ptext143:
 32500                           	opt stack 0
 32501  005030                     ___lldiv:
 32502                           	opt stack 15
 32503                           
 32504                           ; BSR set to: 0
 32505                           ;incstack = 0
 32506  005030  0E00               	movlw	0
 32507  005032  6E09               	movwf	___lldiv@quotient,c
 32508  005034  0E00               	movlw	0
 32509  005036  6E0A               	movwf	___lldiv@quotient+1,c
 32510  005038  0E00               	movlw	0
 32511  00503A  6E0B               	movwf	___lldiv@quotient+2,c
 32512  00503C  0E00               	movlw	0
 32513  00503E  6E0C               	movwf	___lldiv@quotient+3,c
 32514  005040  5005               	movf	___lldiv@divisor,w,c
 32515  005042  1006               	iorwf	___lldiv@divisor+1,w,c
 32516  005044  1007               	iorwf	___lldiv@divisor+2,w,c
 32517  005046  1008               	iorwf	___lldiv@divisor+3,w,c
 32518  005048  B4D8               	btfsc	status,2,c
 32519  00504A  D02A               	goto	i2l2680
 32520  00504C  0E01               	movlw	1
 32521  00504E  6E0D               	movwf	___lldiv@counter,c
 32522  005050  D006               	goto	i2l2675
 32523  005052  90D8               	bcf	status,0,c
 32524  005054  3605               	rlcf	___lldiv@divisor,f,c
 32525  005056  3606               	rlcf	___lldiv@divisor+1,f,c
 32526  005058  3607               	rlcf	___lldiv@divisor+2,f,c
 32527  00505A  3608               	rlcf	___lldiv@divisor+3,f,c
 32528  00505C  2A0D               	incf	___lldiv@counter,f,c
 32529  00505E                     i2l2675:
 32530  00505E  AE08               	btfss	___lldiv@divisor+3,7,c
 32531  005060  D7F8               	goto	i2l2676
 32532  005062                     i2u612_40:
 32533  005062  90D8               	bcf	status,0,c
 32534  005064  3609               	rlcf	___lldiv@quotient,f,c
 32535  005066  360A               	rlcf	___lldiv@quotient+1,f,c
 32536  005068  360B               	rlcf	___lldiv@quotient+2,f,c
 32537  00506A  360C               	rlcf	___lldiv@quotient+3,f,c
 32538  00506C  5005               	movf	___lldiv@divisor,w,c
 32539  00506E  5C01               	subwf	___lldiv@dividend,w,c
 32540  005070  5006               	movf	___lldiv@divisor+1,w,c
 32541  005072  5802               	subwfb	___lldiv@dividend+1,w,c
 32542  005074  5007               	movf	___lldiv@divisor+2,w,c
 32543  005076  5803               	subwfb	___lldiv@dividend+2,w,c
 32544  005078  5008               	movf	___lldiv@divisor+3,w,c
 32545  00507A  5804               	subwfb	___lldiv@dividend+3,w,c
 32546  00507C  A0D8               	btfss	status,0,c
 32547  00507E  D009               	goto	i2l2679
 32548  005080  5005               	movf	___lldiv@divisor,w,c
 32549  005082  5E01               	subwf	___lldiv@dividend,f,c
 32550  005084  5006               	movf	___lldiv@divisor+1,w,c
 32551  005086  5A02               	subwfb	___lldiv@dividend+1,f,c
 32552  005088  5007               	movf	___lldiv@divisor+2,w,c
 32553  00508A  5A03               	subwfb	___lldiv@dividend+2,f,c
 32554  00508C  5008               	movf	___lldiv@divisor+3,w,c
 32555  00508E  5A04               	subwfb	___lldiv@dividend+3,f,c
 32556  005090  8009               	bsf	___lldiv@quotient,0,c
 32557  005092                     i2l2679:
 32558  005092  90D8               	bcf	status,0,c
 32559  005094  3208               	rrcf	___lldiv@divisor+3,f,c
 32560  005096  3207               	rrcf	___lldiv@divisor+2,f,c
 32561  005098  3206               	rrcf	___lldiv@divisor+1,f,c
 32562  00509A  3205               	rrcf	___lldiv@divisor,f,c
 32563  00509C  2E0D               	decfsz	___lldiv@counter,f,c
 32564  00509E  D7E1               	goto	i2u612_40
 32565  0050A0                     i2l2680:
 32566  0050A0  C009  F001         	movff	___lldiv@quotient,?___lldiv
 32567  0050A4  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 32568  0050A8  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 32569  0050AC  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 32570  0050B0  0012               	return		;funcret
 32571  0050B2                     __end_of___lldiv:
 32572                           	opt stack 0
 32573                           tosu	equ	0xFFF
 32574                           tosh	equ	0xFFE
 32575                           tosl	equ	0xFFD
 32576                           pclatu	equ	0xFFB
 32577                           pclath	equ	0xFFA
 32578                           tblptru	equ	0xFF8
 32579                           tblptrh	equ	0xFF7
 32580                           tblptrl	equ	0xFF6
 32581                           tablat	equ	0xFF5
 32582                           prodh	equ	0xFF4
 32583                           prodl	equ	0xFF3
 32584                           intcon	equ	0xFF2
 32585                           intcon2	equ	0xFF1
 32586                           intcon3	equ	0xFF0
 32587                           indf0	equ	0xFEF
 32588                           postinc0	equ	0xFEE
 32589                           fsr0h	equ	0xFEA
 32590                           fsr0l	equ	0xFE9
 32591                           wreg	equ	0xFE8
 32592                           indf1	equ	0xFE7
 32593                           postdec1	equ	0xFE5
 32594                           fsr1h	equ	0xFE2
 32595                           fsr1l	equ	0xFE1
 32596                           indf2	equ	0xFDF
 32597                           postinc2	equ	0xFDE
 32598                           postdec2	equ	0xFDD
 32599                           plusw2	equ	0xFDB
 32600                           fsr2h	equ	0xFDA
 32601                           fsr2l	equ	0xFD9
 32602                           status	equ	0xFD8
 32603                           
 32604 ;; *************** function _TMRapp_Tick *****************
 32605 ;; Defined at:
 32606 ;;		line 45 in file "../Includes/Drivers/TMRapp.c"
 32607 ;; Parameters:    Size  Location     Type
 32608 ;;		None
 32609 ;; Auto vars:     Size  Location     Type
 32610 ;;		None
 32611 ;; Return value:  Size  Location     Type
 32612 ;;                  1    wreg      void 
 32613 ;; Registers used:
 32614 ;;		None
 32615 ;; Tracked objects:
 32616 ;;		On entry : 0/0
 32617 ;;		On exit  : 0/0
 32618 ;;		Unchanged: 0/0
 32619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32620 ;;      Params:         0       0       0       0       0       0       0       0       0
 32621 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32622 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32623 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32624 ;;Total ram usage:        0 bytes
 32625 ;; Hardware stack levels used:    1
 32626 ;; This function calls:
 32627 ;;		Nothing
 32628 ;; This function is called by:
 32629 ;;		_INTERRUPT_InterruptManager
 32630 ;; This function uses a non-reentrant model
 32631 ;;
 32632                           
 32633                           	psect	text144
 32634  0062D4                     __ptext144:
 32635                           	opt stack 0
 32636  0062D4                     _TMRapp_Tick:
 32637                           	opt stack 20
 32638                           
 32639                           ;TMRapp.c: 48: appTimer.mSecTick = 1;
 32640                           
 32641                           ;incstack = 0
 32642  0062D4  0100               	movlb	0	; () banked
 32643  0062D6  81F8               	bsf	_appTimer& (0+255),0,b
 32644                           
 32645                           ; BSR set to: 0
 32646  0062D8  0012               	return		;funcret
 32647  0062DA                     __end_of_TMRapp_Tick:
 32648                           	opt stack 0
 32649                           tosu	equ	0xFFF
 32650                           tosh	equ	0xFFE
 32651                           tosl	equ	0xFFD
 32652                           pclatu	equ	0xFFB
 32653                           pclath	equ	0xFFA
 32654                           tblptru	equ	0xFF8
 32655                           tblptrh	equ	0xFF7
 32656                           tblptrl	equ	0xFF6
 32657                           tablat	equ	0xFF5
 32658                           prodh	equ	0xFF4
 32659                           prodl	equ	0xFF3
 32660                           intcon	equ	0xFF2
 32661                           intcon2	equ	0xFF1
 32662                           intcon3	equ	0xFF0
 32663                           indf0	equ	0xFEF
 32664                           postinc0	equ	0xFEE
 32665                           fsr0h	equ	0xFEA
 32666                           fsr0l	equ	0xFE9
 32667                           wreg	equ	0xFE8
 32668                           indf1	equ	0xFE7
 32669                           postdec1	equ	0xFE5
 32670                           fsr1h	equ	0xFE2
 32671                           fsr1l	equ	0xFE1
 32672                           indf2	equ	0xFDF
 32673                           postinc2	equ	0xFDE
 32674                           postdec2	equ	0xFDD
 32675                           plusw2	equ	0xFDB
 32676                           fsr2h	equ	0xFDA
 32677                           fsr2l	equ	0xFD9
 32678                           status	equ	0xFD8
 32679                           
 32680 ;; *************** function _TMR3_ISR *****************
 32681 ;; Defined at:
 32682 ;;		line 161 in file "../Includes/MccGenerated/tmr3.c"
 32683 ;; Parameters:    Size  Location     Type
 32684 ;;		None
 32685 ;; Auto vars:     Size  Location     Type
 32686 ;;		None
 32687 ;; Return value:  Size  Location     Type
 32688 ;;                  1    wreg      void 
 32689 ;; Registers used:
 32690 ;;		wreg, status,2
 32691 ;; Tracked objects:
 32692 ;;		On entry : 0/0
 32693 ;;		On exit  : 0/0
 32694 ;;		Unchanged: 0/0
 32695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32696 ;;      Params:         0       0       0       0       0       0       0       0       0
 32697 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32698 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32699 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32700 ;;Total ram usage:        0 bytes
 32701 ;; Hardware stack levels used:    1
 32702 ;; This function calls:
 32703 ;;		Nothing
 32704 ;; This function is called by:
 32705 ;;		_INTERRUPT_InterruptManager
 32706 ;; This function uses a non-reentrant model
 32707 ;;
 32708                           
 32709                           	psect	text145
 32710  0060C2                     __ptext145:
 32711                           	opt stack 0
 32712  0060C2                     _TMR3_ISR:
 32713                           	opt stack 20
 32714                           
 32715                           ;tmr3.c: 164: PIR2bits.TMR3IF = 0;
 32716                           
 32717                           ; BSR set to: 0
 32718                           ;incstack = 0
 32719  0060C2  92A1               	bcf	4001,1,c	;volatile
 32720                           
 32721                           ;tmr3.c: 167: if(LATEbits.LATE2 == 1)
 32722  0060C4  A48D               	btfss	3981,2,c	;volatile
 32723  0060C6  D006               	goto	i2l1762
 32724                           
 32725                           ;tmr3.c: 168: {
 32726                           ;tmr3.c: 169: LATEbits.LATE2 = 0;
 32727  0060C8  948D               	bcf	3981,2,c	;volatile
 32728                           
 32729                           ;tmr3.c: 170: TMR3H = 0xD5;
 32730  0060CA  0ED5               	movlw	213
 32731  0060CC  6EB3               	movwf	4019,c	;volatile
 32732                           
 32733                           ;tmr3.c: 171: TMR3L = 0xD0;
 32734  0060CE  0ED0               	movlw	208
 32735  0060D0  6EB2               	movwf	4018,c	;volatile
 32736                           
 32737                           ;tmr3.c: 172: } else {
 32738  0060D2  0012               	return	
 32739  0060D4                     i2l1762:
 32740                           
 32741                           ;tmr3.c: 173: LATEbits.LATE2 = 1;
 32742  0060D4  848D               	bsf	3981,2,c	;volatile
 32743                           
 32744                           ;tmr3.c: 174: TMR3H = 0xFB;
 32745  0060D6  0EFB               	movlw	251
 32746  0060D8  6EB3               	movwf	4019,c	;volatile
 32747                           
 32748                           ;tmr3.c: 175: TMR3L = 0x50;
 32749  0060DA  0E50               	movlw	80
 32750  0060DC  6EB2               	movwf	4018,c	;volatile
 32751  0060DE  0012               	return	
 32752  0060E0                     __end_of_TMR3_ISR:
 32753                           	opt stack 0
 32754                           tosu	equ	0xFFF
 32755                           tosh	equ	0xFFE
 32756                           tosl	equ	0xFFD
 32757                           pclatu	equ	0xFFB
 32758                           pclath	equ	0xFFA
 32759                           tblptru	equ	0xFF8
 32760                           tblptrh	equ	0xFF7
 32761                           tblptrl	equ	0xFF6
 32762                           tablat	equ	0xFF5
 32763                           prodh	equ	0xFF4
 32764                           prodl	equ	0xFF3
 32765                           intcon	equ	0xFF2
 32766                           intcon2	equ	0xFF1
 32767                           intcon3	equ	0xFF0
 32768                           indf0	equ	0xFEF
 32769                           postinc0	equ	0xFEE
 32770                           fsr0h	equ	0xFEA
 32771                           fsr0l	equ	0xFE9
 32772                           wreg	equ	0xFE8
 32773                           indf1	equ	0xFE7
 32774                           postdec1	equ	0xFE5
 32775                           fsr1h	equ	0xFE2
 32776                           fsr1l	equ	0xFE1
 32777                           indf2	equ	0xFDF
 32778                           postinc2	equ	0xFDE
 32779                           postdec2	equ	0xFDD
 32780                           plusw2	equ	0xFDB
 32781                           fsr2h	equ	0xFDA
 32782                           fsr2l	equ	0xFD9
 32783                           status	equ	0xFD8
 32784                           
 32785 ;; *************** function _TMR1_ISR *****************
 32786 ;; Defined at:
 32787 ;;		line 152 in file "../Includes/MccGenerated/tmr1.c"
 32788 ;; Parameters:    Size  Location     Type
 32789 ;;		None
 32790 ;; Auto vars:     Size  Location     Type
 32791 ;;		None
 32792 ;; Return value:  Size  Location     Type
 32793 ;;                  1    wreg      void 
 32794 ;; Registers used:
 32795 ;;		wreg, status,2
 32796 ;; Tracked objects:
 32797 ;;		On entry : 0/0
 32798 ;;		On exit  : 0/0
 32799 ;;		Unchanged: 0/0
 32800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32801 ;;      Params:         0       0       0       0       0       0       0       0       0
 32802 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32803 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32804 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32805 ;;Total ram usage:        0 bytes
 32806 ;; Hardware stack levels used:    1
 32807 ;; This function calls:
 32808 ;;		Nothing
 32809 ;; This function is called by:
 32810 ;;		_INTERRUPT_InterruptManager
 32811 ;; This function uses a non-reentrant model
 32812 ;;
 32813                           
 32814                           	psect	text146
 32815  006256                     __ptext146:
 32816                           	opt stack 0
 32817  006256                     _TMR1_ISR:
 32818                           	opt stack 20
 32819                           
 32820                           ;tmr1.c: 156: PIR1bits.TMR1IF = 0;
 32821                           
 32822                           ;incstack = 0
 32823  006256  909E               	bcf	3998,0,c	;volatile
 32824                           
 32825                           ;tmr1.c: 158: TMR1H = (timer1ReloadVal >> 8);
 32826  006258  503B               	movf	_timer1ReloadVal+1,w,c	;volatile
 32827  00625A  6ECF               	movwf	4047,c	;volatile
 32828                           
 32829                           ;tmr1.c: 159: TMR1L = timer1ReloadVal;
 32830  00625C  C03A  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 32831  006260  0012               	return		;funcret
 32832  006262                     __end_of_TMR1_ISR:
 32833                           	opt stack 0
 32834                           tosu	equ	0xFFF
 32835                           tosh	equ	0xFFE
 32836                           tosl	equ	0xFFD
 32837                           pclatu	equ	0xFFB
 32838                           pclath	equ	0xFFA
 32839                           tblptru	equ	0xFF8
 32840                           tblptrh	equ	0xFF7
 32841                           tblptrl	equ	0xFF6
 32842                           tablat	equ	0xFF5
 32843                           prodh	equ	0xFF4
 32844                           prodl	equ	0xFF3
 32845                           intcon	equ	0xFF2
 32846                           intcon2	equ	0xFF1
 32847                           intcon3	equ	0xFF0
 32848                           indf0	equ	0xFEF
 32849                           postinc0	equ	0xFEE
 32850                           fsr0h	equ	0xFEA
 32851                           fsr0l	equ	0xFE9
 32852                           wreg	equ	0xFE8
 32853                           indf1	equ	0xFE7
 32854                           postdec1	equ	0xFE5
 32855                           fsr1h	equ	0xFE2
 32856                           fsr1l	equ	0xFE1
 32857                           indf2	equ	0xFDF
 32858                           postinc2	equ	0xFDE
 32859                           postdec2	equ	0xFDD
 32860                           plusw2	equ	0xFDB
 32861                           fsr2h	equ	0xFDA
 32862                           fsr2l	equ	0xFD9
 32863                           status	equ	0xFD8
 32864                           
 32865 ;; *************** function _TMR0_ISR *****************
 32866 ;; Defined at:
 32867 ;;		line 129 in file "../Includes/MccGenerated/tmr0.c"
 32868 ;; Parameters:    Size  Location     Type
 32869 ;;		None
 32870 ;; Auto vars:     Size  Location     Type
 32871 ;;		None
 32872 ;; Return value:  Size  Location     Type
 32873 ;;                  1    wreg      void 
 32874 ;; Registers used:
 32875 ;;		None
 32876 ;; Tracked objects:
 32877 ;;		On entry : 0/0
 32878 ;;		On exit  : 0/0
 32879 ;;		Unchanged: 0/0
 32880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32881 ;;      Params:         0       0       0       0       0       0       0       0       0
 32882 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32883 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32884 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32885 ;;Total ram usage:        0 bytes
 32886 ;; Hardware stack levels used:    1
 32887 ;; This function calls:
 32888 ;;		Nothing
 32889 ;; This function is called by:
 32890 ;;		_INTERRUPT_InterruptManager
 32891 ;; This function uses a non-reentrant model
 32892 ;;
 32893                           
 32894                           	psect	text147
 32895  0062EE                     __ptext147:
 32896                           	opt stack 0
 32897  0062EE                     _TMR0_ISR:
 32898                           	opt stack 20
 32899                           
 32900                           ;tmr0.c: 133: INTCONbits.TMR0IF = 0;
 32901                           
 32902                           ;incstack = 0
 32903  0062EE  94F2               	bcf	intcon,2,c	;volatile
 32904  0062F0  0012               	return		;funcret
 32905  0062F2                     __end_of_TMR0_ISR:
 32906                           	opt stack 0
 32907                           tosu	equ	0xFFF
 32908                           tosh	equ	0xFFE
 32909                           tosl	equ	0xFFD
 32910                           pclatu	equ	0xFFB
 32911                           pclath	equ	0xFFA
 32912                           tblptru	equ	0xFF8
 32913                           tblptrh	equ	0xFF7
 32914                           tblptrl	equ	0xFF6
 32915                           tablat	equ	0xFF5
 32916                           prodh	equ	0xFF4
 32917                           prodl	equ	0xFF3
 32918                           intcon	equ	0xFF2
 32919                           intcon2	equ	0xFF1
 32920                           intcon3	equ	0xFF0
 32921                           indf0	equ	0xFEF
 32922                           postinc0	equ	0xFEE
 32923                           fsr0h	equ	0xFEA
 32924                           fsr0l	equ	0xFE9
 32925                           wreg	equ	0xFE8
 32926                           indf1	equ	0xFE7
 32927                           postdec1	equ	0xFE5
 32928                           fsr1h	equ	0xFE2
 32929                           fsr1l	equ	0xFE1
 32930                           indf2	equ	0xFDF
 32931                           postinc2	equ	0xFDE
 32932                           postdec2	equ	0xFDD
 32933                           plusw2	equ	0xFDB
 32934                           fsr2h	equ	0xFDA
 32935                           fsr2l	equ	0xFD9
 32936                           status	equ	0xFD8
 32937                           
 32938 ;; *************** function _InterruptTimerUART *****************
 32939 ;; Defined at:
 32940 ;;		line 134 in file "../Includes/Drivers/swUart.c"
 32941 ;; Parameters:    Size  Location     Type
 32942 ;;		None
 32943 ;; Auto vars:     Size  Location     Type
 32944 ;;  mask            1    4[COMRAM] unsigned char 
 32945 ;;  aux             1    3[COMRAM] unsigned char 
 32946 ;; Return value:  Size  Location     Type
 32947 ;;                  1    wreg      void 
 32948 ;; Registers used:
 32949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32950 ;; Tracked objects:
 32951 ;;		On entry : 0/0
 32952 ;;		On exit  : 0/0
 32953 ;;		Unchanged: 0/0
 32954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32955 ;;      Params:         0       0       0       0       0       0       0       0       0
 32956 ;;      Locals:         2       0       0       0       0       0       0       0       0
 32957 ;;      Temps:          2       0       0       0       0       0       0       0       0
 32958 ;;      Totals:         4       0       0       0       0       0       0       0       0
 32959 ;;Total ram usage:        4 bytes
 32960 ;; Hardware stack levels used:    1
 32961 ;; Hardware stack levels required when called:    1
 32962 ;; This function calls:
 32963 ;;		_ReadyByteFrame
 32964 ;;		_TMR0_Clear
 32965 ;;		_TMR0_StopTimer
 32966 ;;		_inFIFO
 32967 ;;		_reloadTimer
 32968 ;; This function is called by:
 32969 ;;		_INTERRUPT_InterruptManager
 32970 ;; This function uses a non-reentrant model
 32971 ;;
 32972                           
 32973                           	psect	text148
 32974  004438                     __ptext148:
 32975                           	opt stack 0
 32976  004438                     _InterruptTimerUART:
 32977                           	opt stack 19
 32978                           
 32979                           ;swUart.c: 136: uint8_t mask, aux;
 32980                           ;swUart.c: 138: reloadTimer(110);
 32981                           
 32982                           ;incstack = 0
 32983  004438  0E6E               	movlw	110
 32984  00443A  EC4B  F031         	call	_reloadTimer
 32985                           
 32986                           ;swUart.c: 140: PORTAbits.RA7 = !PORTAbits.RA7;
 32987  00443E  BE80               	btfsc	3968,7,c	;volatile
 32988  004440  D003               	goto	i2u1070_40
 32989  004442  6A02               	clrf	??_InterruptTimerUART& (0+255),c
 32990  004444  2A02               	incf	??_InterruptTimerUART& (0+255),f,c
 32991  004446  D001               	goto	i2u1071_48
 32992  004448                     i2u1070_40:
 32993  004448  6A02               	clrf	??_InterruptTimerUART& (0+255),c
 32994  00444A                     i2u1071_48:
 32995  00444A  3202               	rrcf	??_InterruptTimerUART,f,c
 32996  00444C  3202               	rrcf	??_InterruptTimerUART,f,c
 32997  00444E  5080               	movf	3968,w,c	;volatile
 32998  004450  1802               	xorwf	??_InterruptTimerUART,w,c
 32999  004452  0B7F               	andlw	-129
 33000  004454  1802               	xorwf	??_InterruptTimerUART,w,c
 33001  004456  6E80               	movwf	3968,c	;volatile
 33002                           
 33003                           ;swUart.c: 141: switch(status)
 33004  004458  D03F               	goto	i2l1206
 33005  00445A                     
 33006                           ;swUart.c: 144: if(countBitsSilent == ( 22 - 1 ) )
 33007  00445A  0E15               	movlw	21
 33008  00445C  184D               	xorwf	_countBitsSilent,w,c
 33009  00445E  A4D8               	btfss	status,2,c
 33010  004460  D004               	goto	i2l1208
 33011                           
 33012                           ;swUart.c: 145: {
 33013                           ;swUart.c: 146: TMR0_StopTimer();
 33014  004462  EC79  F031         	call	_TMR0_StopTimer	;wreg free
 33015                           
 33016                           ;swUart.c: 148: ReadyByteFrame();
 33017  004466  EC83  F031         	call	_ReadyByteFrame	;wreg free
 33018  00446A                     i2l1208:
 33019                           
 33020                           ;swUart.c: 149: }
 33021                           ;swUart.c: 150: if(countBitsSilent < 22)
 33022  00446A  0E16               	movlw	22
 33023  00446C  604D               	cpfslt	_countBitsSilent,c
 33024  00446E  D042               	goto	i2l1210
 33025                           
 33026                           ;swUart.c: 151: {
 33027                           ;swUart.c: 152: countBitsSilent ++;
 33028  004470  2A4D               	incf	_countBitsSilent,f,c
 33029                           
 33030                           ;swUart.c: 154: }
 33031                           ;swUart.c: 155: break;
 33032  004472  D040               	goto	i2l1210
 33033  004474                     
 33034                           ;swUart.c: 167: mask = 0x01 << n_bit;
 33035  004474  C05B  F002         	movff	_n_bit,??_InterruptTimerUART
 33036  004478  0E01               	movlw	1
 33037  00447A  6E03               	movwf	(??_InterruptTimerUART+1)& (0+255),c
 33038  00447C  2A02               	incf	??_InterruptTimerUART,f,c
 33039  00447E  D002               	goto	i2u1074_44
 33040  004480                     i2u1074_45:
 33041  004480  90D8               	bcf	status,0,c
 33042  004482  3603               	rlcf	??_InterruptTimerUART+1,f,c
 33043  004484                     i2u1074_44:
 33044  004484  2E02               	decfsz	??_InterruptTimerUART,f,c
 33045  004486  D7FC               	goto	i2u1074_45
 33046  004488  5003               	movf	??_InterruptTimerUART+1,w,c
 33047  00448A  6E05               	movwf	InterruptTimerUART@mask,c
 33048                           
 33049                           ;swUart.c: 169: if( PORTBbits.RB7 == 1 )
 33050  00448C  AE81               	btfss	3969,7,c	;volatile
 33051  00448E  D005               	goto	i2l1212
 33052                           
 33053                           ;swUart.c: 170: {
 33054                           ;swUart.c: 171: rx_data |= mask;
 33055  004490  5005               	movf	InterruptTimerUART@mask,w,c
 33056  004492  124E               	iorwf	_rx_data,f,c
 33057                           
 33058                           ;swUart.c: 172: cs ++;
 33059  004494  0101               	movlb	1	; () banked
 33060  004496  2B5E               	incf	_cs& (0+255),f,b
 33061                           
 33062                           ;swUart.c: 173: }
 33063  004498  D003               	goto	i2l1213
 33064  00449A                     i2l1212:
 33065                           
 33066                           ;swUart.c: 174: else
 33067                           ;swUart.c: 175: {
 33068                           ;swUart.c: 177: rx_data &= ~mask;
 33069                           
 33070                           ; BSR set to: 1
 33071  00449A  5005               	movf	InterruptTimerUART@mask,w,c
 33072  00449C  0AFF               	xorlw	255
 33073  00449E  164E               	andwf	_rx_data,f,c
 33074  0044A0                     i2l1213:
 33075                           
 33076                           ;swUart.c: 178: }
 33077                           ;swUart.c: 179: n_bit ++;
 33078  0044A0  2A5B               	incf	_n_bit,f,c
 33079                           
 33080                           ;swUart.c: 180: if( n_bit == 8 )
 33081  0044A2  0E08               	movlw	8
 33082  0044A4  185B               	xorwf	_n_bit,w,c
 33083  0044A6  A4D8               	btfss	status,2,c
 33084  0044A8  D025               	goto	i2l1210
 33085  0044AA  D001               	goto	i2l12049
 33086  0044AC                     i2l1215:
 33087                           
 33088                           ;swUart.c: 189: if( PORTBbits.RB7 == 0 )
 33089  0044AC  5081               	movf	3969,w,c	;volatile
 33090  0044AE                     i2l12049:
 33091                           
 33092                           ;swUart.c: 193: status = STOP_UA;
 33093                           
 33094                           ;swUart.c: 191: else
 33095                           ;swUart.c: 192: {}
 33096                           
 33097                           ;swUart.c: 190: {}
 33098  0044AE  0E03               	movlw	3
 33099  0044B0  6E4F               	movwf	_status,c
 33100                           
 33101                           ;swUart.c: 195: break;
 33102  0044B2  D020               	goto	i2l1210
 33103  0044B4                     
 33104                           ;swUart.c: 197: inFIFO(rx_data);
 33105  0044B4  504E               	movf	_rx_data,w,c
 33106  0044B6  EC8F  F02D         	call	_inFIFO
 33107                           
 33108                           ;swUart.c: 198: status = SILENT;
 33109  0044BA  0E00               	movlw	0
 33110  0044BC  6E4F               	movwf	_status,c
 33111                           
 33112                           ;swUart.c: 200: reloadTimer(0);
 33113  0044BE  0E00               	movlw	0
 33114  0044C0  EC4B  F031         	call	_reloadTimer
 33115                           
 33116                           ;swUart.c: 201: aux = PORTB;
 33117  0044C4  CF81 F004          	movff	3969,InterruptTimerUART@aux	;volatile
 33118                           
 33119                           ;swUart.c: 202: INTCONbits.IOCIF = 0;
 33120  0044C8  90F2               	bcf	intcon,0,c	;volatile
 33121                           
 33122                           ;swUart.c: 203: INTCONbits.IOCIE = 1;
 33123  0044CA  86F2               	bsf	intcon,3,c	;volatile
 33124                           
 33125                           ;swUart.c: 204: break;
 33126  0044CC  D013               	goto	i2l1210
 33127  0044CE                     
 33128                           ;swUart.c: 206: status = SILENT;
 33129  0044CE  0E00               	movlw	0
 33130  0044D0  6E4F               	movwf	_status,c
 33131                           
 33132                           ;swUart.c: 207: countBitsSilent = 22;
 33133  0044D2  0E16               	movlw	22
 33134  0044D4  6E4D               	movwf	_countBitsSilent,c
 33135                           
 33136                           ;swUart.c: 209: }
 33137                           
 33138                           ;swUart.c: 208: break;
 33139  0044D6  D00E               	goto	i2l1210
 33140  0044D8                     i2l1206:
 33141  0044D8  504F               	movf	_status,w,c
 33142                           
 33143                           ; Switch size 1, requested type "space"
 33144                           ; Number of cases is 4, Range of values is 0 to 3
 33145                           ; switch strategies available:
 33146                           ; Name         Instructions Cycles
 33147                           ; simple_byte           13     7 (average)
 33148                           ;	Chosen strategy is simple_byte
 33149  0044DA  0A00               	xorlw	0	; case 0
 33150  0044DC  B4D8               	btfsc	status,2,c
 33151  0044DE  D7BD               	goto	i2l1207
 33152  0044E0  0A01               	xorlw	1	; case 1
 33153  0044E2  B4D8               	btfsc	status,2,c
 33154  0044E4  D7C7               	goto	i2l1211
 33155  0044E6  0A03               	xorlw	3	; case 2
 33156  0044E8  B4D8               	btfsc	status,2,c
 33157  0044EA  D7E0               	goto	i2l1215
 33158  0044EC  0A01               	xorlw	1	; case 3
 33159  0044EE  B4D8               	btfsc	status,2,c
 33160  0044F0  D7E1               	goto	i2l1218
 33161  0044F2  D7ED               	goto	i2l1219
 33162  0044F4                     i2l1210:
 33163                           
 33164                           ;swUart.c: 210: TMR0_Clear();
 33165  0044F4  EC7D  F031         	call	_TMR0_Clear	;wreg free
 33166  0044F8  0012               	return		;funcret
 33167  0044FA                     __end_of_InterruptTimerUART:
 33168                           	opt stack 0
 33169                           tosu	equ	0xFFF
 33170                           tosh	equ	0xFFE
 33171                           tosl	equ	0xFFD
 33172                           pclatu	equ	0xFFB
 33173                           pclath	equ	0xFFA
 33174                           tblptru	equ	0xFF8
 33175                           tblptrh	equ	0xFF7
 33176                           tblptrl	equ	0xFF6
 33177                           tablat	equ	0xFF5
 33178                           prodh	equ	0xFF4
 33179                           prodl	equ	0xFF3
 33180                           intcon	equ	0xFF2
 33181                           intcon2	equ	0xFF1
 33182                           intcon3	equ	0xFF0
 33183                           indf0	equ	0xFEF
 33184                           postinc0	equ	0xFEE
 33185                           fsr0h	equ	0xFEA
 33186                           fsr0l	equ	0xFE9
 33187                           wreg	equ	0xFE8
 33188                           indf1	equ	0xFE7
 33189                           postdec1	equ	0xFE5
 33190                           fsr1h	equ	0xFE2
 33191                           fsr1l	equ	0xFE1
 33192                           indf2	equ	0xFDF
 33193                           postinc2	equ	0xFDE
 33194                           postdec2	equ	0xFDD
 33195                           plusw2	equ	0xFDB
 33196                           fsr2h	equ	0xFDA
 33197                           fsr2l	equ	0xFD9
 33198                           status	equ	0xFD8
 33199                           
 33200 ;; *************** function _inFIFO *****************
 33201 ;; Defined at:
 33202 ;;		line 254 in file "../Includes/Drivers/swUart.c"
 33203 ;; Parameters:    Size  Location     Type
 33204 ;;  data            1    wreg     unsigned char 
 33205 ;; Auto vars:     Size  Location     Type
 33206 ;;  data            1    0[COMRAM] unsigned char 
 33207 ;; Return value:  Size  Location     Type
 33208 ;;                  1    wreg      void 
 33209 ;; Registers used:
 33210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33211 ;; Tracked objects:
 33212 ;;		On entry : 0/0
 33213 ;;		On exit  : 0/0
 33214 ;;		Unchanged: 0/0
 33215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33216 ;;      Params:         0       0       0       0       0       0       0       0       0
 33217 ;;      Locals:         1       0       0       0       0       0       0       0       0
 33218 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33219 ;;      Totals:         1       0       0       0       0       0       0       0       0
 33220 ;;Total ram usage:        1 bytes
 33221 ;; Hardware stack levels used:    1
 33222 ;; This function calls:
 33223 ;;		Nothing
 33224 ;; This function is called by:
 33225 ;;		_InterruptTimerUART
 33226 ;; This function uses a non-reentrant model
 33227 ;;
 33228                           
 33229                           	psect	text149
 33230  005B1E                     __ptext149:
 33231                           	opt stack 0
 33232  005B1E                     _inFIFO:
 33233                           	opt stack 19
 33234                           
 33235                           ;incstack = 0
 33236                           ;inFIFO@data stored from wreg
 33237  005B1E  6E01               	movwf	inFIFO@data,c
 33238                           
 33239                           ;swUart.c: 256: buffer_rx[countIn] = data;
 33240  005B20  0100               	movlb	0	; () banked
 33241  005B22  51E3               	movf	_countIn& (0+255),w,b
 33242  005B24  0D01               	mullw	1
 33243  005B26  0E00               	movlw	low _buffer_rx
 33244  005B28  24F3               	addwf	prodl,w,c
 33245  005B2A  6ED9               	movwf	fsr2l,c
 33246  005B2C  0E06               	movlw	high _buffer_rx
 33247  005B2E  20F4               	addwfc	prodh,w,c
 33248  005B30  6EDA               	movwf	fsr2h,c
 33249  005B32  C001  FFDF         	movff	inFIFO@data,indf2
 33250                           
 33251                           ; BSR set to: 0
 33252                           ;swUart.c: 257: countIn++;
 33253  005B36  2BE3               	incf	_countIn& (0+255),f,b
 33254                           
 33255                           ; BSR set to: 0
 33256                           ;swUart.c: 258: if(countIn == 200)
 33257  005B38  0EC8               	movlw	200
 33258  005B3A  19E3               	xorwf	_countIn& (0+255),w,b
 33259  005B3C  A4D8               	btfss	status,2,c
 33260  005B3E  D002               	goto	i2l1235
 33261                           
 33262                           ; BSR set to: 0
 33263                           ;swUart.c: 259: {
 33264                           ;swUart.c: 260: countIn = 0;
 33265  005B40  0E00               	movlw	0
 33266  005B42  6FE3               	movwf	_countIn& (0+255),b
 33267  005B44                     i2l1235:
 33268                           
 33269                           ; BSR set to: 0
 33270                           ;swUart.c: 261: }
 33271                           ;swUart.c: 262: if(countOut == countIn)
 33272                           
 33273                           ; BSR set to: 0
 33274  005B44  51E3               	movf	_countIn& (0+255),w,b
 33275  005B46  19E4               	xorwf	_countOut& (0+255),w,b
 33276  005B48  A4D8               	btfss	status,2,c
 33277  005B4A  0012               	return	
 33278                           
 33279                           ; BSR set to: 0
 33280                           ;swUart.c: 263: {
 33281                           ;swUart.c: 264: countOut ++;
 33282  005B4C  2BE4               	incf	_countOut& (0+255),f,b
 33283                           
 33284                           ; BSR set to: 0
 33285                           ;swUart.c: 265: if(countOut == 200)
 33286  005B4E  0EC8               	movlw	200
 33287  005B50  19E4               	xorwf	_countOut& (0+255),w,b
 33288  005B52  A4D8               	btfss	status,2,c
 33289  005B54  0012               	return	
 33290                           
 33291                           ; BSR set to: 0
 33292                           ;swUart.c: 266: {
 33293                           ;swUart.c: 267: countOut = 0;
 33294  005B56  0E00               	movlw	0
 33295  005B58  6FE4               	movwf	_countOut& (0+255),b
 33296                           
 33297                           ; BSR set to: 0
 33298  005B5A  0012               	return	
 33299  005B5C                     __end_of_inFIFO:
 33300                           	opt stack 0
 33301                           tosu	equ	0xFFF
 33302                           tosh	equ	0xFFE
 33303                           tosl	equ	0xFFD
 33304                           pclatu	equ	0xFFB
 33305                           pclath	equ	0xFFA
 33306                           tblptru	equ	0xFF8
 33307                           tblptrh	equ	0xFF7
 33308                           tblptrl	equ	0xFF6
 33309                           tablat	equ	0xFF5
 33310                           prodh	equ	0xFF4
 33311                           prodl	equ	0xFF3
 33312                           intcon	equ	0xFF2
 33313                           intcon2	equ	0xFF1
 33314                           intcon3	equ	0xFF0
 33315                           indf0	equ	0xFEF
 33316                           postinc0	equ	0xFEE
 33317                           fsr0h	equ	0xFEA
 33318                           fsr0l	equ	0xFE9
 33319                           wreg	equ	0xFE8
 33320                           indf1	equ	0xFE7
 33321                           postdec1	equ	0xFE5
 33322                           fsr1h	equ	0xFE2
 33323                           fsr1l	equ	0xFE1
 33324                           indf2	equ	0xFDF
 33325                           postinc2	equ	0xFDE
 33326                           postdec2	equ	0xFDD
 33327                           plusw2	equ	0xFDB
 33328                           fsr2h	equ	0xFDA
 33329                           fsr2l	equ	0xFD9
 33330                           status	equ	0xFD8
 33331                           
 33332 ;; *************** function _TMR0_StopTimer *****************
 33333 ;; Defined at:
 33334 ;;		line 95 in file "../Includes/MccGenerated/tmr0.c"
 33335 ;; Parameters:    Size  Location     Type
 33336 ;;		None
 33337 ;; Auto vars:     Size  Location     Type
 33338 ;;		None
 33339 ;; Return value:  Size  Location     Type
 33340 ;;                  1    wreg      void 
 33341 ;; Registers used:
 33342 ;;		None
 33343 ;; Tracked objects:
 33344 ;;		On entry : 0/0
 33345 ;;		On exit  : 0/0
 33346 ;;		Unchanged: 0/0
 33347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33348 ;;      Params:         0       0       0       0       0       0       0       0       0
 33349 ;;      Locals:         0       0       0       0       0       0       0       0       0
 33350 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33351 ;;      Totals:         0       0       0       0       0       0       0       0       0
 33352 ;;Total ram usage:        0 bytes
 33353 ;; Hardware stack levels used:    1
 33354 ;; This function calls:
 33355 ;;		Nothing
 33356 ;; This function is called by:
 33357 ;;		_InterruptTimerUART
 33358 ;; This function uses a non-reentrant model
 33359 ;;
 33360                           
 33361                           	psect	text150
 33362  0062F2                     __ptext150:
 33363                           	opt stack 0
 33364  0062F2                     _TMR0_StopTimer:
 33365                           	opt stack 19
 33366                           
 33367                           ;tmr0.c: 98: T0CONbits.TMR0ON = 0;
 33368                           
 33369                           ; BSR set to: 0
 33370                           ;incstack = 0
 33371  0062F2  9ED5               	bcf	4053,7,c	;volatile
 33372  0062F4  0012               	return		;funcret
 33373  0062F6                     __end_of_TMR0_StopTimer:
 33374                           	opt stack 0
 33375                           tosu	equ	0xFFF
 33376                           tosh	equ	0xFFE
 33377                           tosl	equ	0xFFD
 33378                           pclatu	equ	0xFFB
 33379                           pclath	equ	0xFFA
 33380                           tblptru	equ	0xFF8
 33381                           tblptrh	equ	0xFF7
 33382                           tblptrl	equ	0xFF6
 33383                           tablat	equ	0xFF5
 33384                           prodh	equ	0xFF4
 33385                           prodl	equ	0xFF3
 33386                           intcon	equ	0xFF2
 33387                           intcon2	equ	0xFF1
 33388                           intcon3	equ	0xFF0
 33389                           indf0	equ	0xFEF
 33390                           postinc0	equ	0xFEE
 33391                           fsr0h	equ	0xFEA
 33392                           fsr0l	equ	0xFE9
 33393                           wreg	equ	0xFE8
 33394                           indf1	equ	0xFE7
 33395                           postdec1	equ	0xFE5
 33396                           fsr1h	equ	0xFE2
 33397                           fsr1l	equ	0xFE1
 33398                           indf2	equ	0xFDF
 33399                           postinc2	equ	0xFDE
 33400                           postdec2	equ	0xFDD
 33401                           plusw2	equ	0xFDB
 33402                           fsr2h	equ	0xFDA
 33403                           fsr2l	equ	0xFD9
 33404                           status	equ	0xFD8
 33405                           
 33406 ;; *************** function _ReadyByteFrame *****************
 33407 ;; Defined at:
 33408 ;;		line 1486 in file "../Includes/Board/MOTEapp.c"
 33409 ;; Parameters:    Size  Location     Type
 33410 ;;		None
 33411 ;; Auto vars:     Size  Location     Type
 33412 ;;		None
 33413 ;; Return value:  Size  Location     Type
 33414 ;;                  1    wreg      void 
 33415 ;; Registers used:
 33416 ;;		None
 33417 ;; Tracked objects:
 33418 ;;		On entry : 0/0
 33419 ;;		On exit  : 0/0
 33420 ;;		Unchanged: 0/0
 33421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33422 ;;      Params:         0       0       0       0       0       0       0       0       0
 33423 ;;      Locals:         0       0       0       0       0       0       0       0       0
 33424 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33425 ;;      Totals:         0       0       0       0       0       0       0       0       0
 33426 ;;Total ram usage:        0 bytes
 33427 ;; Hardware stack levels used:    1
 33428 ;; This function calls:
 33429 ;;		Nothing
 33430 ;; This function is called by:
 33431 ;;		_InterruptTimerUART
 33432 ;; This function uses a non-reentrant model
 33433 ;;
 33434                           
 33435                           	psect	text151
 33436  006306                     __ptext151:
 33437                           	opt stack 0
 33438  006306                     _ReadyByteFrame:
 33439                           	opt stack 19
 33440                           
 33441                           ;incstack = 0
 33442  006306  0012               	return		;funcret
 33443  006308                     __end_of_ReadyByteFrame:
 33444                           	opt stack 0
 33445                           tosu	equ	0xFFF
 33446                           tosh	equ	0xFFE
 33447                           tosl	equ	0xFFD
 33448                           pclatu	equ	0xFFB
 33449                           pclath	equ	0xFFA
 33450                           tblptru	equ	0xFF8
 33451                           tblptrh	equ	0xFF7
 33452                           tblptrl	equ	0xFF6
 33453                           tablat	equ	0xFF5
 33454                           prodh	equ	0xFF4
 33455                           prodl	equ	0xFF3
 33456                           intcon	equ	0xFF2
 33457                           intcon2	equ	0xFF1
 33458                           intcon3	equ	0xFF0
 33459                           indf0	equ	0xFEF
 33460                           postinc0	equ	0xFEE
 33461                           fsr0h	equ	0xFEA
 33462                           fsr0l	equ	0xFE9
 33463                           wreg	equ	0xFE8
 33464                           indf1	equ	0xFE7
 33465                           postdec1	equ	0xFE5
 33466                           fsr1h	equ	0xFE2
 33467                           fsr1l	equ	0xFE1
 33468                           indf2	equ	0xFDF
 33469                           postinc2	equ	0xFDE
 33470                           postdec2	equ	0xFDD
 33471                           plusw2	equ	0xFDB
 33472                           fsr2h	equ	0xFDA
 33473                           fsr2l	equ	0xFD9
 33474                           status	equ	0xFD8
 33475                           
 33476 ;; *************** function _InterruptPinRX *****************
 33477 ;; Defined at:
 33478 ;;		line 102 in file "../Includes/Drivers/swUart.c"
 33479 ;; Parameters:    Size  Location     Type
 33480 ;;		None
 33481 ;; Auto vars:     Size  Location     Type
 33482 ;;		None
 33483 ;; Return value:  Size  Location     Type
 33484 ;;                  1    wreg      void 
 33485 ;; Registers used:
 33486 ;;		wreg, status,2, status,0, cstack
 33487 ;; Tracked objects:
 33488 ;;		On entry : 0/0
 33489 ;;		On exit  : 0/0
 33490 ;;		Unchanged: 0/0
 33491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33492 ;;      Params:         0       0       0       0       0       0       0       0       0
 33493 ;;      Locals:         0       0       0       0       0       0       0       0       0
 33494 ;;      Temps:          1       0       0       0       0       0       0       0       0
 33495 ;;      Totals:         1       0       0       0       0       0       0       0       0
 33496 ;;Total ram usage:        1 bytes
 33497 ;; Hardware stack levels used:    1
 33498 ;; Hardware stack levels required when called:    1
 33499 ;; This function calls:
 33500 ;;		_TMR0_Clear
 33501 ;;		_clearInterruptPinRX
 33502 ;;		_reloadTimer
 33503 ;;		i2_TMR0_StartTimer
 33504 ;; This function is called by:
 33505 ;;		_INTERRUPT_InterruptManager
 33506 ;; This function uses a non-reentrant model
 33507 ;;
 33508                           
 33509                           	psect	text152
 33510  005904                     __ptext152:
 33511                           	opt stack 0
 33512  005904                     _InterruptPinRX:
 33513                           	opt stack 19
 33514                           
 33515                           ;swUart.c: 105: if(status == SILENT)
 33516                           
 33517                           ;incstack = 0
 33518  005904  504F               	movf	_status,w,c
 33519  005906  B4D8               	btfsc	status,2,c
 33520                           
 33521                           ;swUart.c: 106: {
 33522                           ;swUart.c: 107: if(PORTBbits.RB7 == 0)
 33523  005908  BE81               	btfsc	3969,7,c	;volatile
 33524  00590A  D020               	goto	i2l1202
 33525                           
 33526                           ;swUart.c: 108: {
 33527                           ;swUart.c: 110: PORTAbits.RA7 = !PORTAbits.RA7;
 33528  00590C  BE80               	btfsc	3968,7,c	;volatile
 33529  00590E  D003               	goto	i2u1068_40
 33530  005910  6A02               	clrf	??_InterruptPinRX& (0+255),c
 33531  005912  2A02               	incf	??_InterruptPinRX& (0+255),f,c
 33532  005914  D001               	goto	i2u1069_48
 33533  005916                     i2u1068_40:
 33534  005916  6A02               	clrf	??_InterruptPinRX& (0+255),c
 33535  005918                     i2u1069_48:
 33536  005918  3202               	rrcf	??_InterruptPinRX,f,c
 33537  00591A  3202               	rrcf	??_InterruptPinRX,f,c
 33538  00591C  5080               	movf	3968,w,c	;volatile
 33539  00591E  1802               	xorwf	??_InterruptPinRX,w,c
 33540  005920  0B7F               	andlw	-129
 33541  005922  1802               	xorwf	??_InterruptPinRX,w,c
 33542  005924  6E80               	movwf	3968,c	;volatile
 33543                           
 33544                           ;swUart.c: 112: INTCONbits.IOCIE = 0;
 33545  005926  96F2               	bcf	intcon,3,c	;volatile
 33546                           
 33547                           ;swUart.c: 116: TMR0_Clear();
 33548  005928  EC7D  F031         	call	_TMR0_Clear	;wreg free
 33549                           
 33550                           ;swUart.c: 117: reloadTimer(95);
 33551  00592C  0E5F               	movlw	95
 33552  00592E  EC4B  F031         	call	_reloadTimer
 33553                           
 33554                           ;swUart.c: 118: TMR0_StartTimer();
 33555  005932  EC7B  F031         	call	i2_TMR0_StartTimer	;wreg free
 33556                           
 33557                           ;swUart.c: 123: countBitsSilent = 0;
 33558  005936  0E00               	movlw	0
 33559  005938  6E4D               	movwf	_countBitsSilent,c
 33560                           
 33561                           ;swUart.c: 124: n_bit = 0;
 33562  00593A  0E00               	movlw	0
 33563  00593C  6E5B               	movwf	_n_bit,c
 33564                           
 33565                           ;swUart.c: 125: cs = 0;
 33566  00593E  0E00               	movlw	0
 33567  005940  0101               	movlb	1	; () banked
 33568  005942  6F5E               	movwf	_cs& (0+255),b
 33569                           
 33570                           ; BSR set to: 1
 33571                           ;swUart.c: 126: rx_data = 0;
 33572  005944  0E00               	movlw	0
 33573  005946  6E4E               	movwf	_rx_data,c
 33574                           
 33575                           ; BSR set to: 1
 33576                           ;swUart.c: 127: status = N_BIT;
 33577  005948  0E01               	movlw	1
 33578  00594A  6E4F               	movwf	_status,c
 33579  00594C                     i2l1202:
 33580                           
 33581                           ;swUart.c: 128: }
 33582                           ;swUart.c: 129: }
 33583                           ;swUart.c: 131: clearInterruptPinRX();
 33584                           
 33585                           ; BSR set to: 1
 33586                           
 33587                           ; BSR set to: 1
 33588  00594C  EC31  F031         	call	_clearInterruptPinRX	;wreg free
 33589  005950  0012               	return		;funcret
 33590  005952                     __end_of_InterruptPinRX:
 33591                           	opt stack 0
 33592                           tosu	equ	0xFFF
 33593                           tosh	equ	0xFFE
 33594                           tosl	equ	0xFFD
 33595                           pclatu	equ	0xFFB
 33596                           pclath	equ	0xFFA
 33597                           tblptru	equ	0xFF8
 33598                           tblptrh	equ	0xFF7
 33599                           tblptrl	equ	0xFF6
 33600                           tablat	equ	0xFF5
 33601                           prodh	equ	0xFF4
 33602                           prodl	equ	0xFF3
 33603                           intcon	equ	0xFF2
 33604                           intcon2	equ	0xFF1
 33605                           intcon3	equ	0xFF0
 33606                           indf0	equ	0xFEF
 33607                           postinc0	equ	0xFEE
 33608                           fsr0h	equ	0xFEA
 33609                           fsr0l	equ	0xFE9
 33610                           wreg	equ	0xFE8
 33611                           indf1	equ	0xFE7
 33612                           postdec1	equ	0xFE5
 33613                           fsr1h	equ	0xFE2
 33614                           fsr1l	equ	0xFE1
 33615                           indf2	equ	0xFDF
 33616                           postinc2	equ	0xFDE
 33617                           postdec2	equ	0xFDD
 33618                           plusw2	equ	0xFDB
 33619                           fsr2h	equ	0xFDA
 33620                           fsr2l	equ	0xFD9
 33621                           status	equ	0xFD8
 33622                           
 33623 ;; *************** function i2_TMR0_StartTimer *****************
 33624 ;; Defined at:
 33625 ;;		line 89 in file "../Includes/MccGenerated/tmr0.c"
 33626 ;; Parameters:    Size  Location     Type
 33627 ;;		None
 33628 ;; Auto vars:     Size  Location     Type
 33629 ;;		None
 33630 ;; Return value:  Size  Location     Type
 33631 ;;                  1    wreg      void 
 33632 ;; Registers used:
 33633 ;;		None
 33634 ;; Tracked objects:
 33635 ;;		On entry : 0/0
 33636 ;;		On exit  : 0/0
 33637 ;;		Unchanged: 0/0
 33638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33639 ;;      Params:         0       0       0       0       0       0       0       0       0
 33640 ;;      Locals:         0       0       0       0       0       0       0       0       0
 33641 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33642 ;;      Totals:         0       0       0       0       0       0       0       0       0
 33643 ;;Total ram usage:        0 bytes
 33644 ;; Hardware stack levels used:    1
 33645 ;; This function calls:
 33646 ;;		Nothing
 33647 ;; This function is called by:
 33648 ;;		_InterruptPinRX
 33649 ;; This function uses a non-reentrant model
 33650 ;;
 33651                           
 33652                           	psect	text153
 33653  0062F6                     __ptext153:
 33654                           	opt stack 0
 33655  0062F6                     i2_TMR0_StartTimer:
 33656                           	opt stack 19
 33657                           
 33658                           ;tmr0.c: 92: T0CONbits.TMR0ON = 1;
 33659                           
 33660                           ;incstack = 0
 33661  0062F6  8ED5               	bsf	4053,7,c	;volatile
 33662  0062F8  0012               	return		;funcret
 33663  0062FA                     __end_ofi2_TMR0_StartTimer:
 33664                           	opt stack 0
 33665                           tosu	equ	0xFFF
 33666                           tosh	equ	0xFFE
 33667                           tosl	equ	0xFFD
 33668                           pclatu	equ	0xFFB
 33669                           pclath	equ	0xFFA
 33670                           tblptru	equ	0xFF8
 33671                           tblptrh	equ	0xFF7
 33672                           tblptrl	equ	0xFF6
 33673                           tablat	equ	0xFF5
 33674                           prodh	equ	0xFF4
 33675                           prodl	equ	0xFF3
 33676                           intcon	equ	0xFF2
 33677                           intcon2	equ	0xFF1
 33678                           intcon3	equ	0xFF0
 33679                           indf0	equ	0xFEF
 33680                           postinc0	equ	0xFEE
 33681                           fsr0h	equ	0xFEA
 33682                           fsr0l	equ	0xFE9
 33683                           wreg	equ	0xFE8
 33684                           indf1	equ	0xFE7
 33685                           postdec1	equ	0xFE5
 33686                           fsr1h	equ	0xFE2
 33687                           fsr1l	equ	0xFE1
 33688                           indf2	equ	0xFDF
 33689                           postinc2	equ	0xFDE
 33690                           postdec2	equ	0xFDD
 33691                           plusw2	equ	0xFDB
 33692                           fsr2h	equ	0xFDA
 33693                           fsr2l	equ	0xFD9
 33694                           status	equ	0xFD8
 33695                           
 33696 ;; *************** function _reloadTimer *****************
 33697 ;; Defined at:
 33698 ;;		line 214 in file "../Includes/Drivers/swUart.c"
 33699 ;; Parameters:    Size  Location     Type
 33700 ;;  setTimerValu    1    wreg     unsigned char 
 33701 ;; Auto vars:     Size  Location     Type
 33702 ;;  setTimerValu    1    0[COMRAM] unsigned char 
 33703 ;; Return value:  Size  Location     Type
 33704 ;;                  1    wreg      void 
 33705 ;; Registers used:
 33706 ;;		wreg
 33707 ;; Tracked objects:
 33708 ;;		On entry : 0/0
 33709 ;;		On exit  : 0/0
 33710 ;;		Unchanged: 0/0
 33711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33712 ;;      Params:         0       0       0       0       0       0       0       0       0
 33713 ;;      Locals:         1       0       0       0       0       0       0       0       0
 33714 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33715 ;;      Totals:         1       0       0       0       0       0       0       0       0
 33716 ;;Total ram usage:        1 bytes
 33717 ;; Hardware stack levels used:    1
 33718 ;; This function calls:
 33719 ;;		Nothing
 33720 ;; This function is called by:
 33721 ;;		_InterruptPinRX
 33722 ;;		_InterruptTimerUART
 33723 ;; This function uses a non-reentrant model
 33724 ;;
 33725                           
 33726                           	psect	text154
 33727  006296                     __ptext154:
 33728                           	opt stack 0
 33729  006296                     _reloadTimer:
 33730                           	opt stack 19
 33731                           
 33732                           ;incstack = 0
 33733                           ;reloadTimer@setTimerValue stored from wreg
 33734  006296  6E01               	movwf	reloadTimer@setTimerValue,c
 33735                           
 33736                           ;swUart.c: 216: TMR0 = setTimerValue;
 33737  006298  C001  FFD6         	movff	reloadTimer@setTimerValue,4054	;volatile
 33738  00629C  6AD7               	clrf	4055,c	;volatile
 33739  00629E  0012               	return		;funcret
 33740  0062A0                     __end_of_reloadTimer:
 33741                           	opt stack 0
 33742                           tosu	equ	0xFFF
 33743                           tosh	equ	0xFFE
 33744                           tosl	equ	0xFFD
 33745                           pclatu	equ	0xFFB
 33746                           pclath	equ	0xFFA
 33747                           tblptru	equ	0xFF8
 33748                           tblptrh	equ	0xFF7
 33749                           tblptrl	equ	0xFF6
 33750                           tablat	equ	0xFF5
 33751                           prodh	equ	0xFF4
 33752                           prodl	equ	0xFF3
 33753                           intcon	equ	0xFF2
 33754                           intcon2	equ	0xFF1
 33755                           intcon3	equ	0xFF0
 33756                           indf0	equ	0xFEF
 33757                           postinc0	equ	0xFEE
 33758                           fsr0h	equ	0xFEA
 33759                           fsr0l	equ	0xFE9
 33760                           wreg	equ	0xFE8
 33761                           indf1	equ	0xFE7
 33762                           postdec1	equ	0xFE5
 33763                           fsr1h	equ	0xFE2
 33764                           fsr1l	equ	0xFE1
 33765                           indf2	equ	0xFDF
 33766                           postinc2	equ	0xFDE
 33767                           postdec2	equ	0xFDD
 33768                           plusw2	equ	0xFDB
 33769                           fsr2h	equ	0xFDA
 33770                           fsr2l	equ	0xFD9
 33771                           status	equ	0xFD8
 33772                           
 33773 ;; *************** function _clearInterruptPinRX *****************
 33774 ;; Defined at:
 33775 ;;		line 235 in file "../Includes/Drivers/swUart.c"
 33776 ;; Parameters:    Size  Location     Type
 33777 ;;		None
 33778 ;; Auto vars:     Size  Location     Type
 33779 ;;  tClearPin       1    0[COMRAM] unsigned char 
 33780 ;; Return value:  Size  Location     Type
 33781 ;;                  1    wreg      void 
 33782 ;; Registers used:
 33783 ;;		wreg
 33784 ;; Tracked objects:
 33785 ;;		On entry : 0/0
 33786 ;;		On exit  : 0/0
 33787 ;;		Unchanged: 0/0
 33788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33789 ;;      Params:         0       0       0       0       0       0       0       0       0
 33790 ;;      Locals:         1       0       0       0       0       0       0       0       0
 33791 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33792 ;;      Totals:         1       0       0       0       0       0       0       0       0
 33793 ;;Total ram usage:        1 bytes
 33794 ;; Hardware stack levels used:    1
 33795 ;; This function calls:
 33796 ;;		Nothing
 33797 ;; This function is called by:
 33798 ;;		_InterruptPinRX
 33799 ;; This function uses a non-reentrant model
 33800 ;;
 33801                           
 33802                           	psect	text155
 33803  006262                     __ptext155:
 33804                           	opt stack 0
 33805  006262                     _clearInterruptPinRX:
 33806                           	opt stack 19
 33807                           
 33808                           ;swUart.c: 237: bool tClearPin;
 33809                           ;swUart.c: 239: tClearPin = PORTBbits.RB7;
 33810                           
 33811                           ;incstack = 0
 33812  006262  0E00               	movlw	0
 33813  006264  BE81               	btfsc	3969,7,c	;volatile
 33814  006266  0E01               	movlw	1
 33815  006268  6E01               	movwf	clearInterruptPinRX@tClearPin,c
 33816                           
 33817                           ;swUart.c: 241: INTCONbits.IOCIF = 0;
 33818  00626A  90F2               	bcf	intcon,0,c	;volatile
 33819  00626C  0012               	return		;funcret
 33820  00626E                     __end_of_clearInterruptPinRX:
 33821                           	opt stack 0
 33822                           tosu	equ	0xFFF
 33823                           tosh	equ	0xFFE
 33824                           tosl	equ	0xFFD
 33825                           pclatu	equ	0xFFB
 33826                           pclath	equ	0xFFA
 33827                           tblptru	equ	0xFF8
 33828                           tblptrh	equ	0xFF7
 33829                           tblptrl	equ	0xFF6
 33830                           tablat	equ	0xFF5
 33831                           prodh	equ	0xFF4
 33832                           prodl	equ	0xFF3
 33833                           intcon	equ	0xFF2
 33834                           intcon2	equ	0xFF1
 33835                           intcon3	equ	0xFF0
 33836                           indf0	equ	0xFEF
 33837                           postinc0	equ	0xFEE
 33838                           fsr0h	equ	0xFEA
 33839                           fsr0l	equ	0xFE9
 33840                           wreg	equ	0xFE8
 33841                           indf1	equ	0xFE7
 33842                           postdec1	equ	0xFE5
 33843                           fsr1h	equ	0xFE2
 33844                           fsr1l	equ	0xFE1
 33845                           indf2	equ	0xFDF
 33846                           postinc2	equ	0xFDE
 33847                           postdec2	equ	0xFDD
 33848                           plusw2	equ	0xFDB
 33849                           fsr2h	equ	0xFDA
 33850                           fsr2l	equ	0xFD9
 33851                           status	equ	0xFD8
 33852                           
 33853 ;; *************** function _TMR0_Clear *****************
 33854 ;; Defined at:
 33855 ;;		line 142 in file "../Includes/MccGenerated/tmr0.c"
 33856 ;; Parameters:    Size  Location     Type
 33857 ;;		None
 33858 ;; Auto vars:     Size  Location     Type
 33859 ;;		None
 33860 ;; Return value:  Size  Location     Type
 33861 ;;                  1    wreg      void 
 33862 ;; Registers used:
 33863 ;;		None
 33864 ;; Tracked objects:
 33865 ;;		On entry : 0/0
 33866 ;;		On exit  : 0/0
 33867 ;;		Unchanged: 0/0
 33868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33869 ;;      Params:         0       0       0       0       0       0       0       0       0
 33870 ;;      Locals:         0       0       0       0       0       0       0       0       0
 33871 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33872 ;;      Totals:         0       0       0       0       0       0       0       0       0
 33873 ;;Total ram usage:        0 bytes
 33874 ;; Hardware stack levels used:    1
 33875 ;; This function calls:
 33876 ;;		Nothing
 33877 ;; This function is called by:
 33878 ;;		_InterruptPinRX
 33879 ;;		_InterruptTimerUART
 33880 ;; This function uses a non-reentrant model
 33881 ;;
 33882                           
 33883                           	psect	text156
 33884  0062FA                     __ptext156:
 33885                           	opt stack 0
 33886  0062FA                     _TMR0_Clear:
 33887                           	opt stack 19
 33888                           
 33889                           ;tmr0.c: 145: INTCONbits.TMR0IF = 0;
 33890                           
 33891                           ;incstack = 0
 33892  0062FA  94F2               	bcf	intcon,2,c	;volatile
 33893  0062FC  0012               	return		;funcret
 33894  0062FE                     __end_of_TMR0_Clear:
 33895                           	opt stack 0
 33896                           tosu	equ	0xFFF
 33897                           tosh	equ	0xFFE
 33898                           tosl	equ	0xFFD
 33899                           pclatu	equ	0xFFB
 33900                           pclath	equ	0xFFA
 33901                           tblptru	equ	0xFF8
 33902                           tblptrh	equ	0xFF7
 33903                           tblptrl	equ	0xFF6
 33904                           tablat	equ	0xFF5
 33905                           prodh	equ	0xFF4
 33906                           prodl	equ	0xFF3
 33907                           intcon	equ	0xFF2
 33908                           intcon2	equ	0xFF1
 33909                           intcon3	equ	0xFF0
 33910                           indf0	equ	0xFEF
 33911                           postinc0	equ	0xFEE
 33912                           fsr0h	equ	0xFEA
 33913                           fsr0l	equ	0xFE9
 33914                           wreg	equ	0xFE8
 33915                           indf1	equ	0xFE7
 33916                           postdec1	equ	0xFE5
 33917                           fsr1h	equ	0xFE2
 33918                           fsr1l	equ	0xFE1
 33919                           indf2	equ	0xFDF
 33920                           postinc2	equ	0xFDE
 33921                           postdec2	equ	0xFDD
 33922                           plusw2	equ	0xFDB
 33923                           fsr2h	equ	0xFDA
 33924                           fsr2l	equ	0xFD9
 33925                           status	equ	0xFD8
 33926                           
 33927 ;; *************** function _EUSART_Transmit_ISR *****************
 33928 ;; Defined at:
 33929 ;;		line 162 in file "../Includes/MccGenerated/eusart.c"
 33930 ;; Parameters:    Size  Location     Type
 33931 ;;		None
 33932 ;; Auto vars:     Size  Location     Type
 33933 ;;		None
 33934 ;; Return value:  Size  Location     Type
 33935 ;;                  1    wreg      void 
 33936 ;; Registers used:
 33937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33938 ;; Tracked objects:
 33939 ;;		On entry : 0/0
 33940 ;;		On exit  : 0/0
 33941 ;;		Unchanged: 0/0
 33942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33943 ;;      Params:         0       0       0       0       0       0       0       0       0
 33944 ;;      Locals:         0       0       0       0       0       0       0       0       0
 33945 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33946 ;;      Totals:         0       0       0       0       0       0       0       0       0
 33947 ;;Total ram usage:        0 bytes
 33948 ;; Hardware stack levels used:    1
 33949 ;; This function calls:
 33950 ;;		Nothing
 33951 ;; This function is called by:
 33952 ;;		_INTERRUPT_InterruptManager
 33953 ;; This function uses a non-reentrant model
 33954 ;;
 33955                           
 33956                           	psect	text157
 33957  005E44                     __ptext157:
 33958                           	opt stack 0
 33959  005E44                     _EUSART_Transmit_ISR:
 33960                           	opt stack 20
 33961                           
 33962                           ;eusart.c: 166: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 33963                           
 33964                           ;incstack = 0
 33965  005E44  0E40               	movlw	64
 33966  005E46  0100               	movlb	0	; () banked
 33967  005E48  61E0               	cpfslt	_eusartTxBufferRemaining& (0+255),b	;volatile
 33968  005E4A  D012               	goto	i2l1309
 33969                           
 33970                           ; BSR set to: 0
 33971                           ;eusart.c: 167: {
 33972                           ;eusart.c: 168: TXREG = eusartTxBuffer[eusartTxTail++];
 33973  005E4C  51E1               	movf	_eusartTxTail& (0+255),w,b
 33974  005E4E  0D01               	mullw	1
 33975  005E50  0E40               	movlw	low _eusartTxBuffer
 33976  005E52  24F3               	addwf	prodl,w,c
 33977  005E54  6ED9               	movwf	fsr2l,c
 33978  005E56  0E02               	movlw	high _eusartTxBuffer
 33979  005E58  20F4               	addwfc	prodh,w,c
 33980  005E5A  6EDA               	movwf	fsr2h,c
 33981  005E5C  50DF               	movf	indf2,w,c
 33982  005E5E  6EAD               	movwf	4013,c	;volatile
 33983                           
 33984                           ; BSR set to: 0
 33985  005E60  2BE1               	incf	_eusartTxTail& (0+255),f,b
 33986                           
 33987                           ; BSR set to: 0
 33988                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 33989  005E62  0E3F               	movlw	63
 33990  005E64  65E1               	cpfsgt	_eusartTxTail& (0+255),b
 33991  005E66  D002               	goto	i2l1310
 33992                           
 33993                           ; BSR set to: 0
 33994                           ;eusart.c: 170: {
 33995                           ;eusart.c: 171: eusartTxTail = 0;
 33996  005E68  0E00               	movlw	0
 33997  005E6A  6FE1               	movwf	_eusartTxTail& (0+255),b
 33998  005E6C                     i2l1310:
 33999                           
 34000                           ; BSR set to: 0
 34001                           ;eusart.c: 172: }
 34002                           ;eusart.c: 173: eusartTxBufferRemaining++;
 34003                           
 34004                           ; BSR set to: 0
 34005  005E6C  2BE0               	incf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
 34006                           
 34007                           ;eusart.c: 174: }
 34008  005E6E  0012               	return	
 34009  005E70                     i2l1309:
 34010                           
 34011                           ; BSR set to: 0
 34012                           ;eusart.c: 175: else
 34013                           ;eusart.c: 176: {
 34014                           ;eusart.c: 177: PIE1bits.TXIE = 0;
 34015  005E70  989D               	bcf	3997,4,c	;volatile
 34016  005E72  0012               	return	
 34017  005E74                     __end_of_EUSART_Transmit_ISR:
 34018                           	opt stack 0
 34019                           tosu	equ	0xFFF
 34020                           tosh	equ	0xFFE
 34021                           tosl	equ	0xFFD
 34022                           pclatu	equ	0xFFB
 34023                           pclath	equ	0xFFA
 34024                           tblptru	equ	0xFF8
 34025                           tblptrh	equ	0xFF7
 34026                           tblptrl	equ	0xFF6
 34027                           tablat	equ	0xFF5
 34028                           prodh	equ	0xFF4
 34029                           prodl	equ	0xFF3
 34030                           intcon	equ	0xFF2
 34031                           intcon2	equ	0xFF1
 34032                           intcon3	equ	0xFF0
 34033                           indf0	equ	0xFEF
 34034                           postinc0	equ	0xFEE
 34035                           fsr0h	equ	0xFEA
 34036                           fsr0l	equ	0xFE9
 34037                           wreg	equ	0xFE8
 34038                           indf1	equ	0xFE7
 34039                           postdec1	equ	0xFE5
 34040                           fsr1h	equ	0xFE2
 34041                           fsr1l	equ	0xFE1
 34042                           indf2	equ	0xFDF
 34043                           postinc2	equ	0xFDE
 34044                           postdec2	equ	0xFDD
 34045                           plusw2	equ	0xFDB
 34046                           fsr2h	equ	0xFDA
 34047                           fsr2l	equ	0xFD9
 34048                           status	equ	0xFD8
 34049                           
 34050 ;; *************** function _EUSART_Receive_ISR *****************
 34051 ;; Defined at:
 34052 ;;		line 181 in file "../Includes/MccGenerated/eusart.c"
 34053 ;; Parameters:    Size  Location     Type
 34054 ;;		None
 34055 ;; Auto vars:     Size  Location     Type
 34056 ;;		None
 34057 ;; Return value:  Size  Location     Type
 34058 ;;                  1    wreg      void 
 34059 ;; Registers used:
 34060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34061 ;; Tracked objects:
 34062 ;;		On entry : 0/0
 34063 ;;		On exit  : 0/0
 34064 ;;		Unchanged: 0/0
 34065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34066 ;;      Params:         0       0       0       0       0       0       0       0       0
 34067 ;;      Locals:         0       0       0       0       0       0       0       0       0
 34068 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34069 ;;      Totals:         0       0       0       0       0       0       0       0       0
 34070 ;;Total ram usage:        0 bytes
 34071 ;; Hardware stack levels used:    1
 34072 ;; This function calls:
 34073 ;;		Nothing
 34074 ;; This function is called by:
 34075 ;;		_INTERRUPT_InterruptManager
 34076 ;; This function uses a non-reentrant model
 34077 ;;
 34078                           
 34079                           	psect	text158
 34080  005E74                     __ptext158:
 34081                           	opt stack 0
 34082  005E74                     _EUSART_Receive_ISR:
 34083                           	opt stack 20
 34084                           
 34085                           ;eusart.c: 183: if(1 == RCSTAbits.OERR)
 34086                           
 34087                           ; BSR set to: 0
 34088                           ;incstack = 0
 34089  005E74  A2AB               	btfss	4011,1,c	;volatile
 34090  005E76  D003               	goto	i2l1315
 34091                           
 34092                           ;eusart.c: 184: {
 34093                           ;eusart.c: 187: RCSTAbits.CREN = 0;
 34094  005E78  98AB               	bcf	4011,4,c	;volatile
 34095                           
 34096                           ;eusart.c: 188: RCSTAbits.CREN = 1;
 34097  005E7A  88AB               	bsf	4011,4,c	;volatile
 34098                           
 34099                           ;eusart.c: 189: }
 34100  005E7C  0012               	return	
 34101  005E7E                     i2l1315:
 34102                           
 34103                           ;eusart.c: 190: else
 34104                           ;eusart.c: 191: {
 34105                           ;eusart.c: 193: eusartRxBuffer[eusartRxHead++] = RCREG;
 34106  005E7E  0100               	movlb	0	; () banked
 34107  005E80  51DF               	movf	_eusartRxHead& (0+255),w,b
 34108  005E82  0D01               	mullw	1
 34109  005E84  0E00               	movlw	low _eusartRxBuffer
 34110  005E86  24F3               	addwf	prodl,w,c
 34111  005E88  6ED9               	movwf	fsr2l,c
 34112  005E8A  0E02               	movlw	high _eusartRxBuffer
 34113  005E8C  20F4               	addwfc	prodh,w,c
 34114  005E8E  6EDA               	movwf	fsr2h,c
 34115  005E90  CFAE FFDF          	movff	4014,indf2	;volatile
 34116                           
 34117                           ; BSR set to: 0
 34118  005E94  2BDF               	incf	_eusartRxHead& (0+255),f,b
 34119                           
 34120                           ; BSR set to: 0
 34121                           ;eusart.c: 194: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 34122  005E96  0E3F               	movlw	63
 34123  005E98  65DF               	cpfsgt	_eusartRxHead& (0+255),b
 34124  005E9A  D002               	goto	i2l1317
 34125                           
 34126                           ; BSR set to: 0
 34127                           ;eusart.c: 195: {
 34128                           ;eusart.c: 196: eusartRxHead = 0;
 34129  005E9C  0E00               	movlw	0
 34130  005E9E  6FDF               	movwf	_eusartRxHead& (0+255),b
 34131  005EA0                     i2l1317:
 34132                           
 34133                           ; BSR set to: 0
 34134                           ;eusart.c: 197: }
 34135                           ;eusart.c: 198: eusartRxCount++;
 34136                           
 34137                           ; BSR set to: 0
 34138  005EA0  2BF5               	incf	_eusartRxCount& (0+255),f,b	;volatile
 34139  005EA2  0012               	return	
 34140  005EA4                     __end_of_EUSART_Receive_ISR:
 34141                           	opt stack 0
 34142                           tosu	equ	0xFFF
 34143                           tosh	equ	0xFFE
 34144                           tosl	equ	0xFFD
 34145                           pclatu	equ	0xFFB
 34146                           pclath	equ	0xFFA
 34147                           tblptru	equ	0xFF8
 34148                           tblptrh	equ	0xFF7
 34149                           tblptrl	equ	0xFF6
 34150                           tablat	equ	0xFF5
 34151                           prodh	equ	0xFF4
 34152                           prodl	equ	0xFF3
 34153                           intcon	equ	0xFF2
 34154                           intcon2	equ	0xFF1
 34155                           intcon3	equ	0xFF0
 34156                           indf0	equ	0xFEF
 34157                           postinc0	equ	0xFEE
 34158                           fsr0h	equ	0xFEA
 34159                           fsr0l	equ	0xFE9
 34160                           wreg	equ	0xFE8
 34161                           indf1	equ	0xFE7
 34162                           postdec1	equ	0xFE5
 34163                           fsr1h	equ	0xFE2
 34164                           fsr1l	equ	0xFE1
 34165                           indf2	equ	0xFDF
 34166                           postinc2	equ	0xFDE
 34167                           postdec2	equ	0xFDD
 34168                           plusw2	equ	0xFDB
 34169                           fsr2h	equ	0xFDA
 34170                           fsr2l	equ	0xFD9
 34171                           status	equ	0xFD8
 34172                           
 34173 ;; *************** function _CMP1_ISR *****************
 34174 ;; Defined at:
 34175 ;;		line 95 in file "../Includes/MccGenerated/cmp1.c"
 34176 ;; Parameters:    Size  Location     Type
 34177 ;;		None
 34178 ;; Auto vars:     Size  Location     Type
 34179 ;;		None
 34180 ;; Return value:  Size  Location     Type
 34181 ;;                  1    wreg      void 
 34182 ;; Registers used:
 34183 ;;		None
 34184 ;; Tracked objects:
 34185 ;;		On entry : 0/0
 34186 ;;		On exit  : 0/0
 34187 ;;		Unchanged: 0/0
 34188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34189 ;;      Params:         0       0       0       0       0       0       0       0       0
 34190 ;;      Locals:         0       0       0       0       0       0       0       0       0
 34191 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34192 ;;      Totals:         0       0       0       0       0       0       0       0       0
 34193 ;;Total ram usage:        0 bytes
 34194 ;; Hardware stack levels used:    1
 34195 ;; This function calls:
 34196 ;;		Nothing
 34197 ;; This function is called by:
 34198 ;;		_INTERRUPT_InterruptManager
 34199 ;; This function uses a non-reentrant model
 34200 ;;
 34201                           
 34202                           	psect	text159
 34203  0062FE                     __ptext159:
 34204                           	opt stack 0
 34205  0062FE                     _CMP1_ISR:
 34206                           	opt stack 20
 34207                           
 34208                           ;cmp1.c: 98: PIR2bits.C1IF = 0;
 34209                           
 34210                           ;incstack = 0
 34211  0062FE  9CA1               	bcf	4001,6,c	;volatile
 34212  006300  0012               	return		;funcret
 34213  006302                     __end_of_CMP1_ISR:
 34214                           	opt stack 0
 34215                           tosu	equ	0xFFF
 34216                           tosh	equ	0xFFE
 34217                           tosl	equ	0xFFD
 34218                           pclatu	equ	0xFFB
 34219                           pclath	equ	0xFFA
 34220                           tblptru	equ	0xFF8
 34221                           tblptrh	equ	0xFF7
 34222                           tblptrl	equ	0xFF6
 34223                           tablat	equ	0xFF5
 34224                           prodh	equ	0xFF4
 34225                           prodl	equ	0xFF3
 34226                           intcon	equ	0xFF2
 34227                           intcon2	equ	0xFF1
 34228                           intcon3	equ	0xFF0
 34229                           indf0	equ	0xFEF
 34230                           postinc0	equ	0xFEE
 34231                           fsr0h	equ	0xFEA
 34232                           fsr0l	equ	0xFE9
 34233                           wreg	equ	0xFE8
 34234                           indf1	equ	0xFE7
 34235                           postdec1	equ	0xFE5
 34236                           fsr1h	equ	0xFE2
 34237                           fsr1l	equ	0xFE1
 34238                           indf2	equ	0xFDF
 34239                           postinc2	equ	0xFDE
 34240                           postdec2	equ	0xFDD
 34241                           plusw2	equ	0xFDB
 34242                           fsr2h	equ	0xFDA
 34243                           fsr2l	equ	0xFD9
 34244                           status	equ	0xFD8
 34245                           tosu	equ	0xFFF
 34246                           tosh	equ	0xFFE
 34247                           tosl	equ	0xFFD
 34248                           pclatu	equ	0xFFB
 34249                           pclath	equ	0xFFA
 34250                           tblptru	equ	0xFF8
 34251                           tblptrh	equ	0xFF7
 34252                           tblptrl	equ	0xFF6
 34253                           tablat	equ	0xFF5
 34254                           prodh	equ	0xFF4
 34255                           prodl	equ	0xFF3
 34256                           intcon	equ	0xFF2
 34257                           intcon2	equ	0xFF1
 34258                           intcon3	equ	0xFF0
 34259                           indf0	equ	0xFEF
 34260                           postinc0	equ	0xFEE
 34261                           fsr0h	equ	0xFEA
 34262                           fsr0l	equ	0xFE9
 34263                           wreg	equ	0xFE8
 34264                           indf1	equ	0xFE7
 34265                           postdec1	equ	0xFE5
 34266                           fsr1h	equ	0xFE2
 34267                           fsr1l	equ	0xFE1
 34268                           indf2	equ	0xFDF
 34269                           postinc2	equ	0xFDE
 34270                           postdec2	equ	0xFDD
 34271                           plusw2	equ	0xFDB
 34272                           fsr2h	equ	0xFDA
 34273                           fsr2l	equ	0xFD9
 34274                           status	equ	0xFD8
 34275                           
 34276                           	psect	text160
 34277  000000                     __ptext160:
 34278                           	opt stack 0
 34279                           tosu	equ	0xFFF
 34280                           tosh	equ	0xFFE
 34281                           tosl	equ	0xFFD
 34282                           pclatu	equ	0xFFB
 34283                           pclath	equ	0xFFA
 34284                           tblptru	equ	0xFF8
 34285                           tblptrh	equ	0xFF7
 34286                           tblptrl	equ	0xFF6
 34287                           tablat	equ	0xFF5
 34288                           prodh	equ	0xFF4
 34289                           prodl	equ	0xFF3
 34290                           intcon	equ	0xFF2
 34291                           intcon2	equ	0xFF1
 34292                           intcon3	equ	0xFF0
 34293                           indf0	equ	0xFEF
 34294                           postinc0	equ	0xFEE
 34295                           fsr0h	equ	0xFEA
 34296                           fsr0l	equ	0xFE9
 34297                           wreg	equ	0xFE8
 34298                           indf1	equ	0xFE7
 34299                           postdec1	equ	0xFE5
 34300                           fsr1h	equ	0xFE2
 34301                           fsr1l	equ	0xFE1
 34302                           indf2	equ	0xFDF
 34303                           postinc2	equ	0xFDE
 34304                           postdec2	equ	0xFDD
 34305                           plusw2	equ	0xFDB
 34306                           fsr2h	equ	0xFDA
 34307                           fsr2l	equ	0xFD9
 34308                           status	equ	0xFD8
 34309                           
 34310                           	psect	rparam
 34311  0000                     tosu	equ	0xFFF
 34312                           tosh	equ	0xFFE
 34313                           tosl	equ	0xFFD
 34314                           pclatu	equ	0xFFB
 34315                           pclath	equ	0xFFA
 34316                           tblptru	equ	0xFF8
 34317                           tblptrh	equ	0xFF7
 34318                           tblptrl	equ	0xFF6
 34319                           tablat	equ	0xFF5
 34320                           prodh	equ	0xFF4
 34321                           prodl	equ	0xFF3
 34322                           intcon	equ	0xFF2
 34323                           intcon2	equ	0xFF1
 34324                           intcon3	equ	0xFF0
 34325                           indf0	equ	0xFEF
 34326                           postinc0	equ	0xFEE
 34327                           fsr0h	equ	0xFEA
 34328                           fsr0l	equ	0xFE9
 34329                           wreg	equ	0xFE8
 34330                           indf1	equ	0xFE7
 34331                           postdec1	equ	0xFE5
 34332                           fsr1h	equ	0xFE2
 34333                           fsr1l	equ	0xFE1
 34334                           indf2	equ	0xFDF
 34335                           postinc2	equ	0xFDE
 34336                           postdec2	equ	0xFDD
 34337                           plusw2	equ	0xFDB
 34338                           fsr2h	equ	0xFDA
 34339                           fsr2l	equ	0xFD9
 34340                           status	equ	0xFD8
 34341                           
 34342                           	psect	temp
 34343  00005E                     btemp:
 34344                           	opt stack 0
 34345  00005E                     	ds	1
 34346  0000                     int$flags	set	btemp
 34347  0000                     wtemp6	set	btemp+1
 34348                           tosu	equ	0xFFF
 34349                           tosh	equ	0xFFE
 34350                           tosl	equ	0xFFD
 34351                           pclatu	equ	0xFFB
 34352                           pclath	equ	0xFFA
 34353                           tblptru	equ	0xFF8
 34354                           tblptrh	equ	0xFF7
 34355                           tblptrl	equ	0xFF6
 34356                           tablat	equ	0xFF5
 34357                           prodh	equ	0xFF4
 34358                           prodl	equ	0xFF3
 34359                           intcon	equ	0xFF2
 34360                           intcon2	equ	0xFF1
 34361                           intcon3	equ	0xFF0
 34362                           indf0	equ	0xFEF
 34363                           postinc0	equ	0xFEE
 34364                           fsr0h	equ	0xFEA
 34365                           fsr0l	equ	0xFE9
 34366                           wreg	equ	0xFE8
 34367                           indf1	equ	0xFE7
 34368                           postdec1	equ	0xFE5
 34369                           fsr1h	equ	0xFE2
 34370                           fsr1l	equ	0xFE1
 34371                           indf2	equ	0xFDF
 34372                           postinc2	equ	0xFDE
 34373                           postdec2	equ	0xFDD
 34374                           plusw2	equ	0xFDB
 34375                           fsr2h	equ	0xFDA
 34376                           fsr2l	equ	0xFD9
 34377                           status	equ	0xFD8


Data Sizes:
    Strings     1606
    Constant    974
    Data        11
    BSS         948
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     49      93
    BANK0           160     92     160
    BANK1           256      0     256
    BANK2           256      0     192
    BANK3           256      0     200
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0     200
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_97(CODE[7]), STR_95(CODE[7]), STR_93(CODE[7]), STR_90(CODE[7]), 
		 -> STR_35(CODE[5]), STR_31(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_89(CODE[3]), STR_69(CODE[14]), STR_67(CODE[11]), STR_63(CODE[7]), 
		 -> STR_60(CODE[9]), STR_59(CODE[11]), STR_57(CODE[14]), STR_54(CODE[14]), 
		 -> STR_53(CODE[3]), STR_49(CODE[9]), STR_45(CODE[14]), STR_44(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> clearLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> clearLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK2[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK2[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S6305_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S6305_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S6305_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S6305_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S4668$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    S4658$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S4658$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4634$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4634$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4634$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4634$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    oled_putString@string	PTR const unsigned char  size(3) Largest target is 32767
		 -> oled_putUint16@numData(COMRAM[6]), oled_putint8@numData(BANK0[6]), oled_putUint8@numData(BANK0[6]), ROM(CODE[32767]), 
		 -> STR_189(CODE[12]), STR_188(CODE[8]), STR_187(CODE[9]), storedLight(BANK1[5]), 
		 -> STR_182(CODE[5]), STR_181(CODE[8]), STR_180(CODE[8]), STR_179(CODE[9]), 
		 -> STR_162(CODE[16]), STR_161(CODE[17]), STR_160(CODE[17]), STR_159(CODE[4]), 
		 -> STR_158(CODE[4]), STR_157(CODE[4]), STR_156(CODE[4]), STR_155(CODE[4]), 
		 -> STR_154(CODE[4]), STR_153(CODE[4]), STR_152(CODE[16]), STR_151(CODE[17]), 
		 -> STR_150(CODE[4]), STR_149(CODE[4]), STR_148(CODE[4]), STR_147(CODE[4]), 
		 -> STR_146(CODE[4]), STR_145(CODE[4]), STR_144(CODE[4]), STR_143(CODE[4]), 
		 -> STR_142(CODE[4]), STR_141(CODE[4]), STR_140(CODE[4]), STR_139(CODE[4]), 
		 -> STR_138(CODE[4]), STR_137(CODE[16]), STR_136(CODE[12]), STR_135(CODE[17]), 
		 -> STR_134(CODE[16]), STR_133(CODE[16]), STR_132(CODE[16]), STR_131(CODE[15]), 
		 -> STR_130(CODE[15]), STR_129(CODE[16]), STR_128(CODE[4]), STR_127(CODE[3]), 
		 -> STR_126(CODE[3]), STR_125(CODE[3]), STR_124(CODE[3]), STR_123(CODE[2]), 
		 -> STR_122(CODE[5]), STR_121(CODE[7]), STR_120(CODE[17]), STR_119(CODE[17]), 
		 -> STR_118(CODE[2]), STR_117(CODE[7]), STR_116(CODE[7]), STR_115(CODE[16]), 
		 -> STR_114(CODE[16]), STR_113(CODE[15]), STR_112(CODE[15]), STR_111(CODE[17]), 
		 -> STR_110(CODE[16]), STR_109(CODE[17]), STR_108(CODE[17]), STR_107(CODE[7]), 
		 -> STR_106(CODE[10]), STR_105(CODE[17]), STR_104(CODE[16]), STR_103(CODE[16]), 
		 -> STR_102(CODE[16]), STR_101(CODE[16]), STR_100(CODE[17]), STR_99(CODE[17]), 
		 -> STR_98(CODE[16]), STR_96(CODE[19]), STR_94(CODE[17]), STR_92(CODE[17]), 
		 -> STR_91(CODE[17]), responseData(BANK1[32]), responsePortNum(BANK1[3]), STR_88(CODE[13]), 
		 -> STR_87(CODE[12]), STR_86(CODE[12]), STR_83(CODE[18]), STR_82(CODE[13]), 
		 -> STR_81(CODE[17]), STR_80(CODE[16]), STR_79(CODE[17]), STR_78(CODE[17]), 
		 -> STR_77(CODE[16]), STR_76(CODE[17]), STR_75(CODE[17]), STR_73(CODE[13]), 
		 -> STR_72(CODE[12]), STR_71(CODE[17]), STR_65(CODE[7]), STR_64(CODE[10]), 
		 -> STR_62(CODE[11]), STR_61(CODE[11]), STR_56(CODE[9]), STR_55(CODE[11]), 
		 -> STR_51(CODE[11]), STR_50(CODE[10]), STR_47(CODE[9]), STR_46(CODE[11]), 
		 -> STR_42(CODE[17]), STR_40(CODE[17]), STR_38(CODE[17]), STR_37(CODE[17]), 
		 -> STR_36(CODE[17]), STR_34(CODE[17]), STR_33(CODE[17]), STR_32(CODE[17]), 
		 -> moduleResonseBuffer(BANK1[64]), STR_29(CODE[17]), STR_28(CODE[17]), STR_27(CODE[17]), 
		 -> STR_26(CODE[17]), STR_25(CODE[9]), STR_24(CODE[10]), STR_23(CODE[5]), 
		 -> STR_20(CODE[9]), STR_19(CODE[8]), STR_18(CODE[8]), STR_17(CODE[9]), 
		 -> STR_16(CODE[10]), STR_15(CODE[11]), STR_14(CODE[13]), STR_13(CODE[13]), 
		 -> STR_12(CODE[13]), STR_11(CODE[12]), STR_10(CODE[13]), STR_9(CODE[9]), 
		 -> STR_8(CODE[12]), STR_7(CODE[16]), STR_6(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[9]), STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    oled_putStringLineN@string	PTR const unsigned char  size(2) Largest target is 200
		 -> dataFrameGPS(BANK3[200]), 

    oled_setFont@font	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    selectedFont	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    moteApp_setLightString@lightString	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    sp__memcpy	PTR void  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    moteApp_convertSensorValue@string	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    moteApp_addToDataBuffer@string	PTR const unsigned char  size(2) Largest target is 64
		 -> storedLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    sendDataCommand@appData	PTR unsigned char  size(2) Largest target is 16
		 -> dataBuffer(BANK1[16]), 

    sendDataCommand@string	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_85(CODE[12]), STR_84(CODE[14]), STR_74(CODE[14]), 

    sendCommand@string	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_186(CODE[22]), STR_185(CODE[22]), STR_184(CODE[27]), STR_183(CODE[27]), 
		 -> STR_178(CODE[26]), STR_177(CODE[26]), STR_176(CODE[26]), STR_175(CODE[26]), 
		 -> STR_174(CODE[3]), STR_173(CODE[9]), STR_172(CODE[15]), STR_171(CODE[13]), 
		 -> STR_170(CODE[13]), STR_169(CODE[13]), STR_168(CODE[13]), STR_167(CODE[13]), 
		 -> STR_166(CODE[13]), STR_165(CODE[13]), STR_164(CODE[13]), STR_163(CODE[16]), 
		 -> STR_70(CODE[11]), STR_68(CODE[11]), STR_66(CODE[14]), STR_58(CODE[14]), 
		 -> STR_52(CODE[10]), STR_48(CODE[13]), STR_43(CODE[14]), STR_41(CODE[13]), 
		 -> STR_39(CODE[10]), STR_30(CODE[10]), STR_22(CODE[20]), STR_21(CODE[2]), 

    sp__moteApp_getLightString	PTR unsigned char  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    sp__moteApp_getTempValue	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    sp__moteApp_getLightValue	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBapp_CdcEmulatorInitialize
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USART_mySetLineCodingHandler
    _USBCtrlTrfInHandler->_USART_mySetLineCodingHandler
    _USART_mySetLineCodingHandler->___lldiv
    _InterruptTimerUART->_inFIFO
    _InterruptTimerUART->_reloadTimer
    _InterruptPinRX->_clearInterruptPinRX
    _InterruptPinRX->_reloadTimer

Critical Paths under _main in BANK0

    _main->_moteHandler
    _test_powerup->_moteApp_testSensors
    _test_switch->_oled_putString
    _test_oled->_oled_putString
    _test_leds->_oled_putString
    _test_comms->_oled_putString
    _moteApp_toggleLeds->_sendCommand
    _moteApp_testSensors->_ADC_TempConversion
    _moteHandler->_moteRunningProcess
    _moteRunningProcess->_ADC_TempConversion
    _sendDataCommand->_EUSART_Write
    _sendDataCommand->_hexToStr
    _oled_putUint8->_oled_putString
    _moteApp_setSensorsInput->_moteApp_delayms
    _moteApp_getTempValue->_MOTEapp_getModuleResponse
    _moteApp_getTempValue->_sendCommand
    _moteApp_getLightValue->_moteApp_setLightString
    _moteApp_setLightString->_memcpy
    _moteApp_convertSensorValue->_moteApp_getLightValue
    _moteApp_addToDataBuffer->_moteApp_getLightValue
    _moteApp_add8bToDataBuffer->___awmod
    _oled_setDisplay->_oled_writeCommand
    _oled_devInit->_oled_initialDispayLine
    _oled_devInit->_oled_powerControl
    _oled_devInit->_oled_regulorResistorSelect
    _oled_devInit->_oled_setContrastControlRegister
    _oled_setContrastControlRegister->_oled_writeCommand
    _oled_regulorResistorSelect->_oled_writeCommand
    _oled_powerControl->_oled_writeCommand
    _oled_initialDispayLine->_oled_writeCommand
    _oled_displayOff->_oled_writeCommand
    _moduleSleep->_sendCommand
    _moduleResync->_moteApp_delayms
    _MOTEapp_getModuleResponse->_EUSART_Read
    _MOTEapp_SetDataRateSetting->_sendCommand
    _ADC_TempConversion->___fldiv
    ___flmul->___fladd
    ___fldiv->___flmul
    _moteJoiningProcess->_oled_putString
    _moteApp_searchFrameGPS->_oled_putint8
    _oled_putint8->_oled_putString
    _oled_putStringLineN->_oled_putChar
    _TMRapp_Handler->___almod
    _moteApp_clearCommand->_sendCommand
    _sendCommand->_EUSART_Write
    _EndLine->_EUSART_Write
    _USBapp_Handler->_oled_putString
    _oled_putString->_moteApp_getLightValue
    _oled_clear->_oled_clearRow
    _oled_clearRow->_oled_putChar
    _oled_putChar->_Set_Column_Address
    _oled_putChar->_Set_Page_Address
    _Set_Page_Address->_oled_writeCommand
    _Set_Column_Address->_oled_writeCommand
    _USBapp_DeviceCdcEmulatorHandler->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  784899
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
               _MOTEapp_handlerState
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _USBapp_Handler
                _USBapp_handlerState
                       _moduleResync
               _moteApp_clearCommand
                    _moteApp_delayms
                        _moteHandler
                         _oled_clear
                          _oled_init
                     _oled_putString
                       _test_powerup
 ---------------------------------------------------------------------------------
 (1) _test_powerup                                         0     0      0  287776
                 _EUSART_FlushBuffer
                    _moteApp_delayms
                _moteApp_testSensors
                         _oled_clear
                         _test_comms
                          _test_leds
                          _test_oled
                        _test_switch
 ---------------------------------------------------------------------------------
 (2) _test_switch                                          4     4      0   42213
                                             24 BANK0      4     4      0
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_oled                                            0     0      0   42121
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_leds                                            0     0      0   41610
                            _delayms
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_comms                                           0     0      0   44613
                            _delayms
                 _moteApp_toggleLeds
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_toggleLeds                                   2     2      0    3003
                                              3 BANK0      2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _delayms                                              5     3      2     758
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _moteApp_testSensors                                  3     3      0  113967
                                             76 BANK0      1     1      0
                 _ADC_TempConversion
         _moteApp_convertSensorValue
              _moteApp_getLightValue
               _moteApp_getTempValue
            _moteApp_setSensorsInput
                         _oled_clear
                       _oled_putChar
                     _oled_putString
                       _oled_putint8
 ---------------------------------------------------------------------------------
 (1) _moteHandler                                          6     6      0  395866
                                             86 BANK0      6     6      0
                 _ADC_TempConversion
             _MOTEapp_TimerBasedTask
          _MOTEapp_getModuleResponse
               _TMRapp_ClearBitFlags
                     _TMRapp_Handler
                     _USBapp_exitCDC
                _USBapp_exitCDCState
         _moteApp_convertSensorValue
              _moteApp_getLightValue
               _moteApp_getTempValue
             _moteApp_searchFrameGPS
                 _moteJoiningProcess
                 _moteRunningProcess
                         _oled_clear
                     _oled_putString
                       _oled_putint8
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _moteRunningProcess                                  10     7      3  184168
                                             76 BANK0     10     7      3
                 _ADC_TempConversion
         _MOTEapp_SetDataRateSetting
                     _TMR2_ReadTimer
                  _moteApp_GoToSleep
          _moteApp_add8bToDataBuffer
            _moteApp_addToDataBuffer
               _moteApp_clearBuffers
         _moteApp_convertSensorValue
                    _moteApp_delayms
             _moteApp_getLightString
              _moteApp_getLightValue
               _moteApp_getTempValue
            _moteApp_lightStringSize
            _moteApp_setSensorsInput
                         _oled_clear
                     _oled_putString
                      _oled_putUint8
                       _oled_putint8
                    _sendDataCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _sendDataCommand                                      8     3      5    1313
                                              1 BANK0      8     3      5
                       _EUSART_Write
                            _EndLine
                           _hexToStr
 ---------------------------------------------------------------------------------
 (4) _hexToStr                                             1     1      0     133
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putUint8                                        9     7      2   44411
                                             24 BANK0      9     7      2
                            ___awmod
                            ___lbdiv
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_setSensorsInput                              2     2      0    5080
                                              5 BANK0      2     2      0
          _MOTEapp_getModuleResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _moteApp_lightStringSize                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _moteApp_getTempValue                                 4     2      2    3142
                                              3 BANK0      4     2      2
          _MOTEapp_getModuleResponse
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _moteApp_getLightValue                                4     2      2    4020
                                             14 BANK0      4     2      2
          _MOTEapp_getModuleResponse
             _moteApp_setLightString
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _moteApp_setLightString                               3     1      2     878
                                             11 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     677
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _moteApp_getLightString                               2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _moteApp_convertSensorValue                           8     6      2    7101
                                             18 BANK0      8     6      2
                             ___wmul
              _moteApp_getLightValue (ARG)
               _moteApp_getTempValue (ARG)
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    6385
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_clearBuffers                                 4     4      0     272
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _moteApp_addToDataBuffer                              4     1      3     514
                                             18 BANK0      4     1      3
             _moteApp_getLightString (ARG)
              _moteApp_getLightValue (ARG)
 ---------------------------------------------------------------------------------
 (3) _moteApp_add8bToDataBuffer                            4     3      1    3128
                                              6 BANK0      4     3      1
                            ___awmod
                            ___lbdiv
            _moteApp_lightStringSize (ARG)
 ---------------------------------------------------------------------------------
 (3) _moteApp_GoToSleep                                    1     1      0   11741
                                             14 BANK0      1     1      0
                 _EUSART_FlushBuffer
             _PIN_MANAGER_Initialize
                       _moduleResync
                        _moduleSleep
                    _moteApp_delayms
                    _oled_displayOff
                          _oled_init
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            0     0      0    1645
                         _oled_clear
                       _oled_devInit
                    _oled_setDisplay
                       _oled_setFont
 ---------------------------------------------------------------------------------
 (2) _oled_setFont                                         2     0      2     133
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _oled_setDisplay                                      1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (2) _oled_devInit                                         1     1      0     199
                                              2 BANK0      1     1      0
             _oled_initialDispayLine
                  _oled_powerControl
         _oled_regulorResistorSelect
    _oled_setContrastControlRegister
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_setContrastControlRegister                      1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_regulorResistorSelect                           1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_powerControl                                    1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_initialDispayLine                               1     1      0      45
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_displayOff                                      1     1      0      22
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _moduleSleep                                          1     1      0    2981
                                              3 BANK0      1     1      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _moduleResync                                         3     3      0    5082
                                              5 BANK0      3     3      0
          _MOTEapp_getModuleResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _MOTEapp_getModuleResponse                            2     2      0     138
                                              1 BANK0      2     2      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART_FlushBuffer                                   1     1      0      68
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_ReadTimer                                       1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_SetDataRateSetting                           2     2      0    3025
                                              3 BANK0      2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _ADC_TempConversion                                   6     6      0    6665
                                             70 BANK0      6     6      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     411
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     318
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    1974
                                             20 BANK0     25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    1405
                                             45 BANK0     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2466
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (2) _moteJoiningProcess                                   6     4      2   51670
                                             24 BANK0      6     4      2
                   _DATAEE_WriteByte
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                        _sendCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6    1736
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    2227
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _moteApp_delayms                                      5     3      2    1915
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     3     2      1     245
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _moteApp_searchFrameGPS                               6     6      0   48289
                                             34 BANK0      6     6      0
                          _emptyFIFO
                         _oled_clear
                _oled_putStringLineN
                       _oled_putint8
                            _outFIFO
                              _unhex
 ---------------------------------------------------------------------------------
 (3) _unhex                                                1     1      0     132
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _outFIFO                                              1     1      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putint8                                        10     8      2   44659
                                             24 BANK0     10     8      2
                            ___awmod
                            ___lbdiv
                     _oled_putString
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     696
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1898
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _oled_putStringLineN                                  5     3      2    1883
                                             12 BANK0      5     3      2
                            ___awdiv
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     478
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _emptyFIFO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDCState                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMRapp_Handler                                       0     0      0    3481
                            ___almod
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    3007
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     474
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (2) _TMRapp_ClearBitFlags                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MOTEapp_TimerBasedTask                               1     1      0     154
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _moteApp_clearCommand                                 0     0      0    2981
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _sendCommand                                          2     0      2    2981
                                              1 BANK0      2     0      2
                       _EUSART_Write
                            _EndLine
 ---------------------------------------------------------------------------------
 (5) _EndLine                                              0     0      0      44
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (1) _USBapp_handlerState                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_Handler                                       1     1      0   46070
                                             24 BANK0      1     1      0
    _USBapp_DeviceCdcEmulatorHandler
                         _oled_clear
                     _oled_putString
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _service_pushbutton                                   1     1      0      27
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putString                                       6     1      5   40852
                                             18 BANK0      6     1      5
             _moteApp_getLightString (ARG)
              _moteApp_getLightValue (ARG)
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (3) _oled_clear                                           0     0      0    1269
                      _oled_clearRow
 ---------------------------------------------------------------------------------
 (4) _oled_clearRow                                        2     2      0    1269
                                             12 BANK0      2     2      0
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (4) _oled_putChar                                        10     8      2    1179
                                              2 BANK0     10     8      2
                 _Set_Column_Address
                   _Set_Page_Address
                     _oled_writeData
 ---------------------------------------------------------------------------------
 (5) _oled_writeData                                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _Set_Page_Address                                     1     1      0      67
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (5) _Set_Column_Address                                   1     1      0      66
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (6) _oled_writeCommand                                    1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_DeviceCdcEmulatorHandler                      1     1      0    3898
                                             13 BANK0      1     1      0
                       _CDCTxService
                        _EUSART_Read
                       _EUSART_Write
           _MOTEapp_setResponseReady
               _USBapp_getrxByteFlag
                       _getsUSBUSART
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     222
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    1858
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBapp_getrxByteFlag                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_setResponseReady                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Read                                          1     1      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    1750
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1589
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CMP1_Initialize
                  _EUSART_Initialize
                         _InitSwUart
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0       0
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              0 BANK0      2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitSwUart                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOTEapp_handlerState                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                         19    19      0   30176
                                             31 COMRAM    18    18      0
                           _CMP1_ISR
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                     _InterruptPinRX
                 _InterruptTimerUART
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR3_ISR
                        _TMRapp_Tick
                     _USBDeviceTasks
               _USBapp_setrxByteFlag
 ---------------------------------------------------------------------------------
 (11) _USBapp_setrxByteFlag                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USBDeviceTasks                                      1     1      0   30063
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (12) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (12) _USBWakeFromSuspend                                  0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBSuspend                                          0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPService                                    3     3      0   17698
                                             27 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfSetupHandler                              0     0      0   16631
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (14) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (14) _USBCheckStdRequest                                  0     0      0   12636
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStdSetCfgHandler                                 1     1      0    4401
                                             21 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (15) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (15) _USBStdFeatureReqHandler                             6     6      0    4286
                                             21 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3903
                                             13 COMRAM     8     2      6
                 _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
 ---------------------------------------------------------------------------------
 (13) _USBapp_CdcEmulatorInitialize                        1     1      0    1211
                                             12 COMRAM     1     1      0
                          _CDCInitEP
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (13) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfOutHandler                                0     0      0     499
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfRxService                                 2     2      0     499
                                             17 COMRAM     2     2      0
       _USART_mySetLineCodingHandler *
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfInHandler                                 1     1      0     500
                                             17 COMRAM     1     1      0
       _USART_mySetLineCodingHandler *
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USART_mySetLineCodingHandler                        4     4      0     385
                                             13 COMRAM     4     4      0
                            ___lldiv
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (14) i2_EUSART_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) ___lldiv                                            13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (11) _TMRapp_Tick                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR3_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _InterruptTimerUART                                  4     4      0      90
                                              1 COMRAM     4     4      0
                     _ReadyByteFrame
                         _TMR0_Clear
                     _TMR0_StopTimer
                             _inFIFO
                        _reloadTimer
 ---------------------------------------------------------------------------------
 (12) _inFIFO                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _TMR0_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ReadyByteFrame                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _InterruptPinRX                                      1     1      0      23
                                              1 COMRAM     1     1      0
                         _TMR0_Clear
                _clearInterruptPinRX
                        _reloadTimer
                  i2_TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (12) i2_TMR0_StartTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _reloadTimer                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _clearInterruptPinRX                                 1     1      0       1
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _TMR0_Clear                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CMP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _MOTEapp_handlerState
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _EUSART_Initialize
     _InitSwUart
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
     _TMR3_Initialize
       _TMR3_StartTimer
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _USBapp_Handler
     _USBapp_DeviceCdcEmulatorHandler
       _CDCTxService
         _USBTransferOnePacket
       _EUSART_Read
       _EUSART_Write
       _MOTEapp_setResponseReady
       _USBapp_getrxByteFlag
       _getsUSBUSART
         _USBTransferOnePacket
       _putUSBUSART
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_putString
       _moteApp_getLightString (ARG)
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putChar (ARG)
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
     _service_pushbutton
   _USBapp_handlerState
   _moduleResync
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _moteApp_delayms
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_clearCommand
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_delayms
   _moteHandler
     _ADC_TempConversion
       ___fladd
       ___fldiv
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
     _MOTEapp_TimerBasedTask
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _TMRapp_ClearBitFlags
     _TMRapp_Handler
       ___almod
       ___lwmod
     _USBapp_exitCDC
     _USBapp_exitCDCState
     _moteApp_convertSensorValue
       ___wmul
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
     _moteApp_getLightValue
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _moteApp_setLightString
         _memcpy
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _moteApp_getTempValue
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _moteApp_searchFrameGPS
       _emptyFIFO
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putStringLineN
         ___awdiv
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _oled_putint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _outFIFO
       _unhex
     _moteJoiningProcess
       _DATAEE_WriteByte
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
       _strcmp
       _strncmp
     _moteRunningProcess
       _ADC_TempConversion
         ___fladd
         ___fldiv
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _MOTEapp_SetDataRateSetting
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _TMR2_ReadTimer
       _moteApp_GoToSleep
         _EUSART_FlushBuffer
         _PIN_MANAGER_Initialize
         _moduleResync
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moduleSleep
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_delayms
         _oled_displayOff
           _oled_writeCommand
         _oled_init
           _oled_clear
             _oled_clearRow
               _oled_putChar
                 _Set_Column_Address
                   _oled_writeCommand
                 _Set_Page_Address
                   _oled_writeCommand
                 _oled_writeData
           _oled_devInit
             _oled_initialDispayLine
               _oled_writeCommand
             _oled_powerControl
               _oled_writeCommand
             _oled_regulorResistorSelect
               _oled_writeCommand
             _oled_setContrastControlRegister
               _oled_writeCommand
             _oled_writeCommand
           _oled_setDisplay
             _oled_writeCommand
           _oled_setFont
       _moteApp_add8bToDataBuffer
         ___awmod
         ___lbdiv
         _moteApp_lightStringSize (ARG)
       _moteApp_addToDataBuffer
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_clearBuffers
       _moteApp_convertSensorValue
         ___wmul
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_getTempValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_delayms
       _moteApp_getLightString
       _moteApp_getLightValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_lightStringSize
       _moteApp_setSensorsInput
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _oled_putUint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _sendDataCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
         _hexToStr
       _strcmp
       _strncmp
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_putString
       _moteApp_getLightString (ARG)
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putChar (ARG)
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
     _oled_putint8
       ___awmod
       ___lbdiv
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _service_pushbutton
   _oled_clear
     _oled_clearRow
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
   _oled_init
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_devInit
       _oled_initialDispayLine
         _oled_writeCommand
       _oled_powerControl
         _oled_writeCommand
       _oled_regulorResistorSelect
         _oled_writeCommand
       _oled_setContrastControlRegister
         _oled_writeCommand
       _oled_writeCommand
     _oled_setDisplay
       _oled_writeCommand
     _oled_setFont
   _oled_putString
     _moteApp_getLightString (ARG)
     _moteApp_getLightValue (ARG)
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _moteApp_setLightString
         _memcpy
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _oled_putChar (ARG)
       _Set_Column_Address
         _oled_writeCommand
       _Set_Page_Address
         _oled_writeCommand
       _oled_writeData
   _test_powerup
     _EUSART_FlushBuffer
     _moteApp_delayms
     _moteApp_testSensors
       _ADC_TempConversion
         ___fladd
         ___fldiv
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _moteApp_convertSensorValue
         ___wmul
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_getTempValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_getLightValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_setSensorsInput
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _oled_putint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_comms
       _delayms
       _moteApp_toggleLeds
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_leds
       _delayms
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_oled
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_switch
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData

 _INTERRUPT_InterruptManager (ROOT)
   _CMP1_ISR
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _InterruptPinRX
     _TMR0_Clear
     _clearInterruptPinRX
     _reloadTimer
     i2_TMR0_StartTimer
   _InterruptTimerUART
     _ReadyByteFrame
     _TMR0_Clear
     _TMR0_StopTimer
     _inFIFO
     _reloadTimer
   _TMR0_ISR
   _TMR1_ISR
   _TMR3_ISR
   _TMRapp_Tick
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USART_mySetLineCodingHandler *
           ___lldiv
           i2_EUSART_Initialize
         _USBCtrlTrfTxService *
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USART_mySetLineCodingHandler *
             ___lldiv
             i2_EUSART_Initialize
           _USBCtrlEPAllowStatusStage *
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             _USBapp_CdcEmulatorInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               i2_EUSART_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           _USBapp_CdcEmulatorInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             i2_EUSART_Initialize
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         i2_EUSART_Initialize
     i2_USBDeviceInit
       i2_memset
   _USBapp_setrxByteFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      C8      18       78.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C0       9       75.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5C      A0       5      100.0%
BITBANK5            80      0       0      15        0.0%
BANK5               80      0       0      16        0.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     31      5D       1       98.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     44D      14        0.0%
DATA                 0      0     44D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Mar 31 22:01:18 2018

                         _InterruptTimerUART 4438             __size_of_moteApp_lightStringSize 0004  
                                 _USB_SD_Ptr 75EB                                 ___fldiv@aexp 00A5  
                               ___fldiv@bexp 00A4                                 ___fldiv@sign 0099  
                      ??_moteApp_testSensors 00AC                                           l60 2F88  
                                         l65 2F8A                                           l57 2F08  
                                         l66 2F9C                            ??_CMP1_Initialize 0060  
                                         l67 2FB2                                   _USB_Buffer 0280  
                               ___awdiv@sign 0065                    _MOTEapp_getModuleResponse 5530  
                                         _cs 015E               moteJoiningProcess@selectButton 0079  
                              _USBDeviceInit 30F6                          ___wmul@multiplicand 0062  
                    EUSART_FlushBuffer@index 0060                       __end_of_oled_writeData 6146  
                       ??_moteApp_toggleLeds 0063                           __size_of_CDCInitEP 0066  
                            _timer0ReloadVal 0156                     USBapp_handlerState@state 0060  
                               __CFG_CP0$OFF 000000                                 __CFG_CP1$OFF 000000  
                               __CFG_CP2$OFF 000000                                 __CFG_CP3$OFF 000000  
                        ?_InterruptTimerUART 0001               __end_of_moteApp_setLightString 54C6  
       USER_USB_CALLBACK_EVENT_HANDLER@event 000E         USER_USB_CALLBACK_EVENT_HANDLER@pdata 0010  
                                        l111 5D42                                          l112 5D2A  
                                        l130 3660                                          l123 35EA  
                                        l127 3678                                          l128 360C  
                                        l401 24E6                                          l129 3636  
                                        l411 1962                                          l420 1502  
                                        l412 139C                                          l500 055C  
                                        l421 1544                                          l413 13AC  
                                        l501 057C                  __end_of_USBStdGetDscHandler 2E8E  
                                        l406 191A                                          l430 1622  
                                        l414 13B6                                          l510 06F8  
                                        l407 139A                                          l511 0706  
                                        l440 1756                                          l432 168C  
                                        l424 1586                                          l416 1452  
                                        l600 12BA                                          l520 0868  
                                        l353 4ED6                                          l601 12C0  
                                        l513 0744                                          l505 063C  
                                        l450 186E                                          l434 169C  
                                        l426 15AE                                          l418 14E4  
                                        l610 29BA                                          l506 087A  
                                        l514 0748                                          l451 187C  
                                        l443 176C                                          l611 29CA  
                                        l371 5FDE                                          l507 0666  
                                        l364 5D74                                          l436 16C4  
                                        l428 1612                                          l612 29DA  
                                        l356 4EF8                                          l700 4D0E  
                                        l540 0D3A                                          l532 0AB2  
                                        l524 08F4                                          l516 07DA  
                                        l508 0790                                          l621 6092  
                                        l365 5D5C                                          l453 18B0  
                                        l445 17D8                                          l613 29EA  
                                        l357 4F08                                          l541 0C6E  
                                        l533 0B4C                                          l525 0966  
                                        l381 22E4                                          l438 172A  
                                        l614 29FA                                          l702 4D32  
                                        l534 0B04                                          l518 0822  
                                        l382 22FA                                          l455 18C4  
                                        l447 184C                                          l607 2A3A  
                                        l615 2A0A                                          l359 4F1E  
                                        l551 0DBC                                          l543 0D64  
                                        l535 0B24                                          l383 2312  
                                        l800 2826                                          l616 2A1A  
                                        l608 29AA                                          l720 5652  
                                        l704 4D56                                          l560 0ECE  
                                        l544 0C90                                          l528 0A3A  
                                        l480 02F2                                          l392 24FA  
                                        l801 283C                                          l457 18CE  
                                        l609 2A74                                          l617 2A2A  
                                        l553 0DE2                                          l545 0CB2  
                                        l393 23F2                                          l385 2322  
                                        l642 5592                                          l706 4D7A  
                                        l482 1332                                          l570 0FFC  
                                        l562 0FEA                                          l546 0CD4  
                                        l538 0BE2                                          l386 2330  
                                        l811 2926                                          l459 18D8  
                                        l563 0EEE                                          l539 0D8C  
                                        l547 0CF6                                          l483 02FA  
                                        l475 02DE                                          l379 22DE  
                                        l652 5CD0                                          l812 2936  
                                        l724 5148                                          l740 51FC  
                                        l572 10E0                                          l580 10BE  
                                        l564 0F10                                          l548 0D18  
                                        l492 0376                                          l476 0288  
                                        l901 4100                                          l653 5CB8  
                                        l805 286C                                          l637 556E  
                                        l717 560A                                          l741 520E  
                                        l661 43B2                                          l581 110A  
                                        l573 1002                                          l565 0F32  
                                        l557 0E5C                                          l493 03E8  
                                        l397 2516                                          l389 23D4  
                                        l902 4052                                          l582 1160  
                                        l566 0F54                                          l478 0294  
                                        l398 23F4                                          l903 40BA  
                                        l671 5EFC                                          l807 290A  
                                        l719 563C                                          l727 5178  
                                        l663 442A                                          l559 0FBA  
                                        l567 0F76                                          l399 2462  
                                        l904 40C4                                          l808 28F2  
                                        l736 51C8                                          l664 43E8  
                                        l592 11A6                                          l584 1180  
                                        l576 1026                                          l568 0F98  
                                        l496 046C                                          l488 02FC  
                                        l737 51DA                                          l593 11C8  
                                        l585 117C                                          l577 104C  
                                        l906 40CA                                          l682 3EAC  
                                        l754 5880                                          l674 5EBC  
                                        l658 4390                                          l594 11EA  
                                        l578 1072                                          l498 0478  
                                        l931 3C40                                          l755 5892  
                                        l747 5A7A                                          l659 4378  
                                        l595 120C                                          l579 1098  
                                        l499 053E                                          l748 5A8C  
                                        l588 1272                                          l596 122E  
                                        _BDT 000400                                          l933 3C6E  
                                        l669 5EEA                                          l781 293E  
                                        l685 3F3E                                          l677 5ECE  
                                        l597 1250                                          l589 1186  
                                        l766 54A6                                          l598 12A2  
                                        l935 3CBE                                          l791 27AE  
                                        l695 39F4                                          _CKE 007E3E  
                                        l936 3CE6                                          l792 27EA  
                                        l784 2782                                          l688 3F4C  
                                        l785 279A                                          l794 27F0  
                                        l799 27FC                                          l992 5500  
                                        l896 40EA                                          l993 54FC  
                                        l897 4050                                          _CKP 007E34  
                                        _GIE 007F97                                          l997 5524  
                                        l989 5504                                          l998 5526  
                               __CFG_CPB$OFF 000000                          _oled_putStringLineN 5816  
                    ?_oled_initialDispayLine 0001                                          _PR2 000FBB  
                               __CFG_CPD$OFF 000000                           _moteJoiningProcess 138E  
                                        _UIE 000F64                                          _UIR 000F65  
                            _timer1ReloadVal 003A                                          _log 02E0  
                                 _USBSuspend 5F56                                 ___awmod@sign 0065  
               __end_of_moteApp_clearBuffers 4D92                 __end_of_moteApp_clearCommand 623C  
                       USBStdSetCfgHandler@i 0016                              _TMR2_Initialize 61C4  
                                        prod 000FF3                                          tosl 000FFD  
                                        wreg 000FE8                               _USBDeviceTasks 2FC4  
                             _USBDeviceState 00EB                                 ___flmul@aexp 0085  
                               ___flmul@bexp 0086                                 ___flmul@sign 0080  
                               ___flmul@temp 008B                                 ___flmul@prod 0087  
                      moteApp_delayms@length 0060                 MOTEapp_SetDataRateSetting@dr 0064  
                      ??_USBCtrlTrfRxService 0012                     __size_ofi2_USBDeviceInit 012E  
                             ??_getsUSBUSART 006A                                 ?_EUSART_Read 0001  
                   USBEnableEndpoint@options 0009                                 __CFG_LVP$OFF 000000  
                        ?_moteJoiningProcess 0078                                 ___fltol@exp1 0069  
                                       l1103 5236                                         l1113 6008  
                                       l1124 5FC2                                         l1303 5AF6  
                                       l1304 5B1A                                         l1305 5B18  
                                       l1321 59EC                                         l1242 5C40  
                                       l1411 6168                                         l1091 4F50  
                                       l1083 47F2                                         l1084 486C  
                                       l2301 2CE8                                         l2310 2D32  
                                       l2302 2CC6                                         l1246 61E6  
                                       l2400 49B8                                         l1096 581C  
                                       l2305 2D14                                         l2401 49C6  
                                       l2306 2CF2                                         l2402 49DC  
                            _timer3ReloadVal 0038                                         l2500 4E8C  
                                       l2309 2D2E                                         l1293 5BDE  
                                       l2261 46A6                                         l2501 4E9A  
                                       l1294 5BDC                                         l2262 46D2  
                                       l2263 46FE                                         l1296 5C06  
                                       l2264 46D8                                         l2512 53D0  
                                       l2257 4724                                         l2513 53DA  
                                       l2505 5396                                         l2514 53E8  
                                       l2506 53A2                                         l2291 2C42  
                                       l2259 469E                                         l2508 53B8  
                 USBConfigureEndpoint@handle 0007                                         l2293 2C5A  
                                       l2269 603A                                         l2509 53B0  
                                       l1629 5B84                                         l2294 2C64  
                                       l2295 2C92                                         l2287 2C4E  
                                       l2800 1F46                                         l2297 2D50  
                                       l2289 2C38                                         l2393 495E  
                                       l2298 2CA4                                         l2394 4972  
                                       l2562 3D9C                                         l2554 3D0C  
                                       l2299 2CA8                                         l2563 3D90  
                                       l1932 313C                                         l2396 4990  
                                       l2492 4E34                                         l2812 1FD2  
                                       l2556 3D78                                         l2397 4984  
                                       l2493 4E44                                         l2813 1FDA  
                                       l2805 1F66                                         l2565 3DB8  
                                       l2557 3D68                                         l2901 2AFC  
                                       l1934 3176                                         l2742 59CA  
                                       l2654 5ABE                                         l2814 1FDC  
                                       l2822 202A                                         l2902 2B0C  
                                       l1935 3164                                         l2743 59D4  
                                       l2495 4E62                                         l2655 5AB8  
                                       l2831 20D8                                         l2823 2026  
                                       l2911 2BAC                                         l2903 2B2A  
                                       l2496 4E5A                                         l2808 1FAC  
                                       l2840 219C                                         l2832 2186  
                                       l2912 2BA0                                         l2752 5986  
                                       l1937 319E                                         l2833 2136  
                                       l2905 2B3C                                         l2753 5964  
                                       l2738 59B2                                         l2658 5AD4  
                                       l2770 1D34                                         l2850 2284  
                                       l2834 215E                                         l2826 206A  
                                       l2906 2B30                                         l2739 59AA  
                                       l2499 4E82                                         l2659 5ADC  
                                       l2771 1D30                                         l2851 2290  
                                       l2827 2066                                         l1972 4514  
                                       l2780 1DFC                                         l2852 2292  
                                       l2836 2184                                         l2860 19DA  
                                       l2916 2BCA                                         l2908 2B7A  
                                       l2773 1D90                                         l2765 1CEC  
                                       l2829 20B0                                         l2861 19D6  
                                       l2917 2BFC                                         l2909 2B62  
                                       l2758 5E00                                         l1974 453E  
                                       l2774 1D54                                         l2766 1CE8  
                                       l2846 21F2                                         l2862 19EA  
                                       l2759 5DEE                                         l2791 1EF2  
                                       l2783 1E6A                                         l2839 21BA  
                                       l2863 1A08                                         l1976 459A  
                                       l2784 1E30                                         l2848 2236  
                                       l2880 1CA4                                         l2856 199A  
                                       l2793 1F02                                         l2777 1E0C  
                                       l2849 225A                                         l2857 1996  
                                       l1994 5D12                                         l2778 1DEA  
                                       l2874 1C00                                         l2858 19AA  
                                       l1995 5D10                                         l2787 1E54  
                                       l2779 1DF8                                         l2867 1BC8  
                                       l2884 58C2                                         l2892 4E02  
                                       l2796 1F26                                         l2788 1E58  
                                       l2876 1C44                                         l2868 1BAA  
                                       l2885 58B8                                         l2893 4D94  
                                       l2877 1C62                                         l2894 4DFA  
                                       l2798 1F3C                                         l2879 1C86  
                                       l8061 4F48                                         l8071 5AE4  
                                       l8347 5964                                         l8197 6000  
                                       l8701 59E4                                         l9285 2284  
                                       l9805 4D2A                                         l9719 5140  
                                       l9817 4D4E                                         l9763 4D94  
                                       l8779 549E                                         l9829 4D72  
                                       l9917 43AA                                         STR_1 7D1F  
                                       STR_2 7D01                                         l9793 4D06  
                                       STR_3 7D10                                         STR_4 7F3E  
                                       l9867 5602                                         STR_5 7D8B  
                                       STR_6 7D98                                         STR_7 7CC4  
                                       STR_8 7E71                                         STR_9 7F47  
                            _lightStringSize 0052                                         _LATD 000F8C  
            __size_of_MOTEapp_TimerBasedTask 0020                                         _PEIE 007F96  
                                       u7120 1E14                                         u7070 1DC0  
                                       u7080 1DD0                                         u7330 1FB8  
                                       u7250 1F4A                                         u7090 1DD2  
                                       u8220 51A6                                         u9020 35C8  
                                       u8125 5B94                                         u8126 5B96  
                                       u8070 2BB6                                         u8310 4D26  
                      ??_USBCtrlTrfTxService 0001                                         u7280 1F62  
                                       u6720 5A04                                         u8160 589C  
                                       u8330 4D4A                                         u8410 5218  
                                       u9300 54D4                                         u8260 4DC4  
                                       u7540 21EE                                         u8180 5A96  
                                       u6670 5256                                         u8350 4D6E  
                                       _UCFG 000F62                                         u8440 5656  
                                       u6690 5284                                         u8290 58F8  
                                       u7570 2244                                         u7730 1BFC  
                                       u8700 2C2C                                         u7820 4E66  
                                       u7580 2268                                         u8540 3F1C  
                                       _UEP0 000F6A                                         u6677 524C  
                                       _UEP1 000F6B                                         u7670 19F6  
                                       u6790 54C2                                         u8390 51E4  
                                       u8470 43CE                                         u8640 4692  
                                       u7760 1C52                                         u7680 1B6C  
                                       u7920 3D2A                                         u6697 527A  
                                       u7770 1C70                                         _UEIE 000F66  
                                       u8708 2C30                                         u7685 1B62  
                                       u7925 3D20                                         u8648 4696  
                                       u7880 53BC                                         u7960 3DA2  
                                       u9580 18E0                                         u9820 074C  
                                       u9740 058A                                         u9660 030A  
                                       u8790 2D1C                                         u8950 4994  
                                       u7990 5AC2                                         u9910 0A46  
                                       _UEIR 000F67                                         _UCON 000F60  
                                       u8990 59B6                                         u9870 0888  
                                       _TMR0 000FD6                                         _TMR2 000FBC  
                                       _TMR3 000FB2                                         u9990 0DF0  
                            _CDCDataInHandle 0032       USBStdFeatureReqHandler@current_ep_data 0019  
                       ??_InterruptTimerUART 0002                                         _pDst 0154  
                                       _main 2E8E                     ??i2_USBTransferOnePacket 0005  
                            _TMR0_StartTimer 62EA            __end_of_moteApp_add8bToDataBuffer 47E0  
                       ?_oled_putStringLineN 006C                                         fsr0h 000FEA  
                                       fsr1h 000FE2                                         indf0 000FEF  
                                       fsr2h 000FDA                                         fsr0l 000FE9  
                                       indf1 000FE7                                  _BaudRateGen 0146  
                                       indf2 000FDF                                         fsr1l 000FE1  
                                       fsr2l 000FD9                              _USBDeviceAttach 5CEA  
                                       btemp 005E                                __CFG_BORV$190 000000  
               moteApp_addToDataBuffer@index 0075                                         prodh 000FF4  
                                       prodl 000FF3                         _USBapp_setrxByteFlag 62B8  
                                       start 00FE                                __CFG_IESO$OFF 000000  
                            ___fldiv@new_exp 009E                              __end_of_EndLine 624A  
                            _TMR3_Initialize 603E                                  _storedLight 01F5  
                __end_of_USBapp_exitCDCState 6282                             __end_of_CMP1_ISR 6302  
                            ?_oled_putString 0072                   __end_of_USBCheckStdRequest 3B2A  
                     ??_USBCtrlTrfOutHandler 0014                  __size_of_moteRunningProcess 128C  
                           ?_oled_setDisplay 0001                                __CFG_MCLRE$ON 000000  
                               ___param_bank 000000                    ??_USBStdFeatureReqHandler 0016  
                                _TMRapp_Tick 62D4                         ??_moteJoiningProcess 007A  
                     moteApp_delayms@counter 0063                ?_USART_mySetLineCodingHandler 0001  
                     sendDataCommand@appData 0063                            sendCommand@string 0061  
                   ??_USBStdGetStatusHandler 0001                 __end_of_USBapp_getrxByteFlag 62D4  
                  __size_of_DATAEE_WriteByte 003C                               ?_USBDeviceInit 0001  
                    __end_of_TMR0_Initialize 60C2                       _moteApp_getLightString 624A  
                              ?_EUSART_Write 0001               __size_of_OSCILLATOR_Initialize 0016  
             __end_of_oled_initialDispayLine 622C                              ?_oled_writeData 0001  
              __end_of_OSCILLATOR_Initialize 6172                                        l11109 06FE  
                                      l10805 1726                                        l10727 14E0  
                                      l11563 5DEE                                        l10827 17D4  
                                      l11741 3134                                        l10773 161E  
                                      l10855 18AC                                        l10839 1848  
                                      l10789 1698                                        l11769 3196  
                              ___fltol@sign1 0068                              __end_of___almod 49EE  
                            __end_of___fladd 1FF8                                        ?_main 0001  
                            __end_of___fldiv 22AE                              __end_of___awdiv 4EA4  
                            __end_of___lbdiv 5AE0                                        _EEADR 000FA9  
                                      STR_10 7DF5                                        STR_11 7E7D  
                                      STR_20 7F50                                        STR_12 7E1C  
                                      STR_21 7FFD                                        STR_13 7E02  
                                      STR_30 7EFD                                        STR_14 7E0F  
                                      STR_22 7A83                                        STR_23 7AC8  
                                      STR_31 7FB9                                        STR_15 7EC0  
                                      STR_16 7F07                                        STR_24 7EDF  
                                      STR_32 7B44                                        STR_40 7ABC  
                                      STR_17 7F59                                        STR_25 7F35  
                                      STR_41 7DE8                                        STR_33 7B99  
                                      STR_18 7F6A                                        STR_50 7ED5  
                                      STR_26 7BAA                                        STR_34 7AEF  
                                      STR_42 7ADE                                        STR_35 7FBE  
                                      STR_19 7F72                                        STR_51 7E9F  
                                      STR_43 7D3C                                        STR_27 7BFF  
                                      STR_36 7B44                                        STR_60 7F23  
                                      STR_44 7FF8                                        STR_52 7EF3  
                                      STR_28 7C10                              __end_of___awmod 53F2  
                                      STR_37 7B99                                        STR_53 7FF8  
                                      STR_61 7E89                                        STR_45 7D58  
                                      STR_29 7B33                                        STR_38 7AEF  
                                      STR_62 7E9F                                        STR_70 7EAA  
                                      STR_54 7D58                                        STR_46 7EB5  
                                      STR_55 7EB5                                        STR_39 7EFD  
                                      STR_63 7F96                                        STR_47 7F1A  
                                      STR_71 7C32                                        STR_80 7C84  
                                      STR_56 7F1A                                        STR_48 7DE8  
                                      STR_64 7EE9                                        STR_72 7E35  
                                      STR_65 7F8F                                        STR_49 7F23  
                                      STR_73 7D73                                        STR_57 7D4A  
                                      STR_81 7BDD                                        STR_66 7D3C  
                                      STR_58 7D3C                                        STR_90 7FAB  
                                      STR_82 7D66                                        STR_74 7D2E  
                                      STR_67 7E94                                        STR_59 7E94  
                                      STR_91 7B55                                        STR_75 7B22  
                                      STR_83 7AAA                                        STR_84 7D2E  
                                      STR_68 7EAA                                        STR_76 7B88  
                                      STR_92 7ACD                                        STR_69 7D4A  
                                      STR_93 7FB2                                        STR_85 7E65  
                                      STR_77 7C84                                        STR_86 7E4D  
                                      STR_94 7BBB                                        STR_78 7B11  
                                      STR_95 7FA4                                        STR_87 7E41  
                                      STR_79 7B00                                        STR_88 7D73  
                                      STR_96 7A97                              __end_of___flmul 1CBA  
                                      STR_89 7FF8                                        STR_97 7F9D  
                                      STR_98 7CB4                                        STR_99 7B22  
          __size_of_USBCtrlEPServiceComplete 00F2                              __end_of___fltol 3DCA  
                            _TMR1_StartTimer 62E6                              __end_of___lldiv 50B2  
                                      u10430 3158                                        u10520 410C  
                                      u10610 234C                                        u10460 31FA  
                            ___awdiv@divisor 0062            __size_of_MOTEapp_setResponseReady 0008  
                                      _T1CON 000FCD                       __end_of_USBDeviceTasks 30F6  
                                      u11507 39B6                                        u11517 39C8  
                                      u11607 50EA                                        u11527 39DA  
                                      _T2CON 000FBA                                        u11617 5FEA  
                                      u11537 3A0A                                        u11707 190C  
                                      u11627 297A                                        u11547 3A1C  
                                      u11467 3670                                        u11717 5D64  
                                      u11637 298C                                        u11557 3A2E  
                                      u11477 396C                                        u11647 299E  
                                      u11567 5D32                                        u11487 397E  
                    __end_of_sendDataCommand 4438                                        _T3CON 000FB1  
                                      u11657 2A7C                                        u11577 0870  
                                      u11497 3990                                        u11667 2A8E  
                                      u11587 50C2                                        u11677 2AA0  
                                      u11597 50D6                                        u11687 18E8  
                                      u11697 18FA                    ?_USBCtrlEPServiceComplete 0001  
                            __end_of___lwmod 59DE                    ?_MOTEapp_setResponseReady 0001  
                        oled_putUint8@number 007A                                        i2l921 579E  
                                      _UADDR 000F63                              ___awdiv@counter 0064  
                                      i2l974 565C                                        i2l968 5668  
                                      i2l976 5662                                        _RCREG 000FAE  
                                      _RCSTA 000FAB                                        _TMR1H 000FCF  
                                      _TMR3H 000FB3                                        _TMR1L 000FCE  
                                      _TMR3L 000FB2                                        _SPBRG 000FAF  
                                      _PORTB 000F81                                        _TRISD 000F95  
    moteApp_add8bToDataBuffer@bufferLocation 0066                                        _USTAT 000F61  
                                      _TXREG 000FAD                                        _TXSTA 000FAC  
                              __CFG_WRT0$OFF 000000           __size_of_USBCtrlEPAllowStatusStage 00C4  
                            __end_of_delayms 5D50                                __CFG_WRT1$OFF 000000  
                              __CFG_WRT2$OFF 000000                                __CFG_WRT3$OFF 000000  
                                ?_TMR0_Clear 0001                               __CFG_EBTR0$OFF 000000  
                             __CFG_FCMEN$OFF 000000                               __CFG_EBTR1$OFF 000000  
                             __CFG_EBTR2$OFF 000000                               __CFG_EBTR3$OFF 000000  
            __end_of_USBCtrlEPAllowDataStage 4BD8                            oled_putChar@index 006B  
                           __end_of_TMR0_ISR 62F2                             __end_of_TMR1_ISR 6262  
                                      _sd000 79B5                                        _sd001 796F  
            service_pushbutton@Release_Timer 0050                                        _sd002 793B  
                              __CFG_WRTB$OFF 000000                             __end_of_TMR3_ISR 60E0  
                              __CFG_WRTC$OFF 000000                                __CFG_WRTD$OFF 000000  
                            _DATAEE_ReadByte 6172                               __CFG_EBTRB$OFF 000000  
                                 i2memset@p1 0001                                        _n_bit 005B  
                                      _light 015A                          _clearInterruptPinRX 6262  
                                      _unhex 5ED2                              __end_of_outFIFO 5C46  
                                      _stops 015F                               __pbitbssCOMRAM 02E0  
                    __end_of_TMR1_Initialize 5DB4                                 _runningState 00F3  
                                      pclath 000FFA                                        tablat 000FF5  
                                      plusw2 000FDB                            __end_of_CDCInitEP 55FC  
                 oled_setDisplay@displayType 0061                        ??_oled_putStringLineN 006E  
                                      status 000FD8                               __CFG_T3CMX$RC0 000000  
                                      wtemp6 005F                              _TMR2_StartTimer 62E2  
                            __end_of_strncmp 4E1E                              ___lbdiv@divisor 0060  
                             __CFG_ICPRT$OFF 000000                        ?_USBapp_setrxByteFlag 0001  
                           __end_ofi2_memset 5F2C                              ___lbdiv@counter 0062  
                               _m10SecTicker 0158                 __end_of_moteApp_getTempValue 5AA2  
                            putUSBUSART@data 0060           USART_mySetLineCodingHandler@dwBaud 000E  
               __size_of_USBStdSetCfgHandler 00E2                              __initialization 4A96  
                      TMR2_ReadTimer@readVal 0060                __size_of_TMRapp_ClearBitFlags 0008  
                                 _InitSwUart 6060                                 __end_of_main 2FC4  
                      _control_signal_bitmap 015C                         ?_clearInterruptPinRX 0001  
              __size_of_MOTEapp_handlerState 000A                       _MOTEapp_TimerBasedTask 6082  
                             ??_EUSART_Write 0060                      __end_of_TMR2_Initialize 61D8  
                               ?_sendCommand 0061                  ?_INTERRUPT_InterruptManager 0001  
                  __size_of_USBCtrlEPService 00CE                                       ??_main 00BC  
                               ?_moduleSleep 0001                                 ?_moteHandler 0001  
           __size_of_moteApp_addToDataBuffer 005E                              _TMR3_StartTimer 62DE  
                              __activetblptr 000003                              ?_USBDeviceTasks 0001  
                        i2_EUSART_Initialize 5C7E                    sendDataCommand@dataLength 0065  
                                ?_USBSuspend 0001                                   _NextUSBOut 00E8  
                               ?_reloadTimer 0001                               __CFG_SDOMX$RB3 000000  
                            __CFG_CCP2MX$RC1 000000                                 _cdc_mem_type 0040  
           moteApp_convertSensorValue@string 0072                      __end_of_TMR0_StartTimer 62EE  
                    __end_of_USBDeviceAttach 5D1E                                       _ADCON0 000FC2  
                                     _ADCON1 000FC1                                       _ADCON2 000FC0  
                           _CDCDataOutHandle 00D6                            _getsUSBUSART$6669 006B  
                                     _ACTCON 000FB5                                       STR_100 7B88  
                                     STR_101 7C84                                       STR_110 7C84  
                                     STR_102 7C64                                       STR_103 7C54  
                                     STR_111 7C21                                       STR_104 7C84  
                                     STR_112 7CD4                                       STR_120 7B66  
                                     STR_121 7F88                                       STR_113 7CE3  
                                     STR_105 7C43                                       STR_130 7CE3  
                                     STR_122 7FC3                                       STR_106 7ECB  
                                     STR_114 7C74                                       _ADRESH 000FC4  
                                     STR_131 7CD4                                       STR_115 7C64  
                                     STR_107 7E52                                       STR_123 7DCC  
                                     STR_132 7C64                                       STR_108 7B11  
                                     STR_124 7FE1                                       STR_140 7FD0  
                                     STR_116 7F81                                       STR_133 7C54  
                                     STR_109 7B00                                       STR_125 7FED  
                                     STR_141 7FD4                                       STR_117 7F7A  
                                     STR_134 7C84                                       STR_126 7FE5  
                                     STR_150 7FF0                                       STR_118 7FFB  
                                     STR_142 7FD8                                       _ADRESL 000FC3  
                                     STR_127 7FE9                                       STR_143 7FDC  
                                     STR_135 7BEE                                       STR_151 7BCC  
                                     STR_119 7B77                                       STR_160 7B22  
                                     STR_144 7FF4                                       STR_128 7FF0  
                                     STR_136 7E59                                       STR_152 7C94  
                                     STR_137 7C74                                       STR_129 7C74  
                                     STR_153 7FC8                                       STR_145 7FDC  
                                     STR_161 7B88                                       STR_162 7C84  
                                     STR_154 7FCC                                       STR_146 7FE0  
                                     STR_138 7FC8                                       STR_170 7DCE  
                                     STR_155 7FD0                                       STR_147 7FEC  
                                     STR_139 7FCC                                       STR_171 7DDB  
                                     STR_163 7CA4                                       STR_156 7FD4  
                                     STR_180 7F72                                       STR_148 7FE4  
                                     STR_164 7D80                                       STR_172 7CF2  
                                     STR_157 7FD8                                       STR_181 7F6A  
                                     STR_149 7FE8                                       STR_173 7F2C  
                                     STR_165 7D8D                                       _EEDATA 000FA8  
                                     STR_174 7A06                                       STR_182 7AC8  
                                     STR_158 7FDC                                       STR_166 7D9A  
                                     STR_159 7FF4                                       STR_167 7DA7  
                                     STR_175 7A23                                       STR_183 79D4  
                                     STR_168 7DB4                                       STR_176 7A3D  
                                     STR_184 79B9                                       STR_169 7DC1  
                                     STR_185 7A57                                       STR_177 79EF  
                                     STR_186 7A6D                                       STR_178 7A09  
                                     STR_179 7F59                                       STR_187 7F11  
                                     STR_188 7F62                                       STR_189 7E29  
                                     _EECON2 000FA7                             ___awdiv@dividend 0060  
                                     ?_unhex 0001                              getsUSBUSART@len 0069  
                                     _T1GCON 000FCC                         oled_putUint8@numData 007B  
                                     _T3GCON 000FB4                        __size_of_CDCTxService 0146  
                                     i2l1202 594C                                       i2l1210 44F4  
                                     i2l2002 42FA                                       i2l2010 4BA4  
                                     i2l1211 4474                                       i2l1212 449A  
                                     i2l2020 37A6                      __end_of_TMR3_Initialize 6060  
                                     i2l1213 44A0                                       i2l1310 5E6C  
                                     i2l1206 44D8                                       i2l2014 4CCE  
                                     i2l2110 41D6                                       i2l1215 44AC  
                                     i2l1207 445A                                       i2l2111 4176  
                                     i2l2103 5E3E                                       i2l1208 446A  
                                     i2l2008 4B88                                       i2l2024 3822  
                                     i2l2104 5E3C                                       i2l2041 4046  
                                     i2l2033 3F9A                                       i2l1218 44B4  
                                     i2l2042 400E                                       i2l2130 3DFA  
                                     i2l2122 56C4                                       i2l1315 5E7E  
                                     i2l1235 5B44                                       i2l1219 44CE  
                                     i2l2035 3FA4                                       i2l2131 3E00  
                                     i2l2051 3418                                       i2l2019 37FC  
                                     i2l2132 3E7A                                       i2l2052 33FE  
                                     i2l2124 570C                                       i2l2060 3B74  
                                     i2l1317 5EA0                                       i2l1309 5E70  
                                     i2l2037 4006                                       i2l2133 3E40  
                                     i2l2109 41DC                                       i2l2038 3FCE  
                                     i2l2062 3BE8                                       i2l2150 3A6E  
                                     i2l2135 3E60                                       i2l2071 2D7A  
                                     i2l2151 3A82                                       i2l2048 33A4  
                                     i2l2240 48FA                                       i2l2072 2E08  
                                     i2l2152 3A88                                       i2l2049 3382  
                                     i2l2241 4912                                       i2l2081 4A6A  
                                     i2l2145 3AE6                                       i2l2138 3EA0  
                                     i2l2162 2540                                       i2l2074 2E10  
                                     i2l2082 49FA                                       i2l2154 3A8E  
                                     i2l2146 3A58                                       i2l1370 00A2  
                                     i2l1362 0060                                       i2l2235 491C  
                                     i2l2171 2688                                       i2l2163 2544  
                                     i2l2075 2E66                                       i2l2155 3AAC  
                                     i2l1363 006C                                       i2l2236 48B6  
                                     i2l2068 2E76                                       i2l2156 3AC8  
                                     i2l2148 3A62                                       i2l1372 00AE  
                                     i2l2181 2708                                       i2l2173 2652  
                                     i2l2165 25AE                                       i2l2077 2E6E  
                                     i2l2069 2D66                                       i2l2085 4A80  
                                     i2l2149 3A68                                       i2l1373 00B2  
                                     i2l1365 007C                                       i2l2238 48CE  
                                     i2l2174 266E                                       i2l2086 4A0A  
                                     i2l2239 48DC                                       i2l2183 275A  
                                     i2l2167 25EE                                       i2l2087 4A10  
                                     i2l2095 5A5E                                       i2l1367 0088  
                                     i2l2176 26CE                                       i2l2168 25F0  
                                     i2l2088 4A2E                                       i2l2096 5A5C  
                                     i2l2177 26DA                                       i2l2169 2608  
                                     i2l1369 0092                                       i2l2178 274E  
                                     i2l1762 60D4                                       i2l1932 3268  
                                     i2l1934 32A4                                       i2l1950 3032  
                                     i2l1935 3290                                       i2l1943 2FDA  
                                     i2l2680 50A0                                       i2l1960 30B2  
                                     i2l1952 3042                                       i2l1944 2FE6  
                                     i2l1937 32CA                                       i2l1953 304C  
                                     i2l1945 2FEE                                       i2l1962 30D2  
                                     i2l1954 3070                                       i2l2675 505E  
                                     i2l1955 307C                                       i2l1947 3002  
                                     i2l2676 5052                                       i2l1972 45CE  
                                     i2l1964 30EE                                       i2l1948 300E  
                                     i2l1957 308C                                       i2l1974 45F8  
                                     i2l2758 5F1A                                       i2l2679 5092  
                                     i2l1967 5BA8                                       i2l2759 5F0A  
                                     i2l1968 5BB6                                       i2l1976 4654  
                                     i2l8103 5796                                       i2l8241 3FA4  
                                     _TABLAT 000FF5                                       i2l8295 5F0A  
                                     i2l8475 3B6C                    moteApp_searchFrameGPS@ccs 0084  
                                  ??_EndLine 0061                                       _OSCCON 000FD3  
                              CDCTxService@i 006A                                       _SPBRGH 000FB0  
                                     _SSPBUF 000FC9                             __end_of___xxtofl 2C0E  
                   i2USBTransferOnePacket@ep 0005                            ??i2_USBDeviceInit 0009  
            __size_ofi2_USBTransferOnePacket 00BA                         ?i2_EUSART_Initialize 0001  
                       oled_displayOff@state 0001                                oled_putChar@k 006A  
             __size_of_moteApp_getLightValue 004E                __end_of_moteApp_getLightValue 58B6  
                          _shortPacketStatus 004B                        InterruptTimerUART@aux 0004  
             moteRunningProcess@changeStates 00B5                               __CFG_XINST$OFF 000000  
                       _moteApp_clearBuffers 4D00                         _moteApp_clearCommand 622C  
                    _moteApp_lightStringSize 62DA                 ??_MOTEapp_SetDataRateSetting 0063  
                            USBDeviceTasks@i 001F                   __end_of_Set_Column_Address 60FC  
                USBStdFeatureReqHandler@pUEP 0017                             __end_of_hexToStr 5ED2  
                        __size_of_TMR0_Clear 0004                     USBTransferOnePacket@data 0061  
                 USBCtrlTrfInHandler@lastDTS 0012                              ??_USBDeviceInit 0068  
                  __size_of_Set_Page_Address 0014                                       _inFIFO 5B1E  
                    __end_of_TMR1_StartTimer 62EA                                 ?_putUSBUSART 0060  
                      ??_clearInterruptPinRX 0001                                    ??___almod 0068  
                                  ??___fladd 0068                                       ___wmul 5F80  
                                  ??___fldiv 0095                                    ??___awdiv 0064  
                                  ??___lbdiv 0061                               __CFG_STVREN$ON 000000  
                                  ??___awmod 0064                     ?_moteApp_setSensorsInput 0001  
                                  ??___flmul 007C                                    ??___fltol 0064  
                                  ??___lldiv 0009                                       _appKey 0100  
                       __end_of_getsUSBUSART 472A                                    ??___lwmod 0064  
                          _USBEnableEndpoint 5B98              __size_of_USBStdGetStatusHandler 00A8  
                        _EUSART_Transmit_ISR 5E44                                       _memcpy 5952  
                           ?_TMR0_Initialize 0001                                       _memset 5DE4  
                                     clear_0 4AEC                                       clear_1 4AF8  
                                     clear_2 4B04                                       clear_3 4B10  
                                     clear_4 4B1C                                       clear_5 4B2A  
                                     _parity 0160                             ___awdiv@quotient 0066  
                            ___awmod@divisor 0062                                    ??_delayms 0062  
                            ___awmod@counter 0064                           ?_USBEnableEndpoint 0009  
             ??_USART_mySetLineCodingHandler 000E                                       _status 004F  
                    __end_of_DATAEE_ReadByte 6188                                       _strcmp 58B6  
                 __end_of_ADC_TempConversion 3960                __size_of_USBTransferOnePacket 00BE  
                           ?_sendDataCommand 0061                                 _dataFrameGPS 0300  
                            _moteApp_delayms 5D50                  __size_of_service_pushbutton 006A  
                               __pdataCOMRAM 005D                                 _CDCTxService 2C0E  
                                  ??_outFIFO 0060                                 __mediumconst 75EA  
                                     tblptrh 000FF7                                       tblptrl 000FF6  
                                     tblptru 000FF8                          ??_USBEnableEndpoint 000A  
                    __size_of_ReadyByteFrame 0002                                       unhex@c 0060  
                                  ?_CMP1_ISR 0001                      __end_of_TMR2_StartTimer 62E6  
                               _dataRateRead 0053                                  _CtrlTrfData 000438  
                                  ??_strncmp 0066                             ___lbdiv@dividend 0061  
                              ?_oled_devInit 0001                         ?_EUSART_Transmit_ISR 0001  
                       _controlTransferState 004A                    USBapp_Handler@buttonPress 0078  
                       _USBapp_getrxByteFlag 62CE                             ?_TMR1_Initialize 0001  
                       __CFG_LS48MHZ$SYS48X8 000000          __size_of_MOTEapp_SetDataRateSetting 0162  
                               ___xxtofl@arg 006A                         __size_of_EUSART_Read 003A  
                               ___xxtofl@exp 0069                            _SYSTEM_Initialize 5F2C  
                               ___xxtofl@val 0060                 __size_of_USBapp_handlerState 000A  
         moteApp_getLightValue@escapeCounter 0070                                   __accesstop 0060  
                    __end_of__initialization 4B30                       ??_USBapp_setrxByteFlag 0001  
                            __CFG_PBADEN$OFF 000000                                 ?_test_switch 0001  
                      ??i2_EUSART_Initialize 0001                              _CMP1_Initialize 61EA  
                         ?_SYSTEM_Initialize 0001                           oled_writeData@data 0060  
                              ___rparam_used 000001                                ?_oled_setFont 0060  
                   __size_of_USBStallHandler 0042                                   ___fltol@f1 0060  
                              ?_oled_putChar 0062                        ?_moteApp_clearBuffers 0001  
                      ?_moteApp_clearCommand 0001                          __size_of_USBSuspend 002A  
                __size_of_EUSART_FlushBuffer 0042                                ?_oled_putint8 0078  
                             __pcstackCOMRAM 0001                    __end_of_USBEnableEndpoint 5BD4  
                                ?_InitSwUart 0001                             __CFG_nPWRTEN$OFF 000000  
                              __end_of_sd000 79B9                                __end_of_sd001 79A3  
                              __end_of_sd002 796F                                 __pidataBANK0 62C0  
                               __pidataBANK1 6302                          ??_SYSTEM_Initialize 0062  
                    __end_of_TMR3_StartTimer 62E2                                    ?_TMR0_ISR 0001  
                                  ?_TMR1_ISR 0001                                    ?_TMR3_ISR 0001  
           __size_of_USBCtrlEPAllowDataStage 009E                             _DATAEE_WriteByte 5B5C  
                    oled_putStringLineN@page 006F                __size_of_USBConfigureEndpoint 0094  
    __end_of_oled_setContrastControlRegister 61B0     __size_of_oled_setContrastControlRegister 0014  
           ?_oled_setContrastControlRegister 0001            ??_oled_setContrastControlRegister 0061  
            _oled_setContrastControlRegister 619C                                __end_of_unhex 5F00  
                __end_of_USBCtrlTrfInHandler 3EA6                             ?_TMR2_Initialize 0001  
                           ___lbdiv@quotient 0063         moteApp_setSensorsInput@escapeCounter 0065  
                     i2_USBTransferOnePacket 45B8                              __CFG_PCLKEN$OFF 000000  
                             __CFG_nLPBOR$ON 000000                            __end_of_OledFont0 78F8  
                          _CDCTxService$6717 0068                                   _cdc_notice 01D7  
                                  ?i2_memset 0001                                   _cdc_rx_len 00DD  
                                 _cdc_tx_len 00DC                         _moteApp_getTempValue 5A62  
                                 ??_CMP1_ISR 0001                              _responsePortNum 01FA  
                   ??_USBCtrlTrfSetupHandler 001C                                   _dataBuffer 01C7  
                           ?_TMR0_StartTimer 0001                               ??_oled_devInit 0062  
                           ?_USBDeviceAttach 0001                    __end_of_SYSTEM_Initialize 5F56  
                      ??_EUSART_Transmit_ISR 0001                       _USBStdGetStatusHandler 49EE  
                                    ??_unhex 0060                                ?_moduleResync 0001  
                      ?_USBapp_getrxByteFlag 0001                         service_pushbutton@bs 0060  
                                 __pbssBANK0 00BC                           __size_of_emptyFIFO 0012  
                                 __pbssBANK1 0100                                   __pbssBANK2 0200  
                                 __pbssBANK3 0300                                   __pbssBANK6 0600  
                       __end_of_EUSART_Write 5B1E                      __size_of_TMR2_ReadTimer 000A  
                           ?_TMR3_Initialize 0001                             ??_oled_putString 0077  
                oled_regulorResistorSelect@r 0061                      moduleResync@escapeEvent 0067  
                                 inFIFO@data 0001                               ??_oled_setFont 0062  
               ??_moteApp_convertSensorValue 0074                              _periodicUpValue 00FE  
                  ??_moteApp_lightStringSize 0060                  __size_of_EUSART_Receive_ISR 0030  
                        oled_putString@index 0077                               ??_oled_putChar 0064  
                __size_of_USBWakeFromSuspend 0030                                  _pBDTEntryIn 00CA  
                     __size_of_oled_clearRow 0026                                   _clearLight 01F0  
                __end_of_moteApp_testSensors 3784                     sendDataCommand@byteCount 0067  
                              outFIFO@retVal 0060             __end_of_USBCtrlEPServiceComplete 3876  
           __end_of_MOTEapp_setResponseReady 62B8                               ??_oled_putint8 007A  
                     oled_putChar@start_page 0063                  __size_of_USBCheckCDCRequest 00B0  
                          __CFG_PLLSEL$PLL3X 000000                           __size_of_oled_init 0030  
                    ?_moteApp_getLightString 0060                             ??_oled_writeData 0060  
                       USBCtrlTrfRxService@i 0012                                 ?_TMRapp_Tick 0001  
                                    ?_inFIFO 0001                      __size_of_TMR0_StopTimer 0004  
                                    ?___wmul 0060                             ?_TMR1_StartTimer 0001  
                                 ??_TMR0_ISR 0001                                   ??_TMR1_ISR 0001  
                                 ??_TMR3_ISR 0001                      __end_of_moteApp_delayms 5D82  
                                    _CM1CON0 000F98                      __size_of_USBapp_Handler 00D0  
                    __size_of_TMRapp_Handler 010C                                      ?_memcpy 0060  
                                    _BAUDCON 000FB8                                      ?_memset 0060  
                                 _device_dsc 79A3                    Set_Column_Address@address 0061  
                   __size_of_oled_displayOff 0008                             _USBCtrlEPService 411E  
                    _moteApp_addToDataBuffer 55FC                     ??_moteApp_searchFrameGPS 0082  
                __size_of_moteApp_toggleLeds 00E8                                   _ep_data_in 00D3  
                    __size_of_ADC_Initialize 001A                                      ?_strcmp 0060  
                           ?_DATAEE_ReadByte 0001                  __end_of_USBCtrlTrfRxService 3482  
                       __size_of_sendCommand 0034                           _USBCheckStdRequest 3A48  
                              _eusartRxCount 00F5                            _configDescriptor1 78F8  
                                    i2l12049 44AE                                      i2l12175 3084  
                                    i2l11617 416E                                      i2l12611 5680  
                                    i2l12613 56B0                                      i2l11655 3260  
                                    i2l11683 32C2                                    ?___xxtofl 0060  
                                    _RS232cp 00E5                              __CFG_WDTEN$SWON 000000  
                      ?_moteApp_getTempValue 0063                           __size_of_test_leds 006A  
                               ??_TMR0_Clear 0001                                   ??i2_memset 0007  
                         __size_of_test_oled 00C6                         __size_of_moduleSleep 0026  
                __end_of_USBCtrlTrfTxService 404E                         __size_of_moteHandler 026E  
                        _USBStdSetCfgHandler 3B2A                                      _OSCCON2 000FD2  
                                    _TBLPTRH 000FF7                                      _TBLPTRL 000FF6  
                                    _TBLPTRU 000FF8                                      _OSCTUNE 000F9B  
                     __size_of_oled_putUint8 0094               USBapp_LEDUpdateStatus@ledCount 003E  
                            __CFG_WDTPS$8192 000000          __size_of_moteApp_convertSensorValue 007E  
                                    _SSP1ADD 000FC8                      __end_of_CMP1_Initialize 61FC  
                             ??_moduleResync 0065                          ?_USBCheckStdRequest 0001  
                       __size_of_reloadTimer 000A                             ?_TMR2_StartTimer 0001  
               __size_of_USBStdGetDscHandler 013A                          __size_of_InitSwUart 0022  
                                    _UIEbits 000F64                                    ?_hexToStr 0001  
                      ADC_TempConversion@val 00A8                                      _UIRbits 000F65  
                     test_switch@buttonCheck 007B              moteRunningProcess@bufferReadPos 00B4  
                                    _EndLine 623C                                _cdc_trf_state 00EA  
                       DATAEE_WriteByte@bAdd 0061                              _countBitsSilent 004D  
                    __size_of_USBapp_exitCDC 0006                  __size_of_InterruptTimerUART 00C2  
                 __end_of_moteRunningProcess 138E                       ??_moteApp_clearBuffers 0060  
                     ??_moteApp_clearCommand 0063                   ?_moteApp_add8bToDataBuffer 0066  
                                    _pCDCDst 014E                                      _pCDCSrc 0151  
                      __size_of_getsUSBUSART 00B8               __end_of_moteApp_getLightString 6256  
                     InterruptTimerUART@mask 0005           __end_of_MOTEapp_SetDataRateSetting 2ABA  
                 _MOTEapp_SetDataRateSetting 2958                                      __Hparam 0000  
                       ?_USBStdSetCfgHandler 0001                                    _CDCInitEP 5596  
                    ?_MOTEapp_TimerBasedTask 0001                                      __Lparam 0000  
                 __size_of_USBEnableEndpoint 003C                  USBapp_exitCDCState@usbState 0060  
                        moteHandler@s2Button 00B9                             _Set_Page_Address 61B0  
                       ??_USBCheckStdRequest 001C                 moteRunningProcess@sleepEvent 00AE  
                                    ___almod 4940                           __end_of_TMR0_Clear 62FE  
                                    ___fladd 1CBA                            _timerMinTickCount 003C  
              __size_of_USBCtrlTrfOutHandler 005C                  __size_of_moteJoiningProcess 05DA  
                                    ___fldiv 1FF8                              __size_of_inFIFO 003E  
                                    ___awdiv 4E1E                                      ___lbdiv 5AA2  
                        printfOled@lastValue 004C                                      ___awmod 5380  
                                    ___flmul 1968                             ?_TMR3_StartTimer 0001  
                                    ___fltol 3CEC                                      ___lldiv 5030  
                           ??_USBDeviceTasks 001F                              __size_of___wmul 0028  
                          ??_USBStallHandler 0001                                      ___lwmod 599A  
                       oled_putint8@negative 007A           oled_setContrastControlRegister@mod 0061  
                          __end_of_emptyFIFO 61EA                         __size_of_putUSBUSART 0022  
                                    __pcinit 4A96                           getsUSBUSART@buffer 0067  
                            __size_of_memcpy 0048                 __size_of_USBapp_exitCDCState 000A  
                            __size_of_memset 0030                    __end_of_configDescriptor1 793B  
                                    __ramtop 0800                                      _delayms 5D1E  
                          hexToStr@character 0060                                      __ptext0 2E8E  
                                    __ptext1 529C                                      __ptext2 358E  
                                    __ptext3 41EC                                      __ptext4 53F2  
                                    __ptext5 530E                                      __ptext6 3960  
                                    __ptext7 5D1E                                      __ptext8 368C  
                                    __ptext9 22AE                     __size_of_oled_setDisplay 0028  
                                    _inPipes 00C4                  _USBDeferOUTDataStagePackets 0041  
                                  _T0CONbits 000FD5              __end_of_moteApp_lightStringSize 62DE  
                            __size_of_strcmp 004E                    moteRunningProcess@counter 00B3  
                           oled_setFont@font 0060                                      _countIn 00E3  
                                  _T1CONbits 000FCD                        _OSCILLATOR_Initialize 615C  
                                    _exitUSB 00F9                                 ??_USBSuspend 0016  
                              _oled_clearRow 5FF6                                    _T2CONbits 000FBA  
                    __size_of_InterruptPinRX 004E              moteApp_add8bToDataBuffer@number 0069  
                                 ??___xxtofl 0064                                    _T3CONbits 000FB1  
                                 _oled_clear 60FC                             ___awmod@dividend 0060  
                                    _outFIFO 5C0E                     ??_PIN_MANAGER_Initialize 0060  
               __end_of_TMRapp_ClearBitFlags 62B0                                 _LastRS232Out 00E6  
                             _ReadyByteFrame 6306                              i2_USBDeviceInit 3226  
                           i2USBDeviceInit@i 0009                            __end_of_oled_init 5DE4  
                                    _rx_data 004E                  __end_of_oled_putStringLineN 5868  
               __end_of_MOTEapp_handlerState 6296                       ??_USBapp_getrxByteFlag 0060  
                         __end_of_USB_CD_Ptr 75F8                   moteRunningProcess@readByte 00B0  
                 __size_of_SYSTEM_Initialize 002A              __size_of_USBCtrlTrfSetupHandler 0084  
                                 ??_hexToStr 0060                                      _strncmp 4D92  
                       end_of_initialization 4B30                                 _getsUSBUSART 4672  
              sendDataCommand@byteCount_1653 0068                           __end_of_USB_SD_Ptr 75F1  
                                    memcpy@d 0066                                      memcpy@n 0064  
                                    memcpy@s 0068                          _pBDTEntryEP0OutNext 0034  
                                    memset@c 0062                                      memset@n 0064  
                                    memset@p 0066              _dummy_encapsulated_cmd_response 01E1  
   moteApp_convertSensorValue@convertedValue 0077                                    i2u1104_40 30F2  
                                  i2u1041_40 3326                                    i2u1035_40 41BC  
                                  i2u1070_40 4448                                    i2u1038_40 3284  
                   ?_USBStdFeatureReqHandler 0001                                    i2u1071_48 444A  
                                  i2u1074_44 4484                                    i2u1074_45 4480  
                                  i2u1068_40 5916                                    i2u1069_48 5918  
             __end_of_MOTEapp_TimerBasedTask 60A2                            _EUSART_Initialize 5C46  
                          _oled_powerControl 620C                                   _rxByteFlag 00E9  
                      ??_USBStdSetCfgHandler 0016                              ___lldiv@divisor 0005  
                       __size_of_test_switch 00FE                                   ?_CDCInitEP 0001  
                            ___lldiv@counter 000D                            __end_of_test_leds 545C  
                          __end_of_test_oled 42B2               moteJoiningProcess@changeStates 0078  
                         ?_EUSART_Initialize 0001                           ?_oled_powerControl 0001  
                              _oled_putUint8 4BD8                           __end_of_USBSuspend 5F80  
             ??_USBapp_CdcEmulatorInitialize 000D                      _USBCtrlEPAllowDataStage 4B3A  
                                  _RCSTAbits 000FAB                     ??_moteApp_setLightString 006D  
                         test_switch@timeout 0079                                      postdec1 000FE5  
                                    postdec2 000FDD                                      postinc0 000FEE  
                                    postinc2 000FDE                    ??_moteApp_addToDataBuffer 0075  
             moteApp_setLightString@stingPos 006D                         __end_of_oled_devInit 5132  
                   _USBCtrlEPServiceComplete 3784                      moteApp_toggleLeds@state 0064  
                                 _responseId 0130                                   _retryCount 0165  
                           ?_moteApp_delayms 0060                                _randomPortNum 00F0  
                   _MOTEapp_setResponseReady 62B0                                      strcmp@r 0065  
                 _USBStatusStageEnabledFlag1 0044                   _USBStatusStageEnabledFlag2 0043  
                              _dataRateValue 00FC                          _USBapp_handlerState 6282  
                        ??_EUSART_Initialize 0060                          ??_oled_powerControl 0061  
                         USBEnableEndpoint@p 000A                                    _PORTAbits 000F80  
                                  _PORTBbits 000F81                                    _PORTCbits 000F82  
            __size_of_moteApp_searchFrameGPS 01D8                      oled_putUint8@start_page 0079  
                             ?_oled_clearRow 0001                                   _test_comms 530E  
                     ??_moteApp_getTempValue 0065                       __end_of_ReadyByteFrame 6308  
                       __end_of_oled_setFont 619C                                  ___fladd@grs 0073  
                         _Set_Column_Address 60E0                         __end_of_oled_putChar 4FAC  
                              ___xxtofl@sign 0068                                    _TRISAbits 000F92  
                                  _TRISBbits 000F93                                    _TRISCbits 000F94  
                                  _TRISEbits 000F96                            ??_oled_displayOff 0061  
                      __size_of_EUSART_Write 003E                         __end_of_oled_putint8 4890  
                         _BothEP0OutUOWNsSet 0047             __size_of_moteApp_setSensorsInput 0078  
                              ?_test_powerup 0001                                  ___fldiv@grs 00A0  
                                ___fldiv@rem 009A                             ?_CMP1_Initialize 0001  
                  USBConfigureEndpoint@EPNum 0006                   ?_USBCtrlEPAllowStatusStage 0001  
                   __end_of_DATAEE_WriteByte 5B98                          ?_Set_Column_Address 0001  
        USER_USB_CALLBACK_EVENT_HANDLER@size 0012                               _TMR2_ReadTimer 626E  
                                  _USTATcopy 0059                            __size_of_CMP1_ISR 0004  
                                 _statusSSFG 00F2                         ?_USBapp_handlerState 0001  
                         _ADC_TempConversion 3876                     oled_putString@start_page 0076  
                                _CM1CON0bits 000F98                                  ___flmul@grs 0081  
         __end_of_moteApp_convertSensorValue 51B0                   _moteApp_convertSensorValue 5132  
                  __end_of_EUSART_Initialize 5C7E                    __end_of_oled_powerControl 621C  
                    oled_putint8@station_dot 0078                 ??_oled_regulorResistorSelect 0061  
               __end_of_USBTransferOnePacket 45B8                                  _CM2CON1bits 000F9A  
                                  _TXSTAbits 000FAC                  __end_of_clearInterruptPinRX 626E  
                             ?_oled_putUint8 0078                            putUSBUSART@length 0062  
                        ?_ADC_TempConversion 0001                     ??_oled_initialDispayLine 0061  
                             _TMR0_StopTimer 62F2                                 ??_InitSwUart 0060  
                      _moteApp_getLightValue 5868                       _USBCtrlTrfSetupHandler 4FAC  
                       ??_Set_Column_Address 0061                      ?i2_USBTransferOnePacket 0001  
                       __end_of_moduleResync 4F28                        __end_of_USBDeviceInit 3226  
                             _TMRapp_Handler 3482                               _USBapp_Handler 404E  
                             __end_of_inFIFO 5B5C                         __size_of_TMRapp_Tick 0006  
        MOTEapp_getModuleResponse@bufferByte 0062                 oled_putStringLineN@indexLine 006E  
                             __end_of___wmul 5FA8                                __pidataCOMRAM 6308  
                               _EUSART_Write 5AE0                        sendDataCommand@string 0061  
                          __size_of_TMR0_ISR 0004                      __end_ofi2_USBDeviceInit 3354  
                          __size_of_TMR1_ISR 000C                   __end_of_service_pushbutton 5530  
                          __size_of_TMR3_ISR 001E                               _ADC_Initialize 6116  
                moteApp_clearBuffers@counter 0060                      moteApp_GoToSleep@status 006E  
                                  i2memset@c 0003                                    i2memset@n 0005  
                                  i2memset@p 0007                               __end_of_memcpy 599A  
                     ?_OSCILLATOR_Initialize 0001                               __end_of_memset 5E14  
                   oled_putStringLineN@index 0070                            _USBBusIsSuspended 015D  
                   oled_writeCommand@command 0060                              ?_ReadyByteFrame 0001  
                             __end_of_strcmp 5904                                  ?_oled_clear 0001  
                        start_initialization 4A96                         ??_ADC_TempConversion 00A6  
                    ?_USBStdGetStatusHandler 0001                USBCtrlTrfRxService@byteToRead 0013  
                             ??_test_powerup 00AD          __size_of_oled_regulorResistorSelect 0010  
                   __size_of_TMR0_Initialize 0020              __size_of_PIN_MANAGER_Initialize 0054  
                          ??_oled_setDisplay 0061                                ??_EUSART_Read 0060  
                     __end_of_TMR2_ReadTimer 6278              __end_of_moteApp_addToDataBuffer 565A  
                                _cdc_data_rx 000540                                  _cdc_data_tx 000500  
                __end_ofi2_EUSART_Initialize 5CB6                            __size_ofi2_memset 002C  
                                  _OledFont0 75F8                 __end_of_USBConfigureEndpoint 4D00  
                        _countSearchFrameGPS 00EC              __end_of_USBStdFeatureReqHandler 2780  
                   __size_of_sendDataCommand 00C2                           __end_of_InitSwUart 6082  
                      ??_USBapp_handlerState 0060              moteApp_convertSensorValue@index 0079  
          __end_of_USBCtrlEPAllowStatusStage 4376                                _periodicState 00FA  
                             _USBapp_exitCDC 62C8                     __end_of_USBCtrlEPService 41EC  
                     _moteApp_searchFrameGPS 2780         __end_of_USART_mySetLineCodingHandler 576C  
      __size_of_USART_mySetLineCodingHandler 005A                 _USART_mySetLineCodingHandler 5712  
                 __end_of_EUSART_FlushBuffer 5A20                          DATAEE_ReadByte@bAdd 0060  
              __size_of_USBapp_setrxByteFlag 0008                                _moteModeState 0054  
                  ??_USBCtrlEPAllowDataStage 0002                       __end_of_TMR0_StopTimer 62F6  
                                ??_CDCInitEP 000D                               USBDeviceInit@i 0068  
                         _periodicTimerValue 00FD                       _pBDTEntryEP0OutCurrent 0036  
                   __size_of_TMR1_Initialize 0032                      USBTransferOnePacket@dir 0060  
                    USBTransferOnePacket@len 0063                       __end_of_USBapp_Handler 411E  
                     __end_of_TMRapp_Handler 358E               __end_ofi2_USBTransferOnePacket 4672  
                       _TMRapp_ClearBitFlags 62A8                                     ??_inFIFO 0001  
                                   ??___wmul 0064              __size_of_moteApp_setLightString 006A  
                        _USBStdGetDscHandler 2D54                         _MOTEapp_handlerState 628C  
                     __end_of_ADC_Initialize 6130                                  __pdataBANK0 00F9  
                                __pdataBANK1 01FD                                     ??_memcpy 0066  
                                   ??_memset 0066                              ??_oled_clearRow 006C  
            MOTEapp_TimerBasedTask@timerTask 0060                          _moduleResonseBuffer 0167  
                                   ??_strcmp 0064                                  ?_test_comms 0001  
                  oled_putString@station_dot 0075                                    ___fladd@a 0064  
                                  ___fladd@b 0060                               _InterruptPinRX 5904  
                     _USBActiveConfiguration 005A               __end_of_USBStdGetStatusHandler 4A96  
                                  ___fldiv@a 0091                                    ___fldiv@b 008D  
                __end_of_EUSART_Transmit_ISR 5E74                                    ___flmul@a 0078  
                                  ___flmul@b 0074                                  __pbssCOMRAM 0032  
                 service_pushbutton@PB_Timer 014A                                __pcstackBANK0 0060  
               __size_of_USBCtrlTrfInHandler 00DC                     __size_of_TMR2_Initialize 0014  
                   __end_of_Set_Page_Address 61C4                            __size_of___xxtofl 0154  
                            ?_TMR2_ReadTimer 0001                                  _activeState 00F4  
                       ?_USBStdGetDscHandler 0001                       __end_of_USBapp_exitCDC 62CE  
         __size_of_MOTEapp_getModuleResponse 0066                   ?_MOTEapp_getModuleResponse 0001  
                  ADC_TempConversion@tempRaw 00A6                   __end_of_EUSART_Receive_ISR 5EA4  
             moteRunningProcess@messageReady 00AD                                     ?_EndLine 0001  
                        _USBapp_exitCDCState 6278                   __end_of_USBWakeFromSuspend 5E44  
                 __size_of_EUSART_Initialize 0038                   __size_of_oled_powerControl 0010  
                          __size_of_hexToStr 002E                              _USBStallHandler 5A20  
                       __end_of_sentenceName 75F6                                 _pBDTEntryOut 0140  
                        __end_of_EUSART_Read 5C0E                   __end_of_USBCheckCDCRequest 4940  
                            ??_oled_putUint8 007A                         oled_putString@string 0072  
                   __size_of_TMR0_StartTimer 0004                     __size_of_USBDeviceAttach 0034  
                                  _appDevEui 0120                              ?_TMR0_StopTimer 0001  
                ??_moteApp_add8bToDataBuffer 0067                            _oled_writeCommand 6146  
                      __size_of_oled_devInit 0080                      oled_putChar@station_dot 0062  
                ?_MOTEapp_SetDataRateSetting 0001                       _PIN_MANAGER_Initialize 57C2  
                     ?_moteApp_getLightValue 006E                          __size_of_oled_clear 001A  
                      ?_TMRapp_ClearBitFlags 0001                              _messageReceived 0164  
                   __size_of_TMR3_Initialize 0022                         EUSART_Read@readValue 0060  
            __size_of_oled_initialDispayLine 0010                              ?_TMRapp_Handler 0001  
                            ?_USBapp_Handler 0001                                    __pintcode 0008  
                         ?_oled_writeCommand 0001                                __pmediumconst 75EA  
                                   ?___almod 0060                                     ?___fladd 0060  
                      ?_MOTEapp_handlerState 0001                                     ?___fldiv 008D  
                                   ?___awdiv 0060                                    __ptext100 5D82  
                                  __ptext101 62E6                                     ?___lbdiv 0060  
                                  __ptext110 628C                                    __ptext102 60A2  
                                  __ptext111 6172                                    __ptext103 62EA  
                                  __ptext120 4FAC                                    __ptext104 57C2  
                                  __ptext121 3784                                    __ptext113 62B8  
                                  __ptext105 615C                                    __ptext130 576C  
                                  __ptext122 4B3A                                    __ptext114 2FC4  
                                  __ptext106 6060                                    __ptext131 5596  
                                  __ptext123 3A48                                    __ptext115 3226  
                                  __ptext107 5C46                                    __ptext140 3F7A  
                                  __ptext132 45B8                                    __ptext124 3B2A  
                                  __ptext116 5E14                                    __ptext108 61EA  
                                  __ptext141 5712                                    __ptext133 5B98  
                                  __ptext125 5F00                                    __ptext117 5F56  
                                  __ptext109 6116                                    __ptext150 62F2  
                                  __ptext142 5C7E                                    __ptext134 4C6C  
                                  __ptext126 49EE                                    __ptext118 5A20  
                                  __ptext151 6306                                    __ptext143 5030  
                                  __ptext135 4890                                    __ptext127 2D54  
                                  __ptext119 411E                                    __ptext160 0000  
                                  __ptext152 5904                                    __ptext144 62D4  
                                  __ptext136 56B6                                    __ptext128 251C  
                                  __ptext153 62F6                                    __ptext145 60C2  
                                  __ptext137 3354                                    __ptext129 565A  
                                  __ptext154 6296                                    __ptext146 6256  
                                  __ptext138 42B2                                    __ptext155 6262  
                                  __ptext147 62EE                                    __ptext139 3DCA  
                                  __ptext156 62FA                                    __ptext148 4438  
                                  __ptext157 5E44                                    __ptext149 5B1E  
                                  __ptext158 5E74                                    __ptext159 62FE  
                                   ?___awmod 0060                                     ?___flmul 0074  
                                   ?___fltol 0060                   __end_of_moteApp_toggleLeds 3A48  
                                   ?___lldiv 0001                                     ?___lwmod 0060  
                            ?_ADC_Initialize 0001                        __size_of_oled_setFont 0014  
                               _eusartRxHead 00DF                                ??_sendCommand 0063  
          moteApp_getTempValue@escapeCounter 0065                                 _eusartTxHead 00E2  
                               _eusartRxTail 00DE                 __size_of_moteApp_testSensors 00F8  
                               _eusartTxTail 00E1                         ?_USBapp_exitCDCState 0001  
                      __size_of_oled_putChar 0084                       __end_of_InterruptPinRX 5952  
                         _moteRunningProcess 0102                            _moduleBufferIndex 00F1  
                                   ?_delayms 0060                                    _buffer_rx 0600  
               ??_INTERRUPT_InterruptManager 0020                             ___almod@dividend 0060  
                           ?i2_USBDeviceInit 0001                       moteHandler@readMessage 00BB  
                        ??_oled_writeCommand 0060                                ??_moduleSleep 0063  
                              ??_moteHandler 00B6                        __size_of_oled_putint8 00B0  
                    _eusartTxBufferRemaining 00E0                         _USBTransferOnePacket 44FA  
                                  _mainState 0056                     __size_of_TMR1_StartTimer 0004  
                                  _emptyFIFO 61D8                                ??_reloadTimer 0001  
                    _moteApp_setSensorsInput 51B0                                     ?_outFIFO 0001  
                     moteHandler@buttonPress 00BA                          ?_moteRunningProcess 00AC  
               __end_of_USBCtrlTrfOutHandler 5712                                    _minTicker 0163  
                   reloadTimer@setTimerValue 0001                        ??_USBStdGetDscHandler 0001  
                                   _CMP1_ISR 62FE                       _moteApp_setLightString 545C  
                                _ep_data_out 00D0                 __size_of_USBCtrlTrfRxService 012E  
                  oled_putStringLineN@string 006C                                    _secTicker 00EF  
                            ?_USBapp_exitCDC 0001                USBConfigureEndpoint@direction 0001  
                   __size_of_DATAEE_ReadByte 0016                                     ?_strncmp 0060  
                             __size_of_unhex 002E                   __end_of_InterruptTimerUART 44FA  
                        oled_putint8@numData 007B                     ?_moteApp_lightStringSize 0001  
                               _oled_devInit 50B2           __end_of_oled_regulorResistorSelect 620C  
                 _oled_regulorResistorSelect 61FC                               _eusartRxBuffer 0200  
              moteApp_addToDataBuffer@string 0072                            _dataRateSelection 01FF  
                           _timerMsTickCount 00D8                                    _oled_init 5DB4  
               __size_of_USBCtrlTrfTxService 00D4                            ??_TMR0_Initialize 0060  
          __end_of_MOTEapp_getModuleResponse 5596                               _eusartTxBuffer 0240  
                             ___wmul@product 0064                                     _IOCBbits 000F86  
                                   _LATAbits 000F89                                     _IOCCbits 000F87  
                  __end_of_oled_writeCommand 615C                                     _LATBbits 000F8A  
                                   _LATCbits 000F8B                                     _LATEbits 000F8D  
                 ??_USBCtrlEPServiceComplete 0002                   ??_MOTEapp_setResponseReady 0060  
                                   _PIE1bits 000F9D                                     _IPR3bits 000FA5  
                                   _PIE2bits 000FA0                                     _PIE3bits 000FA3  
                        __size_of_test_comms 0072                     __size_of_TMR2_StartTimer 0004  
                               _oled_setFont 6188                                    _moteState 00FF  
                          ??_sendDataCommand 0066                                _operationType 00F7  
                          i2_TMR0_StartTimer 62F6                        __size_of_moduleResync 0084  
                       ??_moteRunningProcess 00AF                   __end_of_moteJoiningProcess 1968  
        __size_of_INTERRUPT_InterruptManager 00F6                                 _oled_putChar 4F28  
                                   _PIR1bits 000F9E                                     _PIR2bits 000FA1  
              __size_of_moteApp_clearBuffers 0092                                     i2u612_40 5062  
              __size_of_moteApp_clearCommand 0010                                     _PIR3bits 000FA4  
                                   i2u607_40 3FF6                                     i2u631_40 3BA0  
                                   i2u607_47 3FEC                                     i2u609_40 4036  
                                   i2u609_47 402C                                     i2u635_40 2DD2  
                                   i2u635_47 2DC8                                     i2u660_40 26EE  
                                   i2u636_40 2E02                                     i2u636_47 2DF8  
                                   i2u638_40 2E5A                                     i2u638_47 2E50  
                  USBCtrlEPService@setup_cnt 001E                                     i2u594_40 57B6  
                                   i2u695_48 3460                                     i2u695_49 3472  
                                   i2u891_48 3E8A                                     i2u891_49 3E9C  
                                   _RCONbits 000FD0                         __end_of_test_powerup 530E  
                               _oled_putint8 47E0                                ??_putUSBUSART 0063  
                         ?i2_TMR0_StartTimer 0001                                     _UEP0bits 000F6A  
                 _USBDeferINDataStagePackets 0042                                     _SSP1CON1 000FC6  
                                   _TMR0_ISR 62EE                  __size_of_USBCheckStdRequest 00E2  
                                   _TMR1_ISR 6256                      __size_of_oled_putString 0074  
                                   _TMR3_ISR 60C2                                     _SSP1STAT 000FC7  
                                   _UCONbits 000F60                              _oled_displayOff 62A0  
                                  _test_leds 53F2                                     _VREFCON0 000F7D  
             moteRunningProcess@selectButton 00AC                         _USBConfigureEndpoint 4C6C  
                                  _test_oled 41EC                        ??_USBapp_exitCDCState 0060  
                            ?_InterruptPinRX 0001             __size_of_USBStdFeatureReqHandler 0264  
                          ??_TMR1_Initialize 0060                                   _ADCON0bits 000FC2  
                    Set_Page_Address@address 0061                          ??i2_TMR0_StartTimer 0001  
                          ___wmul@multiplier 0060          moteRunningProcess@sizeOfUpdate_1523 00B2  
                      ?_USBTransferOnePacket 0060                       ADC_TempConversion@temp 00A7  
                     oled_putint8@start_page 0079                    _moteApp_add8bToDataBuffer 472A  
                    __size_of_oled_writeData 0016                                   ?_emptyFIFO 0001  
                              ?_CDCTxService 0001                     __size_of_TMR3_StartTimer 0004  
                   moteHandler@gotoNextState 00B8                                 _RemoteWakeup 0049  
                        __end_of_sendCommand 5CEA                                     i2_memset 5F00  
                          __CFG_CFGPLLEN$OFF 000000                       _oled_initialDispayLine 621C  
                      DATAEE_WriteByte@bData 0060                           _RS232_Out_Data_Rdy 00E7  
          moteApp_setLightString@lightString 006B                      __end_of_USBStallHandler 5A62  
                        __end_of_moduleSleep 5FF6                          __end_of_moteHandler 251C  
                                _EUSART_Read 5BD4                            _moteApp_GoToSleep 3EA6  
                                _INTCON2bits 000FF1                                  _INTCON3bits 000FF0  
                                  copy_data0 4AC8                  ??_USBCtrlEPAllowStatusStage 0001  
      moteApp_addToDataBuffer@bufferLocation 0074                                 _moduleResync 4EA4  
                __end_of_USBStdSetCfgHandler 3C0C                            ?_DATAEE_WriteByte 0060  
              __size_of_USBapp_getrxByteFlag 0006                          __end_of_reloadTimer 62A0  
                         ?_moteApp_GoToSleep 0001                                   ?_oled_init 0001  
                          ??_TMR2_Initialize 0060                                ??_test_switch 0078  
MOTEapp_getModuleResponse@terminatorReceived 0061                  ?_moteApp_convertSensorValue 0072  
               clearInterruptPinRX@tClearPin 0001                             __size_of_EndLine 000E  
                  __end_ofi2_TMR0_StartTimer 62FA                           ??_DATAEE_WriteByte 0061  
               __size_of_oled_putStringLineN 0052                           __end_of_device_dsc 79B5  
                                 _EECON1bits 000FA6                      ?_USBCtrlTrfSetupHandler 0001  
              USBapp_CdcEmulatorInitialize@i 000D                       ??_TMRapp_ClearBitFlags 0060  
                    USBStdGetStatusHandler@p 0002                     moteApp_searchFrameGPS@cs 0085  
                                   __Hrparam 0000                          ??_moteApp_GoToSleep 006E  
                                  memcpy@tmp 006A                                     __Lrparam 0000  
                     USBTransferOnePacket@ep 0064                       ??_MOTEapp_handlerState 0060  
                         __CFG_BOREN$SBORDIS 000000                                     _SetupPkt 000430  
                    ??_OSCILLATOR_Initialize 0060                        ?_USBConfigureEndpoint 0001  
                          ??_TMR0_StartTimer 0060                             ??_ReadyByteFrame 0001  
                           __size_of___almod 00AE                             __size_of___fladd 033E  
                          ??_USBDeviceAttach 0060                                   ?_test_leds 0001  
                           __size_of___fldiv 02B6                             __size_of___awdiv 0086  
                           __size_of___lbdiv 003E                                   ?_test_oled 0001  
                           __size_of___awmod 0072                             __size_of___flmul 0352  
                           __size_of___fltol 00DE                   oled_initialDispayLine@line 0061  
             moteJoiningProcess@readDataRate 007B                                 _selectedFont 01FD  
                           __size_of___lldiv 0082                              _oled_setDisplay 5FA8  
           moteApp_clearBuffers@counter_1740 0061             moteApp_clearBuffers@counter_1741 0062  
           moteApp_clearBuffers@counter_1742 0063                             __size_of___lwmod 0044  
                  MOTEapp_handlerState@state 0060                            ??_TMR3_Initialize 0060  
                  ??_moteApp_setSensorsInput 0065                             __size_of_delayms 0032  
                                 _ANSELAbits 000F5B                          __end_of_putUSBUSART 603E  
                                _line_coding 01E9                                   _ANSELCbits 000F5D  
                             ??_CDCTxService 0067                                _responseReady 0166  
                               ??_oled_clear 006E                                     ___xxtofl 2ABA  
                                _menuTimeout 00FB                     __size_of_moteApp_delayms 0032  
                  __end_of_moteApp_GoToSleep 3F7A                __size_of_moteApp_getTempValue 0040  
                    __size_of_USBDeviceTasks 0132                             __size_of_outFIFO 0038  
                                   _appTimer 00F8                                     _appState 0055  
                                   __ptext10 0102                                     __ptext11 4376  
                                   __ptext20 624A                                     __ptext12 5EA4  
                                   __ptext21 5132                                     __ptext13 4BD8  
                                 _T1GCONbits 000FCC                                     __ptext30 50B2  
                                   __ptext22 5F80                                     __ptext14 51B0  
                                   __ptext31 619C                                     __ptext23 4D00  
                                   __ptext15 62DA                                     __ptext40 626E  
                                   __ptext32 61FC                                     __ptext24 55FC  
                                   __ptext16 5A62                                     __ptext41 2958  
                                   __ptext33 620C                                     __ptext25 472A  
                                   __ptext17 5868                                     __ptext50 58B6  
                                   __ptext42 3876                                     __ptext34 621C  
                                   __ptext26 3EA6                                     __ptext18 545C  
                                   __ptext51 5D50                                     __ptext43 2ABA  
                                   __ptext35 62A0                                     __ptext27 5DB4  
                                   __ptext19 5952                                     __ptext60 4E1E  
                                   __ptext52 5B5C                                     __ptext44 3CEC  
                                   __ptext36 5FD0                                     __ptext28 6188  
                                   __ptext61 61D8                                     __ptext53 2780  
                                   __ptext45 1968                                     __ptext37 4EA4  
                                   __ptext29 5FA8                                     __ptext70 5CB6  
                                   __ptext62 6278                                     __ptext54 5ED2  
                                   __ptext46 1FF8                                     __ptext38 5530  
                                   __ptext71 623C                                     __ptext63 62C8  
                                   __ptext55 5C0E                                     __ptext47 1CBA  
                                   __ptext39 59DE                                     __ptext80 61B0  
                                   __ptext72 6282                                     __ptext64 3482  
                                   __ptext56 47E0                                     __ptext48 138E  
                                   __ptext81 60E0                                     __ptext73 404E  
                                   __ptext65 599A                                     __ptext57 5AA2  
                                   __ptext49 4D92                                     __ptext90 2C0E  
                                   __ptext82 6146                                     __ptext74 54C6  
                                   __ptext66 4940                                     __ptext58 5380  
                                   __ptext91 44FA                                     __ptext83 3C0C  
                                   __ptext75 5228                                     __ptext67 62A8  
                                   __ptext59 5816                                     __ptext92 30F6  
                                   __ptext84 601C                                     __ptext76 60FC  
                                   __ptext68 6082                                     __ptext93 5DE4  
                                   __ptext85 4672                                     __ptext77 5FF6  
                                   __ptext69 622C                                     __ptext94 5CEA  
                                   __ptext86 62CE                                     __ptext78 4F28  
                                   __ptext95 5F2C                                     __ptext87 62B0  
                                   __ptext79 6130                                     __ptext96 603E  
                                   __ptext88 5AE0                                     __ptext97 62DE  
                                   __ptext89 5BD4                                     __ptext98 61C4  
                                   __ptext99 62E2         __end_of_USBapp_CdcEmulatorInitialize 57C2  
      __size_of_USBapp_CdcEmulatorInitialize 0056                 _USBapp_CdcEmulatorInitialize 576C  
                               _SSP1CON1bits 000FC6                      ?_moteApp_searchFrameGPS 0001  
                                   _dotCount 0162                                     _hexToStr 5EA4  
                         _service_pushbutton 54C6                              ___almod@divisor 0064  
                          ??_TMR1_StartTimer 0060                              ___almod@counter 0068  
                                 _T3GCONbits 000FB4                  DATAEE_WriteByte@GIEBitValue 0062  
                   ??_moteApp_getLightString 0062                                  _OSCCON2bits 000FD2  
                           __size_of_strncmp 008C                                     _countOut 00E4  
             __end_of_USBCtrlTrfSetupHandler 5030                                __size_of_main 0136  
                          ?_USBCtrlEPService 0001                   __size_of_oled_writeCommand 0016  
                             _Contrast_level 005D                                     _rnModule 00ED  
                         oled_putint8@number 0081                                   strncmp@len 0064  
                        ?_service_pushbutton 0001                            ??_DATAEE_ReadByte 0060  
                   __size_of_CMP1_Initialize 0012                     ?_moteApp_addToDataBuffer 0072  
                    __end_of_oled_displayOff 62A8                           ??_USBCtrlEPService 001C  
                  moduleResync@escapeCounter 0065                                     delayms@i 0063  
                                   delayms@t 0060                          _USBCtrlTrfInHandler 3DCA  
                              ??_TMRapp_Tick 0001                             _dataRatePosition 0161  
                         __end_of_oled_clear 6116                          __end_of_test_switch 368C  
                                   _outPipes 00BC                         _USBCtrlTrfOutHandler 56B6  
                                   int$flags 005E                                     _usbState 0051  
                  _USBCtrlEPAllowStatusStage 42B2                 __size_of_clearInterruptPinRX 000C  
                __size_of_Set_Column_Address 001C                            ??_TMR2_StartTimer 0060  
         __end_of_INTERRUPT_InterruptManager 00FE                   _INTERRUPT_InterruptManager 0008  
             moteRunningProcess@sizeOfUpdate 00B1                                 _SSP1STATbits 000FC7  
                                _sendCommand 5CB6                       ??_USBTransferOnePacket 0064  
                         oled_clearRow@index 006D                           _EUSART_FlushBuffer 59DE  
                               ??_test_comms 0078                 __end_of_USBapp_setrxByteFlag 62C0  
                                _moduleSleep 5FD0                                  _moteHandler 22AE  
                           ??_TMR2_ReadTimer 0060                                 _sentenceName 75F1  
                       ??_service_pushbutton 0060                    _USBDeferStatusStagePacket 0045  
                   CDCTxService@byte_to_send 006B                                  ??_emptyFIFO 0060  
                                 _INTCONbits 000FF2                  __end_of_USBapp_handlerState 628C  
                       ?_USBCtrlTrfInHandler 0001                      moteApp_searchFrameGPS@c 0086  
                    moteApp_searchFrameGPS@i 0087                          ?_EUSART_FlushBuffer 0001  
                                   memcpy@d1 0060                  __size_of_ADC_TempConversion 00EA  
                                _reloadTimer 6296                                     memcpy@s1 0062  
             __end_of_moteApp_searchFrameGPS 2958                USBCtrlTrfTxService@byteToSend 0001  
                                   memset@p1 0060                             ?_USBStallHandler 0001  
                   USBStdFeatureReqHandler@p 001A                            ?_Set_Page_Address 0001  
                   ??_MOTEapp_TimerBasedTask 0060                                 _responseData 01A7  
                          ??_TMR3_StartTimer 0060                ?_USBapp_CdcEmulatorInitialize 0001  
                                   intlevel2 0000                             ??_TMR0_StopTimer 0001  
                        _moteApp_testSensors 368C                                  ??_oled_init 006E  
                ??_MOTEapp_getModuleResponse 0061                           ??_Set_Page_Address 0061  
                     __size_of_USBDeviceInit 0130                         oled_powerControl@vol 0061  
    __end_of_USER_USB_CALLBACK_EVENT_HANDLER 56B6     __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005C  
          ??_USER_USB_CALLBACK_EVENT_HANDLER 0014             ?_USER_USB_CALLBACK_EVENT_HANDLER 000E  
            _USER_USB_CALLBACK_EVENT_HANDLER 565A               moteJoiningProcess@messageReady 007D  
            __end_of_moteApp_setSensorsInput 5228                             ___lwmod@dividend 0060  
               i2USBTransferOnePacket@handle 0006                                 _VREFCON0bits 000F7D  
                           ___lldiv@dividend 0001                      ?_PIN_MANAGER_Initialize 0001  
                 __size_ofi2_TMR0_StartTimer 0004                      ??_moteApp_getLightValue 0070  
                           ??_USBapp_Handler 0078                             ??_TMRapp_Handler 006A  
                      __size_of_test_powerup 0072                         moteHandler@gotoSleep 00B7  
               __size_ofi2_EUSART_Initialize 0038                                    strncmp@s1 0060  
                                  strncmp@s2 0062                             ??_ADC_Initialize 0060  
                         __end_of_test_comms 5380                         ??_EUSART_FlushBuffer 0060  
                    __end_of_oled_setDisplay 5FD0                   i2USBTransferOnePacket@data 0002  
                                _sleepTicker 00EE                       ??_USBConfigureEndpoint 0002  
                      ?_USBCtrlTrfOutHandler 0001                               _oled_putString 5228  
                                _putUSBUSART 601C                           _EUSART_Receive_ISR 5E74  
                          oled_clearRow@page 006C                         __CFG_CPUDIV$NOCLKDIV 000000  
                        _USBCtrlTrfRxService 3354                           _USBWakeFromSuspend 5E14  
                                ??_test_leds 0078                                _powerOnStatus 00F6  
                                ??_test_oled 0078                      _USBStdFeatureReqHandler 251C  
                       ?_moteApp_testSensors 0001      __end_of_USBapp_DeviceCdcEmulatorHandler 3CEC  
   __size_of_USBapp_DeviceCdcEmulatorHandler 00E0             ?_USBapp_DeviceCdcEmulatorHandler 0001  
          ??_USBapp_DeviceCdcEmulatorHandler 006D              _USBapp_DeviceCdcEmulatorHandler 3C0C  
                         _USBCheckCDCRequest 4890                          _USBCtrlTrfTxService 3F7A  
                        __end_of_TMRapp_Tick 62DA                        __end_of_oled_clearRow 601C  
                                _temperature 00DA                          ?_EUSART_Receive_ISR 0001  
                             _oled_writeData 6130                          ?_USBWakeFromSuspend 0001  
                                   strcmp@s1 0060                                     strcmp@s2 0062  
                    ?_moteApp_setLightString 006B                             ___lldiv@quotient 0009  
                            ___lwmod@divisor 0062                             ??_USBapp_exitCDC 0060  
                            _TMR0_Initialize 60A2                        ??_USBCtrlTrfInHandler 0012  
                      _USBAlternateInterface 0057                              ___lwmod@counter 0064  
                                 _TMR0_Clear 62FA                          ?_USBCheckCDCRequest 0001  
                 __size_of_moteApp_GoToSleep 00D4                    i2USBTransferOnePacket@dir 0001  
                         _moteApp_toggleLeds 3960                    i2USBTransferOnePacket@len 0004  
                        USBEnableEndpoint@ep 000C                              _endpoint_number 0048  
                                 _WDTCONbits 000FD1                                 _test_powerup 529C  
                            _sendDataCommand 4376                         ?_USBCtrlTrfRxService 0001  
                              ___fladd@signs 0070                                ?_getsUSBUSART 0067  
                   oled_putUint8@station_dot 0078                           __CFG_FOSC$INTOSCIO 000000  
                         EUSART_Write@txData 0060                 __size_of_EUSART_Transmit_ISR 0030  
             __end_of_PIN_MANAGER_Initialize 5816                     ?_USBCtrlEPAllowDataStage 0001  
         __size_of_moteApp_add8bToDataBuffer 00B6                                 ___almod@sign 0069  
                       ?_USBCtrlTrfTxService 0001                            ??_moteApp_delayms 0062  
            __size_of_moteApp_getLightString 000C                  ?_oled_regulorResistorSelect 0001  
                        ?_moteApp_toggleLeds 0001                                 ___fladd@aexp 0071  
                               ___fladd@bexp 0072                 _USBStatusStageTimeoutCounter 0046  
                                _test_switch 358E                         ??_EUSART_Receive_ISR 0001  
                       ??_USBWakeFromSuspend 0016                   USBTransferOnePacket@handle 0065  
                       __end_of_CDCTxService 2D54                              _TMR1_Initialize 5D82  
          moteJoiningProcess@joiningComplete 007C                             ?_oled_displayOff 0001  
                      __end_of_oled_putUint8 4C6C                       __end_of_oled_putString 529C  
                       ??_USBCheckCDCRequest 0001                                   _USB_CD_Ptr 75F6  
                           ??_InterruptPinRX 0002  
