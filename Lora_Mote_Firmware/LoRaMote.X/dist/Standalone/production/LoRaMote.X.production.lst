

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Mar 30 16:22:29 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=2,class=CODE,delta=1,group=1
   159                           	psect	text138,global,reloc=2,class=CODE,delta=1
   160                           	psect	text139,global,reloc=2,class=CODE,delta=1
   161                           	psect	text140,global,reloc=2,class=CODE,delta=1
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	text142,global,reloc=2,class=CODE,delta=1
   164                           	psect	text143,global,reloc=2,class=CODE,delta=1
   165                           	psect	text144,global,reloc=2,class=CODE,delta=1
   166                           	psect	text145,global,reloc=2,class=CODE,delta=1
   167                           	psect	text146,global,reloc=2,class=CODE,delta=1
   168                           	psect	text147,global,reloc=2,class=CODE,delta=1
   169                           	psect	text148,global,reloc=2,class=CODE,delta=1
   170                           	psect	text149,global,reloc=2,class=CODE,delta=1
   171                           	psect	text150,global,reloc=2,class=CODE,delta=1
   172                           	psect	text151,global,reloc=2,class=CODE,delta=1
   173                           	psect	text152,global,reloc=2,class=CODE,delta=1
   174                           	psect	text153,global,reloc=2,class=CODE,delta=1
   175                           	psect	text154,global,reloc=2,class=CODE,delta=1
   176                           	psect	text155,global,reloc=2,class=CODE,delta=1
   177                           	psect	text156,global,reloc=2,class=CODE,delta=1
   178                           	psect	text157,global,reloc=2,class=CODE,delta=1
   179                           	psect	text158,global,reloc=2,class=CODE,delta=1
   180                           	psect	text159,global,reloc=2,class=CODE,delta=1
   181                           	psect	text160,global,reloc=2,class=CODE,delta=1
   182                           	psect	text161,global,reloc=2,class=CODE,delta=1
   183                           	psect	text162,global,reloc=2,class=CODE,delta=1
   184                           	psect	text163,global,reloc=2,class=CODE,delta=1
   185                           	psect	text164,global,reloc=2,class=CODE,delta=1
   186                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   187                           	psect	text165,global,reloc=2,class=CODE,delta=1
   188                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   189                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   190                           	dabs	1,0x400,48,_BDT
   191                           	dabs	1,0x500,64,_cdc_data_tx
   192                           	dabs	1,0x438,8,_CtrlTrfData
   193                           	dabs	1,0x430,8,_SetupPkt
   194                           	dabs	1,0x540,64,_cdc_data_rx
   195  0000                     
   196                           ; Version 1.45
   197                           ; Generated 16/11/2017 GMT
   198                           ; 
   199                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   200                           ; All rights reserved.
   201                           ; 
   202                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   203                           ; 
   204                           ; Redistribution and use in source and binary forms, with or without modification, are
   205                           ; permitted provided that the following conditions are met:
   206                           ; 
   207                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   208                           ;        conditions and the following disclaimer.
   209                           ; 
   210                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   211                           ;        of conditions and the following disclaimer in the documentation and/or other
   212                           ;        materials provided with the distribution.
   213                           ; 
   214                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   215                           ;        software without specific prior written permission.
   216                           ; 
   217                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   218                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   219                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   220                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   221                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   222                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   223                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   224                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   225                           ; 
   226                           ; 
   227                           ; Code-generator required, PIC18LF45K50 Definitions
   228                           ; 
   229                           ; SFR Addresses
   230  0000                     
   231                           	psect	idataCOMRAM
   232  00625D                     __pidataCOMRAM:
   233                           	opt stack 0
   234                           
   235                           ;initializer for _Contrast_level
   236  00625D  13                 	db	19
   237                           
   238                           	psect	idataBANK0
   239  00620A                     __pidataBANK0:
   240                           	opt stack 0
   241                           
   242                           ;initializer for _exitUSB
   243  00620A  01                 	db	1
   244                           
   245                           ;initializer for _periodicState
   246  00620B  03                 	db	3
   247                           
   248                           ;initializer for _menuTimeout
   249  00620C  01                 	db	1
   250                           
   251                           ;initializer for _dataRateValue
   252  00620D  02                 	db	2
   253                           
   254                           ;initializer for _periodicTimerValue
   255  00620E  03                 	db	3
   256                           
   257                           ;initializer for _periodicUpValue
   258  00620F  03                 	db	3
   259                           
   260                           ;initializer for _moteState
   261  006210  01                 	db	1
   262                           
   263                           	psect	idataBANK1
   264  00625A                     __pidataBANK1:
   265                           	opt stack 0
   266                           
   267                           ;initializer for _selectedFont
   268  00625A  F7                 	db	low _OledFont0
   269  00625B  75                 	db	high _OledFont0
   270                           
   271                           ;initializer for _dataRateSelection
   272  00625C  02                 	db	2
   273                           
   274                           	psect	mediumconst
   275  0075EE                     __pmediumconst:
   276                           	opt stack 0
   277  0075EE  00                 	db	0
   278  0075EF                     _USB_SD_Ptr:
   279                           	opt stack 0
   280  0075EF  B4                 	db	low _sd000
   281  0075F0  79                 	db	high _sd000
   282  0075F1  6E                 	db	low _sd001
   283  0075F2  79                 	db	high _sd001
   284  0075F3  3A                 	db	low _sd002
   285  0075F4  79                 	db	high _sd002
   286  0075F5                     __end_of_USB_SD_Ptr:
   287                           	opt stack 0
   288  0075F5                     _USB_CD_Ptr:
   289                           	opt stack 0
   290  0075F5  F7                 	db	low _configDescriptor1
   291  0075F6  78                 	db	high _configDescriptor1
   292  0075F7                     __end_of_USB_CD_Ptr:
   293                           	opt stack 0
   294  0075F7                     _OledFont0:
   295                           	opt stack 0
   296  0075F7  00                 	db	0
   297  0075F8  00                 	db	0
   298  0075F9  00                 	db	0
   299  0075FA  00                 	db	0
   300  0075FB  00                 	db	0
   301  0075FC  00                 	db	0
   302  0075FD  00                 	db	0
   303  0075FE  00                 	db	0
   304  0075FF  00                 	db	0
   305  007600  00                 	db	0
   306  007601  00                 	db	0
   307  007602  5F                 	db	95
   308  007603  00                 	db	0
   309  007604  00                 	db	0
   310  007605  00                 	db	0
   311  007606  00                 	db	0
   312  007607  00                 	db	0
   313  007608  00                 	db	0
   314  007609  03                 	db	3
   315  00760A  00                 	db	0
   316  00760B  03                 	db	3
   317  00760C  00                 	db	0
   318  00760D  00                 	db	0
   319  00760E  00                 	db	0
   320  00760F  64                 	db	100
   321  007610  3C                 	db	60
   322  007611  26                 	db	38
   323  007612  64                 	db	100
   324  007613  3C                 	db	60
   325  007614  26                 	db	38
   326  007615  24                 	db	36
   327  007616  00                 	db	0
   328  007617  26                 	db	38
   329  007618  49                 	db	73
   330  007619  49                 	db	73
   331  00761A  7F                 	db	127
   332  00761B  49                 	db	73
   333  00761C  49                 	db	73
   334  00761D  32                 	db	50
   335  00761E  00                 	db	0
   336  00761F  42                 	db	66
   337  007620  25                 	db	37
   338  007621  12                 	db	18
   339  007622  08                 	db	8
   340  007623  24                 	db	36
   341  007624  52                 	db	82
   342  007625  21                 	db	33
   343  007626  00                 	db	0
   344  007627  20                 	db	32
   345  007628  50                 	db	80
   346  007629  4E                 	db	78
   347  00762A  55                 	db	85
   348  00762B  22                 	db	34
   349  00762C  58                 	db	88
   350  00762D  28                 	db	40
   351  00762E  00                 	db	0
   352  00762F  00                 	db	0
   353  007630  00                 	db	0
   354  007631  00                 	db	0
   355  007632  03                 	db	3
   356  007633  00                 	db	0
   357  007634  00                 	db	0
   358  007635  00                 	db	0
   359  007636  00                 	db	0
   360  007637  00                 	db	0
   361  007638  00                 	db	0
   362  007639  1C                 	db	28
   363  00763A  22                 	db	34
   364  00763B  41                 	db	65
   365  00763C  00                 	db	0
   366  00763D  00                 	db	0
   367  00763E  00                 	db	0
   368  00763F  00                 	db	0
   369  007640  00                 	db	0
   370  007641  00                 	db	0
   371  007642  41                 	db	65
   372  007643  22                 	db	34
   373  007644  1C                 	db	28
   374  007645  00                 	db	0
   375  007646  00                 	db	0
   376  007647  00                 	db	0
   377  007648  15                 	db	21
   378  007649  15                 	db	21
   379  00764A  0E                 	db	14
   380  00764B  0E                 	db	14
   381  00764C  15                 	db	21
   382  00764D  15                 	db	21
   383  00764E  00                 	db	0
   384  00764F  00                 	db	0
   385  007650  08                 	db	8
   386  007651  08                 	db	8
   387  007652  3E                 	db	62
   388  007653  08                 	db	8
   389  007654  08                 	db	8
   390  007655  00                 	db	0
   391  007656  00                 	db	0
   392  007657  00                 	db	0
   393  007658  00                 	db	0
   394  007659  00                 	db	0
   395  00765A  50                 	db	80
   396  00765B  30                 	db	48
   397  00765C  00                 	db	0
   398  00765D  00                 	db	0
   399  00765E  00                 	db	0
   400  00765F  00                 	db	0
   401  007660  08                 	db	8
   402  007661  08                 	db	8
   403  007662  08                 	db	8
   404  007663  08                 	db	8
   405  007664  08                 	db	8
   406  007665  00                 	db	0
   407  007666  00                 	db	0
   408  007667  00                 	db	0
   409  007668  00                 	db	0
   410  007669  00                 	db	0
   411  00766A  40                 	db	64
   412  00766B  00                 	db	0
   413  00766C  00                 	db	0
   414  00766D  00                 	db	0
   415  00766E  00                 	db	0
   416  00766F  40                 	db	64
   417  007670  20                 	db	32
   418  007671  10                 	db	16
   419  007672  08                 	db	8
   420  007673  04                 	db	4
   421  007674  02                 	db	2
   422  007675  01                 	db	1
   423  007676  00                 	db	0
   424  007677  00                 	db	0
   425  007678  3E                 	db	62
   426  007679  41                 	db	65
   427  00767A  41                 	db	65
   428  00767B  41                 	db	65
   429  00767C  3E                 	db	62
   430  00767D  00                 	db	0
   431  00767E  00                 	db	0
   432  00767F  00                 	db	0
   433  007680  00                 	db	0
   434  007681  41                 	db	65
   435  007682  7F                 	db	127
   436  007683  40                 	db	64
   437  007684  00                 	db	0
   438  007685  00                 	db	0
   439  007686  00                 	db	0
   440  007687  00                 	db	0
   441  007688  42                 	db	66
   442  007689  61                 	db	97
   443  00768A  51                 	db	81
   444  00768B  49                 	db	73
   445  00768C  6E                 	db	110
   446  00768D  00                 	db	0
   447  00768E  00                 	db	0
   448  00768F  00                 	db	0
   449  007690  22                 	db	34
   450  007691  41                 	db	65
   451  007692  49                 	db	73
   452  007693  49                 	db	73
   453  007694  36                 	db	54
   454  007695  00                 	db	0
   455  007696  00                 	db	0
   456  007697  00                 	db	0
   457  007698  18                 	db	24
   458  007699  14                 	db	20
   459  00769A  12                 	db	18
   460  00769B  7F                 	db	127
   461  00769C  10                 	db	16
   462  00769D  00                 	db	0
   463  00769E  00                 	db	0
   464  00769F  00                 	db	0
   465  0076A0  27                 	db	39
   466  0076A1  49                 	db	73
   467  0076A2  49                 	db	73
   468  0076A3  49                 	db	73
   469  0076A4  71                 	db	113
   470  0076A5  00                 	db	0
   471  0076A6  00                 	db	0
   472  0076A7  00                 	db	0
   473  0076A8  3C                 	db	60
   474  0076A9  4A                 	db	74
   475  0076AA  49                 	db	73
   476  0076AB  48                 	db	72
   477  0076AC  70                 	db	112
   478  0076AD  00                 	db	0
   479  0076AE  00                 	db	0
   480  0076AF  00                 	db	0
   481  0076B0  43                 	db	67
   482  0076B1  21                 	db	33
   483  0076B2  11                 	db	17
   484  0076B3  0D                 	db	13
   485  0076B4  03                 	db	3
   486  0076B5  00                 	db	0
   487  0076B6  00                 	db	0
   488  0076B7  00                 	db	0
   489  0076B8  36                 	db	54
   490  0076B9  49                 	db	73
   491  0076BA  49                 	db	73
   492  0076BB  49                 	db	73
   493  0076BC  36                 	db	54
   494  0076BD  00                 	db	0
   495  0076BE  00                 	db	0
   496  0076BF  00                 	db	0
   497  0076C0  06                 	db	6
   498  0076C1  09                 	db	9
   499  0076C2  49                 	db	73
   500  0076C3  29                 	db	41
   501  0076C4  1E                 	db	30
   502  0076C5  00                 	db	0
   503  0076C6  00                 	db	0
   504  0076C7  00                 	db	0
   505  0076C8  00                 	db	0
   506  0076C9  00                 	db	0
   507  0076CA  12                 	db	18
   508  0076CB  00                 	db	0
   509  0076CC  00                 	db	0
   510  0076CD  00                 	db	0
   511  0076CE  00                 	db	0
   512  0076CF  00                 	db	0
   513  0076D0  00                 	db	0
   514  0076D1  00                 	db	0
   515  0076D2  52                 	db	82
   516  0076D3  30                 	db	48
   517  0076D4  00                 	db	0
   518  0076D5  00                 	db	0
   519  0076D6  00                 	db	0
   520  0076D7  00                 	db	0
   521  0076D8  00                 	db	0
   522  0076D9  08                 	db	8
   523  0076DA  14                 	db	20
   524  0076DB  14                 	db	20
   525  0076DC  22                 	db	34
   526  0076DD  00                 	db	0
   527  0076DE  00                 	db	0
   528  0076DF  00                 	db	0
   529  0076E0  14                 	db	20
   530  0076E1  14                 	db	20
   531  0076E2  14                 	db	20
   532  0076E3  14                 	db	20
   533  0076E4  14                 	db	20
   534  0076E5  14                 	db	20
   535  0076E6  00                 	db	0
   536  0076E7  00                 	db	0
   537  0076E8  00                 	db	0
   538  0076E9  22                 	db	34
   539  0076EA  14                 	db	20
   540  0076EB  14                 	db	20
   541  0076EC  08                 	db	8
   542  0076ED  00                 	db	0
   543  0076EE  00                 	db	0
   544  0076EF  00                 	db	0
   545  0076F0  02                 	db	2
   546  0076F1  01                 	db	1
   547  0076F2  59                 	db	89
   548  0076F3  05                 	db	5
   549  0076F4  02                 	db	2
   550  0076F5  00                 	db	0
   551  0076F6  00                 	db	0
   552  0076F7  3E                 	db	62
   553  0076F8  41                 	db	65
   554  0076F9  5D                 	db	93
   555  0076FA  55                 	db	85
   556  0076FB  4D                 	db	77
   557  0076FC  51                 	db	81
   558  0076FD  2E                 	db	46
   559  0076FE  00                 	db	0
   560  0076FF  40                 	db	64
   561  007700  7C                 	db	124
   562  007701  4A                 	db	74
   563  007702  09                 	db	9
   564  007703  4A                 	db	74
   565  007704  7C                 	db	124
   566  007705  40                 	db	64
   567  007706  00                 	db	0
   568  007707  41                 	db	65
   569  007708  7F                 	db	127
   570  007709  49                 	db	73
   571  00770A  49                 	db	73
   572  00770B  49                 	db	73
   573  00770C  49                 	db	73
   574  00770D  36                 	db	54
   575  00770E  00                 	db	0
   576  00770F  1C                 	db	28
   577  007710  22                 	db	34
   578  007711  41                 	db	65
   579  007712  41                 	db	65
   580  007713  41                 	db	65
   581  007714  41                 	db	65
   582  007715  22                 	db	34
   583  007716  00                 	db	0
   584  007717  41                 	db	65
   585  007718  7F                 	db	127
   586  007719  41                 	db	65
   587  00771A  41                 	db	65
   588  00771B  41                 	db	65
   589  00771C  22                 	db	34
   590  00771D  1C                 	db	28
   591  00771E  00                 	db	0
   592  00771F  41                 	db	65
   593  007720  7F                 	db	127
   594  007721  49                 	db	73
   595  007722  49                 	db	73
   596  007723  5D                 	db	93
   597  007724  41                 	db	65
   598  007725  63                 	db	99
   599  007726  00                 	db	0
   600  007727  41                 	db	65
   601  007728  7F                 	db	127
   602  007729  49                 	db	73
   603  00772A  09                 	db	9
   604  00772B  1D                 	db	29
   605  00772C  01                 	db	1
   606  00772D  03                 	db	3
   607  00772E  00                 	db	0
   608  00772F  1C                 	db	28
   609  007730  22                 	db	34
   610  007731  41                 	db	65
   611  007732  49                 	db	73
   612  007733  49                 	db	73
   613  007734  3A                 	db	58
   614  007735  08                 	db	8
   615  007736  00                 	db	0
   616  007737  41                 	db	65
   617  007738  7F                 	db	127
   618  007739  08                 	db	8
   619  00773A  08                 	db	8
   620  00773B  08                 	db	8
   621  00773C  7F                 	db	127
   622  00773D  41                 	db	65
   623  00773E  00                 	db	0
   624  00773F  00                 	db	0
   625  007740  41                 	db	65
   626  007741  41                 	db	65
   627  007742  7F                 	db	127
   628  007743  41                 	db	65
   629  007744  41                 	db	65
   630  007745  00                 	db	0
   631  007746  00                 	db	0
   632  007747  30                 	db	48
   633  007748  40                 	db	64
   634  007749  41                 	db	65
   635  00774A  41                 	db	65
   636  00774B  3F                 	db	63
   637  00774C  01                 	db	1
   638  00774D  01                 	db	1
   639  00774E  00                 	db	0
   640  00774F  41                 	db	65
   641  007750  7F                 	db	127
   642  007751  08                 	db	8
   643  007752  0C                 	db	12
   644  007753  12                 	db	18
   645  007754  61                 	db	97
   646  007755  41                 	db	65
   647  007756  00                 	db	0
   648  007757  41                 	db	65
   649  007758  7F                 	db	127
   650  007759  41                 	db	65
   651  00775A  40                 	db	64
   652  00775B  40                 	db	64
   653  00775C  40                 	db	64
   654  00775D  60                 	db	96
   655  00775E  00                 	db	0
   656  00775F  41                 	db	65
   657  007760  7F                 	db	127
   658  007761  42                 	db	66
   659  007762  0C                 	db	12
   660  007763  42                 	db	66
   661  007764  7F                 	db	127
   662  007765  41                 	db	65
   663  007766  00                 	db	0
   664  007767  41                 	db	65
   665  007768  7F                 	db	127
   666  007769  42                 	db	66
   667  00776A  0C                 	db	12
   668  00776B  11                 	db	17
   669  00776C  7F                 	db	127
   670  00776D  01                 	db	1
   671  00776E  00                 	db	0
   672  00776F  1C                 	db	28
   673  007770  22                 	db	34
   674  007771  41                 	db	65
   675  007772  41                 	db	65
   676  007773  41                 	db	65
   677  007774  22                 	db	34
   678  007775  1C                 	db	28
   679  007776  00                 	db	0
   680  007777  41                 	db	65
   681  007778  7F                 	db	127
   682  007779  49                 	db	73
   683  00777A  09                 	db	9
   684  00777B  09                 	db	9
   685  00777C  09                 	db	9
   686  00777D  06                 	db	6
   687  00777E  00                 	db	0
   688  00777F  0C                 	db	12
   689  007780  12                 	db	18
   690  007781  21                 	db	33
   691  007782  21                 	db	33
   692  007783  61                 	db	97
   693  007784  52                 	db	82
   694  007785  4C                 	db	76
   695  007786  00                 	db	0
   696  007787  41                 	db	65
   697  007788  7F                 	db	127
   698  007789  09                 	db	9
   699  00778A  09                 	db	9
   700  00778B  19                 	db	25
   701  00778C  69                 	db	105
   702  00778D  46                 	db	70
   703  00778E  00                 	db	0
   704  00778F  66                 	db	102
   705  007790  49                 	db	73
   706  007791  49                 	db	73
   707  007792  49                 	db	73
   708  007793  49                 	db	73
   709  007794  49                 	db	73
   710  007795  33                 	db	51
   711  007796  00                 	db	0
   712  007797  03                 	db	3
   713  007798  01                 	db	1
   714  007799  41                 	db	65
   715  00779A  7F                 	db	127
   716  00779B  41                 	db	65
   717  00779C  01                 	db	1
   718  00779D  03                 	db	3
   719  00779E  00                 	db	0
   720  00779F  01                 	db	1
   721  0077A0  3F                 	db	63
   722  0077A1  41                 	db	65
   723  0077A2  40                 	db	64
   724  0077A3  41                 	db	65
   725  0077A4  3F                 	db	63
   726  0077A5  01                 	db	1
   727  0077A6  00                 	db	0
   728  0077A7  01                 	db	1
   729  0077A8  0F                 	db	15
   730  0077A9  31                 	db	49
   731  0077AA  40                 	db	64
   732  0077AB  31                 	db	49
   733  0077AC  0F                 	db	15
   734  0077AD  01                 	db	1
   735  0077AE  00                 	db	0
   736  0077AF  01                 	db	1
   737  0077B0  1F                 	db	31
   738  0077B1  61                 	db	97
   739  0077B2  14                 	db	20
   740  0077B3  61                 	db	97
   741  0077B4  1F                 	db	31
   742  0077B5  01                 	db	1
   743  0077B6  00                 	db	0
   744  0077B7  41                 	db	65
   745  0077B8  41                 	db	65
   746  0077B9  36                 	db	54
   747  0077BA  08                 	db	8
   748  0077BB  36                 	db	54
   749  0077BC  41                 	db	65
   750  0077BD  41                 	db	65
   751  0077BE  00                 	db	0
   752  0077BF  01                 	db	1
   753  0077C0  03                 	db	3
   754  0077C1  44                 	db	68
   755  0077C2  78                 	db	120
   756  0077C3  44                 	db	68
   757  0077C4  03                 	db	3
   758  0077C5  01                 	db	1
   759  0077C6  00                 	db	0
   760  0077C7  43                 	db	67
   761  0077C8  61                 	db	97
   762  0077C9  51                 	db	81
   763  0077CA  49                 	db	73
   764  0077CB  45                 	db	69
   765  0077CC  43                 	db	67
   766  0077CD  61                 	db	97
   767  0077CE  00                 	db	0
   768  0077CF  00                 	db	0
   769  0077D0  00                 	db	0
   770  0077D1  7F                 	db	127
   771  0077D2  41                 	db	65
   772  0077D3  41                 	db	65
   773  0077D4  00                 	db	0
   774  0077D5  00                 	db	0
   775  0077D6  00                 	db	0
   776  0077D7  01                 	db	1
   777  0077D8  02                 	db	2
   778  0077D9  04                 	db	4
   779  0077DA  08                 	db	8
   780  0077DB  10                 	db	16
   781  0077DC  20                 	db	32
   782  0077DD  40                 	db	64
   783  0077DE  00                 	db	0
   784  0077DF  00                 	db	0
   785  0077E0  00                 	db	0
   786  0077E1  41                 	db	65
   787  0077E2  41                 	db	65
   788  0077E3  7F                 	db	127
   789  0077E4  00                 	db	0
   790  0077E5  00                 	db	0
   791  0077E6  00                 	db	0
   792  0077E7  00                 	db	0
   793  0077E8  04                 	db	4
   794  0077E9  02                 	db	2
   795  0077EA  01                 	db	1
   796  0077EB  01                 	db	1
   797  0077EC  02                 	db	2
   798  0077ED  04                 	db	4
   799  0077EE  00                 	db	0
   800  0077EF  00                 	db	0
   801  0077F0  40                 	db	64
   802  0077F1  40                 	db	64
   803  0077F2  40                 	db	64
   804  0077F3  40                 	db	64
   805  0077F4  40                 	db	64
   806  0077F5  40                 	db	64
   807  0077F6  00                 	db	0
   808  0077F7  00                 	db	0
   809  0077F8  01                 	db	1
   810  0077F9  02                 	db	2
   811  0077FA  00                 	db	0
   812  0077FB  00                 	db	0
   813  0077FC  00                 	db	0
   814  0077FD  00                 	db	0
   815  0077FE  00                 	db	0
   816  0077FF  00                 	db	0
   817  007800  34                 	db	52
   818  007801  4A                 	db	74
   819  007802  4A                 	db	74
   820  007803  4A                 	db	74
   821  007804  3C                 	db	60
   822  007805  40                 	db	64
   823  007806  00                 	db	0
   824  007807  00                 	db	0
   825  007808  41                 	db	65
   826  007809  3F                 	db	63
   827  00780A  48                 	db	72
   828  00780B  48                 	db	72
   829  00780C  48                 	db	72
   830  00780D  30                 	db	48
   831  00780E  00                 	db	0
   832  00780F  00                 	db	0
   833  007810  3C                 	db	60
   834  007811  42                 	db	66
   835  007812  42                 	db	66
   836  007813  42                 	db	66
   837  007814  24                 	db	36
   838  007815  00                 	db	0
   839  007816  00                 	db	0
   840  007817  00                 	db	0
   841  007818  30                 	db	48
   842  007819  48                 	db	72
   843  00781A  48                 	db	72
   844  00781B  49                 	db	73
   845  00781C  3F                 	db	63
   846  00781D  40                 	db	64
   847  00781E  00                 	db	0
   848  00781F  00                 	db	0
   849  007820  3C                 	db	60
   850  007821  4A                 	db	74
   851  007822  4A                 	db	74
   852  007823  4A                 	db	74
   853  007824  2C                 	db	44
   854  007825  00                 	db	0
   855  007826  00                 	db	0
   856  007827  00                 	db	0
   857  007828  00                 	db	0
   858  007829  48                 	db	72
   859  00782A  7E                 	db	126
   860  00782B  49                 	db	73
   861  00782C  09                 	db	9
   862  00782D  00                 	db	0
   863  00782E  00                 	db	0
   864  00782F  00                 	db	0
   865  007830  26                 	db	38
   866  007831  49                 	db	73
   867  007832  49                 	db	73
   868  007833  49                 	db	73
   869  007834  3F                 	db	63
   870  007835  01                 	db	1
   871  007836  00                 	db	0
   872  007837  41                 	db	65
   873  007838  7F                 	db	127
   874  007839  48                 	db	72
   875  00783A  04                 	db	4
   876  00783B  44                 	db	68
   877  00783C  78                 	db	120
   878  00783D  40                 	db	64
   879  00783E  00                 	db	0
   880  00783F  00                 	db	0
   881  007840  00                 	db	0
   882  007841  44                 	db	68
   883  007842  7D                 	db	125
   884  007843  40                 	db	64
   885  007844  00                 	db	0
   886  007845  00                 	db	0
   887  007846  00                 	db	0
   888  007847  00                 	db	0
   889  007848  00                 	db	0
   890  007849  40                 	db	64
   891  00784A  44                 	db	68
   892  00784B  3D                 	db	61
   893  00784C  00                 	db	0
   894  00784D  00                 	db	0
   895  00784E  00                 	db	0
   896  00784F  41                 	db	65
   897  007850  7F                 	db	127
   898  007851  10                 	db	16
   899  007852  18                 	db	24
   900  007853  24                 	db	36
   901  007854  42                 	db	66
   902  007855  42                 	db	66
   903  007856  00                 	db	0
   904  007857  00                 	db	0
   905  007858  40                 	db	64
   906  007859  41                 	db	65
   907  00785A  7F                 	db	127
   908  00785B  40                 	db	64
   909  00785C  40                 	db	64
   910  00785D  00                 	db	0
   911  00785E  00                 	db	0
   912  00785F  42                 	db	66
   913  007860  7E                 	db	126
   914  007861  02                 	db	2
   915  007862  7C                 	db	124
   916  007863  02                 	db	2
   917  007864  7E                 	db	126
   918  007865  40                 	db	64
   919  007866  00                 	db	0
   920  007867  42                 	db	66
   921  007868  7E                 	db	126
   922  007869  44                 	db	68
   923  00786A  02                 	db	2
   924  00786B  42                 	db	66
   925  00786C  7C                 	db	124
   926  00786D  40                 	db	64
   927  00786E  00                 	db	0
   928  00786F  00                 	db	0
   929  007870  3C                 	db	60
   930  007871  42                 	db	66
   931  007872  42                 	db	66
   932  007873  42                 	db	66
   933  007874  3C                 	db	60
   934  007875  00                 	db	0
   935  007876  00                 	db	0
   936  007877  00                 	db	0
   937  007878  41                 	db	65
   938  007879  7F                 	db	127
   939  00787A  49                 	db	73
   940  00787B  09                 	db	9
   941  00787C  09                 	db	9
   942  00787D  06                 	db	6
   943  00787E  00                 	db	0
   944  00787F  00                 	db	0
   945  007880  06                 	db	6
   946  007881  09                 	db	9
   947  007882  09                 	db	9
   948  007883  49                 	db	73
   949  007884  7F                 	db	127
   950  007885  41                 	db	65
   951  007886  00                 	db	0
   952  007887  00                 	db	0
   953  007888  42                 	db	66
   954  007889  7E                 	db	126
   955  00788A  44                 	db	68
   956  00788B  02                 	db	2
   957  00788C  02                 	db	2
   958  00788D  04                 	db	4
   959  00788E  00                 	db	0
   960  00788F  00                 	db	0
   961  007890  64                 	db	100
   962  007891  4A                 	db	74
   963  007892  4A                 	db	74
   964  007893  4A                 	db	74
   965  007894  36                 	db	54
   966  007895  00                 	db	0
   967  007896  00                 	db	0
   968  007897  00                 	db	0
   969  007898  04                 	db	4
   970  007899  3F                 	db	63
   971  00789A  44                 	db	68
   972  00789B  44                 	db	68
   973  00789C  20                 	db	32
   974  00789D  00                 	db	0
   975  00789E  00                 	db	0
   976  00789F  00                 	db	0
   977  0078A0  02                 	db	2
   978  0078A1  3E                 	db	62
   979  0078A2  40                 	db	64
   980  0078A3  40                 	db	64
   981  0078A4  22                 	db	34
   982  0078A5  7E                 	db	126
   983  0078A6  40                 	db	64
   984  0078A7  02                 	db	2
   985  0078A8  0E                 	db	14
   986  0078A9  32                 	db	50
   987  0078AA  40                 	db	64
   988  0078AB  32                 	db	50
   989  0078AC  0E                 	db	14
   990  0078AD  02                 	db	2
   991  0078AE  00                 	db	0
   992  0078AF  02                 	db	2
   993  0078B0  1E                 	db	30
   994  0078B1  62                 	db	98
   995  0078B2  18                 	db	24
   996  0078B3  62                 	db	98
   997  0078B4  1E                 	db	30
   998  0078B5  02                 	db	2
   999  0078B6  00                 	db	0
  1000  0078B7  42                 	db	66
  1001  0078B8  62                 	db	98
  1002  0078B9  14                 	db	20
  1003  0078BA  08                 	db	8
  1004  0078BB  14                 	db	20
  1005  0078BC  62                 	db	98
  1006  0078BD  42                 	db	66
  1007  0078BE  00                 	db	0
  1008  0078BF  01                 	db	1
  1009  0078C0  43                 	db	67
  1010  0078C1  45                 	db	69
  1011  0078C2  38                 	db	56
  1012  0078C3  05                 	db	5
  1013  0078C4  03                 	db	3
  1014  0078C5  01                 	db	1
  1015  0078C6  00                 	db	0
  1016  0078C7  00                 	db	0
  1017  0078C8  46                 	db	70
  1018  0078C9  62                 	db	98
  1019  0078CA  52                 	db	82
  1020  0078CB  4A                 	db	74
  1021  0078CC  46                 	db	70
  1022  0078CD  62                 	db	98
  1023  0078CE  00                 	db	0
  1024  0078CF  00                 	db	0
  1025  0078D0  00                 	db	0
  1026  0078D1  08                 	db	8
  1027  0078D2  36                 	db	54
  1028  0078D3  41                 	db	65
  1029  0078D4  00                 	db	0
  1030  0078D5  00                 	db	0
  1031  0078D6  00                 	db	0
  1032  0078D7  00                 	db	0
  1033  0078D8  00                 	db	0
  1034  0078D9  00                 	db	0
  1035  0078DA  7F                 	db	127
  1036  0078DB  00                 	db	0
  1037  0078DC  00                 	db	0
  1038  0078DD  00                 	db	0
  1039  0078DE  00                 	db	0
  1040  0078DF  00                 	db	0
  1041  0078E0  00                 	db	0
  1042  0078E1  00                 	db	0
  1043  0078E2  41                 	db	65
  1044  0078E3  36                 	db	54
  1045  0078E4  08                 	db	8
  1046  0078E5  00                 	db	0
  1047  0078E6  00                 	db	0
  1048  0078E7  00                 	db	0
  1049  0078E8  18                 	db	24
  1050  0078E9  08                 	db	8
  1051  0078EA  08                 	db	8
  1052  0078EB  10                 	db	16
  1053  0078EC  10                 	db	16
  1054  0078ED  18                 	db	24
  1055  0078EE  00                 	db	0
  1056  0078EF  AA                 	db	170
  1057  0078F0  55                 	db	85
  1058  0078F1  AA                 	db	170
  1059  0078F2  55                 	db	85
  1060  0078F3  AA                 	db	170
  1061  0078F4  55                 	db	85
  1062  0078F5  AA                 	db	170
  1063  0078F6  55                 	db	85
  1064  0078F7                     __end_of_OledFont0:
  1065                           	opt stack 0
  1066  0078F7                     _configDescriptor1:
  1067                           	opt stack 0
  1068  0078F7  09                 	db	9
  1069  0078F8  02                 	db	2
  1070  0078F9  43                 	db	67
  1071  0078FA  00                 	db	0
  1072  0078FB  02                 	db	2
  1073  0078FC  01                 	db	1
  1074  0078FD  00                 	db	0
  1075  0078FE  C0                 	db	192
  1076  0078FF  32                 	db	50
  1077  007900  09                 	db	9
  1078  007901  04                 	db	4
  1079  007902  00                 	db	0
  1080  007903  00                 	db	0
  1081  007904  01                 	db	1
  1082  007905  02                 	db	2
  1083  007906  02                 	db	2
  1084  007907  01                 	db	1
  1085  007908  00                 	db	0
  1086  007909  05                 	db	5
  1087  00790A  24                 	db	36
  1088  00790B  00                 	db	0
  1089  00790C  10                 	db	16
  1090  00790D  01                 	db	1
  1091  00790E  04                 	db	4
  1092  00790F  24                 	db	36
  1093  007910  02                 	db	2
  1094  007911  02                 	db	2
  1095  007912  05                 	db	5
  1096  007913  24                 	db	36
  1097  007914  06                 	db	6
  1098  007915  00                 	db	0
  1099  007916  01                 	db	1
  1100  007917  05                 	db	5
  1101  007918  24                 	db	36
  1102  007919  01                 	db	1
  1103  00791A  00                 	db	0
  1104  00791B  01                 	db	1
  1105  00791C  07                 	db	7
  1106  00791D  05                 	db	5
  1107  00791E  81                 	db	129
  1108  00791F  03                 	db	3
  1109  007920  08                 	db	8
  1110  007921  00                 	db	0
  1111  007922  02                 	db	2
  1112  007923  09                 	db	9
  1113  007924  04                 	db	4
  1114  007925  01                 	db	1
  1115  007926  00                 	db	0
  1116  007927  02                 	db	2
  1117  007928  0A                 	db	10
  1118  007929  00                 	db	0
  1119  00792A  00                 	db	0
  1120  00792B  00                 	db	0
  1121  00792C  07                 	db	7
  1122  00792D  05                 	db	5
  1123  00792E  02                 	db	2
  1124  00792F  02                 	db	2
  1125  007930  40                 	db	64
  1126  007931  00                 	db	0
  1127  007932  00                 	db	0
  1128  007933  07                 	db	7
  1129  007934  05                 	db	5
  1130  007935  82                 	db	130
  1131  007936  02                 	db	2
  1132  007937  40                 	db	64
  1133  007938  00                 	db	0
  1134  007939  00                 	db	0
  1135  00793A                     __end_of_configDescriptor1:
  1136                           	opt stack 0
  1137  00793A                     _sd002:
  1138                           	opt stack 0
  1139  00793A  34                 	db	52
  1140  00793B  03                 	db	3
  1141  00793C  0043               	dw	67
  1142  00793E  0044               	dw	68
  1143  007940  0043               	dw	67
  1144  007942  0020               	dw	32
  1145  007944  0052               	dw	82
  1146  007946  0053               	dw	83
  1147  007948  002D               	dw	45
  1148  00794A  0032               	dw	50
  1149  00794C  0033               	dw	51
  1150  00794E  0032               	dw	50
  1151  007950  0020               	dw	32
  1152  007952  0045               	dw	69
  1153  007954  006D               	dw	109
  1154  007956  0075               	dw	117
  1155  007958  006C               	dw	108
  1156  00795A  0061               	dw	97
  1157  00795C  0074               	dw	116
  1158  00795E  0069               	dw	105
  1159  007960  006F               	dw	111
  1160  007962  006E               	dw	110
  1161  007964  0020               	dw	32
  1162  007966  0044               	dw	68
  1163  007968  0065               	dw	101
  1164  00796A  006D               	dw	109
  1165  00796C  006F               	dw	111
  1166  00796E                     __end_of_sd002:
  1167                           	opt stack 0
  1168  00796E                     _sd001:
  1169                           	opt stack 0
  1170  00796E  34                 	db	52
  1171  00796F  03                 	db	3
  1172  007970  004D               	dw	77
  1173  007972  0069               	dw	105
  1174  007974  0063               	dw	99
  1175  007976  0072               	dw	114
  1176  007978  006F               	dw	111
  1177  00797A  0063               	dw	99
  1178  00797C  0068               	dw	104
  1179  00797E  0069               	dw	105
  1180  007980  0070               	dw	112
  1181  007982  0020               	dw	32
  1182  007984  0054               	dw	84
  1183  007986  0065               	dw	101
  1184  007988  0063               	dw	99
  1185  00798A  0068               	dw	104
  1186  00798C  006E               	dw	110
  1187  00798E  006F               	dw	111
  1188  007990  006C               	dw	108
  1189  007992  006F               	dw	111
  1190  007994  0067               	dw	103
  1191  007996  0079               	dw	121
  1192  007998  0020               	dw	32
  1193  00799A  0049               	dw	73
  1194  00799C  006E               	dw	110
  1195  00799E  0063               	dw	99
  1196  0079A0  002E               	dw	46
  1197  0079A2                     __end_of_sd001:
  1198                           	opt stack 0
  1199  0079A2                     _device_dsc:
  1200                           	opt stack 0
  1201  0079A2  12                 	db	18
  1202  0079A3  01                 	db	1
  1203  0079A4  0200               	dw	512
  1204  0079A6  02                 	db	2
  1205  0079A7  00                 	db	0
  1206  0079A8  00                 	db	0
  1207  0079A9  08                 	db	8
  1208  0079AA  04D8               	dw	1240
  1209  0079AC  000A               	dw	10
  1210  0079AE  0100               	dw	256
  1211  0079B0  01                 	db	1
  1212  0079B1  02                 	db	2
  1213  0079B2  00                 	db	0
  1214  0079B3  01                 	db	1
  1215  0079B4                     __end_of_device_dsc:
  1216                           	opt stack 0
  1217  0079B4                     _sd000:
  1218                           	opt stack 0
  1219  0079B4  04                 	db	4
  1220  0079B5  03                 	db	3
  1221  0079B6  0409               	dw	1033
  1222  0079B8                     __end_of_sd000:
  1223                           	opt stack 0
  1224  0000                     _ANSELCbits	set	3933
  1225  0000                     _ANSELAbits	set	3931
  1226  0000                     _TMR3	set	4018
  1227  0000                     _TMR0	set	4054
  1228  0000                     _UEP0bits	set	3946
  1229  0000                     _IPR3bits	set	4005
  1230  0000                     _RCONbits	set	4048
  1231  0000                     _UCON	set	3936
  1232  0000                     _USTAT	set	3937
  1233  0000                     _PIR3bits	set	4004
  1234  0000                     _UIEbits	set	3940
  1235  0000                     _UIRbits	set	3941
  1236  0000                     _UADDR	set	3939
  1237  0000                     _UIE	set	3940
  1238  0000                     _UEIE	set	3942
  1239  0000                     _UCFG	set	3938
  1240  0000                     _UIR	set	3941
  1241  0000                     _UEIR	set	3943
  1242  0000                     _PIE3bits	set	4003
  1243  0000                     _T0CONbits	set	4053
  1244  0000                     _T3GCONbits	set	4020
  1245  0000                     _T3CONbits	set	4017
  1246  0000                     _T3GCON	set	4020
  1247  0000                     _T3CON	set	4017
  1248  0000                     _T2CONbits	set	4026
  1249  0000                     _TMR2	set	4028
  1250  0000                     _PR2	set	4027
  1251  0000                     _T2CON	set	4026
  1252  0000                     _VREFCON0bits	set	3965
  1253  0000                     _CM1CON0bits	set	3992
  1254  0000                     _CM2CON1bits	set	3994
  1255  0000                     _CM1CON0	set	3992
  1256  0000                     _EEDATA	set	4008
  1257  0000                     _EEADR	set	4009
  1258  0000                     _EECON2	set	4007
  1259  0000                     _EECON1bits	set	4006
  1260  0000                     _TABLAT	set	4085
  1261  0000                     _TBLPTRL	set	4086
  1262  0000                     _TBLPTRH	set	4087
  1263  0000                     _TBLPTRU	set	4088
  1264  0000                     _TRISD	set	3989
  1265  0000                     _IOCBbits	set	3974
  1266  0000                     _INTCON2bits	set	4081
  1267  0000                     _TRISAbits	set	3986
  1268  0000                     _T1GCONbits	set	4044
  1269  0000                     _T1CONbits	set	4045
  1270  0000                     _TMR1L	set	4046
  1271  0000                     _TMR1H	set	4047
  1272  0000                     _T1GCON	set	4044
  1273  0000                     _T1CON	set	4045
  1274  0000                     _SSP1STATbits	set	4039
  1275  0000                     _SSPBUF	set	4041
  1276  0000                     _SSP1CON1bits	set	4038
  1277  0000                     _SSP1ADD	set	4040
  1278  0000                     _SSP1CON1	set	4038
  1279  0000                     _SSP1STAT	set	4039
  1280  0000                     _ADRESH	set	4036
  1281  0000                     _ADRESL	set	4035
  1282  0000                     _ADCON2	set	4032
  1283  0000                     _ADCON1	set	4033
  1284  0000                     _ADCON0	set	4034
  1285  0000                     _VREFCON0	set	3965
  1286  0000                     _ACTCON	set	4021
  1287  0000                     _OSCCON2bits	set	4050
  1288  0000                     _OSCCON2	set	4050
  1289  0000                     _OSCCON	set	4051
  1290  0000                     _OSCTUNE	set	3995
  1291  0000                     _PIR1bits	set	3998
  1292  0000                     _RCREG	set	4014
  1293  0000                     _RCSTAbits	set	4011
  1294  0000                     _TXSTA	set	4012
  1295  0000                     _RCSTA	set	4011
  1296  0000                     _BAUDCON	set	4024
  1297  0000                     _LATD	set	3980
  1298  0000                     _TRISCbits	set	3988
  1299  0000                     _TRISBbits	set	3987
  1300  0000                     _TRISEbits	set	3990
  1301  0000                     _SPBRGH	set	4016
  1302  0000                     _SPBRG	set	4015
  1303  0000                     _UCONbits	set	3936
  1304  0000                     _TMR3L	set	4018
  1305  0000                     _TMR3H	set	4019
  1306  0000                     _PIR2bits	set	4001
  1307  0000                     _WDTCONbits	set	4049
  1308  0000                     _PORTCbits	set	3970
  1309  0000                     _IOCCbits	set	3975
  1310  0000                     _INTCON3bits	set	4080
  1311  0000                     _PIE2bits	set	4000
  1312  0000                     _LATEbits	set	3981
  1313  0000                     _INTCONbits	set	4082
  1314  0000                     _ADCON0bits	set	4034
  1315  0000                     _PORTAbits	set	3968
  1316  0000                     _PIE1bits	set	3997
  1317  0000                     _TXREG	set	4013
  1318  0000                     _LATCbits	set	3979
  1319  0000                     _TXSTAbits	set	4012
  1320  0000                     _LATAbits	set	3977
  1321  0000                     _PORTBbits	set	3969
  1322  0000                     _LATBbits	set	3978
  1323  0000                     _UEP1	set	3947
  1324  0000                     _UEP0	set	3946
  1325  0000                     _CKE	set	32318
  1326  0000                     _CKP	set	32308
  1327  0000                     _GIE	set	32663
  1328  0000                     _PEIE	set	32662
  1329  0079B8                     STR_184:
  1330  0079B8  73                 	db	115	;'s'
  1331  0079B9  79                 	db	121	;'y'
  1332  0079BA  73                 	db	115	;'s'
  1333  0079BB  20                 	db	32
  1334  0079BC  73                 	db	115	;'s'
  1335  0079BD  65                 	db	101	;'e'
  1336  0079BE  74                 	db	116	;'t'
  1337  0079BF  20                 	db	32
  1338  0079C0  70                 	db	112	;'p'
  1339  0079C1  69                 	db	105	;'i'
  1340  0079C2  6E                 	db	110	;'n'
  1341  0079C3  6D                 	db	109	;'m'
  1342  0079C4  6F                 	db	111	;'o'
  1343  0079C5  64                 	db	100	;'d'
  1344  0079C6  65                 	db	101	;'e'
  1345  0079C7  20                 	db	32
  1346  0079C8  47                 	db	71	;'G'
  1347  0079C9  50                 	db	80	;'P'
  1348  0079CA  49                 	db	73	;'I'
  1349  0079CB  4F                 	db	79	;'O'
  1350  0079CC  31                 	db	49	;'1'
  1351  0079CD  32                 	db	50	;'2'
  1352  0079CE  20                 	db	32
  1353  0079CF  61                 	db	97	;'a'
  1354  0079D0  6E                 	db	110	;'n'
  1355  0079D1  61                 	db	97	;'a'
  1356  0079D2  00                 	db	0
  1357  0079D3                     STR_183:
  1358  0079D3  73                 	db	115	;'s'
  1359  0079D4  79                 	db	121	;'y'
  1360  0079D5  73                 	db	115	;'s'
  1361  0079D6  20                 	db	32
  1362  0079D7  73                 	db	115	;'s'
  1363  0079D8  65                 	db	101	;'e'
  1364  0079D9  74                 	db	116	;'t'
  1365  0079DA  20                 	db	32
  1366  0079DB  70                 	db	112	;'p'
  1367  0079DC  69                 	db	105	;'i'
  1368  0079DD  6E                 	db	110	;'n'
  1369  0079DE  6D                 	db	109	;'m'
  1370  0079DF  6F                 	db	111	;'o'
  1371  0079E0  64                 	db	100	;'d'
  1372  0079E1  65                 	db	101	;'e'
  1373  0079E2  20                 	db	32
  1374  0079E3  47                 	db	71	;'G'
  1375  0079E4  50                 	db	80	;'P'
  1376  0079E5  49                 	db	73	;'I'
  1377  0079E6  4F                 	db	79	;'O'
  1378  0079E7  31                 	db	49	;'1'
  1379  0079E8  33                 	db	51	;'3'
  1380  0079E9  20                 	db	32
  1381  0079EA  61                 	db	97	;'a'
  1382  0079EB  6E                 	db	110	;'n'
  1383  0079EC  61                 	db	97	;'a'
  1384  0079ED  00                 	db	0
  1385  0079EE                     STR_177:
  1386  0079EE  73                 	db	115	;'s'
  1387  0079EF  79                 	db	121	;'y'
  1388  0079F0  73                 	db	115	;'s'
  1389  0079F1  20                 	db	32
  1390  0079F2  73                 	db	115	;'s'
  1391  0079F3  65                 	db	101	;'e'
  1392  0079F4  74                 	db	116	;'t'
  1393  0079F5  20                 	db	32
  1394  0079F6  70                 	db	112	;'p'
  1395  0079F7  69                 	db	105	;'i'
  1396  0079F8  6E                 	db	110	;'n'
  1397  0079F9  64                 	db	100	;'d'
  1398  0079FA  69                 	db	105	;'i'
  1399  0079FB  67                 	db	103	;'g'
  1400  0079FC  20                 	db	32
  1401  0079FD  47                 	db	71	;'G'
  1402  0079FE  50                 	db	80	;'P'
  1403  0079FF  49                 	db	73	;'I'
  1404  007A00  4F                 	db	79	;'O'
  1405  007A01  31                 	db	49	;'1'
  1406  007A02  30                 	db	48	;'0'
  1407  007A03  20                 	db	32
  1408  007A04  30                 	db	48	;'0'
  1409  007A05  0D                 	db	13
  1410  007A06  0A                 	db	10
  1411  007A07  00                 	db	0
  1412  007A08                     STR_178:
  1413  007A08  73                 	db	115	;'s'
  1414  007A09  79                 	db	121	;'y'
  1415  007A0A  73                 	db	115	;'s'
  1416  007A0B  20                 	db	32
  1417  007A0C  73                 	db	115	;'s'
  1418  007A0D  65                 	db	101	;'e'
  1419  007A0E  74                 	db	116	;'t'
  1420  007A0F  20                 	db	32
  1421  007A10  70                 	db	112	;'p'
  1422  007A11  69                 	db	105	;'i'
  1423  007A12  6E                 	db	110	;'n'
  1424  007A13  64                 	db	100	;'d'
  1425  007A14  69                 	db	105	;'i'
  1426  007A15  67                 	db	103	;'g'
  1427  007A16  20                 	db	32
  1428  007A17  47                 	db	71	;'G'
  1429  007A18  50                 	db	80	;'P'
  1430  007A19  49                 	db	73	;'I'
  1431  007A1A  4F                 	db	79	;'O'
  1432  007A1B  31                 	db	49	;'1'
  1433  007A1C  31                 	db	49	;'1'
  1434  007A1D  20                 	db	32
  1435  007A1E  30                 	db	48	;'0'
  1436  007A1F  0D                 	db	13
  1437  007A20  0A                 	db	10
  1438  007A21  00                 	db	0
  1439  007A22                     STR_175:
  1440  007A22  73                 	db	115	;'s'
  1441  007A23  79                 	db	121	;'y'
  1442  007A24  73                 	db	115	;'s'
  1443  007A25  20                 	db	32
  1444  007A26  73                 	db	115	;'s'
  1445  007A27  65                 	db	101	;'e'
  1446  007A28  74                 	db	116	;'t'
  1447  007A29  20                 	db	32
  1448  007A2A  70                 	db	112	;'p'
  1449  007A2B  69                 	db	105	;'i'
  1450  007A2C  6E                 	db	110	;'n'
  1451  007A2D  64                 	db	100	;'d'
  1452  007A2E  69                 	db	105	;'i'
  1453  007A2F  67                 	db	103	;'g'
  1454  007A30  20                 	db	32
  1455  007A31  47                 	db	71	;'G'
  1456  007A32  50                 	db	80	;'P'
  1457  007A33  49                 	db	73	;'I'
  1458  007A34  4F                 	db	79	;'O'
  1459  007A35  31                 	db	49	;'1'
  1460  007A36  30                 	db	48	;'0'
  1461  007A37  20                 	db	32
  1462  007A38  31                 	db	49	;'1'
  1463  007A39  0D                 	db	13
  1464  007A3A  0A                 	db	10
  1465  007A3B  00                 	db	0
  1466  007A3C                     STR_176:
  1467  007A3C  73                 	db	115	;'s'
  1468  007A3D  79                 	db	121	;'y'
  1469  007A3E  73                 	db	115	;'s'
  1470  007A3F  20                 	db	32
  1471  007A40  73                 	db	115	;'s'
  1472  007A41  65                 	db	101	;'e'
  1473  007A42  74                 	db	116	;'t'
  1474  007A43  20                 	db	32
  1475  007A44  70                 	db	112	;'p'
  1476  007A45  69                 	db	105	;'i'
  1477  007A46  6E                 	db	110	;'n'
  1478  007A47  64                 	db	100	;'d'
  1479  007A48  69                 	db	105	;'i'
  1480  007A49  67                 	db	103	;'g'
  1481  007A4A  20                 	db	32
  1482  007A4B  47                 	db	71	;'G'
  1483  007A4C  50                 	db	80	;'P'
  1484  007A4D  49                 	db	73	;'I'
  1485  007A4E  4F                 	db	79	;'O'
  1486  007A4F  31                 	db	49	;'1'
  1487  007A50  31                 	db	49	;'1'
  1488  007A51  20                 	db	32
  1489  007A52  31                 	db	49	;'1'
  1490  007A53  0D                 	db	13
  1491  007A54  0A                 	db	10
  1492  007A55  00                 	db	0
  1493  007A56                     STR_185:
  1494  007A56  73                 	db	115	;'s'
  1495  007A57  79                 	db	121	;'y'
  1496  007A58  73                 	db	115	;'s'
  1497  007A59  20                 	db	32
  1498  007A5A  67                 	db	103	;'g'
  1499  007A5B  65                 	db	101	;'e'
  1500  007A5C  74                 	db	116	;'t'
  1501  007A5D  20                 	db	32
  1502  007A5E  70                 	db	112	;'p'
  1503  007A5F  69                 	db	105	;'i'
  1504  007A60  6E                 	db	110	;'n'
  1505  007A61  61                 	db	97	;'a'
  1506  007A62  6E                 	db	110	;'n'
  1507  007A63  61                 	db	97	;'a'
  1508  007A64  20                 	db	32
  1509  007A65  47                 	db	71	;'G'
  1510  007A66  50                 	db	80	;'P'
  1511  007A67  49                 	db	73	;'I'
  1512  007A68  4F                 	db	79	;'O'
  1513  007A69  31                 	db	49	;'1'
  1514  007A6A  32                 	db	50	;'2'
  1515  007A6B  00                 	db	0
  1516  007A6C                     STR_186:
  1517  007A6C  73                 	db	115	;'s'
  1518  007A6D  79                 	db	121	;'y'
  1519  007A6E  73                 	db	115	;'s'
  1520  007A6F  20                 	db	32
  1521  007A70  67                 	db	103	;'g'
  1522  007A71  65                 	db	101	;'e'
  1523  007A72  74                 	db	116	;'t'
  1524  007A73  20                 	db	32
  1525  007A74  70                 	db	112	;'p'
  1526  007A75  69                 	db	105	;'i'
  1527  007A76  6E                 	db	110	;'n'
  1528  007A77  61                 	db	97	;'a'
  1529  007A78  6E                 	db	110	;'n'
  1530  007A79  61                 	db	97	;'a'
  1531  007A7A  20                 	db	32
  1532  007A7B  47                 	db	71	;'G'
  1533  007A7C  50                 	db	80	;'P'
  1534  007A7D  49                 	db	73	;'I'
  1535  007A7E  4F                 	db	79	;'O'
  1536  007A7F  31                 	db	49	;'1'
  1537  007A80  33                 	db	51	;'3'
  1538  007A81  00                 	db	0
  1539  007A82                     STR_22:
  1540  007A82  73                 	db	115	;'s'
  1541  007A83  79                 	db	121	;'y'
  1542  007A84  73                 	db	115	;'s'
  1543  007A85  20                 	db	32
  1544  007A86  73                 	db	115	;'s'
  1545  007A87  6C                 	db	108	;'l'
  1546  007A88  65                 	db	101	;'e'
  1547  007A89  65                 	db	101	;'e'
  1548  007A8A  70                 	db	112	;'p'
  1549  007A8B  20                 	db	32
  1550  007A8C  39                 	db	57	;'9'
  1551  007A8D  39                 	db	57	;'9'
  1552  007A8E  39                 	db	57	;'9'
  1553  007A8F  39                 	db	57	;'9'
  1554  007A90  39                 	db	57	;'9'
  1555  007A91  39                 	db	57	;'9'
  1556  007A92  39                 	db	57	;'9'
  1557  007A93  39                 	db	57	;'9'
  1558  007A94  39                 	db	57	;'9'
  1559  007A95  00                 	db	0
  1560  007A96                     STR_96:
  1561  007A96  4D                 	db	77	;'M'
  1562  007A97  61                 	db	97	;'a'
  1563  007A98  63                 	db	99	;'c'
  1564  007A99  20                 	db	32
  1565  007A9A  45                 	db	69	;'E'
  1566  007A9B  72                 	db	114	;'r'
  1567  007A9C  72                 	db	114	;'r'
  1568  007A9D  6F                 	db	111	;'o'
  1569  007A9E  72                 	db	114	;'r'
  1570  007A9F  20                 	db	32
  1571  007AA0  4F                 	db	79	;'O'
  1572  007AA1  63                 	db	99	;'c'
  1573  007AA2  63                 	db	99	;'c'
  1574  007AA3  75                 	db	117	;'u'
  1575  007AA4  72                 	db	114	;'r'
  1576  007AA5  72                 	db	114	;'r'
  1577  007AA6  65                 	db	101	;'e'
  1578  007AA7  64                 	db	100	;'d'
  1579  007AA8  00                 	db	0
  1580  007AA9                     STR_83:
  1581  007AA9  28                 	db	40
  1582  007AAA  55                 	db	85	;'U'
  1583  007AAB  4E                 	db	78	;'N'
  1584  007AAC  43                 	db	67	;'C'
  1585  007AAD  4E                 	db	78	;'N'
  1586  007AAE  46                 	db	70	;'F'
  1587  007AAF  29                 	db	41
  1588  007AB0  20                 	db	32
  1589  007AB1  20                 	db	32
  1590  007AB2  20                 	db	32
  1591  007AB3  20                 	db	32
  1592  007AB4  28                 	db	40
  1593  007AB5  43                 	db	67	;'C'
  1594  007AB6  4E                 	db	78	;'N'
  1595  007AB7  46                 	db	70	;'F'
  1596  007AB8  29                 	db	41
  1597  007AB9  20                 	db	32
  1598  007ABA  00                 	db	0
  1599  007ABB                     STR_40:
  1600  007ABB  20                 	db	32
  1601  007ABC  20                 	db	32
  1602  007ABD  28                 	db	40
  1603  007ABE  53                 	db	83	;'S'
  1604  007ABF  32                 	db	50	;'2'
  1605  007AC0  29                 	db	41
  1606  007AC1  20                 	db	32
  1607  007AC2  20                 	db	32
  1608  007AC3  20                 	db	32
  1609  007AC4  20                 	db	32
  1610  007AC5  20                 	db	32
  1611  007AC6  20                 	db	32
  1612  007AC7  20                 	db	32
  1613  007AC8  20                 	db	32
  1614  007AC9  20                 	db	32
  1615  007ACA  20                 	db	32
  1616  007ACB  00                 	db	0
  1617  007ACC                     STR_92:
  1618  007ACC  20                 	db	32
  1619  007ACD  20                 	db	32
  1620  007ACE  20                 	db	32
  1621  007ACF  20                 	db	32
  1622  007AD0  52                 	db	82	;'R'
  1623  007AD1  65                 	db	101	;'e'
  1624  007AD2  63                 	db	99	;'c'
  1625  007AD3  65                 	db	101	;'e'
  1626  007AD4  69                 	db	105	;'i'
  1627  007AD5  76                 	db	118	;'v'
  1628  007AD6  65                 	db	101	;'e'
  1629  007AD7  64                 	db	100	;'d'
  1630  007AD8  20                 	db	32
  1631  007AD9  20                 	db	32
  1632  007ADA  20                 	db	32
  1633  007ADB  20                 	db	32
  1634  007ADC  00                 	db	0
  1635  007ADD                     STR_42:
  1636  007ADD  20                 	db	32
  1637  007ADE  20                 	db	32
  1638  007ADF  20                 	db	32
  1639  007AE0  20                 	db	32
  1640  007AE1  20                 	db	32
  1641  007AE2  20                 	db	32
  1642  007AE3  20                 	db	32
  1643  007AE4  20                 	db	32
  1644  007AE5  20                 	db	32
  1645  007AE6  28                 	db	40
  1646  007AE7  53                 	db	83	;'S'
  1647  007AE8  33                 	db	51	;'3'
  1648  007AE9  29                 	db	41
  1649  007AEA  20                 	db	32
  1650  007AEB  20                 	db	32
  1651  007AEC  20                 	db	32
  1652  007AED  00                 	db	0
  1653  007AEE                     STR_34:
  1654  007AEE  20                 	db	32
  1655  007AEF  20                 	db	32
  1656  007AF0  28                 	db	40
  1657  007AF1  53                 	db	83	;'S'
  1658  007AF2  32                 	db	50	;'2'
  1659  007AF3  29                 	db	41
  1660  007AF4  20                 	db	32
  1661  007AF5  20                 	db	32
  1662  007AF6  20                 	db	32
  1663  007AF7  28                 	db	40
  1664  007AF8  53                 	db	83	;'S'
  1665  007AF9  33                 	db	51	;'3'
  1666  007AFA  29                 	db	41
  1667  007AFB  20                 	db	32
  1668  007AFC  20                 	db	32
  1669  007AFD  20                 	db	32
  1670  007AFE  00                 	db	0
  1671  007AFF                     STR_79:
  1672  007AFF  20                 	db	32
  1673  007B00  20                 	db	32
  1674  007B01  4C                 	db	76	;'L'
  1675  007B02  61                 	db	97	;'a'
  1676  007B03  73                 	db	115	;'s'
  1677  007B04  74                 	db	116	;'t'
  1678  007B05  20                 	db	32
  1679  007B06  4D                 	db	77	;'M'
  1680  007B07  65                 	db	101	;'e'
  1681  007B08  73                 	db	115	;'s'
  1682  007B09  73                 	db	115	;'s'
  1683  007B0A  61                 	db	97	;'a'
  1684  007B0B  67                 	db	103	;'g'
  1685  007B0C  65                 	db	101	;'e'
  1686  007B0D  20                 	db	32
  1687  007B0E  20                 	db	32
  1688  007B0F  00                 	db	0
  1689  007B10                     STR_78:
  1690  007B10  20                 	db	32
  1691  007B11  56                 	db	86	;'V'
  1692  007B12  69                 	db	105	;'i'
  1693  007B13  65                 	db	101	;'e'
  1694  007B14  77                 	db	119	;'w'
  1695  007B15  20                 	db	32
  1696  007B16  44                 	db	68	;'D'
  1697  007B17  6F                 	db	111	;'o'
  1698  007B18  77                 	db	119	;'w'
  1699  007B19  6E                 	db	110	;'n'
  1700  007B1A  6C                 	db	108	;'l'
  1701  007B1B  69                 	db	105	;'i'
  1702  007B1C  6E                 	db	110	;'n'
  1703  007B1D  6B                 	db	107	;'k'
  1704  007B1E  20                 	db	32
  1705  007B1F  20                 	db	32
  1706  007B20  00                 	db	0
  1707  007B21                     STR_75:
  1708  007B21  20                 	db	32
  1709  007B22  20                 	db	32
  1710  007B23  49                 	db	73	;'I'
  1711  007B24  73                 	db	115	;'s'
  1712  007B25  73                 	db	115	;'s'
  1713  007B26  75                 	db	117	;'u'
  1714  007B27  65                 	db	101	;'e'
  1715  007B28  20                 	db	32
  1716  007B29  55                 	db	85	;'U'
  1717  007B2A  70                 	db	112	;'p'
  1718  007B2B  6C                 	db	108	;'l'
  1719  007B2C  69                 	db	105	;'i'
  1720  007B2D  6E                 	db	110	;'n'
  1721  007B2E  6B                 	db	107	;'k'
  1722  007B2F  20                 	db	32
  1723  007B30  20                 	db	32
  1724  007B31  00                 	db	0
  1725  007B32                     STR_29:
  1726  007B32  20                 	db	32
  1727  007B33  28                 	db	40
  1728  007B34  53                 	db	83	;'S'
  1729  007B35  32                 	db	50	;'2'
  1730  007B36  29                 	db	41
  1731  007B37  20                 	db	32
  1732  007B38  20                 	db	32
  1733  007B39  20                 	db	32
  1734  007B3A  20                 	db	32
  1735  007B3B  20                 	db	32
  1736  007B3C  20                 	db	32
  1737  007B3D  28                 	db	40
  1738  007B3E  53                 	db	83	;'S'
  1739  007B3F  33                 	db	51	;'3'
  1740  007B40  29                 	db	41
  1741  007B41  20                 	db	32
  1742  007B42  00                 	db	0
  1743  007B43                     STR_32:
  1744  007B43  20                 	db	32
  1745  007B44  4A                 	db	74	;'J'
  1746  007B45  6F                 	db	111	;'o'
  1747  007B46  69                 	db	105	;'i'
  1748  007B47  6E                 	db	110	;'n'
  1749  007B48  69                 	db	105	;'i'
  1750  007B49  6E                 	db	110	;'n'
  1751  007B4A  67                 	db	103	;'g'
  1752  007B4B  20                 	db	32
  1753  007B4C  4D                 	db	77	;'M'
  1754  007B4D  65                 	db	101	;'e'
  1755  007B4E  74                 	db	116	;'t'
  1756  007B4F  68                 	db	104	;'h'
  1757  007B50  6F                 	db	111	;'o'
  1758  007B51  64                 	db	100	;'d'
  1759  007B52  20                 	db	32
  1760  007B53  00                 	db	0
  1761  007B54                     STR_91:
  1762  007B54  53                 	db	83	;'S'
  1763  007B55  65                 	db	101	;'e'
  1764  007B56  72                 	db	114	;'r'
  1765  007B57  76                 	db	118	;'v'
  1766  007B58  65                 	db	101	;'e'
  1767  007B59  72                 	db	114	;'r'
  1768  007B5A  20                 	db	32
  1769  007B5B  52                 	db	82	;'R'
  1770  007B5C  65                 	db	101	;'e'
  1771  007B5D  73                 	db	115	;'s'
  1772  007B5E  70                 	db	112	;'p'
  1773  007B5F  6F                 	db	111	;'o'
  1774  007B60  6E                 	db	110	;'n'
  1775  007B61  73                 	db	115	;'s'
  1776  007B62  65                 	db	101	;'e'
  1777  007B63  20                 	db	32
  1778  007B64  00                 	db	0
  1779  007B65                     STR_120:
  1780  007B65  54                 	db	84	;'T'
  1781  007B66  78                 	db	120	;'x'
  1782  007B67  20                 	db	32
  1783  007B68  45                 	db	69	;'E'
  1784  007B69  76                 	db	118	;'v'
  1785  007B6A  65                 	db	101	;'e'
  1786  007B6B  6E                 	db	110	;'n'
  1787  007B6C  74                 	db	116	;'t'
  1788  007B6D  20                 	db	32
  1789  007B6E  54                 	db	84	;'T'
  1790  007B6F  69                 	db	105	;'i'
  1791  007B70  6D                 	db	109	;'m'
  1792  007B71  69                 	db	105	;'i'
  1793  007B72  6E                 	db	110	;'n'
  1794  007B73  67                 	db	103	;'g'
  1795  007B74  20                 	db	32
  1796  007B75  00                 	db	0
  1797  007B76                     STR_119:
  1798  007B76  50                 	db	80	;'P'
  1799  007B77  65                 	db	101	;'e'
  1800  007B78  72                 	db	114	;'r'
  1801  007B79  69                 	db	105	;'i'
  1802  007B7A  6F                 	db	111	;'o'
  1803  007B7B  64                 	db	100	;'d'
  1804  007B7C  69                 	db	105	;'i'
  1805  007B7D  63                 	db	99	;'c'
  1806  007B7E  20                 	db	32
  1807  007B7F  55                 	db	85	;'U'
  1808  007B80  70                 	db	112	;'p'
  1809  007B81  6C                 	db	108	;'l'
  1810  007B82  69                 	db	105	;'i'
  1811  007B83  6E                 	db	110	;'n'
  1812  007B84  6B                 	db	107	;'k'
  1813  007B85  20                 	db	32
  1814  007B86  00                 	db	0
  1815  007B87                     STR_76:
  1816  007B87  20                 	db	32
  1817  007B88  4C                 	db	76	;'L'
  1818  007B89  6F                 	db	111	;'o'
  1819  007B8A  52                 	db	82	;'R'
  1820  007B8B  61                 	db	97	;'a'
  1821  007B8C  57                 	db	87	;'W'
  1822  007B8D  41                 	db	65	;'A'
  1823  007B8E  4E                 	db	78	;'N'
  1824  007B8F  20                 	db	32
  1825  007B90  50                 	db	80	;'P'
  1826  007B91  61                 	db	97	;'a'
  1827  007B92  63                 	db	99	;'c'
  1828  007B93  6B                 	db	107	;'k'
  1829  007B94  65                 	db	101	;'e'
  1830  007B95  74                 	db	116	;'t'
  1831  007B96  20                 	db	32
  1832  007B97  00                 	db	0
  1833  007B98                     STR_33:
  1834  007B98  3C                 	db	60	;'<'
  1835  007B99  2D                 	db	45
  1836  007B9A  20                 	db	32
  1837  007B9B  41                 	db	65	;'A'
  1838  007B9C  42                 	db	66	;'B'
  1839  007B9D  50                 	db	80	;'P'
  1840  007B9E  20                 	db	32
  1841  007B9F  20                 	db	32
  1842  007BA0  20                 	db	32
  1843  007BA1  4F                 	db	79	;'O'
  1844  007BA2  54                 	db	84	;'T'
  1845  007BA3  41                 	db	65	;'A'
  1846  007BA4  41                 	db	65	;'A'
  1847  007BA5  20                 	db	32
  1848  007BA6  2D                 	db	45
  1849  007BA7  3E                 	db	62	;'>'
  1850  007BA8  00                 	db	0
  1851  007BA9                     STR_26:
  1852  007BA9  52                 	db	82	;'R'
  1853  007BAA  65                 	db	101	;'e'
  1854  007BAB  52                 	db	82	;'R'
  1855  007BAC  75                 	db	117	;'u'
  1856  007BAD  6E                 	db	110	;'n'
  1857  007BAE  20                 	db	32
  1858  007BAF  50                 	db	80	;'P'
  1859  007BB0  77                 	db	119	;'w'
  1860  007BB1  72                 	db	114	;'r'
  1861  007BB2  54                 	db	84	;'T'
  1862  007BB3  73                 	db	115	;'s'
  1863  007BB4  74                 	db	116	;'t'
  1864  007BB5  3C                 	db	60	;'<'
  1865  007BB6  53                 	db	83	;'S'
  1866  007BB7  32                 	db	50	;'2'
  1867  007BB8  3E                 	db	62	;'>'
  1868  007BB9  00                 	db	0
  1869  007BBA                     STR_94:
  1870  007BBA  44                 	db	68	;'D'
  1871  007BBB  61                 	db	97	;'a'
  1872  007BBC  74                 	db	116	;'t'
  1873  007BBD  61                 	db	97	;'a'
  1874  007BBE  20                 	db	32
  1875  007BBF  54                 	db	84	;'T'
  1876  007BC0  72                 	db	114	;'r'
  1877  007BC1  61                 	db	97	;'a'
  1878  007BC2  6E                 	db	110	;'n'
  1879  007BC3  73                 	db	115	;'s'
  1880  007BC4  6D                 	db	109	;'m'
  1881  007BC5  69                 	db	105	;'i'
  1882  007BC6  74                 	db	116	;'t'
  1883  007BC7  74                 	db	116	;'t'
  1884  007BC8  65                 	db	101	;'e'
  1885  007BC9  64                 	db	100	;'d'
  1886  007BCA  00                 	db	0
  1887  007BCB                     STR_151:
  1888  007BCB  45                 	db	69	;'E'
  1889  007BCC  6E                 	db	110	;'n'
  1890  007BCD  74                 	db	116	;'t'
  1891  007BCE  65                 	db	101	;'e'
  1892  007BCF  72                 	db	114	;'r'
  1893  007BD0  20                 	db	32
  1894  007BD1  53                 	db	83	;'S'
  1895  007BD2  6C                 	db	108	;'l'
  1896  007BD3  65                 	db	101	;'e'
  1897  007BD4  65                 	db	101	;'e'
  1898  007BD5  70                 	db	112	;'p'
  1899  007BD6  20                 	db	32
  1900  007BD7  4D                 	db	77	;'M'
  1901  007BD8  6F                 	db	111	;'o'
  1902  007BD9  64                 	db	100	;'d'
  1903  007BDA  65                 	db	101	;'e'
  1904  007BDB  00                 	db	0
  1905  007BDC                     STR_81:
  1906  007BDC  55                 	db	85	;'U'
  1907  007BDD  70                 	db	112	;'p'
  1908  007BDE  6C                 	db	108	;'l'
  1909  007BDF  69                 	db	105	;'i'
  1910  007BE0  6E                 	db	110	;'n'
  1911  007BE1  6B                 	db	107	;'k'
  1912  007BE2  20                 	db	32
  1913  007BE3  50                 	db	80	;'P'
  1914  007BE4  63                 	db	99	;'c'
  1915  007BE5  6B                 	db	107	;'k'
  1916  007BE6  74                 	db	116	;'t'
  1917  007BE7  20                 	db	32
  1918  007BE8  54                 	db	84	;'T'
  1919  007BE9  79                 	db	121	;'y'
  1920  007BEA  70                 	db	112	;'p'
  1921  007BEB  65                 	db	101	;'e'
  1922  007BEC  00                 	db	0
  1923  007BED                     STR_135:
  1924  007BED  53                 	db	83	;'S'
  1925  007BEE  65                 	db	101	;'e'
  1926  007BEF  6C                 	db	108	;'l'
  1927  007BF0  65                 	db	101	;'e'
  1928  007BF1  63                 	db	99	;'c'
  1929  007BF2  74                 	db	116	;'t'
  1930  007BF3  20                 	db	32
  1931  007BF4  44                 	db	68	;'D'
  1932  007BF5  61                 	db	97	;'a'
  1933  007BF6  74                 	db	116	;'t'
  1934  007BF7  61                 	db	97	;'a'
  1935  007BF8  20                 	db	32
  1936  007BF9  52                 	db	82	;'R'
  1937  007BFA  61                 	db	97	;'a'
  1938  007BFB  74                 	db	116	;'t'
  1939  007BFC  65                 	db	101	;'e'
  1940  007BFD  00                 	db	0
  1941  007BFE                     STR_27:
  1942  007BFE  4D                 	db	77	;'M'
  1943  007BFF  6F                 	db	111	;'o'
  1944  007C00  62                 	db	98	;'b'
  1945  007C01  69                 	db	105	;'i'
  1946  007C02  6C                 	db	108	;'l'
  1947  007C03  65                 	db	101	;'e'
  1948  007C04  20                 	db	32
  1949  007C05  4D                 	db	77	;'M'
  1950  007C06  6F                 	db	111	;'o'
  1951  007C07  74                 	db	116	;'t'
  1952  007C08  65                 	db	101	;'e'
  1953  007C09  20                 	db	32
  1954  007C0A  2D                 	db	45
  1955  007C0B  41                 	db	65	;'A'
  1956  007C0C  70                 	db	112	;'p'
  1957  007C0D  70                 	db	112	;'p'
  1958  007C0E  00                 	db	0
  1959  007C0F                     STR_28:
  1960  007C0F  4E                 	db	78	;'N'
  1961  007C10  61                 	db	97	;'a'
  1962  007C11  76                 	db	118	;'v'
  1963  007C12  69                 	db	105	;'i'
  1964  007C13  67                 	db	103	;'g'
  1965  007C14  61                 	db	97	;'a'
  1966  007C15  74                 	db	116	;'t'
  1967  007C16  65                 	db	101	;'e'
  1968  007C17  20                 	db	32
  1969  007C18  20                 	db	32
  1970  007C19  53                 	db	83	;'S'
  1971  007C1A  65                 	db	101	;'e'
  1972  007C1B  6C                 	db	108	;'l'
  1973  007C1C  65                 	db	101	;'e'
  1974  007C1D  63                 	db	99	;'c'
  1975  007C1E  74                 	db	116	;'t'
  1976  007C1F  00                 	db	0
  1977  007C20                     STR_111:
  1978  007C20  4D                 	db	77	;'M'
  1979  007C21  65                 	db	101	;'e'
  1980  007C22  6E                 	db	110	;'n'
  1981  007C23  75                 	db	117	;'u'
  1982  007C24  20                 	db	32
  1983  007C25  48                 	db	72	;'H'
  1984  007C26  61                 	db	97	;'a'
  1985  007C27  73                 	db	115	;'s'
  1986  007C28  20                 	db	32
  1987  007C29  54                 	db	84	;'T'
  1988  007C2A  69                 	db	105	;'i'
  1989  007C2B  6D                 	db	109	;'m'
  1990  007C2C  65                 	db	101	;'e'
  1991  007C2D  6F                 	db	111	;'o'
  1992  007C2E  75                 	db	117	;'u'
  1993  007C2F  74                 	db	116	;'t'
  1994  007C30  00                 	db	0
  1995  007C31                     STR_71:
  1996  007C31  53                 	db	83	;'S'
  1997  007C32  65                 	db	101	;'e'
  1998  007C33  6E                 	db	110	;'n'
  1999  007C34  64                 	db	100	;'d'
  2000  007C35  20                 	db	32
  2001  007C36  50                 	db	80	;'P'
  2002  007C37  65                 	db	101	;'e'
  2003  007C38  72                 	db	114	;'r'
  2004  007C39  69                 	db	105	;'i'
  2005  007C3A  6F                 	db	111	;'o'
  2006  007C3B  64                 	db	100	;'d'
  2007  007C3C  69                 	db	105	;'i'
  2008  007C3D  63                 	db	99	;'c'
  2009  007C3E  20                 	db	32
  2010  007C3F  54                 	db	84	;'T'
  2011  007C40  78                 	db	120	;'x'
  2012  007C41  00                 	db	0
  2013  007C42                     STR_105:
  2014  007C42  44                 	db	68	;'D'
  2015  007C43  6F                 	db	111	;'o'
  2016  007C44  77                 	db	119	;'w'
  2017  007C45  6E                 	db	110	;'n'
  2018  007C46  6C                 	db	108	;'l'
  2019  007C47  69                 	db	105	;'i'
  2020  007C48  6E                 	db	110	;'n'
  2021  007C49  6B                 	db	107	;'k'
  2022  007C4A  20                 	db	32
  2023  007C4B  44                 	db	68	;'D'
  2024  007C4C  69                 	db	105	;'i'
  2025  007C4D  73                 	db	115	;'s'
  2026  007C4E  70                 	db	112	;'p'
  2027  007C4F  6C                 	db	108	;'l'
  2028  007C50  61                 	db	97	;'a'
  2029  007C51  79                 	db	121	;'y'
  2030  007C52  00                 	db	0
  2031  007C53                     STR_103:
  2032  007C53  20                 	db	32
  2033  007C54  20                 	db	32
  2034  007C55  20                 	db	32
  2035  007C56  20                 	db	32
  2036  007C57  44                 	db	68	;'D'
  2037  007C58  69                 	db	105	;'i'
  2038  007C59  73                 	db	115	;'s'
  2039  007C5A  70                 	db	112	;'p'
  2040  007C5B  6C                 	db	108	;'l'
  2041  007C5C  61                 	db	97	;'a'
  2042  007C5D  79                 	db	121	;'y'
  2043  007C5E  20                 	db	32
  2044  007C5F  20                 	db	32
  2045  007C60  20                 	db	32
  2046  007C61  20                 	db	32
  2047  007C62  00                 	db	0
  2048  007C63                     STR_102:
  2049  007C63  20                 	db	32
  2050  007C64  20                 	db	32
  2051  007C65  53                 	db	83	;'S'
  2052  007C66  65                 	db	101	;'e'
  2053  007C67  6E                 	db	110	;'n'
  2054  007C68  73                 	db	115	;'s'
  2055  007C69  6F                 	db	111	;'o'
  2056  007C6A  72                 	db	114	;'r'
  2057  007C6B  20                 	db	32
  2058  007C6C  44                 	db	68	;'D'
  2059  007C6D  61                 	db	97	;'a'
  2060  007C6E  74                 	db	116	;'t'
  2061  007C6F  61                 	db	97	;'a'
  2062  007C70  20                 	db	32
  2063  007C71  20                 	db	32
  2064  007C72  00                 	db	0
  2065  007C73                     STR_114:
  2066  007C73  28                 	db	40
  2067  007C74  4E                 	db	78	;'N'
  2068  007C75  41                 	db	65	;'A'
  2069  007C76  56                 	db	86	;'V'
  2070  007C77  29                 	db	41
  2071  007C78  20                 	db	32
  2072  007C79  20                 	db	32
  2073  007C7A  20                 	db	32
  2074  007C7B  20                 	db	32
  2075  007C7C  28                 	db	40
  2076  007C7D  43                 	db	67	;'C'
  2077  007C7E  4E                 	db	78	;'N'
  2078  007C7F  47                 	db	71	;'G'
  2079  007C80  29                 	db	41
  2080  007C81  20                 	db	32
  2081  007C82  00                 	db	0
  2082  007C83                     STR_77:
  2083  007C83  28                 	db	40
  2084  007C84  4E                 	db	78	;'N'
  2085  007C85  41                 	db	65	;'A'
  2086  007C86  56                 	db	86	;'V'
  2087  007C87  29                 	db	41
  2088  007C88  20                 	db	32
  2089  007C89  20                 	db	32
  2090  007C8A  20                 	db	32
  2091  007C8B  20                 	db	32
  2092  007C8C  28                 	db	40
  2093  007C8D  53                 	db	83	;'S'
  2094  007C8E  45                 	db	69	;'E'
  2095  007C8F  4C                 	db	76	;'L'
  2096  007C90  29                 	db	41
  2097  007C91  20                 	db	32
  2098  007C92  00                 	db	0
  2099  007C93                     STR_152:
  2100  007C93  28                 	db	40
  2101  007C94  4E                 	db	78	;'N'
  2102  007C95  41                 	db	65	;'A'
  2103  007C96  56                 	db	86	;'V'
  2104  007C97  29                 	db	41
  2105  007C98  20                 	db	32
  2106  007C99  20                 	db	32
  2107  007C9A  20                 	db	32
  2108  007C9B  20                 	db	32
  2109  007C9C  28                 	db	40
  2110  007C9D  53                 	db	83	;'S'
  2111  007C9E  4C                 	db	76	;'L'
  2112  007C9F  50                 	db	80	;'P'
  2113  007CA0  29                 	db	41
  2114  007CA1  20                 	db	32
  2115  007CA2  00                 	db	0
  2116  007CA3                     STR_163:
  2117  007CA3  6D                 	db	109	;'m'
  2118  007CA4  61                 	db	97	;'a'
  2119  007CA5  63                 	db	99	;'c'
  2120  007CA6  20                 	db	32
  2121  007CA7  73                 	db	115	;'s'
  2122  007CA8  65                 	db	101	;'e'
  2123  007CA9  74                 	db	116	;'t'
  2124  007CAA  20                 	db	32
  2125  007CAB  61                 	db	97	;'a'
  2126  007CAC  64                 	db	100	;'d'
  2127  007CAD  72                 	db	114	;'r'
  2128  007CAE  20                 	db	32
  2129  007CAF  6F                 	db	111	;'o'
  2130  007CB0  66                 	db	102	;'f'
  2131  007CB1  66                 	db	102	;'f'
  2132  007CB2  00                 	db	0
  2133  007CB3                     STR_98:
  2134  007CB3  4E                 	db	78	;'N'
  2135  007CB4  6F                 	db	111	;'o'
  2136  007CB5  20                 	db	32
  2137  007CB6  46                 	db	70	;'F'
  2138  007CB7  72                 	db	114	;'r'
  2139  007CB8  65                 	db	101	;'e'
  2140  007CB9  65                 	db	101	;'e'
  2141  007CBA  20                 	db	32
  2142  007CBB  43                 	db	67	;'C'
  2143  007CBC  68                 	db	104	;'h'
  2144  007CBD  61                 	db	97	;'a'
  2145  007CBE  6E                 	db	110	;'n'
  2146  007CBF  6E                 	db	110	;'n'
  2147  007CC0  65                 	db	101	;'e'
  2148  007CC1  6C                 	db	108	;'l'
  2149  007CC2  00                 	db	0
  2150  007CC3                     STR_7:
  2151  007CC3  42                 	db	66	;'B'
  2152  007CC4  75                 	db	117	;'u'
  2153  007CC5  69                 	db	105	;'i'
  2154  007CC6  6C                 	db	108	;'l'
  2155  007CC7  64                 	db	100	;'d'
  2156  007CC8  20                 	db	32
  2157  007CC9  44                 	db	68	;'D'
  2158  007CCA  61                 	db	97	;'a'
  2159  007CCB  74                 	db	116	;'t'
  2160  007CCC  65                 	db	101	;'e'
  2161  007CCD  2F                 	db	47
  2162  007CCE  54                 	db	84	;'T'
  2163  007CCF  69                 	db	105	;'i'
  2164  007CD0  6D                 	db	109	;'m'
  2165  007CD1  65                 	db	101	;'e'
  2166  007CD2  00                 	db	0
  2167  007CD3                     STR_112:
  2168  007CD3  20                 	db	32
  2169  007CD4  20                 	db	32
  2170  007CD5  20                 	db	32
  2171  007CD6  20                 	db	32
  2172  007CD7  45                 	db	69	;'E'
  2173  007CD8  6E                 	db	110	;'n'
  2174  007CD9  61                 	db	97	;'a'
  2175  007CDA  62                 	db	98	;'b'
  2176  007CDB  6C                 	db	108	;'l'
  2177  007CDC  65                 	db	101	;'e'
  2178  007CDD  64                 	db	100	;'d'
  2179  007CDE  20                 	db	32
  2180  007CDF  20                 	db	32
  2181  007CE0  20                 	db	32
  2182  007CE1  00                 	db	0
  2183  007CE2                     STR_113:
  2184  007CE2  20                 	db	32
  2185  007CE3  20                 	db	32
  2186  007CE4  20                 	db	32
  2187  007CE5  20                 	db	32
  2188  007CE6  44                 	db	68	;'D'
  2189  007CE7  69                 	db	105	;'i'
  2190  007CE8  73                 	db	115	;'s'
  2191  007CE9  61                 	db	97	;'a'
  2192  007CEA  62                 	db	98	;'b'
  2193  007CEB  6C                 	db	108	;'l'
  2194  007CEC  65                 	db	101	;'e'
  2195  007CED  64                 	db	100	;'d'
  2196  007CEE  20                 	db	32
  2197  007CEF  20                 	db	32
  2198  007CF0  00                 	db	0
  2199  007CF1                     STR_172:
  2200  007CF1  6D                 	db	109	;'m'
  2201  007CF2  61                 	db	97	;'a'
  2202  007CF3  63                 	db	99	;'c'
  2203  007CF4  20                 	db	32
  2204  007CF5  73                 	db	115	;'s'
  2205  007CF6  65                 	db	101	;'e'
  2206  007CF7  74                 	db	116	;'t'
  2207  007CF8  20                 	db	32
  2208  007CF9  61                 	db	97	;'a'
  2209  007CFA  64                 	db	100	;'d'
  2210  007CFB  72                 	db	114	;'r'
  2211  007CFC  20                 	db	32
  2212  007CFD  6F                 	db	111	;'o'
  2213  007CFE  6E                 	db	110	;'n'
  2214  007CFF  00                 	db	0
  2215  007D00                     STR_2:
  2216  007D00  20                 	db	32
  2217  007D01  20                 	db	32
  2218  007D02  20                 	db	32
  2219  007D03  4C                 	db	76	;'L'
  2220  007D04  6F                 	db	111	;'o'
  2221  007D05  52                 	db	82	;'R'
  2222  007D06  61                 	db	97	;'a'
  2223  007D07  20                 	db	32
  2224  007D08  44                 	db	68	;'D'
  2225  007D09  65                 	db	101	;'e'
  2226  007D0A  6D                 	db	109	;'m'
  2227  007D0B  6F                 	db	111	;'o'
  2228  007D0C  20                 	db	32
  2229  007D0D  20                 	db	32
  2230  007D0E  00                 	db	0
  2231  007D0F                     STR_3:
  2232  007D0F  20                 	db	32
  2233  007D10  56                 	db	86	;'V'
  2234  007D11  20                 	db	32
  2235  007D12  31                 	db	49	;'1'
  2236  007D13  2E                 	db	46
  2237  007D14  30                 	db	48	;'0'
  2238  007D15  2E                 	db	46
  2239  007D16  31                 	db	49	;'1'
  2240  007D17  20                 	db	32
  2241  007D18  43                 	db	67	;'C'
  2242  007D19  6F                 	db	111	;'o'
  2243  007D1A  64                 	db	100	;'d'
  2244  007D1B  65                 	db	101	;'e'
  2245  007D1C  20                 	db	32
  2246  007D1D  00                 	db	0
  2247  007D1E                     STR_1:
  2248  007D1E  4D                 	db	77	;'M'
  2249  007D1F  69                 	db	105	;'i'
  2250  007D20  63                 	db	99	;'c'
  2251  007D21  72                 	db	114	;'r'
  2252  007D22  6F                 	db	111	;'o'
  2253  007D23  63                 	db	99	;'c'
  2254  007D24  68                 	db	104	;'h'
  2255  007D25  69                 	db	105	;'i'
  2256  007D26  70                 	db	112	;'p'
  2257  007D27  20                 	db	32
  2258  007D28  4D                 	db	77	;'M'
  2259  007D29  6F                 	db	111	;'o'
  2260  007D2A  74                 	db	116	;'t'
  2261  007D2B  65                 	db	101	;'e'
  2262  007D2C  00                 	db	0
  2263  007D2D                     STR_74:
  2264  007D2D  6D                 	db	109	;'m'
  2265  007D2E  61                 	db	97	;'a'
  2266  007D2F  63                 	db	99	;'c'
  2267  007D30  20                 	db	32
  2268  007D31  74                 	db	116	;'t'
  2269  007D32  78                 	db	120	;'x'
  2270  007D33  20                 	db	32
  2271  007D34  75                 	db	117	;'u'
  2272  007D35  6E                 	db	110	;'n'
  2273  007D36  63                 	db	99	;'c'
  2274  007D37  6E                 	db	110	;'n'
  2275  007D38  66                 	db	102	;'f'
  2276  007D39  20                 	db	32
  2277  007D3A  00                 	db	0
  2278  007D3B                     STR_43:
  2279  007D3B  6D                 	db	109	;'m'
  2280  007D3C  61                 	db	97	;'a'
  2281  007D3D  63                 	db	99	;'c'
  2282  007D3E  20                 	db	32
  2283  007D3F  6A                 	db	106	;'j'
  2284  007D40  6F                 	db	111	;'o'
  2285  007D41  69                 	db	105	;'i'
  2286  007D42  6E                 	db	110	;'n'
  2287  007D43  20                 	db	32
  2288  007D44  6F                 	db	111	;'o'
  2289  007D45  74                 	db	116	;'t'
  2290  007D46  61                 	db	97	;'a'
  2291  007D47  61                 	db	97	;'a'
  2292  007D48  00                 	db	0
  2293  007D49                     STR_57:
  2294  007D49  69                 	db	105	;'i'
  2295  007D4A  6E                 	db	110	;'n'
  2296  007D4B  76                 	db	118	;'v'
  2297  007D4C  61                 	db	97	;'a'
  2298  007D4D  6C                 	db	108	;'l'
  2299  007D4E  69                 	db	105	;'i'
  2300  007D4F  64                 	db	100	;'d'
  2301  007D50  5F                 	db	95	;'_'
  2302  007D51  70                 	db	112	;'p'
  2303  007D52  61                 	db	97	;'a'
  2304  007D53  72                 	db	114	;'r'
  2305  007D54  61                 	db	97	;'a'
  2306  007D55  6D                 	db	109	;'m'
  2307  007D56  00                 	db	0
  2308  007D57                     STR_45:
  2309  007D57  6B                 	db	107	;'k'
  2310  007D58  65                 	db	101	;'e'
  2311  007D59  79                 	db	121	;'y'
  2312  007D5A  73                 	db	115	;'s'
  2313  007D5B  5F                 	db	95	;'_'
  2314  007D5C  6E                 	db	110	;'n'
  2315  007D5D  6F                 	db	111	;'o'
  2316  007D5E  74                 	db	116	;'t'
  2317  007D5F  5F                 	db	95	;'_'
  2318  007D60  69                 	db	105	;'i'
  2319  007D61  6E                 	db	110	;'n'
  2320  007D62  69                 	db	105	;'i'
  2321  007D63  74                 	db	116	;'t'
  2322  007D64  00                 	db	0
  2323  007D65                     STR_82:
  2324  007D65  54                 	db	84	;'T'
  2325  007D66  68                 	db	104	;'h'
  2326  007D67  72                 	db	114	;'r'
  2327  007D68  6F                 	db	111	;'o'
  2328  007D69  75                 	db	117	;'u'
  2329  007D6A  20                 	db	32
  2330  007D6B  50                 	db	80	;'P'
  2331  007D6C  6F                 	db	111	;'o'
  2332  007D6D  72                 	db	114	;'r'
  2333  007D6E  74                 	db	116	;'t'
  2334  007D6F  23                 	db	35
  2335  007D70  20                 	db	32
  2336  007D71  00                 	db	0
  2337  007D72                     STR_73:
  2338  007D72  4C                 	db	76	;'L'
  2339  007D73  3A                 	db	58	;':'
  2340  007D74  20                 	db	32
  2341  007D75  20                 	db	32
  2342  007D76  20                 	db	32
  2343  007D77  20                 	db	32
  2344  007D78  20                 	db	32
  2345  007D79  20                 	db	32
  2346  007D7A  20                 	db	32
  2347  007D7B  54                 	db	84	;'T'
  2348  007D7C  3A                 	db	58	;':'
  2349  007D7D  20                 	db	32
  2350  007D7E  00                 	db	0
  2351  007D7F                     STR_164:
  2352  007D7F  6D                 	db	109	;'m'
  2353  007D80  61                 	db	97	;'a'
  2354  007D81  63                 	db	99	;'c'
  2355  007D82  20                 	db	32
  2356  007D83  73                 	db	115	;'s'
  2357  007D84  65                 	db	101	;'e'
  2358  007D85  74                 	db	116	;'t'
  2359  007D86  20                 	db	32
  2360  007D87  64                 	db	100	;'d'
  2361  007D88  72                 	db	114	;'r'
  2362  007D89  20                 	db	32
  2363  007D8A  30                 	db	48	;'0'
  2364  007D8B  00                 	db	0
  2365  007D8C                     STR_165:
  2366  007D8C  6D                 	db	109	;'m'
  2367  007D8D  61                 	db	97	;'a'
  2368  007D8E  63                 	db	99	;'c'
  2369  007D8F  20                 	db	32
  2370  007D90  73                 	db	115	;'s'
  2371  007D91  65                 	db	101	;'e'
  2372  007D92  74                 	db	116	;'t'
  2373  007D93  20                 	db	32
  2374  007D94  64                 	db	100	;'d'
  2375  007D95  72                 	db	114	;'r'
  2376  007D96  20                 	db	32
  2377  007D97  31                 	db	49	;'1'
  2378  007D98  00                 	db	0
  2379  007D99                     STR_166:
  2380  007D99  6D                 	db	109	;'m'
  2381  007D9A  61                 	db	97	;'a'
  2382  007D9B  63                 	db	99	;'c'
  2383  007D9C  20                 	db	32
  2384  007D9D  73                 	db	115	;'s'
  2385  007D9E  65                 	db	101	;'e'
  2386  007D9F  74                 	db	116	;'t'
  2387  007DA0  20                 	db	32
  2388  007DA1  64                 	db	100	;'d'
  2389  007DA2  72                 	db	114	;'r'
  2390  007DA3  20                 	db	32
  2391  007DA4  32                 	db	50	;'2'
  2392  007DA5  00                 	db	0
  2393  007DA6                     STR_167:
  2394  007DA6  6D                 	db	109	;'m'
  2395  007DA7  61                 	db	97	;'a'
  2396  007DA8  63                 	db	99	;'c'
  2397  007DA9  20                 	db	32
  2398  007DAA  73                 	db	115	;'s'
  2399  007DAB  65                 	db	101	;'e'
  2400  007DAC  74                 	db	116	;'t'
  2401  007DAD  20                 	db	32
  2402  007DAE  64                 	db	100	;'d'
  2403  007DAF  72                 	db	114	;'r'
  2404  007DB0  20                 	db	32
  2405  007DB1  33                 	db	51	;'3'
  2406  007DB2  00                 	db	0
  2407  007DB3                     STR_168:
  2408  007DB3  6D                 	db	109	;'m'
  2409  007DB4  61                 	db	97	;'a'
  2410  007DB5  63                 	db	99	;'c'
  2411  007DB6  20                 	db	32
  2412  007DB7  73                 	db	115	;'s'
  2413  007DB8  65                 	db	101	;'e'
  2414  007DB9  74                 	db	116	;'t'
  2415  007DBA  20                 	db	32
  2416  007DBB  64                 	db	100	;'d'
  2417  007DBC  72                 	db	114	;'r'
  2418  007DBD  20                 	db	32
  2419  007DBE  34                 	db	52	;'4'
  2420  007DBF  00                 	db	0
  2421  007DC0                     STR_169:
  2422  007DC0  6D                 	db	109	;'m'
  2423  007DC1  61                 	db	97	;'a'
  2424  007DC2  63                 	db	99	;'c'
  2425  007DC3  20                 	db	32
  2426  007DC4  73                 	db	115	;'s'
  2427  007DC5  65                 	db	101	;'e'
  2428  007DC6  74                 	db	116	;'t'
  2429  007DC7  20                 	db	32
  2430  007DC8  64                 	db	100	;'d'
  2431  007DC9  72                 	db	114	;'r'
  2432  007DCA  20                 	db	32
  2433  007DCB  35                 	db	53	;'5'
  2434  007DCC  00                 	db	0
  2435  007DCD                     STR_170:
  2436  007DCD  6D                 	db	109	;'m'
  2437  007DCE  61                 	db	97	;'a'
  2438  007DCF  63                 	db	99	;'c'
  2439  007DD0  20                 	db	32
  2440  007DD1  73                 	db	115	;'s'
  2441  007DD2  65                 	db	101	;'e'
  2442  007DD3  74                 	db	116	;'t'
  2443  007DD4  20                 	db	32
  2444  007DD5  64                 	db	100	;'d'
  2445  007DD6  72                 	db	114	;'r'
  2446  007DD7  20                 	db	32
  2447  007DD8  36                 	db	54	;'6'
  2448  007DD9  00                 	db	0
  2449  007DDA                     STR_171:
  2450  007DDA  6D                 	db	109	;'m'
  2451  007DDB  61                 	db	97	;'a'
  2452  007DDC  63                 	db	99	;'c'
  2453  007DDD  20                 	db	32
  2454  007DDE  73                 	db	115	;'s'
  2455  007DDF  65                 	db	101	;'e'
  2456  007DE0  74                 	db	116	;'t'
  2457  007DE1  20                 	db	32
  2458  007DE2  64                 	db	100	;'d'
  2459  007DE3  72                 	db	114	;'r'
  2460  007DE4  20                 	db	32
  2461  007DE5  37                 	db	55	;'7'
  2462  007DE6  00                 	db	0
  2463  007DE7                     STR_41:
  2464  007DE7  6D                 	db	109	;'m'
  2465  007DE8  61                 	db	97	;'a'
  2466  007DE9  63                 	db	99	;'c'
  2467  007DEA  20                 	db	32
  2468  007DEB  6A                 	db	106	;'j'
  2469  007DEC  6F                 	db	111	;'o'
  2470  007DED  69                 	db	105	;'i'
  2471  007DEE  6E                 	db	110	;'n'
  2472  007DEF  20                 	db	32
  2473  007DF0  61                 	db	97	;'a'
  2474  007DF1  62                 	db	98	;'b'
  2475  007DF2  70                 	db	112	;'p'
  2476  007DF3  00                 	db	0
  2477  007DF4                     STR_10:
  2478  007DF4  42                 	db	66	;'B'
  2479  007DF5  75                 	db	117	;'u'
  2480  007DF6  74                 	db	116	;'t'
  2481  007DF7  74                 	db	116	;'t'
  2482  007DF8  6F                 	db	111	;'o'
  2483  007DF9  6E                 	db	110	;'n'
  2484  007DFA  20                 	db	32
  2485  007DFB  54                 	db	84	;'T'
  2486  007DFC  65                 	db	101	;'e'
  2487  007DFD  73                 	db	115	;'s'
  2488  007DFE  74                 	db	116	;'t'
  2489  007DFF  3A                 	db	58	;':'
  2490  007E00  00                 	db	0
  2491  007E01                     STR_13:
  2492  007E01  42                 	db	66	;'B'
  2493  007E02  75                 	db	117	;'u'
  2494  007E03  74                 	db	116	;'t'
  2495  007E04  74                 	db	116	;'t'
  2496  007E05  6F                 	db	111	;'o'
  2497  007E06  6E                 	db	110	;'n'
  2498  007E07  31                 	db	49	;'1'
  2499  007E08  20                 	db	32
  2500  007E09  50                 	db	80	;'P'
  2501  007E0A  41                 	db	65	;'A'
  2502  007E0B  53                 	db	83	;'S'
  2503  007E0C  53                 	db	83	;'S'
  2504  007E0D  00                 	db	0
  2505  007E0E                     STR_14:
  2506  007E0E  42                 	db	66	;'B'
  2507  007E0F  75                 	db	117	;'u'
  2508  007E10  74                 	db	116	;'t'
  2509  007E11  74                 	db	116	;'t'
  2510  007E12  6F                 	db	111	;'o'
  2511  007E13  6E                 	db	110	;'n'
  2512  007E14  32                 	db	50	;'2'
  2513  007E15  20                 	db	32
  2514  007E16  50                 	db	80	;'P'
  2515  007E17  41                 	db	65	;'A'
  2516  007E18  53                 	db	83	;'S'
  2517  007E19  53                 	db	83	;'S'
  2518  007E1A  00                 	db	0
  2519  007E1B                     STR_12:
  2520  007E1B  50                 	db	80	;'P'
  2521  007E1C  72                 	db	114	;'r'
  2522  007E1D  65                 	db	101	;'e'
  2523  007E1E  73                 	db	115	;'s'
  2524  007E1F  73                 	db	115	;'s'
  2525  007E20  20                 	db	32
  2526  007E21  42                 	db	66	;'B'
  2527  007E22  75                 	db	117	;'u'
  2528  007E23  74                 	db	116	;'t'
  2529  007E24  74                 	db	116	;'t'
  2530  007E25  6F                 	db	111	;'o'
  2531  007E26  6E                 	db	110	;'n'
  2532  007E27  00                 	db	0
  2533  007E28                     STR_189:
  2534  007E28  55                 	db	85	;'U'
  2535  007E29  53                 	db	83	;'S'
  2536  007E2A  42                 	db	66	;'B'
  2537  007E2B  20                 	db	32
  2538  007E2C  48                 	db	72	;'H'
  2539  007E2D  61                 	db	97	;'a'
  2540  007E2E  6E                 	db	110	;'n'
  2541  007E2F  64                 	db	100	;'d'
  2542  007E30  6C                 	db	108	;'l'
  2543  007E31  65                 	db	101	;'e'
  2544  007E32  72                 	db	114	;'r'
  2545  007E33  00                 	db	0
  2546  007E34                     STR_72:
  2547  007E34  4F                 	db	79	;'O'
  2548  007E35  6E                 	db	110	;'n'
  2549  007E36  20                 	db	32
  2550  007E37  50                 	db	80	;'P'
  2551  007E38  6F                 	db	111	;'o'
  2552  007E39  72                 	db	114	;'r'
  2553  007E3A  74                 	db	116	;'t'
  2554  007E3B  20                 	db	32
  2555  007E3C  23                 	db	35
  2556  007E3D  3A                 	db	58	;':'
  2557  007E3E  20                 	db	32
  2558  007E3F  00                 	db	0
  2559  007E40                     STR_87:
  2560  007E40  54                 	db	84	;'T'
  2561  007E41  78                 	db	120	;'x'
  2562  007E42  20                 	db	32
  2563  007E43  50                 	db	80	;'P'
  2564  007E44  6F                 	db	111	;'o'
  2565  007E45  72                 	db	114	;'r'
  2566  007E46  74                 	db	116	;'t'
  2567  007E47  20                 	db	32
  2568  007E48  23                 	db	35
  2569  007E49  3A                 	db	58	;':'
  2570  007E4A  20                 	db	32
  2571  007E4B  00                 	db	0
  2572  007E4C                     STR_86:
  2573  007E4C  53                 	db	83	;'S'
  2574  007E4D  65                 	db	101	;'e'
  2575  007E4E  6E                 	db	110	;'n'
  2576  007E4F  74                 	db	116	;'t'
  2577  007E50  20                 	db	32
  2578  007E51  44                 	db	68	;'D'
  2579  007E52  61                 	db	97	;'a'
  2580  007E53  74                 	db	116	;'t'
  2581  007E54  61                 	db	97	;'a'
  2582  007E55  3A                 	db	58	;':'
  2583  007E56  20                 	db	32
  2584  007E57  00                 	db	0
  2585  007E58                     STR_136:
  2586  007E58  44                 	db	68	;'D'
  2587  007E59  61                 	db	97	;'a'
  2588  007E5A  74                 	db	116	;'t'
  2589  007E5B  61                 	db	97	;'a'
  2590  007E5C  20                 	db	32
  2591  007E5D  52                 	db	82	;'R'
  2592  007E5E  61                 	db	97	;'a'
  2593  007E5F  74                 	db	116	;'t'
  2594  007E60  65                 	db	101	;'e'
  2595  007E61  3A                 	db	58	;':'
  2596  007E62  20                 	db	32
  2597  007E63  00                 	db	0
  2598  007E64                     STR_85:
  2599  007E64  6D                 	db	109	;'m'
  2600  007E65  61                 	db	97	;'a'
  2601  007E66  63                 	db	99	;'c'
  2602  007E67  20                 	db	32
  2603  007E68  74                 	db	116	;'t'
  2604  007E69  78                 	db	120	;'x'
  2605  007E6A  20                 	db	32
  2606  007E6B  63                 	db	99	;'c'
  2607  007E6C  6E                 	db	110	;'n'
  2608  007E6D  66                 	db	102	;'f'
  2609  007E6E  20                 	db	32
  2610  007E6F  00                 	db	0
  2611  007E70                     STR_8:
  2612  007E70  4D                 	db	77	;'M'
  2613  007E71  61                 	db	97	;'a'
  2614  007E72  72                 	db	114	;'r'
  2615  007E73  20                 	db	32
  2616  007E74  33                 	db	51	;'3'
  2617  007E75  30                 	db	48	;'0'
  2618  007E76  20                 	db	32
  2619  007E77  32                 	db	50	;'2'
  2620  007E78  30                 	db	48	;'0'
  2621  007E79  31                 	db	49	;'1'
  2622  007E7A  38                 	db	56	;'8'
  2623  007E7B  00                 	db	0
  2624  007E7C                     STR_11:
  2625  007E7C  42                 	db	66	;'B'
  2626  007E7D  75                 	db	117	;'u'
  2627  007E7E  74                 	db	116	;'t'
  2628  007E7F  74                 	db	116	;'t'
  2629  007E80  6F                 	db	111	;'o'
  2630  007E81  6E                 	db	110	;'n'
  2631  007E82  20                 	db	32
  2632  007E83  46                 	db	70	;'F'
  2633  007E84  41                 	db	65	;'A'
  2634  007E85  49                 	db	73	;'I'
  2635  007E86  4C                 	db	76	;'L'
  2636  007E87  00                 	db	0
  2637  007E88                     STR_61:
  2638  007E88  4F                 	db	79	;'O'
  2639  007E89  54                 	db	84	;'T'
  2640  007E8A  41                 	db	65	;'A'
  2641  007E8B  41                 	db	65	;'A'
  2642  007E8C  20                 	db	32
  2643  007E8D  4A                 	db	74	;'J'
  2644  007E8E  6F                 	db	111	;'o'
  2645  007E8F  69                 	db	105	;'i'
  2646  007E90  6E                 	db	110	;'n'
  2647  007E91  20                 	db	32
  2648  007E92  00                 	db	0
  2649  007E93                     STR_59:
  2650  007E93  6E                 	db	110	;'n'
  2651  007E94  6F                 	db	111	;'o'
  2652  007E95  5F                 	db	95	;'_'
  2653  007E96  66                 	db	102	;'f'
  2654  007E97  72                 	db	114	;'r'
  2655  007E98  65                 	db	101	;'e'
  2656  007E99  65                 	db	101	;'e'
  2657  007E9A  5F                 	db	95	;'_'
  2658  007E9B  63                 	db	99	;'c'
  2659  007E9C  68                 	db	104	;'h'
  2660  007E9D  00                 	db	0
  2661  007E9E                     STR_51:
  2662  007E9E  53                 	db	83	;'S'
  2663  007E9F  75                 	db	117	;'u'
  2664  007EA0  63                 	db	99	;'c'
  2665  007EA1  63                 	db	99	;'c'
  2666  007EA2  65                 	db	101	;'e'
  2667  007EA3  73                 	db	115	;'s'
  2668  007EA4  73                 	db	115	;'s'
  2669  007EA5  66                 	db	102	;'f'
  2670  007EA6  75                 	db	117	;'u'
  2671  007EA7  6C                 	db	108	;'l'
  2672  007EA8  00                 	db	0
  2673  007EA9                     STR_68:
  2674  007EA9  6D                 	db	109	;'m'
  2675  007EAA  61                 	db	97	;'a'
  2676  007EAB  63                 	db	99	;'c'
  2677  007EAC  20                 	db	32
  2678  007EAD  67                 	db	103	;'g'
  2679  007EAE  65                 	db	101	;'e'
  2680  007EAF  74                 	db	116	;'t'
  2681  007EB0  20                 	db	32
  2682  007EB1  64                 	db	100	;'d'
  2683  007EB2  72                 	db	114	;'r'
  2684  007EB3  00                 	db	0
  2685  007EB4                     STR_46:
  2686  007EB4  56                 	db	86	;'V'
  2687  007EB5  61                 	db	97	;'a'
  2688  007EB6  6C                 	db	108	;'l'
  2689  007EB7  69                 	db	105	;'i'
  2690  007EB8  64                 	db	100	;'d'
  2691  007EB9  20                 	db	32
  2692  007EBA  4B                 	db	75	;'K'
  2693  007EBB  65                 	db	101	;'e'
  2694  007EBC  79                 	db	121	;'y'
  2695  007EBD  73                 	db	115	;'s'
  2696  007EBE  00                 	db	0
  2697  007EBF                     STR_15:
  2698  007EBF  43                 	db	67	;'C'
  2699  007EC0  6F                 	db	111	;'o'
  2700  007EC1  6D                 	db	109	;'m'
  2701  007EC2  6D                 	db	109	;'m'
  2702  007EC3  20                 	db	32
  2703  007EC4  54                 	db	84	;'T'
  2704  007EC5  65                 	db	101	;'e'
  2705  007EC6  73                 	db	115	;'s'
  2706  007EC7  74                 	db	116	;'t'
  2707  007EC8  3A                 	db	58	;':'
  2708  007EC9  00                 	db	0
  2709  007ECA                     STR_106:
  2710  007ECA  52                 	db	82	;'R'
  2711  007ECB  78                 	db	120	;'x'
  2712  007ECC  20                 	db	32
  2713  007ECD  50                 	db	80	;'P'
  2714  007ECE  6F                 	db	111	;'o'
  2715  007ECF  72                 	db	114	;'r'
  2716  007ED0  74                 	db	116	;'t'
  2717  007ED1  23                 	db	35
  2718  007ED2  20                 	db	32
  2719  007ED3  00                 	db	0
  2720  007ED4                     STR_50:
  2721  007ED4  41                 	db	65	;'A'
  2722  007ED5  42                 	db	66	;'B'
  2723  007ED6  50                 	db	80	;'P'
  2724  007ED7  20                 	db	32
  2725  007ED8  4A                 	db	74	;'J'
  2726  007ED9  6F                 	db	111	;'o'
  2727  007EDA  69                 	db	105	;'i'
  2728  007EDB  6E                 	db	110	;'n'
  2729  007EDC  20                 	db	32
  2730  007EDD  00                 	db	0
  2731  007EDE                     STR_24:
  2732  007EDE  4D                 	db	77	;'M'
  2733  007EDF  4F                 	db	79	;'O'
  2734  007EE0  54                 	db	84	;'T'
  2735  007EE1  45                 	db	69	;'E'
  2736  007EE2  20                 	db	32
  2737  007EE3  4D                 	db	77	;'M'
  2738  007EE4  6F                 	db	111	;'o'
  2739  007EE5  64                 	db	100	;'d'
  2740  007EE6  65                 	db	101	;'e'
  2741  007EE7  00                 	db	0
  2742  007EE8                     STR_64:
  2743  007EE8  4F                 	db	79	;'O'
  2744  007EE9  54                 	db	84	;'T'
  2745  007EEA  41                 	db	65	;'A'
  2746  007EEB  41                 	db	65	;'A'
  2747  007EEC  20                 	db	32
  2748  007EED  4A                 	db	74	;'J'
  2749  007EEE  6F                 	db	111	;'o'
  2750  007EEF  69                 	db	105	;'i'
  2751  007EF0  6E                 	db	110	;'n'
  2752  007EF1  00                 	db	0
  2753  007EF2                     STR_52:
  2754  007EF2  6D                 	db	109	;'m'
  2755  007EF3  61                 	db	97	;'a'
  2756  007EF4  63                 	db	99	;'c'
  2757  007EF5  20                 	db	32
  2758  007EF6  72                 	db	114	;'r'
  2759  007EF7  65                 	db	101	;'e'
  2760  007EF8  73                 	db	115	;'s'
  2761  007EF9  65                 	db	101	;'e'
  2762  007EFA  74                 	db	116	;'t'
  2763  007EFB  00                 	db	0
  2764  007EFC                     STR_30:
  2765  007EFC  73                 	db	115	;'s'
  2766  007EFD  79                 	db	121	;'y'
  2767  007EFE  73                 	db	115	;'s'
  2768  007EFF  20                 	db	32
  2769  007F00  72                 	db	114	;'r'
  2770  007F01  65                 	db	101	;'e'
  2771  007F02  73                 	db	115	;'s'
  2772  007F03  65                 	db	101	;'e'
  2773  007F04  74                 	db	116	;'t'
  2774  007F05  00                 	db	0
  2775  007F06                     STR_16:
  2776  007F06  4C                 	db	76	;'L'
  2777  007F07  45                 	db	69	;'E'
  2778  007F08  44                 	db	68	;'D'
  2779  007F09  20                 	db	32
  2780  007F0A  54                 	db	84	;'T'
  2781  007F0B  65                 	db	101	;'e'
  2782  007F0C  73                 	db	115	;'s'
  2783  007F0D  74                 	db	116	;'t'
  2784  007F0E  3A                 	db	58	;':'
  2785  007F0F  00                 	db	0
  2786  007F10                     STR_187:
  2787  007F10  43                 	db	67	;'C'
  2788  007F11  44                 	db	68	;'D'
  2789  007F12  43                 	db	67	;'C'
  2790  007F13  20                 	db	32
  2791  007F14  4D                 	db	77	;'M'
  2792  007F15  6F                 	db	111	;'o'
  2793  007F16  64                 	db	100	;'d'
  2794  007F17  65                 	db	101	;'e'
  2795  007F18  00                 	db	0
  2796  007F19                     STR_47:
  2797  007F19  52                 	db	82	;'R'
  2798  007F1A  65                 	db	101	;'e'
  2799  007F1B  71                 	db	113	;'q'
  2800  007F1C  75                 	db	117	;'u'
  2801  007F1D  69                 	db	105	;'i'
  2802  007F1E  72                 	db	114	;'r'
  2803  007F1F  65                 	db	101	;'e'
  2804  007F20  64                 	db	100	;'d'
  2805  007F21  00                 	db	0
  2806  007F22                     STR_49:
  2807  007F22  61                 	db	97	;'a'
  2808  007F23  63                 	db	99	;'c'
  2809  007F24  63                 	db	99	;'c'
  2810  007F25  65                 	db	101	;'e'
  2811  007F26  70                 	db	112	;'p'
  2812  007F27  74                 	db	116	;'t'
  2813  007F28  65                 	db	101	;'e'
  2814  007F29  64                 	db	100	;'d'
  2815  007F2A  00                 	db	0
  2816  007F2B                     STR_173:
  2817  007F2B  6D                 	db	109	;'m'
  2818  007F2C  61                 	db	97	;'a'
  2819  007F2D  63                 	db	99	;'c'
  2820  007F2E  20                 	db	32
  2821  007F2F  73                 	db	115	;'s'
  2822  007F30  61                 	db	97	;'a'
  2823  007F31  76                 	db	118	;'v'
  2824  007F32  65                 	db	101	;'e'
  2825  007F33  00                 	db	0
  2826  007F34                     STR_25:
  2827  007F34  53                 	db	83	;'S'
  2828  007F35  74                 	db	116	;'t'
  2829  007F36  61                 	db	97	;'a'
  2830  007F37  72                 	db	114	;'r'
  2831  007F38  74                 	db	116	;'t'
  2832  007F39  69                 	db	105	;'i'
  2833  007F3A  6E                 	db	110	;'n'
  2834  007F3B  67                 	db	103	;'g'
  2835  007F3C  00                 	db	0
  2836  007F3D                     STR_4:
  2837  007F3D  4D                 	db	77	;'M'
  2838  007F3E  6F                 	db	111	;'o'
  2839  007F3F  54                 	db	84	;'T'
  2840  007F40  65                 	db	101	;'e'
  2841  007F41  20                 	db	32
  2842  007F42  76                 	db	118	;'v'
  2843  007F43  20                 	db	32
  2844  007F44  2E                 	db	46
  2845  007F45  00                 	db	0
  2846  007F46                     STR_9:
  2847  007F46  31                 	db	49	;'1'
  2848  007F47  35                 	db	53	;'5'
  2849  007F48  3A                 	db	58	;':'
  2850  007F49  33                 	db	51	;'3'
  2851  007F4A  37                 	db	55	;'7'
  2852  007F4B  3A                 	db	58	;':'
  2853  007F4C  32                 	db	50	;'2'
  2854  007F4D  39                 	db	57	;'9'
  2855  007F4E  00                 	db	0
  2856  007F4F  52                 	db	82	;'R'
  2857  007F50  46                 	db	70	;'F'
  2858  007F51  20                 	db	32
  2859  007F52  54                 	db	84	;'T'
  2860  007F53  65                 	db	101	;'e'
  2861  007F54  73                 	db	115	;'s'
  2862  007F55  74                 	db	116	;'t'
  2863  007F56  3A                 	db	58	;':'
  2864  007F57  00                 	db	0
  2865  007F58                     STR_17:
  2866  007F58  41                 	db	65	;'A'
  2867  007F59  44                 	db	68	;'D'
  2868  007F5A  43                 	db	67	;'C'
  2869  007F5B  20                 	db	32
  2870  007F5C  54                 	db	84	;'T'
  2871  007F5D  65                 	db	101	;'e'
  2872  007F5E  73                 	db	115	;'s'
  2873  007F5F  74                 	db	116	;'t'
  2874  007F60  00                 	db	0
  2875  007F61                     STR_188:
  2876  007F61  43                 	db	67	;'C'
  2877  007F62  6F                 	db	111	;'o'
  2878  007F63  6D                 	db	109	;'m'
  2879  007F64  6D                 	db	109	;'m'
  2880  007F65  61                 	db	97	;'a'
  2881  007F66  6E                 	db	110	;'n'
  2882  007F67  64                 	db	100	;'d'
  2883  007F68  00                 	db	0
  2884  007F69                     STR_18:
  2885  007F69  54                 	db	84	;'T'
  2886  007F6A  65                 	db	101	;'e'
  2887  007F6B  6D                 	db	109	;'m'
  2888  007F6C  70                 	db	112	;'p'
  2889  007F6D  20                 	db	32
  2890  007F6E  20                 	db	32
  2891  007F6F  3D                 	db	61	;'='
  2892  007F70  00                 	db	0
  2893  007F71                     STR_19:
  2894  007F71  4C                 	db	76	;'L'
  2895  007F72  69                 	db	105	;'i'
  2896  007F73  67                 	db	103	;'g'
  2897  007F74  68                 	db	104	;'h'
  2898  007F75  74                 	db	116	;'t'
  2899  007F76  20                 	db	32
  2900  007F77  3D                 	db	61	;'='
  2901  007F78  00                 	db	0
  2902  007F79                     STR_117:
  2903  007F79  54                 	db	84	;'T'
  2904  007F7A  65                 	db	101	;'e'
  2905  007F7B  6D                 	db	109	;'m'
  2906  007F7C  70                 	db	112	;'p'
  2907  007F7D  20                 	db	32
  2908  007F7E  3A                 	db	58	;':'
  2909  007F7F  00                 	db	0
  2910  007F80                     STR_116:
  2911  007F80  4C                 	db	76	;'L'
  2912  007F81  69                 	db	105	;'i'
  2913  007F82  67                 	db	103	;'g'
  2914  007F83  68                 	db	104	;'h'
  2915  007F84  74                 	db	116	;'t'
  2916  007F85  3A                 	db	58	;':'
  2917  007F86  00                 	db	0
  2918  007F87                     STR_121:
  2919  007F87  45                 	db	69	;'E'
  2920  007F88  76                 	db	118	;'v'
  2921  007F89  65                 	db	101	;'e'
  2922  007F8A  72                 	db	114	;'r'
  2923  007F8B  79                 	db	121	;'y'
  2924  007F8C  3A                 	db	58	;':'
  2925  007F8D  00                 	db	0
  2926  007F8E                     STR_65:
  2927  007F8E  44                 	db	68	;'D'
  2928  007F8F  65                 	db	101	;'e'
  2929  007F90  6E                 	db	110	;'n'
  2930  007F91  69                 	db	105	;'i'
  2931  007F92  65                 	db	101	;'e'
  2932  007F93  64                 	db	100	;'d'
  2933  007F94  00                 	db	0
  2934  007F95                     STR_63:
  2935  007F95  64                 	db	100	;'d'
  2936  007F96  65                 	db	101	;'e'
  2937  007F97  6E                 	db	110	;'n'
  2938  007F98  69                 	db	105	;'i'
  2939  007F99  65                 	db	101	;'e'
  2940  007F9A  64                 	db	100	;'d'
  2941  007F9B  00                 	db	0
  2942  007F9C                     STR_97:
  2943  007F9C  6E                 	db	110	;'n'
  2944  007F9D  6F                 	db	111	;'o'
  2945  007F9E  5F                 	db	95	;'_'
  2946  007F9F  66                 	db	102	;'f'
  2947  007FA0  72                 	db	114	;'r'
  2948  007FA1  65                 	db	101	;'e'
  2949  007FA2  00                 	db	0
  2950  007FA3                     STR_95:
  2951  007FA3  6D                 	db	109	;'m'
  2952  007FA4  61                 	db	97	;'a'
  2953  007FA5  63                 	db	99	;'c'
  2954  007FA6  5F                 	db	95	;'_'
  2955  007FA7  65                 	db	101	;'e'
  2956  007FA8  72                 	db	114	;'r'
  2957  007FA9  00                 	db	0
  2958  007FAA                     STR_90:
  2959  007FAA  6D                 	db	109	;'m'
  2960  007FAB  61                 	db	97	;'a'
  2961  007FAC  63                 	db	99	;'c'
  2962  007FAD  5F                 	db	95	;'_'
  2963  007FAE  72                 	db	114	;'r'
  2964  007FAF  78                 	db	120	;'x'
  2965  007FB0  00                 	db	0
  2966  007FB1                     STR_93:
  2967  007FB1  6D                 	db	109	;'m'
  2968  007FB2  61                 	db	97	;'a'
  2969  007FB3  63                 	db	99	;'c'
  2970  007FB4  5F                 	db	95	;'_'
  2971  007FB5  74                 	db	116	;'t'
  2972  007FB6  78                 	db	120	;'x'
  2973  007FB7  00                 	db	0
  2974  007FB8                     STR_31:
  2975  007FB8  52                 	db	82	;'R'
  2976  007FB9  4E                 	db	78	;'N'
  2977  007FBA  32                 	db	50	;'2'
  2978  007FBB  34                 	db	52	;'4'
  2979  007FBC  00                 	db	0
  2980  007FBD                     STR_35:
  2981  007FBD  52                 	db	82	;'R'
  2982  007FBE  4E                 	db	78	;'N'
  2983  007FBF  32                 	db	50	;'2'
  2984  007FC0  39                 	db	57	;'9'
  2985  007FC1  00                 	db	0
  2986  007FC2                     STR_122:
  2987  007FC2  4D                 	db	77	;'M'
  2988  007FC3  69                 	db	105	;'i'
  2989  007FC4  6E                 	db	110	;'n'
  2990  007FC5  73                 	db	115	;'s'
  2991  007FC6  00                 	db	0
  2992  007FC7                     STR_138:
  2993  007FC7  20                 	db	32
  2994  007FC8  30                 	db	48	;'0'
  2995  007FC9  20                 	db	32
  2996  007FCA  00                 	db	0
  2997  007FCB                     STR_139:
  2998  007FCB  20                 	db	32
  2999  007FCC  31                 	db	49	;'1'
  3000  007FCD  20                 	db	32
  3001  007FCE  00                 	db	0
  3002  007FCF                     STR_140:
  3003  007FCF  20                 	db	32
  3004  007FD0  32                 	db	50	;'2'
  3005  007FD1  20                 	db	32
  3006  007FD2  00                 	db	0
  3007  007FD3                     STR_141:
  3008  007FD3  20                 	db	32
  3009  007FD4  33                 	db	51	;'3'
  3010  007FD5  20                 	db	32
  3011  007FD6  00                 	db	0
  3012  007FD7                     STR_142:
  3013  007FD7  20                 	db	32
  3014  007FD8  34                 	db	52	;'4'
  3015  007FD9  20                 	db	32
  3016  007FDA  00                 	db	0
  3017  007FDB                     STR_143:
  3018  007FDB  20                 	db	32
  3019  007FDC  35                 	db	53	;'5'
  3020  007FDD  20                 	db	32
  3021  007FDE  00                 	db	0
  3022  007FDF                     STR_146:
  3023  007FDF  20                 	db	32
  3024  007FE0  31                 	db	49	;'1'
  3025  007FE1  30                 	db	48	;'0'
  3026  007FE2  00                 	db	0
  3027  007FE3                     STR_148:
  3028  007FE3  20                 	db	32
  3029  007FE4  33                 	db	51	;'3'
  3030  007FE5  30                 	db	48	;'0'
  3031  007FE6  00                 	db	0
  3032  007FE7                     STR_149:
  3033  007FE7  20                 	db	32
  3034  007FE8  36                 	db	54	;'6'
  3035  007FE9  30                 	db	48	;'0'
  3036  007FEA  00                 	db	0
  3037  007FEB                     STR_147:
  3038  007FEB  20                 	db	32
  3039  007FEC  31                 	db	49	;'1'
  3040  007FED  35                 	db	53	;'5'
  3041  007FEE  00                 	db	0
  3042  007FEF                     STR_128:
  3043  007FEF  4F                 	db	79	;'O'
  3044  007FF0  46                 	db	70	;'F'
  3045  007FF1  46                 	db	70	;'F'
  3046  007FF2  00                 	db	0
  3047  007FF3                     STR_144:
  3048  007FF3  41                 	db	65	;'A'
  3049  007FF4  44                 	db	68	;'D'
  3050  007FF5  52                 	db	82	;'R'
  3051  007FF6  00                 	db	0
  3052  007FF7                     STR_44:
  3053  007FF7  6F                 	db	111	;'o'
  3054  007FF8  6B                 	db	107	;'k'
  3055  007FF9  00                 	db	0
  3056  007FFA                     STR_118:
  3057  007FFA  43                 	db	67	;'C'
  3058  007FFB  00                 	db	0
  3059  007FFC                     STR_21:
  3060  007FFC  7A                 	db	122	;'z'
  3061  007FFD  00                 	db	0
  3062  0000                     
  3063                           ; #config settings
  3064  007FFE  00                 	db	0	; dummy byte at the end
  3065  0000                     
  3066                           	psect	cinit
  3067  00498A                     __pcinit:
  3068                           	opt stack 0
  3069  00498A                     start_initialization:
  3070                           	opt stack 0
  3071  00498A                     __initialization:
  3072                           	opt stack 0
  3073                           
  3074                           ; Initialize objects allocated to BANK1 (3 bytes)
  3075                           ; load TBLPTR registers with __pidataBANK1
  3076  00498A  0E5A               	movlw	low __pidataBANK1
  3077  00498C  6EF6               	movwf	tblptrl,c
  3078  00498E  0E62               	movlw	high __pidataBANK1
  3079  004990  6EF7               	movwf	tblptrh,c
  3080  004992  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  3081  004994  6EF8               	movwf	tblptru,c
  3082  004996  0009               	tblrd		*+	;fetch initializer
  3083  004998  CFF5 F1FB          	movff	tablat,__pdataBANK1
  3084  00499C  0009               	tblrd		*+	;fetch initializer
  3085  00499E  CFF5 F1FC          	movff	tablat,__pdataBANK1+1
  3086  0049A2  0009               	tblrd		*+	;fetch initializer
  3087  0049A4  CFF5 F1FD          	movff	tablat,__pdataBANK1+2
  3088                           
  3089                           ; Initialize objects allocated to BANK0 (7 bytes)
  3090                           ; load TBLPTR registers with __pidataBANK0
  3091  0049A8  0E0A               	movlw	low __pidataBANK0
  3092  0049AA  6EF6               	movwf	tblptrl,c
  3093  0049AC  0E62               	movlw	high __pidataBANK0
  3094  0049AE  6EF7               	movwf	tblptrh,c
  3095  0049B0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  3096  0049B2  6EF8               	movwf	tblptru,c
  3097  0049B4  EE00  F0F9         	lfsr	0,__pdataBANK0
  3098  0049B8  EE10 F007          	lfsr	1,7
  3099  0049BC                     copy_data0:
  3100  0049BC  0009               	tblrd		*+
  3101  0049BE  CFF5 FFEE          	movff	tablat,postinc0
  3102  0049C2  50E5               	movf	postdec1,w,c
  3103  0049C4  50E1               	movf	fsr1l,w,c
  3104  0049C6  E1FA               	bnz	copy_data0
  3105                           
  3106                           ; Initialize objects allocated to COMRAM (1 bytes)
  3107                           ; load TBLPTR registers with __pidataCOMRAM
  3108  0049C8  0E5D               	movlw	low __pidataCOMRAM
  3109  0049CA  6EF6               	movwf	tblptrl,c
  3110  0049CC  0E62               	movlw	high __pidataCOMRAM
  3111  0049CE  6EF7               	movwf	tblptrh,c
  3112  0049D0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  3113  0049D2  6EF8               	movwf	tblptru,c
  3114  0049D4  0009               	tblrd		*+	;fetch initializer
  3115  0049D6  CFF5 F05E          	movff	tablat,__pdataCOMRAM
  3116                           
  3117                           ; Clear objects allocated to BANK3 (128 bytes)
  3118  0049DA  EE03  F000         	lfsr	0,__pbssBANK3
  3119  0049DE  0E80               	movlw	128
  3120  0049E0                     clear_0:
  3121  0049E0  6AEE               	clrf	postinc0,c
  3122  0049E2  06E8               	decf	wreg,f,c
  3123  0049E4  E1FD               	bnz	clear_0
  3124                           
  3125                           ; Clear objects allocated to BANK2 (192 bytes)
  3126  0049E6  EE02  F000         	lfsr	0,__pbssBANK2
  3127  0049EA  0EC0               	movlw	192
  3128  0049EC                     clear_1:
  3129  0049EC  6AEE               	clrf	postinc0,c
  3130  0049EE  06E8               	decf	wreg,f,c
  3131  0049F0  E1FD               	bnz	clear_1
  3132                           
  3133                           ; Clear objects allocated to BANK1 (251 bytes)
  3134  0049F2  EE01  F000         	lfsr	0,__pbssBANK1
  3135  0049F6  0EFB               	movlw	251
  3136  0049F8                     clear_2:
  3137  0049F8  6AEE               	clrf	postinc0,c
  3138  0049FA  06E8               	decf	wreg,f,c
  3139  0049FC  E1FD               	bnz	clear_2
  3140                           
  3141                           ; Clear objects allocated to BANK0 (61 bytes)
  3142  0049FE  EE00  F0BC         	lfsr	0,__pbssBANK0
  3143  004A02  0E3D               	movlw	61
  3144  004A04                     clear_3:
  3145  004A04  6AEE               	clrf	postinc0,c
  3146  004A06  06E8               	decf	wreg,f,c
  3147  004A08  E1FD               	bnz	clear_3
  3148                           
  3149                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  3150  004A0A  6A5D               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  3151                           
  3152                           ; Clear objects allocated to COMRAM (41 bytes)
  3153  004A0C  EE00  F034         	lfsr	0,__pbssCOMRAM
  3154  004A10  0E29               	movlw	41
  3155  004A12                     clear_4:
  3156  004A12  6AEE               	clrf	postinc0,c
  3157  004A14  06E8               	decf	wreg,f,c
  3158  004A16  E1FD               	bnz	clear_4
  3159  004A18                     end_of_initialization:
  3160                           	opt stack 0
  3161  004A18                     __end_of__initialization:
  3162                           	opt stack 0
  3163  004A18  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3164  004A1A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3165  004A1C  0100               	movlb	0
  3166  004A1E  EF59  F016         	goto	_main	;jump to C main() function
  3167                           tblptru	equ	0xFF8
  3168                           tblptrh	equ	0xFF7
  3169                           tblptrl	equ	0xFF6
  3170                           tablat	equ	0xFF5
  3171                           postinc0	equ	0xFEE
  3172                           wreg	equ	0xFE8
  3173                           postdec1	equ	0xFE5
  3174                           fsr1l	equ	0xFE1
  3175                           
  3176                           	psect	bitbssCOMRAM
  3177  0002E8                     __pbitbssCOMRAM:
  3178                           	opt stack 0
  3179  0002E8                     _log:
  3180                           	opt stack 0
  3181  0002E8                     	ds	1
  3182                           tblptru	equ	0xFF8
  3183                           tblptrh	equ	0xFF7
  3184                           tblptrl	equ	0xFF6
  3185                           tablat	equ	0xFF5
  3186                           postinc0	equ	0xFEE
  3187                           wreg	equ	0xFE8
  3188                           postdec1	equ	0xFE5
  3189                           fsr1l	equ	0xFE1
  3190                           
  3191                           	psect	bssCOMRAM
  3192  000034                     __pbssCOMRAM:
  3193                           	opt stack 0
  3194  000034                     _CDCDataInHandle:
  3195                           	opt stack 0
  3196  000034                     	ds	2
  3197  000036                     _pBDTEntryEP0OutNext:
  3198                           	opt stack 0
  3199  000036                     	ds	2
  3200  000038                     _pBDTEntryEP0OutCurrent:
  3201                           	opt stack 0
  3202  000038                     	ds	2
  3203  00003A                     _timer3ReloadVal:
  3204                           	opt stack 0
  3205  00003A                     	ds	2
  3206  00003C                     _timer1ReloadVal:
  3207                           	opt stack 0
  3208  00003C                     	ds	2
  3209  00003E                     _timerMinTickCount:
  3210                           	opt stack 0
  3211  00003E                     	ds	2
  3212  000040                     USBapp_LEDUpdateStatus@ledCount:
  3213                           	opt stack 0
  3214  000040                     	ds	2
  3215  000042                     _cdc_mem_type:
  3216                           	opt stack 0
  3217  000042                     	ds	1
  3218  000043                     _USBDeferOUTDataStagePackets:
  3219                           	opt stack 0
  3220  000043                     	ds	1
  3221  000044                     _USBDeferINDataStagePackets:
  3222                           	opt stack 0
  3223  000044                     	ds	1
  3224  000045                     _USBStatusStageEnabledFlag2:
  3225                           	opt stack 0
  3226  000045                     	ds	1
  3227  000046                     _USBStatusStageEnabledFlag1:
  3228                           	opt stack 0
  3229  000046                     	ds	1
  3230  000047                     _USBDeferStatusStagePacket:
  3231                           	opt stack 0
  3232  000047                     	ds	1
  3233  000048                     _USBStatusStageTimeoutCounter:
  3234                           	opt stack 0
  3235  000048                     	ds	1
  3236  000049                     _BothEP0OutUOWNsSet:
  3237                           	opt stack 0
  3238  000049                     	ds	1
  3239  00004A                     _endpoint_number:
  3240                           	opt stack 0
  3241  00004A                     	ds	1
  3242  00004B                     _RemoteWakeup:
  3243                           	opt stack 0
  3244  00004B                     	ds	1
  3245  00004C                     _controlTransferState:
  3246                           	opt stack 0
  3247  00004C                     	ds	1
  3248  00004D                     _shortPacketStatus:
  3249                           	opt stack 0
  3250  00004D                     	ds	1
  3251  00004E                     _countBitsSilent:
  3252                           	opt stack 0
  3253  00004E                     	ds	1
  3254  00004F                     _countRX:
  3255                           	opt stack 0
  3256  00004F                     	ds	1
  3257  000050                     _rx_data:
  3258                           	opt stack 0
  3259  000050                     	ds	1
  3260  000051                     _status:
  3261                           	opt stack 0
  3262  000051                     	ds	1
  3263  000052                     	ds	1
  3264  000053                     _responseReady:
  3265                           	opt stack 0
  3266  000053                     	ds	1
  3267  000054                     	ds	1
  3268  000055                     _moteModeState:
  3269                           	opt stack 0
  3270  000055                     	ds	1
  3271  000056                     _appState:
  3272                           	opt stack 0
  3273  000056                     	ds	1
  3274  000057                     _mainState:
  3275                           	opt stack 0
  3276  000057                     	ds	1
  3277  000058                     _USBAlternateInterface:
  3278                           	opt stack 0
  3279  000058                     	ds	2
  3280  00005A                     _USTATcopy:
  3281                           	opt stack 0
  3282  00005A                     	ds	1
  3283  00005B                     _USBActiveConfiguration:
  3284                           	opt stack 0
  3285  00005B                     	ds	1
  3286  00005C                     _n_bit:
  3287                           	opt stack 0
  3288  00005C                     	ds	1
  3289                           tblptru	equ	0xFF8
  3290                           tblptrh	equ	0xFF7
  3291                           tblptrl	equ	0xFF6
  3292                           tablat	equ	0xFF5
  3293                           postinc0	equ	0xFEE
  3294                           wreg	equ	0xFE8
  3295                           postdec1	equ	0xFE5
  3296                           fsr1l	equ	0xFE1
  3297                           
  3298                           	psect	dataCOMRAM
  3299  00005E                     __pdataCOMRAM:
  3300                           	opt stack 0
  3301  00005E                     _Contrast_level:
  3302                           	opt stack 0
  3303  00005E                     	ds	1
  3304                           tblptru	equ	0xFF8
  3305                           tblptrh	equ	0xFF7
  3306                           tblptrl	equ	0xFF6
  3307                           tablat	equ	0xFF5
  3308                           postinc0	equ	0xFEE
  3309                           wreg	equ	0xFE8
  3310                           postdec1	equ	0xFE5
  3311                           fsr1l	equ	0xFE1
  3312                           
  3313                           	psect	bssBANK0
  3314  0000BC                     __pbssBANK0:
  3315                           	opt stack 0
  3316  0000BC                     _outPipes:
  3317                           	opt stack 0
  3318  0000BC                     	ds	8
  3319  0000C4                     _inPipes:
  3320                           	opt stack 0
  3321  0000C4                     	ds	6
  3322  0000CA                     _pBDTEntryIn:
  3323                           	opt stack 0
  3324  0000CA                     	ds	6
  3325  0000D0                     _ep_data_out:
  3326                           	opt stack 0
  3327  0000D0                     	ds	3
  3328  0000D3                     _ep_data_in:
  3329                           	opt stack 0
  3330  0000D3                     	ds	3
  3331  0000D6                     _CDCDataOutHandle:
  3332                           	opt stack 0
  3333  0000D6                     	ds	2
  3334  0000D8                     _timerMsTickCount:
  3335                           	opt stack 0
  3336  0000D8                     	ds	2
  3337  0000DA                     _temperature:
  3338                           	opt stack 0
  3339  0000DA                     	ds	2
  3340  0000DC                     _cdc_tx_len:
  3341                           	opt stack 0
  3342  0000DC                     	ds	1
  3343  0000DD                     _cdc_rx_len:
  3344                           	opt stack 0
  3345  0000DD                     	ds	1
  3346  0000DE                     _eusartRxTail:
  3347                           	opt stack 0
  3348  0000DE                     	ds	1
  3349  0000DF                     _eusartRxHead:
  3350                           	opt stack 0
  3351  0000DF                     	ds	1
  3352  0000E0                     _eusartTxBufferRemaining:
  3353                           	opt stack 0
  3354  0000E0                     	ds	1
  3355  0000E1                     _eusartTxTail:
  3356                           	opt stack 0
  3357  0000E1                     	ds	1
  3358  0000E2                     _eusartTxHead:
  3359                           	opt stack 0
  3360  0000E2                     	ds	1
  3361  0000E3                     printfOled@lastValue:
  3362                           	opt stack 0
  3363  0000E3                     	ds	1
  3364  0000E4                     service_pushbutton@Release_Timer:
  3365                           	opt stack 0
  3366  0000E4                     	ds	1
  3367  0000E5                     _RS232cp:
  3368                           	opt stack 0
  3369  0000E5                     	ds	1
  3370  0000E6                     _LastRS232Out:
  3371                           	opt stack 0
  3372  0000E6                     	ds	1
  3373  0000E7                     _RS232_Out_Data_Rdy:
  3374                           	opt stack 0
  3375  0000E7                     	ds	1
  3376  0000E8                     _NextUSBOut:
  3377                           	opt stack 0
  3378  0000E8                     	ds	1
  3379  0000E9                     _rxByteFlag:
  3380                           	opt stack 0
  3381  0000E9                     	ds	1
  3382  0000EA                     _usbState:
  3383                           	opt stack 0
  3384  0000EA                     	ds	1
  3385  0000EB                     _cdc_trf_state:
  3386                           	opt stack 0
  3387  0000EB                     	ds	1
  3388  0000EC                     _USBDeviceState:
  3389                           	opt stack 0
  3390  0000EC                     	ds	1
  3391  0000ED                     _lightStringSize:
  3392                           	opt stack 0
  3393  0000ED                     	ds	1
  3394  0000EE                     _rnModule:
  3395                           	opt stack 0
  3396  0000EE                     	ds	1
  3397  0000EF                     _sleepTicker:
  3398                           	opt stack 0
  3399  0000EF                     	ds	1
  3400  0000F0                     _secTicker:
  3401                           	opt stack 0
  3402  0000F0                     	ds	1
  3403  0000F1                     _randomPortNum:
  3404                           	opt stack 0
  3405  0000F1                     	ds	1
  3406  0000F2                     _moduleBufferIndex:
  3407                           	opt stack 0
  3408  0000F2                     	ds	1
  3409  0000F3                     _runningState:
  3410                           	opt stack 0
  3411  0000F3                     	ds	1
  3412  0000F4                     _activeState:
  3413                           	opt stack 0
  3414  0000F4                     	ds	1
  3415  0000F5                     _eusartRxCount:
  3416                           	opt stack 0
  3417  0000F5                     	ds	1
  3418  0000F6                     _powerOnStatus:
  3419                           	opt stack 0
  3420  0000F6                     	ds	1
  3421  0000F7                     _operationType:
  3422                           	opt stack 0
  3423  0000F7                     	ds	1
  3424  0000F8                     _appTimer:
  3425                           	opt stack 0
  3426  0000F8                     	ds	1
  3427                           tblptru	equ	0xFF8
  3428                           tblptrh	equ	0xFF7
  3429                           tblptrl	equ	0xFF6
  3430                           tablat	equ	0xFF5
  3431                           postinc0	equ	0xFEE
  3432                           wreg	equ	0xFE8
  3433                           postdec1	equ	0xFE5
  3434                           fsr1l	equ	0xFE1
  3435                           
  3436                           	psect	dataBANK0
  3437  0000F9                     __pdataBANK0:
  3438                           	opt stack 0
  3439  0000F9                     _exitUSB:
  3440                           	opt stack 0
  3441  0000F9                     	ds	1
  3442  0000FA                     _periodicState:
  3443                           	opt stack 0
  3444  0000FA                     	ds	1
  3445  0000FB                     _menuTimeout:
  3446                           	opt stack 0
  3447  0000FB                     	ds	1
  3448  0000FC                     _dataRateValue:
  3449                           	opt stack 0
  3450  0000FC                     	ds	1
  3451  0000FD                     _periodicTimerValue:
  3452                           	opt stack 0
  3453  0000FD                     	ds	1
  3454  0000FE                     _periodicUpValue:
  3455                           	opt stack 0
  3456  0000FE                     	ds	1
  3457  0000FF                     _moteState:
  3458                           	opt stack 0
  3459  0000FF                     	ds	1
  3460                           tblptru	equ	0xFF8
  3461                           tblptrh	equ	0xFF7
  3462                           tblptrl	equ	0xFF6
  3463                           tablat	equ	0xFF5
  3464                           postinc0	equ	0xFEE
  3465                           wreg	equ	0xFE8
  3466                           postdec1	equ	0xFE5
  3467                           fsr1l	equ	0xFE1
  3468                           
  3469                           	psect	bssBANK1
  3470  000100                     __pbssBANK1:
  3471                           	opt stack 0
  3472  000100                     	ds	32
  3473  000120                     	ds	16
  3474  000130                     _responseId:
  3475                           	opt stack 0
  3476  000130                     	ds	16
  3477  000140                     _pBDTEntryOut:
  3478                           	opt stack 0
  3479  000140                     	ds	6
  3480  000146                     _BaudRateGen:
  3481                           	opt stack 0
  3482  000146                     	ds	4
  3483  00014A                     service_pushbutton@PB_Timer:
  3484                           	opt stack 0
  3485  00014A                     	ds	4
  3486  00014E                     _pCDCDst:
  3487                           	opt stack 0
  3488  00014E                     	ds	3
  3489  000151                     _pCDCSrc:
  3490                           	opt stack 0
  3491  000151                     	ds	3
  3492  000154                     _pDst:
  3493                           	opt stack 0
  3494  000154                     	ds	2
  3495  000156                     _timer0ReloadVal:
  3496                           	opt stack 0
  3497  000156                     	ds	2
  3498  000158                     _m10SecTicker:
  3499                           	opt stack 0
  3500  000158                     	ds	2
  3501  00015A                     _light:
  3502                           	opt stack 0
  3503  00015A                     	ds	2
  3504  00015C                     _control_signal_bitmap:
  3505                           	opt stack 0
  3506  00015C                     	ds	1
  3507  00015D                     _USBBusIsSuspended:
  3508                           	opt stack 0
  3509  00015D                     	ds	1
  3510  00015E                     _cs:
  3511                           	opt stack 0
  3512  00015E                     	ds	1
  3513  00015F                     _stops:
  3514                           	opt stack 0
  3515  00015F                     	ds	1
  3516  000160                     _parity:
  3517                           	opt stack 0
  3518  000160                     	ds	1
  3519  000161                     	ds	1
  3520  000162                     	ds	1
  3521  000163                     _minTicker:
  3522                           	opt stack 0
  3523  000163                     	ds	1
  3524  000164                     	ds	1
  3525  000165                     _moduleResonseBuffer:
  3526                           	opt stack 0
  3527  000165                     	ds	64
  3528  0001A5                     _responseData:
  3529                           	opt stack 0
  3530  0001A5                     	ds	32
  3531  0001C5                     _dataBuffer:
  3532                           	opt stack 0
  3533  0001C5                     	ds	16
  3534  0001D5                     _cdc_notice:
  3535                           	opt stack 0
  3536  0001D5                     	ds	10
  3537  0001DF                     _dummy_encapsulated_cmd_response:
  3538                           	opt stack 0
  3539  0001DF                     	ds	8
  3540  0001E7                     _line_coding:
  3541                           	opt stack 0
  3542  0001E7                     	ds	7
  3543  0001EE                     _clearLight:
  3544                           	opt stack 0
  3545  0001EE                     	ds	5
  3546  0001F3                     _storedLight:
  3547                           	opt stack 0
  3548  0001F3                     	ds	5
  3549  0001F8                     _responsePortNum:
  3550                           	opt stack 0
  3551  0001F8                     	ds	3
  3552                           tblptru	equ	0xFF8
  3553                           tblptrh	equ	0xFF7
  3554                           tblptrl	equ	0xFF6
  3555                           tablat	equ	0xFF5
  3556                           postinc0	equ	0xFEE
  3557                           wreg	equ	0xFE8
  3558                           postdec1	equ	0xFE5
  3559                           fsr1l	equ	0xFE1
  3560                           
  3561                           	psect	dataBANK1
  3562  0001FB                     __pdataBANK1:
  3563                           	opt stack 0
  3564  0001FB                     _selectedFont:
  3565                           	opt stack 0
  3566  0001FB                     	ds	2
  3567  0001FD                     	ds	1
  3568                           tblptru	equ	0xFF8
  3569                           tblptrh	equ	0xFF7
  3570                           tblptrl	equ	0xFF6
  3571                           tablat	equ	0xFF5
  3572                           postinc0	equ	0xFEE
  3573                           wreg	equ	0xFE8
  3574                           postdec1	equ	0xFE5
  3575                           fsr1l	equ	0xFE1
  3576                           
  3577                           	psect	bssBANK2
  3578  000200                     __pbssBANK2:
  3579                           	opt stack 0
  3580  000200                     _eusartRxBuffer:
  3581                           	opt stack 0
  3582  000200                     	ds	64
  3583  000240                     _eusartTxBuffer:
  3584                           	opt stack 0
  3585  000240                     	ds	64
  3586  000280                     _USB_Buffer:
  3587                           	opt stack 0
  3588  000280                     	ds	64
  3589                           tblptru	equ	0xFF8
  3590                           tblptrh	equ	0xFF7
  3591                           tblptrl	equ	0xFF6
  3592                           tablat	equ	0xFF5
  3593                           postinc0	equ	0xFEE
  3594                           wreg	equ	0xFE8
  3595                           postdec1	equ	0xFE5
  3596                           fsr1l	equ	0xFE1
  3597                           
  3598                           	psect	bssBANK3
  3599  000300                     __pbssBANK3:
  3600                           	opt stack 0
  3601  000300                     _buffer_rx:
  3602                           	opt stack 0
  3603  000300                     	ds	128
  3604                           tblptru	equ	0xFF8
  3605                           tblptrh	equ	0xFF7
  3606                           tblptrl	equ	0xFF6
  3607                           tablat	equ	0xFF5
  3608                           postinc0	equ	0xFEE
  3609                           wreg	equ	0xFE8
  3610                           postdec1	equ	0xFE5
  3611                           fsr1l	equ	0xFE1
  3612                           
  3613                           	psect	cstackBANK0
  3614  000060                     __pcstackBANK0:
  3615                           	opt stack 0
  3616  000060                     ??_TMR1_Initialize:
  3617  000060                     ?_strncmp:
  3618                           	opt stack 0
  3619  000060                     ?_strcmp:
  3620                           	opt stack 0
  3621  000060                     ?_moteApp_getLightString:
  3622                           	opt stack 0
  3623  000060                     ?_USBTransferOnePacket:
  3624                           	opt stack 0
  3625  000060                     ?___wmul:
  3626                           	opt stack 0
  3627  000060                     ?___awmod:
  3628                           	opt stack 0
  3629  000060                     ?___lwmod:
  3630                           	opt stack 0
  3631  000060                     ?___fladd:
  3632                           	opt stack 0
  3633  000060                     ?___almod:
  3634                           	opt stack 0
  3635  000060                     ?___fltol:
  3636                           	opt stack 0
  3637  000060                     ?___xxtofl:
  3638                           	opt stack 0
  3639  000060                     MOTEapp_handlerState@state:
  3640                           	opt stack 0
  3641  000060                     MOTEapp_TimerBasedTask@timerTask:
  3642                           	opt stack 0
  3643  000060                     hexToStr@character:
  3644                           	opt stack 0
  3645  000060                     moteApp_clearBuffers@counter:
  3646                           	opt stack 0
  3647  000060                     USBapp_handlerState@state:
  3648                           	opt stack 0
  3649  000060                     USBapp_exitCDCState@usbState:
  3650                           	opt stack 0
  3651  000060                     service_pushbutton@bs:
  3652                           	opt stack 0
  3653  000060                     oled_writeCommand@command:
  3654                           	opt stack 0
  3655  000060                     oled_writeData@data:
  3656                           	opt stack 0
  3657  000060                     EUSART_Read@readValue:
  3658                           	opt stack 0
  3659  000060                     EUSART_Write@txData:
  3660                           	opt stack 0
  3661  000060                     EUSART_FlushBuffer@index:
  3662                           	opt stack 0
  3663  000060                     DATAEE_WriteByte@bData:
  3664                           	opt stack 0
  3665  000060                     DATAEE_ReadByte@bAdd:
  3666                           	opt stack 0
  3667  000060                     TMR2_ReadTimer@readVal:
  3668                           	opt stack 0
  3669  000060                     USBTransferOnePacket@dir:
  3670                           	opt stack 0
  3671  000060                     ___lbdiv@divisor:
  3672                           	opt stack 0
  3673  000060                     delayms@t:
  3674                           	opt stack 0
  3675  000060                     moteApp_delayms@length:
  3676                           	opt stack 0
  3677  000060                     oled_setFont@font:
  3678                           	opt stack 0
  3679  000060                     putUSBUSART@data:
  3680                           	opt stack 0
  3681  000060                     ___wmul@multiplier:
  3682                           	opt stack 0
  3683  000060                     ___awmod@dividend:
  3684                           	opt stack 0
  3685  000060                     ___lwmod@dividend:
  3686                           	opt stack 0
  3687  000060                     memcpy@d1:
  3688                           	opt stack 0
  3689  000060                     memset@p1:
  3690                           	opt stack 0
  3691  000060                     strcmp@s1:
  3692                           	opt stack 0
  3693  000060                     strncmp@s1:
  3694                           	opt stack 0
  3695  000060                     ___almod@dividend:
  3696                           	opt stack 0
  3697  000060                     ___fltol@f1:
  3698                           	opt stack 0
  3699  000060                     ___fladd@b:
  3700                           	opt stack 0
  3701  000060                     ___xxtofl@val:
  3702                           	opt stack 0
  3703                           
  3704                           ; 4 bytes @ 0x0
  3705  000060                     	ds	1
  3706  000061                     MOTEapp_getModuleResponse@terminatorReceived:
  3707                           	opt stack 0
  3708  000061                     moteApp_clearBuffers@counter_1714:
  3709                           	opt stack 0
  3710  000061                     Set_Page_Address@address:
  3711                           	opt stack 0
  3712  000061                     Set_Column_Address@address:
  3713                           	opt stack 0
  3714  000061                     oled_setDisplay@displayType:
  3715                           	opt stack 0
  3716  000061                     oled_setContrastControlRegister@mod:
  3717                           	opt stack 0
  3718  000061                     oled_initialDispayLine@line:
  3719                           	opt stack 0
  3720  000061                     oled_powerControl@vol:
  3721                           	opt stack 0
  3722  000061                     oled_regulorResistorSelect@r:
  3723                           	opt stack 0
  3724  000061                     DATAEE_WriteByte@bAdd:
  3725                           	opt stack 0
  3726  000061                     ___lbdiv@dividend:
  3727                           	opt stack 0
  3728  000061                     sendCommand@string:
  3729                           	opt stack 0
  3730  000061                     sendDataCommand@string:
  3731                           	opt stack 0
  3732  000061                     USBTransferOnePacket@data:
  3733                           	opt stack 0
  3734                           
  3735                           ; 2 bytes @ 0x1
  3736  000061                     	ds	1
  3737  000062                     ??_moteApp_delayms:
  3738  000062                     ??_oled_devInit:
  3739  000062                     ??_delayms:
  3740  000062                     MOTEapp_getModuleResponse@bufferByte:
  3741                           	opt stack 0
  3742  000062                     moteApp_clearBuffers@counter_1715:
  3743                           	opt stack 0
  3744  000062                     oled_putChar@station_dot:
  3745                           	opt stack 0
  3746  000062                     DATAEE_WriteByte@GIEBitValue:
  3747                           	opt stack 0
  3748  000062                     putUSBUSART@length:
  3749                           	opt stack 0
  3750  000062                     ___lbdiv@counter:
  3751                           	opt stack 0
  3752  000062                     ___wmul@multiplicand:
  3753                           	opt stack 0
  3754  000062                     ___awmod@divisor:
  3755                           	opt stack 0
  3756  000062                     ___lwmod@divisor:
  3757                           	opt stack 0
  3758  000062                     memcpy@s1:
  3759                           	opt stack 0
  3760  000062                     memset@c:
  3761                           	opt stack 0
  3762  000062                     strcmp@s2:
  3763                           	opt stack 0
  3764  000062                     strncmp@s2:
  3765                           	opt stack 0
  3766                           
  3767                           ; 2 bytes @ 0x2
  3768  000062                     	ds	1
  3769  000063                     ??_moteApp_toggleLeds:
  3770  000063                     ??_MOTEapp_SetDataRateSetting:
  3771  000063                     ??_moduleSleep:
  3772  000063                     ?_moteApp_getTempValue:
  3773                           	opt stack 0
  3774  000063                     moteApp_clearBuffers@counter_1716:
  3775                           	opt stack 0
  3776  000063                     oled_putChar@start_page:
  3777                           	opt stack 0
  3778  000063                     USBTransferOnePacket@len:
  3779                           	opt stack 0
  3780  000063                     ___lbdiv@quotient:
  3781                           	opt stack 0
  3782  000063                     delayms@i:
  3783                           	opt stack 0
  3784  000063                     moteApp_delayms@counter:
  3785                           	opt stack 0
  3786  000063                     sendDataCommand@appData:
  3787                           	opt stack 0
  3788                           
  3789                           ; 2 bytes @ 0x3
  3790  000063                     	ds	1
  3791  000064                     ??_oled_putChar:
  3792  000064                     ??_strcmp:
  3793  000064                     ??___fltol:
  3794  000064                     ??___xxtofl:
  3795  000064                     MOTEapp_SetDataRateSetting@dr:
  3796                           	opt stack 0
  3797  000064                     moteApp_toggleLeds@state:
  3798                           	opt stack 0
  3799  000064                     USBTransferOnePacket@ep:
  3800                           	opt stack 0
  3801  000064                     ___awmod@counter:
  3802                           	opt stack 0
  3803  000064                     ___lwmod@counter:
  3804                           	opt stack 0
  3805  000064                     ___wmul@product:
  3806                           	opt stack 0
  3807  000064                     memcpy@n:
  3808                           	opt stack 0
  3809  000064                     memset@n:
  3810                           	opt stack 0
  3811  000064                     strncmp@len:
  3812                           	opt stack 0
  3813  000064                     ___almod@divisor:
  3814                           	opt stack 0
  3815  000064                     ___fladd@a:
  3816                           	opt stack 0
  3817                           
  3818                           ; 4 bytes @ 0x4
  3819  000064                     	ds	1
  3820  000065                     sendDataCommand@dataLength:
  3821                           	opt stack 0
  3822  000065                     ___awmod@sign:
  3823                           	opt stack 0
  3824  000065                     strcmp@r:
  3825                           	opt stack 0
  3826  000065                     moduleResync@escapeCounter:
  3827                           	opt stack 0
  3828  000065                     moteApp_setSensorsInput@escapeCounter:
  3829                           	opt stack 0
  3830  000065                     moteApp_getTempValue@escapeCounter:
  3831                           	opt stack 0
  3832  000065                     USBTransferOnePacket@handle:
  3833                           	opt stack 0
  3834                           
  3835                           ; 2 bytes @ 0x5
  3836  000065                     	ds	1
  3837  000066                     ??_strncmp:
  3838  000066                     ??_sendDataCommand:
  3839  000066                     moteApp_add8bToDataBuffer@bufferLocation:
  3840                           	opt stack 0
  3841  000066                     memcpy@d:
  3842                           	opt stack 0
  3843  000066                     memset@p:
  3844                           	opt stack 0
  3845                           
  3846                           ; 2 bytes @ 0x6
  3847  000066                     	ds	1
  3848  000067                     ??_moteApp_add8bToDataBuffer:
  3849  000067                     ??_CDCTxService:
  3850  000067                     moduleResync@escapeEvent:
  3851                           	opt stack 0
  3852  000067                     sendDataCommand@byteCount:
  3853                           	opt stack 0
  3854  000067                     getsUSBUSART@buffer:
  3855                           	opt stack 0
  3856                           
  3857                           ; 2 bytes @ 0x7
  3858  000067                     	ds	1
  3859  000068                     ??___fladd:
  3860  000068                     sendDataCommand@byteCount_1627:
  3861                           	opt stack 0
  3862  000068                     USBDeviceInit@i:
  3863                           	opt stack 0
  3864  000068                     ___almod@counter:
  3865                           	opt stack 0
  3866  000068                     ___fltol@sign1:
  3867                           	opt stack 0
  3868  000068                     ___xxtofl@sign:
  3869                           	opt stack 0
  3870  000068                     _CDCTxService$6672:
  3871                           	opt stack 0
  3872  000068                     memcpy@s:
  3873                           	opt stack 0
  3874                           
  3875                           ; 2 bytes @ 0x8
  3876  000068                     	ds	1
  3877  000069                     moteApp_add8bToDataBuffer@number:
  3878                           	opt stack 0
  3879  000069                     getsUSBUSART@len:
  3880                           	opt stack 0
  3881  000069                     ___almod@sign:
  3882                           	opt stack 0
  3883  000069                     ___fltol@exp1:
  3884                           	opt stack 0
  3885  000069                     ___xxtofl@exp:
  3886                           	opt stack 0
  3887                           
  3888                           ; 1 bytes @ 0x9
  3889  000069                     	ds	1
  3890  00006A                     ??_getsUSBUSART:
  3891  00006A                     oled_putChar@k:
  3892                           	opt stack 0
  3893  00006A                     CDCTxService@i:
  3894                           	opt stack 0
  3895  00006A                     memcpy@tmp:
  3896                           	opt stack 0
  3897  00006A                     ___xxtofl@arg:
  3898                           	opt stack 0
  3899                           
  3900                           ; 4 bytes @ 0xA
  3901  00006A                     	ds	1
  3902  00006B                     oled_putChar@index:
  3903                           	opt stack 0
  3904  00006B                     CDCTxService@byte_to_send:
  3905                           	opt stack 0
  3906  00006B                     moteApp_setLightString@lightString:
  3907                           	opt stack 0
  3908  00006B                     _getsUSBUSART$6624:
  3909                           	opt stack 0
  3910                           
  3911                           ; 2 bytes @ 0xB
  3912  00006B                     	ds	1
  3913  00006C                     oled_clearRow@page:
  3914                           	opt stack 0
  3915                           
  3916                           ; 1 bytes @ 0xC
  3917  00006C                     	ds	1
  3918  00006D                     ??_USBapp_DeviceCdcEmulatorHandler:
  3919  00006D                     moteApp_setLightString@stingPos:
  3920                           	opt stack 0
  3921  00006D                     oled_clearRow@index:
  3922                           	opt stack 0
  3923                           
  3924                           ; 1 bytes @ 0xD
  3925  00006D                     	ds	1
  3926  00006E                     ?_moteApp_getLightValue:
  3927                           	opt stack 0
  3928  00006E                     moteApp_GoToSleep@status:
  3929                           	opt stack 0
  3930                           
  3931                           ; 1 bytes @ 0xE
  3932  00006E                     	ds	2
  3933  000070                     ___fladd@signs:
  3934                           	opt stack 0
  3935  000070                     moteApp_getLightValue@escapeCounter:
  3936                           	opt stack 0
  3937                           
  3938                           ; 2 bytes @ 0x10
  3939  000070                     	ds	1
  3940  000071                     ___fladd@aexp:
  3941                           	opt stack 0
  3942                           
  3943                           ; 1 bytes @ 0x11
  3944  000071                     	ds	1
  3945  000072                     ?_moteApp_convertSensorValue:
  3946                           	opt stack 0
  3947  000072                     ___fladd@bexp:
  3948                           	opt stack 0
  3949  000072                     moteApp_addToDataBuffer@string:
  3950                           	opt stack 0
  3951  000072                     moteApp_convertSensorValue@string:
  3952                           	opt stack 0
  3953  000072                     oled_putString@string:
  3954                           	opt stack 0
  3955                           
  3956                           ; 3 bytes @ 0x12
  3957  000072                     	ds	1
  3958  000073                     ___fladd@grs:
  3959                           	opt stack 0
  3960                           
  3961                           ; 1 bytes @ 0x13
  3962  000073                     	ds	1
  3963  000074                     ??_moteApp_convertSensorValue:
  3964  000074                     ?___flmul:
  3965                           	opt stack 0
  3966  000074                     moteApp_addToDataBuffer@bufferLocation:
  3967                           	opt stack 0
  3968  000074                     ___flmul@b:
  3969                           	opt stack 0
  3970                           
  3971                           ; 4 bytes @ 0x14
  3972  000074                     	ds	1
  3973  000075                     moteApp_addToDataBuffer@index:
  3974                           	opt stack 0
  3975  000075                     oled_putString@station_dot:
  3976                           	opt stack 0
  3977                           
  3978                           ; 1 bytes @ 0x15
  3979  000075                     	ds	1
  3980  000076                     oled_putString@start_page:
  3981                           	opt stack 0
  3982                           
  3983                           ; 1 bytes @ 0x16
  3984  000076                     	ds	1
  3985  000077                     oled_putString@index:
  3986                           	opt stack 0
  3987  000077                     moteApp_convertSensorValue@convertedValue:
  3988                           	opt stack 0
  3989                           
  3990                           ; 2 bytes @ 0x17
  3991  000077                     	ds	1
  3992  000078                     ??_test_switch:
  3993  000078                     moteJoiningProcess@changeStates:
  3994                           	opt stack 0
  3995  000078                     USBapp_Handler@buttonPress:
  3996                           	opt stack 0
  3997  000078                     oled_putUint8@station_dot:
  3998                           	opt stack 0
  3999  000078                     oled_putint8@station_dot:
  4000                           	opt stack 0
  4001  000078                     ___flmul@a:
  4002                           	opt stack 0
  4003                           
  4004                           ; 4 bytes @ 0x18
  4005  000078                     	ds	1
  4006  000079                     moteJoiningProcess@selectButton:
  4007                           	opt stack 0
  4008  000079                     moteApp_convertSensorValue@index:
  4009                           	opt stack 0
  4010  000079                     oled_putUint8@start_page:
  4011                           	opt stack 0
  4012  000079                     oled_putint8@start_page:
  4013                           	opt stack 0
  4014  000079                     test_switch@timeout:
  4015                           	opt stack 0
  4016                           
  4017                           ; 2 bytes @ 0x19
  4018  000079                     	ds	1
  4019  00007A                     ??_moteJoiningProcess:
  4020  00007A                     oled_putUint8@number:
  4021                           	opt stack 0
  4022  00007A                     oled_putint8@negative:
  4023                           	opt stack 0
  4024                           
  4025                           ; 1 bytes @ 0x1A
  4026  00007A                     	ds	1
  4027  00007B                     test_switch@buttonCheck:
  4028                           	opt stack 0
  4029  00007B                     moteJoiningProcess@readDataRate:
  4030                           	opt stack 0
  4031  00007B                     oled_putUint8@numData:
  4032                           	opt stack 0
  4033  00007B                     oled_putint8@numData:
  4034                           	opt stack 0
  4035                           
  4036                           ; 6 bytes @ 0x1B
  4037  00007B                     	ds	1
  4038  00007C                     ??___flmul:
  4039  00007C                     moteJoiningProcess@joiningComplete:
  4040                           	opt stack 0
  4041                           
  4042                           ; 1 bytes @ 0x1C
  4043  00007C                     	ds	1
  4044  00007D                     moteJoiningProcess@messageReady:
  4045                           	opt stack 0
  4046                           
  4047                           ; 1 bytes @ 0x1D
  4048  00007D                     	ds	3
  4049  000080                     ___flmul@sign:
  4050                           	opt stack 0
  4051                           
  4052                           ; 1 bytes @ 0x20
  4053  000080                     	ds	1
  4054  000081                     oled_putint8@number:
  4055                           	opt stack 0
  4056  000081                     ___flmul@grs:
  4057                           	opt stack 0
  4058                           
  4059                           ; 4 bytes @ 0x21
  4060  000081                     	ds	4
  4061  000085                     ___flmul@aexp:
  4062                           	opt stack 0
  4063                           
  4064                           ; 1 bytes @ 0x25
  4065  000085                     	ds	1
  4066  000086                     ___flmul@bexp:
  4067                           	opt stack 0
  4068                           
  4069                           ; 1 bytes @ 0x26
  4070  000086                     	ds	1
  4071  000087                     ___flmul@prod:
  4072                           	opt stack 0
  4073                           
  4074                           ; 4 bytes @ 0x27
  4075  000087                     	ds	4
  4076  00008B                     ___flmul@temp:
  4077                           	opt stack 0
  4078                           
  4079                           ; 2 bytes @ 0x2B
  4080  00008B                     	ds	2
  4081  00008D                     ?___fldiv:
  4082                           	opt stack 0
  4083  00008D                     ___fldiv@b:
  4084                           	opt stack 0
  4085                           
  4086                           ; 4 bytes @ 0x2D
  4087  00008D                     	ds	4
  4088  000091                     ___fldiv@a:
  4089                           	opt stack 0
  4090                           
  4091                           ; 4 bytes @ 0x31
  4092  000091                     	ds	4
  4093  000095                     ??___fldiv:
  4094                           
  4095                           ; 1 bytes @ 0x35
  4096  000095                     	ds	4
  4097  000099                     ___fldiv@sign:
  4098                           	opt stack 0
  4099                           
  4100                           ; 1 bytes @ 0x39
  4101  000099                     	ds	1
  4102  00009A                     ___fldiv@rem:
  4103                           	opt stack 0
  4104                           
  4105                           ; 4 bytes @ 0x3A
  4106  00009A                     	ds	4
  4107  00009E                     ___fldiv@new_exp:
  4108                           	opt stack 0
  4109                           
  4110                           ; 2 bytes @ 0x3E
  4111  00009E                     	ds	2
  4112  0000A0                     ___fldiv@grs:
  4113                           	opt stack 0
  4114                           
  4115                           ; 4 bytes @ 0x40
  4116  0000A0                     	ds	4
  4117  0000A4                     ___fldiv@bexp:
  4118                           	opt stack 0
  4119                           
  4120                           ; 1 bytes @ 0x44
  4121  0000A4                     	ds	1
  4122  0000A5                     ___fldiv@aexp:
  4123                           	opt stack 0
  4124                           
  4125                           ; 1 bytes @ 0x45
  4126  0000A5                     	ds	1
  4127  0000A6                     ADC_TempConversion@tempRaw:
  4128                           	opt stack 0
  4129                           
  4130                           ; 1 bytes @ 0x46
  4131  0000A6                     	ds	1
  4132  0000A7                     ADC_TempConversion@temp:
  4133                           	opt stack 0
  4134                           
  4135                           ; 1 bytes @ 0x47
  4136  0000A7                     	ds	1
  4137  0000A8                     ADC_TempConversion@val:
  4138                           	opt stack 0
  4139                           
  4140                           ; 4 bytes @ 0x48
  4141  0000A8                     	ds	4
  4142  0000AC                     ??_moteApp_testSensors:
  4143  0000AC                     moteRunningProcess@selectButton:
  4144                           	opt stack 0
  4145                           
  4146                           ; 1 bytes @ 0x4C
  4147  0000AC                     	ds	1
  4148  0000AD                     moteRunningProcess@messageReady:
  4149                           	opt stack 0
  4150                           
  4151                           ; 1 bytes @ 0x4D
  4152  0000AD                     	ds	1
  4153  0000AE                     moteRunningProcess@sleepEvent:
  4154                           	opt stack 0
  4155                           
  4156                           ; 1 bytes @ 0x4E
  4157  0000AE                     	ds	1
  4158  0000AF                     ??_moteRunningProcess:
  4159                           
  4160                           ; 1 bytes @ 0x4F
  4161  0000AF                     	ds	1
  4162  0000B0                     moteRunningProcess@readByte:
  4163                           	opt stack 0
  4164                           
  4165                           ; 1 bytes @ 0x50
  4166  0000B0                     	ds	1
  4167  0000B1                     moteRunningProcess@sizeOfUpdate:
  4168                           	opt stack 0
  4169                           
  4170                           ; 1 bytes @ 0x51
  4171  0000B1                     	ds	1
  4172  0000B2                     moteRunningProcess@sizeOfUpdate_1497:
  4173                           	opt stack 0
  4174                           
  4175                           ; 1 bytes @ 0x52
  4176  0000B2                     	ds	1
  4177  0000B3                     moteRunningProcess@counter:
  4178                           	opt stack 0
  4179                           
  4180                           ; 1 bytes @ 0x53
  4181  0000B3                     	ds	1
  4182  0000B4                     moteRunningProcess@bufferReadPos:
  4183                           	opt stack 0
  4184                           
  4185                           ; 1 bytes @ 0x54
  4186  0000B4                     	ds	1
  4187  0000B5                     moteRunningProcess@changeStates:
  4188                           	opt stack 0
  4189                           
  4190                           ; 1 bytes @ 0x55
  4191  0000B5                     	ds	1
  4192  0000B6                     ??_moteHandler:
  4193                           
  4194                           ; 1 bytes @ 0x56
  4195  0000B6                     	ds	1
  4196  0000B7                     moteHandler@gotoSleep:
  4197                           	opt stack 0
  4198                           
  4199                           ; 1 bytes @ 0x57
  4200  0000B7                     	ds	1
  4201  0000B8                     moteHandler@gotoNextState:
  4202                           	opt stack 0
  4203                           
  4204                           ; 1 bytes @ 0x58
  4205  0000B8                     	ds	1
  4206  0000B9                     moteHandler@s2Button:
  4207                           	opt stack 0
  4208                           
  4209                           ; 1 bytes @ 0x59
  4210  0000B9                     	ds	1
  4211  0000BA                     moteHandler@buttonPress:
  4212                           	opt stack 0
  4213                           
  4214                           ; 1 bytes @ 0x5A
  4215  0000BA                     	ds	1
  4216  0000BB                     moteHandler@readMessage:
  4217                           	opt stack 0
  4218                           
  4219                           ; 1 bytes @ 0x5B
  4220  0000BB                     	ds	1
  4221  0000BC                     tblptru	equ	0xFF8
  4222                           tblptrh	equ	0xFF7
  4223                           tblptrl	equ	0xFF6
  4224                           tablat	equ	0xFF5
  4225                           postinc0	equ	0xFEE
  4226                           wreg	equ	0xFE8
  4227                           postdec1	equ	0xFE5
  4228                           fsr1l	equ	0xFE1
  4229                           
  4230                           ; 1 bytes @ 0x5C
  4231                           
  4232                           	psect	cstackCOMRAM
  4233  000001                     __pcstackCOMRAM:
  4234                           	opt stack 0
  4235  000001                     ??_USBStdGetDscHandler:
  4236  000001                     ??_USBStdGetStatusHandler:
  4237  000001                     ?i2_USBTransferOnePacket:
  4238                           	opt stack 0
  4239  000001                     ?i2___awmod:
  4240                           	opt stack 0
  4241  000001                     ?___lldiv:
  4242                           	opt stack 0
  4243  000001                     reloadTimer@setTimerValue:
  4244                           	opt stack 0
  4245  000001                     clearInterruptPinRX@tClearPin:
  4246                           	opt stack 0
  4247  000001                     USBConfigureEndpoint@direction:
  4248                           	opt stack 0
  4249  000001                     USBCtrlTrfTxService@byteToSend:
  4250                           	opt stack 0
  4251  000001                     i2oled_writeCommand@command:
  4252                           	opt stack 0
  4253  000001                     i2oled_writeData@data:
  4254                           	opt stack 0
  4255  000001                     i2USBTransferOnePacket@dir:
  4256                           	opt stack 0
  4257  000001                     i2___lbdiv@divisor:
  4258                           	opt stack 0
  4259  000001                     i2___awmod@dividend:
  4260                           	opt stack 0
  4261  000001                     i2memset@p1:
  4262                           	opt stack 0
  4263  000001                     ___lldiv@dividend:
  4264                           	opt stack 0
  4265                           
  4266                           ; 4 bytes @ 0x0
  4267  000001                     	ds	1
  4268  000002                     ??_USBConfigureEndpoint:
  4269  000002                     i2Set_Page_Address@address:
  4270                           	opt stack 0
  4271  000002                     i2Set_Column_Address@address:
  4272                           	opt stack 0
  4273  000002                     i2___lbdiv@dividend:
  4274                           	opt stack 0
  4275  000002                     USBStdGetStatusHandler@p:
  4276                           	opt stack 0
  4277  000002                     i2USBTransferOnePacket@data:
  4278                           	opt stack 0
  4279                           
  4280                           ; 2 bytes @ 0x1
  4281  000002                     	ds	1
  4282  000003                     i2oled_putChar@station_dot:
  4283                           	opt stack 0
  4284  000003                     i2___lbdiv@counter:
  4285                           	opt stack 0
  4286  000003                     i2___awmod@divisor:
  4287                           	opt stack 0
  4288  000003                     i2memset@c:
  4289                           	opt stack 0
  4290                           
  4291                           ; 2 bytes @ 0x2
  4292  000003                     	ds	1
  4293  000004                     i2oled_putChar@start_page:
  4294                           	opt stack 0
  4295  000004                     i2USBTransferOnePacket@len:
  4296                           	opt stack 0
  4297  000004                     i2___lbdiv@quotient:
  4298                           	opt stack 0
  4299                           
  4300                           ; 1 bytes @ 0x3
  4301  000004                     	ds	1
  4302  000005                     ??i2_oled_putChar:
  4303  000005                     i2USBTransferOnePacket@ep:
  4304                           	opt stack 0
  4305  000005                     i2___awmod@counter:
  4306                           	opt stack 0
  4307  000005                     i2memset@n:
  4308                           	opt stack 0
  4309  000005                     ___lldiv@divisor:
  4310                           	opt stack 0
  4311                           
  4312                           ; 4 bytes @ 0x4
  4313  000005                     	ds	1
  4314  000006                     USBConfigureEndpoint@EPNum:
  4315                           	opt stack 0
  4316  000006                     i2___awmod@sign:
  4317                           	opt stack 0
  4318  000006                     i2USBTransferOnePacket@handle:
  4319                           	opt stack 0
  4320                           
  4321                           ; 2 bytes @ 0x5
  4322  000006                     	ds	1
  4323  000007                     USBConfigureEndpoint@handle:
  4324                           	opt stack 0
  4325  000007                     i2memset@p:
  4326                           	opt stack 0
  4327                           
  4328                           ; 2 bytes @ 0x6
  4329  000007                     	ds	2
  4330  000009                     USBEnableEndpoint@options:
  4331                           	opt stack 0
  4332  000009                     i2USBDeviceInit@i:
  4333                           	opt stack 0
  4334  000009                     ___lldiv@quotient:
  4335                           	opt stack 0
  4336                           
  4337                           ; 4 bytes @ 0x8
  4338  000009                     	ds	1
  4339  00000A                     USBEnableEndpoint@p:
  4340                           	opt stack 0
  4341                           
  4342                           ; 2 bytes @ 0x9
  4343  00000A                     	ds	1
  4344  00000B                     i2oled_putChar@k:
  4345                           	opt stack 0
  4346                           
  4347                           ; 1 bytes @ 0xA
  4348  00000B                     	ds	1
  4349  00000C                     USBEnableEndpoint@ep:
  4350                           	opt stack 0
  4351  00000C                     i2oled_putChar@index:
  4352                           	opt stack 0
  4353                           
  4354                           ; 1 bytes @ 0xB
  4355  00000C                     	ds	1
  4356  00000D                     USBapp_CdcEmulatorInitialize@i:
  4357                           	opt stack 0
  4358  00000D                     ___lldiv@counter:
  4359                           	opt stack 0
  4360  00000D                     i2oled_clearRow@page:
  4361                           	opt stack 0
  4362  00000D                     i2oled_putString@string:
  4363                           	opt stack 0
  4364                           
  4365                           ; 3 bytes @ 0xC
  4366  00000D                     	ds	1
  4367  00000E                     i2oled_clearRow@index:
  4368                           	opt stack 0
  4369  00000E                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  4370                           	opt stack 0
  4371  00000E                     USART_mySetLineCodingHandler@dwBaud:
  4372                           	opt stack 0
  4373                           
  4374                           ; 4 bytes @ 0xD
  4375  00000E                     	ds	1
  4376  00000F                     
  4377                           ; 1 bytes @ 0xE
  4378  00000F                     	ds	1
  4379  000010                     i2oled_putString@station_dot:
  4380                           	opt stack 0
  4381  000010                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  4382                           	opt stack 0
  4383                           
  4384                           ; 2 bytes @ 0xF
  4385  000010                     	ds	1
  4386  000011                     i2oled_putString@start_page:
  4387                           	opt stack 0
  4388                           
  4389                           ; 1 bytes @ 0x10
  4390  000011                     	ds	1
  4391  000012                     USBCtrlTrfRxService@i:
  4392                           	opt stack 0
  4393  000012                     USBCtrlTrfInHandler@lastDTS:
  4394                           	opt stack 0
  4395  000012                     i2oled_putString@index:
  4396                           	opt stack 0
  4397  000012                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  4398                           	opt stack 0
  4399                           
  4400                           ; 2 bytes @ 0x11
  4401  000012                     	ds	1
  4402  000013                     USBCtrlTrfRxService@byteToRead:
  4403                           	opt stack 0
  4404  000013                     i2oled_putUint8@station_dot:
  4405                           	opt stack 0
  4406                           
  4407                           ; 1 bytes @ 0x12
  4408  000013                     	ds	1
  4409  000014                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  4410  000014                     i2oled_putUint8@start_page:
  4411                           	opt stack 0
  4412                           
  4413                           ; 1 bytes @ 0x13
  4414  000014                     	ds	1
  4415  000015                     i2oled_putUint8@numData:
  4416                           	opt stack 0
  4417                           
  4418                           ; 6 bytes @ 0x14
  4419  000015                     	ds	1
  4420  000016                     ??_USBStdFeatureReqHandler:
  4421  000016                     USBStdSetCfgHandler@i:
  4422                           	opt stack 0
  4423                           
  4424                           ; 1 bytes @ 0x15
  4425  000016                     	ds	1
  4426  000017                     USBStdFeatureReqHandler@pUEP:
  4427                           	opt stack 0
  4428                           
  4429                           ; 2 bytes @ 0x16
  4430  000017                     	ds	2
  4431  000019                     USBStdFeatureReqHandler@current_ep_data:
  4432                           	opt stack 0
  4433                           
  4434                           ; 1 bytes @ 0x18
  4435  000019                     	ds	1
  4436  00001A                     USBStdFeatureReqHandler@p:
  4437                           	opt stack 0
  4438                           
  4439                           ; 2 bytes @ 0x19
  4440  00001A                     	ds	1
  4441  00001B                     i2oled_putUint8@number:
  4442                           	opt stack 0
  4443                           
  4444                           ; 1 bytes @ 0x1A
  4445  00001B                     	ds	1
  4446  00001C                     ??_USBCtrlEPService:
  4447  00001C                     ReadyByteFrame@buffer_rx:
  4448                           	opt stack 0
  4449                           
  4450                           ; 2 bytes @ 0x1B
  4451  00001C                     	ds	2
  4452  00001E                     ReadyByteFrame@numBytes:
  4453                           	opt stack 0
  4454  00001E                     USBCtrlEPService@setup_cnt:
  4455                           	opt stack 0
  4456                           
  4457                           ; 1 bytes @ 0x1D
  4458  00001E                     	ds	1
  4459  00001F                     ??_InterruptTimerUART:
  4460  00001F                     USBDeviceTasks@i:
  4461                           	opt stack 0
  4462                           
  4463                           ; 1 bytes @ 0x1E
  4464  00001F                     	ds	2
  4465  000021                     InterruptTimerUART@mask:
  4466                           	opt stack 0
  4467                           
  4468                           ; 1 bytes @ 0x20
  4469  000021                     	ds	1
  4470  000022                     ??_INTERRUPT_InterruptManager:
  4471                           
  4472                           ; 1 bytes @ 0x21
  4473  000022                     	ds	18
  4474                           tblptru	equ	0xFF8
  4475                           tblptrh	equ	0xFF7
  4476                           tblptrl	equ	0xFF6
  4477                           tablat	equ	0xFF5
  4478                           postinc0	equ	0xFEE
  4479                           wreg	equ	0xFE8
  4480                           postdec1	equ	0xFE5
  4481                           fsr1l	equ	0xFE1
  4482                           
  4483 ;;
  4484 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4485 ;;
  4486 ;; *************** function _main *****************
  4487 ;; Defined at:
  4488 ;;		line 70 in file "main.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;		None
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;		None
  4493 ;; Return value:  Size  Location     Type
  4494 ;;                  1    wreg      void 
  4495 ;; Registers used:
  4496 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4497 ;; Tracked objects:
  4498 ;;		On entry : 0/0
  4499 ;;		On exit  : 0/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4502 ;;      Params:         0       0       0       0       0       0       0       0       0
  4503 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4504 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4505 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4506 ;;Total ram usage:        0 bytes
  4507 ;; Hardware stack levels required when called:   20
  4508 ;; This function calls:
  4509 ;;		_DATAEE_ReadByte
  4510 ;;		_DATAEE_WriteByte
  4511 ;;		_MOTEapp_handlerState
  4512 ;;		_SYSTEM_Initialize
  4513 ;;		_USBDeviceAttach
  4514 ;;		_USBDeviceInit
  4515 ;;		_USBapp_Handler
  4516 ;;		_USBapp_handlerState
  4517 ;;		_moduleResync
  4518 ;;		_moteApp_clearCommand
  4519 ;;		_moteApp_delayms
  4520 ;;		_moteHandler
  4521 ;;		_oled_clear
  4522 ;;		_oled_init
  4523 ;;		_oled_putString
  4524 ;;		_test_powerup
  4525 ;; This function is called by:
  4526 ;;		Startup code after reset
  4527 ;; This function uses a non-reentrant model
  4528 ;;
  4529                           
  4530                           	psect	text0
  4531  002CB2                     __ptext0:
  4532                           	opt stack 0
  4533  002CB2                     _main:
  4534                           	opt stack 11
  4535                           
  4536                           ;main.c: 73: SYSTEM_Initialize();
  4537                           
  4538                           ;incstack = 0
  4539  002CB2  ECFB  F02E         	call	_SYSTEM_Initialize	;wreg free
  4540                           
  4541                           ;main.c: 75: oled_init();
  4542  002CB6  EC3F  F02E         	call	_oled_init	;wreg free
  4543                           
  4544                           ;main.c: 76: USBDeviceInit();
  4545  002CBA  EC8D  F017         	call	_USBDeviceInit	;wreg free
  4546                           
  4547                           ;main.c: 78: USBDeviceAttach();
  4548  002CBE  ECDA  F02D         	call	_USBDeviceAttach	;wreg free
  4549                           
  4550                           ;main.c: 80: LATBbits.LATB5 = 1;
  4551  002CC2  8A8A               	bsf	3978,5,c	;volatile
  4552                           
  4553                           ;main.c: 81: moteApp_delayms(50);
  4554  002CC4  0E00               	movlw	0
  4555  002CC6  0100               	movlb	0	; () banked
  4556  002CC8  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4557  002CCA  0E32               	movlw	50
  4558  002CCC  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4559  002CCE  EC0D  F02E         	call	_moteApp_delayms	;wreg free
  4560                           
  4561                           ;main.c: 82: LATBbits.LATB5 = 0;
  4562  002CD2  9A8A               	bcf	3978,5,c	;volatile
  4563                           
  4564                           ;main.c: 83: moteApp_delayms(500);
  4565  002CD4  0E01               	movlw	1
  4566  002CD6  0100               	movlb	0	; () banked
  4567  002CD8  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4568  002CDA  0EF4               	movlw	244
  4569  002CDC  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4570  002CDE  EC0D  F02E         	call	_moteApp_delayms	;wreg free
  4571                           
  4572                           ;main.c: 85: PEIE = 1;
  4573  002CE2  8CF2               	bsf	intcon,6,c	;volatile
  4574                           
  4575                           ;main.c: 86: GIE = 1;
  4576  002CE4  8EF2               	bsf	intcon,7,c	;volatile
  4577                           
  4578                           ;main.c: 88: moduleResync();
  4579  002CE6  EC77  F026         	call	_moduleResync	;wreg free
  4580                           
  4581                           ;main.c: 89: moteApp_delayms(20);
  4582  002CEA  0E00               	movlw	0
  4583  002CEC  0100               	movlb	0	; () banked
  4584  002CEE  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4585  002CF0  0E14               	movlw	20
  4586  002CF2  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4587  002CF4  EC0D  F02E         	call	_moteApp_delayms	;wreg free
  4588                           
  4589                           ;main.c: 90: moteApp_clearCommand();
  4590  002CF8  ECB7  F030         	call	_moteApp_clearCommand	;wreg free
  4591                           
  4592                           ;main.c: 91: moteApp_delayms(20);
  4593  002CFC  0E00               	movlw	0
  4594  002CFE  0100               	movlb	0	; () banked
  4595  002D00  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4596  002D02  0E14               	movlw	20
  4597  002D04  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4598  002D06  EC0D  F02E         	call	_moteApp_delayms	;wreg free
  4599                           
  4600                           ;main.c: 93: powerOnStatus = DATAEE_ReadByte(0x00);
  4601  002D0A  0E00               	movlw	0
  4602  002D0C  EC44  F030         	call	_DATAEE_ReadByte
  4603  002D10  0100               	movlb	0	; () banked
  4604  002D12  6FF6               	movwf	_powerOnStatus& (0+255),b
  4605                           
  4606                           ; BSR set to: 0
  4607                           ;main.c: 94: if ( powerOnStatus != 0x55)
  4608  002D14  0E55               	movlw	85
  4609  002D16  19F6               	xorwf	_powerOnStatus& (0+255),w,b
  4610  002D18  B4D8               	btfsc	status,2,c
  4611  002D1A  D008               	goto	l57
  4612                           
  4613                           ; BSR set to: 0
  4614                           ;main.c: 95: {
  4615                           ;main.c: 96: test_powerup();
  4616  002D1C  ECB0  F028         	call	_test_powerup	;wreg free
  4617                           
  4618                           ;main.c: 97: DATAEE_WriteByte(0x00, 0x55);
  4619  002D20  0E55               	movlw	85
  4620  002D22  0100               	movlb	0	; () banked
  4621  002D24  6F60               	movwf	DATAEE_WriteByte@bData& (0+255),b
  4622  002D26  0E00               	movlw	0
  4623  002D28  EC12  F02D         	call	_DATAEE_WriteByte
  4624  002D2C                     l57:
  4625                           
  4626                           ;main.c: 98: }
  4627                           ;main.c: 101: operationType = USB;
  4628  002D2C  0E00               	movlw	0
  4629  002D2E  0100               	movlb	0	; () banked
  4630  002D30  6FF7               	movwf	_operationType& (0+255),b
  4631                           
  4632                           ; BSR set to: 0
  4633                           ;main.c: 102: USBapp_handlerState(USB_STARTUP);
  4634  002D32  0E00               	movlw	0
  4635  002D34  ECEA  F030         	call	_USBapp_handlerState
  4636                           
  4637                           ;main.c: 104: oled_clear();
  4638  002D38  ECF0  F02F         	call	_oled_clear	;wreg free
  4639                           
  4640                           ;main.c: 105: oled_putString("Microchip Mote",0,0);
  4641  002D3C  0E1E               	movlw	low STR_1
  4642  002D3E  0100               	movlb	0	; () banked
  4643  002D40  6F72               	movwf	oled_putString@string& (0+255),b
  4644  002D42  0E7D               	movlw	high STR_1
  4645  002D44  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4646  002D46  5172               	movf	oled_putString@string& (0+255),w,b
  4647  002D48  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  4648  002D4A  A4D8               	btfss	status,2,c
  4649  002D4C  0E00               	movlw	low (__mediumconst shr (0+16))
  4650  002D4E  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  4651  002D50  0E00               	movlw	0
  4652  002D52  6F75               	movwf	oled_putString@station_dot& (0+255),b
  4653  002D54  0E00               	movlw	0
  4654  002D56  6F76               	movwf	oled_putString@start_page& (0+255),b
  4655  002D58  EC76  F028         	call	_oled_putString	;wreg free
  4656                           
  4657                           ;main.c: 106: oled_putString("   LoRa Demo  ",0,1);
  4658  002D5C  0E00               	movlw	low STR_2
  4659  002D5E  0100               	movlb	0	; () banked
  4660  002D60  6F72               	movwf	oled_putString@string& (0+255),b
  4661  002D62  0E7D               	movlw	high STR_2
  4662  002D64  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4663  002D66  5172               	movf	oled_putString@string& (0+255),w,b
  4664  002D68  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  4665  002D6A  A4D8               	btfss	status,2,c
  4666  002D6C  0E00               	movlw	low (__mediumconst shr (0+16))
  4667  002D6E  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  4668  002D70  0E00               	movlw	0
  4669  002D72  6F75               	movwf	oled_putString@station_dot& (0+255),b
  4670  002D74  0E01               	movlw	1
  4671  002D76  6F76               	movwf	oled_putString@start_page& (0+255),b
  4672  002D78  EC76  F028         	call	_oled_putString	;wreg free
  4673                           
  4674                           ;main.c: 107: oled_putString(" V 1.0.1 Code ",0,3);
  4675  002D7C  0E0F               	movlw	low STR_3
  4676  002D7E  0100               	movlb	0	; () banked
  4677  002D80  6F72               	movwf	oled_putString@string& (0+255),b
  4678  002D82  0E7D               	movlw	high STR_3
  4679  002D84  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4680  002D86  5172               	movf	oled_putString@string& (0+255),w,b
  4681  002D88  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  4682  002D8A  A4D8               	btfss	status,2,c
  4683  002D8C  0E00               	movlw	low (__mediumconst shr (0+16))
  4684  002D8E  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  4685  002D90  0E00               	movlw	0
  4686  002D92  6F75               	movwf	oled_putString@station_dot& (0+255),b
  4687  002D94  0E03               	movlw	3
  4688  002D96  6F76               	movwf	oled_putString@start_page& (0+255),b
  4689  002D98  EC76  F028         	call	_oled_putString	;wreg free
  4690                           
  4691                           ;main.c: 108: moteApp_delayms(1000);
  4692  002D9C  0E03               	movlw	3
  4693  002D9E  0100               	movlb	0	; () banked
  4694  002DA0  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4695  002DA2  0EE8               	movlw	232
  4696  002DA4  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4697  002DA6  EC0D  F02E         	call	_moteApp_delayms	;wreg free
  4698                           
  4699                           ;main.c: 112: {
  4700                           ;main.c: 114: switch (operationType)
  4701                           
  4702                           ;main.c: 111: while(1)
  4703  002DAA  D015               	goto	l67
  4704  002DAC                     
  4705                           ;main.c: 117: while(1);
  4706  002DAC  D7FF               	goto	l60
  4707  002DAE                     
  4708                           ;main.c: 120: USBapp_Handler();
  4709  002DAE  ECB2  F01F         	call	_USBapp_Handler	;wreg free
  4710                           
  4711                           ;main.c: 122: operationType = MOTE;
  4712  002DB2  0E01               	movlw	1
  4713  002DB4  0100               	movlb	0	; () banked
  4714  002DB6  6FF7               	movwf	_operationType& (0+255),b
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;main.c: 123: MOTEapp_handlerState(MOTE_STARTUP);
  4718  002DB8  0E01               	movlw	1
  4719  002DBA  ECEF  F030         	call	_MOTEapp_handlerState
  4720                           
  4721                           ;main.c: 124: break;
  4722  002DBE  D00B               	goto	l67
  4723  002DC0                     
  4724                           ;main.c: 126: if (moteHandler() == MOTE_SWAP)
  4725  002DC0  EC57  F011         	call	_moteHandler	;wreg free
  4726  002DC4  0A04               	xorlw	4
  4727  002DC6  A4D8               	btfss	status,2,c
  4728  002DC8  D006               	goto	l67
  4729                           
  4730                           ;main.c: 127: {
  4731                           ;main.c: 129: operationType = USB;
  4732  002DCA  0E00               	movlw	0
  4733  002DCC  0100               	movlb	0	; () banked
  4734  002DCE  6FF7               	movwf	_operationType& (0+255),b
  4735                           
  4736                           ; BSR set to: 0
  4737                           ;main.c: 130: USBapp_handlerState(USB_STARTUP);
  4738  002DD0  0E00               	movlw	0
  4739  002DD2  ECEA  F030         	call	_USBapp_handlerState
  4740  002DD6                     l67:
  4741                           
  4742                           ;main.c: 133: }
  4743                           
  4744                           ;main.c: 131: }
  4745                           ;main.c: 132: break;
  4746  002DD6  0100               	movlb	0	; () banked
  4747  002DD8  51F7               	movf	_operationType& (0+255),w,b
  4748                           
  4749                           ; Switch size 1, requested type "space"
  4750                           ; Number of cases is 2, Range of values is 0 to 1
  4751                           ; switch strategies available:
  4752                           ; Name         Instructions Cycles
  4753                           ; simple_byte            7     4 (average)
  4754                           ;	Chosen strategy is simple_byte
  4755  002DDA  0A00               	xorlw	0	; case 0
  4756  002DDC  B4D8               	btfsc	status,2,c
  4757  002DDE  D7E7               	goto	l65
  4758  002DE0  0A01               	xorlw	1	; case 1
  4759  002DE2  B4D8               	btfsc	status,2,c
  4760  002DE4  D7ED               	goto	l66
  4761  002DE6  D7E2               	goto	l60
  4762  002DE8                     __end_of_main:
  4763                           	opt stack 0
  4764                           tblptru	equ	0xFF8
  4765                           tblptrh	equ	0xFF7
  4766                           tblptrl	equ	0xFF6
  4767                           tablat	equ	0xFF5
  4768                           intcon	equ	0xFF2
  4769                           postinc0	equ	0xFEE
  4770                           wreg	equ	0xFE8
  4771                           postdec1	equ	0xFE5
  4772                           fsr1l	equ	0xFE1
  4773                           status	equ	0xFD8
  4774                           
  4775 ;; *************** function _test_powerup *****************
  4776 ;; Defined at:
  4777 ;;		line 62 in file "../Includes/Board/poweruptest.c"
  4778 ;; Parameters:    Size  Location     Type
  4779 ;;		None
  4780 ;; Auto vars:     Size  Location     Type
  4781 ;;		None
  4782 ;; Return value:  Size  Location     Type
  4783 ;;                  1    wreg      void 
  4784 ;; Registers used:
  4785 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4786 ;; Tracked objects:
  4787 ;;		On entry : 0/0
  4788 ;;		On exit  : 0/0
  4789 ;;		Unchanged: 0/0
  4790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4791 ;;      Params:         0       0       0       0       0       0       0       0       0
  4792 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4793 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4794 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4795 ;;Total ram usage:        0 bytes
  4796 ;; Hardware stack levels used:    1
  4797 ;; Hardware stack levels required when called:   17
  4798 ;; This function calls:
  4799 ;;		_EUSART_FlushBuffer
  4800 ;;		_moteApp_delayms
  4801 ;;		_moteApp_testSensors
  4802 ;;		_oled_clear
  4803 ;;		_test_comms
  4804 ;;		_test_leds
  4805 ;;		_test_oled
  4806 ;;		_test_switch
  4807 ;; This function is called by:
  4808 ;;		_main
  4809 ;; This function uses a non-reentrant model
  4810 ;;
  4811                           
  4812                           	psect	text1
  4813  005160                     __ptext1:
  4814                           	opt stack 0
  4815  005160                     _test_powerup:
  4816                           	opt stack 13
  4817                           
  4818                           ;poweruptest.c: 65: test_oled();
  4819                           
  4820                           ; BSR set to: 0
  4821                           ;incstack = 0
  4822  005160  EC82  F020         	call	_test_oled	;wreg free
  4823                           
  4824                           ;poweruptest.c: 66: moteApp_delayms(20);
  4825  005164  0E00               	movlw	0
  4826  005166  0100               	movlb	0	; () banked
  4827  005168  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4828  00516A  0E14               	movlw	20
  4829  00516C  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4830  00516E  EC0D  F02E         	call	_moteApp_delayms	;wreg free
  4831                           
  4832                           ;poweruptest.c: 68: test_switch();
  4833  005172  ECD9  F019         	call	_test_switch	;wreg free
  4834                           
  4835                           ;poweruptest.c: 70: oled_clear();
  4836  005176  ECF0  F02F         	call	_oled_clear	;wreg free
  4837                           
  4838                           ;poweruptest.c: 71: moteApp_delayms(20);
  4839  00517A  0E00               	movlw	0
  4840  00517C  0100               	movlb	0	; () banked
  4841  00517E  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4842  005180  0E14               	movlw	20
  4843  005182  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4844  005184  EC0D  F02E         	call	_moteApp_delayms	;wreg free
  4845                           
  4846                           ;poweruptest.c: 72: test_comms();
  4847  005188  ECE9  F028         	call	_test_comms	;wreg free
  4848                           
  4849                           ;poweruptest.c: 73: moteApp_delayms(20);
  4850  00518C  0E00               	movlw	0
  4851  00518E  0100               	movlb	0	; () banked
  4852  005190  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4853  005192  0E14               	movlw	20
  4854  005194  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4855  005196  EC0D  F02E         	call	_moteApp_delayms	;wreg free
  4856                           
  4857                           ;poweruptest.c: 75: test_leds();
  4858  00519A  EC01  F02A         	call	_test_leds	;wreg free
  4859                           
  4860                           ;poweruptest.c: 78: moteApp_delayms(20);
  4861  00519E  0E00               	movlw	0
  4862  0051A0  0100               	movlb	0	; () banked
  4863  0051A2  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4864  0051A4  0E14               	movlw	20
  4865  0051A6  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4866  0051A8  EC0D  F02E         	call	_moteApp_delayms	;wreg free
  4867                           
  4868                           ;poweruptest.c: 79: EUSART_FlushBuffer();
  4869  0051AC  EC72  F02C         	call	_EUSART_FlushBuffer	;wreg free
  4870                           
  4871                           ;poweruptest.c: 80: moteApp_delayms(20);
  4872  0051B0  0E00               	movlw	0
  4873  0051B2  0100               	movlb	0	; () banked
  4874  0051B4  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4875  0051B6  0E14               	movlw	20
  4876  0051B8  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4877  0051BA  EC0D  F02E         	call	_moteApp_delayms	;wreg free
  4878                           
  4879                           ;poweruptest.c: 81: moteApp_testSensors();
  4880  0051BE  EC58  F01A         	call	_moteApp_testSensors	;wreg free
  4881                           
  4882                           ;poweruptest.c: 82: moteApp_delayms(3000);
  4883  0051C2  0E0B               	movlw	11
  4884  0051C4  0100               	movlb	0	; () banked
  4885  0051C6  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4886  0051C8  0EB8               	movlw	184
  4887  0051CA  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4888  0051CC  EC0D  F02E         	call	_moteApp_delayms	;wreg free
  4889  0051D0  0012               	return		;funcret
  4890  0051D2                     __end_of_test_powerup:
  4891                           	opt stack 0
  4892                           tblptru	equ	0xFF8
  4893                           tblptrh	equ	0xFF7
  4894                           tblptrl	equ	0xFF6
  4895                           tablat	equ	0xFF5
  4896                           intcon	equ	0xFF2
  4897                           postinc0	equ	0xFEE
  4898                           wreg	equ	0xFE8
  4899                           postdec1	equ	0xFE5
  4900                           fsr1l	equ	0xFE1
  4901                           status	equ	0xFD8
  4902                           
  4903 ;; *************** function _test_switch *****************
  4904 ;; Defined at:
  4905 ;;		line 99 in file "../Includes/Board/poweruptest.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;		None
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;  timeout         2   25[BANK0 ] unsigned int 
  4910 ;;  buttonCheck     1   27[BANK0 ] unsigned char 
  4911 ;; Return value:  Size  Location     Type
  4912 ;;                  1    wreg      void 
  4913 ;; Registers used:
  4914 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4915 ;; Tracked objects:
  4916 ;;		On entry : 0/0
  4917 ;;		On exit  : 0/0
  4918 ;;		Unchanged: 0/0
  4919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4920 ;;      Params:         0       0       0       0       0       0       0       0       0
  4921 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4922 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4923 ;;      Totals:         0       4       0       0       0       0       0       0       0
  4924 ;;Total ram usage:        4 bytes
  4925 ;; Hardware stack levels used:    1
  4926 ;; Hardware stack levels required when called:   16
  4927 ;; This function calls:
  4928 ;;		_oled_clear
  4929 ;;		_oled_putString
  4930 ;; This function is called by:
  4931 ;;		_test_powerup
  4932 ;; This function uses a non-reentrant model
  4933 ;;
  4934                           
  4935                           	psect	text2
  4936  0033B2                     __ptext2:
  4937                           	opt stack 0
  4938  0033B2                     _test_switch:
  4939                           	opt stack 13
  4940                           
  4941                           ;poweruptest.c: 101: uint16_t timeout = 500;
  4942                           
  4943                           ;incstack = 0
  4944  0033B2  0E01               	movlw	1
  4945  0033B4  0100               	movlb	0	; () banked
  4946  0033B6  6F7A               	movwf	(test_switch@timeout+1)& (0+255),b
  4947  0033B8  0EF4               	movlw	244
  4948  0033BA  6F79               	movwf	test_switch@timeout& (0+255),b
  4949                           
  4950                           ;poweruptest.c: 102: uint8_t buttonCheck = 0x00;
  4951  0033BC  0E00               	movlw	0
  4952  0033BE  6F7B               	movwf	test_switch@buttonCheck& (0+255),b
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;poweruptest.c: 103: oled_clear();
  4956  0033C0  ECF0  F02F         	call	_oled_clear	;wreg free
  4957                           
  4958                           ;poweruptest.c: 104: oled_putString("Button Test:",0,0);
  4959  0033C4  0EF4               	movlw	low STR_10
  4960  0033C6  0100               	movlb	0	; () banked
  4961  0033C8  6F72               	movwf	oled_putString@string& (0+255),b
  4962  0033CA  0E7D               	movlw	high STR_10
  4963  0033CC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4964  0033CE  5172               	movf	oled_putString@string& (0+255),w,b
  4965  0033D0  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  4966  0033D2  A4D8               	btfss	status,2,c
  4967  0033D4  0E00               	movlw	low (__mediumconst shr (0+16))
  4968  0033D6  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  4969  0033D8  0E00               	movlw	0
  4970  0033DA  6F75               	movwf	oled_putString@station_dot& (0+255),b
  4971  0033DC  0E00               	movlw	0
  4972  0033DE  6F76               	movwf	oled_putString@start_page& (0+255),b
  4973  0033E0  EC76  F028         	call	_oled_putString	;wreg free
  4974                           
  4975                           ;poweruptest.c: 106: if( (PORTBbits.RB1 == 0) || (PORTBbits.RB0 == 0) )
  4976  0033E4  A281               	btfss	3969,1,c	;volatile
  4977  0033E6  D002               	goto	u8930
  4978  0033E8  B081               	btfsc	3969,0,c	;volatile
  4979  0033EA  D011               	goto	l123
  4980  0033EC                     u8930:
  4981                           
  4982                           ;poweruptest.c: 107: {
  4983                           ;poweruptest.c: 108: oled_putString("Button FAIL",0,3);
  4984  0033EC  0E7C               	movlw	low STR_11
  4985  0033EE  0100               	movlb	0	; () banked
  4986  0033F0  6F72               	movwf	oled_putString@string& (0+255),b
  4987  0033F2  0E7E               	movlw	high STR_11
  4988  0033F4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  4989  0033F6  5172               	movf	oled_putString@string& (0+255),w,b
  4990  0033F8  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  4991  0033FA  A4D8               	btfss	status,2,c
  4992  0033FC  0E00               	movlw	low (__mediumconst shr (0+16))
  4993  0033FE  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  4994  003400  0E00               	movlw	0
  4995  003402  6F75               	movwf	oled_putString@station_dot& (0+255),b
  4996  003404  0E03               	movlw	3
  4997  003406  6F76               	movwf	oled_putString@start_page& (0+255),b
  4998  003408  EC76  F028         	call	_oled_putString	;wreg free
  4999                           
  5000                           ;poweruptest.c: 109: }
  5001  00340C  D047               	goto	l127
  5002  00340E                     l123:
  5003                           
  5004                           ;poweruptest.c: 110: else
  5005                           ;poweruptest.c: 111: {
  5006                           ;poweruptest.c: 112: oled_putString("Press Button",0,1);
  5007  00340E  0E1B               	movlw	low STR_12
  5008  003410  0100               	movlb	0	; () banked
  5009  003412  6F72               	movwf	oled_putString@string& (0+255),b
  5010  003414  0E7E               	movlw	high STR_12
  5011  003416  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5012  003418  5172               	movf	oled_putString@string& (0+255),w,b
  5013  00341A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5014  00341C  A4D8               	btfss	status,2,c
  5015  00341E  0E00               	movlw	low (__mediumconst shr (0+16))
  5016  003420  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5017  003422  0E00               	movlw	0
  5018  003424  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5019  003426  0E01               	movlw	1
  5020  003428  6F76               	movwf	oled_putString@start_page& (0+255),b
  5021  00342A  EC76  F028         	call	_oled_putString	;wreg free
  5022                           
  5023                           ;poweruptest.c: 113: }
  5024                           ;poweruptest.c: 114: while(timeout--)
  5025  00342E  D036               	goto	l127
  5026  003430                     l128:
  5027                           
  5028                           ; BSR set to: 0
  5029                           ;poweruptest.c: 115: {
  5030                           ;poweruptest.c: 116: if(PORTBbits.RB1 == 0)
  5031  003430  B281               	btfsc	3969,1,c	;volatile
  5032  003432  D013               	goto	l129
  5033                           
  5034                           ; BSR set to: 0
  5035                           ;poweruptest.c: 117: {
  5036                           ;poweruptest.c: 118: oled_putString("Button1 PASS",0,2);
  5037  003434  0E01               	movlw	low STR_13
  5038  003436  6F72               	movwf	oled_putString@string& (0+255),b
  5039  003438  0E7E               	movlw	high STR_13
  5040  00343A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5041  00343C  5172               	movf	oled_putString@string& (0+255),w,b
  5042  00343E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5043  003440  A4D8               	btfss	status,2,c
  5044  003442  0E00               	movlw	low (__mediumconst shr (0+16))
  5045  003444  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5046  003446  0E00               	movlw	0
  5047  003448  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5048  00344A  0E02               	movlw	2
  5049  00344C  6F76               	movwf	oled_putString@start_page& (0+255),b
  5050  00344E  EC76  F028         	call	_oled_putString	;wreg free
  5051                           
  5052                           ;poweruptest.c: 119: buttonCheck = buttonCheck + 0x08;
  5053  003452  0100               	movlb	0	; () banked
  5054  003454  517B               	movf	test_switch@buttonCheck& (0+255),w,b
  5055  003456  0F08               	addlw	8
  5056  003458  6F7B               	movwf	test_switch@buttonCheck& (0+255),b
  5057  00345A                     l129:
  5058                           
  5059                           ; BSR set to: 0
  5060                           ;poweruptest.c: 120: }
  5061                           ;poweruptest.c: 121: if(PORTBbits.RB0 == 0)
  5062                           
  5063                           ; BSR set to: 0
  5064  00345A  B081               	btfsc	3969,0,c	;volatile
  5065  00345C  D013               	goto	l130
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;poweruptest.c: 122: {
  5069                           ;poweruptest.c: 123: oled_putString("Button2 PASS",0,3);
  5070  00345E  0E0E               	movlw	low STR_14
  5071  003460  6F72               	movwf	oled_putString@string& (0+255),b
  5072  003462  0E7E               	movlw	high STR_14
  5073  003464  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5074  003466  5172               	movf	oled_putString@string& (0+255),w,b
  5075  003468  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5076  00346A  A4D8               	btfss	status,2,c
  5077  00346C  0E00               	movlw	low (__mediumconst shr (0+16))
  5078  00346E  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5079  003470  0E00               	movlw	0
  5080  003472  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5081  003474  0E03               	movlw	3
  5082  003476  6F76               	movwf	oled_putString@start_page& (0+255),b
  5083  003478  EC76  F028         	call	_oled_putString	;wreg free
  5084                           
  5085                           ;poweruptest.c: 124: buttonCheck = buttonCheck + 0x80;
  5086  00347C  0100               	movlb	0	; () banked
  5087  00347E  517B               	movf	test_switch@buttonCheck& (0+255),w,b
  5088  003480  0F80               	addlw	128
  5089  003482  6F7B               	movwf	test_switch@buttonCheck& (0+255),b
  5090  003484                     l130:
  5091                           
  5092                           ; BSR set to: 0
  5093                           ;poweruptest.c: 125: }
  5094                           ;poweruptest.c: 126: if (buttonCheck == 0x88)
  5095                           
  5096                           ; BSR set to: 0
  5097  003484  0E88               	movlw	136
  5098  003486  197B               	xorwf	test_switch@buttonCheck& (0+255),w,b
  5099  003488  B4D8               	btfsc	status,2,c
  5100  00348A  0012               	return	
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;poweruptest.c: 129: }
  5104                           ;poweruptest.c: 130: _delay((unsigned long)((10)*(48000000/4000.0)));
  5105                           
  5106                           ; BSR set to: 0
  5107                           
  5108                           ; BSR set to: 0
  5109                           ;poweruptest.c: 127: {
  5110                           ;poweruptest.c: 128: break;
  5111  00348C  0E9C               	movlw	156
  5112  00348E  0100               	movlb	0	; () banked
  5113  003490  6F78               	movwf	??_test_switch& (0+255),b
  5114  003492  0ED7               	movlw	215
  5115  003494                     u11207:
  5116  003494  2EE8               	decfsz	wreg,f,c
  5117  003496  D7FE               	bra	u11207
  5118  003498  2F78               	decfsz	??_test_switch& (0+255),f,b
  5119  00349A  D7FC               	bra	u11207
  5120  00349C                     l127:
  5121  00349C  0100               	movlb	0	; () banked
  5122  00349E  0779               	decf	test_switch@timeout& (0+255),f,b
  5123  0034A0  A0D8               	btfss	status,0,c
  5124  0034A2  077A               	decf	(test_switch@timeout+1)& (0+255),f,b
  5125  0034A4  2979               	incf	test_switch@timeout& (0+255),w,b
  5126  0034A6  E1C4               	bnz	l128
  5127  0034A8  297A               	incf	(test_switch@timeout+1)& (0+255),w,b
  5128  0034AA  B4D8               	btfsc	status,2,c
  5129  0034AC  0012               	return	
  5130  0034AE  D7C0               	goto	l128
  5131  0034B0                     __end_of_test_switch:
  5132                           	opt stack 0
  5133                           tblptru	equ	0xFF8
  5134                           tblptrh	equ	0xFF7
  5135                           tblptrl	equ	0xFF6
  5136                           tablat	equ	0xFF5
  5137                           intcon	equ	0xFF2
  5138                           postinc0	equ	0xFEE
  5139                           wreg	equ	0xFE8
  5140                           postdec1	equ	0xFE5
  5141                           fsr1l	equ	0xFE1
  5142                           status	equ	0xFD8
  5143                           
  5144 ;; *************** function _test_oled *****************
  5145 ;; Defined at:
  5146 ;;		line 86 in file "../Includes/Board/poweruptest.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;		None
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;		None
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  1    wreg      void 
  5153 ;; Registers used:
  5154 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5160 ;;      Params:         0       0       0       0       0       0       0       0       0
  5161 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5162 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5163 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5164 ;;Total ram usage:        0 bytes
  5165 ;; Hardware stack levels used:    1
  5166 ;; Hardware stack levels required when called:   16
  5167 ;; This function calls:
  5168 ;;		_oled_clear
  5169 ;;		_oled_putString
  5170 ;; This function is called by:
  5171 ;;		_test_powerup
  5172 ;; This function uses a non-reentrant model
  5173 ;;
  5174                           
  5175                           	psect	text3
  5176  004104                     __ptext3:
  5177                           	opt stack 0
  5178  004104                     _test_oled:
  5179                           	opt stack 13
  5180                           
  5181                           ;poweruptest.c: 88: oled_clear();
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;incstack = 0
  5185  004104  ECF0  F02F         	call	_oled_clear	;wreg free
  5186                           
  5187                           ;poweruptest.c: 90: oled_putString("MoTe v .",0,0);
  5188  004108  0E3D               	movlw	low STR_4
  5189  00410A  0100               	movlb	0	; () banked
  5190  00410C  6F72               	movwf	oled_putString@string& (0+255),b
  5191  00410E  0E7F               	movlw	high STR_4
  5192  004110  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5193  004112  5172               	movf	oled_putString@string& (0+255),w,b
  5194  004114  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5195  004116  A4D8               	btfss	status,2,c
  5196  004118  0E00               	movlw	low (__mediumconst shr (0+16))
  5197  00411A  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5198  00411C  0E00               	movlw	0
  5199  00411E  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5200  004120  0E00               	movlw	0
  5201  004122  6F76               	movwf	oled_putString@start_page& (0+255),b
  5202  004124  EC76  F028         	call	_oled_putString	;wreg free
  5203                           
  5204                           ;poweruptest.c: 91: oled_putString("0",0,6);
  5205  004128  0E8A               	movlw	low (STR_164+11)
  5206  00412A  0100               	movlb	0	; () banked
  5207  00412C  6F72               	movwf	oled_putString@string& (0+255),b
  5208  00412E  0E7D               	movlw	high (STR_164+11)
  5209  004130  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5210  004132  5172               	movf	oled_putString@string& (0+255),w,b
  5211  004134  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5212  004136  A4D8               	btfss	status,2,c
  5213  004138  0E00               	movlw	low (__mediumconst shr (0+16))
  5214  00413A  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5215  00413C  0E00               	movlw	0
  5216  00413E  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5217  004140  0E06               	movlw	6
  5218  004142  6F76               	movwf	oled_putString@start_page& (0+255),b
  5219  004144  EC76  F028         	call	_oled_putString	;wreg free
  5220                           
  5221                           ;poweruptest.c: 92: oled_putString("1",0,8);
  5222  004148  0E97               	movlw	low (STR_165+11)
  5223  00414A  0100               	movlb	0	; () banked
  5224  00414C  6F72               	movwf	oled_putString@string& (0+255),b
  5225  00414E  0E7D               	movlw	high (STR_165+11)
  5226  004150  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5227  004152  5172               	movf	oled_putString@string& (0+255),w,b
  5228  004154  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5229  004156  A4D8               	btfss	status,2,c
  5230  004158  0E00               	movlw	low (__mediumconst shr (0+16))
  5231  00415A  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5232  00415C  0E00               	movlw	0
  5233  00415E  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5234  004160  0E08               	movlw	8
  5235  004162  6F76               	movwf	oled_putString@start_page& (0+255),b
  5236  004164  EC76  F028         	call	_oled_putString	;wreg free
  5237                           
  5238                           ;poweruptest.c: 93: oled_putString("Build Date/Time",0,1);
  5239  004168  0EC3               	movlw	low STR_7
  5240  00416A  0100               	movlb	0	; () banked
  5241  00416C  6F72               	movwf	oled_putString@string& (0+255),b
  5242  00416E  0E7C               	movlw	high STR_7
  5243  004170  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5244  004172  5172               	movf	oled_putString@string& (0+255),w,b
  5245  004174  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5246  004176  A4D8               	btfss	status,2,c
  5247  004178  0E00               	movlw	low (__mediumconst shr (0+16))
  5248  00417A  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5249  00417C  0E00               	movlw	0
  5250  00417E  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5251  004180  0E01               	movlw	1
  5252  004182  6F76               	movwf	oled_putString@start_page& (0+255),b
  5253  004184  EC76  F028         	call	_oled_putString	;wreg free
  5254                           
  5255                           ;poweruptest.c: 94: oled_putString("Mar 30 2018",0,2);
  5256  004188  0E70               	movlw	low STR_8
  5257  00418A  0100               	movlb	0	; () banked
  5258  00418C  6F72               	movwf	oled_putString@string& (0+255),b
  5259  00418E  0E7E               	movlw	high STR_8
  5260  004190  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5261  004192  5172               	movf	oled_putString@string& (0+255),w,b
  5262  004194  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5263  004196  A4D8               	btfss	status,2,c
  5264  004198  0E00               	movlw	low (__mediumconst shr (0+16))
  5265  00419A  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5266  00419C  0E00               	movlw	0
  5267  00419E  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5268  0041A0  0E02               	movlw	2
  5269  0041A2  6F76               	movwf	oled_putString@start_page& (0+255),b
  5270  0041A4  EC76  F028         	call	_oled_putString	;wreg free
  5271                           
  5272                           ;poweruptest.c: 95: oled_putString("15:37:29",0,3);
  5273  0041A8  0E46               	movlw	low STR_9
  5274  0041AA  0100               	movlb	0	; () banked
  5275  0041AC  6F72               	movwf	oled_putString@string& (0+255),b
  5276  0041AE  0E7F               	movlw	high STR_9
  5277  0041B0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5278  0041B2  5172               	movf	oled_putString@string& (0+255),w,b
  5279  0041B4  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5280  0041B6  A4D8               	btfss	status,2,c
  5281  0041B8  0E00               	movlw	low (__mediumconst shr (0+16))
  5282  0041BA  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5283  0041BC  0E00               	movlw	0
  5284  0041BE  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5285  0041C0  0E03               	movlw	3
  5286  0041C2  6F76               	movwf	oled_putString@start_page& (0+255),b
  5287  0041C4  EC76  F028         	call	_oled_putString	;wreg free
  5288  0041C8  0012               	return		;funcret
  5289  0041CA                     __end_of_test_oled:
  5290                           	opt stack 0
  5291                           tblptru	equ	0xFF8
  5292                           tblptrh	equ	0xFF7
  5293                           tblptrl	equ	0xFF6
  5294                           tablat	equ	0xFF5
  5295                           intcon	equ	0xFF2
  5296                           postinc0	equ	0xFEE
  5297                           wreg	equ	0xFE8
  5298                           postdec1	equ	0xFE5
  5299                           fsr1l	equ	0xFE1
  5300                           status	equ	0xFD8
  5301                           
  5302 ;; *************** function _test_leds *****************
  5303 ;; Defined at:
  5304 ;;		line 147 in file "../Includes/Board/poweruptest.c"
  5305 ;; Parameters:    Size  Location     Type
  5306 ;;		None
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;		None
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  1    wreg      void 
  5311 ;; Registers used:
  5312 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5318 ;;      Params:         0       0       0       0       0       0       0       0       0
  5319 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5320 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5321 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5322 ;;Total ram usage:        0 bytes
  5323 ;; Hardware stack levels used:    1
  5324 ;; Hardware stack levels required when called:   15
  5325 ;; This function calls:
  5326 ;;		_delayms
  5327 ;;		_oled_putString
  5328 ;; This function is called by:
  5329 ;;		_test_powerup
  5330 ;; This function uses a non-reentrant model
  5331 ;;
  5332                           
  5333                           	psect	text4
  5334  005402                     __ptext4:
  5335                           	opt stack 0
  5336  005402                     _test_leds:
  5337                           	opt stack 14
  5338                           
  5339                           ;poweruptest.c: 149: oled_putString("LED Test:",0,1);
  5340                           
  5341                           ;incstack = 0
  5342  005402  0E06               	movlw	low STR_16
  5343  005404  0100               	movlb	0	; () banked
  5344  005406  6F72               	movwf	oled_putString@string& (0+255),b
  5345  005408  0E7F               	movlw	high STR_16
  5346  00540A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5347  00540C  5172               	movf	oled_putString@string& (0+255),w,b
  5348  00540E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5349  005410  A4D8               	btfss	status,2,c
  5350  005412  0E00               	movlw	low (__mediumconst shr (0+16))
  5351  005414  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5352  005416  0E00               	movlw	0
  5353  005418  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5354  00541A  0E01               	movlw	1
  5355  00541C  6F76               	movwf	oled_putString@start_page& (0+255),b
  5356  00541E  EC76  F028         	call	_oled_putString	;wreg free
  5357                           
  5358                           ;poweruptest.c: 151: LATAbits.LATA6 = 1;
  5359  005422  8C89               	bsf	3977,6,c	;volatile
  5360                           
  5361                           ;poweruptest.c: 152: LATAbits.LATA7 = 1;
  5362  005424  8E89               	bsf	3977,7,c	;volatile
  5363                           
  5364                           ;poweruptest.c: 153: delayms(500);
  5365  005426  0E01               	movlw	1
  5366  005428  0100               	movlb	0	; () banked
  5367  00542A  6F61               	movwf	(delayms@t+1)& (0+255),b
  5368  00542C  0EF4               	movlw	244
  5369  00542E  6F60               	movwf	delayms@t& (0+255),b
  5370  005430  ECF4  F02D         	call	_delayms	;wreg free
  5371                           
  5372                           ;poweruptest.c: 154: LATAbits.LATA6 = 0;
  5373  005434  9C89               	bcf	3977,6,c	;volatile
  5374                           
  5375                           ;poweruptest.c: 155: LATAbits.LATA7 = 0;
  5376  005436  9E89               	bcf	3977,7,c	;volatile
  5377                           
  5378                           ;poweruptest.c: 156: delayms(500);
  5379  005438  0E01               	movlw	1
  5380  00543A  0100               	movlb	0	; () banked
  5381  00543C  6F61               	movwf	(delayms@t+1)& (0+255),b
  5382  00543E  0EF4               	movlw	244
  5383  005440  6F60               	movwf	delayms@t& (0+255),b
  5384  005442  ECF4  F02D         	call	_delayms	;wreg free
  5385                           
  5386                           ;poweruptest.c: 157: LATAbits.LATA6 = 1;
  5387  005446  8C89               	bsf	3977,6,c	;volatile
  5388                           
  5389                           ;poweruptest.c: 158: LATAbits.LATA7 = 1;
  5390  005448  8E89               	bsf	3977,7,c	;volatile
  5391                           
  5392                           ;poweruptest.c: 159: delayms(500);
  5393  00544A  0E01               	movlw	1
  5394  00544C  0100               	movlb	0	; () banked
  5395  00544E  6F61               	movwf	(delayms@t+1)& (0+255),b
  5396  005450  0EF4               	movlw	244
  5397  005452  6F60               	movwf	delayms@t& (0+255),b
  5398  005454  ECF4  F02D         	call	_delayms	;wreg free
  5399                           
  5400                           ;poweruptest.c: 160: LATAbits.LATA6 = 0;
  5401  005458  9C89               	bcf	3977,6,c	;volatile
  5402                           
  5403                           ;poweruptest.c: 161: LATAbits.LATA7 = 0;
  5404  00545A  9E89               	bcf	3977,7,c	;volatile
  5405                           
  5406                           ;poweruptest.c: 162: delayms(500);
  5407  00545C  0E01               	movlw	1
  5408  00545E  0100               	movlb	0	; () banked
  5409  005460  6F61               	movwf	(delayms@t+1)& (0+255),b
  5410  005462  0EF4               	movlw	244
  5411  005464  6F60               	movwf	delayms@t& (0+255),b
  5412  005466  ECF4  F02D         	call	_delayms	;wreg free
  5413  00546A  0012               	return		;funcret
  5414  00546C                     __end_of_test_leds:
  5415                           	opt stack 0
  5416                           tblptru	equ	0xFF8
  5417                           tblptrh	equ	0xFF7
  5418                           tblptrl	equ	0xFF6
  5419                           tablat	equ	0xFF5
  5420                           intcon	equ	0xFF2
  5421                           postinc0	equ	0xFEE
  5422                           wreg	equ	0xFE8
  5423                           postdec1	equ	0xFE5
  5424                           fsr1l	equ	0xFE1
  5425                           status	equ	0xFD8
  5426                           
  5427 ;; *************** function _test_comms *****************
  5428 ;; Defined at:
  5429 ;;		line 134 in file "../Includes/Board/poweruptest.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;		None
  5432 ;; Auto vars:     Size  Location     Type
  5433 ;;		None
  5434 ;; Return value:  Size  Location     Type
  5435 ;;                  1    wreg      void 
  5436 ;; Registers used:
  5437 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5438 ;; Tracked objects:
  5439 ;;		On entry : 0/0
  5440 ;;		On exit  : 0/0
  5441 ;;		Unchanged: 0/0
  5442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5443 ;;      Params:         0       0       0       0       0       0       0       0       0
  5444 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5445 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5446 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5447 ;;Total ram usage:        0 bytes
  5448 ;; Hardware stack levels used:    1
  5449 ;; Hardware stack levels required when called:   15
  5450 ;; This function calls:
  5451 ;;		_delayms
  5452 ;;		_moteApp_toggleLeds
  5453 ;;		_oled_putString
  5454 ;; This function is called by:
  5455 ;;		_test_powerup
  5456 ;; This function uses a non-reentrant model
  5457 ;;
  5458                           
  5459                           	psect	text5
  5460  0051D2                     __ptext5:
  5461                           	opt stack 0
  5462  0051D2                     _test_comms:
  5463                           	opt stack 14
  5464                           
  5465                           ;poweruptest.c: 136: oled_putString("Comm Test:",0,0);
  5466                           
  5467                           ;incstack = 0
  5468  0051D2  0EBF               	movlw	low STR_15
  5469  0051D4  0100               	movlb	0	; () banked
  5470  0051D6  6F72               	movwf	oled_putString@string& (0+255),b
  5471  0051D8  0E7E               	movlw	high STR_15
  5472  0051DA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5473  0051DC  5172               	movf	oled_putString@string& (0+255),w,b
  5474  0051DE  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5475  0051E0  A4D8               	btfss	status,2,c
  5476  0051E2  0E00               	movlw	low (__mediumconst shr (0+16))
  5477  0051E4  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5478  0051E6  0E00               	movlw	0
  5479  0051E8  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5480  0051EA  0E00               	movlw	0
  5481  0051EC  6F76               	movwf	oled_putString@start_page& (0+255),b
  5482  0051EE  EC76  F028         	call	_oled_putString	;wreg free
  5483                           
  5484                           ;poweruptest.c: 137: moteApp_toggleLeds(1);
  5485  0051F2  0E01               	movlw	1
  5486  0051F4  EC3B  F01C         	call	_moteApp_toggleLeds
  5487                           
  5488                           ;poweruptest.c: 138: delayms(500);
  5489  0051F8  0E01               	movlw	1
  5490  0051FA  0100               	movlb	0	; () banked
  5491  0051FC  6F61               	movwf	(delayms@t+1)& (0+255),b
  5492  0051FE  0EF4               	movlw	244
  5493  005200  6F60               	movwf	delayms@t& (0+255),b
  5494  005202  ECF4  F02D         	call	_delayms	;wreg free
  5495                           
  5496                           ;poweruptest.c: 139: moteApp_toggleLeds(0);
  5497  005206  0E00               	movlw	0
  5498  005208  EC3B  F01C         	call	_moteApp_toggleLeds
  5499                           
  5500                           ;poweruptest.c: 140: delayms(500);
  5501  00520C  0E01               	movlw	1
  5502  00520E  0100               	movlb	0	; () banked
  5503  005210  6F61               	movwf	(delayms@t+1)& (0+255),b
  5504  005212  0EF4               	movlw	244
  5505  005214  6F60               	movwf	delayms@t& (0+255),b
  5506  005216  ECF4  F02D         	call	_delayms	;wreg free
  5507                           
  5508                           ;poweruptest.c: 141: moteApp_toggleLeds(1);
  5509  00521A  0E01               	movlw	1
  5510  00521C  EC3B  F01C         	call	_moteApp_toggleLeds
  5511                           
  5512                           ;poweruptest.c: 142: delayms(500);
  5513  005220  0E01               	movlw	1
  5514  005222  0100               	movlb	0	; () banked
  5515  005224  6F61               	movwf	(delayms@t+1)& (0+255),b
  5516  005226  0EF4               	movlw	244
  5517  005228  6F60               	movwf	delayms@t& (0+255),b
  5518  00522A  ECF4  F02D         	call	_delayms	;wreg free
  5519                           
  5520                           ;poweruptest.c: 143: moteApp_toggleLeds(0);
  5521  00522E  0E00               	movlw	0
  5522  005230  EC3B  F01C         	call	_moteApp_toggleLeds
  5523                           
  5524                           ;poweruptest.c: 144: delayms(500);
  5525  005234  0E01               	movlw	1
  5526  005236  0100               	movlb	0	; () banked
  5527  005238  6F61               	movwf	(delayms@t+1)& (0+255),b
  5528  00523A  0EF4               	movlw	244
  5529  00523C  6F60               	movwf	delayms@t& (0+255),b
  5530  00523E  ECF4  F02D         	call	_delayms	;wreg free
  5531  005242  0012               	return		;funcret
  5532  005244                     __end_of_test_comms:
  5533                           	opt stack 0
  5534                           tblptru	equ	0xFF8
  5535                           tblptrh	equ	0xFF7
  5536                           tblptrl	equ	0xFF6
  5537                           tablat	equ	0xFF5
  5538                           intcon	equ	0xFF2
  5539                           postinc0	equ	0xFEE
  5540                           wreg	equ	0xFE8
  5541                           postdec1	equ	0xFE5
  5542                           fsr1l	equ	0xFE1
  5543                           status	equ	0xFD8
  5544                           
  5545 ;; *************** function _moteApp_toggleLeds *****************
  5546 ;; Defined at:
  5547 ;;		line 1264 in file "../Includes/Board/MOTEapp.c"
  5548 ;; Parameters:    Size  Location     Type
  5549 ;;  state           1    wreg     unsigned char 
  5550 ;; Auto vars:     Size  Location     Type
  5551 ;;  state           1    4[BANK0 ] unsigned char 
  5552 ;; Return value:  Size  Location     Type
  5553 ;;                  1    wreg      void 
  5554 ;; Registers used:
  5555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5556 ;; Tracked objects:
  5557 ;;		On entry : 0/0
  5558 ;;		On exit  : 0/0
  5559 ;;		Unchanged: 0/0
  5560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5561 ;;      Params:         0       0       0       0       0       0       0       0       0
  5562 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5563 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5564 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5565 ;;Total ram usage:        2 bytes
  5566 ;; Hardware stack levels used:    1
  5567 ;; Hardware stack levels required when called:   14
  5568 ;; This function calls:
  5569 ;;		_sendCommand
  5570 ;; This function is called by:
  5571 ;;		_test_comms
  5572 ;; This function uses a non-reentrant model
  5573 ;;
  5574                           
  5575                           	psect	text6
  5576  003876                     __ptext6:
  5577                           	opt stack 0
  5578  003876                     _moteApp_toggleLeds:
  5579                           	opt stack 14
  5580                           
  5581                           ;incstack = 0
  5582                           ;moteApp_toggleLeds@state stored from wreg
  5583  003876  0100               	movlb	0	; () banked
  5584  003878  6F64               	movwf	moteApp_toggleLeds@state& (0+255),b
  5585                           
  5586                           ;MOTEapp.c: 1266: _delay((unsigned long)((16)*(48000000/4000.0)));
  5587  00387A  0EFA               	movlw	250
  5588  00387C  0100               	movlb	0	; () banked
  5589  00387E  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5590  003880  0E58               	movlw	88
  5591  003882                     u11217:
  5592  003882  2EE8               	decfsz	wreg,f,c
  5593  003884  D7FE               	bra	u11217
  5594  003886  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5595  003888  D7FC               	bra	u11217
  5596  00388A  F000               	nop	
  5597                           
  5598                           ;MOTEapp.c: 1267: _delay((unsigned long)((16)*(48000000/4000.0)));
  5599  00388C  0EFA               	movlw	250
  5600  00388E  0100               	movlb	0	; () banked
  5601  003890  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5602  003892  0E58               	movlw	88
  5603  003894                     u11227:
  5604  003894  2EE8               	decfsz	wreg,f,c
  5605  003896  D7FE               	bra	u11227
  5606  003898  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5607  00389A  D7FC               	bra	u11227
  5608  00389C  F000               	nop	
  5609                           
  5610                           ;MOTEapp.c: 1268: _delay((unsigned long)((16)*(48000000/4000.0)));
  5611  00389E  0EFA               	movlw	250
  5612  0038A0  0100               	movlb	0	; () banked
  5613  0038A2  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5614  0038A4  0E58               	movlw	88
  5615  0038A6                     u11237:
  5616  0038A6  2EE8               	decfsz	wreg,f,c
  5617  0038A8  D7FE               	bra	u11237
  5618  0038AA  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5619  0038AC  D7FC               	bra	u11237
  5620  0038AE  F000               	nop	
  5621                           
  5622                           ;MOTEapp.c: 1269: if (state)
  5623  0038B0  0100               	movlb	0	; () banked
  5624  0038B2  5164               	movf	moteApp_toggleLeds@state& (0+255),w,b
  5625  0038B4  B4D8               	btfsc	status,2,c
  5626  0038B6  D029               	goto	l679
  5627                           
  5628                           ; BSR set to: 0
  5629                           ;MOTEapp.c: 1270: {
  5630                           ;MOTEapp.c: 1271: sendCommand("sys set pindig GPIO10 1\r\n");
  5631  0038B8  0E22               	movlw	low STR_175
  5632  0038BA  6F61               	movwf	sendCommand@string& (0+255),b
  5633  0038BC  0E7A               	movlw	high STR_175
  5634  0038BE  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5635  0038C0  ECC0  F02D         	call	_sendCommand	;wreg free
  5636                           
  5637                           ;MOTEapp.c: 1272: _delay((unsigned long)((16)*(48000000/4000.0)));
  5638  0038C4  0EFA               	movlw	250
  5639  0038C6  0100               	movlb	0	; () banked
  5640  0038C8  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5641  0038CA  0E58               	movlw	88
  5642  0038CC                     u11247:
  5643  0038CC  2EE8               	decfsz	wreg,f,c
  5644  0038CE  D7FE               	bra	u11247
  5645  0038D0  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5646  0038D2  D7FC               	bra	u11247
  5647  0038D4  F000               	nop	
  5648                           
  5649                           ;MOTEapp.c: 1273: _delay((unsigned long)((16)*(48000000/4000.0)));
  5650  0038D6  0EFA               	movlw	250
  5651  0038D8  0100               	movlb	0	; () banked
  5652  0038DA  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5653  0038DC  0E58               	movlw	88
  5654  0038DE                     u11257:
  5655  0038DE  2EE8               	decfsz	wreg,f,c
  5656  0038E0  D7FE               	bra	u11257
  5657  0038E2  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5658  0038E4  D7FC               	bra	u11257
  5659  0038E6  F000               	nop	
  5660                           
  5661                           ;MOTEapp.c: 1274: _delay((unsigned long)((16)*(48000000/4000.0)));
  5662  0038E8  0EFA               	movlw	250
  5663  0038EA  0100               	movlb	0	; () banked
  5664  0038EC  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5665  0038EE  0E58               	movlw	88
  5666  0038F0                     u11267:
  5667  0038F0  2EE8               	decfsz	wreg,f,c
  5668  0038F2  D7FE               	bra	u11267
  5669  0038F4  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5670  0038F6  D7FC               	bra	u11267
  5671  0038F8  F000               	nop	
  5672                           
  5673                           ;MOTEapp.c: 1275: sendCommand("sys set pindig GPIO11 1\r\n");
  5674  0038FA  0E3C               	movlw	low STR_176
  5675  0038FC  0100               	movlb	0	; () banked
  5676  0038FE  6F61               	movwf	sendCommand@string& (0+255),b
  5677  003900  0E7A               	movlw	high STR_176
  5678  003902  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5679  003904  ECC0  F02D         	call	_sendCommand	;wreg free
  5680                           
  5681                           ;MOTEapp.c: 1276: }
  5682  003908  0012               	return	
  5683  00390A                     l679:
  5684                           
  5685                           ;MOTEapp.c: 1277: else
  5686                           ;MOTEapp.c: 1278: {
  5687                           ;MOTEapp.c: 1279: sendCommand("sys set pindig GPIO10 0\r\n");
  5688  00390A  0EEE               	movlw	low STR_177
  5689  00390C  0100               	movlb	0	; () banked
  5690  00390E  6F61               	movwf	sendCommand@string& (0+255),b
  5691  003910  0E79               	movlw	high STR_177
  5692  003912  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5693  003914  ECC0  F02D         	call	_sendCommand	;wreg free
  5694                           
  5695                           ;MOTEapp.c: 1280: _delay((unsigned long)((16)*(48000000/4000.0)));
  5696  003918  0EFA               	movlw	250
  5697  00391A  0100               	movlb	0	; () banked
  5698  00391C  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5699  00391E  0E58               	movlw	88
  5700  003920                     u11277:
  5701  003920  2EE8               	decfsz	wreg,f,c
  5702  003922  D7FE               	bra	u11277
  5703  003924  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5704  003926  D7FC               	bra	u11277
  5705  003928  F000               	nop	
  5706                           
  5707                           ;MOTEapp.c: 1281: _delay((unsigned long)((16)*(48000000/4000.0)));
  5708  00392A  0EFA               	movlw	250
  5709  00392C  0100               	movlb	0	; () banked
  5710  00392E  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5711  003930  0E58               	movlw	88
  5712  003932                     u11287:
  5713  003932  2EE8               	decfsz	wreg,f,c
  5714  003934  D7FE               	bra	u11287
  5715  003936  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5716  003938  D7FC               	bra	u11287
  5717  00393A  F000               	nop	
  5718                           
  5719                           ;MOTEapp.c: 1282: _delay((unsigned long)((16)*(48000000/4000.0)));
  5720  00393C  0EFA               	movlw	250
  5721  00393E  0100               	movlb	0	; () banked
  5722  003940  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5723  003942  0E58               	movlw	88
  5724  003944                     u11297:
  5725  003944  2EE8               	decfsz	wreg,f,c
  5726  003946  D7FE               	bra	u11297
  5727  003948  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5728  00394A  D7FC               	bra	u11297
  5729  00394C  F000               	nop	
  5730                           
  5731                           ;MOTEapp.c: 1283: sendCommand("sys set pindig GPIO11 0\r\n");
  5732  00394E  0E08               	movlw	low STR_178
  5733  003950  0100               	movlb	0	; () banked
  5734  003952  6F61               	movwf	sendCommand@string& (0+255),b
  5735  003954  0E7A               	movlw	high STR_178
  5736  003956  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5737  003958  ECC0  F02D         	call	_sendCommand	;wreg free
  5738  00395C  0012               	return	
  5739  00395E                     __end_of_moteApp_toggleLeds:
  5740                           	opt stack 0
  5741                           tblptru	equ	0xFF8
  5742                           tblptrh	equ	0xFF7
  5743                           tblptrl	equ	0xFF6
  5744                           tablat	equ	0xFF5
  5745                           intcon	equ	0xFF2
  5746                           postinc0	equ	0xFEE
  5747                           wreg	equ	0xFE8
  5748                           postdec1	equ	0xFE5
  5749                           fsr1l	equ	0xFE1
  5750                           status	equ	0xFD8
  5751                           
  5752 ;; *************** function _delayms *****************
  5753 ;; Defined at:
  5754 ;;		line 54 in file "../Includes/Board/poweruptest.c"
  5755 ;; Parameters:    Size  Location     Type
  5756 ;;  t               2    0[BANK0 ] unsigned int 
  5757 ;; Auto vars:     Size  Location     Type
  5758 ;;  i               2    3[BANK0 ] unsigned int 
  5759 ;; Return value:  Size  Location     Type
  5760 ;;                  1    wreg      void 
  5761 ;; Registers used:
  5762 ;;		wreg, status,2, status,0
  5763 ;; Tracked objects:
  5764 ;;		On entry : 0/0
  5765 ;;		On exit  : 0/0
  5766 ;;		Unchanged: 0/0
  5767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5768 ;;      Params:         0       2       0       0       0       0       0       0       0
  5769 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5770 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5771 ;;      Totals:         0       5       0       0       0       0       0       0       0
  5772 ;;Total ram usage:        5 bytes
  5773 ;; Hardware stack levels used:    1
  5774 ;; Hardware stack levels required when called:   11
  5775 ;; This function calls:
  5776 ;;		Nothing
  5777 ;; This function is called by:
  5778 ;;		_test_comms
  5779 ;;		_test_leds
  5780 ;; This function uses a non-reentrant model
  5781 ;;
  5782                           
  5783                           	psect	text7
  5784  005BE8                     __ptext7:
  5785                           	opt stack 0
  5786  005BE8                     _delayms:
  5787                           	opt stack 17
  5788                           
  5789                           ;poweruptest.c: 56: uint16_t i;
  5790                           ;poweruptest.c: 57: for(i = 0; i < t; i++)
  5791                           
  5792                           ;incstack = 0
  5793  005BE8  0E00               	movlw	0
  5794  005BEA  0100               	movlb	0	; () banked
  5795  005BEC  6F64               	movwf	(delayms@i+1)& (0+255),b
  5796  005BEE  0E00               	movlw	0
  5797  005BF0  6F63               	movwf	delayms@i& (0+255),b
  5798  005BF2  D00C               	goto	l111
  5799  005BF4                     
  5800                           ; BSR set to: 0
  5801                           ;poweruptest.c: 58: {
  5802                           ;poweruptest.c: 59: _delay((unsigned long)((1)*(48000000/4000.0)));
  5803                           
  5804                           ; BSR set to: 0
  5805  005BF4  0E10               	movlw	16
  5806  005BF6  0100               	movlb	0	; () banked
  5807  005BF8  6F62               	movwf	??_delayms& (0+255),b
  5808  005BFA  0E94               	movlw	148
  5809  005BFC                     u11307:
  5810  005BFC  2EE8               	decfsz	wreg,f,c
  5811  005BFE  D7FE               	bra	u11307
  5812  005C00  2F62               	decfsz	??_delayms& (0+255),f,b
  5813  005C02  D7FC               	bra	u11307
  5814  005C04  F000               	nop	
  5815  005C06  0100               	movlb	0	; () banked
  5816  005C08  4B63               	infsnz	delayms@i& (0+255),f,b
  5817  005C0A  2B64               	incf	(delayms@i+1)& (0+255),f,b
  5818  005C0C                     l111:
  5819                           
  5820                           ; BSR set to: 0
  5821  005C0C  5160               	movf	delayms@t& (0+255),w,b
  5822  005C0E  5D63               	subwf	delayms@i& (0+255),w,b
  5823  005C10  5161               	movf	(delayms@t+1)& (0+255),w,b
  5824  005C12  5964               	subwfb	(delayms@i+1)& (0+255),w,b
  5825  005C14  B0D8               	btfsc	status,0,c
  5826  005C16  0012               	return	
  5827  005C18  D7ED               	goto	l112
  5828  005C1A                     __end_of_delayms:
  5829                           	opt stack 0
  5830                           tblptru	equ	0xFF8
  5831                           tblptrh	equ	0xFF7
  5832                           tblptrl	equ	0xFF6
  5833                           tablat	equ	0xFF5
  5834                           intcon	equ	0xFF2
  5835                           postinc0	equ	0xFEE
  5836                           wreg	equ	0xFE8
  5837                           postdec1	equ	0xFE5
  5838                           fsr1l	equ	0xFE1
  5839                           status	equ	0xFD8
  5840                           
  5841 ;; *************** function _moteApp_testSensors *****************
  5842 ;; Defined at:
  5843 ;;		line 1368 in file "../Includes/Board/MOTEapp.c"
  5844 ;; Parameters:    Size  Location     Type
  5845 ;;		None
  5846 ;; Auto vars:     Size  Location     Type
  5847 ;;  dummyValue      2    0        unsigned int 
  5848 ;; Return value:  Size  Location     Type
  5849 ;;                  1    wreg      void 
  5850 ;; Registers used:
  5851 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5852 ;; Tracked objects:
  5853 ;;		On entry : 0/0
  5854 ;;		On exit  : 0/0
  5855 ;;		Unchanged: 0/0
  5856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5857 ;;      Params:         0       0       0       0       0       0       0       0       0
  5858 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5859 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5860 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5861 ;;Total ram usage:        1 bytes
  5862 ;; Hardware stack levels used:    1
  5863 ;; Hardware stack levels required when called:   16
  5864 ;; This function calls:
  5865 ;;		_ADC_TempConversion
  5866 ;;		_moteApp_convertSensorValue
  5867 ;;		_moteApp_getLightValue
  5868 ;;		_moteApp_getTempValue
  5869 ;;		_moteApp_setSensorsInput
  5870 ;;		_oled_clear
  5871 ;;		_oled_putChar
  5872 ;;		_oled_putString
  5873 ;;		_oled_putint8
  5874 ;; This function is called by:
  5875 ;;		_test_powerup
  5876 ;; This function uses a non-reentrant model
  5877 ;;
  5878                           
  5879                           	psect	text8
  5880  0034B0                     __ptext8:
  5881                           	opt stack 0
  5882  0034B0                     _moteApp_testSensors:
  5883                           	opt stack 13
  5884                           
  5885                           ;MOTEapp.c: 1371: moteApp_setSensorsInput();
  5886                           
  5887                           ; BSR set to: 0
  5888                           ;incstack = 0
  5889  0034B0  EC3A  F028         	call	_moteApp_setSensorsInput	;wreg free
  5890                           
  5891                           ;MOTEapp.c: 1373: uint16_t dummyValue;
  5892                           ;MOTEapp.c: 1374: oled_clear();
  5893  0034B4  ECF0  F02F         	call	_oled_clear	;wreg free
  5894                           
  5895                           ;MOTEapp.c: 1375: oled_putString("ADC Test",0,0);
  5896  0034B8  0E58               	movlw	low STR_17
  5897  0034BA  0100               	movlb	0	; () banked
  5898  0034BC  6F72               	movwf	oled_putString@string& (0+255),b
  5899  0034BE  0E7F               	movlw	high STR_17
  5900  0034C0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5901  0034C2  5172               	movf	oled_putString@string& (0+255),w,b
  5902  0034C4  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5903  0034C6  A4D8               	btfss	status,2,c
  5904  0034C8  0E00               	movlw	low (__mediumconst shr (0+16))
  5905  0034CA  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5906  0034CC  0E00               	movlw	0
  5907  0034CE  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5908  0034D0  0E00               	movlw	0
  5909  0034D2  6F76               	movwf	oled_putString@start_page& (0+255),b
  5910  0034D4  EC76  F028         	call	_oled_putString	;wreg free
  5911                           
  5912                           ;MOTEapp.c: 1376: oled_putString("Light =",0,1);
  5913  0034D8  0E71               	movlw	low STR_19
  5914  0034DA  0100               	movlb	0	; () banked
  5915  0034DC  6F72               	movwf	oled_putString@string& (0+255),b
  5916  0034DE  0E7F               	movlw	high STR_19
  5917  0034E0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5918  0034E2  5172               	movf	oled_putString@string& (0+255),w,b
  5919  0034E4  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5920  0034E6  A4D8               	btfss	status,2,c
  5921  0034E8  0E00               	movlw	low (__mediumconst shr (0+16))
  5922  0034EA  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5923  0034EC  0E00               	movlw	0
  5924  0034EE  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5925  0034F0  0E01               	movlw	1
  5926  0034F2  6F76               	movwf	oled_putString@start_page& (0+255),b
  5927  0034F4  EC76  F028         	call	_oled_putString	;wreg free
  5928                           
  5929                           ;MOTEapp.c: 1377: oled_putString("Temp  =",0,2);
  5930  0034F8  0E69               	movlw	low STR_18
  5931  0034FA  0100               	movlb	0	; () banked
  5932  0034FC  6F72               	movwf	oled_putString@string& (0+255),b
  5933  0034FE  0E7F               	movlw	high STR_18
  5934  003500  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5935  003502  5172               	movf	oled_putString@string& (0+255),w,b
  5936  003504  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5937  003506  A4D8               	btfss	status,2,c
  5938  003508  0E00               	movlw	low (__mediumconst shr (0+16))
  5939  00350A  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5940  00350C  0E00               	movlw	0
  5941  00350E  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5942  003510  0E02               	movlw	2
  5943  003512  6F76               	movwf	oled_putString@start_page& (0+255),b
  5944  003514  EC76  F028         	call	_oled_putString	;wreg free
  5945                           
  5946                           ;MOTEapp.c: 1378: oled_putChar('C',14,2);
  5947  003518  0E0E               	movlw	14
  5948  00351A  0100               	movlb	0	; () banked
  5949  00351C  6F62               	movwf	oled_putChar@station_dot& (0+255),b
  5950  00351E  0E02               	movlw	2
  5951  003520  6F63               	movwf	oled_putChar@start_page& (0+255),b
  5952  003522  0E43               	movlw	67
  5953  003524  ECB9  F026         	call	_oled_putChar
  5954                           
  5955                           ;MOTEapp.c: 1379: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  5956  003528  ECB4  F02C         	call	_moteApp_getTempValue	;wreg free
  5957  00352C  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  5958  003530  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  5959  003534  ECBE  F027         	call	_moteApp_convertSensorValue	;wreg free
  5960  003538  C072  F0DA         	movff	?_moteApp_convertSensorValue,_temperature
  5961  00353C  C073  F0DB         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  5962                           
  5963                           ;MOTEapp.c: 1380: temperature = ADC_TempConversion(temperature);
  5964  003540  0100               	movlb	0	; () banked
  5965  003542  51DA               	movf	_temperature& (0+255),w,b
  5966  003544  ECC6  F01B         	call	_ADC_TempConversion
  5967  003548  0100               	movlb	0	; () banked
  5968  00354A  6FAC               	movwf	??_moteApp_testSensors& (0+255),b
  5969  00354C  51AC               	movf	??_moteApp_testSensors& (0+255),w,b
  5970  00354E  6FDA               	movwf	_temperature& (0+255),b
  5971  003550  6BDB               	clrf	(_temperature+1)& (0+255),b
  5972                           
  5973                           ; BSR set to: 0
  5974                           ;MOTEapp.c: 1381: oled_putint8(temperature, 10, 2);
  5975  003552  0E0A               	movlw	10
  5976  003554  6F78               	movwf	oled_putint8@station_dot& (0+255),b
  5977  003556  0E02               	movlw	2
  5978  003558  6F79               	movwf	oled_putint8@start_page& (0+255),b
  5979  00355A  51DA               	movf	_temperature& (0+255),w,b
  5980  00355C  EC1B  F023         	call	_oled_putint8
  5981                           
  5982                           ;MOTEapp.c: 1382: __nop();
  5983  003560  F000               	nop	
  5984                           
  5985                           ;MOTEapp.c: 1383: oled_putString("    ", 10, 1);
  5986  003562  0EC7               	movlw	low (STR_40+12)
  5987  003564  0100               	movlb	0	; () banked
  5988  003566  6F72               	movwf	oled_putString@string& (0+255),b
  5989  003568  0E7A               	movlw	high (STR_40+12)
  5990  00356A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  5991  00356C  5172               	movf	oled_putString@string& (0+255),w,b
  5992  00356E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  5993  003570  A4D8               	btfss	status,2,c
  5994  003572  0E00               	movlw	low (__mediumconst shr (0+16))
  5995  003574  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  5996  003576  0E0A               	movlw	10
  5997  003578  6F75               	movwf	oled_putString@station_dot& (0+255),b
  5998  00357A  0E01               	movlw	1
  5999  00357C  6F76               	movwf	oled_putString@start_page& (0+255),b
  6000  00357E  EC76  F028         	call	_oled_putString	;wreg free
  6001                           
  6002                           ;MOTEapp.c: 1384: oled_putString(moteApp_getLightValue(), 10, 1);
  6003  003582  ECDE  F02B         	call	_moteApp_getLightValue	;wreg free
  6004  003586  0100               	movlb	0	; () banked
  6005  003588  C06E  F072         	movff	?_moteApp_getLightValue,oled_putString@string
  6006  00358C  C06F  F073         	movff	?_moteApp_getLightValue+1,oled_putString@string+1
  6007  003590  5172               	movf	oled_putString@string& (0+255),w,b
  6008  003592  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6009  003594  A4D8               	btfss	status,2,c
  6010  003596  0E20               	movlw	32
  6011  003598  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6012  00359A  0E0A               	movlw	10
  6013  00359C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6014  00359E  0E01               	movlw	1
  6015  0035A0  6F76               	movwf	oled_putString@start_page& (0+255),b
  6016  0035A2  EC76  F028         	call	_oled_putString	;wreg free
  6017  0035A6  0012               	return		;funcret
  6018  0035A8                     __end_of_moteApp_testSensors:
  6019                           	opt stack 0
  6020                           tblptru	equ	0xFF8
  6021                           tblptrh	equ	0xFF7
  6022                           tblptrl	equ	0xFF6
  6023                           tablat	equ	0xFF5
  6024                           intcon	equ	0xFF2
  6025                           postinc0	equ	0xFEE
  6026                           wreg	equ	0xFE8
  6027                           postdec1	equ	0xFE5
  6028                           fsr1l	equ	0xFE1
  6029                           status	equ	0xFD8
  6030                           
  6031 ;; *************** function _moteHandler *****************
  6032 ;; Defined at:
  6033 ;;		line 188 in file "../Includes/Board/MOTEapp.c"
  6034 ;; Parameters:    Size  Location     Type
  6035 ;;		None
  6036 ;; Auto vars:     Size  Location     Type
  6037 ;;  readMessage     1   91[BANK0 ] unsigned char 
  6038 ;;  buttonPress     1   90[BANK0 ] enum E5836
  6039 ;;  s2Button        1   89[BANK0 ] unsigned char 
  6040 ;;  gotoNextStat    1   88[BANK0 ] unsigned char 
  6041 ;;  gotoSleep       1   87[BANK0 ] unsigned char 
  6042 ;; Return value:  Size  Location     Type
  6043 ;;                  1    wreg      enum E6868
  6044 ;; Registers used:
  6045 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6046 ;; Tracked objects:
  6047 ;;		On entry : 0/0
  6048 ;;		On exit  : 0/0
  6049 ;;		Unchanged: 0/0
  6050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6051 ;;      Params:         0       0       0       0       0       0       0       0       0
  6052 ;;      Locals:         0       5       0       0       0       0       0       0       0
  6053 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6054 ;;      Totals:         0       6       0       0       0       0       0       0       0
  6055 ;;Total ram usage:        6 bytes
  6056 ;; Hardware stack levels used:    1
  6057 ;; Hardware stack levels required when called:   19
  6058 ;; This function calls:
  6059 ;;		_ADC_TempConversion
  6060 ;;		_MOTEapp_TimerBasedTask
  6061 ;;		_MOTEapp_getModuleResponse
  6062 ;;		_TMRapp_ClearBitFlags
  6063 ;;		_TMRapp_Handler
  6064 ;;		_USBapp_exitCDC
  6065 ;;		_USBapp_exitCDCState
  6066 ;;		_moteApp_convertSensorValue
  6067 ;;		_moteApp_getLightValue
  6068 ;;		_moteApp_getTempValue
  6069 ;;		_moteJoiningProcess
  6070 ;;		_moteRunningProcess
  6071 ;;		_oled_clear
  6072 ;;		_oled_putString
  6073 ;;		_oled_putint8
  6074 ;;		_service_pushbutton
  6075 ;; This function is called by:
  6076 ;;		_main
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           
  6080                           	psect	text9
  6081  0022AE                     __ptext9:
  6082                           	opt stack 0
  6083  0022AE                     _moteHandler:
  6084                           	opt stack 11
  6085                           
  6086                           ;MOTEapp.c: 190: bool gotoSleep = 0;
  6087                           
  6088                           ;incstack = 0
  6089  0022AE  0E00               	movlw	0
  6090  0022B0  0100               	movlb	0	; () banked
  6091  0022B2  6FB7               	movwf	moteHandler@gotoSleep& (0+255),b
  6092                           
  6093                           ;MOTEapp.c: 191: bool gotoNextState = 0;
  6094  0022B4  0E00               	movlw	0
  6095  0022B6  6FB8               	movwf	moteHandler@gotoNextState& (0+255),b
  6096                           
  6097                           ;MOTEapp.c: 192: bool s2Button = 0;
  6098  0022B8  0E00               	movlw	0
  6099  0022BA  6FB9               	movwf	moteHandler@s2Button& (0+255),b
  6100                           
  6101                           ;MOTEapp.c: 193: bool readMessage = 0;
  6102  0022BC  0E00               	movlw	0
  6103  0022BE  6FBB               	movwf	moteHandler@readMessage& (0+255),b
  6104                           
  6105                           ;MOTEapp.c: 194: buttonStates_t buttonPress = Released;
  6106  0022C0  0E03               	movlw	3
  6107  0022C2  6FBA               	movwf	moteHandler@buttonPress& (0+255),b
  6108                           
  6109                           ; BSR set to: 0
  6110                           ;MOTEapp.c: 197: if (PORTAbits.RA0)
  6111  0022C4  A080               	btfss	3968,0,c	;volatile
  6112  0022C6  D009               	goto	l363
  6113                           
  6114                           ; BSR set to: 0
  6115                           ;MOTEapp.c: 198: {
  6116                           ;MOTEapp.c: 199: if (USBapp_exitCDC() == NO_USB)
  6117  0022C8  EC0C  F031         	call	_USBapp_exitCDC	;wreg free
  6118  0022CC  0900               	iorlw	0
  6119  0022CE  A4D8               	btfss	status,2,c
  6120  0022D0  D007               	goto	l365
  6121                           
  6122                           ;MOTEapp.c: 200: moteState = MOTE_SWAP;
  6123  0022D2  0E04               	movlw	4
  6124  0022D4  0100               	movlb	0	; () banked
  6125  0022D6  6FFF               	movwf	_moteState& (0+255),b
  6126                           
  6127                           ; BSR set to: 0
  6128                           ;MOTEapp.c: 201: } else {
  6129  0022D8  D003               	goto	l365
  6130  0022DA                     l363:
  6131                           
  6132                           ; BSR set to: 0
  6133                           ;MOTEapp.c: 202: USBapp_exitCDCState(NO_USB);
  6134                           
  6135                           ; BSR set to: 0
  6136  0022DA  0E00               	movlw	0
  6137  0022DC  ECE5  F030         	call	_USBapp_exitCDCState
  6138  0022E0                     l365:
  6139                           
  6140                           ;MOTEapp.c: 203: }
  6141                           ;MOTEapp.c: 206: if ( appTimer.mSecTick )
  6142  0022E0  0100               	movlb	0	; () banked
  6143  0022E2  A1F8               	btfss	_appTimer& (0+255),0,b
  6144  0022E4  D008               	goto	l366
  6145                           
  6146                           ; BSR set to: 0
  6147                           ;MOTEapp.c: 207: {
  6148                           ;MOTEapp.c: 209: TMRapp_ClearBitFlags();
  6149  0022E6  ECFD  F030         	call	_TMRapp_ClearBitFlags	;wreg free
  6150                           
  6151                           ;MOTEapp.c: 211: TMRapp_Handler();
  6152  0022EA  EC53  F019         	call	_TMRapp_Handler	;wreg free
  6153                           
  6154                           ;MOTEapp.c: 212: MOTEapp_TimerBasedTask(appTimer);
  6155  0022EE  0100               	movlb	0	; () banked
  6156  0022F0  51F8               	movf	_appTimer& (0+255),w,b
  6157  0022F2  EC95  F02F         	call	_MOTEapp_TimerBasedTask
  6158  0022F6                     l366:
  6159                           
  6160                           ;MOTEapp.c: 213: }
  6161                           ;MOTEapp.c: 216: buttonPress = service_pushbutton();
  6162  0022F6  EC93  F029         	call	_service_pushbutton	;wreg free
  6163  0022FA  0100               	movlb	0	; () banked
  6164  0022FC  6FBA               	movwf	moteHandler@buttonPress& (0+255),b
  6165                           
  6166                           ; BSR set to: 0
  6167                           ;MOTEapp.c: 217: if (buttonPress == ShortPress1)
  6168  0022FE  05BA               	decf	moteHandler@buttonPress& (0+255),w,b
  6169  002300  A4D8               	btfss	status,2,c
  6170  002302  D005               	goto	l367
  6171                           
  6172                           ; BSR set to: 0
  6173                           ;MOTEapp.c: 218: {
  6174                           ;MOTEapp.c: 219: secTicker = 0;
  6175  002304  0E00               	movlw	0
  6176  002306  6FF0               	movwf	_secTicker& (0+255),b
  6177                           
  6178                           ;MOTEapp.c: 220: gotoNextState = 1;
  6179  002308  0E01               	movlw	1
  6180  00230A  6FB8               	movwf	moteHandler@gotoNextState& (0+255),b
  6181                           
  6182                           ;MOTEapp.c: 221: }
  6183  00230C  D008               	goto	l369
  6184  00230E                     l367:
  6185                           
  6186                           ; BSR set to: 0
  6187                           ;MOTEapp.c: 222: else if (buttonPress == ShortPress2)
  6188                           
  6189                           ; BSR set to: 0
  6190  00230E  0E02               	movlw	2
  6191  002310  19BA               	xorwf	moteHandler@buttonPress& (0+255),w,b
  6192  002312  A4D8               	btfss	status,2,c
  6193  002314  D004               	goto	l369
  6194                           
  6195                           ; BSR set to: 0
  6196                           ;MOTEapp.c: 223: {
  6197                           ;MOTEapp.c: 224: secTicker = 0;
  6198  002316  0E00               	movlw	0
  6199  002318  6FF0               	movwf	_secTicker& (0+255),b
  6200                           
  6201                           ;MOTEapp.c: 225: s2Button = 1;
  6202  00231A  0E01               	movlw	1
  6203  00231C  6FB9               	movwf	moteHandler@s2Button& (0+255),b
  6204  00231E                     l369:
  6205                           
  6206                           ; BSR set to: 0
  6207                           ;MOTEapp.c: 226: }
  6208                           ;MOTEapp.c: 229: if ( MOTEapp_getModuleResponse() )
  6209                           
  6210                           ; BSR set to: 0
  6211                           
  6212                           ; BSR set to: 0
  6213  00231E  EC6B  F02A         	call	_MOTEapp_getModuleResponse	;wreg free
  6214  002322  0900               	iorlw	0
  6215  002324  B4D8               	btfsc	status,2,c
  6216  002326  D002               	goto	l370
  6217                           
  6218                           ;MOTEapp.c: 230: readMessage = 1;
  6219  002328  0E01               	movlw	1
  6220  00232A  D001               	goto	L1
  6221  00232C                     l370:
  6222                           
  6223                           ;MOTEapp.c: 231: else
  6224                           ;MOTEapp.c: 232: readMessage = 0;
  6225                           
  6226                           ; BSR set to: 0
  6227  00232C  0E00               	movlw	0
  6228  00232E                     L1:
  6229  00232E  0100               	movlb	0	; () banked
  6230  002330  6FBB               	movwf	moteHandler@readMessage& (0+255),b
  6231                           
  6232                           ; BSR set to: 0
  6233                           ;MOTEapp.c: 235: if (runningState == runningSensorMenu)
  6234                           
  6235                           ; BSR set to: 0
  6236  002332  0E02               	movlw	2
  6237  002334  19F3               	xorwf	_runningState& (0+255),w,b
  6238  002336  A4D8               	btfss	status,2,c
  6239  002338  D04B               	goto	l373
  6240                           
  6241                           ; BSR set to: 0
  6242                           ;MOTEapp.c: 236: {
  6243                           ;MOTEapp.c: 238: if (m10SecTicker >= 100)
  6244  00233A  0101               	movlb	1	; () banked
  6245  00233C  5159               	movf	(_m10SecTicker+1)& (0+255),w,b
  6246  00233E  E104               	bnz	u10370
  6247  002340  0E64               	movlw	100
  6248  002342  5D58               	subwf	_m10SecTicker& (0+255),w,b
  6249  002344  A0D8               	btfss	status,0,c
  6250  002346  D044               	goto	l373
  6251  002348                     u10370:
  6252                           
  6253                           ; BSR set to: 1
  6254                           ;MOTEapp.c: 239: {
  6255                           ;MOTEapp.c: 240: __nop();
  6256  002348  F000               	nop	
  6257                           
  6258                           ;MOTEapp.c: 241: oled_putString("    ", 6, 1);
  6259  00234A  0EC7               	movlw	low (STR_40+12)
  6260  00234C  0100               	movlb	0	; () banked
  6261  00234E  6F72               	movwf	oled_putString@string& (0+255),b
  6262  002350  0E7A               	movlw	high (STR_40+12)
  6263  002352  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6264  002354  5172               	movf	oled_putString@string& (0+255),w,b
  6265  002356  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6266  002358  A4D8               	btfss	status,2,c
  6267  00235A  0E00               	movlw	low (__mediumconst shr (0+16))
  6268  00235C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6269  00235E  0E06               	movlw	6
  6270  002360  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6271  002362  0E01               	movlw	1
  6272  002364  6F76               	movwf	oled_putString@start_page& (0+255),b
  6273  002366  EC76  F028         	call	_oled_putString	;wreg free
  6274                           
  6275                           ;MOTEapp.c: 242: oled_putString(moteApp_getLightValue(), 6, 1);
  6276  00236A  ECDE  F02B         	call	_moteApp_getLightValue	;wreg free
  6277  00236E  0100               	movlb	0	; () banked
  6278  002370  C06E  F072         	movff	?_moteApp_getLightValue,oled_putString@string
  6279  002374  C06F  F073         	movff	?_moteApp_getLightValue+1,oled_putString@string+1
  6280  002378  5172               	movf	oled_putString@string& (0+255),w,b
  6281  00237A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6282  00237C  A4D8               	btfss	status,2,c
  6283  00237E  0E20               	movlw	32
  6284  002380  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6285  002382  0E06               	movlw	6
  6286  002384  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6287  002386  0E01               	movlw	1
  6288  002388  6F76               	movwf	oled_putString@start_page& (0+255),b
  6289  00238A  EC76  F028         	call	_oled_putString	;wreg free
  6290                           
  6291                           ;MOTEapp.c: 243: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  6292  00238E  ECB4  F02C         	call	_moteApp_getTempValue	;wreg free
  6293  002392  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  6294  002396  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  6295  00239A  ECBE  F027         	call	_moteApp_convertSensorValue	;wreg free
  6296  00239E  C072  F0DA         	movff	?_moteApp_convertSensorValue,_temperature
  6297  0023A2  C073  F0DB         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  6298                           
  6299                           ;MOTEapp.c: 244: temperature = ADC_TempConversion(temperature);
  6300  0023A6  0100               	movlb	0	; () banked
  6301  0023A8  51DA               	movf	_temperature& (0+255),w,b
  6302  0023AA  ECC6  F01B         	call	_ADC_TempConversion
  6303  0023AE  0100               	movlb	0	; () banked
  6304  0023B0  6FB6               	movwf	??_moteHandler& (0+255),b
  6305  0023B2  51B6               	movf	??_moteHandler& (0+255),w,b
  6306  0023B4  6FDA               	movwf	_temperature& (0+255),b
  6307  0023B6  6BDB               	clrf	(_temperature+1)& (0+255),b
  6308                           
  6309                           ; BSR set to: 0
  6310                           ;MOTEapp.c: 245: oled_putint8(temperature, 6, 2);
  6311  0023B8  0E06               	movlw	6
  6312  0023BA  6F78               	movwf	oled_putint8@station_dot& (0+255),b
  6313  0023BC  0E02               	movlw	2
  6314  0023BE  6F79               	movwf	oled_putint8@start_page& (0+255),b
  6315  0023C0  51DA               	movf	_temperature& (0+255),w,b
  6316  0023C2  EC1B  F023         	call	_oled_putint8
  6317                           
  6318                           ;MOTEapp.c: 246: m10SecTicker = 0;
  6319  0023C6  0E00               	movlw	0
  6320  0023C8  0101               	movlb	1	; () banked
  6321  0023CA  6F59               	movwf	(_m10SecTicker+1)& (0+255),b
  6322  0023CC  0E00               	movlw	0
  6323  0023CE  6F58               	movwf	_m10SecTicker& (0+255),b
  6324  0023D0                     l373:
  6325                           
  6326                           ;MOTEapp.c: 247: }
  6327                           ;MOTEapp.c: 248: }
  6328                           ;MOTEapp.c: 250: if(secTicker)
  6329                           
  6330                           ; BSR set to: 1
  6331                           
  6332                           ; BSR set to: 1
  6333  0023D0  0100               	movlb	0	; () banked
  6334  0023D2  51F0               	movf	_secTicker& (0+255),w,b
  6335  0023D4  B4D8               	btfsc	status,2,c
  6336  0023D6  D08F               	goto	l376
  6337                           
  6338                           ; BSR set to: 0
  6339                           ;MOTEapp.c: 251: {
  6340                           ;MOTEapp.c: 252: if ((secTicker >= 10) && (menuTimeout))
  6341  0023D8  0E09               	movlw	9
  6342  0023DA  65F0               	cpfsgt	_secTicker& (0+255),b
  6343  0023DC  D08C               	goto	l376
  6344                           
  6345                           ; BSR set to: 0
  6346  0023DE  51FB               	movf	_menuTimeout& (0+255),w,b
  6347  0023E0  B4D8               	btfsc	status,2,c
  6348  0023E2  D089               	goto	l376
  6349                           
  6350                           ; BSR set to: 0
  6351                           ;MOTEapp.c: 253: {
  6352                           ;MOTEapp.c: 254: gotoSleep = 1;
  6353  0023E4  0E01               	movlw	1
  6354  0023E6  6FB7               	movwf	moteHandler@gotoSleep& (0+255),b
  6355                           
  6356                           ;MOTEapp.c: 255: secTicker = 0;
  6357  0023E8  0E00               	movlw	0
  6358  0023EA  6FF0               	movwf	_secTicker& (0+255),b
  6359                           
  6360                           ; BSR set to: 0
  6361                           ;MOTEapp.c: 256: }
  6362                           ;MOTEapp.c: 257: }
  6363                           ;MOTEapp.c: 259: switch(moteState)
  6364                           
  6365                           ; BSR set to: 0
  6366  0023EC  D084               	goto	l376
  6367  0023EE                     
  6368                           ; BSR set to: 0
  6369                           ;MOTEapp.c: 262: while(1);
  6370  0023EE  D7FF               	goto	l377
  6371  0023F0                     
  6372                           ;MOTEapp.c: 265: oled_clear();
  6373  0023F0  ECF0  F02F         	call	_oled_clear	;wreg free
  6374                           
  6375                           ;MOTEapp.c: 266: oled_putString("MOTE Mode",1,0);
  6376  0023F4  0EDE               	movlw	low STR_24
  6377  0023F6  0100               	movlb	0	; () banked
  6378  0023F8  6F72               	movwf	oled_putString@string& (0+255),b
  6379  0023FA  0E7E               	movlw	high STR_24
  6380  0023FC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6381  0023FE  5172               	movf	oled_putString@string& (0+255),w,b
  6382  002400  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6383  002402  A4D8               	btfss	status,2,c
  6384  002404  0E00               	movlw	low (__mediumconst shr (0+16))
  6385  002406  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6386  002408  0E01               	movlw	1
  6387  00240A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6388  00240C  0E00               	movlw	0
  6389  00240E  6F76               	movwf	oled_putString@start_page& (0+255),b
  6390  002410  EC76  F028         	call	_oled_putString	;wreg free
  6391                           
  6392                           ;MOTEapp.c: 267: oled_putString("Starting",2,1);
  6393  002414  0E34               	movlw	low STR_25
  6394  002416  0100               	movlb	0	; () banked
  6395  002418  6F72               	movwf	oled_putString@string& (0+255),b
  6396  00241A  0E7F               	movlw	high STR_25
  6397  00241C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6398  00241E  5172               	movf	oled_putString@string& (0+255),w,b
  6399  002420  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6400  002422  A4D8               	btfss	status,2,c
  6401  002424  0E00               	movlw	low (__mediumconst shr (0+16))
  6402  002426  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6403  002428  0E02               	movlw	2
  6404  00242A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6405  00242C  0E01               	movlw	1
  6406  00242E  6F76               	movwf	oled_putString@start_page& (0+255),b
  6407  002430  EC76  F028         	call	_oled_putString	;wreg free
  6408                           
  6409                           ;MOTEapp.c: 268: oled_putString("ReRun PwrTst<S2>",0,3);
  6410  002434  0EA9               	movlw	low STR_26
  6411  002436  0100               	movlb	0	; () banked
  6412  002438  6F72               	movwf	oled_putString@string& (0+255),b
  6413  00243A  0E7B               	movlw	high STR_26
  6414  00243C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6415  00243E  5172               	movf	oled_putString@string& (0+255),w,b
  6416  002440  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6417  002442  A4D8               	btfss	status,2,c
  6418  002444  0E00               	movlw	low (__mediumconst shr (0+16))
  6419  002446  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6420  002448  0E00               	movlw	0
  6421  00244A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6422  00244C  0E03               	movlw	3
  6423  00244E  6F76               	movwf	oled_putString@start_page& (0+255),b
  6424  002450  EC76  F028         	call	_oled_putString	;wreg free
  6425                           
  6426                           ;MOTEapp.c: 269: activeState = moteStartup;
  6427  002454  0E00               	movlw	0
  6428  002456  0100               	movlb	0	; () banked
  6429  002458  6FF4               	movwf	_activeState& (0+255),b
  6430                           
  6431                           ; BSR set to: 0
  6432                           ;MOTEapp.c: 270: moteState = MOTE_JOINING;
  6433  00245A  0E02               	movlw	2
  6434  00245C  D040               	goto	L2
  6435  00245E                     
  6436                           ; BSR set to: 0
  6437                           ;MOTEapp.c: 273: if ( moteJoiningProcess(readMessage, gotoNextState, s2Button) )
  6438                           
  6439                           ; BSR set to: 0
  6440  00245E  C0B8  F078         	movff	moteHandler@gotoNextState,moteJoiningProcess@changeStates
  6441  002462  C0B9  F079         	movff	moteHandler@s2Button,moteJoiningProcess@selectButton
  6442  002466  51BB               	movf	moteHandler@readMessage& (0+255),w,b
  6443  002468  ECC7  F009         	call	_moteJoiningProcess
  6444  00246C  0900               	iorlw	0
  6445  00246E  B4D8               	btfsc	status,2,c
  6446  002470  D050               	goto	l381
  6447                           
  6448                           ;MOTEapp.c: 274: {
  6449                           ;MOTEapp.c: 275: oled_clear();
  6450  002472  ECF0  F02F         	call	_oled_clear	;wreg free
  6451                           
  6452                           ;MOTEapp.c: 276: oled_putString("Mobile Mote -App",0,0);
  6453  002476  0EFE               	movlw	low STR_27
  6454  002478  0100               	movlb	0	; () banked
  6455  00247A  6F72               	movwf	oled_putString@string& (0+255),b
  6456  00247C  0E7B               	movlw	high STR_27
  6457  00247E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6458  002480  5172               	movf	oled_putString@string& (0+255),w,b
  6459  002482  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6460  002484  A4D8               	btfss	status,2,c
  6461  002486  0E00               	movlw	low (__mediumconst shr (0+16))
  6462  002488  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6463  00248A  0E00               	movlw	0
  6464  00248C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6465  00248E  0E00               	movlw	0
  6466  002490  6F76               	movwf	oled_putString@start_page& (0+255),b
  6467  002492  EC76  F028         	call	_oled_putString	;wreg free
  6468                           
  6469                           ;MOTEapp.c: 277: oled_putString("Navigate  Select", 0,2);
  6470  002496  0E0F               	movlw	low STR_28
  6471  002498  0100               	movlb	0	; () banked
  6472  00249A  6F72               	movwf	oled_putString@string& (0+255),b
  6473  00249C  0E7C               	movlw	high STR_28
  6474  00249E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6475  0024A0  5172               	movf	oled_putString@string& (0+255),w,b
  6476  0024A2  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6477  0024A4  A4D8               	btfss	status,2,c
  6478  0024A6  0E00               	movlw	low (__mediumconst shr (0+16))
  6479  0024A8  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6480  0024AA  0E00               	movlw	0
  6481  0024AC  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6482  0024AE  0E02               	movlw	2
  6483  0024B0  6F76               	movwf	oled_putString@start_page& (0+255),b
  6484  0024B2  EC76  F028         	call	_oled_putString	;wreg free
  6485                           
  6486                           ;MOTEapp.c: 278: oled_putString(" (S2)      (S3) ", 0,3);
  6487  0024B6  0E32               	movlw	low STR_29
  6488  0024B8  0100               	movlb	0	; () banked
  6489  0024BA  6F72               	movwf	oled_putString@string& (0+255),b
  6490  0024BC  0E7B               	movlw	high STR_29
  6491  0024BE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6492  0024C0  5172               	movf	oled_putString@string& (0+255),w,b
  6493  0024C2  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6494  0024C4  A4D8               	btfss	status,2,c
  6495  0024C6  0E00               	movlw	low (__mediumconst shr (0+16))
  6496  0024C8  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6497  0024CA  0E00               	movlw	0
  6498  0024CC  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6499  0024CE  0E03               	movlw	3
  6500  0024D0  6F76               	movwf	oled_putString@start_page& (0+255),b
  6501  0024D2  EC76  F028         	call	_oled_putString	;wreg free
  6502                           
  6503                           ;MOTEapp.c: 279: runningState = runningEnter;
  6504  0024D6  0E00               	movlw	0
  6505  0024D8  0100               	movlb	0	; () banked
  6506  0024DA  6FF3               	movwf	_runningState& (0+255),b
  6507                           
  6508                           ; BSR set to: 0
  6509                           ;MOTEapp.c: 280: moteState = MOTE_RUNNING;
  6510  0024DC  0E03               	movlw	3
  6511  0024DE                     L2:
  6512  0024DE  6FFF               	movwf	_moteState& (0+255),b
  6513                           
  6514                           ; BSR set to: 0
  6515                           ;MOTEapp.c: 281: }
  6516                           ;MOTEapp.c: 282: break;
  6517  0024E0  D018               	goto	l381
  6518  0024E2                     
  6519                           ; BSR set to: 0
  6520                           ;MOTEapp.c: 284: moteRunningProcess(gotoNextState, s2Button, readMessage, gotoSleep);
  6521                           
  6522                           ; BSR set to: 0
  6523  0024E2  C0B9  F0AC         	movff	moteHandler@s2Button,moteRunningProcess@selectButton
  6524  0024E6  C0BB  F0AD         	movff	moteHandler@readMessage,moteRunningProcess@messageReady
  6525  0024EA  C0B7  F0AE         	movff	moteHandler@gotoSleep,moteRunningProcess@sleepEvent
  6526  0024EE  51B8               	movf	moteHandler@gotoNextState& (0+255),w,b
  6527  0024F0  EC81  F000         	call	_moteRunningProcess
  6528                           
  6529                           ;MOTEapp.c: 289: }
  6530                           
  6531                           ;MOTEapp.c: 288: break;
  6532                           
  6533                           ;MOTEapp.c: 286: case MOTE_SWAP:
  6534                           
  6535                           ;MOTEapp.c: 285: break;
  6536  0024F4  D00E               	goto	l381
  6537  0024F6                     l376:
  6538  0024F6  0100               	movlb	0	; () banked
  6539  0024F8  51FF               	movf	_moteState& (0+255),w,b
  6540                           
  6541                           ; Switch size 1, requested type "space"
  6542                           ; Number of cases is 4, Range of values is 1 to 4
  6543                           ; switch strategies available:
  6544                           ; Name         Instructions Cycles
  6545                           ; simple_byte           13     7 (average)
  6546                           ;	Chosen strategy is simple_byte
  6547  0024FA  0A01               	xorlw	1	; case 1
  6548  0024FC  B4D8               	btfsc	status,2,c
  6549  0024FE  D778               	goto	l382
  6550  002500  0A03               	xorlw	3	; case 2
  6551  002502  B4D8               	btfsc	status,2,c
  6552  002504  D7AC               	goto	l383
  6553  002506  0A01               	xorlw	1	; case 3
  6554  002508  B4D8               	btfsc	status,2,c
  6555  00250A  D7EB               	goto	l385
  6556  00250C  0A07               	xorlw	7	; case 4
  6557  00250E  A4D8               	btfss	status,2,c
  6558  002510  D76E               	goto	l377
  6559  002512                     l381:
  6560                           
  6561                           ;MOTEapp.c: 290: return moteState;
  6562                           
  6563                           ; BSR set to: 0
  6564  002512  0100               	movlb	0	; () banked
  6565  002514  51FF               	movf	_moteState& (0+255),w,b
  6566  002516  0012               	return	
  6567  002518                     __end_of_moteHandler:
  6568                           	opt stack 0
  6569                           tblptru	equ	0xFF8
  6570                           tblptrh	equ	0xFF7
  6571                           tblptrl	equ	0xFF6
  6572                           tablat	equ	0xFF5
  6573                           intcon	equ	0xFF2
  6574                           postinc0	equ	0xFEE
  6575                           wreg	equ	0xFE8
  6576                           postdec1	equ	0xFE5
  6577                           fsr1l	equ	0xFE1
  6578                           status	equ	0xFD8
  6579                           
  6580 ;; *************** function _moteRunningProcess *****************
  6581 ;; Defined at:
  6582 ;;		line 489 in file "../Includes/Board/MOTEapp.c"
  6583 ;; Parameters:    Size  Location     Type
  6584 ;;  changeStates    1    wreg     unsigned char 
  6585 ;;  selectButton    1   76[BANK0 ] unsigned char 
  6586 ;;  messageReady    1   77[BANK0 ] unsigned char 
  6587 ;;  sleepEvent      1   78[BANK0 ] unsigned char 
  6588 ;; Auto vars:     Size  Location     Type
  6589 ;;  changeStates    1   85[BANK0 ] unsigned char 
  6590 ;;  counter         1   83[BANK0 ] unsigned char 
  6591 ;;  bufferReadPo    1   84[BANK0 ] unsigned char 
  6592 ;;  sizeOfUpdate    1   82[BANK0 ] unsigned char 
  6593 ;;  sizeOfUpdate    1   81[BANK0 ] unsigned char 
  6594 ;;  readByte        1   80[BANK0 ] unsigned char 
  6595 ;; Return value:  Size  Location     Type
  6596 ;;                  1    wreg      enum E6174
  6597 ;; Registers used:
  6598 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6599 ;; Tracked objects:
  6600 ;;		On entry : 0/0
  6601 ;;		On exit  : 0/0
  6602 ;;		Unchanged: 0/0
  6603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6604 ;;      Params:         0       3       0       0       0       0       0       0       0
  6605 ;;      Locals:         0       6       0       0       0       0       0       0       0
  6606 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6607 ;;      Totals:         0      10       0       0       0       0       0       0       0
  6608 ;;Total ram usage:       10 bytes
  6609 ;; Hardware stack levels used:    1
  6610 ;; Hardware stack levels required when called:   18
  6611 ;; This function calls:
  6612 ;;		_ADC_TempConversion
  6613 ;;		_MOTEapp_SetDataRateSetting
  6614 ;;		_TMR2_ReadTimer
  6615 ;;		_moteApp_GoToSleep
  6616 ;;		_moteApp_add8bToDataBuffer
  6617 ;;		_moteApp_addToDataBuffer
  6618 ;;		_moteApp_clearBuffers
  6619 ;;		_moteApp_convertSensorValue
  6620 ;;		_moteApp_delayms
  6621 ;;		_moteApp_getLightString
  6622 ;;		_moteApp_getLightValue
  6623 ;;		_moteApp_getTempValue
  6624 ;;		_moteApp_lightStringSize
  6625 ;;		_moteApp_setSensorsInput
  6626 ;;		_oled_clear
  6627 ;;		_oled_putString
  6628 ;;		_oled_putUint8
  6629 ;;		_oled_putint8
  6630 ;;		_sendDataCommand
  6631 ;;		_strcmp
  6632 ;;		_strncmp
  6633 ;; This function is called by:
  6634 ;;		_moteHandler
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           
  6638                           	psect	text10
  6639  000102                     __ptext10:
  6640                           	opt stack 0
  6641  000102                     _moteRunningProcess:
  6642                           	opt stack 11
  6643                           
  6644                           ; BSR set to: 0
  6645                           ;incstack = 0
  6646                           ;moteRunningProcess@changeStates stored from wreg
  6647  000102  0100               	movlb	0	; () banked
  6648  000104  6FB5               	movwf	moteRunningProcess@changeStates& (0+255),b
  6649                           
  6650                           ;MOTEapp.c: 491: uint8_t readByte = 0;
  6651  000106  0E00               	movlw	0
  6652  000108  0100               	movlb	0	; () banked
  6653  00010A  6FB0               	movwf	moteRunningProcess@readByte& (0+255),b
  6654                           
  6655                           ; BSR set to: 0
  6656                           ;MOTEapp.c: 493: if ((sleepEvent) && (periodicState))
  6657  00010C  51AE               	movf	moteRunningProcess@sleepEvent& (0+255),w,b
  6658  00010E  B4D8               	btfsc	status,2,c
  6659  000110  EF99  F009         	goto	l466
  6660                           
  6661                           ; BSR set to: 0
  6662  000114  51FA               	movf	_periodicState& (0+255),w,b
  6663  000116  B4D8               	btfsc	status,2,c
  6664  000118  EF99  F009         	goto	l466
  6665                           
  6666                           ; BSR set to: 0
  6667                           ;MOTEapp.c: 494: {
  6668                           ;MOTEapp.c: 495: if (sleepTicker >= periodicTimerValue)
  6669  00011C  51FD               	movf	_periodicTimerValue& (0+255),w,b
  6670  00011E  5DEF               	subwf	_sleepTicker& (0+255),w,b
  6671  000120  A0D8               	btfss	status,0,c
  6672  000122  D0DD               	goto	l459
  6673                           
  6674                           ; BSR set to: 0
  6675                           ;MOTEapp.c: 496: {
  6676                           ;MOTEapp.c: 498: moteApp_clearBuffers();
  6677  000124  ECA5  F025         	call	_moteApp_clearBuffers	;wreg free
  6678                           
  6679                           ;MOTEapp.c: 501: light = 0;
  6680  000128  0E00               	movlw	0
  6681  00012A  0101               	movlb	1	; () banked
  6682  00012C  6F5B               	movwf	(_light+1)& (0+255),b
  6683  00012E  0E00               	movlw	0
  6684  000130  6F5A               	movwf	_light& (0+255),b
  6685                           
  6686                           ; BSR set to: 1
  6687                           ;MOTEapp.c: 502: temperature = 0;
  6688  000132  0E00               	movlw	0
  6689  000134  0100               	movlb	0	; () banked
  6690  000136  6FDB               	movwf	(_temperature+1)& (0+255),b
  6691  000138  0E00               	movlw	0
  6692  00013A  6FDA               	movwf	_temperature& (0+255),b
  6693                           
  6694                           ; BSR set to: 0
  6695                           ;MOTEapp.c: 503: __nop();
  6696  00013C  F000               	nop	
  6697                           
  6698                           ;MOTEapp.c: 505: moteApp_setSensorsInput();
  6699  00013E  EC3A  F028         	call	_moteApp_setSensorsInput	;wreg free
  6700                           
  6701                           ;MOTEapp.c: 506: uint8_t sizeOfUpdate = 0;
  6702  000142  0E00               	movlw	0
  6703  000144  0100               	movlb	0	; () banked
  6704  000146  6FB1               	movwf	moteRunningProcess@sizeOfUpdate& (0+255),b
  6705                           
  6706                           ; BSR set to: 0
  6707                           ;MOTEapp.c: 507: light = moteApp_convertSensorValue(moteApp_getLightValue());
  6708  000148  ECDE  F02B         	call	_moteApp_getLightValue	;wreg free
  6709  00014C  C06E  F072         	movff	?_moteApp_getLightValue,moteApp_convertSensorValue@string
  6710  000150  C06F  F073         	movff	?_moteApp_getLightValue+1,moteApp_convertSensorValue@string+1
  6711  000154  ECBE  F027         	call	_moteApp_convertSensorValue	;wreg free
  6712  000158  C072  F15A         	movff	?_moteApp_convertSensorValue,_light
  6713  00015C  C073  F15B         	movff	?_moteApp_convertSensorValue+1,_light+1
  6714                           
  6715                           ;MOTEapp.c: 508: oled_putString(moteApp_getLightString(), 6, 1);
  6716  000160  ECCE  F030         	call	_moteApp_getLightString	;wreg free
  6717  000164  0100               	movlb	0	; () banked
  6718  000166  C060  F072         	movff	?_moteApp_getLightString,oled_putString@string
  6719  00016A  C061  F073         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  6720  00016E  5172               	movf	oled_putString@string& (0+255),w,b
  6721  000170  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6722  000172  A4D8               	btfss	status,2,c
  6723  000174  0E20               	movlw	32
  6724  000176  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6725  000178  0E06               	movlw	6
  6726  00017A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6727  00017C  0E01               	movlw	1
  6728  00017E  6F76               	movwf	oled_putString@start_page& (0+255),b
  6729  000180  EC76  F028         	call	_oled_putString	;wreg free
  6730                           
  6731                           ;MOTEapp.c: 509: sizeOfUpdate = moteApp_addToDataBuffer(moteApp_getLightString(), 4);
  6732  000184  ECCE  F030         	call	_moteApp_getLightString	;wreg free
  6733  000188  C060  F072         	movff	?_moteApp_getLightString,moteApp_addToDataBuffer@string
  6734  00018C  C061  F073         	movff	?_moteApp_getLightString+1,moteApp_addToDataBuffer@string+1
  6735  000190  0E04               	movlw	4
  6736  000192  0100               	movlb	0	; () banked
  6737  000194  6F74               	movwf	moteApp_addToDataBuffer@bufferLocation& (0+255),b
  6738  000196  ECD1  F02A         	call	_moteApp_addToDataBuffer	;wreg free
  6739  00019A  0100               	movlb	0	; () banked
  6740  00019C  6FB1               	movwf	moteRunningProcess@sizeOfUpdate& (0+255),b
  6741                           
  6742                           ; BSR set to: 0
  6743                           ;MOTEapp.c: 511: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  6744  00019E  ECB4  F02C         	call	_moteApp_getTempValue	;wreg free
  6745  0001A2  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  6746  0001A6  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  6747  0001AA  ECBE  F027         	call	_moteApp_convertSensorValue	;wreg free
  6748  0001AE  C072  F0DA         	movff	?_moteApp_convertSensorValue,_temperature
  6749  0001B2  C073  F0DB         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  6750                           
  6751                           ;MOTEapp.c: 512: temperature = ADC_TempConversion(temperature);
  6752  0001B6  0100               	movlb	0	; () banked
  6753  0001B8  51DA               	movf	_temperature& (0+255),w,b
  6754  0001BA  ECC6  F01B         	call	_ADC_TempConversion
  6755  0001BE  0100               	movlb	0	; () banked
  6756  0001C0  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  6757  0001C2  51AF               	movf	??_moteRunningProcess& (0+255),w,b
  6758  0001C4  6FDA               	movwf	_temperature& (0+255),b
  6759  0001C6  6BDB               	clrf	(_temperature+1)& (0+255),b
  6760                           
  6761                           ; BSR set to: 0
  6762                           ;MOTEapp.c: 513: moteApp_add8bToDataBuffer(temperature, 4 + moteApp_lightStringSize() + 
      +                          1);
  6763  0001C8  EC09  F031         	call	_moteApp_lightStringSize	;wreg free
  6764  0001CC  0F05               	addlw	5
  6765  0001CE  0100               	movlb	0	; () banked
  6766  0001D0  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6767  0001D2  51DA               	movf	_temperature& (0+255),w,b
  6768  0001D4  ECC0  F022         	call	_moteApp_add8bToDataBuffer
  6769                           
  6770                           ;MOTEapp.c: 516: sleepTicker = 0;
  6771  0001D8  0E00               	movlw	0
  6772  0001DA  0100               	movlb	0	; () banked
  6773  0001DC  6FEF               	movwf	_sleepTicker& (0+255),b
  6774                           
  6775                           ; BSR set to: 0
  6776                           ;MOTEapp.c: 517: oled_clear();
  6777  0001DE  ECF0  F02F         	call	_oled_clear	;wreg free
  6778                           
  6779                           ;MOTEapp.c: 518: oled_putString("Send Periodic Tx",0,0);
  6780  0001E2  0E31               	movlw	low STR_71
  6781  0001E4  0100               	movlb	0	; () banked
  6782  0001E6  6F72               	movwf	oled_putString@string& (0+255),b
  6783  0001E8  0E7C               	movlw	high STR_71
  6784  0001EA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6785  0001EC  5172               	movf	oled_putString@string& (0+255),w,b
  6786  0001EE  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6787  0001F0  A4D8               	btfss	status,2,c
  6788  0001F2  0E00               	movlw	low (__mediumconst shr (0+16))
  6789  0001F4  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6790  0001F6  0E00               	movlw	0
  6791  0001F8  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6792  0001FA  0E00               	movlw	0
  6793  0001FC  6F76               	movwf	oled_putString@start_page& (0+255),b
  6794  0001FE  EC76  F028         	call	_oled_putString	;wreg free
  6795                           
  6796                           ;MOTEapp.c: 519: oled_putString("On Port #: ",0,1);
  6797  000202  0E34               	movlw	low STR_72
  6798  000204  0100               	movlb	0	; () banked
  6799  000206  6F72               	movwf	oled_putString@string& (0+255),b
  6800  000208  0E7E               	movlw	high STR_72
  6801  00020A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6802  00020C  5172               	movf	oled_putString@string& (0+255),w,b
  6803  00020E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6804  000210  A4D8               	btfss	status,2,c
  6805  000212  0E00               	movlw	low (__mediumconst shr (0+16))
  6806  000214  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6807  000216  0E00               	movlw	0
  6808  000218  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6809  00021A  0E01               	movlw	1
  6810  00021C  6F76               	movwf	oled_putString@start_page& (0+255),b
  6811  00021E  EC76  F028         	call	_oled_putString	;wreg free
  6812                           
  6813                           ;MOTEapp.c: 520: oled_putString("L:       T: ",0,2);
  6814  000222  0E72               	movlw	low STR_73
  6815  000224  0100               	movlb	0	; () banked
  6816  000226  6F72               	movwf	oled_putString@string& (0+255),b
  6817  000228  0E7D               	movlw	high STR_73
  6818  00022A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  6819  00022C  5172               	movf	oled_putString@string& (0+255),w,b
  6820  00022E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6821  000230  A4D8               	btfss	status,2,c
  6822  000232  0E00               	movlw	low (__mediumconst shr (0+16))
  6823  000234  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6824  000236  0E00               	movlw	0
  6825  000238  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6826  00023A  0E02               	movlw	2
  6827  00023C  6F76               	movwf	oled_putString@start_page& (0+255),b
  6828  00023E  EC76  F028         	call	_oled_putString	;wreg free
  6829                           
  6830                           ;MOTEapp.c: 521: oled_putString(moteApp_getLightString(), 3, 2);
  6831  000242  ECCE  F030         	call	_moteApp_getLightString	;wreg free
  6832  000246  0100               	movlb	0	; () banked
  6833  000248  C060  F072         	movff	?_moteApp_getLightString,oled_putString@string
  6834  00024C  C061  F073         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  6835  000250  5172               	movf	oled_putString@string& (0+255),w,b
  6836  000252  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  6837  000254  A4D8               	btfss	status,2,c
  6838  000256  0E20               	movlw	32
  6839  000258  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  6840  00025A  0E03               	movlw	3
  6841  00025C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  6842  00025E  0E02               	movlw	2
  6843  000260  6F76               	movwf	oled_putString@start_page& (0+255),b
  6844  000262  EC76  F028         	call	_oled_putString	;wreg free
  6845                           
  6846                           ;MOTEapp.c: 522: oled_putint8(temperature,11,2);
  6847  000266  0E0B               	movlw	11
  6848  000268  0100               	movlb	0	; () banked
  6849  00026A  6F78               	movwf	oled_putint8@station_dot& (0+255),b
  6850  00026C  0E02               	movlw	2
  6851  00026E  6F79               	movwf	oled_putint8@start_page& (0+255),b
  6852  000270  51DA               	movf	_temperature& (0+255),w,b
  6853  000272  EC1B  F023         	call	_oled_putint8
  6854                           
  6855                           ;MOTEapp.c: 524: randomPortNum = TMR2_ReadTimer();
  6856  000276  ECE0  F030         	call	_TMR2_ReadTimer	;wreg free
  6857  00027A  0100               	movlb	0	; () banked
  6858  00027C  6FF1               	movwf	_randomPortNum& (0+255),b
  6859                           
  6860                           ; BSR set to: 0
  6861                           ;MOTEapp.c: 526: if (!randomPortNum)
  6862  00027E  51F1               	movf	_randomPortNum& (0+255),w,b
  6863  000280  A4D8               	btfss	status,2,c
  6864  000282  D002               	goto	l460
  6865                           
  6866                           ; BSR set to: 0
  6867                           ;MOTEapp.c: 527: randomPortNum = 5;
  6868  000284  0E05               	movlw	5
  6869  000286  D005               	goto	L3
  6870  000288                     l460:
  6871                           
  6872                           ; BSR set to: 0
  6873                           ;MOTEapp.c: 528: else if (randomPortNum > 223)
  6874                           
  6875                           ; BSR set to: 0
  6876  000288  0EDF               	movlw	223
  6877  00028A  65F1               	cpfsgt	_randomPortNum& (0+255),b
  6878  00028C  D003               	goto	l462
  6879                           
  6880                           ; BSR set to: 0
  6881                           ;MOTEapp.c: 529: randomPortNum = randomPortNum - 50;
  6882  00028E  51F1               	movf	_randomPortNum& (0+255),w,b
  6883  000290  0FCE               	addlw	206
  6884  000292                     L3:
  6885  000292  6FF1               	movwf	_randomPortNum& (0+255),b
  6886  000294                     l462:
  6887                           
  6888                           ; BSR set to: 0
  6889                           ;MOTEapp.c: 531: oled_putUint8(randomPortNum,10,1);
  6890                           
  6891                           ; BSR set to: 0
  6892                           
  6893                           ; BSR set to: 0
  6894  000294  0E0A               	movlw	10
  6895  000296  6F78               	movwf	oled_putUint8@station_dot& (0+255),b
  6896  000298  0E01               	movlw	1
  6897  00029A  6F79               	movwf	oled_putUint8@start_page& (0+255),b
  6898  00029C  51F1               	movf	_randomPortNum& (0+255),w,b
  6899  00029E  EC11  F025         	call	_oled_putUint8
  6900                           
  6901                           ;MOTEapp.c: 533: moteApp_add8bToDataBuffer(randomPortNum, 0);
  6902  0002A2  0E00               	movlw	0
  6903  0002A4  0100               	movlb	0	; () banked
  6904  0002A6  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6905  0002A8  51F1               	movf	_randomPortNum& (0+255),w,b
  6906  0002AA  ECC0  F022         	call	_moteApp_add8bToDataBuffer
  6907                           
  6908                           ;MOTEapp.c: 534: dataBuffer[3] = 0x20;
  6909  0002AE  0E20               	movlw	32
  6910  0002B0  0101               	movlb	1	; () banked
  6911  0002B2  6FC8               	movwf	(_dataBuffer+3)& (0+255),b
  6912                           
  6913                           ; BSR set to: 1
  6914                           ;MOTEapp.c: 535: __nop();
  6915  0002B4  F000               	nop	
  6916                           
  6917                           ;MOTEapp.c: 536: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  6918  0002B6  0E2D               	movlw	low STR_74
  6919  0002B8  0100               	movlb	0	; () banked
  6920  0002BA  6F61               	movwf	sendDataCommand@string& (0+255),b
  6921  0002BC  0E7D               	movlw	high STR_74
  6922  0002BE  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  6923  0002C0  0EC5               	movlw	low _dataBuffer
  6924  0002C2  6F63               	movwf	sendDataCommand@appData& (0+255),b
  6925  0002C4  0E01               	movlw	high _dataBuffer
  6926  0002C6  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  6927  0002C8  0E0C               	movlw	12
  6928  0002CA  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  6929  0002CC  EC47  F021         	call	_sendDataCommand	;wreg free
  6930                           
  6931                           ;MOTEapp.c: 537: secTicker = 10 - (10 / 3);
  6932  0002D0  0E07               	movlw	7
  6933  0002D2  0100               	movlb	0	; () banked
  6934  0002D4  6FF0               	movwf	_secTicker& (0+255),b
  6935                           
  6936                           ; BSR set to: 0
  6937                           ;MOTEapp.c: 538: runningState = runningUplinkTransmit;
  6938  0002D6  0E08               	movlw	8
  6939  0002D8  6FF3               	movwf	_runningState& (0+255),b
  6940                           
  6941                           ;MOTEapp.c: 539: }
  6942  0002DA  EF99  F009         	goto	l466
  6943  0002DE                     l459:
  6944                           
  6945                           ; BSR set to: 0
  6946                           ;MOTEapp.c: 540: else
  6947                           ;MOTEapp.c: 541: {
  6948                           ;MOTEapp.c: 542: if (menuTimeout)
  6949                           
  6950                           ; BSR set to: 0
  6951  0002DE  51FB               	movf	_menuTimeout& (0+255),w,b
  6952  0002E0  B4D8               	btfsc	status,2,c
  6953  0002E2  D007               	goto	l464
  6954                           
  6955                           ; BSR set to: 0
  6956                           ;MOTEapp.c: 543: {
  6957                           ;MOTEapp.c: 544: sleepTicker++;
  6958  0002E4  2BEF               	incf	_sleepTicker& (0+255),f,b
  6959                           
  6960                           ; BSR set to: 0
  6961                           ;MOTEapp.c: 545: runningState = runningSleep;
  6962  0002E6  0E0F               	movlw	15
  6963  0002E8  6FF3               	movwf	_runningState& (0+255),b
  6964                           
  6965                           ; BSR set to: 0
  6966                           ;MOTEapp.c: 546: selectButton = 1;
  6967  0002EA  0E01               	movlw	1
  6968  0002EC  6FAC               	movwf	moteRunningProcess@selectButton& (0+255),b
  6969                           
  6970                           ;MOTEapp.c: 547: } else {
  6971  0002EE  EF99  F009         	goto	l466
  6972  0002F2                     l464:
  6973                           
  6974                           ; BSR set to: 0
  6975                           ;MOTEapp.c: 548: sleepTicker = 0;
  6976                           
  6977                           ; BSR set to: 0
  6978  0002F2  0E00               	movlw	0
  6979  0002F4  6FEF               	movwf	_sleepTicker& (0+255),b
  6980                           
  6981                           ; BSR set to: 0
  6982                           ;MOTEapp.c: 549: }
  6983                           ;MOTEapp.c: 550: }
  6984                           ;MOTEapp.c: 551: }
  6985                           ;MOTEapp.c: 554: switch(runningState)
  6986                           
  6987                           ; BSR set to: 0
  6988                           
  6989                           ; BSR set to: 0
  6990  0002F6  EF99  F009         	goto	l466
  6991  0002FA                     
  6992                           ; BSR set to: 0
  6993                           ;MOTEapp.c: 557: while(1);
  6994  0002FA  D7FF               	goto	l467
  6995  0002FC                     
  6996                           ;MOTEapp.c: 560: if ( (changeStates) || (selectButton) )
  6997  0002FC  0100               	movlb	0	; () banked
  6998  0002FE  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6999  000300  A4D8               	btfss	status,2,c
  7000  000302  D003               	goto	u9450
  7001                           
  7002                           ; BSR set to: 0
  7003  000304  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7004  000306  B4D8               	btfsc	status,2,c
  7005  000308  0012               	return	
  7006  00030A                     u9450:
  7007                           
  7008                           ; BSR set to: 0
  7009                           ;MOTEapp.c: 561: {
  7010                           ;MOTEapp.c: 562: oled_clear();
  7011                           
  7012                           ; BSR set to: 0
  7013  00030A  ECF0  F02F         	call	_oled_clear	;wreg free
  7014                           
  7015                           ;MOTEapp.c: 563: oled_putString("  Issue Uplink  ",0,0);
  7016  00030E  0E21               	movlw	low STR_75
  7017  000310  0100               	movlb	0	; () banked
  7018  000312  6F72               	movwf	oled_putString@string& (0+255),b
  7019  000314  0E7B               	movlw	high STR_75
  7020  000316  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7021  000318  5172               	movf	oled_putString@string& (0+255),w,b
  7022  00031A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7023  00031C  A4D8               	btfss	status,2,c
  7024  00031E  0E00               	movlw	low (__mediumconst shr (0+16))
  7025  000320  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7026  000322  0E00               	movlw	0
  7027  000324  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7028  000326  0E00               	movlw	0
  7029  000328  6F76               	movwf	oled_putString@start_page& (0+255),b
  7030  00032A  EC76  F028         	call	_oled_putString	;wreg free
  7031                           
  7032                           ;MOTEapp.c: 564: oled_putString(" LoRaWAN Packet ",0,1);
  7033  00032E  0E87               	movlw	low STR_76
  7034  000330  0100               	movlb	0	; () banked
  7035  000332  6F72               	movwf	oled_putString@string& (0+255),b
  7036  000334  0E7B               	movlw	high STR_76
  7037  000336  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7038  000338  5172               	movf	oled_putString@string& (0+255),w,b
  7039  00033A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7040  00033C  A4D8               	btfss	status,2,c
  7041  00033E  0E00               	movlw	low (__mediumconst shr (0+16))
  7042  000340  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7043  000342  0E00               	movlw	0
  7044  000344  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7045  000346  0E01               	movlw	1
  7046  000348  6F76               	movwf	oled_putString@start_page& (0+255),b
  7047  00034A  EC76  F028         	call	_oled_putString	;wreg free
  7048                           
  7049                           ;MOTEapp.c: 565: oled_putString("(NAV)    (SEL) ",0,3);
  7050  00034E  0E83               	movlw	low STR_77
  7051  000350  0100               	movlb	0	; () banked
  7052  000352  6F72               	movwf	oled_putString@string& (0+255),b
  7053  000354  0E7C               	movlw	high STR_77
  7054  000356  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7055  000358  5172               	movf	oled_putString@string& (0+255),w,b
  7056  00035A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7057  00035C  A4D8               	btfss	status,2,c
  7058  00035E  0E00               	movlw	low (__mediumconst shr (0+16))
  7059  000360  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7060  000362  0E00               	movlw	0
  7061  000364  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7062  000366  0E03               	movlw	3
  7063  000368  6F76               	movwf	oled_putString@start_page& (0+255),b
  7064  00036A  EC76  F028         	call	_oled_putString	;wreg free
  7065                           
  7066                           ;MOTEapp.c: 566: runningState = runningUplink;
  7067  00036E  0E06               	movlw	6
  7068  000370  0100               	movlb	0	; () banked
  7069  000372  6FF3               	movwf	_runningState& (0+255),b
  7070                           
  7071                           ; BSR set to: 0
  7072                           ;MOTEapp.c: 567: }
  7073                           ;MOTEapp.c: 568: break;
  7074  000374  0012               	return	
  7075  000376                     
  7076                           ; BSR set to: 0
  7077                           ;MOTEapp.c: 570: if (changeStates)
  7078                           
  7079                           ; BSR set to: 0
  7080  000376  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7081  000378  B4D8               	btfsc	status,2,c
  7082  00037A  D036               	goto	l477
  7083                           
  7084                           ; BSR set to: 0
  7085                           ;MOTEapp.c: 571: {
  7086                           ;MOTEapp.c: 572: oled_clear();
  7087  00037C  ECF0  F02F         	call	_oled_clear	;wreg free
  7088                           
  7089                           ;MOTEapp.c: 573: oled_putString(" View Downlink  ",0,0);
  7090  000380  0E10               	movlw	low STR_78
  7091  000382  0100               	movlb	0	; () banked
  7092  000384  6F72               	movwf	oled_putString@string& (0+255),b
  7093  000386  0E7B               	movlw	high STR_78
  7094  000388  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7095  00038A  5172               	movf	oled_putString@string& (0+255),w,b
  7096  00038C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7097  00038E  A4D8               	btfss	status,2,c
  7098  000390  0E00               	movlw	low (__mediumconst shr (0+16))
  7099  000392  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7100  000394  0E00               	movlw	0
  7101  000396  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7102  000398  0E00               	movlw	0
  7103  00039A  6F76               	movwf	oled_putString@start_page& (0+255),b
  7104  00039C  EC76  F028         	call	_oled_putString	;wreg free
  7105                           
  7106                           ;MOTEapp.c: 574: oled_putString("  Last Message  ",0,1);
  7107  0003A0  0EFF               	movlw	low STR_79
  7108  0003A2  0100               	movlb	0	; () banked
  7109  0003A4  6F72               	movwf	oled_putString@string& (0+255),b
  7110  0003A6  0E7A               	movlw	high STR_79
  7111  0003A8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7112  0003AA  5172               	movf	oled_putString@string& (0+255),w,b
  7113  0003AC  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7114  0003AE  A4D8               	btfss	status,2,c
  7115  0003B0  0E00               	movlw	low (__mediumconst shr (0+16))
  7116  0003B2  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7117  0003B4  0E00               	movlw	0
  7118  0003B6  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7119  0003B8  0E01               	movlw	1
  7120  0003BA  6F76               	movwf	oled_putString@start_page& (0+255),b
  7121  0003BC  EC76  F028         	call	_oled_putString	;wreg free
  7122                           
  7123                           ;MOTEapp.c: 575: oled_putString("(NAV)    (SEL) ",0,3);
  7124  0003C0  0E83               	movlw	low STR_77
  7125  0003C2  0100               	movlb	0	; () banked
  7126  0003C4  6F72               	movwf	oled_putString@string& (0+255),b
  7127  0003C6  0E7C               	movlw	high STR_77
  7128  0003C8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7129  0003CA  5172               	movf	oled_putString@string& (0+255),w,b
  7130  0003CC  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7131  0003CE  A4D8               	btfss	status,2,c
  7132  0003D0  0E00               	movlw	low (__mediumconst shr (0+16))
  7133  0003D2  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7134  0003D4  0E00               	movlw	0
  7135  0003D6  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7136  0003D8  0E03               	movlw	3
  7137  0003DA  6F76               	movwf	oled_putString@start_page& (0+255),b
  7138  0003DC  EC76  F028         	call	_oled_putString	;wreg free
  7139                           
  7140                           ;MOTEapp.c: 576: runningState = runningDownlink;
  7141  0003E0  0E0A               	movlw	10
  7142  0003E2  0100               	movlb	0	; () banked
  7143  0003E4  6FF3               	movwf	_runningState& (0+255),b
  7144                           
  7145                           ;MOTEapp.c: 577: }
  7146  0003E6  0012               	return	
  7147  0003E8                     l477:
  7148                           
  7149                           ; BSR set to: 0
  7150                           ;MOTEapp.c: 578: else if (selectButton)
  7151                           
  7152                           ; BSR set to: 0
  7153  0003E8  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7154  0003EA  B4D8               	btfsc	status,2,c
  7155  0003EC  0012               	return	
  7156                           
  7157                           ; BSR set to: 0
  7158                           ;MOTEapp.c: 579: {
  7159                           ;MOTEapp.c: 580: sleepTicker = 0;
  7160  0003EE  0E00               	movlw	0
  7161  0003F0  6FEF               	movwf	_sleepTicker& (0+255),b
  7162                           
  7163                           ; BSR set to: 0
  7164                           ;MOTEapp.c: 582: oled_clear();
  7165  0003F2  ECF0  F02F         	call	_oled_clear	;wreg free
  7166                           
  7167                           ;MOTEapp.c: 583: oled_putString("Uplink Pckt Type",0,0);
  7168  0003F6  0EDC               	movlw	low STR_81
  7169  0003F8  0100               	movlb	0	; () banked
  7170  0003FA  6F72               	movwf	oled_putString@string& (0+255),b
  7171  0003FC  0E7B               	movlw	high STR_81
  7172  0003FE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7173  000400  5172               	movf	oled_putString@string& (0+255),w,b
  7174  000402  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7175  000404  A4D8               	btfss	status,2,c
  7176  000406  0E00               	movlw	low (__mediumconst shr (0+16))
  7177  000408  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7178  00040A  0E00               	movlw	0
  7179  00040C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7180  00040E  0E00               	movlw	0
  7181  000410  6F76               	movwf	oled_putString@start_page& (0+255),b
  7182  000412  EC76  F028         	call	_oled_putString	;wreg free
  7183                           
  7184                           ;MOTEapp.c: 584: oled_putString("Throu Port# ",0,1);
  7185  000416  0E65               	movlw	low STR_82
  7186  000418  0100               	movlb	0	; () banked
  7187  00041A  6F72               	movwf	oled_putString@string& (0+255),b
  7188  00041C  0E7D               	movlw	high STR_82
  7189  00041E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7190  000420  5172               	movf	oled_putString@string& (0+255),w,b
  7191  000422  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7192  000424  A4D8               	btfss	status,2,c
  7193  000426  0E00               	movlw	low (__mediumconst shr (0+16))
  7194  000428  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7195  00042A  0E00               	movlw	0
  7196  00042C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7197  00042E  0E01               	movlw	1
  7198  000430  6F76               	movwf	oled_putString@start_page& (0+255),b
  7199  000432  EC76  F028         	call	_oled_putString	;wreg free
  7200                           
  7201                           ;MOTEapp.c: 586: oled_putString("(UNCNF)    (CNF) ",0,3);
  7202  000436  0EA9               	movlw	low STR_83
  7203  000438  0100               	movlb	0	; () banked
  7204  00043A  6F72               	movwf	oled_putString@string& (0+255),b
  7205  00043C  0E7A               	movlw	high STR_83
  7206  00043E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7207  000440  5172               	movf	oled_putString@string& (0+255),w,b
  7208  000442  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7209  000444  A4D8               	btfss	status,2,c
  7210  000446  0E00               	movlw	low (__mediumconst shr (0+16))
  7211  000448  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7212  00044A  0E00               	movlw	0
  7213  00044C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7214  00044E  0E03               	movlw	3
  7215  000450  6F76               	movwf	oled_putString@start_page& (0+255),b
  7216  000452  EC76  F028         	call	_oled_putString	;wreg free
  7217                           
  7218                           ;MOTEapp.c: 588: moteApp_clearBuffers();
  7219  000456  ECA5  F025         	call	_moteApp_clearBuffers	;wreg free
  7220                           
  7221                           ;MOTEapp.c: 589: randomPortNum = TMR2_ReadTimer();
  7222  00045A  ECE0  F030         	call	_TMR2_ReadTimer	;wreg free
  7223  00045E  0100               	movlb	0	; () banked
  7224  000460  6FF1               	movwf	_randomPortNum& (0+255),b
  7225                           
  7226                           ; BSR set to: 0
  7227                           ;MOTEapp.c: 591: if (!randomPortNum)
  7228  000462  51F1               	movf	_randomPortNum& (0+255),w,b
  7229  000464  A4D8               	btfss	status,2,c
  7230  000466  D002               	goto	l480
  7231                           
  7232                           ; BSR set to: 0
  7233                           ;MOTEapp.c: 592: randomPortNum = 5;
  7234  000468  0E05               	movlw	5
  7235  00046A  D005               	goto	L4
  7236  00046C                     l480:
  7237                           
  7238                           ; BSR set to: 0
  7239                           ;MOTEapp.c: 593: else if (randomPortNum > 223)
  7240                           
  7241                           ; BSR set to: 0
  7242  00046C  0EDF               	movlw	223
  7243  00046E  65F1               	cpfsgt	_randomPortNum& (0+255),b
  7244  000470  D003               	goto	l482
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;MOTEapp.c: 594: randomPortNum = randomPortNum - 50;
  7248  000472  51F1               	movf	_randomPortNum& (0+255),w,b
  7249  000474  0FCE               	addlw	206
  7250  000476                     L4:
  7251  000476  6FF1               	movwf	_randomPortNum& (0+255),b
  7252  000478                     l482:
  7253                           
  7254                           ; BSR set to: 0
  7255                           ;MOTEapp.c: 595: oled_putUint8(randomPortNum,12,1);
  7256                           
  7257                           ; BSR set to: 0
  7258                           
  7259                           ; BSR set to: 0
  7260  000478  0E0C               	movlw	12
  7261  00047A  6F78               	movwf	oled_putUint8@station_dot& (0+255),b
  7262  00047C  0E01               	movlw	1
  7263  00047E  6F79               	movwf	oled_putUint8@start_page& (0+255),b
  7264  000480  51F1               	movf	_randomPortNum& (0+255),w,b
  7265  000482  EC11  F025         	call	_oled_putUint8
  7266                           
  7267                           ;MOTEapp.c: 596: moteApp_add8bToDataBuffer(randomPortNum, 0);
  7268  000486  0E00               	movlw	0
  7269  000488  0100               	movlb	0	; () banked
  7270  00048A  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7271  00048C  51F1               	movf	_randomPortNum& (0+255),w,b
  7272  00048E  ECC0  F022         	call	_moteApp_add8bToDataBuffer
  7273                           
  7274                           ;MOTEapp.c: 597: dataBuffer[3] = 0x20;
  7275  000492  0E20               	movlw	32
  7276  000494  0101               	movlb	1	; () banked
  7277  000496  6FC8               	movwf	(_dataBuffer+3)& (0+255),b
  7278                           
  7279                           ; BSR set to: 1
  7280                           ;MOTEapp.c: 599: light = 0;
  7281  000498  0E00               	movlw	0
  7282  00049A  6F5B               	movwf	(_light+1)& (0+255),b
  7283  00049C  0E00               	movlw	0
  7284  00049E  6F5A               	movwf	_light& (0+255),b
  7285                           
  7286                           ; BSR set to: 1
  7287                           ;MOTEapp.c: 600: temperature = 0;
  7288  0004A0  0E00               	movlw	0
  7289  0004A2  0100               	movlb	0	; () banked
  7290  0004A4  6FDB               	movwf	(_temperature+1)& (0+255),b
  7291  0004A6  0E00               	movlw	0
  7292  0004A8  6FDA               	movwf	_temperature& (0+255),b
  7293                           
  7294                           ; BSR set to: 0
  7295                           ;MOTEapp.c: 601: __nop();
  7296  0004AA  F000               	nop	
  7297                           
  7298                           ;MOTEapp.c: 602: moteApp_setSensorsInput();
  7299  0004AC  EC3A  F028         	call	_moteApp_setSensorsInput	;wreg free
  7300                           
  7301                           ;MOTEapp.c: 603: moteApp_delayms(500);
  7302  0004B0  0E01               	movlw	1
  7303  0004B2  0100               	movlb	0	; () banked
  7304  0004B4  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  7305  0004B6  0EF4               	movlw	244
  7306  0004B8  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7307  0004BA  EC0D  F02E         	call	_moteApp_delayms	;wreg free
  7308                           
  7309                           ;MOTEapp.c: 604: uint8_t sizeOfUpdate = 0;
  7310  0004BE  0E00               	movlw	0
  7311  0004C0  0100               	movlb	0	; () banked
  7312  0004C2  6FB2               	movwf	moteRunningProcess@sizeOfUpdate_1497& (0+255),b
  7313                           
  7314                           ; BSR set to: 0
  7315                           ;MOTEapp.c: 605: light = moteApp_convertSensorValue(moteApp_getLightValue());
  7316  0004C4  ECDE  F02B         	call	_moteApp_getLightValue	;wreg free
  7317  0004C8  C06E  F072         	movff	?_moteApp_getLightValue,moteApp_convertSensorValue@string
  7318  0004CC  C06F  F073         	movff	?_moteApp_getLightValue+1,moteApp_convertSensorValue@string+1
  7319  0004D0  ECBE  F027         	call	_moteApp_convertSensorValue	;wreg free
  7320  0004D4  C072  F15A         	movff	?_moteApp_convertSensorValue,_light
  7321  0004D8  C073  F15B         	movff	?_moteApp_convertSensorValue+1,_light+1
  7322                           
  7323                           ;MOTEapp.c: 606: sizeOfUpdate = moteApp_addToDataBuffer(moteApp_getLightValue(), 4);
  7324  0004DC  ECDE  F02B         	call	_moteApp_getLightValue	;wreg free
  7325  0004E0  C06E  F072         	movff	?_moteApp_getLightValue,moteApp_addToDataBuffer@string
  7326  0004E4  C06F  F073         	movff	?_moteApp_getLightValue+1,moteApp_addToDataBuffer@string+1
  7327  0004E8  0E04               	movlw	4
  7328  0004EA  0100               	movlb	0	; () banked
  7329  0004EC  6F74               	movwf	moteApp_addToDataBuffer@bufferLocation& (0+255),b
  7330  0004EE  ECD1  F02A         	call	_moteApp_addToDataBuffer	;wreg free
  7331  0004F2  0100               	movlb	0	; () banked
  7332  0004F4  6FB2               	movwf	moteRunningProcess@sizeOfUpdate_1497& (0+255),b
  7333                           
  7334                           ; BSR set to: 0
  7335                           ;MOTEapp.c: 607: __nop();
  7336  0004F6  F000               	nop	
  7337                           
  7338                           ;MOTEapp.c: 608: __nop();
  7339  0004F8  F000               	nop	
  7340                           
  7341                           ;MOTEapp.c: 609: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  7342  0004FA  ECB4  F02C         	call	_moteApp_getTempValue	;wreg free
  7343  0004FE  C063  F072         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  7344  000502  C064  F073         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  7345  000506  ECBE  F027         	call	_moteApp_convertSensorValue	;wreg free
  7346  00050A  C072  F0DA         	movff	?_moteApp_convertSensorValue,_temperature
  7347  00050E  C073  F0DB         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  7348                           
  7349                           ;MOTEapp.c: 610: temperature = ADC_TempConversion(temperature);
  7350  000512  0100               	movlb	0	; () banked
  7351  000514  51DA               	movf	_temperature& (0+255),w,b
  7352  000516  ECC6  F01B         	call	_ADC_TempConversion
  7353  00051A  0100               	movlb	0	; () banked
  7354  00051C  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  7355  00051E  51AF               	movf	??_moteRunningProcess& (0+255),w,b
  7356  000520  6FDA               	movwf	_temperature& (0+255),b
  7357  000522  6BDB               	clrf	(_temperature+1)& (0+255),b
  7358                           
  7359                           ; BSR set to: 0
  7360                           ;MOTEapp.c: 611: moteApp_add8bToDataBuffer(temperature, 4 + moteApp_lightStringSize() + 
      +                          1);
  7361  000524  EC09  F031         	call	_moteApp_lightStringSize	;wreg free
  7362  000528  0F05               	addlw	5
  7363  00052A  0100               	movlb	0	; () banked
  7364  00052C  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7365  00052E  51DA               	movf	_temperature& (0+255),w,b
  7366  000530  ECC0  F022         	call	_moteApp_add8bToDataBuffer
  7367                           
  7368                           ;MOTEapp.c: 612: __nop();
  7369  000534  F000               	nop	
  7370                           
  7371                           ;MOTEapp.c: 614: runningState = runningUplinkSelect;
  7372  000536  0E07               	movlw	7
  7373  000538  0100               	movlb	0	; () banked
  7374  00053A  6FF3               	movwf	_runningState& (0+255),b
  7375                           
  7376                           ; BSR set to: 0
  7377                           ;MOTEapp.c: 615: }
  7378                           ;MOTEapp.c: 616: break;
  7379                           
  7380                           ; BSR set to: 0
  7381  00053C  0012               	return	
  7382  00053E                     
  7383                           ; BSR set to: 0
  7384                           ;MOTEapp.c: 618: if (changeStates)
  7385                           
  7386                           ; BSR set to: 0
  7387  00053E  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7388  000540  B4D8               	btfsc	status,2,c
  7389  000542  D00C               	goto	l484
  7390                           
  7391                           ; BSR set to: 0
  7392                           ;MOTEapp.c: 619: {
  7393                           ;MOTEapp.c: 620: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  7394  000544  0E2D               	movlw	low STR_74
  7395  000546  6F61               	movwf	sendDataCommand@string& (0+255),b
  7396  000548  0E7D               	movlw	high STR_74
  7397  00054A  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  7398  00054C  0EC5               	movlw	low _dataBuffer
  7399  00054E  6F63               	movwf	sendDataCommand@appData& (0+255),b
  7400  000550  0E01               	movlw	high _dataBuffer
  7401  000552  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  7402  000554  0E0C               	movlw	12
  7403  000556  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  7404  000558  EC47  F021         	call	_sendDataCommand	;wreg free
  7405  00055C                     l484:
  7406                           
  7407                           ;MOTEapp.c: 622: }
  7408                           ;MOTEapp.c: 623: if (selectButton)
  7409  00055C  0100               	movlb	0	; () banked
  7410  00055E  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7411  000560  B4D8               	btfsc	status,2,c
  7412  000562  D00C               	goto	l485
  7413                           
  7414                           ; BSR set to: 0
  7415                           ;MOTEapp.c: 624: {
  7416                           ;MOTEapp.c: 625: sendDataCommand("mac tx cnf ", dataBuffer, 12);
  7417  000564  0E64               	movlw	low STR_85
  7418  000566  6F61               	movwf	sendDataCommand@string& (0+255),b
  7419  000568  0E7E               	movlw	high STR_85
  7420  00056A  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  7421  00056C  0EC5               	movlw	low _dataBuffer
  7422  00056E  6F63               	movwf	sendDataCommand@appData& (0+255),b
  7423  000570  0E01               	movlw	high _dataBuffer
  7424  000572  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  7425  000574  0E0C               	movlw	12
  7426  000576  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  7427  000578  EC47  F021         	call	_sendDataCommand	;wreg free
  7428  00057C                     l485:
  7429                           
  7430                           ;MOTEapp.c: 626: }
  7431                           ;MOTEapp.c: 628: if ( (changeStates) || (selectButton) )
  7432  00057C  0100               	movlb	0	; () banked
  7433  00057E  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7434  000580  A4D8               	btfss	status,2,c
  7435  000582  D003               	goto	u9530
  7436                           
  7437                           ; BSR set to: 0
  7438  000584  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7439  000586  B4D8               	btfsc	status,2,c
  7440  000588  0012               	return	
  7441  00058A                     u9530:
  7442                           
  7443                           ; BSR set to: 0
  7444                           ;MOTEapp.c: 629: {
  7445                           ;MOTEapp.c: 630: oled_clear();
  7446                           
  7447                           ; BSR set to: 0
  7448  00058A  ECF0  F02F         	call	_oled_clear	;wreg free
  7449                           
  7450                           ;MOTEapp.c: 631: oled_putString("Sent Data: ",0,0);
  7451  00058E  0E4C               	movlw	low STR_86
  7452  000590  0100               	movlb	0	; () banked
  7453  000592  6F72               	movwf	oled_putString@string& (0+255),b
  7454  000594  0E7E               	movlw	high STR_86
  7455  000596  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7456  000598  5172               	movf	oled_putString@string& (0+255),w,b
  7457  00059A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7458  00059C  A4D8               	btfss	status,2,c
  7459  00059E  0E00               	movlw	low (__mediumconst shr (0+16))
  7460  0005A0  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7461  0005A2  0E00               	movlw	0
  7462  0005A4  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7463  0005A6  0E00               	movlw	0
  7464  0005A8  6F76               	movwf	oled_putString@start_page& (0+255),b
  7465  0005AA  EC76  F028         	call	_oled_putString	;wreg free
  7466                           
  7467                           ;MOTEapp.c: 632: oled_putString("Tx Port #: ",0,1);
  7468  0005AE  0E40               	movlw	low STR_87
  7469  0005B0  0100               	movlb	0	; () banked
  7470  0005B2  6F72               	movwf	oled_putString@string& (0+255),b
  7471  0005B4  0E7E               	movlw	high STR_87
  7472  0005B6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7473  0005B8  5172               	movf	oled_putString@string& (0+255),w,b
  7474  0005BA  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7475  0005BC  A4D8               	btfss	status,2,c
  7476  0005BE  0E00               	movlw	low (__mediumconst shr (0+16))
  7477  0005C0  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7478  0005C2  0E00               	movlw	0
  7479  0005C4  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7480  0005C6  0E01               	movlw	1
  7481  0005C8  6F76               	movwf	oled_putString@start_page& (0+255),b
  7482  0005CA  EC76  F028         	call	_oled_putString	;wreg free
  7483                           
  7484                           ;MOTEapp.c: 633: oled_putUint8(randomPortNum,12,1);
  7485  0005CE  0E0C               	movlw	12
  7486  0005D0  0100               	movlb	0	; () banked
  7487  0005D2  6F78               	movwf	oled_putUint8@station_dot& (0+255),b
  7488  0005D4  0E01               	movlw	1
  7489  0005D6  6F79               	movwf	oled_putUint8@start_page& (0+255),b
  7490  0005D8  51F1               	movf	_randomPortNum& (0+255),w,b
  7491  0005DA  EC11  F025         	call	_oled_putUint8
  7492                           
  7493                           ;MOTEapp.c: 634: oled_putString("L:       T: ",0,2);
  7494  0005DE  0E72               	movlw	low STR_73
  7495  0005E0  0100               	movlb	0	; () banked
  7496  0005E2  6F72               	movwf	oled_putString@string& (0+255),b
  7497  0005E4  0E7D               	movlw	high STR_73
  7498  0005E6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7499  0005E8  5172               	movf	oled_putString@string& (0+255),w,b
  7500  0005EA  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7501  0005EC  A4D8               	btfss	status,2,c
  7502  0005EE  0E00               	movlw	low (__mediumconst shr (0+16))
  7503  0005F0  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7504  0005F2  0E00               	movlw	0
  7505  0005F4  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7506  0005F6  0E02               	movlw	2
  7507  0005F8  6F76               	movwf	oled_putString@start_page& (0+255),b
  7508  0005FA  EC76  F028         	call	_oled_putString	;wreg free
  7509                           
  7510                           ;MOTEapp.c: 635: oled_putString(moteApp_getLightString(), 3, 2);
  7511  0005FE  ECCE  F030         	call	_moteApp_getLightString	;wreg free
  7512  000602  0100               	movlb	0	; () banked
  7513  000604  C060  F072         	movff	?_moteApp_getLightString,oled_putString@string
  7514  000608  C061  F073         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  7515  00060C  5172               	movf	oled_putString@string& (0+255),w,b
  7516  00060E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7517  000610  A4D8               	btfss	status,2,c
  7518  000612  0E20               	movlw	32
  7519  000614  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7520  000616  0E03               	movlw	3
  7521  000618  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7522  00061A  0E02               	movlw	2
  7523  00061C  6F76               	movwf	oled_putString@start_page& (0+255),b
  7524  00061E  EC76  F028         	call	_oled_putString	;wreg free
  7525                           
  7526                           ;MOTEapp.c: 636: oled_putint8(temperature,11,2);
  7527  000622  0E0B               	movlw	11
  7528  000624  0100               	movlb	0	; () banked
  7529  000626  6F78               	movwf	oled_putint8@station_dot& (0+255),b
  7530  000628  0E02               	movlw	2
  7531  00062A  6F79               	movwf	oled_putint8@start_page& (0+255),b
  7532  00062C  51DA               	movf	_temperature& (0+255),w,b
  7533  00062E  EC1B  F023         	call	_oled_putint8
  7534                           
  7535                           ;MOTEapp.c: 637: LATAbits.LATA6 = 0;
  7536  000632  9C89               	bcf	3977,6,c	;volatile
  7537                           
  7538                           ;MOTEapp.c: 638: runningState = runningUplinkTransmit;
  7539  000634  0E08               	movlw	8
  7540  000636  0100               	movlb	0	; () banked
  7541  000638  6FF3               	movwf	_runningState& (0+255),b
  7542                           
  7543                           ; BSR set to: 0
  7544                           ;MOTEapp.c: 639: }
  7545                           ;MOTEapp.c: 640: break;
  7546  00063A  0012               	return	
  7547  00063C                     
  7548                           ; BSR set to: 0
  7549                           ;MOTEapp.c: 642: if ( messageReady )
  7550                           
  7551                           ; BSR set to: 0
  7552  00063C  51AD               	movf	moteRunningProcess@messageReady& (0+255),w,b
  7553  00063E  B4D8               	btfsc	status,2,c
  7554  000640  D11C               	goto	l490
  7555                           
  7556                           ; BSR set to: 0
  7557                           ;MOTEapp.c: 643: {
  7558                           ;MOTEapp.c: 644: if(strcmp(moduleResonseBuffer, "ok") == 0)
  7559  000642  0E65               	movlw	low _moduleResonseBuffer
  7560  000644  6F60               	movwf	strcmp@s1& (0+255),b
  7561  000646  0E01               	movlw	high _moduleResonseBuffer
  7562  000648  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7563  00064A  0EF7               	movlw	low STR_44
  7564  00064C  6F62               	movwf	strcmp@s2& (0+255),b
  7565  00064E  0E7F               	movlw	high STR_44
  7566  000650  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7567  000652  EC05  F02C         	call	_strcmp	;wreg free
  7568  000656  0100               	movlb	0	; () banked
  7569  000658  5160               	movf	?_strcmp& (0+255),w,b
  7570  00065A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7571  00065C  A4D8               	btfss	status,2,c
  7572  00065E  D003               	goto	l491
  7573                           
  7574                           ; BSR set to: 0
  7575                           ;MOTEapp.c: 645: {
  7576                           ;MOTEapp.c: 646: LATAbits.LATA6 = 1;
  7577  000660  8C89               	bsf	3977,6,c	;volatile
  7578                           
  7579                           ; BSR set to: 0
  7580                           ;MOTEapp.c: 647: runningState = runningUplinkTransmit;
  7581  000662  0E08               	movlw	8
  7582  000664  6FF3               	movwf	_runningState& (0+255),b
  7583  000666                     l491:
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;MOTEapp.c: 648: }
  7587                           ;MOTEapp.c: 649: if(strncmp(moduleResonseBuffer, "mac_rx", 6) == 0)
  7588                           
  7589                           ; BSR set to: 0
  7590  000666  0E65               	movlw	low _moduleResonseBuffer
  7591  000668  6F60               	movwf	strncmp@s1& (0+255),b
  7592  00066A  0E01               	movlw	high _moduleResonseBuffer
  7593  00066C  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7594  00066E  0EAA               	movlw	low STR_90
  7595  000670  6F62               	movwf	strncmp@s2& (0+255),b
  7596  000672  0E7F               	movlw	high STR_90
  7597  000674  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7598  000676  0E00               	movlw	0
  7599  000678  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7600  00067A  0E06               	movlw	6
  7601  00067C  6F64               	movwf	strncmp@len& (0+255),b
  7602  00067E  ECEE  F025         	call	_strncmp	;wreg free
  7603  000682  0100               	movlb	0	; () banked
  7604  000684  5160               	movf	?_strncmp& (0+255),w,b
  7605  000686  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7606  000688  A4D8               	btfss	status,2,c
  7607  00068A  D082               	goto	l492
  7608                           
  7609                           ; BSR set to: 0
  7610                           ;MOTEapp.c: 650: {
  7611                           ;MOTEapp.c: 651: uint8_t bufferReadPos = 7;
  7612  00068C  0E07               	movlw	7
  7613  00068E  6FB4               	movwf	moteRunningProcess@bufferReadPos& (0+255),b
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;MOTEapp.c: 655: responsePortNum[0] = moduleResonseBuffer[bufferReadPos++];
  7617  000690  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7618  000692  0D01               	mullw	1
  7619  000694  0E65               	movlw	low _moduleResonseBuffer
  7620  000696  24F3               	addwf	prodl,w,c
  7621  000698  6ED9               	movwf	fsr2l,c
  7622  00069A  0E01               	movlw	high _moduleResonseBuffer
  7623  00069C  20F4               	addwfc	prodh,w,c
  7624  00069E  6EDA               	movwf	fsr2h,c
  7625  0006A0  50DF               	movf	indf2,w,c
  7626  0006A2  0101               	movlb	1	; () banked
  7627  0006A4  6FF8               	movwf	_responsePortNum& (0+255),b
  7628                           
  7629                           ; BSR set to: 1
  7630  0006A6  0100               	movlb	0	; () banked
  7631  0006A8  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7632                           
  7633                           ; BSR set to: 0
  7634                           ;MOTEapp.c: 656: responsePortNum[1] = moduleResonseBuffer[bufferReadPos++];
  7635  0006AA  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7636  0006AC  0D01               	mullw	1
  7637  0006AE  0E65               	movlw	low _moduleResonseBuffer
  7638  0006B0  24F3               	addwf	prodl,w,c
  7639  0006B2  6ED9               	movwf	fsr2l,c
  7640  0006B4  0E01               	movlw	high _moduleResonseBuffer
  7641  0006B6  20F4               	addwfc	prodh,w,c
  7642  0006B8  6EDA               	movwf	fsr2h,c
  7643  0006BA  50DF               	movf	indf2,w,c
  7644  0006BC  0101               	movlb	1	; () banked
  7645  0006BE  6FF9               	movwf	(_responsePortNum+1)& (0+255),b
  7646                           
  7647                           ; BSR set to: 1
  7648  0006C0  0100               	movlb	0	; () banked
  7649  0006C2  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7650                           
  7651                           ; BSR set to: 0
  7652                           ;MOTEapp.c: 657: if (responsePortNum[1] != ' ')
  7653  0006C4  0E20               	movlw	32
  7654  0006C6  0101               	movlb	1	; () banked
  7655  0006C8  19F9               	xorwf	(_responsePortNum+1)& (0+255),w,b
  7656  0006CA  B4D8               	btfsc	status,2,c
  7657  0006CC  D015               	goto	l494
  7658                           
  7659                           ; BSR set to: 1
  7660                           ;MOTEapp.c: 658: {
  7661                           ;MOTEapp.c: 659: responsePortNum[2] = moduleResonseBuffer[bufferReadPos++];
  7662  0006CE  0100               	movlb	0	; () banked
  7663  0006D0  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7664  0006D2  0D01               	mullw	1
  7665  0006D4  0E65               	movlw	low _moduleResonseBuffer
  7666  0006D6  24F3               	addwf	prodl,w,c
  7667  0006D8  6ED9               	movwf	fsr2l,c
  7668  0006DA  0E01               	movlw	high _moduleResonseBuffer
  7669  0006DC  20F4               	addwfc	prodh,w,c
  7670  0006DE  6EDA               	movwf	fsr2h,c
  7671  0006E0  50DF               	movf	indf2,w,c
  7672  0006E2  0101               	movlb	1	; () banked
  7673  0006E4  6FFA               	movwf	(_responsePortNum+2)& (0+255),b
  7674                           
  7675                           ; BSR set to: 1
  7676  0006E6  0100               	movlb	0	; () banked
  7677  0006E8  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7678                           
  7679                           ; BSR set to: 0
  7680                           ;MOTEapp.c: 660: if (responsePortNum[2] != ' ')
  7681  0006EA  0E20               	movlw	32
  7682  0006EC  0101               	movlb	1	; () banked
  7683  0006EE  19FA               	xorwf	(_responsePortNum+2)& (0+255),w,b
  7684  0006F0  B4D8               	btfsc	status,2,c
  7685  0006F2  D002               	goto	l494
  7686                           
  7687                           ; BSR set to: 1
  7688                           ;MOTEapp.c: 661: {
  7689                           ;MOTEapp.c: 662: bufferReadPos++;
  7690  0006F4  0100               	movlb	0	; () banked
  7691  0006F6  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7692  0006F8                     l494:
  7693                           
  7694                           ;MOTEapp.c: 663: }
  7695                           ;MOTEapp.c: 664: }
  7696                           ;MOTEapp.c: 666: for (uint8_t counter = 0; counter < sizeof(moduleResonseBuffer); counte
      +                          r++)
  7697                           
  7698                           ; BSR set to: 0
  7699                           
  7700                           ; BSR set to: 0
  7701  0006F8  0E00               	movlw	0
  7702  0006FA  0100               	movlb	0	; () banked
  7703  0006FC  6FB3               	movwf	moteRunningProcess@counter& (0+255),b
  7704  0006FE                     l10925:
  7705                           
  7706                           ; BSR set to: 0
  7707  0006FE  0E3F               	movlw	63
  7708  000700  65B3               	cpfsgt	moteRunningProcess@counter& (0+255),b
  7709  000702  D001               	goto	l495
  7710  000704  D023               	goto	u9610
  7711  000706                     l495:
  7712                           
  7713                           ; BSR set to: 0
  7714                           ;MOTEapp.c: 667: {
  7715                           ;MOTEapp.c: 668: responseData[counter] = moduleResonseBuffer[bufferReadPos];
  7716                           
  7717                           ; BSR set to: 0
  7718  000706  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7719  000708  0D01               	mullw	1
  7720  00070A  0E65               	movlw	low _moduleResonseBuffer
  7721  00070C  24F3               	addwf	prodl,w,c
  7722  00070E  6ED9               	movwf	fsr2l,c
  7723  000710  0E01               	movlw	high _moduleResonseBuffer
  7724  000712  20F4               	addwfc	prodh,w,c
  7725  000714  6EDA               	movwf	fsr2h,c
  7726  000716  51B3               	movf	moteRunningProcess@counter& (0+255),w,b
  7727  000718  0D01               	mullw	1
  7728  00071A  0EA5               	movlw	low _responseData
  7729  00071C  24F3               	addwf	prodl,w,c
  7730  00071E  6EE1               	movwf	fsr1l,c
  7731  000720  0E01               	movlw	high _responseData
  7732  000722  20F4               	addwfc	prodh,w,c
  7733  000724  6EE2               	movwf	fsr1h,c
  7734  000726  CFDF FFE7          	movff	indf2,indf1
  7735                           
  7736                           ; BSR set to: 0
  7737                           ;MOTEapp.c: 670: if (responseData[counter] != 0x00)
  7738  00072A  51B3               	movf	moteRunningProcess@counter& (0+255),w,b
  7739  00072C  0D01               	mullw	1
  7740  00072E  0EA5               	movlw	low _responseData
  7741  000730  24F3               	addwf	prodl,w,c
  7742  000732  6ED9               	movwf	fsr2l,c
  7743  000734  0E01               	movlw	high _responseData
  7744  000736  20F4               	addwfc	prodh,w,c
  7745  000738  6EDA               	movwf	fsr2h,c
  7746  00073A  50DF               	movf	indf2,w,c
  7747  00073C  B4D8               	btfsc	status,2,c
  7748  00073E  D002               	goto	l497
  7749                           
  7750                           ; BSR set to: 0
  7751                           ;MOTEapp.c: 671: {
  7752                           ;MOTEapp.c: 672: bufferReadPos++;
  7753  000740  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7754                           
  7755                           ;MOTEapp.c: 673: } else {
  7756  000742  D002               	goto	l498
  7757  000744                     l497:
  7758                           
  7759                           ; BSR set to: 0
  7760                           ;MOTEapp.c: 674: counter = sizeof(moduleResonseBuffer);
  7761                           
  7762                           ; BSR set to: 0
  7763  000744  0E40               	movlw	64
  7764  000746  6FB3               	movwf	moteRunningProcess@counter& (0+255),b
  7765  000748                     l498:
  7766                           
  7767                           ; BSR set to: 0
  7768                           
  7769                           ; BSR set to: 0
  7770  000748  2BB3               	incf	moteRunningProcess@counter& (0+255),f,b
  7771  00074A  D7D9               	goto	l10925
  7772  00074C                     u9610:
  7773                           
  7774                           ; BSR set to: 0
  7775                           ;MOTEapp.c: 675: }
  7776                           ;MOTEapp.c: 676: }
  7777                           ;MOTEapp.c: 678: LATAbits.LATA7 = 1;
  7778  00074C  8E89               	bsf	3977,7,c	;volatile
  7779                           
  7780                           ;MOTEapp.c: 679: LATAbits.LATA6 = 0;
  7781  00074E  9C89               	bcf	3977,6,c	;volatile
  7782                           
  7783                           ; BSR set to: 0
  7784                           ;MOTEapp.c: 681: oled_putString("Server Response ",0,2);
  7785  000750  0E54               	movlw	low STR_91
  7786  000752  6F72               	movwf	oled_putString@string& (0+255),b
  7787  000754  0E7B               	movlw	high STR_91
  7788  000756  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7789  000758  5172               	movf	oled_putString@string& (0+255),w,b
  7790  00075A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7791  00075C  A4D8               	btfss	status,2,c
  7792  00075E  0E00               	movlw	low (__mediumconst shr (0+16))
  7793  000760  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7794  000762  0E00               	movlw	0
  7795  000764  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7796  000766  0E02               	movlw	2
  7797  000768  6F76               	movwf	oled_putString@start_page& (0+255),b
  7798  00076A  EC76  F028         	call	_oled_putString	;wreg free
  7799                           
  7800                           ;MOTEapp.c: 682: oled_putString("    Received    ",0,3);
  7801  00076E  0ECC               	movlw	low STR_92
  7802  000770  0100               	movlb	0	; () banked
  7803  000772  6F72               	movwf	oled_putString@string& (0+255),b
  7804  000774  0E7A               	movlw	high STR_92
  7805  000776  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7806  000778  5172               	movf	oled_putString@string& (0+255),w,b
  7807  00077A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7808  00077C  A4D8               	btfss	status,2,c
  7809  00077E  0E00               	movlw	low (__mediumconst shr (0+16))
  7810  000780  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7811  000782  0E00               	movlw	0
  7812  000784  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7813  000786  0E03               	movlw	3
  7814  000788  6F76               	movwf	oled_putString@start_page& (0+255),b
  7815  00078A  EC76  F028         	call	_oled_putString	;wreg free
  7816                           
  7817                           ;MOTEapp.c: 683: }
  7818  00078E  D06C               	goto	l504
  7819  000790                     l492:
  7820                           
  7821                           ;MOTEapp.c: 684: else if(strncmp(moduleResonseBuffer, "mac_tx", 6) == 0)
  7822  000790  0E65               	movlw	low _moduleResonseBuffer
  7823  000792  0100               	movlb	0	; () banked
  7824  000794  6F60               	movwf	strncmp@s1& (0+255),b
  7825  000796  0E01               	movlw	high _moduleResonseBuffer
  7826  000798  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7827  00079A  0EB1               	movlw	low STR_93
  7828  00079C  6F62               	movwf	strncmp@s2& (0+255),b
  7829  00079E  0E7F               	movlw	high STR_93
  7830  0007A0  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7831  0007A2  0E00               	movlw	0
  7832  0007A4  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7833  0007A6  0E06               	movlw	6
  7834  0007A8  6F64               	movwf	strncmp@len& (0+255),b
  7835  0007AA  ECEE  F025         	call	_strncmp	;wreg free
  7836  0007AE  0100               	movlb	0	; () banked
  7837  0007B0  5160               	movf	?_strncmp& (0+255),w,b
  7838  0007B2  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7839  0007B4  A4D8               	btfss	status,2,c
  7840  0007B6  D011               	goto	l500
  7841                           
  7842                           ; BSR set to: 0
  7843                           ;MOTEapp.c: 685: {
  7844                           ;MOTEapp.c: 686: LATAbits.LATA6 = 0;
  7845  0007B8  9C89               	bcf	3977,6,c	;volatile
  7846                           
  7847                           ; BSR set to: 0
  7848                           ;MOTEapp.c: 687: oled_putString("Data Transmitted",0,3);
  7849  0007BA  0EBA               	movlw	low STR_94
  7850  0007BC  6F72               	movwf	oled_putString@string& (0+255),b
  7851  0007BE  0E7B               	movlw	high STR_94
  7852  0007C0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7853  0007C2  5172               	movf	oled_putString@string& (0+255),w,b
  7854  0007C4  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7855  0007C6  A4D8               	btfss	status,2,c
  7856  0007C8  0E00               	movlw	low (__mediumconst shr (0+16))
  7857  0007CA  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7858  0007CC  0E00               	movlw	0
  7859  0007CE  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7860  0007D0  0E03               	movlw	3
  7861  0007D2  6F76               	movwf	oled_putString@start_page& (0+255),b
  7862  0007D4  EC76  F028         	call	_oled_putString	;wreg free
  7863                           
  7864                           ;MOTEapp.c: 688: }
  7865  0007D8  D047               	goto	l504
  7866  0007DA                     l500:
  7867                           
  7868                           ;MOTEapp.c: 689: else if(strncmp(moduleResonseBuffer, "mac_er", 6) == 0)
  7869  0007DA  0E65               	movlw	low _moduleResonseBuffer
  7870  0007DC  0100               	movlb	0	; () banked
  7871  0007DE  6F60               	movwf	strncmp@s1& (0+255),b
  7872  0007E0  0E01               	movlw	high _moduleResonseBuffer
  7873  0007E2  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7874  0007E4  0EA3               	movlw	low STR_95
  7875  0007E6  6F62               	movwf	strncmp@s2& (0+255),b
  7876  0007E8  0E7F               	movlw	high STR_95
  7877  0007EA  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7878  0007EC  0E00               	movlw	0
  7879  0007EE  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7880  0007F0  0E06               	movlw	6
  7881  0007F2  6F64               	movwf	strncmp@len& (0+255),b
  7882  0007F4  ECEE  F025         	call	_strncmp	;wreg free
  7883  0007F8  0100               	movlb	0	; () banked
  7884  0007FA  5160               	movf	?_strncmp& (0+255),w,b
  7885  0007FC  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7886  0007FE  A4D8               	btfss	status,2,c
  7887  000800  D010               	goto	l502
  7888                           
  7889                           ; BSR set to: 0
  7890                           ;MOTEapp.c: 690: {
  7891                           ;MOTEapp.c: 691: oled_putString("Mac Error Occurred",0,3);
  7892  000802  0E96               	movlw	low STR_96
  7893  000804  6F72               	movwf	oled_putString@string& (0+255),b
  7894  000806  0E7A               	movlw	high STR_96
  7895  000808  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7896  00080A  5172               	movf	oled_putString@string& (0+255),w,b
  7897  00080C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7898  00080E  A4D8               	btfss	status,2,c
  7899  000810  0E00               	movlw	low (__mediumconst shr (0+16))
  7900  000812  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7901  000814  0E00               	movlw	0
  7902  000816  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7903  000818  0E03               	movlw	3
  7904  00081A  6F76               	movwf	oled_putString@start_page& (0+255),b
  7905  00081C  EC76  F028         	call	_oled_putString	;wreg free
  7906                           
  7907                           ;MOTEapp.c: 692: }
  7908  000820  D023               	goto	l504
  7909  000822                     l502:
  7910                           
  7911                           ;MOTEapp.c: 693: else if(strncmp(moduleResonseBuffer, "no_fre", 6) == 0)
  7912  000822  0E65               	movlw	low _moduleResonseBuffer
  7913  000824  0100               	movlb	0	; () banked
  7914  000826  6F60               	movwf	strncmp@s1& (0+255),b
  7915  000828  0E01               	movlw	high _moduleResonseBuffer
  7916  00082A  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7917  00082C  0E9C               	movlw	low STR_97
  7918  00082E  6F62               	movwf	strncmp@s2& (0+255),b
  7919  000830  0E7F               	movlw	high STR_97
  7920  000832  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7921  000834  0E00               	movlw	0
  7922  000836  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7923  000838  0E06               	movlw	6
  7924  00083A  6F64               	movwf	strncmp@len& (0+255),b
  7925  00083C  ECEE  F025         	call	_strncmp	;wreg free
  7926  000840  0100               	movlb	0	; () banked
  7927  000842  5160               	movf	?_strncmp& (0+255),w,b
  7928  000844  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7929  000846  A4D8               	btfss	status,2,c
  7930  000848  D00F               	goto	l504
  7931                           
  7932                           ; BSR set to: 0
  7933                           ;MOTEapp.c: 694: {
  7934                           ;MOTEapp.c: 695: oled_putString("No Free Channel",0,3);
  7935  00084A  0EB3               	movlw	low STR_98
  7936  00084C  6F72               	movwf	oled_putString@string& (0+255),b
  7937  00084E  0E7C               	movlw	high STR_98
  7938  000850  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7939  000852  5172               	movf	oled_putString@string& (0+255),w,b
  7940  000854  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7941  000856  A4D8               	btfss	status,2,c
  7942  000858  0E00               	movlw	low (__mediumconst shr (0+16))
  7943  00085A  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7944  00085C  0E00               	movlw	0
  7945  00085E  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7946  000860  0E03               	movlw	3
  7947  000862  6F76               	movwf	oled_putString@start_page& (0+255),b
  7948  000864  EC76  F028         	call	_oled_putString	;wreg free
  7949  000868                     l504:
  7950                           
  7951                           ;MOTEapp.c: 696: }
  7952                           ;MOTEapp.c: 697: _delay((unsigned long)((16)*(48000000/4000.0)));
  7953  000868  0EFA               	movlw	250
  7954  00086A  0100               	movlb	0	; () banked
  7955  00086C  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  7956  00086E  0E58               	movlw	88
  7957  000870                     u11317:
  7958  000870  2EE8               	decfsz	wreg,f,c
  7959  000872  D7FE               	bra	u11317
  7960  000874  2FAF               	decfsz	??_moteRunningProcess& (0+255),f,b
  7961  000876  D7FC               	bra	u11317
  7962  000878  F000               	nop	
  7963  00087A                     l490:
  7964                           
  7965                           ;MOTEapp.c: 698: }
  7966                           ;MOTEapp.c: 699: if ( (changeStates) || (selectButton) )
  7967  00087A  0100               	movlb	0	; () banked
  7968  00087C  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7969  00087E  A4D8               	btfss	status,2,c
  7970  000880  D003               	goto	u9660
  7971                           
  7972                           ; BSR set to: 0
  7973  000882  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7974  000884  B4D8               	btfsc	status,2,c
  7975  000886  0012               	return	
  7976  000888                     u9660:
  7977                           
  7978                           ; BSR set to: 0
  7979                           ;MOTEapp.c: 700: {
  7980                           ;MOTEapp.c: 701: oled_clear();
  7981                           
  7982                           ; BSR set to: 0
  7983  000888  ECF0  F02F         	call	_oled_clear	;wreg free
  7984                           
  7985                           ;MOTEapp.c: 702: oled_putString("  Issue Uplink  ",0,0);
  7986  00088C  0E21               	movlw	low STR_75
  7987  00088E  0100               	movlb	0	; () banked
  7988  000890  6F72               	movwf	oled_putString@string& (0+255),b
  7989  000892  0E7B               	movlw	high STR_75
  7990  000894  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  7991  000896  5172               	movf	oled_putString@string& (0+255),w,b
  7992  000898  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  7993  00089A  A4D8               	btfss	status,2,c
  7994  00089C  0E00               	movlw	low (__mediumconst shr (0+16))
  7995  00089E  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  7996  0008A0  0E00               	movlw	0
  7997  0008A2  6F75               	movwf	oled_putString@station_dot& (0+255),b
  7998  0008A4  0E00               	movlw	0
  7999  0008A6  6F76               	movwf	oled_putString@start_page& (0+255),b
  8000  0008A8  EC76  F028         	call	_oled_putString	;wreg free
  8001                           
  8002                           ;MOTEapp.c: 703: oled_putString(" LoRaWAN Packet ",0,1);
  8003  0008AC  0E87               	movlw	low STR_76
  8004  0008AE  0100               	movlb	0	; () banked
  8005  0008B0  6F72               	movwf	oled_putString@string& (0+255),b
  8006  0008B2  0E7B               	movlw	high STR_76
  8007  0008B4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8008  0008B6  5172               	movf	oled_putString@string& (0+255),w,b
  8009  0008B8  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8010  0008BA  A4D8               	btfss	status,2,c
  8011  0008BC  0E00               	movlw	low (__mediumconst shr (0+16))
  8012  0008BE  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8013  0008C0  0E00               	movlw	0
  8014  0008C2  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8015  0008C4  0E01               	movlw	1
  8016  0008C6  6F76               	movwf	oled_putString@start_page& (0+255),b
  8017  0008C8  EC76  F028         	call	_oled_putString	;wreg free
  8018                           
  8019                           ;MOTEapp.c: 704: oled_putString("(NAV)    (SEL) ",0,3);
  8020  0008CC  0E83               	movlw	low STR_77
  8021  0008CE  0100               	movlb	0	; () banked
  8022  0008D0  6F72               	movwf	oled_putString@string& (0+255),b
  8023  0008D2  0E7C               	movlw	high STR_77
  8024  0008D4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8025  0008D6  5172               	movf	oled_putString@string& (0+255),w,b
  8026  0008D8  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8027  0008DA  A4D8               	btfss	status,2,c
  8028  0008DC  0E00               	movlw	low (__mediumconst shr (0+16))
  8029  0008DE  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8030  0008E0  0E00               	movlw	0
  8031  0008E2  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8032  0008E4  0E03               	movlw	3
  8033  0008E6  6F76               	movwf	oled_putString@start_page& (0+255),b
  8034  0008E8  EC76  F028         	call	_oled_putString	;wreg free
  8035                           
  8036                           ;MOTEapp.c: 705: runningState = runningUplink;
  8037  0008EC  0E06               	movlw	6
  8038  0008EE  0100               	movlb	0	; () banked
  8039  0008F0  6FF3               	movwf	_runningState& (0+255),b
  8040                           
  8041                           ; BSR set to: 0
  8042                           ;MOTEapp.c: 706: }
  8043                           ;MOTEapp.c: 707: break;
  8044  0008F2  0012               	return	
  8045  0008F4                     
  8046                           ; BSR set to: 0
  8047                           ;MOTEapp.c: 709: if (changeStates)
  8048                           
  8049                           ; BSR set to: 0
  8050  0008F4  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8051  0008F6  B4D8               	btfsc	status,2,c
  8052  0008F8  D036               	goto	l509
  8053                           
  8054                           ; BSR set to: 0
  8055                           ;MOTEapp.c: 710: {
  8056                           ;MOTEapp.c: 711: oled_clear();
  8057  0008FA  ECF0  F02F         	call	_oled_clear	;wreg free
  8058                           
  8059                           ;MOTEapp.c: 712: oled_putString("  Sensor Data  ",0,0);
  8060  0008FE  0E63               	movlw	low STR_102
  8061  000900  0100               	movlb	0	; () banked
  8062  000902  6F72               	movwf	oled_putString@string& (0+255),b
  8063  000904  0E7C               	movlw	high STR_102
  8064  000906  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8065  000908  5172               	movf	oled_putString@string& (0+255),w,b
  8066  00090A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8067  00090C  A4D8               	btfss	status,2,c
  8068  00090E  0E00               	movlw	low (__mediumconst shr (0+16))
  8069  000910  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8070  000912  0E00               	movlw	0
  8071  000914  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8072  000916  0E00               	movlw	0
  8073  000918  6F76               	movwf	oled_putString@start_page& (0+255),b
  8074  00091A  EC76  F028         	call	_oled_putString	;wreg free
  8075                           
  8076                           ;MOTEapp.c: 713: oled_putString("    Display    ",0,1);
  8077  00091E  0E53               	movlw	low STR_103
  8078  000920  0100               	movlb	0	; () banked
  8079  000922  6F72               	movwf	oled_putString@string& (0+255),b
  8080  000924  0E7C               	movlw	high STR_103
  8081  000926  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8082  000928  5172               	movf	oled_putString@string& (0+255),w,b
  8083  00092A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8084  00092C  A4D8               	btfss	status,2,c
  8085  00092E  0E00               	movlw	low (__mediumconst shr (0+16))
  8086  000930  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8087  000932  0E00               	movlw	0
  8088  000934  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8089  000936  0E01               	movlw	1
  8090  000938  6F76               	movwf	oled_putString@start_page& (0+255),b
  8091  00093A  EC76  F028         	call	_oled_putString	;wreg free
  8092                           
  8093                           ;MOTEapp.c: 714: oled_putString("(NAV)    (SEL) ",0,3);
  8094  00093E  0E83               	movlw	low STR_77
  8095  000940  0100               	movlb	0	; () banked
  8096  000942  6F72               	movwf	oled_putString@string& (0+255),b
  8097  000944  0E7C               	movlw	high STR_77
  8098  000946  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8099  000948  5172               	movf	oled_putString@string& (0+255),w,b
  8100  00094A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8101  00094C  A4D8               	btfss	status,2,c
  8102  00094E  0E00               	movlw	low (__mediumconst shr (0+16))
  8103  000950  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8104  000952  0E00               	movlw	0
  8105  000954  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8106  000956  0E03               	movlw	3
  8107  000958  6F76               	movwf	oled_putString@start_page& (0+255),b
  8108  00095A  EC76  F028         	call	_oled_putString	;wreg free
  8109                           
  8110                           ;MOTEapp.c: 715: runningState = runningSensor;
  8111  00095E  0E01               	movlw	1
  8112  000960  0100               	movlb	0	; () banked
  8113  000962  6FF3               	movwf	_runningState& (0+255),b
  8114                           
  8115                           ;MOTEapp.c: 716: }
  8116  000964  0012               	return	
  8117  000966                     l509:
  8118                           
  8119                           ; BSR set to: 0
  8120                           ;MOTEapp.c: 717: else if (selectButton)
  8121                           
  8122                           ; BSR set to: 0
  8123  000966  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8124  000968  B4D8               	btfsc	status,2,c
  8125  00096A  0012               	return	
  8126                           
  8127                           ; BSR set to: 0
  8128                           ;MOTEapp.c: 718: {
  8129                           ;MOTEapp.c: 720: oled_clear();
  8130  00096C  ECF0  F02F         	call	_oled_clear	;wreg free
  8131                           
  8132                           ;MOTEapp.c: 722: LATAbits.LATA7 = 0;
  8133  000970  9E89               	bcf	3977,7,c	;volatile
  8134                           
  8135                           ;MOTEapp.c: 724: oled_putString("Downlink Display",0,0);
  8136  000972  0E42               	movlw	low STR_105
  8137  000974  0100               	movlb	0	; () banked
  8138  000976  6F72               	movwf	oled_putString@string& (0+255),b
  8139  000978  0E7C               	movlw	high STR_105
  8140  00097A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8141  00097C  5172               	movf	oled_putString@string& (0+255),w,b
  8142  00097E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8143  000980  A4D8               	btfss	status,2,c
  8144  000982  0E00               	movlw	low (__mediumconst shr (0+16))
  8145  000984  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8146  000986  0E00               	movlw	0
  8147  000988  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8148  00098A  0E00               	movlw	0
  8149  00098C  6F76               	movwf	oled_putString@start_page& (0+255),b
  8150  00098E  EC76  F028         	call	_oled_putString	;wreg free
  8151                           
  8152                           ;MOTEapp.c: 726: oled_putString("Rx Port# ",0,1);
  8153  000992  0ECA               	movlw	low STR_106
  8154  000994  0100               	movlb	0	; () banked
  8155  000996  6F72               	movwf	oled_putString@string& (0+255),b
  8156  000998  0E7E               	movlw	high STR_106
  8157  00099A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8158  00099C  5172               	movf	oled_putString@string& (0+255),w,b
  8159  00099E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8160  0009A0  A4D8               	btfss	status,2,c
  8161  0009A2  0E00               	movlw	low (__mediumconst shr (0+16))
  8162  0009A4  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8163  0009A6  0E00               	movlw	0
  8164  0009A8  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8165  0009AA  0E01               	movlw	1
  8166  0009AC  6F76               	movwf	oled_putString@start_page& (0+255),b
  8167  0009AE  EC76  F028         	call	_oled_putString	;wreg free
  8168                           
  8169                           ;MOTEapp.c: 727: oled_putString(&responsePortNum,9,1);
  8170  0009B2  0EF8               	movlw	low _responsePortNum
  8171  0009B4  0100               	movlb	0	; () banked
  8172  0009B6  6F72               	movwf	oled_putString@string& (0+255),b
  8173  0009B8  0E01               	movlw	high _responsePortNum
  8174  0009BA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8175  0009BC  5172               	movf	oled_putString@string& (0+255),w,b
  8176  0009BE  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8177  0009C0  A4D8               	btfss	status,2,c
  8178  0009C2  0E20               	movlw	32
  8179  0009C4  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8180  0009C6  0E09               	movlw	9
  8181  0009C8  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8182  0009CA  0E01               	movlw	1
  8183  0009CC  6F76               	movwf	oled_putString@start_page& (0+255),b
  8184  0009CE  EC76  F028         	call	_oled_putString	;wreg free
  8185                           
  8186                           ;MOTEapp.c: 729: oled_putString("Data: ",0,2);
  8187  0009D2  0E51               	movlw	low (STR_86+5)
  8188  0009D4  0100               	movlb	0	; () banked
  8189  0009D6  6F72               	movwf	oled_putString@string& (0+255),b
  8190  0009D8  0E7E               	movlw	high (STR_86+5)
  8191  0009DA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8192  0009DC  5172               	movf	oled_putString@string& (0+255),w,b
  8193  0009DE  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8194  0009E0  A4D8               	btfss	status,2,c
  8195  0009E2  0E00               	movlw	low (__mediumconst shr (0+16))
  8196  0009E4  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8197  0009E6  0E00               	movlw	0
  8198  0009E8  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8199  0009EA  0E02               	movlw	2
  8200  0009EC  6F76               	movwf	oled_putString@start_page& (0+255),b
  8201  0009EE  EC76  F028         	call	_oled_putString	;wreg free
  8202                           
  8203                           ;MOTEapp.c: 730: oled_putString(&responseData[0],6,2);
  8204  0009F2  0EA5               	movlw	low _responseData
  8205  0009F4  0100               	movlb	0	; () banked
  8206  0009F6  6F72               	movwf	oled_putString@string& (0+255),b
  8207  0009F8  0E01               	movlw	high _responseData
  8208  0009FA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8209  0009FC  5172               	movf	oled_putString@string& (0+255),w,b
  8210  0009FE  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8211  000A00  A4D8               	btfss	status,2,c
  8212  000A02  0E20               	movlw	32
  8213  000A04  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8214  000A06  0E06               	movlw	6
  8215  000A08  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8216  000A0A  0E02               	movlw	2
  8217  000A0C  6F76               	movwf	oled_putString@start_page& (0+255),b
  8218  000A0E  EC76  F028         	call	_oled_putString	;wreg free
  8219                           
  8220                           ;MOTEapp.c: 732: oled_putString(&responseData[10],0,3);
  8221  000A12  0EAF               	movlw	low (_responseData+10)
  8222  000A14  0100               	movlb	0	; () banked
  8223  000A16  6F72               	movwf	oled_putString@string& (0+255),b
  8224  000A18  0E01               	movlw	high (_responseData+10)
  8225  000A1A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8226  000A1C  5172               	movf	oled_putString@string& (0+255),w,b
  8227  000A1E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8228  000A20  A4D8               	btfss	status,2,c
  8229  000A22  0E20               	movlw	32
  8230  000A24  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8231  000A26  0E00               	movlw	0
  8232  000A28  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8233  000A2A  0E03               	movlw	3
  8234  000A2C  6F76               	movwf	oled_putString@start_page& (0+255),b
  8235  000A2E  EC76  F028         	call	_oled_putString	;wreg free
  8236                           
  8237                           ;MOTEapp.c: 734: runningState = runningDownlinkDisplay;
  8238  000A32  0E0B               	movlw	11
  8239  000A34  0100               	movlb	0	; () banked
  8240  000A36  6FF3               	movwf	_runningState& (0+255),b
  8241                           
  8242                           ; BSR set to: 0
  8243                           ;MOTEapp.c: 735: }
  8244                           ;MOTEapp.c: 736: break;
  8245                           
  8246                           ; BSR set to: 0
  8247  000A38  0012               	return	
  8248  000A3A                     
  8249                           ; BSR set to: 0
  8250                           ;MOTEapp.c: 738: if ( (changeStates) || (selectButton) )
  8251                           
  8252                           ; BSR set to: 0
  8253  000A3A  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8254  000A3C  A4D8               	btfss	status,2,c
  8255  000A3E  D003               	goto	u9700
  8256                           
  8257                           ; BSR set to: 0
  8258  000A40  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8259  000A42  B4D8               	btfsc	status,2,c
  8260  000A44  0012               	return	
  8261  000A46                     u9700:
  8262                           
  8263                           ; BSR set to: 0
  8264                           ;MOTEapp.c: 739: {
  8265                           ;MOTEapp.c: 740: oled_clear();
  8266                           
  8267                           ; BSR set to: 0
  8268  000A46  ECF0  F02F         	call	_oled_clear	;wreg free
  8269                           
  8270                           ;MOTEapp.c: 741: oled_putString(" View Downlink  ",0,0);
  8271  000A4A  0E10               	movlw	low STR_78
  8272  000A4C  0100               	movlb	0	; () banked
  8273  000A4E  6F72               	movwf	oled_putString@string& (0+255),b
  8274  000A50  0E7B               	movlw	high STR_78
  8275  000A52  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8276  000A54  5172               	movf	oled_putString@string& (0+255),w,b
  8277  000A56  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8278  000A58  A4D8               	btfss	status,2,c
  8279  000A5A  0E00               	movlw	low (__mediumconst shr (0+16))
  8280  000A5C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8281  000A5E  0E00               	movlw	0
  8282  000A60  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8283  000A62  0E00               	movlw	0
  8284  000A64  6F76               	movwf	oled_putString@start_page& (0+255),b
  8285  000A66  EC76  F028         	call	_oled_putString	;wreg free
  8286                           
  8287                           ;MOTEapp.c: 742: oled_putString("  Last Message  ",0,1);
  8288  000A6A  0EFF               	movlw	low STR_79
  8289  000A6C  0100               	movlb	0	; () banked
  8290  000A6E  6F72               	movwf	oled_putString@string& (0+255),b
  8291  000A70  0E7A               	movlw	high STR_79
  8292  000A72  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8293  000A74  5172               	movf	oled_putString@string& (0+255),w,b
  8294  000A76  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8295  000A78  A4D8               	btfss	status,2,c
  8296  000A7A  0E00               	movlw	low (__mediumconst shr (0+16))
  8297  000A7C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8298  000A7E  0E00               	movlw	0
  8299  000A80  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8300  000A82  0E01               	movlw	1
  8301  000A84  6F76               	movwf	oled_putString@start_page& (0+255),b
  8302  000A86  EC76  F028         	call	_oled_putString	;wreg free
  8303                           
  8304                           ;MOTEapp.c: 743: oled_putString("(NAV)    (SEL) ",0,3);
  8305  000A8A  0E83               	movlw	low STR_77
  8306  000A8C  0100               	movlb	0	; () banked
  8307  000A8E  6F72               	movwf	oled_putString@string& (0+255),b
  8308  000A90  0E7C               	movlw	high STR_77
  8309  000A92  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8310  000A94  5172               	movf	oled_putString@string& (0+255),w,b
  8311  000A96  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8312  000A98  A4D8               	btfss	status,2,c
  8313  000A9A  0E00               	movlw	low (__mediumconst shr (0+16))
  8314  000A9C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8315  000A9E  0E00               	movlw	0
  8316  000AA0  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8317  000AA2  0E03               	movlw	3
  8318  000AA4  6F76               	movwf	oled_putString@start_page& (0+255),b
  8319  000AA6  EC76  F028         	call	_oled_putString	;wreg free
  8320                           
  8321                           ;MOTEapp.c: 744: runningState = runningDownlink;
  8322  000AAA  0E0A               	movlw	10
  8323  000AAC  0100               	movlb	0	; () banked
  8324  000AAE  6FF3               	movwf	_runningState& (0+255),b
  8325                           
  8326                           ; BSR set to: 0
  8327                           ;MOTEapp.c: 745: }
  8328                           ;MOTEapp.c: 746: break;
  8329  000AB0  0012               	return	
  8330  000AB2                     
  8331                           ; BSR set to: 0
  8332                           ;MOTEapp.c: 748: if (changeStates)
  8333                           
  8334                           ; BSR set to: 0
  8335  000AB2  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8336  000AB4  B4D8               	btfsc	status,2,c
  8337  000AB6  D04A               	goto	l517
  8338                           
  8339                           ; BSR set to: 0
  8340                           ;MOTEapp.c: 749: {
  8341                           ;MOTEapp.c: 750: oled_clear();
  8342  000AB8  ECF0  F02F         	call	_oled_clear	;wreg free
  8343                           
  8344                           ;MOTEapp.c: 751: oled_putString("Menu Has Timeout",0,0);
  8345  000ABC  0E20               	movlw	low STR_111
  8346  000ABE  0100               	movlb	0	; () banked
  8347  000AC0  6F72               	movwf	oled_putString@string& (0+255),b
  8348  000AC2  0E7C               	movlw	high STR_111
  8349  000AC4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8350  000AC6  5172               	movf	oled_putString@string& (0+255),w,b
  8351  000AC8  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8352  000ACA  A4D8               	btfss	status,2,c
  8353  000ACC  0E00               	movlw	low (__mediumconst shr (0+16))
  8354  000ACE  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8355  000AD0  0E00               	movlw	0
  8356  000AD2  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8357  000AD4  0E00               	movlw	0
  8358  000AD6  6F76               	movwf	oled_putString@start_page& (0+255),b
  8359  000AD8  EC76  F028         	call	_oled_putString	;wreg free
  8360                           
  8361                           ;MOTEapp.c: 752: if (menuTimeout)
  8362  000ADC  0100               	movlb	0	; () banked
  8363  000ADE  51FB               	movf	_menuTimeout& (0+255),w,b
  8364  000AE0  B4D8               	btfsc	status,2,c
  8365  000AE2  D010               	goto	l518
  8366                           
  8367                           ; BSR set to: 0
  8368                           ;MOTEapp.c: 753: oled_putString("    Enabled   ", 0,2);
  8369  000AE4  0ED3               	movlw	low STR_112
  8370  000AE6  6F72               	movwf	oled_putString@string& (0+255),b
  8371  000AE8  0E7C               	movlw	high STR_112
  8372  000AEA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8373  000AEC  5172               	movf	oled_putString@string& (0+255),w,b
  8374  000AEE  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8375  000AF0  A4D8               	btfss	status,2,c
  8376  000AF2  0E00               	movlw	low (__mediumconst shr (0+16))
  8377  000AF4  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8378  000AF6  0E00               	movlw	0
  8379  000AF8  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8380  000AFA  0E02               	movlw	2
  8381  000AFC  6F76               	movwf	oled_putString@start_page& (0+255),b
  8382  000AFE  EC76  F028         	call	_oled_putString	;wreg free
  8383  000B02  D010               	goto	l519
  8384  000B04                     l518:
  8385                           
  8386                           ;MOTEapp.c: 754: else
  8387                           ;MOTEapp.c: 755: oled_putString("    Disabled  ", 0,2);
  8388  000B04  0EE2               	movlw	low STR_113
  8389  000B06  0100               	movlb	0	; () banked
  8390  000B08  6F72               	movwf	oled_putString@string& (0+255),b
  8391  000B0A  0E7C               	movlw	high STR_113
  8392  000B0C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8393  000B0E  5172               	movf	oled_putString@string& (0+255),w,b
  8394  000B10  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8395  000B12  A4D8               	btfss	status,2,c
  8396  000B14  0E00               	movlw	low (__mediumconst shr (0+16))
  8397  000B16  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8398  000B18  0E00               	movlw	0
  8399  000B1A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8400  000B1C  0E02               	movlw	2
  8401  000B1E  6F76               	movwf	oled_putString@start_page& (0+255),b
  8402  000B20  EC76  F028         	call	_oled_putString	;wreg free
  8403  000B24                     l519:
  8404                           
  8405                           ;MOTEapp.c: 756: oled_putString("(NAV)    (CNG) ",0,3);
  8406  000B24  0E73               	movlw	low STR_114
  8407  000B26  0100               	movlb	0	; () banked
  8408  000B28  6F72               	movwf	oled_putString@string& (0+255),b
  8409  000B2A  0E7C               	movlw	high STR_114
  8410  000B2C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8411  000B2E  5172               	movf	oled_putString@string& (0+255),w,b
  8412  000B30  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8413  000B32  A4D8               	btfss	status,2,c
  8414  000B34  0E00               	movlw	low (__mediumconst shr (0+16))
  8415  000B36  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8416  000B38  0E00               	movlw	0
  8417  000B3A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8418  000B3C  0E03               	movlw	3
  8419  000B3E  6F76               	movwf	oled_putString@start_page& (0+255),b
  8420  000B40  EC76  F028         	call	_oled_putString	;wreg free
  8421                           
  8422                           ;MOTEapp.c: 757: runningState = runningMenuTimeout;
  8423  000B44  0E0C               	movlw	12
  8424  000B46  0100               	movlb	0	; () banked
  8425  000B48  6FF3               	movwf	_runningState& (0+255),b
  8426                           
  8427                           ;MOTEapp.c: 758: }
  8428  000B4A  0012               	return	
  8429  000B4C                     l517:
  8430                           
  8431                           ; BSR set to: 0
  8432                           ;MOTEapp.c: 759: else if (selectButton)
  8433                           
  8434                           ; BSR set to: 0
  8435  000B4C  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8436  000B4E  B4D8               	btfsc	status,2,c
  8437  000B50  0012               	return	
  8438                           
  8439                           ; BSR set to: 0
  8440                           ;MOTEapp.c: 760: {
  8441                           ;MOTEapp.c: 761: oled_clear();
  8442  000B52  ECF0  F02F         	call	_oled_clear	;wreg free
  8443                           
  8444                           ;MOTEapp.c: 762: oled_putString("  Sensor Data  ",0,0);
  8445  000B56  0E63               	movlw	low STR_102
  8446  000B58  0100               	movlb	0	; () banked
  8447  000B5A  6F72               	movwf	oled_putString@string& (0+255),b
  8448  000B5C  0E7C               	movlw	high STR_102
  8449  000B5E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8450  000B60  5172               	movf	oled_putString@string& (0+255),w,b
  8451  000B62  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8452  000B64  A4D8               	btfss	status,2,c
  8453  000B66  0E00               	movlw	low (__mediumconst shr (0+16))
  8454  000B68  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8455  000B6A  0E00               	movlw	0
  8456  000B6C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8457  000B6E  0E00               	movlw	0
  8458  000B70  6F76               	movwf	oled_putString@start_page& (0+255),b
  8459  000B72  EC76  F028         	call	_oled_putString	;wreg free
  8460                           
  8461                           ;MOTEapp.c: 763: oled_putString("Light:",0,1);
  8462  000B76  0E80               	movlw	low STR_116
  8463  000B78  0100               	movlb	0	; () banked
  8464  000B7A  6F72               	movwf	oled_putString@string& (0+255),b
  8465  000B7C  0E7F               	movlw	high STR_116
  8466  000B7E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8467  000B80  5172               	movf	oled_putString@string& (0+255),w,b
  8468  000B82  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8469  000B84  A4D8               	btfss	status,2,c
  8470  000B86  0E00               	movlw	low (__mediumconst shr (0+16))
  8471  000B88  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8472  000B8A  0E00               	movlw	0
  8473  000B8C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8474  000B8E  0E01               	movlw	1
  8475  000B90  6F76               	movwf	oled_putString@start_page& (0+255),b
  8476  000B92  EC76  F028         	call	_oled_putString	;wreg free
  8477                           
  8478                           ;MOTEapp.c: 764: oled_putString("Temp :",0,2);
  8479  000B96  0E79               	movlw	low STR_117
  8480  000B98  0100               	movlb	0	; () banked
  8481  000B9A  6F72               	movwf	oled_putString@string& (0+255),b
  8482  000B9C  0E7F               	movlw	high STR_117
  8483  000B9E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8484  000BA0  5172               	movf	oled_putString@string& (0+255),w,b
  8485  000BA2  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8486  000BA4  A4D8               	btfss	status,2,c
  8487  000BA6  0E00               	movlw	low (__mediumconst shr (0+16))
  8488  000BA8  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8489  000BAA  0E00               	movlw	0
  8490  000BAC  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8491  000BAE  0E02               	movlw	2
  8492  000BB0  6F76               	movwf	oled_putString@start_page& (0+255),b
  8493  000BB2  EC76  F028         	call	_oled_putString	;wreg free
  8494                           
  8495                           ;MOTEapp.c: 765: oled_putString("C",10,2);
  8496  000BB6  0EFA               	movlw	low STR_118
  8497  000BB8  0100               	movlb	0	; () banked
  8498  000BBA  6F72               	movwf	oled_putString@string& (0+255),b
  8499  000BBC  0E7F               	movlw	high STR_118
  8500  000BBE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8501  000BC0  5172               	movf	oled_putString@string& (0+255),w,b
  8502  000BC2  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8503  000BC4  A4D8               	btfss	status,2,c
  8504  000BC6  0E00               	movlw	low (__mediumconst shr (0+16))
  8505  000BC8  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8506  000BCA  0E0A               	movlw	10
  8507  000BCC  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8508  000BCE  0E02               	movlw	2
  8509  000BD0  6F76               	movwf	oled_putString@start_page& (0+255),b
  8510  000BD2  EC76  F028         	call	_oled_putString	;wreg free
  8511                           
  8512                           ;MOTEapp.c: 767: moteApp_setSensorsInput();
  8513  000BD6  EC3A  F028         	call	_moteApp_setSensorsInput	;wreg free
  8514                           
  8515                           ;MOTEapp.c: 768: runningState = runningSensorMenu;
  8516  000BDA  0E02               	movlw	2
  8517  000BDC  0100               	movlb	0	; () banked
  8518  000BDE  6FF3               	movwf	_runningState& (0+255),b
  8519                           
  8520                           ; BSR set to: 0
  8521                           ;MOTEapp.c: 769: }
  8522                           ;MOTEapp.c: 770: break;
  8523                           
  8524                           ; BSR set to: 0
  8525  000BE0  0012               	return	
  8526  000BE2                     
  8527                           ; BSR set to: 0
  8528                           ;MOTEapp.c: 772: if (changeStates)
  8529                           
  8530                           ; BSR set to: 0
  8531  000BE2  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8532  000BE4  B4D8               	btfsc	status,2,c
  8533  000BE6  D0D2               	goto	l523
  8534                           
  8535                           ; BSR set to: 0
  8536                           ;MOTEapp.c: 773: {
  8537                           ;MOTEapp.c: 774: oled_clear();
  8538  000BE8  ECF0  F02F         	call	_oled_clear	;wreg free
  8539                           
  8540                           ;MOTEapp.c: 775: oled_putString("Periodic Uplink ",0,0);
  8541  000BEC  0E76               	movlw	low STR_119
  8542  000BEE  0100               	movlb	0	; () banked
  8543  000BF0  6F72               	movwf	oled_putString@string& (0+255),b
  8544  000BF2  0E7B               	movlw	high STR_119
  8545  000BF4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8546  000BF6  5172               	movf	oled_putString@string& (0+255),w,b
  8547  000BF8  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8548  000BFA  A4D8               	btfss	status,2,c
  8549  000BFC  0E00               	movlw	low (__mediumconst shr (0+16))
  8550  000BFE  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8551  000C00  0E00               	movlw	0
  8552  000C02  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8553  000C04  0E00               	movlw	0
  8554  000C06  6F76               	movwf	oled_putString@start_page& (0+255),b
  8555  000C08  EC76  F028         	call	_oled_putString	;wreg free
  8556                           
  8557                           ;MOTEapp.c: 776: oled_putString("Tx Event Timing ",0,1);
  8558  000C0C  0E65               	movlw	low STR_120
  8559  000C0E  0100               	movlb	0	; () banked
  8560  000C10  6F72               	movwf	oled_putString@string& (0+255),b
  8561  000C12  0E7B               	movlw	high STR_120
  8562  000C14  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8563  000C16  5172               	movf	oled_putString@string& (0+255),w,b
  8564  000C18  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8565  000C1A  A4D8               	btfss	status,2,c
  8566  000C1C  0E00               	movlw	low (__mediumconst shr (0+16))
  8567  000C1E  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8568  000C20  0E00               	movlw	0
  8569  000C22  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8570  000C24  0E01               	movlw	1
  8571  000C26  6F76               	movwf	oled_putString@start_page& (0+255),b
  8572  000C28  EC76  F028         	call	_oled_putString	;wreg free
  8573                           
  8574                           ;MOTEapp.c: 777: oled_putString("Every:",0,2);
  8575  000C2C  0E87               	movlw	low STR_121
  8576  000C2E  0100               	movlb	0	; () banked
  8577  000C30  6F72               	movwf	oled_putString@string& (0+255),b
  8578  000C32  0E7F               	movlw	high STR_121
  8579  000C34  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8580  000C36  5172               	movf	oled_putString@string& (0+255),w,b
  8581  000C38  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8582  000C3A  A4D8               	btfss	status,2,c
  8583  000C3C  0E00               	movlw	low (__mediumconst shr (0+16))
  8584  000C3E  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8585  000C40  0E00               	movlw	0
  8586  000C42  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8587  000C44  0E02               	movlw	2
  8588  000C46  6F76               	movwf	oled_putString@start_page& (0+255),b
  8589  000C48  EC76  F028         	call	_oled_putString	;wreg free
  8590                           
  8591                           ;MOTEapp.c: 778: oled_putString("Mins",12,2);
  8592  000C4C  0EC2               	movlw	low STR_122
  8593  000C4E  0100               	movlb	0	; () banked
  8594  000C50  6F72               	movwf	oled_putString@string& (0+255),b
  8595  000C52  0E7F               	movlw	high STR_122
  8596  000C54  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8597  000C56  5172               	movf	oled_putString@string& (0+255),w,b
  8598  000C58  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8599  000C5A  A4D8               	btfss	status,2,c
  8600  000C5C  0E00               	movlw	low (__mediumconst shr (0+16))
  8601  000C5E  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8602  000C60  0E0C               	movlw	12
  8603  000C62  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8604  000C64  0E02               	movlw	2
  8605  000C66  6F76               	movwf	oled_putString@start_page& (0+255),b
  8606  000C68  EC76  F028         	call	_oled_putString	;wreg free
  8607                           
  8608                           ;MOTEapp.c: 780: switch (periodicUpValue)
  8609  000C6C  D066               	goto	l524
  8610  000C6E                     
  8611                           ;MOTEapp.c: 784: oled_putString("5",7,2);
  8612                           
  8613                           ;MOTEapp.c: 783: case 0:
  8614  000C6E  0ECB               	movlw	low (STR_169+11)
  8615  000C70  0100               	movlb	0	; () banked
  8616  000C72  6F72               	movwf	oled_putString@string& (0+255),b
  8617  000C74  0E7D               	movlw	high (STR_169+11)
  8618  000C76  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8619  000C78  5172               	movf	oled_putString@string& (0+255),w,b
  8620  000C7A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8621  000C7C  A4D8               	btfss	status,2,c
  8622  000C7E  0E00               	movlw	low (__mediumconst shr (0+16))
  8623  000C80  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8624  000C82  0E07               	movlw	7
  8625  000C84  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8626  000C86  0E02               	movlw	2
  8627  000C88  6F76               	movwf	oled_putString@start_page& (0+255),b
  8628  000C8A  EC76  F028         	call	_oled_putString	;wreg free
  8629                           
  8630                           ;MOTEapp.c: 785: break;
  8631  000C8E  D06A               	goto	l527
  8632  000C90                     
  8633                           ;MOTEapp.c: 787: oled_putString("10",7,2);
  8634  000C90  0EE0               	movlw	low (STR_146+1)
  8635  000C92  0100               	movlb	0	; () banked
  8636  000C94  6F72               	movwf	oled_putString@string& (0+255),b
  8637  000C96  0E7F               	movlw	high (STR_146+1)
  8638  000C98  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8639  000C9A  5172               	movf	oled_putString@string& (0+255),w,b
  8640  000C9C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8641  000C9E  A4D8               	btfss	status,2,c
  8642  000CA0  0E00               	movlw	low (__mediumconst shr (0+16))
  8643  000CA2  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8644  000CA4  0E07               	movlw	7
  8645  000CA6  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8646  000CA8  0E02               	movlw	2
  8647  000CAA  6F76               	movwf	oled_putString@start_page& (0+255),b
  8648  000CAC  EC76  F028         	call	_oled_putString	;wreg free
  8649                           
  8650                           ;MOTEapp.c: 788: break;
  8651  000CB0  D059               	goto	l527
  8652  000CB2                     
  8653                           ;MOTEapp.c: 790: oled_putString("15",7,2);
  8654  000CB2  0EEC               	movlw	low (STR_147+1)
  8655  000CB4  0100               	movlb	0	; () banked
  8656  000CB6  6F72               	movwf	oled_putString@string& (0+255),b
  8657  000CB8  0E7F               	movlw	high (STR_147+1)
  8658  000CBA  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8659  000CBC  5172               	movf	oled_putString@string& (0+255),w,b
  8660  000CBE  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8661  000CC0  A4D8               	btfss	status,2,c
  8662  000CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  8663  000CC4  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8664  000CC6  0E07               	movlw	7
  8665  000CC8  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8666  000CCA  0E02               	movlw	2
  8667  000CCC  6F76               	movwf	oled_putString@start_page& (0+255),b
  8668  000CCE  EC76  F028         	call	_oled_putString	;wreg free
  8669                           
  8670                           ;MOTEapp.c: 791: break;
  8671  000CD2  D048               	goto	l527
  8672  000CD4                     
  8673                           ;MOTEapp.c: 793: oled_putString("30",7,2);
  8674  000CD4  0EE4               	movlw	low (STR_148+1)
  8675  000CD6  0100               	movlb	0	; () banked
  8676  000CD8  6F72               	movwf	oled_putString@string& (0+255),b
  8677  000CDA  0E7F               	movlw	high (STR_148+1)
  8678  000CDC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8679  000CDE  5172               	movf	oled_putString@string& (0+255),w,b
  8680  000CE0  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8681  000CE2  A4D8               	btfss	status,2,c
  8682  000CE4  0E00               	movlw	low (__mediumconst shr (0+16))
  8683  000CE6  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8684  000CE8  0E07               	movlw	7
  8685  000CEA  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8686  000CEC  0E02               	movlw	2
  8687  000CEE  6F76               	movwf	oled_putString@start_page& (0+255),b
  8688  000CF0  EC76  F028         	call	_oled_putString	;wreg free
  8689                           
  8690                           ;MOTEapp.c: 794: break;
  8691  000CF4  D037               	goto	l527
  8692  000CF6                     
  8693                           ;MOTEapp.c: 796: oled_putString("60",7,2);
  8694  000CF6  0EE8               	movlw	low (STR_149+1)
  8695  000CF8  0100               	movlb	0	; () banked
  8696  000CFA  6F72               	movwf	oled_putString@string& (0+255),b
  8697  000CFC  0E7F               	movlw	high (STR_149+1)
  8698  000CFE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8699  000D00  5172               	movf	oled_putString@string& (0+255),w,b
  8700  000D02  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8701  000D04  A4D8               	btfss	status,2,c
  8702  000D06  0E00               	movlw	low (__mediumconst shr (0+16))
  8703  000D08  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8704  000D0A  0E07               	movlw	7
  8705  000D0C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8706  000D0E  0E02               	movlw	2
  8707  000D10  6F76               	movwf	oled_putString@start_page& (0+255),b
  8708  000D12  EC76  F028         	call	_oled_putString	;wreg free
  8709                           
  8710                           ;MOTEapp.c: 797: break;
  8711  000D16  D026               	goto	l527
  8712  000D18                     
  8713                           ;MOTEapp.c: 799: oled_putString("OFF",7,2);
  8714  000D18  0EEF               	movlw	low STR_128
  8715  000D1A  0100               	movlb	0	; () banked
  8716  000D1C  6F72               	movwf	oled_putString@string& (0+255),b
  8717  000D1E  0E7F               	movlw	high STR_128
  8718  000D20  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8719  000D22  5172               	movf	oled_putString@string& (0+255),w,b
  8720  000D24  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8721  000D26  A4D8               	btfss	status,2,c
  8722  000D28  0E00               	movlw	low (__mediumconst shr (0+16))
  8723  000D2A  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8724  000D2C  0E07               	movlw	7
  8725  000D2E  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8726  000D30  0E02               	movlw	2
  8727  000D32  6F76               	movwf	oled_putString@start_page& (0+255),b
  8728  000D34  EC76  F028         	call	_oled_putString	;wreg free
  8729                           
  8730                           ;MOTEapp.c: 801: }
  8731                           
  8732                           ;MOTEapp.c: 800: break;
  8733  000D38  D015               	goto	l527
  8734  000D3A                     l524:
  8735  000D3A  0100               	movlb	0	; () banked
  8736  000D3C  51FE               	movf	_periodicUpValue& (0+255),w,b
  8737                           
  8738                           ; Switch size 1, requested type "space"
  8739                           ; Number of cases is 6, Range of values is 0 to 5
  8740                           ; switch strategies available:
  8741                           ; Name         Instructions Cycles
  8742                           ; simple_byte           19    10 (average)
  8743                           ;	Chosen strategy is simple_byte
  8744  000D3E  0A00               	xorlw	0	; case 0
  8745  000D40  B4D8               	btfsc	status,2,c
  8746  000D42  D795               	goto	l525
  8747  000D44  0A01               	xorlw	1	; case 1
  8748  000D46  B4D8               	btfsc	status,2,c
  8749  000D48  D7A3               	goto	l528
  8750  000D4A  0A03               	xorlw	3	; case 2
  8751  000D4C  B4D8               	btfsc	status,2,c
  8752  000D4E  D7B1               	goto	l529
  8753  000D50  0A01               	xorlw	1	; case 3
  8754  000D52  B4D8               	btfsc	status,2,c
  8755  000D54  D7BF               	goto	l530
  8756  000D56  0A07               	xorlw	7	; case 4
  8757  000D58  B4D8               	btfsc	status,2,c
  8758  000D5A  D7CD               	goto	l531
  8759  000D5C  0A01               	xorlw	1	; case 5
  8760  000D5E  B4D8               	btfsc	status,2,c
  8761  000D60  D7DB               	goto	l532
  8762  000D62  D785               	goto	l525
  8763  000D64                     l527:
  8764                           
  8765                           ;MOTEapp.c: 802: oled_putString("(NAV)    (CNG) ",0,3);
  8766                           
  8767                           ; BSR set to: 0
  8768  000D64  0E73               	movlw	low STR_114
  8769  000D66  0100               	movlb	0	; () banked
  8770  000D68  6F72               	movwf	oled_putString@string& (0+255),b
  8771  000D6A  0E7C               	movlw	high STR_114
  8772  000D6C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8773  000D6E  5172               	movf	oled_putString@string& (0+255),w,b
  8774  000D70  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8775  000D72  A4D8               	btfss	status,2,c
  8776  000D74  0E00               	movlw	low (__mediumconst shr (0+16))
  8777  000D76  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8778  000D78  0E00               	movlw	0
  8779  000D7A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8780  000D7C  0E03               	movlw	3
  8781  000D7E  6F76               	movwf	oled_putString@start_page& (0+255),b
  8782  000D80  EC76  F028         	call	_oled_putString	;wreg free
  8783                           
  8784                           ;MOTEapp.c: 803: runningState = runningPeriodicWakeUpLength;
  8785  000D84  0E0D               	movlw	13
  8786  000D86  0100               	movlb	0	; () banked
  8787  000D88  6FF3               	movwf	_runningState& (0+255),b
  8788                           
  8789                           ;MOTEapp.c: 804: }
  8790  000D8A  0012               	return	
  8791  000D8C                     l523:
  8792                           
  8793                           ; BSR set to: 0
  8794                           ;MOTEapp.c: 805: else if (selectButton)
  8795                           
  8796                           ; BSR set to: 0
  8797  000D8C  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8798  000D8E  B4D8               	btfsc	status,2,c
  8799  000D90  0012               	return	
  8800                           
  8801                           ; BSR set to: 0
  8802                           ;MOTEapp.c: 806: {
  8803                           ;MOTEapp.c: 807: if (menuTimeout)
  8804  000D92  51FB               	movf	_menuTimeout& (0+255),w,b
  8805  000D94  B4D8               	btfsc	status,2,c
  8806  000D96  D012               	goto	l535
  8807                           
  8808                           ; BSR set to: 0
  8809                           ;MOTEapp.c: 808: {
  8810                           ;MOTEapp.c: 809: menuTimeout = 0;
  8811  000D98  0E00               	movlw	0
  8812  000D9A  6FFB               	movwf	_menuTimeout& (0+255),b
  8813                           
  8814                           ; BSR set to: 0
  8815                           ;MOTEapp.c: 810: oled_putString("    Disabled  ", 0,2);
  8816  000D9C  0EE2               	movlw	low STR_113
  8817  000D9E  6F72               	movwf	oled_putString@string& (0+255),b
  8818  000DA0  0E7C               	movlw	high STR_113
  8819  000DA2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8820  000DA4  5172               	movf	oled_putString@string& (0+255),w,b
  8821  000DA6  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8822  000DA8  A4D8               	btfss	status,2,c
  8823  000DAA  0E00               	movlw	low (__mediumconst shr (0+16))
  8824  000DAC  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8825  000DAE  0E00               	movlw	0
  8826  000DB0  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8827  000DB2  0E02               	movlw	2
  8828  000DB4  6F76               	movwf	oled_putString@start_page& (0+255),b
  8829  000DB6  EC76  F028         	call	_oled_putString	;wreg free
  8830                           
  8831                           ;MOTEapp.c: 811: }
  8832  000DBA  0012               	return	
  8833  000DBC                     l535:
  8834                           
  8835                           ;MOTEapp.c: 812: else
  8836                           ;MOTEapp.c: 813: {
  8837                           ;MOTEapp.c: 814: menuTimeout = 1;
  8838  000DBC  0E01               	movlw	1
  8839  000DBE  0100               	movlb	0	; () banked
  8840  000DC0  6FFB               	movwf	_menuTimeout& (0+255),b
  8841                           
  8842                           ; BSR set to: 0
  8843                           ;MOTEapp.c: 815: oled_putString("    Enabled   ", 0,2);
  8844  000DC2  0ED3               	movlw	low STR_112
  8845  000DC4  6F72               	movwf	oled_putString@string& (0+255),b
  8846  000DC6  0E7C               	movlw	high STR_112
  8847  000DC8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8848  000DCA  5172               	movf	oled_putString@string& (0+255),w,b
  8849  000DCC  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8850  000DCE  A4D8               	btfss	status,2,c
  8851  000DD0  0E00               	movlw	low (__mediumconst shr (0+16))
  8852  000DD2  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8853  000DD4  0E00               	movlw	0
  8854  000DD6  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8855  000DD8  0E02               	movlw	2
  8856  000DDA  6F76               	movwf	oled_putString@start_page& (0+255),b
  8857  000DDC  EC76  F028         	call	_oled_putString	;wreg free
  8858                           
  8859                           ;MOTEapp.c: 816: }
  8860                           ;MOTEapp.c: 817: }
  8861                           ;MOTEapp.c: 818: break;
  8862  000DE0  0012               	return	
  8863  000DE2                     
  8864                           ;MOTEapp.c: 821: if ( (changeStates) || (selectButton) )
  8865  000DE2  0100               	movlb	0	; () banked
  8866  000DE4  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8867  000DE6  A4D8               	btfss	status,2,c
  8868  000DE8  D003               	goto	u9780
  8869                           
  8870                           ; BSR set to: 0
  8871  000DEA  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8872  000DEC  B4D8               	btfsc	status,2,c
  8873  000DEE  0012               	return	
  8874  000DF0                     u9780:
  8875                           
  8876                           ; BSR set to: 0
  8877                           ;MOTEapp.c: 822: {
  8878                           ;MOTEapp.c: 823: oled_clear();
  8879                           
  8880                           ; BSR set to: 0
  8881  000DF0  ECF0  F02F         	call	_oled_clear	;wreg free
  8882                           
  8883                           ;MOTEapp.c: 824: oled_putString("  Sensor Data  ",0,0);
  8884  000DF4  0E63               	movlw	low STR_102
  8885  000DF6  0100               	movlb	0	; () banked
  8886  000DF8  6F72               	movwf	oled_putString@string& (0+255),b
  8887  000DFA  0E7C               	movlw	high STR_102
  8888  000DFC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8889  000DFE  5172               	movf	oled_putString@string& (0+255),w,b
  8890  000E00  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8891  000E02  A4D8               	btfss	status,2,c
  8892  000E04  0E00               	movlw	low (__mediumconst shr (0+16))
  8893  000E06  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8894  000E08  0E00               	movlw	0
  8895  000E0A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8896  000E0C  0E00               	movlw	0
  8897  000E0E  6F76               	movwf	oled_putString@start_page& (0+255),b
  8898  000E10  EC76  F028         	call	_oled_putString	;wreg free
  8899                           
  8900                           ;MOTEapp.c: 825: oled_putString("    Display    ",0,1);
  8901  000E14  0E53               	movlw	low STR_103
  8902  000E16  0100               	movlb	0	; () banked
  8903  000E18  6F72               	movwf	oled_putString@string& (0+255),b
  8904  000E1A  0E7C               	movlw	high STR_103
  8905  000E1C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8906  000E1E  5172               	movf	oled_putString@string& (0+255),w,b
  8907  000E20  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8908  000E22  A4D8               	btfss	status,2,c
  8909  000E24  0E00               	movlw	low (__mediumconst shr (0+16))
  8910  000E26  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8911  000E28  0E00               	movlw	0
  8912  000E2A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8913  000E2C  0E01               	movlw	1
  8914  000E2E  6F76               	movwf	oled_putString@start_page& (0+255),b
  8915  000E30  EC76  F028         	call	_oled_putString	;wreg free
  8916                           
  8917                           ;MOTEapp.c: 826: oled_putString("(NAV)    (SEL) ",0,3);
  8918  000E34  0E83               	movlw	low STR_77
  8919  000E36  0100               	movlb	0	; () banked
  8920  000E38  6F72               	movwf	oled_putString@string& (0+255),b
  8921  000E3A  0E7C               	movlw	high STR_77
  8922  000E3C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8923  000E3E  5172               	movf	oled_putString@string& (0+255),w,b
  8924  000E40  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8925  000E42  A4D8               	btfss	status,2,c
  8926  000E44  0E00               	movlw	low (__mediumconst shr (0+16))
  8927  000E46  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8928  000E48  0E00               	movlw	0
  8929  000E4A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8930  000E4C  0E03               	movlw	3
  8931  000E4E  6F76               	movwf	oled_putString@start_page& (0+255),b
  8932  000E50  EC76  F028         	call	_oled_putString	;wreg free
  8933                           
  8934                           ;MOTEapp.c: 827: runningState = runningSensor;
  8935  000E54  0E01               	movlw	1
  8936  000E56  0100               	movlb	0	; () banked
  8937  000E58  6FF3               	movwf	_runningState& (0+255),b
  8938                           
  8939                           ; BSR set to: 0
  8940                           ;MOTEapp.c: 828: }
  8941                           ;MOTEapp.c: 829: break;
  8942  000E5A  0012               	return	
  8943  000E5C                     
  8944                           ; BSR set to: 0
  8945                           ;MOTEapp.c: 831: if (changeStates)
  8946                           
  8947                           ; BSR set to: 0
  8948  000E5C  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8949  000E5E  B4D8               	btfsc	status,2,c
  8950  000E60  D0C4               	goto	l546
  8951                           
  8952                           ; BSR set to: 0
  8953                           ;MOTEapp.c: 832: {
  8954                           ;MOTEapp.c: 833: oled_clear();
  8955  000E62  ECF0  F02F         	call	_oled_clear	;wreg free
  8956                           
  8957                           ;MOTEapp.c: 834: oled_putString("Select Data Rate",0,0);
  8958  000E66  0EED               	movlw	low STR_135
  8959  000E68  0100               	movlb	0	; () banked
  8960  000E6A  6F72               	movwf	oled_putString@string& (0+255),b
  8961  000E6C  0E7B               	movlw	high STR_135
  8962  000E6E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8963  000E70  5172               	movf	oled_putString@string& (0+255),w,b
  8964  000E72  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8965  000E74  A4D8               	btfss	status,2,c
  8966  000E76  0E00               	movlw	low (__mediumconst shr (0+16))
  8967  000E78  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8968  000E7A  0E00               	movlw	0
  8969  000E7C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8970  000E7E  0E00               	movlw	0
  8971  000E80  6F76               	movwf	oled_putString@start_page& (0+255),b
  8972  000E82  EC76  F028         	call	_oled_putString	;wreg free
  8973                           
  8974                           ;MOTEapp.c: 835: oled_putString("Data Rate: ",0,2);
  8975  000E86  0E58               	movlw	low STR_136
  8976  000E88  0100               	movlb	0	; () banked
  8977  000E8A  6F72               	movwf	oled_putString@string& (0+255),b
  8978  000E8C  0E7E               	movlw	high STR_136
  8979  000E8E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8980  000E90  5172               	movf	oled_putString@string& (0+255),w,b
  8981  000E92  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8982  000E94  A4D8               	btfss	status,2,c
  8983  000E96  0E00               	movlw	low (__mediumconst shr (0+16))
  8984  000E98  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  8985  000E9A  0E00               	movlw	0
  8986  000E9C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  8987  000E9E  0E02               	movlw	2
  8988  000EA0  6F76               	movwf	oled_putString@start_page& (0+255),b
  8989  000EA2  EC76  F028         	call	_oled_putString	;wreg free
  8990                           
  8991                           ;MOTEapp.c: 836: oled_putString("(NAV)    (CNG) ",0,3);
  8992  000EA6  0E73               	movlw	low STR_114
  8993  000EA8  0100               	movlb	0	; () banked
  8994  000EAA  6F72               	movwf	oled_putString@string& (0+255),b
  8995  000EAC  0E7C               	movlw	high STR_114
  8996  000EAE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  8997  000EB0  5172               	movf	oled_putString@string& (0+255),w,b
  8998  000EB2  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  8999  000EB4  A4D8               	btfss	status,2,c
  9000  000EB6  0E00               	movlw	low (__mediumconst shr (0+16))
  9001  000EB8  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9002  000EBA  0E00               	movlw	0
  9003  000EBC  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9004  000EBE  0E03               	movlw	3
  9005  000EC0  6F76               	movwf	oled_putString@start_page& (0+255),b
  9006  000EC2  EC76  F028         	call	_oled_putString	;wreg free
  9007                           
  9008                           ;MOTEapp.c: 837: runningState = runningDataRateDisplay;
  9009  000EC6  0E03               	movlw	3
  9010  000EC8  0100               	movlb	0	; () banked
  9011  000ECA  6FF3               	movwf	_runningState& (0+255),b
  9012                           
  9013                           ;MOTEapp.c: 840: switch (dataRateValue)
  9014  000ECC  D076               	goto	l543
  9015  000ECE                     
  9016                           ; BSR set to: 0
  9017                           ;MOTEapp.c: 844: oled_putString(" 0 ",10,2);
  9018                           
  9019                           ; BSR set to: 0
  9020                           
  9021                           ;MOTEapp.c: 843: case 0:
  9022                           
  9023                           ; BSR set to: 0
  9024  000ECE  0EC7               	movlw	low STR_138
  9025  000ED0  6F72               	movwf	oled_putString@string& (0+255),b
  9026  000ED2  0E7F               	movlw	high STR_138
  9027  000ED4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9028  000ED6  5172               	movf	oled_putString@string& (0+255),w,b
  9029  000ED8  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9030  000EDA  A4D8               	btfss	status,2,c
  9031  000EDC  0E00               	movlw	low (__mediumconst shr (0+16))
  9032  000EDE  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9033  000EE0  0E0A               	movlw	10
  9034  000EE2  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9035  000EE4  0E02               	movlw	2
  9036  000EE6  6F76               	movwf	oled_putString@start_page& (0+255),b
  9037  000EE8  EC76  F028         	call	_oled_putString	;wreg free
  9038                           
  9039                           ;MOTEapp.c: 845: break;
  9040  000EEC  D07E               	goto	l546
  9041  000EEE                     
  9042                           ;MOTEapp.c: 847: oled_putString(" 1 ",10,2);
  9043  000EEE  0ECB               	movlw	low STR_139
  9044  000EF0  0100               	movlb	0	; () banked
  9045  000EF2  6F72               	movwf	oled_putString@string& (0+255),b
  9046  000EF4  0E7F               	movlw	high STR_139
  9047  000EF6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9048  000EF8  5172               	movf	oled_putString@string& (0+255),w,b
  9049  000EFA  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9050  000EFC  A4D8               	btfss	status,2,c
  9051  000EFE  0E00               	movlw	low (__mediumconst shr (0+16))
  9052  000F00  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9053  000F02  0E0A               	movlw	10
  9054  000F04  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9055  000F06  0E02               	movlw	2
  9056  000F08  6F76               	movwf	oled_putString@start_page& (0+255),b
  9057  000F0A  EC76  F028         	call	_oled_putString	;wreg free
  9058                           
  9059                           ;MOTEapp.c: 848: break;
  9060  000F0E  D06D               	goto	l546
  9061  000F10                     
  9062                           ;MOTEapp.c: 850: oled_putString(" 2 ",10,2);
  9063  000F10  0ECF               	movlw	low STR_140
  9064  000F12  0100               	movlb	0	; () banked
  9065  000F14  6F72               	movwf	oled_putString@string& (0+255),b
  9066  000F16  0E7F               	movlw	high STR_140
  9067  000F18  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9068  000F1A  5172               	movf	oled_putString@string& (0+255),w,b
  9069  000F1C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9070  000F1E  A4D8               	btfss	status,2,c
  9071  000F20  0E00               	movlw	low (__mediumconst shr (0+16))
  9072  000F22  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9073  000F24  0E0A               	movlw	10
  9074  000F26  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9075  000F28  0E02               	movlw	2
  9076  000F2A  6F76               	movwf	oled_putString@start_page& (0+255),b
  9077  000F2C  EC76  F028         	call	_oled_putString	;wreg free
  9078                           
  9079                           ;MOTEapp.c: 851: break;
  9080  000F30  D05C               	goto	l546
  9081  000F32                     
  9082                           ;MOTEapp.c: 853: oled_putString(" 3 ",10,2);
  9083  000F32  0ED3               	movlw	low STR_141
  9084  000F34  0100               	movlb	0	; () banked
  9085  000F36  6F72               	movwf	oled_putString@string& (0+255),b
  9086  000F38  0E7F               	movlw	high STR_141
  9087  000F3A  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9088  000F3C  5172               	movf	oled_putString@string& (0+255),w,b
  9089  000F3E  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9090  000F40  A4D8               	btfss	status,2,c
  9091  000F42  0E00               	movlw	low (__mediumconst shr (0+16))
  9092  000F44  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9093  000F46  0E0A               	movlw	10
  9094  000F48  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9095  000F4A  0E02               	movlw	2
  9096  000F4C  6F76               	movwf	oled_putString@start_page& (0+255),b
  9097  000F4E  EC76  F028         	call	_oled_putString	;wreg free
  9098                           
  9099                           ;MOTEapp.c: 854: break;
  9100  000F52  D04B               	goto	l546
  9101  000F54                     
  9102                           ;MOTEapp.c: 856: oled_putString(" 4 ",10,2);
  9103  000F54  0ED7               	movlw	low STR_142
  9104  000F56  0100               	movlb	0	; () banked
  9105  000F58  6F72               	movwf	oled_putString@string& (0+255),b
  9106  000F5A  0E7F               	movlw	high STR_142
  9107  000F5C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9108  000F5E  5172               	movf	oled_putString@string& (0+255),w,b
  9109  000F60  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9110  000F62  A4D8               	btfss	status,2,c
  9111  000F64  0E00               	movlw	low (__mediumconst shr (0+16))
  9112  000F66  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9113  000F68  0E0A               	movlw	10
  9114  000F6A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9115  000F6C  0E02               	movlw	2
  9116  000F6E  6F76               	movwf	oled_putString@start_page& (0+255),b
  9117  000F70  EC76  F028         	call	_oled_putString	;wreg free
  9118                           
  9119                           ;MOTEapp.c: 857: break;
  9120  000F74  D03A               	goto	l546
  9121  000F76                     
  9122                           ;MOTEapp.c: 859: oled_putString(" 5 ",10,2);
  9123  000F76  0EDB               	movlw	low STR_143
  9124  000F78  0100               	movlb	0	; () banked
  9125  000F7A  6F72               	movwf	oled_putString@string& (0+255),b
  9126  000F7C  0E7F               	movlw	high STR_143
  9127  000F7E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9128  000F80  5172               	movf	oled_putString@string& (0+255),w,b
  9129  000F82  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9130  000F84  A4D8               	btfss	status,2,c
  9131  000F86  0E00               	movlw	low (__mediumconst shr (0+16))
  9132  000F88  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9133  000F8A  0E0A               	movlw	10
  9134  000F8C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9135  000F8E  0E02               	movlw	2
  9136  000F90  6F76               	movwf	oled_putString@start_page& (0+255),b
  9137  000F92  EC76  F028         	call	_oled_putString	;wreg free
  9138                           
  9139                           ;MOTEapp.c: 860: break;
  9140  000F96  D029               	goto	l546
  9141  000F98                     
  9142                           ;MOTEapp.c: 862: oled_putString("ADR",10,2);
  9143  000F98  0EF3               	movlw	low STR_144
  9144  000F9A  0100               	movlb	0	; () banked
  9145  000F9C  6F72               	movwf	oled_putString@string& (0+255),b
  9146  000F9E  0E7F               	movlw	high STR_144
  9147  000FA0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9148  000FA2  5172               	movf	oled_putString@string& (0+255),w,b
  9149  000FA4  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9150  000FA6  A4D8               	btfss	status,2,c
  9151  000FA8  0E00               	movlw	low (__mediumconst shr (0+16))
  9152  000FAA  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9153  000FAC  0E0A               	movlw	10
  9154  000FAE  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9155  000FB0  0E02               	movlw	2
  9156  000FB2  6F76               	movwf	oled_putString@start_page& (0+255),b
  9157  000FB4  EC76  F028         	call	_oled_putString	;wreg free
  9158                           
  9159                           ;MOTEapp.c: 864: }
  9160                           
  9161                           ;MOTEapp.c: 863: break;
  9162  000FB8  D018               	goto	l546
  9163  000FBA                     l543:
  9164  000FBA  0100               	movlb	0	; () banked
  9165  000FBC  51FC               	movf	_dataRateValue& (0+255),w,b
  9166                           
  9167                           ; Switch size 1, requested type "space"
  9168                           ; Number of cases is 7, Range of values is 0 to 6
  9169                           ; switch strategies available:
  9170                           ; Name         Instructions Cycles
  9171                           ; simple_byte           22    12 (average)
  9172                           ;	Chosen strategy is simple_byte
  9173  000FBE  0A00               	xorlw	0	; case 0
  9174  000FC0  B4D8               	btfsc	status,2,c
  9175  000FC2  D785               	goto	l544
  9176  000FC4  0A01               	xorlw	1	; case 1
  9177  000FC6  B4D8               	btfsc	status,2,c
  9178  000FC8  D792               	goto	l547
  9179  000FCA  0A03               	xorlw	3	; case 2
  9180  000FCC  B4D8               	btfsc	status,2,c
  9181  000FCE  D7A0               	goto	l548
  9182  000FD0  0A01               	xorlw	1	; case 3
  9183  000FD2  B4D8               	btfsc	status,2,c
  9184  000FD4  D7AE               	goto	l549
  9185  000FD6  0A07               	xorlw	7	; case 4
  9186  000FD8  B4D8               	btfsc	status,2,c
  9187  000FDA  D7BC               	goto	l550
  9188  000FDC  0A01               	xorlw	1	; case 5
  9189  000FDE  B4D8               	btfsc	status,2,c
  9190  000FE0  D7CA               	goto	l551
  9191  000FE2  0A03               	xorlw	3	; case 6
  9192  000FE4  B4D8               	btfsc	status,2,c
  9193  000FE6  D7D8               	goto	l552
  9194  000FE8  D772               	goto	l544
  9195  000FEA                     l546:
  9196                           
  9197                           ;MOTEapp.c: 865: }
  9198                           ;MOTEapp.c: 866: if (selectButton)
  9199                           
  9200                           ; BSR set to: 0
  9201                           
  9202                           ; BSR set to: 0
  9203  000FEA  0100               	movlb	0	; () banked
  9204  000FEC  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9205  000FEE  B4D8               	btfsc	status,2,c
  9206  000FF0  0012               	return	
  9207                           
  9208                           ; BSR set to: 0
  9209                           ;MOTEapp.c: 867: {
  9210                           ;MOTEapp.c: 868: if (periodicUpValue < 5)
  9211  000FF2  0E05               	movlw	5
  9212  000FF4  61FE               	cpfslt	_periodicUpValue& (0+255),b
  9213  000FF6  D002               	goto	l554
  9214                           
  9215                           ; BSR set to: 0
  9216                           ;MOTEapp.c: 869: {
  9217                           ;MOTEapp.c: 870: periodicUpValue++;
  9218  000FF8  2BFE               	incf	_periodicUpValue& (0+255),f,b
  9219                           
  9220                           ;MOTEapp.c: 871: } else {
  9221  000FFA  D072               	goto	l556
  9222  000FFC                     l554:
  9223                           
  9224                           ; BSR set to: 0
  9225                           ;MOTEapp.c: 872: periodicUpValue = 0;
  9226                           
  9227                           ; BSR set to: 0
  9228  000FFC  0E00               	movlw	0
  9229  000FFE  6FFE               	movwf	_periodicUpValue& (0+255),b
  9230                           
  9231                           ; BSR set to: 0
  9232                           ;MOTEapp.c: 873: }
  9233                           ;MOTEapp.c: 875: switch (periodicUpValue)
  9234  001000  D06F               	goto	l556
  9235  001002                     
  9236                           ; BSR set to: 0
  9237                           ;MOTEapp.c: 879: periodicTimerValue = 9;
  9238                           
  9239                           ; BSR set to: 0
  9240                           
  9241                           ;MOTEapp.c: 878: case 0:
  9242                           
  9243                           ; BSR set to: 0
  9244  001002  0E09               	movlw	9
  9245  001004  6FFD               	movwf	_periodicTimerValue& (0+255),b
  9246                           
  9247                           ; BSR set to: 0
  9248                           ;MOTEapp.c: 880: oled_putString(" 5 ",7,2);
  9249  001006  0EDB               	movlw	low STR_143
  9250  001008  6F72               	movwf	oled_putString@string& (0+255),b
  9251  00100A  0E7F               	movlw	high STR_143
  9252  00100C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9253  00100E  5172               	movf	oled_putString@string& (0+255),w,b
  9254  001010  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9255  001012  A4D8               	btfss	status,2,c
  9256  001014  0E00               	movlw	low (__mediumconst shr (0+16))
  9257  001016  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9258  001018  0E07               	movlw	7
  9259  00101A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9260  00101C  0E02               	movlw	2
  9261  00101E  6F76               	movwf	oled_putString@start_page& (0+255),b
  9262  001020  EC76  F028         	call	_oled_putString	;wreg free
  9263                           
  9264                           ;MOTEapp.c: 881: break;
  9265  001024  0012               	return	
  9266  001026                     
  9267                           ;MOTEapp.c: 883: periodicTimerValue = 18;
  9268  001026  0E12               	movlw	18
  9269  001028  0100               	movlb	0	; () banked
  9270  00102A  6FFD               	movwf	_periodicTimerValue& (0+255),b
  9271                           
  9272                           ; BSR set to: 0
  9273                           ;MOTEapp.c: 884: oled_putString(" 10",7,2);
  9274  00102C  0EDF               	movlw	low STR_146
  9275  00102E  6F72               	movwf	oled_putString@string& (0+255),b
  9276  001030  0E7F               	movlw	high STR_146
  9277  001032  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9278  001034  5172               	movf	oled_putString@string& (0+255),w,b
  9279  001036  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9280  001038  A4D8               	btfss	status,2,c
  9281  00103A  0E00               	movlw	low (__mediumconst shr (0+16))
  9282  00103C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9283  00103E  0E07               	movlw	7
  9284  001040  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9285  001042  0E02               	movlw	2
  9286  001044  6F76               	movwf	oled_putString@start_page& (0+255),b
  9287  001046  EC76  F028         	call	_oled_putString	;wreg free
  9288                           
  9289                           ;MOTEapp.c: 885: break;
  9290  00104A  0012               	return	
  9291  00104C                     
  9292                           ;MOTEapp.c: 887: periodicTimerValue = 27;
  9293  00104C  0E1B               	movlw	27
  9294  00104E  0100               	movlb	0	; () banked
  9295  001050  6FFD               	movwf	_periodicTimerValue& (0+255),b
  9296                           
  9297                           ; BSR set to: 0
  9298                           ;MOTEapp.c: 888: oled_putString(" 15",7,2);
  9299  001052  0EEB               	movlw	low STR_147
  9300  001054  6F72               	movwf	oled_putString@string& (0+255),b
  9301  001056  0E7F               	movlw	high STR_147
  9302  001058  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9303  00105A  5172               	movf	oled_putString@string& (0+255),w,b
  9304  00105C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9305  00105E  A4D8               	btfss	status,2,c
  9306  001060  0E00               	movlw	low (__mediumconst shr (0+16))
  9307  001062  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9308  001064  0E07               	movlw	7
  9309  001066  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9310  001068  0E02               	movlw	2
  9311  00106A  6F76               	movwf	oled_putString@start_page& (0+255),b
  9312  00106C  EC76  F028         	call	_oled_putString	;wreg free
  9313                           
  9314                           ;MOTEapp.c: 889: break;
  9315  001070  0012               	return	
  9316  001072                     
  9317                           ;MOTEapp.c: 891: periodicTimerValue = 54;
  9318  001072  0E36               	movlw	54
  9319  001074  0100               	movlb	0	; () banked
  9320  001076  6FFD               	movwf	_periodicTimerValue& (0+255),b
  9321                           
  9322                           ; BSR set to: 0
  9323                           ;MOTEapp.c: 892: oled_putString(" 30",7,2);
  9324  001078  0EE3               	movlw	low STR_148
  9325  00107A  6F72               	movwf	oled_putString@string& (0+255),b
  9326  00107C  0E7F               	movlw	high STR_148
  9327  00107E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9328  001080  5172               	movf	oled_putString@string& (0+255),w,b
  9329  001082  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9330  001084  A4D8               	btfss	status,2,c
  9331  001086  0E00               	movlw	low (__mediumconst shr (0+16))
  9332  001088  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9333  00108A  0E07               	movlw	7
  9334  00108C  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9335  00108E  0E02               	movlw	2
  9336  001090  6F76               	movwf	oled_putString@start_page& (0+255),b
  9337  001092  EC76  F028         	call	_oled_putString	;wreg free
  9338                           
  9339                           ;MOTEapp.c: 893: break;
  9340  001096  0012               	return	
  9341  001098                     
  9342                           ;MOTEapp.c: 895: periodicTimerValue = 108;
  9343  001098  0E6C               	movlw	108
  9344  00109A  0100               	movlb	0	; () banked
  9345  00109C  6FFD               	movwf	_periodicTimerValue& (0+255),b
  9346                           
  9347                           ; BSR set to: 0
  9348                           ;MOTEapp.c: 896: oled_putString(" 60",7,2);
  9349  00109E  0EE7               	movlw	low STR_149
  9350  0010A0  6F72               	movwf	oled_putString@string& (0+255),b
  9351  0010A2  0E7F               	movlw	high STR_149
  9352  0010A4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9353  0010A6  5172               	movf	oled_putString@string& (0+255),w,b
  9354  0010A8  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9355  0010AA  A4D8               	btfss	status,2,c
  9356  0010AC  0E00               	movlw	low (__mediumconst shr (0+16))
  9357  0010AE  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9358  0010B0  0E07               	movlw	7
  9359  0010B2  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9360  0010B4  0E02               	movlw	2
  9361  0010B6  6F76               	movwf	oled_putString@start_page& (0+255),b
  9362  0010B8  EC76  F028         	call	_oled_putString	;wreg free
  9363                           
  9364                           ;MOTEapp.c: 897: break;
  9365  0010BC  0012               	return	
  9366  0010BE                     l564:
  9367                           
  9368                           ; BSR set to: 0
  9369                           ;MOTEapp.c: 899: periodicTimerValue = 255;
  9370  0010BE  69FD               	setf	_periodicTimerValue& (0+255),b
  9371                           
  9372                           ; BSR set to: 0
  9373                           ;MOTEapp.c: 900: oled_putString("OFF",7,2);
  9374  0010C0  0EEF               	movlw	low STR_128
  9375  0010C2  6F72               	movwf	oled_putString@string& (0+255),b
  9376  0010C4  0E7F               	movlw	high STR_128
  9377  0010C6  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9378  0010C8  5172               	movf	oled_putString@string& (0+255),w,b
  9379  0010CA  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9380  0010CC  A4D8               	btfss	status,2,c
  9381  0010CE  0E00               	movlw	low (__mediumconst shr (0+16))
  9382  0010D0  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9383  0010D2  0E07               	movlw	7
  9384  0010D4  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9385  0010D6  0E02               	movlw	2
  9386  0010D8  6F76               	movwf	oled_putString@start_page& (0+255),b
  9387  0010DA  EC76  F028         	call	_oled_putString	;wreg free
  9388                           
  9389                           ;MOTEapp.c: 902: }
  9390                           
  9391                           ;MOTEapp.c: 901: break;
  9392  0010DE  0012               	return	
  9393  0010E0                     l556:
  9394  0010E0  0100               	movlb	0	; () banked
  9395  0010E2  51FE               	movf	_periodicUpValue& (0+255),w,b
  9396                           
  9397                           ; Switch size 1, requested type "space"
  9398                           ; Number of cases is 6, Range of values is 0 to 5
  9399                           ; switch strategies available:
  9400                           ; Name         Instructions Cycles
  9401                           ; simple_byte           19    10 (average)
  9402                           ;	Chosen strategy is simple_byte
  9403  0010E4  0A00               	xorlw	0	; case 0
  9404  0010E6  B4D8               	btfsc	status,2,c
  9405  0010E8  D78C               	goto	l557
  9406  0010EA  0A01               	xorlw	1	; case 1
  9407  0010EC  B4D8               	btfsc	status,2,c
  9408  0010EE  D79B               	goto	l560
  9409  0010F0  0A03               	xorlw	3	; case 2
  9410  0010F2  B4D8               	btfsc	status,2,c
  9411  0010F4  D7AB               	goto	l561
  9412  0010F6  0A01               	xorlw	1	; case 3
  9413  0010F8  B4D8               	btfsc	status,2,c
  9414  0010FA  D7BB               	goto	l562
  9415  0010FC  0A07               	xorlw	7	; case 4
  9416  0010FE  B4D8               	btfsc	status,2,c
  9417  001100  D7CB               	goto	l563
  9418  001102  0A01               	xorlw	1	; case 5
  9419  001104  B4D8               	btfsc	status,2,c
  9420  001106  D7DB               	goto	l564
  9421  001108  D77C               	goto	l557
  9422  00110A                     
  9423                           ; BSR set to: 0
  9424                           ;MOTEapp.c: 906: if (changeStates)
  9425                           
  9426                           ; BSR set to: 0
  9427  00110A  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  9428  00110C  B4D8               	btfsc	status,2,c
  9429  00110E  D028               	goto	l566
  9430                           
  9431                           ; BSR set to: 0
  9432                           ;MOTEapp.c: 907: {
  9433                           ;MOTEapp.c: 909: MOTEapp_SetDataRateSetting(dataRateValue);
  9434  001110  51FC               	movf	_dataRateValue& (0+255),w,b
  9435  001112  ECBE  F013         	call	_MOTEapp_SetDataRateSetting
  9436                           
  9437                           ;MOTEapp.c: 911: oled_clear();
  9438  001116  ECF0  F02F         	call	_oled_clear	;wreg free
  9439                           
  9440                           ;MOTEapp.c: 912: oled_putString("Enter Sleep Mode",0,0);
  9441  00111A  0ECB               	movlw	low STR_151
  9442  00111C  0100               	movlb	0	; () banked
  9443  00111E  6F72               	movwf	oled_putString@string& (0+255),b
  9444  001120  0E7B               	movlw	high STR_151
  9445  001122  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9446  001124  5172               	movf	oled_putString@string& (0+255),w,b
  9447  001126  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9448  001128  A4D8               	btfss	status,2,c
  9449  00112A  0E00               	movlw	low (__mediumconst shr (0+16))
  9450  00112C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9451  00112E  0E00               	movlw	0
  9452  001130  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9453  001132  0E00               	movlw	0
  9454  001134  6F76               	movwf	oled_putString@start_page& (0+255),b
  9455  001136  EC76  F028         	call	_oled_putString	;wreg free
  9456                           
  9457                           ;MOTEapp.c: 913: oled_putString("(NAV)    (SLP) ",0,3);
  9458  00113A  0E93               	movlw	low STR_152
  9459  00113C  0100               	movlb	0	; () banked
  9460  00113E  6F72               	movwf	oled_putString@string& (0+255),b
  9461  001140  0E7C               	movlw	high STR_152
  9462  001142  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9463  001144  5172               	movf	oled_putString@string& (0+255),w,b
  9464  001146  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9465  001148  A4D8               	btfss	status,2,c
  9466  00114A  0E00               	movlw	low (__mediumconst shr (0+16))
  9467  00114C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9468  00114E  0E00               	movlw	0
  9469  001150  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9470  001152  0E03               	movlw	3
  9471  001154  6F76               	movwf	oled_putString@start_page& (0+255),b
  9472  001156  EC76  F028         	call	_oled_putString	;wreg free
  9473                           
  9474                           ;MOTEapp.c: 914: runningState = runningSleep;
  9475  00115A  0E0F               	movlw	15
  9476  00115C  0100               	movlb	0	; () banked
  9477  00115E  6FF3               	movwf	_runningState& (0+255),b
  9478  001160                     l566:
  9479                           
  9480                           ; BSR set to: 0
  9481                           ;MOTEapp.c: 915: }
  9482                           ;MOTEapp.c: 916: if (selectButton)
  9483                           
  9484                           ; BSR set to: 0
  9485  001160  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9486  001162  B4D8               	btfsc	status,2,c
  9487  001164  0012               	return	
  9488                           
  9489                           ; BSR set to: 0
  9490                           ;MOTEapp.c: 917: {
  9491                           ;MOTEapp.c: 918: if (dataRateValue < 6)
  9492  001166  0E06               	movlw	6
  9493  001168  61FC               	cpfslt	_dataRateValue& (0+255),b
  9494  00116A  D00A               	goto	l568
  9495                           
  9496                           ; BSR set to: 0
  9497                           ;MOTEapp.c: 919: {
  9498                           ;MOTEapp.c: 920: if ((rnModule == rn2903) && (dataRateValue > 3))
  9499  00116C  05EE               	decf	_rnModule& (0+255),w,b
  9500  00116E  A4D8               	btfss	status,2,c
  9501  001170  D005               	goto	l569
  9502                           
  9503                           ; BSR set to: 0
  9504  001172  0E03               	movlw	3
  9505  001174  65FC               	cpfsgt	_dataRateValue& (0+255),b
  9506  001176  D002               	goto	l569
  9507                           
  9508                           ; BSR set to: 0
  9509                           ;MOTEapp.c: 921: dataRateValue = 6;
  9510  001178  0E06               	movlw	6
  9511  00117A  D003               	goto	L5
  9512  00117C                     l569:
  9513                           
  9514                           ; BSR set to: 0
  9515                           ;MOTEapp.c: 922: else
  9516                           ;MOTEapp.c: 923: dataRateValue++;
  9517                           
  9518                           ; BSR set to: 0
  9519  00117C  2BFC               	incf	_dataRateValue& (0+255),f,b
  9520                           
  9521                           ; BSR set to: 0
  9522                           ;MOTEapp.c: 924: }
  9523  00117E  D079               	goto	l572
  9524  001180                     l568:
  9525                           
  9526                           ; BSR set to: 0
  9527                           ;MOTEapp.c: 925: else {
  9528                           ;MOTEapp.c: 926: dataRateValue = 0;
  9529                           
  9530                           ; BSR set to: 0
  9531  001180  0E00               	movlw	0
  9532  001182                     L5:
  9533  001182  6FFC               	movwf	_dataRateValue& (0+255),b
  9534                           
  9535                           ; BSR set to: 0
  9536                           ;MOTEapp.c: 927: }
  9537                           ;MOTEapp.c: 929: switch (dataRateValue)
  9538  001184  D076               	goto	l572
  9539  001186                     
  9540                           ; BSR set to: 0
  9541                           ;MOTEapp.c: 933: oled_putString(" 0 ",10,2);
  9542                           
  9543                           ; BSR set to: 0
  9544                           
  9545                           ;MOTEapp.c: 932: case 0:
  9546                           
  9547                           ; BSR set to: 0
  9548  001186  0EC7               	movlw	low STR_138
  9549  001188  6F72               	movwf	oled_putString@string& (0+255),b
  9550  00118A  0E7F               	movlw	high STR_138
  9551  00118C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9552  00118E  5172               	movf	oled_putString@string& (0+255),w,b
  9553  001190  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9554  001192  A4D8               	btfss	status,2,c
  9555  001194  0E00               	movlw	low (__mediumconst shr (0+16))
  9556  001196  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9557  001198  0E0A               	movlw	10
  9558  00119A  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9559  00119C  0E02               	movlw	2
  9560  00119E  6F76               	movwf	oled_putString@start_page& (0+255),b
  9561  0011A0  EC76  F028         	call	_oled_putString	;wreg free
  9562                           
  9563                           ;MOTEapp.c: 934: break;
  9564  0011A4  0012               	return	
  9565  0011A6                     
  9566                           ;MOTEapp.c: 936: oled_putString(" 1 ",10,2);
  9567  0011A6  0ECB               	movlw	low STR_139
  9568  0011A8  0100               	movlb	0	; () banked
  9569  0011AA  6F72               	movwf	oled_putString@string& (0+255),b
  9570  0011AC  0E7F               	movlw	high STR_139
  9571  0011AE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9572  0011B0  5172               	movf	oled_putString@string& (0+255),w,b
  9573  0011B2  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9574  0011B4  A4D8               	btfss	status,2,c
  9575  0011B6  0E00               	movlw	low (__mediumconst shr (0+16))
  9576  0011B8  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9577  0011BA  0E0A               	movlw	10
  9578  0011BC  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9579  0011BE  0E02               	movlw	2
  9580  0011C0  6F76               	movwf	oled_putString@start_page& (0+255),b
  9581  0011C2  EC76  F028         	call	_oled_putString	;wreg free
  9582                           
  9583                           ;MOTEapp.c: 937: break;
  9584  0011C6  0012               	return	
  9585  0011C8                     
  9586                           ;MOTEapp.c: 939: oled_putString(" 2 ",10,2);
  9587  0011C8  0ECF               	movlw	low STR_140
  9588  0011CA  0100               	movlb	0	; () banked
  9589  0011CC  6F72               	movwf	oled_putString@string& (0+255),b
  9590  0011CE  0E7F               	movlw	high STR_140
  9591  0011D0  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9592  0011D2  5172               	movf	oled_putString@string& (0+255),w,b
  9593  0011D4  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9594  0011D6  A4D8               	btfss	status,2,c
  9595  0011D8  0E00               	movlw	low (__mediumconst shr (0+16))
  9596  0011DA  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9597  0011DC  0E0A               	movlw	10
  9598  0011DE  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9599  0011E0  0E02               	movlw	2
  9600  0011E2  6F76               	movwf	oled_putString@start_page& (0+255),b
  9601  0011E4  EC76  F028         	call	_oled_putString	;wreg free
  9602                           
  9603                           ;MOTEapp.c: 940: break;
  9604  0011E8  0012               	return	
  9605  0011EA                     
  9606                           ;MOTEapp.c: 942: oled_putString(" 3 ",10,2);
  9607  0011EA  0ED3               	movlw	low STR_141
  9608  0011EC  0100               	movlb	0	; () banked
  9609  0011EE  6F72               	movwf	oled_putString@string& (0+255),b
  9610  0011F0  0E7F               	movlw	high STR_141
  9611  0011F2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9612  0011F4  5172               	movf	oled_putString@string& (0+255),w,b
  9613  0011F6  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9614  0011F8  A4D8               	btfss	status,2,c
  9615  0011FA  0E00               	movlw	low (__mediumconst shr (0+16))
  9616  0011FC  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9617  0011FE  0E0A               	movlw	10
  9618  001200  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9619  001202  0E02               	movlw	2
  9620  001204  6F76               	movwf	oled_putString@start_page& (0+255),b
  9621  001206  EC76  F028         	call	_oled_putString	;wreg free
  9622                           
  9623                           ;MOTEapp.c: 943: break;
  9624  00120A  0012               	return	
  9625  00120C                     
  9626                           ;MOTEapp.c: 945: oled_putString(" 4 ",10,2);
  9627  00120C  0ED7               	movlw	low STR_142
  9628  00120E  0100               	movlb	0	; () banked
  9629  001210  6F72               	movwf	oled_putString@string& (0+255),b
  9630  001212  0E7F               	movlw	high STR_142
  9631  001214  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9632  001216  5172               	movf	oled_putString@string& (0+255),w,b
  9633  001218  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9634  00121A  A4D8               	btfss	status,2,c
  9635  00121C  0E00               	movlw	low (__mediumconst shr (0+16))
  9636  00121E  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9637  001220  0E0A               	movlw	10
  9638  001222  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9639  001224  0E02               	movlw	2
  9640  001226  6F76               	movwf	oled_putString@start_page& (0+255),b
  9641  001228  EC76  F028         	call	_oled_putString	;wreg free
  9642                           
  9643                           ;MOTEapp.c: 946: break;
  9644  00122C  0012               	return	
  9645  00122E                     
  9646                           ;MOTEapp.c: 948: oled_putString(" 5 ",10,2);
  9647  00122E  0EDB               	movlw	low STR_143
  9648  001230  0100               	movlb	0	; () banked
  9649  001232  6F72               	movwf	oled_putString@string& (0+255),b
  9650  001234  0E7F               	movlw	high STR_143
  9651  001236  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9652  001238  5172               	movf	oled_putString@string& (0+255),w,b
  9653  00123A  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9654  00123C  A4D8               	btfss	status,2,c
  9655  00123E  0E00               	movlw	low (__mediumconst shr (0+16))
  9656  001240  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9657  001242  0E0A               	movlw	10
  9658  001244  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9659  001246  0E02               	movlw	2
  9660  001248  6F76               	movwf	oled_putString@start_page& (0+255),b
  9661  00124A  EC76  F028         	call	_oled_putString	;wreg free
  9662                           
  9663                           ;MOTEapp.c: 949: break;
  9664  00124E  0012               	return	
  9665  001250                     
  9666                           ;MOTEapp.c: 951: oled_putString("ADR",10,2);
  9667  001250  0EF3               	movlw	low STR_144
  9668  001252  0100               	movlb	0	; () banked
  9669  001254  6F72               	movwf	oled_putString@string& (0+255),b
  9670  001256  0E7F               	movlw	high STR_144
  9671  001258  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9672  00125A  5172               	movf	oled_putString@string& (0+255),w,b
  9673  00125C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9674  00125E  A4D8               	btfss	status,2,c
  9675  001260  0E00               	movlw	low (__mediumconst shr (0+16))
  9676  001262  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9677  001264  0E0A               	movlw	10
  9678  001266  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9679  001268  0E02               	movlw	2
  9680  00126A  6F76               	movwf	oled_putString@start_page& (0+255),b
  9681  00126C  EC76  F028         	call	_oled_putString	;wreg free
  9682                           
  9683                           ;MOTEapp.c: 953: }
  9684                           
  9685                           ;MOTEapp.c: 952: break;
  9686  001270  0012               	return	
  9687  001272                     l572:
  9688  001272  0100               	movlb	0	; () banked
  9689  001274  51FC               	movf	_dataRateValue& (0+255),w,b
  9690                           
  9691                           ; Switch size 1, requested type "space"
  9692                           ; Number of cases is 7, Range of values is 0 to 6
  9693                           ; switch strategies available:
  9694                           ; Name         Instructions Cycles
  9695                           ; simple_byte           22    12 (average)
  9696                           ;	Chosen strategy is simple_byte
  9697  001276  0A00               	xorlw	0	; case 0
  9698  001278  B4D8               	btfsc	status,2,c
  9699  00127A  D785               	goto	l573
  9700  00127C  0A01               	xorlw	1	; case 1
  9701  00127E  B4D8               	btfsc	status,2,c
  9702  001280  D792               	goto	l576
  9703  001282  0A03               	xorlw	3	; case 2
  9704  001284  B4D8               	btfsc	status,2,c
  9705  001286  D7A0               	goto	l577
  9706  001288  0A01               	xorlw	1	; case 3
  9707  00128A  B4D8               	btfsc	status,2,c
  9708  00128C  D7AE               	goto	l578
  9709  00128E  0A07               	xorlw	7	; case 4
  9710  001290  B4D8               	btfsc	status,2,c
  9711  001292  D7BC               	goto	l579
  9712  001294  0A01               	xorlw	1	; case 5
  9713  001296  B4D8               	btfsc	status,2,c
  9714  001298  D7CA               	goto	l580
  9715  00129A  0A03               	xorlw	3	; case 6
  9716  00129C  B4D8               	btfsc	status,2,c
  9717  00129E  D7D8               	goto	l581
  9718  0012A0  D772               	goto	l573
  9719  0012A2                     
  9720                           ; BSR set to: 0
  9721                           ;MOTEapp.c: 957: if (selectButton)
  9722                           
  9723                           ; BSR set to: 0
  9724  0012A2  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9725  0012A4  B4D8               	btfsc	status,2,c
  9726  0012A6  D00C               	goto	l585
  9727                           
  9728                           ; BSR set to: 0
  9729                           ;MOTEapp.c: 958: {
  9730                           ;MOTEapp.c: 959: if( moteApp_GoToSleep() )
  9731  0012A8  ECDE  F01E         	call	_moteApp_GoToSleep	;wreg free
  9732  0012AC  0900               	iorlw	0
  9733  0012AE  B4D8               	btfsc	status,2,c
  9734  0012B0  D004               	goto	l584
  9735                           
  9736                           ;MOTEapp.c: 960: {
  9737                           ;MOTEapp.c: 961: changeStates = 1;
  9738  0012B2  0E01               	movlw	1
  9739  0012B4  0100               	movlb	0	; () banked
  9740  0012B6  6FB5               	movwf	moteRunningProcess@changeStates& (0+255),b
  9741                           
  9742                           ;MOTEapp.c: 962: }
  9743  0012B8  D003               	goto	l585
  9744  0012BA                     l584:
  9745                           
  9746                           ;MOTEapp.c: 963: else
  9747                           ;MOTEapp.c: 964: {
  9748                           ;MOTEapp.c: 965: secTicker = 10 - 1;
  9749                           
  9750                           ; BSR set to: 0
  9751  0012BA  0E09               	movlw	9
  9752  0012BC  0100               	movlb	0	; () banked
  9753  0012BE  6FF0               	movwf	_secTicker& (0+255),b
  9754  0012C0                     l585:
  9755                           
  9756                           ; BSR set to: 0
  9757                           ;MOTEapp.c: 966: }
  9758                           ;MOTEapp.c: 967: }
  9759                           ;MOTEapp.c: 968: if (changeStates)
  9760                           
  9761                           ; BSR set to: 0
  9762  0012C0  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  9763  0012C2  B4D8               	btfsc	status,2,c
  9764  0012C4  0012               	return	
  9765                           
  9766                           ; BSR set to: 0
  9767                           ;MOTEapp.c: 969: {
  9768                           ;MOTEapp.c: 970: oled_clear();
  9769  0012C6  ECF0  F02F         	call	_oled_clear	;wreg free
  9770                           
  9771                           ;MOTEapp.c: 971: oled_putString("  Issue Uplink  ",0,0);
  9772  0012CA  0E21               	movlw	low STR_75
  9773  0012CC  0100               	movlb	0	; () banked
  9774  0012CE  6F72               	movwf	oled_putString@string& (0+255),b
  9775  0012D0  0E7B               	movlw	high STR_75
  9776  0012D2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9777  0012D4  5172               	movf	oled_putString@string& (0+255),w,b
  9778  0012D6  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9779  0012D8  A4D8               	btfss	status,2,c
  9780  0012DA  0E00               	movlw	low (__mediumconst shr (0+16))
  9781  0012DC  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9782  0012DE  0E00               	movlw	0
  9783  0012E0  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9784  0012E2  0E00               	movlw	0
  9785  0012E4  6F76               	movwf	oled_putString@start_page& (0+255),b
  9786  0012E6  EC76  F028         	call	_oled_putString	;wreg free
  9787                           
  9788                           ;MOTEapp.c: 972: oled_putString(" LoRaWAN Packet ",0,1);
  9789  0012EA  0E87               	movlw	low STR_76
  9790  0012EC  0100               	movlb	0	; () banked
  9791  0012EE  6F72               	movwf	oled_putString@string& (0+255),b
  9792  0012F0  0E7B               	movlw	high STR_76
  9793  0012F2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9794  0012F4  5172               	movf	oled_putString@string& (0+255),w,b
  9795  0012F6  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9796  0012F8  A4D8               	btfss	status,2,c
  9797  0012FA  0E00               	movlw	low (__mediumconst shr (0+16))
  9798  0012FC  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9799  0012FE  0E00               	movlw	0
  9800  001300  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9801  001302  0E01               	movlw	1
  9802  001304  6F76               	movwf	oled_putString@start_page& (0+255),b
  9803  001306  EC76  F028         	call	_oled_putString	;wreg free
  9804                           
  9805                           ;MOTEapp.c: 973: oled_putString("(NAV)    (SEL) ",0,3);
  9806  00130A  0E83               	movlw	low STR_77
  9807  00130C  0100               	movlb	0	; () banked
  9808  00130E  6F72               	movwf	oled_putString@string& (0+255),b
  9809  001310  0E7C               	movlw	high STR_77
  9810  001312  6F73               	movwf	(oled_putString@string+1)& (0+255),b
  9811  001314  5172               	movf	oled_putString@string& (0+255),w,b
  9812  001316  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
  9813  001318  A4D8               	btfss	status,2,c
  9814  00131A  0E00               	movlw	low (__mediumconst shr (0+16))
  9815  00131C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
  9816  00131E  0E00               	movlw	0
  9817  001320  6F75               	movwf	oled_putString@station_dot& (0+255),b
  9818  001322  0E03               	movlw	3
  9819  001324  6F76               	movwf	oled_putString@start_page& (0+255),b
  9820  001326  EC76  F028         	call	_oled_putString	;wreg free
  9821                           
  9822                           ;MOTEapp.c: 974: runningState = runningUplink;
  9823  00132A  0E06               	movlw	6
  9824  00132C  0100               	movlb	0	; () banked
  9825  00132E  6FF3               	movwf	_runningState& (0+255),b
  9826                           
  9827                           ; BSR set to: 0
  9828                           ;MOTEapp.c: 977: }
  9829                           
  9830                           ; BSR set to: 0
  9831                           ;MOTEapp.c: 975: }
  9832                           ;MOTEapp.c: 976: break;
  9833  001330  0012               	return	
  9834  001332                     l466:
  9835                           
  9836                           ; BSR set to: 0
  9837                           
  9838                           ; BSR set to: 0
  9839  001332  51F3               	movf	_runningState& (0+255),w,b
  9840                           
  9841                           ; Switch size 1, requested type "space"
  9842                           ; Number of cases is 12, Range of values is 0 to 15
  9843                           ; switch strategies available:
  9844                           ; Name         Instructions Cycles
  9845                           ; simple_byte           37    19 (average)
  9846                           ;	Chosen strategy is simple_byte
  9847  001334  0A00               	xorlw	0	; case 0
  9848  001336  B4D8               	btfsc	status,2,c
  9849  001338  EF7E  F001         	goto	l472
  9850  00133C  0A01               	xorlw	1	; case 1
  9851  00133E  B4D8               	btfsc	status,2,c
  9852  001340  EF59  F005         	goto	l516
  9853  001344  0A03               	xorlw	3	; case 2
  9854  001346  B4D8               	btfsc	status,2,c
  9855  001348  D54C               	goto	l537
  9856  00134A  0A01               	xorlw	1	; case 3
  9857  00134C  B4D8               	btfsc	status,2,c
  9858  00134E  D6DD               	goto	l565
  9859  001350  0A05               	xorlw	5	; case 6
  9860  001352  B4D8               	btfsc	status,2,c
  9861  001354  EFBB  F001         	goto	l476
  9862  001358  0A01               	xorlw	1	; case 7
  9863  00135A  B4D8               	btfsc	status,2,c
  9864  00135C  EF9F  F002         	goto	l483
  9865  001360  0A0F               	xorlw	15	; case 8
  9866  001362  B4D8               	btfsc	status,2,c
  9867  001364  EF1E  F003         	goto	l489
  9868  001368  0A02               	xorlw	2	; case 10
  9869  00136A  B4D8               	btfsc	status,2,c
  9870  00136C  EF7A  F004         	goto	l508
  9871  001370  0A01               	xorlw	1	; case 11
  9872  001372  B4D8               	btfsc	status,2,c
  9873  001374  EF1D  F005         	goto	l512
  9874  001378  0A07               	xorlw	7	; case 12
  9875  00137A  B4D8               	btfsc	status,2,c
  9876  00137C  D432               	goto	l522
  9877  00137E  0A01               	xorlw	1	; case 13
  9878  001380  B4D8               	btfsc	status,2,c
  9879  001382  D56C               	goto	l541
  9880  001384  0A02               	xorlw	2	; case 15
  9881  001386  B4D8               	btfsc	status,2,c
  9882  001388  D78C               	goto	l582
  9883  00138A  EF7D  F001         	goto	l467
  9884  00138E                     __end_of_moteRunningProcess:
  9885                           	opt stack 0
  9886                           tblptru	equ	0xFF8
  9887                           tblptrh	equ	0xFF7
  9888                           tblptrl	equ	0xFF6
  9889                           tablat	equ	0xFF5
  9890                           prodh	equ	0xFF4
  9891                           prodl	equ	0xFF3
  9892                           intcon	equ	0xFF2
  9893                           postinc0	equ	0xFEE
  9894                           wreg	equ	0xFE8
  9895                           indf1	equ	0xFE7
  9896                           postdec1	equ	0xFE5
  9897                           fsr1h	equ	0xFE2
  9898                           fsr1l	equ	0xFE1
  9899                           indf2	equ	0xFDF
  9900                           fsr2h	equ	0xFDA
  9901                           fsr2l	equ	0xFD9
  9902                           status	equ	0xFD8
  9903                           
  9904 ;; *************** function _sendDataCommand *****************
  9905 ;; Defined at:
  9906 ;;		line 1124 in file "../Includes/Board/MOTEapp.c"
  9907 ;; Parameters:    Size  Location     Type
  9908 ;;  string          2    1[BANK0 ] PTR const unsigned char 
  9909 ;;		 -> STR_85(12), STR_84(14), STR_74(14), 
  9910 ;;  appData         2    3[BANK0 ] PTR unsigned char 
  9911 ;;		 -> dataBuffer(16), 
  9912 ;;  dataLength      1    5[BANK0 ] unsigned char 
  9913 ;; Auto vars:     Size  Location     Type
  9914 ;;  byteCount       1    8[BANK0 ] unsigned char 
  9915 ;;  byteCount       1    7[BANK0 ] unsigned char 
  9916 ;; Return value:  Size  Location     Type
  9917 ;;                  1    wreg      void 
  9918 ;; Registers used:
  9919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9920 ;; Tracked objects:
  9921 ;;		On entry : 0/0
  9922 ;;		On exit  : 0/0
  9923 ;;		Unchanged: 0/0
  9924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9925 ;;      Params:         0       5       0       0       0       0       0       0       0
  9926 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9927 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9928 ;;      Totals:         0       8       0       0       0       0       0       0       0
  9929 ;;Total ram usage:        8 bytes
  9930 ;; Hardware stack levels used:    1
  9931 ;; Hardware stack levels required when called:   13
  9932 ;; This function calls:
  9933 ;;		_EUSART_Write
  9934 ;;		_EndLine
  9935 ;;		_hexToStr
  9936 ;; This function is called by:
  9937 ;;		_moteRunningProcess
  9938 ;; This function uses a non-reentrant model
  9939 ;;
  9940                           
  9941                           	psect	text11
  9942  00428E                     __ptext11:
  9943                           	opt stack 0
  9944  00428E                     _sendDataCommand:
  9945                           	opt stack 15
  9946                           
  9947                           ;MOTEapp.c: 1127: while (*string)
  9948                           
  9949                           ;incstack = 0
  9950  00428E  D00C               	goto	l642
  9951  004290                     
  9952                           ;MOTEapp.c: 1128: {
  9953                           ;MOTEapp.c: 1129: EUSART_Write(*string++);
  9954  004290  C061  FFF6         	movff	sendDataCommand@string,tblptrl
  9955  004294  C062  FFF7         	movff	sendDataCommand@string+1,tblptrh
  9956  004298                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9957  004298  6AF8               	clrf	tblptru,c
  9958  00429A                     	endif
  9959  00429A                     	if	0	;tblptru may be non-zero
  9960  00429A                     	endif
  9961  00429A  0008               	tblrd		*
  9962  00429C  50F5               	movf	tablat,w,c
  9963  00429E  ECF3  F02C         	call	_EUSART_Write
  9964  0042A2  0100               	movlb	0	; () banked
  9965  0042A4  4B61               	infsnz	sendDataCommand@string& (0+255),f,b
  9966  0042A6  2B62               	incf	(sendDataCommand@string+1)& (0+255),f,b
  9967  0042A8                     l642:
  9968                           
  9969                           ; BSR set to: 0
  9970  0042A8  C061  FFF6         	movff	sendDataCommand@string,tblptrl
  9971  0042AC  C062  FFF7         	movff	sendDataCommand@string+1,tblptrh
  9972  0042B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9973  0042B0  6AF8               	clrf	tblptru,c
  9974  0042B2                     	endif
  9975  0042B2                     	if	0	;tblptru may be non-zero
  9976  0042B2                     	endif
  9977  0042B2  0008               	tblrd		*
  9978  0042B4  50F5               	movf	tablat,w,c
  9979  0042B6  0900               	iorlw	0
  9980  0042B8  A4D8               	btfss	status,2,c
  9981  0042BA  D7EA               	goto	l643
  9982                           
  9983                           ;MOTEapp.c: 1130: }
  9984                           ;MOTEapp.c: 1132: for (uint8_t byteCount = 0; byteCount < 3; byteCount++)
  9985  0042BC  0E00               	movlw	0
  9986  0042BE  0100               	movlb	0	; () banked
  9987  0042C0  6F67               	movwf	sendDataCommand@byteCount& (0+255),b
  9988  0042C2                     l9871:
  9989                           
  9990                           ; BSR set to: 0
  9991  0042C2  0E02               	movlw	2
  9992  0042C4  6567               	cpfsgt	sendDataCommand@byteCount& (0+255),b
  9993  0042C6  D001               	goto	l645
  9994  0042C8  D00E               	goto	u8440
  9995  0042CA                     l645:
  9996                           
  9997                           ; BSR set to: 0
  9998                           ;MOTEapp.c: 1133: {
  9999                           ;MOTEapp.c: 1134: EUSART_Write(appData[byteCount]);
 10000                           
 10001                           ; BSR set to: 0
 10002  0042CA  5167               	movf	sendDataCommand@byteCount& (0+255),w,b
 10003  0042CC  0D01               	mullw	1
 10004  0042CE  50F3               	movf	prodl,w,c
 10005  0042D0  2563               	addwf	sendDataCommand@appData& (0+255),w,b
 10006  0042D2  6ED9               	movwf	fsr2l,c
 10007  0042D4  50F4               	movf	prodh,w,c
 10008  0042D6  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
 10009  0042D8  6EDA               	movwf	fsr2h,c
 10010  0042DA  50DF               	movf	indf2,w,c
 10011  0042DC  ECF3  F02C         	call	_EUSART_Write
 10012  0042E0  0100               	movlb	0	; () banked
 10013  0042E2  2B67               	incf	sendDataCommand@byteCount& (0+255),f,b
 10014  0042E4  D7EE               	goto	l9871
 10015  0042E6                     u8440:
 10016                           
 10017                           ; BSR set to: 0
 10018                           ;MOTEapp.c: 1135: }
 10019                           ;MOTEapp.c: 1137: EUSART_Write(appData[3]);
 10020                           
 10021                           ; BSR set to: 0
 10022  0042E6  EE20 F003          	lfsr	2,3
 10023  0042EA  5163               	movf	sendDataCommand@appData& (0+255),w,b
 10024  0042EC  26D9               	addwf	fsr2l,f,c
 10025  0042EE  5164               	movf	(sendDataCommand@appData+1)& (0+255),w,b
 10026  0042F0  22DA               	addwfc	fsr2h,f,c
 10027  0042F2  50DF               	movf	indf2,w,c
 10028  0042F4  ECF3  F02C         	call	_EUSART_Write
 10029                           
 10030                           ;MOTEapp.c: 1139: for (uint8_t byteCount = 4; byteCount < dataLength; byteCount++)
 10031  0042F8  0E04               	movlw	4
 10032  0042FA  0100               	movlb	0	; () banked
 10033  0042FC  6F68               	movwf	sendDataCommand@byteCount_1627& (0+255),b
 10034  0042FE  D021               	goto	l647
 10035  004300                     
 10036                           ; BSR set to: 0
 10037                           ;MOTEapp.c: 1140: {
 10038                           ;MOTEapp.c: 1141: EUSART_Write(hexToStr(appData[byteCount] >> 4));
 10039                           
 10040                           ; BSR set to: 0
 10041  004300  5168               	movf	sendDataCommand@byteCount_1627& (0+255),w,b
 10042  004302  0D01               	mullw	1
 10043  004304  50F3               	movf	prodl,w,c
 10044  004306  2563               	addwf	sendDataCommand@appData& (0+255),w,b
 10045  004308  6ED9               	movwf	fsr2l,c
 10046  00430A  50F4               	movf	prodh,w,c
 10047  00430C  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
 10048  00430E  6EDA               	movwf	fsr2h,c
 10049  004310  50DF               	movf	indf2,w,c
 10050  004312  6F66               	movwf	??_sendDataCommand& (0+255),b
 10051  004314  3966               	swapf	??_sendDataCommand& (0+255),w,b
 10052  004316  0B0F               	andlw	15
 10053  004318  ECB7  F02E         	call	_hexToStr
 10054  00431C  ECF3  F02C         	call	_EUSART_Write
 10055                           
 10056                           ;MOTEapp.c: 1142: EUSART_Write(hexToStr(appData[byteCount] & 0x0F));
 10057  004320  0100               	movlb	0	; () banked
 10058  004322  5168               	movf	sendDataCommand@byteCount_1627& (0+255),w,b
 10059  004324  0D01               	mullw	1
 10060  004326  50F3               	movf	prodl,w,c
 10061  004328  2563               	addwf	sendDataCommand@appData& (0+255),w,b
 10062  00432A  6ED9               	movwf	fsr2l,c
 10063  00432C  50F4               	movf	prodh,w,c
 10064  00432E  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
 10065  004330  6EDA               	movwf	fsr2h,c
 10066  004332  50DF               	movf	indf2,w,c
 10067  004334  0B0F               	andlw	15
 10068  004336  ECB7  F02E         	call	_hexToStr
 10069  00433A  ECF3  F02C         	call	_EUSART_Write
 10070  00433E  0100               	movlb	0	; () banked
 10071  004340  2B68               	incf	sendDataCommand@byteCount_1627& (0+255),f,b
 10072  004342                     l647:
 10073                           
 10074                           ; BSR set to: 0
 10075                           
 10076                           ; BSR set to: 0
 10077  004342  5165               	movf	sendDataCommand@dataLength& (0+255),w,b
 10078  004344  5D68               	subwf	sendDataCommand@byteCount_1627& (0+255),w,b
 10079  004346  A0D8               	btfss	status,0,c
 10080  004348  D7DB               	goto	l648
 10081                           
 10082                           ; BSR set to: 0
 10083                           ;MOTEapp.c: 1143: }
 10084                           ;MOTEapp.c: 1144: EndLine();
 10085                           
 10086                           ; BSR set to: 0
 10087  00434A  ECC7  F030         	call	_EndLine	;wreg free
 10088  00434E  0012               	return		;funcret
 10089  004350                     __end_of_sendDataCommand:
 10090                           	opt stack 0
 10091                           tblptru	equ	0xFF8
 10092                           tblptrh	equ	0xFF7
 10093                           tblptrl	equ	0xFF6
 10094                           tablat	equ	0xFF5
 10095                           prodh	equ	0xFF4
 10096                           prodl	equ	0xFF3
 10097                           intcon	equ	0xFF2
 10098                           postinc0	equ	0xFEE
 10099                           wreg	equ	0xFE8
 10100                           indf1	equ	0xFE7
 10101                           postdec1	equ	0xFE5
 10102                           fsr1h	equ	0xFE2
 10103                           fsr1l	equ	0xFE1
 10104                           indf2	equ	0xFDF
 10105                           fsr2h	equ	0xFDA
 10106                           fsr2l	equ	0xFD9
 10107                           status	equ	0xFD8
 10108                           
 10109 ;; *************** function _hexToStr *****************
 10110 ;; Defined at:
 10111 ;;		line 1156 in file "../Includes/Board/MOTEapp.c"
 10112 ;; Parameters:    Size  Location     Type
 10113 ;;  character       1    wreg     unsigned char 
 10114 ;; Auto vars:     Size  Location     Type
 10115 ;;  character       1    0[BANK0 ] unsigned char 
 10116 ;; Return value:  Size  Location     Type
 10117 ;;                  1    wreg      unsigned char 
 10118 ;; Registers used:
 10119 ;;		wreg, status,2, status,0
 10120 ;; Tracked objects:
 10121 ;;		On entry : 0/0
 10122 ;;		On exit  : 0/0
 10123 ;;		Unchanged: 0/0
 10124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10125 ;;      Params:         0       0       0       0       0       0       0       0       0
 10126 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10127 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10128 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10129 ;;Total ram usage:        1 bytes
 10130 ;; Hardware stack levels used:    1
 10131 ;; Hardware stack levels required when called:   11
 10132 ;; This function calls:
 10133 ;;		Nothing
 10134 ;; This function is called by:
 10135 ;;		_sendDataCommand
 10136 ;; This function uses a non-reentrant model
 10137 ;;
 10138                           
 10139                           	psect	text12
 10140  005D6E                     __ptext12:
 10141                           	opt stack 0
 10142  005D6E                     _hexToStr:
 10143                           	opt stack 16
 10144                           
 10145                           ;incstack = 0
 10146                           ;hexToStr@character stored from wreg
 10147  005D6E  0100               	movlb	0	; () banked
 10148  005D70  6F60               	movwf	hexToStr@character& (0+255),b
 10149                           
 10150                           ;MOTEapp.c: 1159: character = character & 0x0F;
 10151  005D72  0100               	movlb	0	; () banked
 10152  005D74  5160               	movf	hexToStr@character& (0+255),w,b
 10153  005D76  0B0F               	andlw	15
 10154  005D78  6F60               	movwf	hexToStr@character& (0+255),b
 10155                           
 10156                           ;MOTEapp.c: 1161: if (character < 0x0A)
 10157  005D7A  0E0A               	movlw	10
 10158  005D7C  6160               	cpfslt	hexToStr@character& (0+255),b
 10159  005D7E  D003               	goto	l658
 10160                           
 10161                           ; BSR set to: 0
 10162                           ;MOTEapp.c: 1162: {
 10163                           ;MOTEapp.c: 1163: return character + '0';
 10164  005D80  5160               	movf	hexToStr@character& (0+255),w,b
 10165  005D82  0F30               	addlw	48
 10166                           
 10167                           ; BSR set to: 0
 10168                           ;MOTEapp.c: 1164: }
 10169                           
 10170                           ; BSR set to: 0
 10171  005D84  0012               	return	
 10172  005D86                     l658:
 10173                           
 10174                           ; BSR set to: 0
 10175                           ;MOTEapp.c: 1165: else if ( (character >= 0x0A) && (character <= 0x0F) )
 10176                           
 10177                           ; BSR set to: 0
 10178  005D86  0E09               	movlw	9
 10179  005D88  6560               	cpfsgt	hexToStr@character& (0+255),b
 10180  005D8A  D006               	goto	l661
 10181                           
 10182                           ; BSR set to: 0
 10183  005D8C  0E10               	movlw	16
 10184  005D8E  6160               	cpfslt	hexToStr@character& (0+255),b
 10185  005D90  D003               	goto	l661
 10186                           
 10187                           ; BSR set to: 0
 10188                           ;MOTEapp.c: 1166: {
 10189                           ;MOTEapp.c: 1167: return character + '0' + 7;
 10190  005D92  5160               	movf	hexToStr@character& (0+255),w,b
 10191  005D94  0F37               	addlw	55
 10192                           
 10193                           ; BSR set to: 0
 10194                           ;MOTEapp.c: 1168: }
 10195                           
 10196                           ; BSR set to: 0
 10197  005D96  0012               	return	
 10198  005D98                     l661:
 10199                           
 10200                           ; BSR set to: 0
 10201                           ;MOTEapp.c: 1169: else
 10202                           ;MOTEapp.c: 1170: {
 10203                           ;MOTEapp.c: 1171: return 0;
 10204                           
 10205                           ; BSR set to: 0
 10206  005D98  0E00               	movlw	0
 10207                           
 10208                           ; BSR set to: 0
 10209                           
 10210                           ; BSR set to: 0
 10211  005D9A  0012               	return	
 10212  005D9C                     __end_of_hexToStr:
 10213                           	opt stack 0
 10214                           tblptru	equ	0xFF8
 10215                           tblptrh	equ	0xFF7
 10216                           tblptrl	equ	0xFF6
 10217                           tablat	equ	0xFF5
 10218                           prodh	equ	0xFF4
 10219                           prodl	equ	0xFF3
 10220                           intcon	equ	0xFF2
 10221                           postinc0	equ	0xFEE
 10222                           wreg	equ	0xFE8
 10223                           indf1	equ	0xFE7
 10224                           postdec1	equ	0xFE5
 10225                           fsr1h	equ	0xFE2
 10226                           fsr1l	equ	0xFE1
 10227                           indf2	equ	0xFDF
 10228                           fsr2h	equ	0xFDA
 10229                           fsr2l	equ	0xFD9
 10230                           status	equ	0xFD8
 10231                           
 10232 ;; *************** function _oled_putint8 *****************
 10233 ;; Defined at:
 10234 ;;		line 278 in file "../Includes/Drivers/SSD1306oLED.c"
 10235 ;; Parameters:    Size  Location     Type
 10236 ;;  number          1    wreg     unsigned char 
 10237 ;;  station_dot     1   24[BANK0 ] unsigned char 
 10238 ;;  start_page      1   25[BANK0 ] unsigned char 
 10239 ;; Auto vars:     Size  Location     Type
 10240 ;;  number          1   33[BANK0 ] unsigned char 
 10241 ;;  numData         6   27[BANK0 ] struct .
 10242 ;;  negative        1   26[BANK0 ] unsigned char 
 10243 ;; Return value:  Size  Location     Type
 10244 ;;                  1    wreg      void 
 10245 ;; Registers used:
 10246 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10247 ;; Tracked objects:
 10248 ;;		On entry : 0/0
 10249 ;;		On exit  : 0/0
 10250 ;;		Unchanged: 0/0
 10251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10252 ;;      Params:         0       2       0       0       0       0       0       0       0
 10253 ;;      Locals:         0       8       0       0       0       0       0       0       0
 10254 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10255 ;;      Totals:         0      10       0       0       0       0       0       0       0
 10256 ;;Total ram usage:       10 bytes
 10257 ;; Hardware stack levels used:    1
 10258 ;; Hardware stack levels required when called:   15
 10259 ;; This function calls:
 10260 ;;		___awmod
 10261 ;;		___lbdiv
 10262 ;;		_oled_putString
 10263 ;; This function is called by:
 10264 ;;		_moteHandler
 10265 ;;		_moteRunningProcess
 10266 ;;		_moteApp_testSensors
 10267 ;; This function uses a non-reentrant model
 10268 ;;
 10269                           
 10270                           	psect	text13
 10271  004636                     __ptext13:
 10272                           	opt stack 0
 10273  004636                     _oled_putint8:
 10274                           	opt stack 13
 10275                           
 10276                           ; BSR set to: 0
 10277                           ;incstack = 0
 10278                           ;oled_putint8@number stored from wreg
 10279  004636  0100               	movlb	0	; () banked
 10280  004638  6F81               	movwf	oled_putint8@number& (0+255),b
 10281                           
 10282                           ;SSD1306oLED.c: 280: display_data_t numData;
 10283                           ;SSD1306oLED.c: 281: bool negative = 0;
 10284  00463A  0E00               	movlw	0
 10285  00463C  0100               	movlb	0	; () banked
 10286  00463E  6F7A               	movwf	oled_putint8@negative& (0+255),b
 10287                           
 10288                           ; BSR set to: 0
 10289                           ;SSD1306oLED.c: 283: if(number & 0x80)
 10290  004640  AF81               	btfss	oled_putint8@number& (0+255),7,b
 10291  004642  D002               	goto	l1032
 10292                           
 10293                           ; BSR set to: 0
 10294                           ;SSD1306oLED.c: 284: negative = 1;
 10295  004644  0E01               	movlw	1
 10296  004646  6F7A               	movwf	oled_putint8@negative& (0+255),b
 10297  004648                     l1032:
 10298                           
 10299                           ; BSR set to: 0
 10300                           ;SSD1306oLED.c: 285: number = (number & 0x7F);
 10301                           
 10302                           ; BSR set to: 0
 10303  004648  5181               	movf	oled_putint8@number& (0+255),w,b
 10304  00464A  0B7F               	andlw	127
 10305  00464C  6F81               	movwf	oled_putint8@number& (0+255),b
 10306                           
 10307                           ; BSR set to: 0
 10308                           ;SSD1306oLED.c: 287: numData.d2 = '0' + (number % 10);
 10309  00464E  C081  F060         	movff	oled_putint8@number,___awmod@dividend
 10310  004652  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10311  004654  0E00               	movlw	0
 10312  004656  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10313  004658  0E0A               	movlw	10
 10314  00465A  6F62               	movwf	___awmod@divisor& (0+255),b
 10315  00465C  EC22  F029         	call	___awmod	;wreg free
 10316  004660  0100               	movlb	0	; () banked
 10317  004662  5160               	movf	?___awmod& (0+255),w,b
 10318  004664  0F30               	addlw	48
 10319  004666  6F7D               	movwf	(oled_putint8@numData+2)& (0+255),b
 10320                           
 10321                           ; BSR set to: 0
 10322                           ;SSD1306oLED.c: 288: number /= 10;
 10323  004668  0E0A               	movlw	10
 10324  00466A  6F60               	movwf	___lbdiv@divisor& (0+255),b
 10325  00466C  5181               	movf	oled_putint8@number& (0+255),w,b
 10326  00466E  ECD4  F02C         	call	___lbdiv
 10327  004672  0100               	movlb	0	; () banked
 10328  004674  6F81               	movwf	oled_putint8@number& (0+255),b
 10329                           
 10330                           ; BSR set to: 0
 10331                           ;SSD1306oLED.c: 289: numData.d1 = '0' + (number % 10);
 10332  004676  C081  F060         	movff	oled_putint8@number,___awmod@dividend
 10333  00467A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10334  00467C  0E00               	movlw	0
 10335  00467E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10336  004680  0E0A               	movlw	10
 10337  004682  6F62               	movwf	___awmod@divisor& (0+255),b
 10338  004684  EC22  F029         	call	___awmod	;wreg free
 10339  004688  0100               	movlb	0	; () banked
 10340  00468A  5160               	movf	?___awmod& (0+255),w,b
 10341  00468C  0F30               	addlw	48
 10342  00468E  6F7C               	movwf	(oled_putint8@numData+1)& (0+255),b
 10343                           
 10344                           ; BSR set to: 0
 10345                           ;SSD1306oLED.c: 290: number /= 10;
 10346  004690  0E0A               	movlw	10
 10347  004692  6F60               	movwf	___lbdiv@divisor& (0+255),b
 10348  004694  5181               	movf	oled_putint8@number& (0+255),w,b
 10349  004696  ECD4  F02C         	call	___lbdiv
 10350  00469A  0100               	movlb	0	; () banked
 10351  00469C  6F81               	movwf	oled_putint8@number& (0+255),b
 10352                           
 10353                           ; BSR set to: 0
 10354                           ;SSD1306oLED.c: 291: numData.d0 = '0' + (number % 10);
 10355  00469E  C081  F060         	movff	oled_putint8@number,___awmod@dividend
 10356  0046A2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10357  0046A4  0E00               	movlw	0
 10358  0046A6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10359  0046A8  0E0A               	movlw	10
 10360  0046AA  6F62               	movwf	___awmod@divisor& (0+255),b
 10361  0046AC  EC22  F029         	call	___awmod	;wreg free
 10362  0046B0  0100               	movlb	0	; () banked
 10363  0046B2  5160               	movf	?___awmod& (0+255),w,b
 10364  0046B4  0F30               	addlw	48
 10365  0046B6  6F7B               	movwf	oled_putint8@numData& (0+255),b
 10366                           
 10367                           ; BSR set to: 0
 10368                           ;SSD1306oLED.c: 292: if(negative)
 10369  0046B8  517A               	movf	oled_putint8@negative& (0+255),w,b
 10370  0046BA  B4D8               	btfsc	status,2,c
 10371  0046BC  D002               	goto	l1033
 10372                           
 10373                           ; BSR set to: 0
 10374                           ;SSD1306oLED.c: 293: numData.d0 = '-';
 10375  0046BE  0E2D               	movlw	45
 10376  0046C0  6F7B               	movwf	oled_putint8@numData& (0+255),b
 10377  0046C2                     l1033:
 10378                           
 10379                           ; BSR set to: 0
 10380                           ;SSD1306oLED.c: 295: numData.b[3]=0;
 10381  0046C2  0E00               	movlw	0
 10382  0046C4  6F7E               	movwf	(oled_putint8@numData+3)& (0+255),b
 10383                           
 10384                           ; BSR set to: 0
 10385                           ;SSD1306oLED.c: 297: oled_putString(numData.b,station_dot,start_page);
 10386  0046C6  0E7B               	movlw	low oled_putint8@numData
 10387  0046C8  6F72               	movwf	oled_putString@string& (0+255),b
 10388  0046CA  0E00               	movlw	high oled_putint8@numData
 10389  0046CC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 10390  0046CE  5172               	movf	oled_putString@string& (0+255),w,b
 10391  0046D0  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 10392  0046D2  A4D8               	btfss	status,2,c
 10393  0046D4  0E20               	movlw	32
 10394  0046D6  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 10395  0046D8  C078  F075         	movff	oled_putint8@station_dot,oled_putString@station_dot
 10396  0046DC  C079  F076         	movff	oled_putint8@start_page,oled_putString@start_page
 10397  0046E0  EC76  F028         	call	_oled_putString	;wreg free
 10398  0046E4  0012               	return		;funcret
 10399  0046E6                     __end_of_oled_putint8:
 10400                           	opt stack 0
 10401                           tblptru	equ	0xFF8
 10402                           tblptrh	equ	0xFF7
 10403                           tblptrl	equ	0xFF6
 10404                           tablat	equ	0xFF5
 10405                           prodh	equ	0xFF4
 10406                           prodl	equ	0xFF3
 10407                           intcon	equ	0xFF2
 10408                           postinc0	equ	0xFEE
 10409                           wreg	equ	0xFE8
 10410                           indf1	equ	0xFE7
 10411                           postdec1	equ	0xFE5
 10412                           fsr1h	equ	0xFE2
 10413                           fsr1l	equ	0xFE1
 10414                           indf2	equ	0xFDF
 10415                           fsr2h	equ	0xFDA
 10416                           fsr2l	equ	0xFD9
 10417                           status	equ	0xFD8
 10418                           
 10419 ;; *************** function _oled_putUint8 *****************
 10420 ;; Defined at:
 10421 ;;		line 264 in file "../Includes/Drivers/SSD1306oLED.c"
 10422 ;; Parameters:    Size  Location     Type
 10423 ;;  number          1    wreg     unsigned char 
 10424 ;;  station_dot     1   24[BANK0 ] unsigned char 
 10425 ;;  start_page      1   25[BANK0 ] unsigned char 
 10426 ;; Auto vars:     Size  Location     Type
 10427 ;;  number          1   26[BANK0 ] unsigned char 
 10428 ;;  numData         6   27[BANK0 ] struct .
 10429 ;; Return value:  Size  Location     Type
 10430 ;;                  1    wreg      void 
 10431 ;; Registers used:
 10432 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10433 ;; Tracked objects:
 10434 ;;		On entry : 0/0
 10435 ;;		On exit  : 0/0
 10436 ;;		Unchanged: 0/0
 10437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10438 ;;      Params:         0       2       0       0       0       0       0       0       0
 10439 ;;      Locals:         0       7       0       0       0       0       0       0       0
 10440 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10441 ;;      Totals:         0       9       0       0       0       0       0       0       0
 10442 ;;Total ram usage:        9 bytes
 10443 ;; Hardware stack levels used:    1
 10444 ;; Hardware stack levels required when called:   15
 10445 ;; This function calls:
 10446 ;;		___awmod
 10447 ;;		___lbdiv
 10448 ;;		_oled_putString
 10449 ;; This function is called by:
 10450 ;;		_moteRunningProcess
 10451 ;;		_test_adc
 10452 ;; This function uses a non-reentrant model
 10453 ;;
 10454                           
 10455                           	psect	text14
 10456  004A22                     __ptext14:
 10457                           	opt stack 0
 10458  004A22                     _oled_putUint8:
 10459                           	opt stack 13
 10460                           
 10461                           ;incstack = 0
 10462                           ;oled_putUint8@number stored from wreg
 10463  004A22  0100               	movlb	0	; () banked
 10464  004A24  6F7A               	movwf	oled_putUint8@number& (0+255),b
 10465                           
 10466                           ;SSD1306oLED.c: 266: display_data_t numData;
 10467                           ;SSD1306oLED.c: 267: numData.d2 = '0' + (number % 10);
 10468  004A26  C07A  F060         	movff	oled_putUint8@number,___awmod@dividend
 10469  004A2A  0100               	movlb	0	; () banked
 10470  004A2C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10471  004A2E  0E00               	movlw	0
 10472  004A30  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10473  004A32  0E0A               	movlw	10
 10474  004A34  6F62               	movwf	___awmod@divisor& (0+255),b
 10475  004A36  EC22  F029         	call	___awmod	;wreg free
 10476  004A3A  0100               	movlb	0	; () banked
 10477  004A3C  5160               	movf	?___awmod& (0+255),w,b
 10478  004A3E  0F30               	addlw	48
 10479  004A40  6F7D               	movwf	(oled_putUint8@numData+2)& (0+255),b
 10480                           
 10481                           ;SSD1306oLED.c: 268: number /= 10;
 10482  004A42  0E0A               	movlw	10
 10483  004A44  6F60               	movwf	___lbdiv@divisor& (0+255),b
 10484  004A46  517A               	movf	oled_putUint8@number& (0+255),w,b
 10485  004A48  ECD4  F02C         	call	___lbdiv
 10486  004A4C  0100               	movlb	0	; () banked
 10487  004A4E  6F7A               	movwf	oled_putUint8@number& (0+255),b
 10488                           
 10489                           ;SSD1306oLED.c: 269: numData.d1 = '0' + (number % 10);
 10490  004A50  C07A  F060         	movff	oled_putUint8@number,___awmod@dividend
 10491  004A54  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10492  004A56  0E00               	movlw	0
 10493  004A58  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10494  004A5A  0E0A               	movlw	10
 10495  004A5C  6F62               	movwf	___awmod@divisor& (0+255),b
 10496  004A5E  EC22  F029         	call	___awmod	;wreg free
 10497  004A62  0100               	movlb	0	; () banked
 10498  004A64  5160               	movf	?___awmod& (0+255),w,b
 10499  004A66  0F30               	addlw	48
 10500  004A68  6F7C               	movwf	(oled_putUint8@numData+1)& (0+255),b
 10501                           
 10502                           ;SSD1306oLED.c: 270: number /= 10;
 10503  004A6A  0E0A               	movlw	10
 10504  004A6C  6F60               	movwf	___lbdiv@divisor& (0+255),b
 10505  004A6E  517A               	movf	oled_putUint8@number& (0+255),w,b
 10506  004A70  ECD4  F02C         	call	___lbdiv
 10507  004A74  0100               	movlb	0	; () banked
 10508  004A76  6F7A               	movwf	oled_putUint8@number& (0+255),b
 10509                           
 10510                           ;SSD1306oLED.c: 271: numData.d0 = '0' + (number % 10);
 10511  004A78  C07A  F060         	movff	oled_putUint8@number,___awmod@dividend
 10512  004A7C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10513  004A7E  0E00               	movlw	0
 10514  004A80  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10515  004A82  0E0A               	movlw	10
 10516  004A84  6F62               	movwf	___awmod@divisor& (0+255),b
 10517  004A86  EC22  F029         	call	___awmod	;wreg free
 10518  004A8A  0100               	movlb	0	; () banked
 10519  004A8C  5160               	movf	?___awmod& (0+255),w,b
 10520  004A8E  0F30               	addlw	48
 10521  004A90  6F7B               	movwf	oled_putUint8@numData& (0+255),b
 10522                           
 10523                           ; BSR set to: 0
 10524                           ;SSD1306oLED.c: 273: numData.b[3]=0;
 10525  004A92  0E00               	movlw	0
 10526  004A94  6F7E               	movwf	(oled_putUint8@numData+3)& (0+255),b
 10527                           
 10528                           ; BSR set to: 0
 10529                           ;SSD1306oLED.c: 275: oled_putString(numData.b,station_dot,start_page);
 10530  004A96  0E7B               	movlw	low oled_putUint8@numData
 10531  004A98  6F72               	movwf	oled_putString@string& (0+255),b
 10532  004A9A  0E00               	movlw	high oled_putUint8@numData
 10533  004A9C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 10534  004A9E  5172               	movf	oled_putString@string& (0+255),w,b
 10535  004AA0  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 10536  004AA2  A4D8               	btfss	status,2,c
 10537  004AA4  0E20               	movlw	32
 10538  004AA6  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 10539  004AA8  C078  F075         	movff	oled_putUint8@station_dot,oled_putString@station_dot
 10540  004AAC  C079  F076         	movff	oled_putUint8@start_page,oled_putString@start_page
 10541  004AB0  EC76  F028         	call	_oled_putString	;wreg free
 10542  004AB4  0012               	return		;funcret
 10543  004AB6                     __end_of_oled_putUint8:
 10544                           	opt stack 0
 10545                           tblptru	equ	0xFF8
 10546                           tblptrh	equ	0xFF7
 10547                           tblptrl	equ	0xFF6
 10548                           tablat	equ	0xFF5
 10549                           prodh	equ	0xFF4
 10550                           prodl	equ	0xFF3
 10551                           intcon	equ	0xFF2
 10552                           postinc0	equ	0xFEE
 10553                           wreg	equ	0xFE8
 10554                           indf1	equ	0xFE7
 10555                           postdec1	equ	0xFE5
 10556                           fsr1h	equ	0xFE2
 10557                           fsr1l	equ	0xFE1
 10558                           indf2	equ	0xFDF
 10559                           fsr2h	equ	0xFDA
 10560                           fsr2l	equ	0xFD9
 10561                           status	equ	0xFD8
 10562                           
 10563 ;; *************** function _moteApp_setSensorsInput *****************
 10564 ;; Defined at:
 10565 ;;		line 1387 in file "../Includes/Board/MOTEapp.c"
 10566 ;; Parameters:    Size  Location     Type
 10567 ;;		None
 10568 ;; Auto vars:     Size  Location     Type
 10569 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 10570 ;; Return value:  Size  Location     Type
 10571 ;;                  1    wreg      void 
 10572 ;; Registers used:
 10573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10574 ;; Tracked objects:
 10575 ;;		On entry : 0/0
 10576 ;;		On exit  : 0/0
 10577 ;;		Unchanged: 0/0
 10578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10579 ;;      Params:         0       0       0       0       0       0       0       0       0
 10580 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10581 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10582 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10583 ;;Total ram usage:        2 bytes
 10584 ;; Hardware stack levels used:    1
 10585 ;; Hardware stack levels required when called:   14
 10586 ;; This function calls:
 10587 ;;		_MOTEapp_getModuleResponse
 10588 ;;		_moteApp_delayms
 10589 ;;		_sendCommand
 10590 ;; This function is called by:
 10591 ;;		_moteRunningProcess
 10592 ;;		_moteApp_testSensors
 10593 ;; This function uses a non-reentrant model
 10594 ;;
 10595                           
 10596                           	psect	text15
 10597  005074                     __ptext15:
 10598                           	opt stack 0
 10599  005074                     _moteApp_setSensorsInput:
 10600                           	opt stack 14
 10601                           
 10602                           ;MOTEapp.c: 1389: uint16_t escapeCounter = 0;
 10603                           
 10604                           ;incstack = 0
 10605  005074  0E00               	movlw	0
 10606  005076  0100               	movlb	0	; () banked
 10607  005078  6F66               	movwf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),b
 10608  00507A  0E00               	movlw	0
 10609  00507C  6F65               	movwf	moteApp_setSensorsInput@escapeCounter& (0+255),b
 10610                           
 10611                           ; BSR set to: 0
 10612                           ;MOTEapp.c: 1390: sendCommand("sys set pinmode GPIO13 ana");
 10613  00507E  0ED3               	movlw	low STR_183
 10614  005080  6F61               	movwf	sendCommand@string& (0+255),b
 10615  005082  0E79               	movlw	high STR_183
 10616  005084  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10617  005086  ECC0  F02D         	call	_sendCommand	;wreg free
 10618                           
 10619                           ;MOTEapp.c: 1391: while ( !MOTEapp_getModuleResponse() )
 10620  00508A  D009               	goto	l721
 10621  00508C                     
 10622                           ;MOTEapp.c: 1392: {
 10623                           ;MOTEapp.c: 1393: if (++escapeCounter > 50000)
 10624  00508C  0100               	movlb	0	; () banked
 10625  00508E  4B65               	infsnz	moteApp_setSensorsInput@escapeCounter& (0+255),f,b
 10626  005090  2B66               	incf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),f,b
 10627  005092  0E51               	movlw	81
 10628  005094  5D65               	subwf	moteApp_setSensorsInput@escapeCounter& (0+255),w,b
 10629  005096  0EC3               	movlw	195
 10630  005098  5966               	subwfb	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),w,b
 10631  00509A  B0D8               	btfsc	status,0,c
 10632  00509C  D005               	goto	u8360
 10633  00509E                     l721:
 10634                           
 10635                           ; BSR set to: 0
 10636                           
 10637                           ; BSR set to: 0
 10638  00509E  EC6B  F02A         	call	_MOTEapp_getModuleResponse	;wreg free
 10639  0050A2  0900               	iorlw	0
 10640  0050A4  B4D8               	btfsc	status,2,c
 10641  0050A6  D7F2               	goto	l720
 10642  0050A8                     u8360:
 10643                           
 10644                           ;MOTEapp.c: 1395: }
 10645                           ;MOTEapp.c: 1396: escapeCounter = 0;
 10646  0050A8  0E00               	movlw	0
 10647  0050AA  0100               	movlb	0	; () banked
 10648  0050AC  6F66               	movwf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),b
 10649  0050AE  0E00               	movlw	0
 10650  0050B0  6F65               	movwf	moteApp_setSensorsInput@escapeCounter& (0+255),b
 10651                           
 10652                           ; BSR set to: 0
 10653                           ;MOTEapp.c: 1397: sendCommand("sys set pinmode GPIO12 ana");
 10654  0050B2  0EB8               	movlw	low STR_184
 10655  0050B4  6F61               	movwf	sendCommand@string& (0+255),b
 10656  0050B6  0E79               	movlw	high STR_184
 10657  0050B8  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10658  0050BA  ECC0  F02D         	call	_sendCommand	;wreg free
 10659                           
 10660                           ;MOTEapp.c: 1398: while ( !MOTEapp_getModuleResponse() )
 10661  0050BE  D009               	goto	l725
 10662  0050C0                     
 10663                           ;MOTEapp.c: 1399: {
 10664                           ;MOTEapp.c: 1400: if (++escapeCounter > 50000)
 10665  0050C0  0100               	movlb	0	; () banked
 10666  0050C2  4B65               	infsnz	moteApp_setSensorsInput@escapeCounter& (0+255),f,b
 10667  0050C4  2B66               	incf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),f,b
 10668  0050C6  0E51               	movlw	81
 10669  0050C8  5D65               	subwf	moteApp_setSensorsInput@escapeCounter& (0+255),w,b
 10670  0050CA  0EC3               	movlw	195
 10671  0050CC  5966               	subwfb	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),w,b
 10672  0050CE  B0D8               	btfsc	status,0,c
 10673  0050D0  D005               	goto	u8380
 10674  0050D2                     l725:
 10675                           
 10676                           ; BSR set to: 0
 10677                           
 10678                           ; BSR set to: 0
 10679  0050D2  EC6B  F02A         	call	_MOTEapp_getModuleResponse	;wreg free
 10680  0050D6  0900               	iorlw	0
 10681  0050D8  B4D8               	btfsc	status,2,c
 10682  0050DA  D7F2               	goto	l724
 10683  0050DC                     u8380:
 10684                           
 10685                           ;MOTEapp.c: 1402: }
 10686                           ;MOTEapp.c: 1403: moteApp_delayms(100);
 10687  0050DC  0E00               	movlw	0
 10688  0050DE  0100               	movlb	0	; () banked
 10689  0050E0  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 10690  0050E2  0E64               	movlw	100
 10691  0050E4  6F60               	movwf	moteApp_delayms@length& (0+255),b
 10692  0050E6  EC0D  F02E         	call	_moteApp_delayms	;wreg free
 10693  0050EA  0012               	return		;funcret
 10694  0050EC                     __end_of_moteApp_setSensorsInput:
 10695                           	opt stack 0
 10696                           tblptru	equ	0xFF8
 10697                           tblptrh	equ	0xFF7
 10698                           tblptrl	equ	0xFF6
 10699                           tablat	equ	0xFF5
 10700                           prodh	equ	0xFF4
 10701                           prodl	equ	0xFF3
 10702                           intcon	equ	0xFF2
 10703                           postinc0	equ	0xFEE
 10704                           wreg	equ	0xFE8
 10705                           indf1	equ	0xFE7
 10706                           postdec1	equ	0xFE5
 10707                           fsr1h	equ	0xFE2
 10708                           fsr1l	equ	0xFE1
 10709                           indf2	equ	0xFDF
 10710                           fsr2h	equ	0xFDA
 10711                           fsr2l	equ	0xFD9
 10712                           status	equ	0xFD8
 10713                           
 10714 ;; *************** function _moteApp_lightStringSize *****************
 10715 ;; Defined at:
 10716 ;;		line 1452 in file "../Includes/Board/MOTEapp.c"
 10717 ;; Parameters:    Size  Location     Type
 10718 ;;		None
 10719 ;; Auto vars:     Size  Location     Type
 10720 ;;		None
 10721 ;; Return value:  Size  Location     Type
 10722 ;;                  1    wreg      unsigned char 
 10723 ;; Registers used:
 10724 ;;		wreg, status,2
 10725 ;; Tracked objects:
 10726 ;;		On entry : 0/0
 10727 ;;		On exit  : 0/0
 10728 ;;		Unchanged: 0/0
 10729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10730 ;;      Params:         0       0       0       0       0       0       0       0       0
 10731 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10732 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10733 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10734 ;;Total ram usage:        0 bytes
 10735 ;; Hardware stack levels used:    1
 10736 ;; Hardware stack levels required when called:   11
 10737 ;; This function calls:
 10738 ;;		Nothing
 10739 ;; This function is called by:
 10740 ;;		_moteRunningProcess
 10741 ;; This function uses a non-reentrant model
 10742 ;;
 10743                           
 10744                           	psect	text16
 10745  006212                     __ptext16:
 10746                           	opt stack 0
 10747  006212                     _moteApp_lightStringSize:
 10748                           	opt stack 17
 10749                           
 10750                           ;MOTEapp.c: 1454: return lightStringSize;
 10751                           
 10752                           ;incstack = 0
 10753  006212  0100               	movlb	0	; () banked
 10754  006214  51ED               	movf	_lightStringSize& (0+255),w,b
 10755  006216  0012               	return	
 10756  006218                     __end_of_moteApp_lightStringSize:
 10757                           	opt stack 0
 10758                           tblptru	equ	0xFF8
 10759                           tblptrh	equ	0xFF7
 10760                           tblptrl	equ	0xFF6
 10761                           tablat	equ	0xFF5
 10762                           prodh	equ	0xFF4
 10763                           prodl	equ	0xFF3
 10764                           intcon	equ	0xFF2
 10765                           postinc0	equ	0xFEE
 10766                           wreg	equ	0xFE8
 10767                           indf1	equ	0xFE7
 10768                           postdec1	equ	0xFE5
 10769                           fsr1h	equ	0xFE2
 10770                           fsr1l	equ	0xFE1
 10771                           indf2	equ	0xFDF
 10772                           fsr2h	equ	0xFDA
 10773                           fsr2l	equ	0xFD9
 10774                           status	equ	0xFD8
 10775                           
 10776 ;; *************** function _moteApp_getTempValue *****************
 10777 ;; Defined at:
 10778 ;;		line 1405 in file "../Includes/Board/MOTEapp.c"
 10779 ;; Parameters:    Size  Location     Type
 10780 ;;		None
 10781 ;; Auto vars:     Size  Location     Type
 10782 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 10783 ;; Return value:  Size  Location     Type
 10784 ;;                  2    3[BANK0 ] PTR unsigned char 
 10785 ;; Registers used:
 10786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10787 ;; Tracked objects:
 10788 ;;		On entry : 0/0
 10789 ;;		On exit  : 0/0
 10790 ;;		Unchanged: 0/0
 10791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10792 ;;      Params:         0       2       0       0       0       0       0       0       0
 10793 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10794 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10795 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10796 ;;Total ram usage:        4 bytes
 10797 ;; Hardware stack levels used:    1
 10798 ;; Hardware stack levels required when called:   14
 10799 ;; This function calls:
 10800 ;;		_MOTEapp_getModuleResponse
 10801 ;;		_sendCommand
 10802 ;; This function is called by:
 10803 ;;		_moteHandler
 10804 ;;		_moteRunningProcess
 10805 ;;		_moteApp_testSensors
 10806 ;; This function uses a non-reentrant model
 10807 ;;
 10808                           
 10809                           	psect	text17
 10810  005968                     __ptext17:
 10811                           	opt stack 0
 10812  005968                     _moteApp_getTempValue:
 10813                           	opt stack 14
 10814                           
 10815                           ;MOTEapp.c: 1407: uint16_t escapeCounter = 0;
 10816                           
 10817                           ; BSR set to: 0
 10818                           ;incstack = 0
 10819  005968  0E00               	movlw	0
 10820  00596A  0100               	movlb	0	; () banked
 10821  00596C  6F66               	movwf	(moteApp_getTempValue@escapeCounter+1)& (0+255),b
 10822  00596E  0E00               	movlw	0
 10823  005970  6F65               	movwf	moteApp_getTempValue@escapeCounter& (0+255),b
 10824                           
 10825                           ; BSR set to: 0
 10826                           ;MOTEapp.c: 1409: sendCommand("sys get pinana GPIO12");
 10827  005972  0E56               	movlw	low STR_185
 10828  005974  6F61               	movwf	sendCommand@string& (0+255),b
 10829  005976  0E7A               	movlw	high STR_185
 10830  005978  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10831  00597A  ECC0  F02D         	call	_sendCommand	;wreg free
 10832                           
 10833                           ;MOTEapp.c: 1410: while ( !MOTEapp_getModuleResponse() )
 10834  00597E  D009               	goto	l732
 10835  005980                     
 10836                           ;MOTEapp.c: 1411: {
 10837                           ;MOTEapp.c: 1412: if (++escapeCounter > 50000)
 10838  005980  0100               	movlb	0	; () banked
 10839  005982  4B65               	infsnz	moteApp_getTempValue@escapeCounter& (0+255),f,b
 10840  005984  2B66               	incf	(moteApp_getTempValue@escapeCounter+1)& (0+255),f,b
 10841  005986  0E51               	movlw	81
 10842  005988  5D65               	subwf	moteApp_getTempValue@escapeCounter& (0+255),w,b
 10843  00598A  0EC3               	movlw	195
 10844  00598C  5966               	subwfb	(moteApp_getTempValue@escapeCounter+1)& (0+255),w,b
 10845  00598E  B0D8               	btfsc	status,0,c
 10846  005990  D005               	goto	u8150
 10847  005992                     l732:
 10848                           
 10849                           ; BSR set to: 0
 10850                           
 10851                           ; BSR set to: 0
 10852  005992  EC6B  F02A         	call	_MOTEapp_getModuleResponse	;wreg free
 10853  005996  0900               	iorlw	0
 10854  005998  B4D8               	btfsc	status,2,c
 10855  00599A  D7F2               	goto	l731
 10856  00599C                     u8150:
 10857                           
 10858                           ;MOTEapp.c: 1414: }
 10859                           ;MOTEapp.c: 1416: return &moduleResonseBuffer;
 10860  00599C  0E65               	movlw	low _moduleResonseBuffer
 10861  00599E  0100               	movlb	0	; () banked
 10862  0059A0  6F63               	movwf	?_moteApp_getTempValue& (0+255),b
 10863  0059A2  0E01               	movlw	high _moduleResonseBuffer
 10864  0059A4  6F64               	movwf	(?_moteApp_getTempValue+1)& (0+255),b
 10865  0059A6  0012               	return	
 10866  0059A8                     __end_of_moteApp_getTempValue:
 10867                           	opt stack 0
 10868                           tblptru	equ	0xFF8
 10869                           tblptrh	equ	0xFF7
 10870                           tblptrl	equ	0xFF6
 10871                           tablat	equ	0xFF5
 10872                           prodh	equ	0xFF4
 10873                           prodl	equ	0xFF3
 10874                           intcon	equ	0xFF2
 10875                           postinc0	equ	0xFEE
 10876                           wreg	equ	0xFE8
 10877                           indf1	equ	0xFE7
 10878                           postdec1	equ	0xFE5
 10879                           fsr1h	equ	0xFE2
 10880                           fsr1l	equ	0xFE1
 10881                           indf2	equ	0xFDF
 10882                           fsr2h	equ	0xFDA
 10883                           fsr2l	equ	0xFD9
 10884                           status	equ	0xFD8
 10885                           
 10886 ;; *************** function _moteApp_getLightValue *****************
 10887 ;; Defined at:
 10888 ;;		line 1419 in file "../Includes/Board/MOTEapp.c"
 10889 ;; Parameters:    Size  Location     Type
 10890 ;;		None
 10891 ;; Auto vars:     Size  Location     Type
 10892 ;;  escapeCounte    2   16[BANK0 ] unsigned int 
 10893 ;; Return value:  Size  Location     Type
 10894 ;;                  2   14[BANK0 ] PTR unsigned char 
 10895 ;; Registers used:
 10896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10897 ;; Tracked objects:
 10898 ;;		On entry : 0/0
 10899 ;;		On exit  : 0/0
 10900 ;;		Unchanged: 0/0
 10901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10902 ;;      Params:         0       2       0       0       0       0       0       0       0
 10903 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10904 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10905 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10906 ;;Total ram usage:        4 bytes
 10907 ;; Hardware stack levels used:    1
 10908 ;; Hardware stack levels required when called:   14
 10909 ;; This function calls:
 10910 ;;		_MOTEapp_getModuleResponse
 10911 ;;		_moteApp_setLightString
 10912 ;;		_sendCommand
 10913 ;; This function is called by:
 10914 ;;		_moteHandler
 10915 ;;		_moteRunningProcess
 10916 ;;		_moteApp_testSensors
 10917 ;; This function uses a non-reentrant model
 10918 ;;
 10919                           
 10920                           	psect	text18
 10921  0057BC                     __ptext18:
 10922                           	opt stack 0
 10923  0057BC                     _moteApp_getLightValue:
 10924                           	opt stack 14
 10925                           
 10926                           ;MOTEapp.c: 1421: uint16_t escapeCounter = 0;
 10927                           
 10928                           ; BSR set to: 0
 10929                           ;incstack = 0
 10930  0057BC  0E00               	movlw	0
 10931  0057BE  0100               	movlb	0	; () banked
 10932  0057C0  6F71               	movwf	(moteApp_getLightValue@escapeCounter+1)& (0+255),b
 10933  0057C2  0E00               	movlw	0
 10934  0057C4  6F70               	movwf	moteApp_getLightValue@escapeCounter& (0+255),b
 10935                           
 10936                           ; BSR set to: 0
 10937                           ;MOTEapp.c: 1423: sendCommand("sys get pinana GPIO13");
 10938  0057C6  0E6C               	movlw	low STR_186
 10939  0057C8  6F61               	movwf	sendCommand@string& (0+255),b
 10940  0057CA  0E7A               	movlw	high STR_186
 10941  0057CC  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10942  0057CE  ECC0  F02D         	call	_sendCommand	;wreg free
 10943                           
 10944                           ;MOTEapp.c: 1424: while ( !MOTEapp_getModuleResponse() )
 10945  0057D2  D009               	goto	l739
 10946  0057D4                     
 10947                           ;MOTEapp.c: 1425: {
 10948                           ;MOTEapp.c: 1426: if (++escapeCounter > 50000)
 10949  0057D4  0100               	movlb	0	; () banked
 10950  0057D6  4B70               	infsnz	moteApp_getLightValue@escapeCounter& (0+255),f,b
 10951  0057D8  2B71               	incf	(moteApp_getLightValue@escapeCounter+1)& (0+255),f,b
 10952  0057DA  0E51               	movlw	81
 10953  0057DC  5D70               	subwf	moteApp_getLightValue@escapeCounter& (0+255),w,b
 10954  0057DE  0EC3               	movlw	195
 10955  0057E0  5971               	subwfb	(moteApp_getLightValue@escapeCounter+1)& (0+255),w,b
 10956  0057E2  B0D8               	btfsc	status,0,c
 10957  0057E4  D005               	goto	u8130
 10958  0057E6                     l739:
 10959                           
 10960                           ; BSR set to: 0
 10961                           
 10962                           ; BSR set to: 0
 10963  0057E6  EC6B  F02A         	call	_MOTEapp_getModuleResponse	;wreg free
 10964  0057EA  0900               	iorlw	0
 10965  0057EC  B4D8               	btfsc	status,2,c
 10966  0057EE  D7F2               	goto	l738
 10967  0057F0                     u8130:
 10968                           
 10969                           ;MOTEapp.c: 1428: }
 10970                           ;MOTEapp.c: 1429: moteApp_setLightString(moduleResonseBuffer);
 10971  0057F0  0E65               	movlw	low _moduleResonseBuffer
 10972  0057F2  0100               	movlb	0	; () banked
 10973  0057F4  6F6B               	movwf	moteApp_setLightString@lightString& (0+255),b
 10974  0057F6  0E01               	movlw	high _moduleResonseBuffer
 10975  0057F8  6F6C               	movwf	(moteApp_setLightString@lightString+1)& (0+255),b
 10976  0057FA  EC36  F02A         	call	_moteApp_setLightString	;wreg free
 10977                           
 10978                           ;MOTEapp.c: 1430: return &moduleResonseBuffer;
 10979  0057FE  0E65               	movlw	low _moduleResonseBuffer
 10980  005800  0100               	movlb	0	; () banked
 10981  005802  6F6E               	movwf	?_moteApp_getLightValue& (0+255),b
 10982  005804  0E01               	movlw	high _moduleResonseBuffer
 10983  005806  6F6F               	movwf	(?_moteApp_getLightValue+1)& (0+255),b
 10984  005808  0012               	return	
 10985  00580A                     __end_of_moteApp_getLightValue:
 10986                           	opt stack 0
 10987                           tblptru	equ	0xFF8
 10988                           tblptrh	equ	0xFF7
 10989                           tblptrl	equ	0xFF6
 10990                           tablat	equ	0xFF5
 10991                           prodh	equ	0xFF4
 10992                           prodl	equ	0xFF3
 10993                           intcon	equ	0xFF2
 10994                           postinc0	equ	0xFEE
 10995                           wreg	equ	0xFE8
 10996                           indf1	equ	0xFE7
 10997                           postdec1	equ	0xFE5
 10998                           fsr1h	equ	0xFE2
 10999                           fsr1l	equ	0xFE1
 11000                           indf2	equ	0xFDF
 11001                           fsr2h	equ	0xFDA
 11002                           fsr2l	equ	0xFD9
 11003                           status	equ	0xFD8
 11004                           
 11005 ;; *************** function _moteApp_setLightString *****************
 11006 ;; Defined at:
 11007 ;;		line 1437 in file "../Includes/Board/MOTEapp.c"
 11008 ;; Parameters:    Size  Location     Type
 11009 ;;  lightString     2   11[BANK0 ] PTR unsigned char 
 11010 ;;		 -> moduleResonseBuffer(64), 
 11011 ;; Auto vars:     Size  Location     Type
 11012 ;;  stingPos        1   13[BANK0 ] unsigned char 
 11013 ;; Return value:  Size  Location     Type
 11014 ;;                  1    wreg      void 
 11015 ;; Registers used:
 11016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11017 ;; Tracked objects:
 11018 ;;		On entry : 0/0
 11019 ;;		On exit  : 0/0
 11020 ;;		Unchanged: 0/0
 11021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11022 ;;      Params:         0       2       0       0       0       0       0       0       0
 11023 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11024 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11025 ;;      Totals:         0       3       0       0       0       0       0       0       0
 11026 ;;Total ram usage:        3 bytes
 11027 ;; Hardware stack levels used:    1
 11028 ;; Hardware stack levels required when called:   12
 11029 ;; This function calls:
 11030 ;;		_memcpy
 11031 ;; This function is called by:
 11032 ;;		_moteApp_getLightValue
 11033 ;; This function uses a non-reentrant model
 11034 ;;
 11035                           
 11036                           	psect	text19
 11037  00546C                     __ptext19:
 11038                           	opt stack 0
 11039  00546C                     _moteApp_setLightString:
 11040                           	opt stack 15
 11041                           
 11042                           ;MOTEapp.c: 1439: memcpy(storedLight, clearLight, sizeof(storedLight));
 11043                           
 11044                           ; BSR set to: 0
 11045                           ;incstack = 0
 11046  00546C  0EF3               	movlw	low _storedLight
 11047  00546E  0100               	movlb	0	; () banked
 11048  005470  6F60               	movwf	memcpy@d1& (0+255),b
 11049  005472  0E01               	movlw	high _storedLight
 11050  005474  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11051  005476  0EEE               	movlw	low _clearLight
 11052  005478  6F62               	movwf	memcpy@s1& (0+255),b
 11053  00547A  0E01               	movlw	high _clearLight
 11054  00547C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 11055  00547E  0E00               	movlw	0
 11056  005480  6F65               	movwf	(memcpy@n+1)& (0+255),b
 11057  005482  0E05               	movlw	5
 11058  005484  6F64               	movwf	memcpy@n& (0+255),b
 11059  005486  EC2C  F02C         	call	_memcpy	;wreg free
 11060                           
 11061                           ;MOTEapp.c: 1440: memcpy(storedLight, lightString, sizeof(storedLight));
 11062  00548A  0EF3               	movlw	low _storedLight
 11063  00548C  0100               	movlb	0	; () banked
 11064  00548E  6F60               	movwf	memcpy@d1& (0+255),b
 11065  005490  0E01               	movlw	high _storedLight
 11066  005492  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11067  005494  C06B  F062         	movff	moteApp_setLightString@lightString,memcpy@s1
 11068  005498  C06C  F063         	movff	moteApp_setLightString@lightString+1,memcpy@s1+1
 11069  00549C  0E00               	movlw	0
 11070  00549E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 11071  0054A0  0E05               	movlw	5
 11072  0054A2  6F64               	movwf	memcpy@n& (0+255),b
 11073  0054A4  EC2C  F02C         	call	_memcpy	;wreg free
 11074                           
 11075                           ;MOTEapp.c: 1442: for (uint8_t stingPos = 0; stingPos < sizeof(storedLight); stingPos++)
 11076  0054A8  0E00               	movlw	0
 11077  0054AA  0100               	movlb	0	; () banked
 11078  0054AC  6F6D               	movwf	moteApp_setLightString@stingPos& (0+255),b
 11079  0054AE                     l8699:
 11080                           
 11081                           ; BSR set to: 0
 11082  0054AE  0E04               	movlw	4
 11083  0054B0  656D               	cpfsgt	moteApp_setLightString@stingPos& (0+255),b
 11084  0054B2  D001               	goto	l750
 11085  0054B4  D00E               	goto	u6680
 11086  0054B6                     l750:
 11087                           
 11088                           ; BSR set to: 0
 11089                           ;MOTEapp.c: 1443: {
 11090                           ;MOTEapp.c: 1444: if (storedLight[stingPos] == 0x00)
 11091                           
 11092                           ; BSR set to: 0
 11093  0054B6  516D               	movf	moteApp_setLightString@stingPos& (0+255),w,b
 11094  0054B8  0D01               	mullw	1
 11095  0054BA  0EF3               	movlw	low _storedLight
 11096  0054BC  24F3               	addwf	prodl,w,c
 11097  0054BE  6ED9               	movwf	fsr2l,c
 11098  0054C0  0E01               	movlw	high _storedLight
 11099  0054C2  20F4               	addwfc	prodh,w,c
 11100  0054C4  6EDA               	movwf	fsr2h,c
 11101  0054C6  50DF               	movf	indf2,w,c
 11102  0054C8  B4D8               	btfsc	status,2,c
 11103                           
 11104                           ; BSR set to: 0
 11105                           ;MOTEapp.c: 1445: {
 11106                           ;MOTEapp.c: 1446: lightStringSize = stingPos;
 11107  0054CA  C06D  F0ED         	movff	moteApp_setLightString@stingPos,_lightStringSize
 11108                           
 11109                           ; BSR set to: 0
 11110                           
 11111                           ; BSR set to: 0
 11112  0054CE  2B6D               	incf	moteApp_setLightString@stingPos& (0+255),f,b
 11113  0054D0  D7EE               	goto	l8699
 11114  0054D2                     u6680:
 11115                           
 11116                           ; BSR set to: 0
 11117                           ;MOTEapp.c: 1447: }
 11118                           ;MOTEapp.c: 1448: }
 11119                           ;MOTEapp.c: 1449: __nop();
 11120  0054D2  F000               	nop	
 11121  0054D4  0012               	return		;funcret
 11122  0054D6                     __end_of_moteApp_setLightString:
 11123                           	opt stack 0
 11124                           tblptru	equ	0xFF8
 11125                           tblptrh	equ	0xFF7
 11126                           tblptrl	equ	0xFF6
 11127                           tablat	equ	0xFF5
 11128                           prodh	equ	0xFF4
 11129                           prodl	equ	0xFF3
 11130                           intcon	equ	0xFF2
 11131                           postinc0	equ	0xFEE
 11132                           wreg	equ	0xFE8
 11133                           indf1	equ	0xFE7
 11134                           postdec1	equ	0xFE5
 11135                           fsr1h	equ	0xFE2
 11136                           fsr1l	equ	0xFE1
 11137                           indf2	equ	0xFDF
 11138                           fsr2h	equ	0xFDA
 11139                           fsr2l	equ	0xFD9
 11140                           status	equ	0xFD8
 11141                           
 11142 ;; *************** function _memcpy *****************
 11143 ;; Defined at:
 11144 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcpy.c"
 11145 ;; Parameters:    Size  Location     Type
 11146 ;;  d1              2    0[BANK0 ] PTR void 
 11147 ;;		 -> storedLight(5), 
 11148 ;;  s1              2    2[BANK0 ] PTR const void 
 11149 ;;		 -> clearLight(5), moduleResonseBuffer(64), 
 11150 ;;  n               2    4[BANK0 ] unsigned int 
 11151 ;; Auto vars:     Size  Location     Type
 11152 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 11153 ;;		 -> clearLight(5), moduleResonseBuffer(64), 
 11154 ;;  d               2    6[BANK0 ] PTR unsigned char 
 11155 ;;		 -> storedLight(5), 
 11156 ;;  tmp             1   10[BANK0 ] unsigned char 
 11157 ;; Return value:  Size  Location     Type
 11158 ;;                  2    0[BANK0 ] PTR void 
 11159 ;; Registers used:
 11160 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11161 ;; Tracked objects:
 11162 ;;		On entry : 0/0
 11163 ;;		On exit  : 0/0
 11164 ;;		Unchanged: 0/0
 11165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11166 ;;      Params:         0       6       0       0       0       0       0       0       0
 11167 ;;      Locals:         0       5       0       0       0       0       0       0       0
 11168 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11169 ;;      Totals:         0      11       0       0       0       0       0       0       0
 11170 ;;Total ram usage:       11 bytes
 11171 ;; Hardware stack levels used:    1
 11172 ;; Hardware stack levels required when called:   11
 11173 ;; This function calls:
 11174 ;;		Nothing
 11175 ;; This function is called by:
 11176 ;;		_moteApp_setLightString
 11177 ;; This function uses a non-reentrant model
 11178 ;;
 11179                           
 11180                           	psect	text20
 11181  005858                     __ptext20:
 11182                           	opt stack 0
 11183  005858                     _memcpy:
 11184                           	opt stack 15
 11185                           
 11186                           ;incstack = 0
 11187  005858  C062  F068         	movff	memcpy@s1,memcpy@s
 11188  00585C  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 11189  005860  C060  F066         	movff	memcpy@d1,memcpy@d
 11190  005864  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 11191  005868  D011               	goto	l2674
 11192  00586A                     l8251:
 11193  00586A  C068  FFD9         	movff	memcpy@s,fsr2l
 11194  00586E  C069  FFDA         	movff	memcpy@s+1,fsr2h
 11195  005872  50DF               	movf	indf2,w,c
 11196  005874  0100               	movlb	0	; () banked
 11197  005876  6F6A               	movwf	memcpy@tmp& (0+255),b
 11198                           
 11199                           ; BSR set to: 0
 11200  005878  4B68               	infsnz	memcpy@s& (0+255),f,b
 11201  00587A  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 11202                           
 11203                           ; BSR set to: 0
 11204  00587C  C066  FFD9         	movff	memcpy@d,fsr2l
 11205  005880  C067  FFDA         	movff	memcpy@d+1,fsr2h
 11206  005884  C06A  FFDF         	movff	memcpy@tmp,indf2
 11207                           
 11208                           ; BSR set to: 0
 11209  005888  4B66               	infsnz	memcpy@d& (0+255),f,b
 11210  00588A  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 11211  00588C                     l2674:
 11212                           
 11213                           ; BSR set to: 0
 11214  00588C  0100               	movlb	0	; () banked
 11215  00588E  0764               	decf	memcpy@n& (0+255),f,b
 11216  005890  A0D8               	btfss	status,0,c
 11217  005892  0765               	decf	(memcpy@n+1)& (0+255),f,b
 11218  005894  2964               	incf	memcpy@n& (0+255),w,b
 11219  005896  E1E9               	bnz	l8251
 11220  005898  2965               	incf	(memcpy@n+1)& (0+255),w,b
 11221  00589A  B4D8               	btfsc	status,2,c
 11222  00589C  0012               	return	
 11223  00589E  D7E5               	goto	l2675
 11224  0058A0                     __end_of_memcpy:
 11225                           	opt stack 0
 11226                           tblptru	equ	0xFF8
 11227                           tblptrh	equ	0xFF7
 11228                           tblptrl	equ	0xFF6
 11229                           tablat	equ	0xFF5
 11230                           prodh	equ	0xFF4
 11231                           prodl	equ	0xFF3
 11232                           intcon	equ	0xFF2
 11233                           postinc0	equ	0xFEE
 11234                           wreg	equ	0xFE8
 11235                           indf1	equ	0xFE7
 11236                           postdec1	equ	0xFE5
 11237                           fsr1h	equ	0xFE2
 11238                           fsr1l	equ	0xFE1
 11239                           indf2	equ	0xFDF
 11240                           fsr2h	equ	0xFDA
 11241                           fsr2l	equ	0xFD9
 11242                           status	equ	0xFD8
 11243                           
 11244 ;; *************** function _moteApp_getLightString *****************
 11245 ;; Defined at:
 11246 ;;		line 1456 in file "../Includes/Board/MOTEapp.c"
 11247 ;; Parameters:    Size  Location     Type
 11248 ;;		None
 11249 ;; Auto vars:     Size  Location     Type
 11250 ;;		None
 11251 ;; Return value:  Size  Location     Type
 11252 ;;                  2    0[BANK0 ] PTR unsigned char 
 11253 ;; Registers used:
 11254 ;;		wreg, status,2, status,0
 11255 ;; Tracked objects:
 11256 ;;		On entry : 0/0
 11257 ;;		On exit  : 0/0
 11258 ;;		Unchanged: 0/0
 11259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11260 ;;      Params:         0       2       0       0       0       0       0       0       0
 11261 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11262 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11263 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11264 ;;Total ram usage:        2 bytes
 11265 ;; Hardware stack levels used:    1
 11266 ;; Hardware stack levels required when called:   11
 11267 ;; This function calls:
 11268 ;;		Nothing
 11269 ;; This function is called by:
 11270 ;;		_moteRunningProcess
 11271 ;; This function uses a non-reentrant model
 11272 ;;
 11273                           
 11274                           	psect	text21
 11275  00619C                     __ptext21:
 11276                           	opt stack 0
 11277  00619C                     _moteApp_getLightString:
 11278                           	opt stack 17
 11279                           
 11280                           ;MOTEapp.c: 1458: return &storedLight;
 11281                           
 11282                           ; BSR set to: 0
 11283                           ;incstack = 0
 11284  00619C  0EF3               	movlw	low _storedLight
 11285  00619E  0100               	movlb	0	; () banked
 11286  0061A0  6F60               	movwf	?_moteApp_getLightString& (0+255),b
 11287  0061A2  0E01               	movlw	high _storedLight
 11288  0061A4  6F61               	movwf	(?_moteApp_getLightString+1)& (0+255),b
 11289  0061A6  0012               	return	
 11290  0061A8                     __end_of_moteApp_getLightString:
 11291                           	opt stack 0
 11292                           tblptru	equ	0xFF8
 11293                           tblptrh	equ	0xFF7
 11294                           tblptrl	equ	0xFF6
 11295                           tablat	equ	0xFF5
 11296                           prodh	equ	0xFF4
 11297                           prodl	equ	0xFF3
 11298                           intcon	equ	0xFF2
 11299                           postinc0	equ	0xFEE
 11300                           wreg	equ	0xFE8
 11301                           indf1	equ	0xFE7
 11302                           postdec1	equ	0xFE5
 11303                           fsr1h	equ	0xFE2
 11304                           fsr1l	equ	0xFE1
 11305                           indf2	equ	0xFDF
 11306                           fsr2h	equ	0xFDA
 11307                           fsr2l	equ	0xFD9
 11308                           status	equ	0xFD8
 11309                           
 11310 ;; *************** function _moteApp_convertSensorValue *****************
 11311 ;; Defined at:
 11312 ;;		line 1347 in file "../Includes/Board/MOTEapp.c"
 11313 ;; Parameters:    Size  Location     Type
 11314 ;;  string          2   18[BANK0 ] PTR const unsigned char 
 11315 ;;		 -> moduleResonseBuffer(64), 
 11316 ;; Auto vars:     Size  Location     Type
 11317 ;;  convertedVal    2   23[BANK0 ] unsigned int 
 11318 ;;  index           1   25[BANK0 ] unsigned char 
 11319 ;; Return value:  Size  Location     Type
 11320 ;;                  2   18[BANK0 ] unsigned int 
 11321 ;; Registers used:
 11322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11323 ;; Tracked objects:
 11324 ;;		On entry : 0/0
 11325 ;;		On exit  : 0/0
 11326 ;;		Unchanged: 0/0
 11327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11328 ;;      Params:         0       2       0       0       0       0       0       0       0
 11329 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11330 ;;      Temps:          0       3       0       0       0       0       0       0       0
 11331 ;;      Totals:         0       8       0       0       0       0       0       0       0
 11332 ;;Total ram usage:        8 bytes
 11333 ;; Hardware stack levels used:    1
 11334 ;; Hardware stack levels required when called:   12
 11335 ;; This function calls:
 11336 ;;		___wmul
 11337 ;; This function is called by:
 11338 ;;		_moteHandler
 11339 ;;		_moteRunningProcess
 11340 ;;		_moteApp_testSensors
 11341 ;; This function uses a non-reentrant model
 11342 ;;
 11343                           
 11344                           	psect	text22
 11345  004F7C                     __ptext22:
 11346                           	opt stack 0
 11347  004F7C                     _moteApp_convertSensorValue:
 11348                           	opt stack 16
 11349                           
 11350                           ;MOTEapp.c: 1349: uint8_t index;
 11351                           ;MOTEapp.c: 1350: uint16_t convertedValue = 0;
 11352                           
 11353                           ; BSR set to: 0
 11354                           ;incstack = 0
 11355  004F7C  0E00               	movlw	0
 11356  004F7E  0100               	movlb	0	; () banked
 11357  004F80  6F78               	movwf	(moteApp_convertSensorValue@convertedValue+1)& (0+255),b
 11358  004F82  0E00               	movlw	0
 11359  004F84  6F77               	movwf	moteApp_convertSensorValue@convertedValue& (0+255),b
 11360                           
 11361                           ;MOTEapp.c: 1351: for(index = 0; index < 4; index++)
 11362  004F86  0E00               	movlw	0
 11363  004F88  6F79               	movwf	moteApp_convertSensorValue@index& (0+255),b
 11364  004F8A                     l9673:
 11365                           
 11366                           ; BSR set to: 0
 11367  004F8A  0E03               	movlw	3
 11368  004F8C  6579               	cpfsgt	moteApp_convertSensorValue@index& (0+255),b
 11369  004F8E  D001               	goto	l708
 11370  004F90  D02F               	goto	u8190
 11371  004F92                     l708:
 11372                           
 11373                           ; BSR set to: 0
 11374                           ;MOTEapp.c: 1352: {
 11375                           ;MOTEapp.c: 1353: if (*string != 0)
 11376                           
 11377                           ; BSR set to: 0
 11378  004F92  C072  FFD9         	movff	moteApp_convertSensorValue@string,fsr2l
 11379  004F96  C073  FFDA         	movff	moteApp_convertSensorValue@string+1,fsr2h
 11380  004F9A  50DF               	movf	indf2,w,c
 11381  004F9C  B4D8               	btfsc	status,2,c
 11382  004F9E  D028               	goto	u8190
 11383                           
 11384                           ; BSR set to: 0
 11385                           ;MOTEapp.c: 1354: {
 11386                           ;MOTEapp.c: 1355: if (index != 0)
 11387  004FA0  5179               	movf	moteApp_convertSensorValue@index& (0+255),w,b
 11388  004FA2  B4D8               	btfsc	status,2,c
 11389  004FA4  D00E               	goto	l711
 11390                           
 11391                           ; BSR set to: 0
 11392                           ;MOTEapp.c: 1356: convertedValue = convertedValue * 10;
 11393  004FA6  C077  F060         	movff	moteApp_convertSensorValue@convertedValue,___wmul@multiplier
 11394  004FAA  C078  F061         	movff	moteApp_convertSensorValue@convertedValue+1,___wmul@multiplier+1
 11395  004FAE  0E00               	movlw	0
 11396  004FB0  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11397  004FB2  0E0A               	movlw	10
 11398  004FB4  6F62               	movwf	___wmul@multiplicand& (0+255),b
 11399  004FB6  EC25  F02F         	call	___wmul	;wreg free
 11400  004FBA  C060  F077         	movff	?___wmul,moteApp_convertSensorValue@convertedValue
 11401  004FBE  C061  F078         	movff	?___wmul+1,moteApp_convertSensorValue@convertedValue+1
 11402  004FC2                     l711:
 11403                           
 11404                           ;MOTEapp.c: 1358: convertedValue = (*string++ - '0') + convertedValue;
 11405  004FC2  C072  FFD9         	movff	moteApp_convertSensorValue@string,fsr2l
 11406  004FC6  C073  FFDA         	movff	moteApp_convertSensorValue@string+1,fsr2h
 11407  004FCA  50DF               	movf	indf2,w,c
 11408  004FCC  0100               	movlb	0	; () banked
 11409  004FCE  6F74               	movwf	??_moteApp_convertSensorValue& (0+255),b
 11410  004FD0  5174               	movf	??_moteApp_convertSensorValue& (0+255),w,b
 11411  004FD2  2577               	addwf	moteApp_convertSensorValue@convertedValue& (0+255),w,b
 11412  004FD4  6F75               	movwf	(??_moteApp_convertSensorValue+1)& (0+255),b
 11413  004FD6  0E00               	movlw	0
 11414  004FD8  2178               	addwfc	(moteApp_convertSensorValue@convertedValue+1)& (0+255),w,b
 11415  004FDA  6F76               	movwf	(??_moteApp_convertSensorValue+2)& (0+255),b
 11416  004FDC  0ED0               	movlw	208
 11417  004FDE  2575               	addwf	(??_moteApp_convertSensorValue+1)& (0+255),w,b
 11418  004FE0  6F77               	movwf	moteApp_convertSensorValue@convertedValue& (0+255),b
 11419  004FE2  0EFF               	movlw	255
 11420  004FE4  2176               	addwfc	(??_moteApp_convertSensorValue+2)& (0+255),w,b
 11421  004FE6  6F78               	movwf	(moteApp_convertSensorValue@convertedValue+1)& (0+255),b
 11422                           
 11423                           ; BSR set to: 0
 11424  004FE8  4B72               	infsnz	moteApp_convertSensorValue@string& (0+255),f,b
 11425  004FEA  2B73               	incf	(moteApp_convertSensorValue@string+1)& (0+255),f,b
 11426                           
 11427                           ; BSR set to: 0
 11428                           
 11429                           ; BSR set to: 0
 11430                           
 11431                           ; BSR set to: 0
 11432                           ;MOTEapp.c: 1360: else
 11433                           ;MOTEapp.c: 1361: {
 11434                           ;MOTEapp.c: 1362: break;
 11435                           
 11436                           ;MOTEapp.c: 1359: }
 11437  004FEC  2B79               	incf	moteApp_convertSensorValue@index& (0+255),f,b
 11438  004FEE  D7CD               	goto	l9673
 11439  004FF0                     u8190:
 11440                           
 11441                           ; BSR set to: 0
 11442                           ;MOTEapp.c: 1363: }
 11443                           ;MOTEapp.c: 1364: }
 11444                           ;MOTEapp.c: 1365: return convertedValue;
 11445  004FF0  C077  F072         	movff	moteApp_convertSensorValue@convertedValue,?_moteApp_convertSensorValue
 11446  004FF4  C078  F073         	movff	moteApp_convertSensorValue@convertedValue+1,?_moteApp_convertSensorValue+1
 11447                           
 11448                           ; BSR set to: 0
 11449  004FF8  0012               	return		;funcret
 11450  004FFA                     __end_of_moteApp_convertSensorValue:
 11451                           	opt stack 0
 11452                           tblptru	equ	0xFF8
 11453                           tblptrh	equ	0xFF7
 11454                           tblptrl	equ	0xFF6
 11455                           tablat	equ	0xFF5
 11456                           prodh	equ	0xFF4
 11457                           prodl	equ	0xFF3
 11458                           intcon	equ	0xFF2
 11459                           postinc0	equ	0xFEE
 11460                           wreg	equ	0xFE8
 11461                           indf1	equ	0xFE7
 11462                           postdec1	equ	0xFE5
 11463                           fsr1h	equ	0xFE2
 11464                           fsr1l	equ	0xFE1
 11465                           indf2	equ	0xFDF
 11466                           fsr2h	equ	0xFDA
 11467                           fsr2l	equ	0xFD9
 11468                           status	equ	0xFD8
 11469                           
 11470 ;; *************** function ___wmul *****************
 11471 ;; Defined at:
 11472 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 11473 ;; Parameters:    Size  Location     Type
 11474 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11475 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11476 ;; Auto vars:     Size  Location     Type
 11477 ;;  product         2    4[BANK0 ] unsigned int 
 11478 ;; Return value:  Size  Location     Type
 11479 ;;                  2    0[BANK0 ] unsigned int 
 11480 ;; Registers used:
 11481 ;;		wreg, status,2, status,0, prodl, prodh
 11482 ;; Tracked objects:
 11483 ;;		On entry : 0/0
 11484 ;;		On exit  : 0/0
 11485 ;;		Unchanged: 0/0
 11486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11487 ;;      Params:         0       4       0       0       0       0       0       0       0
 11488 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11489 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11490 ;;      Totals:         0       6       0       0       0       0       0       0       0
 11491 ;;Total ram usage:        6 bytes
 11492 ;; Hardware stack levels used:    1
 11493 ;; Hardware stack levels required when called:   11
 11494 ;; This function calls:
 11495 ;;		Nothing
 11496 ;; This function is called by:
 11497 ;;		_moteApp_convertSensorValue
 11498 ;; This function uses a non-reentrant model
 11499 ;;
 11500                           
 11501                           	psect	text23
 11502  005E4A                     __ptext23:
 11503                           	opt stack 0
 11504  005E4A                     ___wmul:
 11505                           	opt stack 16
 11506                           
 11507                           ; BSR set to: 0
 11508                           ;incstack = 0
 11509  005E4A  0100               	movlb	0	; () banked
 11510  005E4C  5160               	movf	___wmul@multiplier& (0+255),w,b
 11511  005E4E  0362               	mulwf	___wmul@multiplicand& (0+255),b
 11512  005E50  CFF3 F064          	movff	prodl,___wmul@product
 11513  005E54  CFF4 F065          	movff	prodh,___wmul@product+1
 11514  005E58  5160               	movf	___wmul@multiplier& (0+255),w,b
 11515  005E5A  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11516  005E5C  50F3               	movf	prodl,w,c
 11517  005E5E  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 11518  005E60  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11519  005E62  0362               	mulwf	___wmul@multiplicand& (0+255),b
 11520  005E64  50F3               	movf	prodl,w,c
 11521  005E66  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 11522                           
 11523                           ; BSR set to: 0
 11524  005E68  C064  F060         	movff	___wmul@product,?___wmul
 11525  005E6C  C065  F061         	movff	___wmul@product+1,?___wmul+1
 11526  005E70  0012               	return	
 11527  005E72                     __end_of___wmul:
 11528                           	opt stack 0
 11529                           tblptru	equ	0xFF8
 11530                           tblptrh	equ	0xFF7
 11531                           tblptrl	equ	0xFF6
 11532                           tablat	equ	0xFF5
 11533                           prodh	equ	0xFF4
 11534                           prodl	equ	0xFF3
 11535                           intcon	equ	0xFF2
 11536                           postinc0	equ	0xFEE
 11537                           wreg	equ	0xFE8
 11538                           indf1	equ	0xFE7
 11539                           postdec1	equ	0xFE5
 11540                           fsr1h	equ	0xFE2
 11541                           fsr1l	equ	0xFE1
 11542                           indf2	equ	0xFDF
 11543                           fsr2h	equ	0xFDA
 11544                           fsr2l	equ	0xFD9
 11545                           status	equ	0xFD8
 11546                           
 11547 ;; *************** function _moteApp_clearBuffers *****************
 11548 ;; Defined at:
 11549 ;;		line 1287 in file "../Includes/Board/MOTEapp.c"
 11550 ;; Parameters:    Size  Location     Type
 11551 ;;		None
 11552 ;; Auto vars:     Size  Location     Type
 11553 ;;  counter         1    3[BANK0 ] unsigned char 
 11554 ;;  counter         1    2[BANK0 ] unsigned char 
 11555 ;;  counter         1    1[BANK0 ] unsigned char 
 11556 ;;  counter         1    0[BANK0 ] unsigned char 
 11557 ;; Return value:  Size  Location     Type
 11558 ;;                  1    wreg      void 
 11559 ;; Registers used:
 11560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11561 ;; Tracked objects:
 11562 ;;		On entry : 0/0
 11563 ;;		On exit  : 0/0
 11564 ;;		Unchanged: 0/0
 11565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11566 ;;      Params:         0       0       0       0       0       0       0       0       0
 11567 ;;      Locals:         0       4       0       0       0       0       0       0       0
 11568 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11569 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11570 ;;Total ram usage:        4 bytes
 11571 ;; Hardware stack levels used:    1
 11572 ;; Hardware stack levels required when called:   11
 11573 ;; This function calls:
 11574 ;;		Nothing
 11575 ;; This function is called by:
 11576 ;;		_moteRunningProcess
 11577 ;; This function uses a non-reentrant model
 11578 ;;
 11579                           
 11580                           	psect	text24
 11581  004B4A                     __ptext24:
 11582                           	opt stack 0
 11583  004B4A                     _moteApp_clearBuffers:
 11584                           	opt stack 17
 11585                           
 11586                           ;MOTEapp.c: 1289: for (uint8_t counter = 0; counter < 3; counter++)
 11587                           
 11588                           ; BSR set to: 0
 11589                           ;incstack = 0
 11590  004B4A  0E00               	movlw	0
 11591  004B4C  0100               	movlb	0	; () banked
 11592  004B4E  6F60               	movwf	moteApp_clearBuffers@counter& (0+255),b
 11593  004B50                     l9747:
 11594                           
 11595                           ; BSR set to: 0
 11596  004B50  0E02               	movlw	2
 11597  004B52  6560               	cpfsgt	moteApp_clearBuffers@counter& (0+255),b
 11598  004B54  D001               	goto	l684
 11599  004B56  D00C               	goto	u8280
 11600  004B58                     l684:
 11601                           
 11602                           ; BSR set to: 0
 11603                           ;MOTEapp.c: 1290: {
 11604                           ;MOTEapp.c: 1291: responsePortNum[counter] = 0;
 11605                           
 11606                           ; BSR set to: 0
 11607  004B58  5160               	movf	moteApp_clearBuffers@counter& (0+255),w,b
 11608  004B5A  0D01               	mullw	1
 11609  004B5C  0EF8               	movlw	low _responsePortNum
 11610  004B5E  24F3               	addwf	prodl,w,c
 11611  004B60  6ED9               	movwf	fsr2l,c
 11612  004B62  0E01               	movlw	high _responsePortNum
 11613  004B64  20F4               	addwfc	prodh,w,c
 11614  004B66  6EDA               	movwf	fsr2h,c
 11615  004B68  0E00               	movlw	0
 11616  004B6A  6EDF               	movwf	indf2,c
 11617                           
 11618                           ; BSR set to: 0
 11619  004B6C  2B60               	incf	moteApp_clearBuffers@counter& (0+255),f,b
 11620  004B6E  D7F0               	goto	l9747
 11621  004B70                     u8280:
 11622                           
 11623                           ; BSR set to: 0
 11624                           ;MOTEapp.c: 1292: }
 11625                           ;MOTEapp.c: 1293: for (uint8_t counter = 0; counter < 34; counter++)
 11626                           
 11627                           ; BSR set to: 0
 11628  004B70  0E00               	movlw	0
 11629  004B72  6F61               	movwf	moteApp_clearBuffers@counter_1714& (0+255),b
 11630  004B74                     l9759:
 11631                           
 11632                           ; BSR set to: 0
 11633  004B74  0E21               	movlw	33
 11634  004B76  6561               	cpfsgt	moteApp_clearBuffers@counter_1714& (0+255),b
 11635  004B78  D001               	goto	l686
 11636  004B7A  D00C               	goto	u8300
 11637  004B7C                     l686:
 11638                           
 11639                           ; BSR set to: 0
 11640                           ;MOTEapp.c: 1294: {
 11641                           ;MOTEapp.c: 1295: responseId[counter] = 0;
 11642                           
 11643                           ; BSR set to: 0
 11644  004B7C  5161               	movf	moteApp_clearBuffers@counter_1714& (0+255),w,b
 11645  004B7E  0D01               	mullw	1
 11646  004B80  0E30               	movlw	low _responseId
 11647  004B82  24F3               	addwf	prodl,w,c
 11648  004B84  6ED9               	movwf	fsr2l,c
 11649  004B86  0E01               	movlw	high _responseId
 11650  004B88  20F4               	addwfc	prodh,w,c
 11651  004B8A  6EDA               	movwf	fsr2h,c
 11652  004B8C  0E00               	movlw	0
 11653  004B8E  6EDF               	movwf	indf2,c
 11654                           
 11655                           ; BSR set to: 0
 11656  004B90  2B61               	incf	moteApp_clearBuffers@counter_1714& (0+255),f,b
 11657  004B92  D7F0               	goto	l9759
 11658  004B94                     u8300:
 11659                           
 11660                           ; BSR set to: 0
 11661                           ;MOTEapp.c: 1296: }
 11662                           ;MOTEapp.c: 1297: for (uint8_t counter = 0; counter < 32; counter++)
 11663                           
 11664                           ; BSR set to: 0
 11665  004B94  0E00               	movlw	0
 11666  004B96  6F62               	movwf	moteApp_clearBuffers@counter_1715& (0+255),b
 11667  004B98                     l9771:
 11668                           
 11669                           ; BSR set to: 0
 11670  004B98  0E1F               	movlw	31
 11671  004B9A  6562               	cpfsgt	moteApp_clearBuffers@counter_1715& (0+255),b
 11672  004B9C  D001               	goto	l688
 11673  004B9E  D00C               	goto	u8320
 11674  004BA0                     l688:
 11675                           
 11676                           ; BSR set to: 0
 11677                           ;MOTEapp.c: 1298: {
 11678                           ;MOTEapp.c: 1299: responseData[counter] = 0;
 11679                           
 11680                           ; BSR set to: 0
 11681  004BA0  5162               	movf	moteApp_clearBuffers@counter_1715& (0+255),w,b
 11682  004BA2  0D01               	mullw	1
 11683  004BA4  0EA5               	movlw	low _responseData
 11684  004BA6  24F3               	addwf	prodl,w,c
 11685  004BA8  6ED9               	movwf	fsr2l,c
 11686  004BAA  0E01               	movlw	high _responseData
 11687  004BAC  20F4               	addwfc	prodh,w,c
 11688  004BAE  6EDA               	movwf	fsr2h,c
 11689  004BB0  0E00               	movlw	0
 11690  004BB2  6EDF               	movwf	indf2,c
 11691                           
 11692                           ; BSR set to: 0
 11693  004BB4  2B62               	incf	moteApp_clearBuffers@counter_1715& (0+255),f,b
 11694  004BB6  D7F0               	goto	l9771
 11695  004BB8                     u8320:
 11696                           
 11697                           ; BSR set to: 0
 11698                           ;MOTEapp.c: 1300: }
 11699                           ;MOTEapp.c: 1301: for (uint8_t counter = 0; counter < sizeof(dataBuffer); counter++)
 11700                           
 11701                           ; BSR set to: 0
 11702  004BB8  0E00               	movlw	0
 11703  004BBA  6F63               	movwf	moteApp_clearBuffers@counter_1716& (0+255),b
 11704  004BBC                     l9783:
 11705                           
 11706                           ; BSR set to: 0
 11707  004BBC  0E0F               	movlw	15
 11708  004BBE  6563               	cpfsgt	moteApp_clearBuffers@counter_1716& (0+255),b
 11709  004BC0  D001               	goto	l690
 11710  004BC2  0012               	return	
 11711  004BC4                     l690:
 11712                           
 11713                           ; BSR set to: 0
 11714                           ;MOTEapp.c: 1302: {
 11715                           ;MOTEapp.c: 1303: dataBuffer[counter] = 0;
 11716                           
 11717                           ; BSR set to: 0
 11718  004BC4  5163               	movf	moteApp_clearBuffers@counter_1716& (0+255),w,b
 11719  004BC6  0D01               	mullw	1
 11720  004BC8  0EC5               	movlw	low _dataBuffer
 11721  004BCA  24F3               	addwf	prodl,w,c
 11722  004BCC  6ED9               	movwf	fsr2l,c
 11723  004BCE  0E01               	movlw	high _dataBuffer
 11724  004BD0  20F4               	addwfc	prodh,w,c
 11725  004BD2  6EDA               	movwf	fsr2h,c
 11726  004BD4  0E00               	movlw	0
 11727  004BD6  6EDF               	movwf	indf2,c
 11728                           
 11729                           ; BSR set to: 0
 11730  004BD8  2B63               	incf	moteApp_clearBuffers@counter_1716& (0+255),f,b
 11731  004BDA  D7F0               	goto	l9783
 11732  004BDC                     __end_of_moteApp_clearBuffers:
 11733                           	opt stack 0
 11734                           tblptru	equ	0xFF8
 11735                           tblptrh	equ	0xFF7
 11736                           tblptrl	equ	0xFF6
 11737                           tablat	equ	0xFF5
 11738                           prodh	equ	0xFF4
 11739                           prodl	equ	0xFF3
 11740                           intcon	equ	0xFF2
 11741                           postinc0	equ	0xFEE
 11742                           wreg	equ	0xFE8
 11743                           indf1	equ	0xFE7
 11744                           postdec1	equ	0xFE5
 11745                           fsr1h	equ	0xFE2
 11746                           fsr1l	equ	0xFE1
 11747                           indf2	equ	0xFDF
 11748                           fsr2h	equ	0xFDA
 11749                           fsr2l	equ	0xFD9
 11750                           status	equ	0xFD8
 11751                           
 11752 ;; *************** function _moteApp_addToDataBuffer *****************
 11753 ;; Defined at:
 11754 ;;		line 1329 in file "../Includes/Board/MOTEapp.c"
 11755 ;; Parameters:    Size  Location     Type
 11756 ;;  string          2   18[BANK0 ] PTR const unsigned char 
 11757 ;;		 -> storedLight(5), moduleResonseBuffer(64), 
 11758 ;;  bufferLocati    1   20[BANK0 ] unsigned char 
 11759 ;; Auto vars:     Size  Location     Type
 11760 ;;  index           1   21[BANK0 ] unsigned char 
 11761 ;; Return value:  Size  Location     Type
 11762 ;;                  1    wreg      unsigned char 
 11763 ;; Registers used:
 11764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11765 ;; Tracked objects:
 11766 ;;		On entry : 0/0
 11767 ;;		On exit  : 0/0
 11768 ;;		Unchanged: 0/0
 11769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11770 ;;      Params:         0       3       0       0       0       0       0       0       0
 11771 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11772 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11773 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11774 ;;Total ram usage:        4 bytes
 11775 ;; Hardware stack levels used:    1
 11776 ;; Hardware stack levels required when called:   11
 11777 ;; This function calls:
 11778 ;;		Nothing
 11779 ;; This function is called by:
 11780 ;;		_moteRunningProcess
 11781 ;; This function uses a non-reentrant model
 11782 ;;
 11783                           
 11784                           	psect	text25
 11785  0055A2                     __ptext25:
 11786                           	opt stack 0
 11787  0055A2                     _moteApp_addToDataBuffer:
 11788                           	opt stack 17
 11789                           
 11790                           ;MOTEapp.c: 1331: uint8_t index;
 11791                           ;MOTEapp.c: 1332: for(index = 0; index < 6; index++)
 11792                           
 11793                           ; BSR set to: 0
 11794                           ;incstack = 0
 11795  0055A2  0E00               	movlw	0
 11796  0055A4  0100               	movlb	0	; () banked
 11797  0055A6  6F75               	movwf	moteApp_addToDataBuffer@index& (0+255),b
 11798  0055A8                     l9821:
 11799                           
 11800                           ; BSR set to: 0
 11801  0055A8  0E05               	movlw	5
 11802  0055AA  6575               	cpfsgt	moteApp_addToDataBuffer@index& (0+255),b
 11803  0055AC  D001               	goto	l701
 11804  0055AE  D026               	goto	u8410
 11805  0055B0                     l701:
 11806                           
 11807                           ; BSR set to: 0
 11808                           ;MOTEapp.c: 1333: {
 11809                           ;MOTEapp.c: 1334: if (*string != 0)
 11810                           
 11811                           ; BSR set to: 0
 11812  0055B0  C072  FFD9         	movff	moteApp_addToDataBuffer@string,fsr2l
 11813  0055B4  C073  FFDA         	movff	moteApp_addToDataBuffer@string+1,fsr2h
 11814  0055B8  50DF               	movf	indf2,w,c
 11815  0055BA  B4D8               	btfsc	status,2,c
 11816  0055BC  D012               	goto	l703
 11817                           
 11818                           ; BSR set to: 0
 11819                           ;MOTEapp.c: 1335: {
 11820                           ;MOTEapp.c: 1336: dataBuffer[bufferLocation++] = *string++;
 11821  0055BE  C072  FFD9         	movff	moteApp_addToDataBuffer@string,fsr2l
 11822  0055C2  C073  FFDA         	movff	moteApp_addToDataBuffer@string+1,fsr2h
 11823  0055C6  5174               	movf	moteApp_addToDataBuffer@bufferLocation& (0+255),w,b
 11824  0055C8  0D01               	mullw	1
 11825  0055CA  0EC5               	movlw	low _dataBuffer
 11826  0055CC  24F3               	addwf	prodl,w,c
 11827  0055CE  6EE1               	movwf	fsr1l,c
 11828  0055D0  0E01               	movlw	high _dataBuffer
 11829  0055D2  20F4               	addwfc	prodh,w,c
 11830  0055D4  6EE2               	movwf	fsr1h,c
 11831  0055D6  CFDF FFE7          	movff	indf2,indf1
 11832                           
 11833                           ; BSR set to: 0
 11834  0055DA  4B72               	infsnz	moteApp_addToDataBuffer@string& (0+255),f,b
 11835  0055DC  2B73               	incf	(moteApp_addToDataBuffer@string+1)& (0+255),f,b
 11836                           
 11837                           ; BSR set to: 0
 11838  0055DE  2B74               	incf	moteApp_addToDataBuffer@bufferLocation& (0+255),f,b
 11839                           
 11840                           ;MOTEapp.c: 1337: }
 11841  0055E0  D00B               	goto	l704
 11842  0055E2                     l703:
 11843                           
 11844                           ; BSR set to: 0
 11845                           ;MOTEapp.c: 1338: else
 11846                           ;MOTEapp.c: 1339: {
 11847                           ;MOTEapp.c: 1340: dataBuffer[bufferLocation] = 0x20;
 11848                           
 11849                           ; BSR set to: 0
 11850  0055E2  5174               	movf	moteApp_addToDataBuffer@bufferLocation& (0+255),w,b
 11851  0055E4  0D01               	mullw	1
 11852  0055E6  0EC5               	movlw	low _dataBuffer
 11853  0055E8  24F3               	addwf	prodl,w,c
 11854  0055EA  6ED9               	movwf	fsr2l,c
 11855  0055EC  0E01               	movlw	high _dataBuffer
 11856  0055EE  20F4               	addwfc	prodh,w,c
 11857  0055F0  6EDA               	movwf	fsr2h,c
 11858  0055F2  0E20               	movlw	32
 11859  0055F4  6EDF               	movwf	indf2,c
 11860                           
 11861                           ;MOTEapp.c: 1341: break;
 11862  0055F6  D002               	goto	u8410
 11863  0055F8                     l704:
 11864                           
 11865                           ; BSR set to: 0
 11866                           
 11867                           ; BSR set to: 0
 11868  0055F8  2B75               	incf	moteApp_addToDataBuffer@index& (0+255),f,b
 11869  0055FA  D7D6               	goto	l9821
 11870  0055FC                     u8410:
 11871                           
 11872                           ; BSR set to: 0
 11873                           ;MOTEapp.c: 1342: }
 11874                           ;MOTEapp.c: 1343: }
 11875                           ;MOTEapp.c: 1344: return index;
 11876                           
 11877                           ; BSR set to: 0
 11878  0055FC  5175               	movf	moteApp_addToDataBuffer@index& (0+255),w,b
 11879  0055FE  0012               	return	
 11880  005600                     __end_of_moteApp_addToDataBuffer:
 11881                           	opt stack 0
 11882                           tblptru	equ	0xFF8
 11883                           tblptrh	equ	0xFF7
 11884                           tblptrl	equ	0xFF6
 11885                           tablat	equ	0xFF5
 11886                           prodh	equ	0xFF4
 11887                           prodl	equ	0xFF3
 11888                           intcon	equ	0xFF2
 11889                           postinc0	equ	0xFEE
 11890                           wreg	equ	0xFE8
 11891                           indf1	equ	0xFE7
 11892                           postdec1	equ	0xFE5
 11893                           fsr1h	equ	0xFE2
 11894                           fsr1l	equ	0xFE1
 11895                           indf2	equ	0xFDF
 11896                           fsr2h	equ	0xFDA
 11897                           fsr2l	equ	0xFD9
 11898                           status	equ	0xFD8
 11899                           
 11900 ;; *************** function _moteApp_add8bToDataBuffer *****************
 11901 ;; Defined at:
 11902 ;;		line 1307 in file "../Includes/Board/MOTEapp.c"
 11903 ;; Parameters:    Size  Location     Type
 11904 ;;  number          1    wreg     unsigned char 
 11905 ;;  bufferLocati    1    6[BANK0 ] unsigned char 
 11906 ;; Auto vars:     Size  Location     Type
 11907 ;;  number          1    9[BANK0 ] unsigned char 
 11908 ;; Return value:  Size  Location     Type
 11909 ;;                  1    wreg      void 
 11910 ;; Registers used:
 11911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11912 ;; Tracked objects:
 11913 ;;		On entry : 0/0
 11914 ;;		On exit  : 0/0
 11915 ;;		Unchanged: 0/0
 11916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11917 ;;      Params:         0       1       0       0       0       0       0       0       0
 11918 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11919 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11920 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11921 ;;Total ram usage:        4 bytes
 11922 ;; Hardware stack levels used:    1
 11923 ;; Hardware stack levels required when called:   12
 11924 ;; This function calls:
 11925 ;;		___awmod
 11926 ;;		___lbdiv
 11927 ;; This function is called by:
 11928 ;;		_moteRunningProcess
 11929 ;; This function uses a non-reentrant model
 11930 ;;
 11931                           
 11932                           	psect	text26
 11933  004580                     __ptext26:
 11934                           	opt stack 0
 11935  004580                     _moteApp_add8bToDataBuffer:
 11936                           	opt stack 16
 11937                           
 11938                           ; BSR set to: 0
 11939                           ;incstack = 0
 11940                           ;moteApp_add8bToDataBuffer@number stored from wreg
 11941  004580  0100               	movlb	0	; () banked
 11942  004582  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11943                           
 11944                           ;MOTEapp.c: 1309: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
 11945  004584  0100               	movlb	0	; () banked
 11946  004586  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11947  004588  6F67               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
 11948  00458A  6B68               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
 11949  00458C  0E02               	movlw	2
 11950  00458E  2767               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
 11951  004590  0E00               	movlw	0
 11952  004592  2368               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
 11953  004594  0EC5               	movlw	low _dataBuffer
 11954  004596  2567               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
 11955  004598  6ED9               	movwf	fsr2l,c
 11956  00459A  0E01               	movlw	high _dataBuffer
 11957  00459C  2168               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
 11958  00459E  6EDA               	movwf	fsr2h,c
 11959  0045A0  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11960  0045A4  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11961  0045A6  0E00               	movlw	0
 11962  0045A8  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11963  0045AA  0E0A               	movlw	10
 11964  0045AC  6F62               	movwf	___awmod@divisor& (0+255),b
 11965  0045AE  EC22  F029         	call	___awmod	;wreg free
 11966  0045B2  0100               	movlb	0	; () banked
 11967  0045B4  5160               	movf	?___awmod& (0+255),w,b
 11968  0045B6  0F30               	addlw	48
 11969  0045B8  6EDF               	movwf	indf2,c
 11970                           
 11971                           ; BSR set to: 0
 11972                           ;MOTEapp.c: 1310: number /= 10;
 11973  0045BA  0E0A               	movlw	10
 11974  0045BC  6F60               	movwf	___lbdiv@divisor& (0+255),b
 11975  0045BE  5169               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
 11976  0045C0  ECD4  F02C         	call	___lbdiv
 11977  0045C4  0100               	movlb	0	; () banked
 11978  0045C6  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11979                           
 11980                           ; BSR set to: 0
 11981                           ;MOTEapp.c: 1311: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
 11982  0045C8  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11983  0045CA  6F67               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
 11984  0045CC  6B68               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
 11985  0045CE  0E01               	movlw	1
 11986  0045D0  2767               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
 11987  0045D2  0E00               	movlw	0
 11988  0045D4  2368               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
 11989  0045D6  0EC5               	movlw	low _dataBuffer
 11990  0045D8  2567               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
 11991  0045DA  6ED9               	movwf	fsr2l,c
 11992  0045DC  0E01               	movlw	high _dataBuffer
 11993  0045DE  2168               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
 11994  0045E0  6EDA               	movwf	fsr2h,c
 11995  0045E2  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11996  0045E6  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11997  0045E8  0E00               	movlw	0
 11998  0045EA  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11999  0045EC  0E0A               	movlw	10
 12000  0045EE  6F62               	movwf	___awmod@divisor& (0+255),b
 12001  0045F0  EC22  F029         	call	___awmod	;wreg free
 12002  0045F4  0100               	movlb	0	; () banked
 12003  0045F6  5160               	movf	?___awmod& (0+255),w,b
 12004  0045F8  0F30               	addlw	48
 12005  0045FA  6EDF               	movwf	indf2,c
 12006                           
 12007                           ;MOTEapp.c: 1312: number /= 10;
 12008  0045FC  0E0A               	movlw	10
 12009  0045FE  6F60               	movwf	___lbdiv@divisor& (0+255),b
 12010  004600  5169               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
 12011  004602  ECD4  F02C         	call	___lbdiv
 12012  004606  0100               	movlb	0	; () banked
 12013  004608  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 12014                           
 12015                           ; BSR set to: 0
 12016                           ;MOTEapp.c: 1313: dataBuffer[bufferLocation] = '0' + (number % 10);
 12017  00460A  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 12018  00460C  0D01               	mullw	1
 12019  00460E  0EC5               	movlw	low _dataBuffer
 12020  004610  24F3               	addwf	prodl,w,c
 12021  004612  6ED9               	movwf	fsr2l,c
 12022  004614  0E01               	movlw	high _dataBuffer
 12023  004616  20F4               	addwfc	prodh,w,c
 12024  004618  6EDA               	movwf	fsr2h,c
 12025  00461A  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 12026  00461E  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12027  004620  0E00               	movlw	0
 12028  004622  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12029  004624  0E0A               	movlw	10
 12030  004626  6F62               	movwf	___awmod@divisor& (0+255),b
 12031  004628  EC22  F029         	call	___awmod	;wreg free
 12032  00462C  0100               	movlb	0	; () banked
 12033  00462E  5160               	movf	?___awmod& (0+255),w,b
 12034  004630  0F30               	addlw	48
 12035  004632  6EDF               	movwf	indf2,c
 12036                           
 12037                           ; BSR set to: 0
 12038  004634  0012               	return		;funcret
 12039  004636                     __end_of_moteApp_add8bToDataBuffer:
 12040                           	opt stack 0
 12041                           tblptru	equ	0xFF8
 12042                           tblptrh	equ	0xFF7
 12043                           tblptrl	equ	0xFF6
 12044                           tablat	equ	0xFF5
 12045                           prodh	equ	0xFF4
 12046                           prodl	equ	0xFF3
 12047                           intcon	equ	0xFF2
 12048                           postinc0	equ	0xFEE
 12049                           wreg	equ	0xFE8
 12050                           indf1	equ	0xFE7
 12051                           postdec1	equ	0xFE5
 12052                           fsr1h	equ	0xFE2
 12053                           fsr1l	equ	0xFE1
 12054                           indf2	equ	0xFDF
 12055                           fsr2h	equ	0xFDA
 12056                           fsr2l	equ	0xFD9
 12057                           status	equ	0xFD8
 12058                           
 12059 ;; *************** function ___lbdiv *****************
 12060 ;; Defined at:
 12061 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lbdiv.c"
 12062 ;; Parameters:    Size  Location     Type
 12063 ;;  dividend        1    wreg     unsigned char 
 12064 ;;  divisor         1    0[BANK0 ] unsigned char 
 12065 ;; Auto vars:     Size  Location     Type
 12066 ;;  dividend        1    1[BANK0 ] unsigned char 
 12067 ;;  quotient        1    3[BANK0 ] unsigned char 
 12068 ;;  counter         1    2[BANK0 ] unsigned char 
 12069 ;; Return value:  Size  Location     Type
 12070 ;;                  1    wreg      unsigned char 
 12071 ;; Registers used:
 12072 ;;		wreg, status,2, status,0
 12073 ;; Tracked objects:
 12074 ;;		On entry : 0/0
 12075 ;;		On exit  : 0/0
 12076 ;;		Unchanged: 0/0
 12077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12078 ;;      Params:         0       1       0       0       0       0       0       0       0
 12079 ;;      Locals:         0       3       0       0       0       0       0       0       0
 12080 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12081 ;;      Totals:         0       4       0       0       0       0       0       0       0
 12082 ;;Total ram usage:        4 bytes
 12083 ;; Hardware stack levels used:    1
 12084 ;; Hardware stack levels required when called:   11
 12085 ;; This function calls:
 12086 ;;		Nothing
 12087 ;; This function is called by:
 12088 ;;		_moteApp_add8bToDataBuffer
 12089 ;;		_oled_putUint8
 12090 ;;		_oled_putint8
 12091 ;; This function uses a non-reentrant model
 12092 ;;
 12093                           
 12094                           	psect	text27
 12095  0059A8                     __ptext27:
 12096                           	opt stack 0
 12097  0059A8                     ___lbdiv:
 12098                           	opt stack 16
 12099                           
 12100                           ; BSR set to: 0
 12101                           ;incstack = 0
 12102                           ;___lbdiv@dividend stored from wreg
 12103  0059A8  0100               	movlb	0	; () banked
 12104  0059AA  6F61               	movwf	___lbdiv@dividend& (0+255),b
 12105  0059AC  0E00               	movlw	0
 12106  0059AE  0100               	movlb	0	; () banked
 12107  0059B0  6F63               	movwf	___lbdiv@quotient& (0+255),b
 12108                           
 12109                           ; BSR set to: 0
 12110  0059B2  5160               	movf	___lbdiv@divisor& (0+255),w,b
 12111  0059B4  B4D8               	btfsc	status,2,c
 12112  0059B6  D015               	goto	l2581
 12113                           
 12114                           ; BSR set to: 0
 12115  0059B8  0E01               	movlw	1
 12116  0059BA  6F62               	movwf	___lbdiv@counter& (0+255),b
 12117  0059BC  D003               	goto	l2576
 12118  0059BE                     
 12119                           ; BSR set to: 0
 12120                           
 12121                           ; BSR set to: 0
 12122  0059BE  90D8               	bcf	status,0,c
 12123  0059C0  3760               	rlcf	___lbdiv@divisor& (0+255),f,b
 12124                           
 12125                           ; BSR set to: 0
 12126  0059C2  2B62               	incf	___lbdiv@counter& (0+255),f,b
 12127  0059C4                     l2576:
 12128                           
 12129                           ; BSR set to: 0
 12130                           
 12131                           ; BSR set to: 0
 12132  0059C4  AF60               	btfss	___lbdiv@divisor& (0+255),7,b
 12133  0059C6  D7FB               	goto	l2577
 12134  0059C8                     u7820:
 12135                           
 12136                           ; BSR set to: 0
 12137                           
 12138                           ; BSR set to: 0
 12139                           
 12140                           ; BSR set to: 0
 12141  0059C8  90D8               	bcf	status,0,c
 12142  0059CA  3763               	rlcf	___lbdiv@quotient& (0+255),f,b
 12143  0059CC  5160               	movf	___lbdiv@divisor& (0+255),w,b
 12144  0059CE  5D61               	subwf	___lbdiv@dividend& (0+255),w,b
 12145  0059D0  A0D8               	btfss	status,0,c
 12146  0059D2  D003               	goto	l2580
 12147                           
 12148                           ; BSR set to: 0
 12149  0059D4  5160               	movf	___lbdiv@divisor& (0+255),w,b
 12150  0059D6  5F61               	subwf	___lbdiv@dividend& (0+255),f,b
 12151                           
 12152                           ; BSR set to: 0
 12153  0059D8  8163               	bsf	___lbdiv@quotient& (0+255),0,b
 12154  0059DA                     l2580:
 12155                           
 12156                           ; BSR set to: 0
 12157                           
 12158                           ; BSR set to: 0
 12159  0059DA  90D8               	bcf	status,0,c
 12160  0059DC  3360               	rrcf	___lbdiv@divisor& (0+255),f,b
 12161                           
 12162                           ; BSR set to: 0
 12163  0059DE  2F62               	decfsz	___lbdiv@counter& (0+255),f,b
 12164  0059E0  D7F3               	goto	u7820
 12165  0059E2                     l2581:
 12166                           
 12167                           ; BSR set to: 0
 12168                           
 12169                           ; BSR set to: 0
 12170                           
 12171                           ; BSR set to: 0
 12172  0059E2  5163               	movf	___lbdiv@quotient& (0+255),w,b
 12173  0059E4  0012               	return	
 12174  0059E6                     __end_of___lbdiv:
 12175                           	opt stack 0
 12176                           tblptru	equ	0xFF8
 12177                           tblptrh	equ	0xFF7
 12178                           tblptrl	equ	0xFF6
 12179                           tablat	equ	0xFF5
 12180                           prodh	equ	0xFF4
 12181                           prodl	equ	0xFF3
 12182                           intcon	equ	0xFF2
 12183                           postinc0	equ	0xFEE
 12184                           wreg	equ	0xFE8
 12185                           indf1	equ	0xFE7
 12186                           postdec1	equ	0xFE5
 12187                           fsr1h	equ	0xFE2
 12188                           fsr1l	equ	0xFE1
 12189                           indf2	equ	0xFDF
 12190                           fsr2h	equ	0xFDA
 12191                           fsr2l	equ	0xFD9
 12192                           status	equ	0xFD8
 12193                           
 12194 ;; *************** function ___awmod *****************
 12195 ;; Defined at:
 12196 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 12197 ;; Parameters:    Size  Location     Type
 12198 ;;  dividend        2    0[BANK0 ] int 
 12199 ;;  divisor         2    2[BANK0 ] int 
 12200 ;; Auto vars:     Size  Location     Type
 12201 ;;  sign            1    5[BANK0 ] unsigned char 
 12202 ;;  counter         1    4[BANK0 ] unsigned char 
 12203 ;; Return value:  Size  Location     Type
 12204 ;;                  2    0[BANK0 ] int 
 12205 ;; Registers used:
 12206 ;;		wreg, status,2, status,0
 12207 ;; Tracked objects:
 12208 ;;		On entry : 0/0
 12209 ;;		On exit  : 0/0
 12210 ;;		Unchanged: 0/0
 12211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12212 ;;      Params:         0       4       0       0       0       0       0       0       0
 12213 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12214 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12215 ;;      Totals:         0       6       0       0       0       0       0       0       0
 12216 ;;Total ram usage:        6 bytes
 12217 ;; Hardware stack levels used:    1
 12218 ;; Hardware stack levels required when called:   11
 12219 ;; This function calls:
 12220 ;;		Nothing
 12221 ;; This function is called by:
 12222 ;;		_moteApp_add8bToDataBuffer
 12223 ;;		_oled_putUint8
 12224 ;;		_oled_putint8
 12225 ;; This function uses a non-reentrant model
 12226 ;;
 12227                           
 12228                           	psect	text28
 12229  005244                     __ptext28:
 12230                           	opt stack 0
 12231  005244                     ___awmod:
 12232                           	opt stack 16
 12233                           
 12234                           ; BSR set to: 0
 12235                           ;incstack = 0
 12236  005244  0E00               	movlw	0
 12237  005246  0100               	movlb	0	; () banked
 12238  005248  6F65               	movwf	___awmod@sign& (0+255),b
 12239                           
 12240                           ; BSR set to: 0
 12241  00524A  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 12242  00524C  D006               	goto	l2427
 12243                           
 12244                           ; BSR set to: 0
 12245  00524E  6D60               	negf	___awmod@dividend& (0+255),b
 12246  005250  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 12247  005252  B0D8               	btfsc	status,0,c
 12248  005254  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 12249                           
 12250                           ; BSR set to: 0
 12251  005256  0E01               	movlw	1
 12252  005258  6F65               	movwf	___awmod@sign& (0+255),b
 12253  00525A                     l2427:
 12254                           
 12255                           ; BSR set to: 0
 12256                           
 12257                           ; BSR set to: 0
 12258  00525A  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12259  00525C  D004               	goto	l2428
 12260                           
 12261                           ; BSR set to: 0
 12262  00525E  6D62               	negf	___awmod@divisor& (0+255),b
 12263  005260  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 12264  005262  B0D8               	btfsc	status,0,c
 12265  005264  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 12266  005266                     l2428:
 12267                           
 12268                           ; BSR set to: 0
 12269                           
 12270                           ; BSR set to: 0
 12271  005266  5162               	movf	___awmod@divisor& (0+255),w,b
 12272  005268  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 12273  00526A  B4D8               	btfsc	status,2,c
 12274  00526C  D018               	goto	l2435
 12275                           
 12276                           ; BSR set to: 0
 12277  00526E  0E01               	movlw	1
 12278  005270  6F64               	movwf	___awmod@counter& (0+255),b
 12279  005272  D004               	goto	l2430
 12280  005274                     
 12281                           ; BSR set to: 0
 12282                           
 12283                           ; BSR set to: 0
 12284  005274  90D8               	bcf	status,0,c
 12285  005276  3762               	rlcf	___awmod@divisor& (0+255),f,b
 12286  005278  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 12287  00527A  2B64               	incf	___awmod@counter& (0+255),f,b
 12288  00527C                     l2430:
 12289                           
 12290                           ; BSR set to: 0
 12291                           
 12292                           ; BSR set to: 0
 12293  00527C  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12294  00527E  D7FA               	goto	l2431
 12295  005280                     u7710:
 12296                           
 12297                           ; BSR set to: 0
 12298                           
 12299                           ; BSR set to: 0
 12300                           
 12301                           ; BSR set to: 0
 12302  005280  5162               	movf	___awmod@divisor& (0+255),w,b
 12303  005282  5D60               	subwf	___awmod@dividend& (0+255),w,b
 12304  005284  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 12305  005286  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 12306  005288  A0D8               	btfss	status,0,c
 12307  00528A  D004               	goto	l2434
 12308                           
 12309                           ; BSR set to: 0
 12310  00528C  5162               	movf	___awmod@divisor& (0+255),w,b
 12311  00528E  5F60               	subwf	___awmod@dividend& (0+255),f,b
 12312  005290  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 12313  005292  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 12314  005294                     l2434:
 12315                           
 12316                           ; BSR set to: 0
 12317                           
 12318                           ; BSR set to: 0
 12319  005294  90D8               	bcf	status,0,c
 12320  005296  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 12321  005298  3362               	rrcf	___awmod@divisor& (0+255),f,b
 12322                           
 12323                           ; BSR set to: 0
 12324  00529A  2F64               	decfsz	___awmod@counter& (0+255),f,b
 12325  00529C  D7F1               	goto	u7710
 12326  00529E                     l2435:
 12327                           
 12328                           ; BSR set to: 0
 12329                           
 12330                           ; BSR set to: 0
 12331                           
 12332                           ; BSR set to: 0
 12333  00529E  5165               	movf	___awmod@sign& (0+255),w,b
 12334  0052A0  B4D8               	btfsc	status,2,c
 12335  0052A2  D004               	goto	l2436
 12336                           
 12337                           ; BSR set to: 0
 12338  0052A4  6D60               	negf	___awmod@dividend& (0+255),b
 12339  0052A6  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 12340  0052A8  B0D8               	btfsc	status,0,c
 12341  0052AA  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 12342  0052AC                     l2436:
 12343                           
 12344                           ; BSR set to: 0
 12345                           
 12346                           ; BSR set to: 0
 12347  0052AC  C060  F060         	movff	___awmod@dividend,?___awmod
 12348  0052B0  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 12349  0052B4  0012               	return	
 12350  0052B6                     __end_of___awmod:
 12351                           	opt stack 0
 12352                           tblptru	equ	0xFF8
 12353                           tblptrh	equ	0xFF7
 12354                           tblptrl	equ	0xFF6
 12355                           tablat	equ	0xFF5
 12356                           prodh	equ	0xFF4
 12357                           prodl	equ	0xFF3
 12358                           intcon	equ	0xFF2
 12359                           postinc0	equ	0xFEE
 12360                           wreg	equ	0xFE8
 12361                           indf1	equ	0xFE7
 12362                           postdec1	equ	0xFE5
 12363                           fsr1h	equ	0xFE2
 12364                           fsr1l	equ	0xFE1
 12365                           indf2	equ	0xFDF
 12366                           fsr2h	equ	0xFDA
 12367                           fsr2l	equ	0xFD9
 12368                           status	equ	0xFD8
 12369                           
 12370 ;; *************** function _moteApp_GoToSleep *****************
 12371 ;; Defined at:
 12372 ;;		line 1175 in file "../Includes/Board/MOTEapp.c"
 12373 ;; Parameters:    Size  Location     Type
 12374 ;;		None
 12375 ;; Auto vars:     Size  Location     Type
 12376 ;;  status          1   14[BANK0 ] unsigned char 
 12377 ;; Return value:  Size  Location     Type
 12378 ;;                  1    wreg      unsigned char 
 12379 ;; Registers used:
 12380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12381 ;; Tracked objects:
 12382 ;;		On entry : 0/0
 12383 ;;		On exit  : 0/0
 12384 ;;		Unchanged: 0/0
 12385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12386 ;;      Params:         0       0       0       0       0       0       0       0       0
 12387 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12388 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12389 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12390 ;;Total ram usage:        1 bytes
 12391 ;; Hardware stack levels used:    1
 12392 ;; Hardware stack levels required when called:   17
 12393 ;; This function calls:
 12394 ;;		_EUSART_FlushBuffer
 12395 ;;		_PIN_MANAGER_Initialize
 12396 ;;		_moduleResync
 12397 ;;		_moduleSleep
 12398 ;;		_moteApp_delayms
 12399 ;;		_oled_displayOff
 12400 ;;		_oled_init
 12401 ;; This function is called by:
 12402 ;;		_moteRunningProcess
 12403 ;; This function uses a non-reentrant model
 12404 ;;
 12405                           
 12406                           	psect	text29
 12407  003DBC                     __ptext29:
 12408                           	opt stack 0
 12409  003DBC                     _moteApp_GoToSleep:
 12410                           	opt stack 11
 12411                           
 12412                           ;MOTEapp.c: 1177: uint8_t status = 0;
 12413                           
 12414                           ; BSR set to: 0
 12415                           ;incstack = 0
 12416  003DBC  0E00               	movlw	0
 12417  003DBE  0100               	movlb	0	; () banked
 12418  003DC0  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12419  003DC2                     
 12420                           ; BSR set to: 0
 12421  003DC2  A081               	btfss	3969,0,c	;volatile
 12422  003DC4  D7FE               	goto	l666
 12423                           
 12424                           ;MOTEapp.c: 1179: moduleSleep();
 12425  003DC6  EC4D  F02F         	call	_moduleSleep	;wreg free
 12426                           
 12427                           ;MOTEapp.c: 1180: oled_displayOff(1);
 12428  003DCA  0E01               	movlw	1
 12429  003DCC  ECF9  F030         	call	_oled_displayOff
 12430                           
 12431                           ;MOTEapp.c: 1181: ADCON0bits.ADON = 0;
 12432  003DD0  90C2               	bcf	4034,0,c	;volatile
 12433                           
 12434                           ;MOTEapp.c: 1182: INTCONbits.GIE = 0;
 12435  003DD2  9EF2               	bcf	intcon,7,c	;volatile
 12436                           
 12437                           ;MOTEapp.c: 1183: GIE = 0;
 12438  003DD4  9EF2               	bcf	intcon,7,c	;volatile
 12439                           
 12440                           ;MOTEapp.c: 1184: PEIE = 0;
 12441  003DD6  9CF2               	bcf	intcon,6,c	;volatile
 12442                           
 12443                           ;MOTEapp.c: 1186: LATEbits.LATE2 = 0;
 12444  003DD8  948D               	bcf	3981,2,c	;volatile
 12445                           
 12446                           ;MOTEapp.c: 1187: PIE2bits.TMR3IE = 0;
 12447  003DDA  92A0               	bcf	4000,1,c	;volatile
 12448                           
 12449                           ;MOTEapp.c: 1189: ANSELAbits.ANSA0 = 1;
 12450  003DDC  010F               	movlb	15	; () banked
 12451  003DDE  815B               	bsf	91,0,b	;volatile
 12452                           
 12453                           ; BSR set to: 15
 12454                           ;MOTEapp.c: 1191: PIE2bits.C1IE = 1;
 12455  003DE0  8CA0               	bsf	4000,6,c	;volatile
 12456                           
 12457                           ; BSR set to: 15
 12458                           ;MOTEapp.c: 1192: INTCON3bits.INT1IE = 1;
 12459  003DE2  86F0               	bsf	intcon3,3,c	;volatile
 12460                           
 12461                           ; BSR set to: 15
 12462                           ;MOTEapp.c: 1193: INTCONbits.INT0IE = 1;
 12463  003DE4  88F2               	bsf	intcon,4,c	;volatile
 12464                           
 12465                           ; BSR set to: 15
 12466                           ;MOTEapp.c: 1194: IOCCbits.IOCC2 = 1;
 12467  003DE6  8487               	bsf	3975,2,c	;volatile
 12468                           
 12469                           ; BSR set to: 15
 12470                           ;MOTEapp.c: 1197: status = PORTBbits.RB1;
 12471  003DE8  0E00               	movlw	0
 12472  003DEA  B281               	btfsc	3969,1,c	;volatile
 12473  003DEC  0E01               	movlw	1
 12474  003DEE  0100               	movlb	0	; () banked
 12475  003DF0  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12476                           
 12477                           ; BSR set to: 0
 12478                           ;MOTEapp.c: 1198: status = PORTBbits.RB0;
 12479  003DF2  0E00               	movlw	0
 12480  003DF4  B081               	btfsc	3969,0,c	;volatile
 12481  003DF6  0E01               	movlw	1
 12482  003DF8  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12483                           
 12484                           ; BSR set to: 0
 12485                           ;MOTEapp.c: 1199: status = PORTCbits.RC2;
 12486  003DFA  0E00               	movlw	0
 12487  003DFC  B482               	btfsc	3970,2,c	;volatile
 12488  003DFE  0E01               	movlw	1
 12489  003E00  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12490                           
 12491                           ; BSR set to: 0
 12492                           ;MOTEapp.c: 1201: if (periodicState)
 12493  003E02  51FA               	movf	_periodicState& (0+255),w,b
 12494  003E04  A4D8               	btfss	status,2,c
 12495                           
 12496                           ; BSR set to: 0
 12497                           ;MOTEapp.c: 1202: {
 12498                           ;MOTEapp.c: 1203: WDTCONbits.SWDTEN = 1;
 12499  003E06  80D1               	bsf	4049,0,c	;volatile
 12500                           
 12501                           ; BSR set to: 0
 12502                           ;MOTEapp.c: 1204: }
 12503                           ;MOTEapp.c: 1207: INTCONbits.INT0IF = 0;
 12504  003E08  92F2               	bcf	intcon,1,c	;volatile
 12505                           
 12506                           ;MOTEapp.c: 1208: INTCON3bits.INT1IF = 0;
 12507  003E0A  90F0               	bcf	intcon3,0,c	;volatile
 12508                           
 12509                           ;MOTEapp.c: 1209: PIR2bits.C1IF = 0;
 12510  003E0C  9CA1               	bcf	4001,6,c	;volatile
 12511                           
 12512                           ;MOTEapp.c: 1210: __nop();
 12513  003E0E  F000               	nop	
 12514  003E10  0003               	sleep		;# 
 12515                           
 12516                           ;MOTEapp.c: 1212: __nop();
 12517  003E12  F000               	nop	
 12518                           
 12519                           ;MOTEapp.c: 1214: WDTCONbits.SWDTEN = 0;
 12520  003E14  90D1               	bcf	4049,0,c	;volatile
 12521                           
 12522                           ;MOTEapp.c: 1215: EUSART_FlushBuffer();
 12523  003E16  EC72  F02C         	call	_EUSART_FlushBuffer	;wreg free
 12524                           
 12525                           ;MOTEapp.c: 1218: INTCON3bits.INT1IE = 0;
 12526  003E1A  96F0               	bcf	intcon3,3,c	;volatile
 12527                           
 12528                           ;MOTEapp.c: 1219: INTCONbits.INT0IE = 0;
 12529  003E1C  98F2               	bcf	intcon,4,c	;volatile
 12530                           
 12531                           ;MOTEapp.c: 1220: IOCCbits.IOCC2 = 0;
 12532  003E1E  9487               	bcf	3975,2,c	;volatile
 12533                           
 12534                           ;MOTEapp.c: 1221: PIE2bits.C1IE = 0;
 12535  003E20  9CA0               	bcf	4000,6,c	;volatile
 12536                           
 12537                           ;MOTEapp.c: 1222: GIE = 1;
 12538  003E22  8EF2               	bsf	intcon,7,c	;volatile
 12539                           
 12540                           ;MOTEapp.c: 1224: PIN_MANAGER_Initialize();
 12541  003E24  ECB4  F02B         	call	_PIN_MANAGER_Initialize	;wreg free
 12542                           
 12543                           ;MOTEapp.c: 1226: if ( (INTCONbits.INT0IF)||(INTCON3bits.INT1IF)||(PIR2bits.C1IF))
 12544  003E28  A2F2               	btfss	intcon,1,c	;volatile
 12545  003E2A  B0F0               	btfsc	intcon3,0,c	;volatile
 12546  003E2C  D002               	goto	u8510
 12547  003E2E  ACA1               	btfss	4001,6,c	;volatile
 12548  003E30  D011               	goto	l669
 12549  003E32                     u8510:
 12550                           
 12551                           ;MOTEapp.c: 1227: {
 12552                           ;MOTEapp.c: 1229: INTCONbits.INT0IF = 0;
 12553  003E32  92F2               	bcf	intcon,1,c	;volatile
 12554                           
 12555                           ;MOTEapp.c: 1230: INTCON3bits.INT1IF = 0;
 12556  003E34  90F0               	bcf	intcon3,0,c	;volatile
 12557                           
 12558                           ;MOTEapp.c: 1231: status = 1;
 12559  003E36  0E01               	movlw	1
 12560  003E38  0100               	movlb	0	; () banked
 12561  003E3A  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12562                           
 12563                           ; BSR set to: 0
 12564                           ;MOTEapp.c: 1234: oled_displayOff(0);
 12565  003E3C  0E00               	movlw	0
 12566  003E3E  ECF9  F030         	call	_oled_displayOff
 12567                           
 12568                           ;MOTEapp.c: 1235: oled_init();
 12569  003E42  EC3F  F02E         	call	_oled_init	;wreg free
 12570                           
 12571                           ;MOTEapp.c: 1237: LATEbits.LATE2 = 1;
 12572  003E46  848D               	bsf	3981,2,c	;volatile
 12573                           
 12574                           ;MOTEapp.c: 1238: TMR3H = 0xFB;
 12575  003E48  0EFB               	movlw	251
 12576  003E4A  6EB3               	movwf	4019,c	;volatile
 12577                           
 12578                           ;MOTEapp.c: 1239: TMR3L = 0x50;
 12579  003E4C  0E50               	movlw	80
 12580  003E4E  6EB2               	movwf	4018,c	;volatile
 12581                           
 12582                           ;MOTEapp.c: 1240: PIE2bits.TMR3IE = 1;
 12583  003E50  82A0               	bsf	4000,1,c	;volatile
 12584                           
 12585                           ;MOTEapp.c: 1241: }
 12586  003E52  D007               	goto	l672
 12587  003E54                     l669:
 12588                           
 12589                           ;MOTEapp.c: 1242: else
 12590                           ;MOTEapp.c: 1243: {
 12591                           ;MOTEapp.c: 1244: secTicker = 10;
 12592  003E54  0E0A               	movlw	10
 12593  003E56  0100               	movlb	0	; () banked
 12594  003E58  6FF0               	movwf	_secTicker& (0+255),b
 12595                           
 12596                           ;MOTEapp.c: 1245: status = 0;
 12597  003E5A  0E00               	movlw	0
 12598  003E5C  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12599                           
 12600                           ; BSR set to: 0
 12601                           ;MOTEapp.c: 1247: LATEbits.LATE2 = 0;
 12602  003E5E  948D               	bcf	3981,2,c	;volatile
 12603                           
 12604                           ; BSR set to: 0
 12605                           ;MOTEapp.c: 1248: PIE2bits.TMR3IE = 0;
 12606  003E60  92A0               	bcf	4000,1,c	;volatile
 12607  003E62                     l672:
 12608                           
 12609                           ;MOTEapp.c: 1249: }
 12610                           ;MOTEapp.c: 1250: ANSELAbits.ANSA0 = 0;
 12611                           
 12612                           ; BSR set to: 0
 12613  003E62  010F               	movlb	15	; () banked
 12614  003E64  915B               	bcf	91,0,b	;volatile
 12615                           
 12616                           ; BSR set to: 15
 12617                           ;MOTEapp.c: 1252: moduleResync();
 12618  003E66  EC77  F026         	call	_moduleResync	;wreg free
 12619                           
 12620                           ;MOTEapp.c: 1253: moteApp_delayms(40);
 12621  003E6A  0E00               	movlw	0
 12622  003E6C  0100               	movlb	0	; () banked
 12623  003E6E  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12624  003E70  0E28               	movlw	40
 12625  003E72  6F60               	movwf	moteApp_delayms@length& (0+255),b
 12626  003E74  EC0D  F02E         	call	_moteApp_delayms	;wreg free
 12627                           
 12628                           ;MOTEapp.c: 1254: moduleResync();
 12629  003E78  EC77  F026         	call	_moduleResync	;wreg free
 12630                           
 12631                           ;MOTEapp.c: 1255: moteApp_delayms(40);
 12632  003E7C  0E00               	movlw	0
 12633  003E7E  0100               	movlb	0	; () banked
 12634  003E80  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12635  003E82  0E28               	movlw	40
 12636  003E84  6F60               	movwf	moteApp_delayms@length& (0+255),b
 12637  003E86  EC0D  F02E         	call	_moteApp_delayms	;wreg free
 12638                           
 12639                           ;MOTEapp.c: 1256: return status;
 12640  003E8A  0100               	movlb	0	; () banked
 12641  003E8C  516E               	movf	moteApp_GoToSleep@status& (0+255),w,b
 12642  003E8E  0012               	return	
 12643  003E90                     __end_of_moteApp_GoToSleep:
 12644                           	opt stack 0
 12645                           tblptru	equ	0xFF8
 12646                           tblptrh	equ	0xFF7
 12647                           tblptrl	equ	0xFF6
 12648                           tablat	equ	0xFF5
 12649                           prodh	equ	0xFF4
 12650                           prodl	equ	0xFF3
 12651                           intcon	equ	0xFF2
 12652                           intcon3	equ	0xFF0
 12653                           postinc0	equ	0xFEE
 12654                           wreg	equ	0xFE8
 12655                           indf1	equ	0xFE7
 12656                           postdec1	equ	0xFE5
 12657                           fsr1h	equ	0xFE2
 12658                           fsr1l	equ	0xFE1
 12659                           indf2	equ	0xFDF
 12660                           fsr2h	equ	0xFDA
 12661                           fsr2l	equ	0xFD9
 12662                           status	equ	0xFD8
 12663                           
 12664 ;; *************** function _oled_init *****************
 12665 ;; Defined at:
 12666 ;;		line 366 in file "../Includes/Drivers/SSD1306oLED.c"
 12667 ;; Parameters:    Size  Location     Type
 12668 ;;		None
 12669 ;; Auto vars:     Size  Location     Type
 12670 ;;		None
 12671 ;; Return value:  Size  Location     Type
 12672 ;;                  1    wreg      void 
 12673 ;; Registers used:
 12674 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12675 ;; Tracked objects:
 12676 ;;		On entry : 0/0
 12677 ;;		On exit  : 0/0
 12678 ;;		Unchanged: 0/0
 12679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12680 ;;      Params:         0       0       0       0       0       0       0       0       0
 12681 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12682 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12683 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12684 ;;Total ram usage:        0 bytes
 12685 ;; Hardware stack levels used:    1
 12686 ;; Hardware stack levels required when called:   16
 12687 ;; This function calls:
 12688 ;;		_oled_clear
 12689 ;;		_oled_devInit
 12690 ;;		_oled_setDisplay
 12691 ;;		_oled_setFont
 12692 ;; This function is called by:
 12693 ;;		_main
 12694 ;;		_moteApp_GoToSleep
 12695 ;; This function uses a non-reentrant model
 12696 ;;
 12697                           
 12698                           	psect	text30
 12699  005C7E                     __ptext30:
 12700                           	opt stack 0
 12701  005C7E                     _oled_init:
 12702                           	opt stack 14
 12703                           
 12704                           ;SSD1306oLED.c: 369: TRISEbits.TRISE2 = 0;
 12705                           
 12706                           ; BSR set to: 0
 12707                           ;incstack = 0
 12708  005C7E  9496               	bcf	3990,2,c	;volatile
 12709                           
 12710                           ;SSD1306oLED.c: 370: LATEbits.LATE2 = 1;
 12711  005C80  848D               	bsf	3981,2,c	;volatile
 12712                           
 12713                           ;SSD1306oLED.c: 371: TRISBbits.TRISB2 = 0;
 12714  005C82  9493               	bcf	3987,2,c	;volatile
 12715                           
 12716                           ;SSD1306oLED.c: 372: TRISBbits.TRISB3 = 0;
 12717  005C84  9693               	bcf	3987,3,c	;volatile
 12718                           
 12719                           ;SSD1306oLED.c: 373: TRISBbits.TRISB4 = 0;
 12720  005C86  9893               	bcf	3987,4,c	;volatile
 12721                           
 12722                           ;SSD1306oLED.c: 374: TRISCbits.TRISC0 = 0;
 12723  005C88  9094               	bcf	3988,0,c	;volatile
 12724                           
 12725                           ;SSD1306oLED.c: 375: TRISCbits.TRISC1 = 0;
 12726  005C8A  9294               	bcf	3988,1,c	;volatile
 12727                           
 12728                           ;SSD1306oLED.c: 377: LATBbits.LATB3 = 1;
 12729  005C8C  868A               	bsf	3978,3,c	;volatile
 12730                           
 12731                           ;SSD1306oLED.c: 379: LATBbits.LATB4 = 0;
 12732  005C8E  988A               	bcf	3978,4,c	;volatile
 12733                           
 12734                           ;SSD1306oLED.c: 381: oled_devInit();
 12735  005C90  EC7E  F027         	call	_oled_devInit	;wreg free
 12736                           
 12737                           ;SSD1306oLED.c: 383: oled_setDisplay(Inverse);
 12738  005C94  0E01               	movlw	1
 12739  005C96  EC39  F02F         	call	_oled_setDisplay
 12740                           
 12741                           ;SSD1306oLED.c: 384: oled_setFont(OledFont0);
 12742  005C9A  0EF7               	movlw	low _OledFont0
 12743  005C9C  0100               	movlb	0	; () banked
 12744  005C9E  6F60               	movwf	oled_setFont@font& (0+255),b
 12745  005CA0  0E75               	movlw	high _OledFont0
 12746  005CA2  6F61               	movwf	(oled_setFont@font+1)& (0+255),b
 12747  005CA4  EC5A  F030         	call	_oled_setFont	;wreg free
 12748                           
 12749                           ;SSD1306oLED.c: 385: oled_clear();
 12750  005CA8  ECF0  F02F         	call	_oled_clear	;wreg free
 12751  005CAC  0012               	return		;funcret
 12752  005CAE                     __end_of_oled_init:
 12753                           	opt stack 0
 12754                           tblptru	equ	0xFF8
 12755                           tblptrh	equ	0xFF7
 12756                           tblptrl	equ	0xFF6
 12757                           tablat	equ	0xFF5
 12758                           prodh	equ	0xFF4
 12759                           prodl	equ	0xFF3
 12760                           intcon	equ	0xFF2
 12761                           intcon3	equ	0xFF0
 12762                           postinc0	equ	0xFEE
 12763                           wreg	equ	0xFE8
 12764                           indf1	equ	0xFE7
 12765                           postdec1	equ	0xFE5
 12766                           fsr1h	equ	0xFE2
 12767                           fsr1l	equ	0xFE1
 12768                           indf2	equ	0xFDF
 12769                           fsr2h	equ	0xFDA
 12770                           fsr2l	equ	0xFD9
 12771                           status	equ	0xFD8
 12772                           
 12773 ;; *************** function _oled_setFont *****************
 12774 ;; Defined at:
 12775 ;;		line 256 in file "../Includes/Drivers/SSD1306oLED.c"
 12776 ;; Parameters:    Size  Location     Type
 12777 ;;  font            2    0[BANK0 ] PTR const unsigned char 
 12778 ;;		 -> OledFont0(768), 
 12779 ;; Auto vars:     Size  Location     Type
 12780 ;;		None
 12781 ;; Return value:  Size  Location     Type
 12782 ;;                  1    wreg      void 
 12783 ;; Registers used:
 12784 ;;		wreg, status,2, status,0
 12785 ;; Tracked objects:
 12786 ;;		On entry : 0/0
 12787 ;;		On exit  : 0/0
 12788 ;;		Unchanged: 0/0
 12789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12790 ;;      Params:         0       2       0       0       0       0       0       0       0
 12791 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12792 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12793 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12794 ;;Total ram usage:        2 bytes
 12795 ;; Hardware stack levels used:    1
 12796 ;; Hardware stack levels required when called:   11
 12797 ;; This function calls:
 12798 ;;		Nothing
 12799 ;; This function is called by:
 12800 ;;		_oled_init
 12801 ;; This function uses a non-reentrant model
 12802 ;;
 12803                           
 12804                           	psect	text31
 12805  0060B4                     __ptext31:
 12806                           	opt stack 0
 12807  0060B4                     _oled_setFont:
 12808                           	opt stack 18
 12809                           
 12810                           ;SSD1306oLED.c: 258: if(font!=0)
 12811                           
 12812                           ;incstack = 0
 12813  0060B4  0100               	movlb	0	; () banked
 12814  0060B6  5160               	movf	oled_setFont@font& (0+255),w,b
 12815  0060B8  1161               	iorwf	(oled_setFont@font+1)& (0+255),w,b
 12816  0060BA  B4D8               	btfsc	status,2,c
 12817  0060BC  0012               	return	
 12818                           
 12819                           ; BSR set to: 0
 12820                           ;SSD1306oLED.c: 259: {
 12821                           ;SSD1306oLED.c: 260: selectedFont=font;
 12822  0060BE  C060  F1FB         	movff	oled_setFont@font,_selectedFont
 12823  0060C2  C061  F1FC         	movff	oled_setFont@font+1,_selectedFont+1
 12824  0060C6  0012               	return	
 12825  0060C8                     __end_of_oled_setFont:
 12826                           	opt stack 0
 12827                           tblptru	equ	0xFF8
 12828                           tblptrh	equ	0xFF7
 12829                           tblptrl	equ	0xFF6
 12830                           tablat	equ	0xFF5
 12831                           prodh	equ	0xFF4
 12832                           prodl	equ	0xFF3
 12833                           intcon	equ	0xFF2
 12834                           intcon3	equ	0xFF0
 12835                           postinc0	equ	0xFEE
 12836                           wreg	equ	0xFE8
 12837                           indf1	equ	0xFE7
 12838                           postdec1	equ	0xFE5
 12839                           fsr1h	equ	0xFE2
 12840                           fsr1l	equ	0xFE1
 12841                           indf2	equ	0xFDF
 12842                           fsr2h	equ	0xFDA
 12843                           fsr2l	equ	0xFD9
 12844                           status	equ	0xFD8
 12845                           
 12846 ;; *************** function _oled_setDisplay *****************
 12847 ;; Defined at:
 12848 ;;		line 411 in file "../Includes/Drivers/SSD1306oLED.c"
 12849 ;; Parameters:    Size  Location     Type
 12850 ;;  displayType     1    wreg     enum E5868
 12851 ;; Auto vars:     Size  Location     Type
 12852 ;;  displayType     1    1[BANK0 ] enum E5868
 12853 ;; Return value:  Size  Location     Type
 12854 ;;                  1    wreg      void 
 12855 ;; Registers used:
 12856 ;;		wreg, status,2, cstack
 12857 ;; Tracked objects:
 12858 ;;		On entry : 0/0
 12859 ;;		On exit  : 0/0
 12860 ;;		Unchanged: 0/0
 12861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12862 ;;      Params:         0       0       0       0       0       0       0       0       0
 12863 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12864 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12865 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12866 ;;Total ram usage:        1 bytes
 12867 ;; Hardware stack levels used:    1
 12868 ;; Hardware stack levels required when called:   12
 12869 ;; This function calls:
 12870 ;;		_oled_writeCommand
 12871 ;; This function is called by:
 12872 ;;		_oled_init
 12873 ;; This function uses a non-reentrant model
 12874 ;;
 12875                           
 12876                           	psect	text32
 12877  005E72                     __ptext32:
 12878                           	opt stack 0
 12879  005E72                     _oled_setDisplay:
 12880                           	opt stack 17
 12881                           
 12882                           ; BSR set to: 0
 12883                           ;incstack = 0
 12884                           ;oled_setDisplay@displayType stored from wreg
 12885  005E72  0100               	movlb	0	; () banked
 12886  005E74  6F61               	movwf	oled_setDisplay@displayType& (0+255),b
 12887                           
 12888                           ;SSD1306oLED.c: 413: if (displayType == Normal)
 12889  005E76  0100               	movlb	0	; () banked
 12890  005E78  5161               	movf	oled_setDisplay@displayType& (0+255),w,b
 12891  005E7A  A4D8               	btfss	status,2,c
 12892  005E7C  D007               	goto	l1066
 12893                           
 12894                           ; BSR set to: 0
 12895                           ;SSD1306oLED.c: 414: {
 12896                           ;SSD1306oLED.c: 415: oled_writeCommand(0xa0);
 12897  005E7E  0EA0               	movlw	160
 12898  005E80  EC2E  F030         	call	_oled_writeCommand
 12899                           
 12900                           ;SSD1306oLED.c: 416: oled_writeCommand(0xc8);
 12901  005E84  0EC8               	movlw	200
 12902  005E86  EC2E  F030         	call	_oled_writeCommand
 12903                           
 12904                           ;SSD1306oLED.c: 417: }
 12905  005E8A  0012               	return	
 12906  005E8C                     l1066:
 12907                           
 12908                           ;SSD1306oLED.c: 418: else
 12909                           ;SSD1306oLED.c: 419: {
 12910                           ;SSD1306oLED.c: 420: oled_writeCommand(0xa1);
 12911  005E8C  0EA1               	movlw	161
 12912  005E8E  EC2E  F030         	call	_oled_writeCommand
 12913                           
 12914                           ;SSD1306oLED.c: 421: oled_writeCommand(0xc0);
 12915  005E92  0EC0               	movlw	192
 12916  005E94  EC2E  F030         	call	_oled_writeCommand
 12917  005E98  0012               	return	
 12918  005E9A                     __end_of_oled_setDisplay:
 12919                           	opt stack 0
 12920                           tblptru	equ	0xFF8
 12921                           tblptrh	equ	0xFF7
 12922                           tblptrl	equ	0xFF6
 12923                           tablat	equ	0xFF5
 12924                           prodh	equ	0xFF4
 12925                           prodl	equ	0xFF3
 12926                           intcon	equ	0xFF2
 12927                           intcon3	equ	0xFF0
 12928                           postinc0	equ	0xFEE
 12929                           wreg	equ	0xFE8
 12930                           indf1	equ	0xFE7
 12931                           postdec1	equ	0xFE5
 12932                           fsr1h	equ	0xFE2
 12933                           fsr1l	equ	0xFE1
 12934                           indf2	equ	0xFDF
 12935                           fsr2h	equ	0xFDA
 12936                           fsr2l	equ	0xFD9
 12937                           status	equ	0xFD8
 12938                           
 12939 ;; *************** function _oled_devInit *****************
 12940 ;; Defined at:
 12941 ;;		line 388 in file "../Includes/Drivers/SSD1306oLED.c"
 12942 ;; Parameters:    Size  Location     Type
 12943 ;;		None
 12944 ;; Auto vars:     Size  Location     Type
 12945 ;;		None
 12946 ;; Return value:  Size  Location     Type
 12947 ;;                  1    wreg      void 
 12948 ;; Registers used:
 12949 ;;		wreg, status,2, status,0, cstack
 12950 ;; Tracked objects:
 12951 ;;		On entry : 0/0
 12952 ;;		On exit  : 0/0
 12953 ;;		Unchanged: 0/0
 12954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12955 ;;      Params:         0       0       0       0       0       0       0       0       0
 12956 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12957 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12958 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12959 ;;Total ram usage:        1 bytes
 12960 ;; Hardware stack levels used:    1
 12961 ;; Hardware stack levels required when called:   13
 12962 ;; This function calls:
 12963 ;;		_oled_initialDispayLine
 12964 ;;		_oled_powerControl
 12965 ;;		_oled_regulorResistorSelect
 12966 ;;		_oled_setContrastControlRegister
 12967 ;;		_oled_writeCommand
 12968 ;; This function is called by:
 12969 ;;		_oled_init
 12970 ;; This function uses a non-reentrant model
 12971 ;;
 12972                           
 12973                           	psect	text33
 12974  004EFC                     __ptext33:
 12975                           	opt stack 0
 12976  004EFC                     _oled_devInit:
 12977                           	opt stack 16
 12978                           
 12979                           ;SSD1306oLED.c: 390: oled_writeCommand(0xe2);
 12980                           
 12981                           ;incstack = 0
 12982  004EFC  0EE2               	movlw	226
 12983  004EFE  EC2E  F030         	call	_oled_writeCommand
 12984                           
 12985                           ;SSD1306oLED.c: 391: LATBbits.LATB2=1;
 12986  004F02  848A               	bsf	3978,2,c	;volatile
 12987                           
 12988                           ;SSD1306oLED.c: 392: _delay((unsigned long)((200)*(48000000/4000000.0)));
 12989  004F04  0E04               	movlw	4
 12990  004F06  0100               	movlb	0	; () banked
 12991  004F08  6F62               	movwf	??_oled_devInit& (0+255),b
 12992  004F0A  0E1C               	movlw	28
 12993  004F0C                     u11327:
 12994  004F0C  2EE8               	decfsz	wreg,f,c
 12995  004F0E  D7FE               	bra	u11327
 12996  004F10  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 12997  004F12  D7FC               	bra	u11327
 12998  004F14  F000               	nop	
 12999                           
 13000                           ;SSD1306oLED.c: 393: LATBbits.LATB2=0;
 13001  004F16  948A               	bcf	3978,2,c	;volatile
 13002                           
 13003                           ;SSD1306oLED.c: 394: _delay((unsigned long)((2000)*(48000000/4000000.0)));
 13004  004F18  0E20               	movlw	32
 13005  004F1A  0100               	movlb	0	; () banked
 13006  004F1C  6F62               	movwf	??_oled_devInit& (0+255),b
 13007  004F1E  0E29               	movlw	41
 13008  004F20                     u11337:
 13009  004F20  2EE8               	decfsz	wreg,f,c
 13010  004F22  D7FE               	bra	u11337
 13011  004F24  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 13012  004F26  D7FC               	bra	u11337
 13013  004F28  D000               	nop2	
 13014                           
 13015                           ;SSD1306oLED.c: 395: LATBbits.LATB2=1;
 13016  004F2A  848A               	bsf	3978,2,c	;volatile
 13017                           
 13018                           ;SSD1306oLED.c: 396: _delay((unsigned long)((1000)*(48000000/4000000.0)));
 13019  004F2C  0E10               	movlw	16
 13020  004F2E  0100               	movlb	0	; () banked
 13021  004F30  6F62               	movwf	??_oled_devInit& (0+255),b
 13022  004F32  0E94               	movlw	148
 13023  004F34                     u11347:
 13024  004F34  2EE8               	decfsz	wreg,f,c
 13025  004F36  D7FE               	bra	u11347
 13026  004F38  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 13027  004F3A  D7FC               	bra	u11347
 13028  004F3C  F000               	nop	
 13029                           
 13030                           ;SSD1306oLED.c: 398: oled_writeCommand(0xa1);
 13031  004F3E  0EA1               	movlw	161
 13032  004F40  EC2E  F030         	call	_oled_writeCommand
 13033                           
 13034                           ;SSD1306oLED.c: 399: oled_writeCommand(0xc0);
 13035  004F44  0EC0               	movlw	192
 13036  004F46  EC2E  F030         	call	_oled_writeCommand
 13037                           
 13038                           ;SSD1306oLED.c: 400: oled_writeCommand(0xa3);
 13039  004F4A  0EA3               	movlw	163
 13040  004F4C  EC2E  F030         	call	_oled_writeCommand
 13041                           
 13042                           ;SSD1306oLED.c: 401: oled_powerControl(0x07);
 13043  004F50  0E07               	movlw	7
 13044  004F52  ECA7  F030         	call	_oled_powerControl
 13045                           
 13046                           ;SSD1306oLED.c: 402: oled_regulorResistorSelect(0x05);
 13047  004F56  0E05               	movlw	5
 13048  004F58  EC9F  F030         	call	_oled_regulorResistorSelect
 13049                           
 13050                           ;SSD1306oLED.c: 403: oled_setContrastControlRegister(Contrast_level);
 13051  004F5C  505E               	movf	_Contrast_level,w,c
 13052  004F5E  EC64  F030         	call	_oled_setContrastControlRegister
 13053                           
 13054                           ;SSD1306oLED.c: 404: oled_initialDispayLine(0x00);
 13055  004F62  0E00               	movlw	0
 13056  004F64  ECAF  F030         	call	_oled_initialDispayLine
 13057                           
 13058                           ;SSD1306oLED.c: 405: oled_writeCommand(0xF8);
 13059  004F68  0EF8               	movlw	248
 13060  004F6A  EC2E  F030         	call	_oled_writeCommand
 13061                           
 13062                           ;SSD1306oLED.c: 406: oled_writeCommand(0x00);
 13063  004F6E  0E00               	movlw	0
 13064  004F70  EC2E  F030         	call	_oled_writeCommand
 13065                           
 13066                           ;SSD1306oLED.c: 407: oled_writeCommand(0xaf);
 13067  004F74  0EAF               	movlw	175
 13068  004F76  EC2E  F030         	call	_oled_writeCommand
 13069  004F7A  0012               	return		;funcret
 13070  004F7C                     __end_of_oled_devInit:
 13071                           	opt stack 0
 13072                           tblptru	equ	0xFF8
 13073                           tblptrh	equ	0xFF7
 13074                           tblptrl	equ	0xFF6
 13075                           tablat	equ	0xFF5
 13076                           prodh	equ	0xFF4
 13077                           prodl	equ	0xFF3
 13078                           intcon	equ	0xFF2
 13079                           intcon3	equ	0xFF0
 13080                           postinc0	equ	0xFEE
 13081                           wreg	equ	0xFE8
 13082                           indf1	equ	0xFE7
 13083                           postdec1	equ	0xFE5
 13084                           fsr1h	equ	0xFE2
 13085                           fsr1l	equ	0xFE1
 13086                           indf2	equ	0xFDF
 13087                           fsr2h	equ	0xFDA
 13088                           fsr2l	equ	0xFD9
 13089                           status	equ	0xFD8
 13090                           
 13091 ;; *************** function _oled_setContrastControlRegister *****************
 13092 ;; Defined at:
 13093 ;;		line 454 in file "../Includes/Drivers/SSD1306oLED.c"
 13094 ;; Parameters:    Size  Location     Type
 13095 ;;  mod             1    wreg     unsigned char 
 13096 ;; Auto vars:     Size  Location     Type
 13097 ;;  mod             1    1[BANK0 ] unsigned char 
 13098 ;; Return value:  Size  Location     Type
 13099 ;;                  1    wreg      void 
 13100 ;; Registers used:
 13101 ;;		wreg, status,2, cstack
 13102 ;; Tracked objects:
 13103 ;;		On entry : 0/0
 13104 ;;		On exit  : 0/0
 13105 ;;		Unchanged: 0/0
 13106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13107 ;;      Params:         0       0       0       0       0       0       0       0       0
 13108 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13109 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13110 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13111 ;;Total ram usage:        1 bytes
 13112 ;; Hardware stack levels used:    1
 13113 ;; Hardware stack levels required when called:   12
 13114 ;; This function calls:
 13115 ;;		_oled_writeCommand
 13116 ;; This function is called by:
 13117 ;;		_oled_devInit
 13118 ;; This function uses a non-reentrant model
 13119 ;;
 13120                           
 13121                           	psect	text34
 13122  0060C8                     __ptext34:
 13123                           	opt stack 0
 13124  0060C8                     _oled_setContrastControlRegister:
 13125                           	opt stack 16
 13126                           
 13127                           ;incstack = 0
 13128                           ;oled_setContrastControlRegister@mod stored from wreg
 13129  0060C8  0100               	movlb	0	; () banked
 13130  0060CA  6F61               	movwf	oled_setContrastControlRegister@mod& (0+255),b
 13131                           
 13132                           ;SSD1306oLED.c: 456: oled_writeCommand(0x81);
 13133  0060CC  0E81               	movlw	129
 13134  0060CE  EC2E  F030         	call	_oled_writeCommand
 13135                           
 13136                           ;SSD1306oLED.c: 457: oled_writeCommand(mod);
 13137  0060D2  0100               	movlb	0	; () banked
 13138  0060D4  5161               	movf	oled_setContrastControlRegister@mod& (0+255),w,b
 13139  0060D6  EC2E  F030         	call	_oled_writeCommand
 13140  0060DA  0012               	return	
 13141  0060DC                     __end_of_oled_setContrastControlRegister:
 13142                           	opt stack 0
 13143                           tblptru	equ	0xFF8
 13144                           tblptrh	equ	0xFF7
 13145                           tblptrl	equ	0xFF6
 13146                           tablat	equ	0xFF5
 13147                           prodh	equ	0xFF4
 13148                           prodl	equ	0xFF3
 13149                           intcon	equ	0xFF2
 13150                           intcon3	equ	0xFF0
 13151                           postinc0	equ	0xFEE
 13152                           wreg	equ	0xFE8
 13153                           indf1	equ	0xFE7
 13154                           postdec1	equ	0xFE5
 13155                           fsr1h	equ	0xFE2
 13156                           fsr1l	equ	0xFE1
 13157                           indf2	equ	0xFDF
 13158                           fsr2h	equ	0xFDA
 13159                           fsr2l	equ	0xFD9
 13160                           status	equ	0xFD8
 13161                           
 13162 ;; *************** function _oled_regulorResistorSelect *****************
 13163 ;; Defined at:
 13164 ;;		line 482 in file "../Includes/Drivers/SSD1306oLED.c"
 13165 ;; Parameters:    Size  Location     Type
 13166 ;;  r               1    wreg     unsigned char 
 13167 ;; Auto vars:     Size  Location     Type
 13168 ;;  r               1    1[BANK0 ] unsigned char 
 13169 ;; Return value:  Size  Location     Type
 13170 ;;                  1    wreg      void 
 13171 ;; Registers used:
 13172 ;;		wreg, status,2, status,0, cstack
 13173 ;; Tracked objects:
 13174 ;;		On entry : 0/0
 13175 ;;		On exit  : 0/0
 13176 ;;		Unchanged: 0/0
 13177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13178 ;;      Params:         0       0       0       0       0       0       0       0       0
 13179 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13180 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13181 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13182 ;;Total ram usage:        1 bytes
 13183 ;; Hardware stack levels used:    1
 13184 ;; Hardware stack levels required when called:   12
 13185 ;; This function calls:
 13186 ;;		_oled_writeCommand
 13187 ;; This function is called by:
 13188 ;;		_oled_devInit
 13189 ;; This function uses a non-reentrant model
 13190 ;;
 13191                           
 13192                           	psect	text35
 13193  00613E                     __ptext35:
 13194                           	opt stack 0
 13195  00613E                     _oled_regulorResistorSelect:
 13196                           	opt stack 16
 13197                           
 13198                           ;incstack = 0
 13199                           ;oled_regulorResistorSelect@r stored from wreg
 13200  00613E  0100               	movlb	0	; () banked
 13201  006140  6F61               	movwf	oled_regulorResistorSelect@r& (0+255),b
 13202                           
 13203                           ;SSD1306oLED.c: 484: oled_writeCommand((0x20|r));
 13204  006142  0100               	movlb	0	; () banked
 13205  006144  5161               	movf	oled_regulorResistorSelect@r& (0+255),w,b
 13206  006146  0920               	iorlw	32
 13207  006148  EC2E  F030         	call	_oled_writeCommand
 13208  00614C  0012               	return	
 13209  00614E                     __end_of_oled_regulorResistorSelect:
 13210                           	opt stack 0
 13211                           tblptru	equ	0xFF8
 13212                           tblptrh	equ	0xFF7
 13213                           tblptrl	equ	0xFF6
 13214                           tablat	equ	0xFF5
 13215                           prodh	equ	0xFF4
 13216                           prodl	equ	0xFF3
 13217                           intcon	equ	0xFF2
 13218                           intcon3	equ	0xFF0
 13219                           postinc0	equ	0xFEE
 13220                           wreg	equ	0xFE8
 13221                           indf1	equ	0xFE7
 13222                           postdec1	equ	0xFE5
 13223                           fsr1h	equ	0xFE2
 13224                           fsr1l	equ	0xFE1
 13225                           indf2	equ	0xFDF
 13226                           fsr2h	equ	0xFDA
 13227                           fsr2l	equ	0xFD9
 13228                           status	equ	0xFD8
 13229                           
 13230 ;; *************** function _oled_powerControl *****************
 13231 ;; Defined at:
 13232 ;;		line 469 in file "../Includes/Drivers/SSD1306oLED.c"
 13233 ;; Parameters:    Size  Location     Type
 13234 ;;  vol             1    wreg     unsigned char 
 13235 ;; Auto vars:     Size  Location     Type
 13236 ;;  vol             1    1[BANK0 ] unsigned char 
 13237 ;; Return value:  Size  Location     Type
 13238 ;;                  1    wreg      void 
 13239 ;; Registers used:
 13240 ;;		wreg, status,2, status,0, cstack
 13241 ;; Tracked objects:
 13242 ;;		On entry : 0/0
 13243 ;;		On exit  : 0/0
 13244 ;;		Unchanged: 0/0
 13245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13246 ;;      Params:         0       0       0       0       0       0       0       0       0
 13247 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13248 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13249 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13250 ;;Total ram usage:        1 bytes
 13251 ;; Hardware stack levels used:    1
 13252 ;; Hardware stack levels required when called:   12
 13253 ;; This function calls:
 13254 ;;		_oled_writeCommand
 13255 ;; This function is called by:
 13256 ;;		_oled_devInit
 13257 ;; This function uses a non-reentrant model
 13258 ;;
 13259                           
 13260                           	psect	text36
 13261  00614E                     __ptext36:
 13262                           	opt stack 0
 13263  00614E                     _oled_powerControl:
 13264                           	opt stack 16
 13265                           
 13266                           ;incstack = 0
 13267                           ;oled_powerControl@vol stored from wreg
 13268  00614E  0100               	movlb	0	; () banked
 13269  006150  6F61               	movwf	oled_powerControl@vol& (0+255),b
 13270                           
 13271                           ;SSD1306oLED.c: 471: oled_writeCommand((0x28|vol));
 13272  006152  0100               	movlb	0	; () banked
 13273  006154  5161               	movf	oled_powerControl@vol& (0+255),w,b
 13274  006156  0928               	iorlw	40
 13275  006158  EC2E  F030         	call	_oled_writeCommand
 13276  00615C  0012               	return	
 13277  00615E                     __end_of_oled_powerControl:
 13278                           	opt stack 0
 13279                           tblptru	equ	0xFF8
 13280                           tblptrh	equ	0xFF7
 13281                           tblptrl	equ	0xFF6
 13282                           tablat	equ	0xFF5
 13283                           prodh	equ	0xFF4
 13284                           prodl	equ	0xFF3
 13285                           intcon	equ	0xFF2
 13286                           intcon3	equ	0xFF0
 13287                           postinc0	equ	0xFEE
 13288                           wreg	equ	0xFE8
 13289                           indf1	equ	0xFE7
 13290                           postdec1	equ	0xFE5
 13291                           fsr1h	equ	0xFE2
 13292                           fsr1l	equ	0xFE1
 13293                           indf2	equ	0xFDF
 13294                           fsr2h	equ	0xFDA
 13295                           fsr2l	equ	0xFD9
 13296                           status	equ	0xFD8
 13297                           
 13298 ;; *************** function _oled_initialDispayLine *****************
 13299 ;; Defined at:
 13300 ;;		line 462 in file "../Includes/Drivers/SSD1306oLED.c"
 13301 ;; Parameters:    Size  Location     Type
 13302 ;;  line            1    wreg     unsigned char 
 13303 ;; Auto vars:     Size  Location     Type
 13304 ;;  line            1    1[BANK0 ] unsigned char 
 13305 ;; Return value:  Size  Location     Type
 13306 ;;                  1    wreg      void 
 13307 ;; Registers used:
 13308 ;;		wreg, status,2, status,0, cstack
 13309 ;; Tracked objects:
 13310 ;;		On entry : 0/0
 13311 ;;		On exit  : 0/0
 13312 ;;		Unchanged: 0/0
 13313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13314 ;;      Params:         0       0       0       0       0       0       0       0       0
 13315 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13316 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13317 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13318 ;;Total ram usage:        1 bytes
 13319 ;; Hardware stack levels used:    1
 13320 ;; Hardware stack levels required when called:   12
 13321 ;; This function calls:
 13322 ;;		_oled_writeCommand
 13323 ;; This function is called by:
 13324 ;;		_oled_devInit
 13325 ;; This function uses a non-reentrant model
 13326 ;;
 13327                           
 13328                           	psect	text37
 13329  00615E                     __ptext37:
 13330                           	opt stack 0
 13331  00615E                     _oled_initialDispayLine:
 13332                           	opt stack 16
 13333                           
 13334                           ;incstack = 0
 13335                           ;oled_initialDispayLine@line stored from wreg
 13336  00615E  0100               	movlb	0	; () banked
 13337  006160  6F61               	movwf	oled_initialDispayLine@line& (0+255),b
 13338                           
 13339                           ;SSD1306oLED.c: 464: line|=0x40;
 13340  006162  0100               	movlb	0	; () banked
 13341  006164  8D61               	bsf	oled_initialDispayLine@line& (0+255),6,b
 13342                           
 13343                           ; BSR set to: 0
 13344                           ;SSD1306oLED.c: 465: oled_writeCommand(line);
 13345  006166  5161               	movf	oled_initialDispayLine@line& (0+255),w,b
 13346  006168  EC2E  F030         	call	_oled_writeCommand
 13347  00616C  0012               	return	
 13348  00616E                     __end_of_oled_initialDispayLine:
 13349                           	opt stack 0
 13350                           tblptru	equ	0xFF8
 13351                           tblptrh	equ	0xFF7
 13352                           tblptrl	equ	0xFF6
 13353                           tablat	equ	0xFF5
 13354                           prodh	equ	0xFF4
 13355                           prodl	equ	0xFF3
 13356                           intcon	equ	0xFF2
 13357                           intcon3	equ	0xFF0
 13358                           postinc0	equ	0xFEE
 13359                           wreg	equ	0xFE8
 13360                           indf1	equ	0xFE7
 13361                           postdec1	equ	0xFE5
 13362                           fsr1h	equ	0xFE2
 13363                           fsr1l	equ	0xFE1
 13364                           indf2	equ	0xFDF
 13365                           fsr2h	equ	0xFDA
 13366                           fsr2l	equ	0xFD9
 13367                           status	equ	0xFD8
 13368                           
 13369 ;; *************** function _oled_displayOff *****************
 13370 ;; Defined at:
 13371 ;;		line 425 in file "../Includes/Drivers/SSD1306oLED.c"
 13372 ;; Parameters:    Size  Location     Type
 13373 ;;  state           1    wreg     unsigned char 
 13374 ;; Auto vars:     Size  Location     Type
 13375 ;;  state           1    0[COMRAM] unsigned char 
 13376 ;; Return value:  Size  Location     Type
 13377 ;;                  1    wreg      void 
 13378 ;; Registers used:
 13379 ;;		wreg, cstack
 13380 ;; Tracked objects:
 13381 ;;		On entry : 0/0
 13382 ;;		On exit  : 0/0
 13383 ;;		Unchanged: 0/0
 13384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13385 ;;      Params:         0       0       0       0       0       0       0       0       0
 13386 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13387 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13388 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13389 ;;Total ram usage:        0 bytes
 13390 ;; Hardware stack levels used:    1
 13391 ;; Hardware stack levels required when called:   12
 13392 ;; This function calls:
 13393 ;;		_oled_writeCommand
 13394 ;; This function is called by:
 13395 ;;		_moteApp_GoToSleep
 13396 ;; This function uses a non-reentrant model
 13397 ;;
 13398                           
 13399                           	psect	text38
 13400  0061F2                     __ptext38:
 13401                           	opt stack 0
 13402  0061F2                     _oled_displayOff:
 13403                           	opt stack 15
 13404                           
 13405                           ;SSD1306oLED.c: 427: oled_writeCommand(0xae);
 13406                           
 13407                           ;incstack = 0
 13408  0061F2  0EAE               	movlw	174
 13409  0061F4  EC2E  F030         	call	_oled_writeCommand
 13410  0061F8  0012               	return		;funcret
 13411  0061FA                     __end_of_oled_displayOff:
 13412                           	opt stack 0
 13413                           tblptru	equ	0xFF8
 13414                           tblptrh	equ	0xFF7
 13415                           tblptrl	equ	0xFF6
 13416                           tablat	equ	0xFF5
 13417                           prodh	equ	0xFF4
 13418                           prodl	equ	0xFF3
 13419                           intcon	equ	0xFF2
 13420                           intcon3	equ	0xFF0
 13421                           postinc0	equ	0xFEE
 13422                           wreg	equ	0xFE8
 13423                           indf1	equ	0xFE7
 13424                           postdec1	equ	0xFE5
 13425                           fsr1h	equ	0xFE2
 13426                           fsr1l	equ	0xFE1
 13427                           indf2	equ	0xFDF
 13428                           fsr2h	equ	0xFDA
 13429                           fsr2l	equ	0xFD9
 13430                           status	equ	0xFD8
 13431                           
 13432 ;; *************** function _moduleSleep *****************
 13433 ;; Defined at:
 13434 ;;		line 175 in file "../Includes/Board/MOTEapp.c"
 13435 ;; Parameters:    Size  Location     Type
 13436 ;;		None
 13437 ;; Auto vars:     Size  Location     Type
 13438 ;;		None
 13439 ;; Return value:  Size  Location     Type
 13440 ;;                  1    wreg      void 
 13441 ;; Registers used:
 13442 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13443 ;; Tracked objects:
 13444 ;;		On entry : 0/0
 13445 ;;		On exit  : 0/0
 13446 ;;		Unchanged: 0/0
 13447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13448 ;;      Params:         0       0       0       0       0       0       0       0       0
 13449 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13450 ;;      Temps:          0       1       0       0       0       0       0       0       0
 13451 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13452 ;;Total ram usage:        1 bytes
 13453 ;; Hardware stack levels used:    1
 13454 ;; Hardware stack levels required when called:   14
 13455 ;; This function calls:
 13456 ;;		_sendCommand
 13457 ;; This function is called by:
 13458 ;;		_moteApp_GoToSleep
 13459 ;; This function uses a non-reentrant model
 13460 ;;
 13461                           
 13462                           	psect	text39
 13463  005E9A                     __ptext39:
 13464                           	opt stack 0
 13465  005E9A                     _moduleSleep:
 13466                           	opt stack 13
 13467                           
 13468                           ;MOTEapp.c: 177: sendCommand("sys sleep 999999999");
 13469                           
 13470                           ;incstack = 0
 13471  005E9A  0E82               	movlw	low STR_22
 13472  005E9C  0100               	movlb	0	; () banked
 13473  005E9E  6F61               	movwf	sendCommand@string& (0+255),b
 13474  005EA0  0E7A               	movlw	high STR_22
 13475  005EA2  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13476  005EA4  ECC0  F02D         	call	_sendCommand	;wreg free
 13477  005EA8                     
 13478                           ;MOTEapp.c: 179: ;
 13479  005EA8  B89D               	btfsc	3997,4,c	;volatile
 13480  005EAA  D7FE               	goto	l355
 13481                           
 13482                           ;MOTEapp.c: 180: _delay((unsigned long)((16)*(48000000/4000.0)));
 13483  005EAC  0EFA               	movlw	250
 13484  005EAE  0100               	movlb	0	; () banked
 13485  005EB0  6F63               	movwf	??_moduleSleep& (0+255),b
 13486  005EB2  0E58               	movlw	88
 13487  005EB4                     u11357:
 13488  005EB4  2EE8               	decfsz	wreg,f,c
 13489  005EB6  D7FE               	bra	u11357
 13490  005EB8  2F63               	decfsz	??_moduleSleep& (0+255),f,b
 13491  005EBA  D7FC               	bra	u11357
 13492  005EBC  F000               	nop	
 13493  005EBE  0012               	return		;funcret
 13494  005EC0                     __end_of_moduleSleep:
 13495                           	opt stack 0
 13496                           tblptru	equ	0xFF8
 13497                           tblptrh	equ	0xFF7
 13498                           tblptrl	equ	0xFF6
 13499                           tablat	equ	0xFF5
 13500                           prodh	equ	0xFF4
 13501                           prodl	equ	0xFF3
 13502                           intcon	equ	0xFF2
 13503                           intcon3	equ	0xFF0
 13504                           postinc0	equ	0xFEE
 13505                           wreg	equ	0xFE8
 13506                           indf1	equ	0xFE7
 13507                           postdec1	equ	0xFE5
 13508                           fsr1h	equ	0xFE2
 13509                           fsr1l	equ	0xFE1
 13510                           indf2	equ	0xFDF
 13511                           fsr2h	equ	0xFDA
 13512                           fsr2l	equ	0xFD9
 13513                           status	equ	0xFD8
 13514                           
 13515 ;; *************** function _moduleResync *****************
 13516 ;; Defined at:
 13517 ;;		line 134 in file "../Includes/Board/MOTEapp.c"
 13518 ;; Parameters:    Size  Location     Type
 13519 ;;		None
 13520 ;; Auto vars:     Size  Location     Type
 13521 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 13522 ;;  escapeEvent     1    7[BANK0 ] unsigned char 
 13523 ;; Return value:  Size  Location     Type
 13524 ;;                  1    wreg      void 
 13525 ;; Registers used:
 13526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13527 ;; Tracked objects:
 13528 ;;		On entry : 0/0
 13529 ;;		On exit  : 0/0
 13530 ;;		Unchanged: 0/0
 13531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13532 ;;      Params:         0       0       0       0       0       0       0       0       0
 13533 ;;      Locals:         0       3       0       0       0       0       0       0       0
 13534 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13535 ;;      Totals:         0       3       0       0       0       0       0       0       0
 13536 ;;Total ram usage:        3 bytes
 13537 ;; Hardware stack levels used:    1
 13538 ;; Hardware stack levels required when called:   14
 13539 ;; This function calls:
 13540 ;;		_MOTEapp_getModuleResponse
 13541 ;;		_moteApp_delayms
 13542 ;;		_sendCommand
 13543 ;; This function is called by:
 13544 ;;		_main
 13545 ;;		_moteApp_GoToSleep
 13546 ;; This function uses a non-reentrant model
 13547 ;;
 13548                           
 13549                           	psect	text40
 13550  004CEE                     __ptext40:
 13551                           	opt stack 0
 13552  004CEE                     _moduleResync:
 13553                           	opt stack 13
 13554                           
 13555                           ;MOTEapp.c: 136: bool escapeEvent = 0;
 13556                           
 13557                           ;incstack = 0
 13558  004CEE  0E00               	movlw	0
 13559  004CF0  0100               	movlb	0	; () banked
 13560  004CF2  6F67               	movwf	moduleResync@escapeEvent& (0+255),b
 13561                           
 13562                           ;MOTEapp.c: 137: uint16_t escapeCounter = 0;
 13563  004CF4  0E00               	movlw	0
 13564  004CF6  6F66               	movwf	(moduleResync@escapeCounter+1)& (0+255),b
 13565  004CF8  0E00               	movlw	0
 13566  004CFA  6F65               	movwf	moduleResync@escapeCounter& (0+255),b
 13567                           
 13568                           ; BSR set to: 0
 13569                           ;MOTEapp.c: 145: TXSTAbits.TXEN = 0;
 13570  004CFC  9AAC               	bcf	4012,5,c	;volatile
 13571                           
 13572                           ; BSR set to: 0
 13573                           ;MOTEapp.c: 146: LATCbits.LATC6 = 0;
 13574  004CFE  9C8B               	bcf	3979,6,c	;volatile
 13575                           
 13576                           ; BSR set to: 0
 13577                           ;MOTEapp.c: 147: moteApp_delayms(10);
 13578  004D00  0E00               	movlw	0
 13579  004D02  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 13580  004D04  0E0A               	movlw	10
 13581  004D06  6F60               	movwf	moteApp_delayms@length& (0+255),b
 13582  004D08  EC0D  F02E         	call	_moteApp_delayms	;wreg free
 13583                           
 13584                           ;MOTEapp.c: 148: TXSTAbits.TXEN = 1;
 13585  004D0C  8AAC               	bsf	4012,5,c	;volatile
 13586                           
 13587                           ;MOTEapp.c: 149: moteApp_delayms(5);
 13588  004D0E  0E00               	movlw	0
 13589  004D10  0100               	movlb	0	; () banked
 13590  004D12  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 13591  004D14  0E05               	movlw	5
 13592  004D16  6F60               	movwf	moteApp_delayms@length& (0+255),b
 13593  004D18  EC0D  F02E         	call	_moteApp_delayms	;wreg free
 13594                           
 13595                           ;MOTEapp.c: 151: TXREG = 0x55;
 13596  004D1C  0E55               	movlw	85
 13597  004D1E  6EAD               	movwf	4013,c	;volatile
 13598  004D20                     
 13599                           ;MOTEapp.c: 153: {};
 13600  004D20  A2AC               	btfss	4012,1,c	;volatile
 13601  004D22  D7FE               	goto	l337
 13602                           
 13603                           ;MOTEapp.c: 155: sendCommand("z");
 13604  004D24  0EFC               	movlw	low STR_21
 13605  004D26  0100               	movlb	0	; () banked
 13606  004D28  6F61               	movwf	sendCommand@string& (0+255),b
 13607  004D2A  0E7F               	movlw	high STR_21
 13608  004D2C  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13609  004D2E  ECC0  F02D         	call	_sendCommand	;wreg free
 13610                           
 13611                           ;MOTEapp.c: 157: moteApp_delayms(40);
 13612  004D32  0E00               	movlw	0
 13613  004D34  0100               	movlb	0	; () banked
 13614  004D36  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 13615  004D38  0E28               	movlw	40
 13616  004D3A  6F60               	movwf	moteApp_delayms@length& (0+255),b
 13617  004D3C  EC0D  F02E         	call	_moteApp_delayms	;wreg free
 13618                           
 13619                           ;MOTEapp.c: 158: while (escapeEvent)
 13620  004D40  D013               	goto	l343
 13621  004D42                     
 13622                           ;MOTEapp.c: 159: {
 13623                           ;MOTEapp.c: 160: if(MOTEapp_getModuleResponse())
 13624  004D42  EC6B  F02A         	call	_MOTEapp_getModuleResponse	;wreg free
 13625  004D46  0900               	iorlw	0
 13626  004D48  B4D8               	btfsc	status,2,c
 13627  004D4A  D003               	goto	l341
 13628                           
 13629                           ;MOTEapp.c: 161: escapeEvent = 1;
 13630  004D4C  0E01               	movlw	1
 13631  004D4E  0100               	movlb	0	; () banked
 13632  004D50  D00A               	goto	L6
 13633  004D52                     l341:
 13634                           
 13635                           ;MOTEapp.c: 162: else if (++escapeCounter > 5000)
 13636                           
 13637                           ; BSR set to: 0
 13638  004D52  0100               	movlb	0	; () banked
 13639  004D54  4B65               	infsnz	moduleResync@escapeCounter& (0+255),f,b
 13640  004D56  2B66               	incf	(moduleResync@escapeCounter+1)& (0+255),f,b
 13641  004D58  0E89               	movlw	137
 13642  004D5A  5D65               	subwf	moduleResync@escapeCounter& (0+255),w,b
 13643  004D5C  0E13               	movlw	19
 13644  004D5E  5966               	subwfb	(moduleResync@escapeCounter+1)& (0+255),w,b
 13645  004D60  A0D8               	btfss	status,0,c
 13646  004D62  D002               	goto	l343
 13647                           
 13648                           ; BSR set to: 0
 13649                           ;MOTEapp.c: 163: escapeEvent = 1;
 13650  004D64  0E01               	movlw	1
 13651  004D66                     L6:
 13652  004D66  6F67               	movwf	moduleResync@escapeEvent& (0+255),b
 13653  004D68                     l343:
 13654                           
 13655                           ; BSR set to: 0
 13656                           
 13657                           ; BSR set to: 0
 13658  004D68  0100               	movlb	0	; () banked
 13659  004D6A  5167               	movf	moduleResync@escapeEvent& (0+255),w,b
 13660  004D6C  B4D8               	btfsc	status,2,c
 13661  004D6E  0012               	return	
 13662  004D70  D7E8               	goto	l340
 13663  004D72                     __end_of_moduleResync:
 13664                           	opt stack 0
 13665                           tblptru	equ	0xFF8
 13666                           tblptrh	equ	0xFF7
 13667                           tblptrl	equ	0xFF6
 13668                           tablat	equ	0xFF5
 13669                           prodh	equ	0xFF4
 13670                           prodl	equ	0xFF3
 13671                           intcon	equ	0xFF2
 13672                           intcon3	equ	0xFF0
 13673                           postinc0	equ	0xFEE
 13674                           wreg	equ	0xFE8
 13675                           indf1	equ	0xFE7
 13676                           postdec1	equ	0xFE5
 13677                           fsr1h	equ	0xFE2
 13678                           fsr1l	equ	0xFE1
 13679                           indf2	equ	0xFDF
 13680                           fsr2h	equ	0xFDA
 13681                           fsr2l	equ	0xFD9
 13682                           status	equ	0xFD8
 13683                           
 13684 ;; *************** function _MOTEapp_getModuleResponse *****************
 13685 ;; Defined at:
 13686 ;;		line 1074 in file "../Includes/Board/MOTEapp.c"
 13687 ;; Parameters:    Size  Location     Type
 13688 ;;		None
 13689 ;; Auto vars:     Size  Location     Type
 13690 ;;  bufferByte      1    2[BANK0 ] unsigned char 
 13691 ;;  terminatorRe    1    1[BANK0 ] unsigned char 
 13692 ;; Return value:  Size  Location     Type
 13693 ;;                  1    wreg      unsigned char 
 13694 ;; Registers used:
 13695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13696 ;; Tracked objects:
 13697 ;;		On entry : 0/0
 13698 ;;		On exit  : 0/0
 13699 ;;		Unchanged: 0/0
 13700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13701 ;;      Params:         0       0       0       0       0       0       0       0       0
 13702 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13703 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13704 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13705 ;;Total ram usage:        2 bytes
 13706 ;; Hardware stack levels used:    1
 13707 ;; Hardware stack levels required when called:   12
 13708 ;; This function calls:
 13709 ;;		_EUSART_Read
 13710 ;; This function is called by:
 13711 ;;		_moduleResync
 13712 ;;		_moteHandler
 13713 ;;		_moteApp_setSensorsInput
 13714 ;;		_moteApp_getTempValue
 13715 ;;		_moteApp_getLightValue
 13716 ;; This function uses a non-reentrant model
 13717 ;;
 13718                           
 13719                           	psect	text41
 13720  0054D6                     __ptext41:
 13721                           	opt stack 0
 13722  0054D6                     _MOTEapp_getModuleResponse:
 13723                           	opt stack 15
 13724                           
 13725                           ;MOTEapp.c: 1076: bool terminatorReceived = 0;
 13726                           
 13727                           ; BSR set to: 0
 13728                           ;incstack = 0
 13729  0054D6  0E00               	movlw	0
 13730  0054D8  0100               	movlb	0	; () banked
 13731  0054DA  6F61               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 13732                           
 13733                           ;MOTEapp.c: 1078: if ((eusartRxCount))
 13734  0054DC  51F5               	movf	_eusartRxCount& (0+255),w,b	;volatile
 13735  0054DE  B4D8               	btfsc	status,2,c
 13736  0054E0  D02B               	goto	l626
 13737                           
 13738                           ; BSR set to: 0
 13739                           ;MOTEapp.c: 1079: {
 13740                           ;MOTEapp.c: 1080: uint8_t bufferByte = 0;
 13741  0054E2  0E00               	movlw	0
 13742  0054E4  6F62               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 13743                           
 13744                           ; BSR set to: 0
 13745                           ;MOTEapp.c: 1081: bufferByte = EUSART_Read();
 13746  0054E6  EC4E  F02D         	call	_EUSART_Read	;wreg free
 13747  0054EA  0100               	movlb	0	; () banked
 13748  0054EC  6F62               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 13749                           
 13750                           ; BSR set to: 0
 13751                           ;MOTEapp.c: 1083: if (bufferByte == 0x0D)
 13752  0054EE  0E0D               	movlw	13
 13753  0054F0  1962               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13754  0054F2  A4D8               	btfss	status,2,c
 13755  0054F4  D00F               	goto	l621
 13756                           
 13757                           ; BSR set to: 0
 13758                           ;MOTEapp.c: 1084: {
 13759                           ;MOTEapp.c: 1085: moduleResonseBuffer[moduleBufferIndex] = 0x00;
 13760  0054F6  51F2               	movf	_moduleBufferIndex& (0+255),w,b
 13761  0054F8  0D01               	mullw	1
 13762  0054FA  0E65               	movlw	low _moduleResonseBuffer
 13763  0054FC  24F3               	addwf	prodl,w,c
 13764  0054FE  6ED9               	movwf	fsr2l,c
 13765  005500  0E01               	movlw	high _moduleResonseBuffer
 13766  005502  20F4               	addwfc	prodh,w,c
 13767  005504  6EDA               	movwf	fsr2h,c
 13768  005506  0E00               	movlw	0
 13769  005508  6EDF               	movwf	indf2,c
 13770                           
 13771                           ; BSR set to: 0
 13772                           ;MOTEapp.c: 1086: terminatorReceived = 1;
 13773  00550A  0E01               	movlw	1
 13774  00550C  6F61               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 13775                           
 13776                           ; BSR set to: 0
 13777                           ;MOTEapp.c: 1087: moduleBufferIndex = 0;
 13778  00550E  0E00               	movlw	0
 13779  005510  6FF2               	movwf	_moduleBufferIndex& (0+255),b
 13780                           
 13781                           ;MOTEapp.c: 1088: }
 13782  005512  D012               	goto	l626
 13783  005514                     l621:
 13784                           
 13785                           ; BSR set to: 0
 13786                           ;MOTEapp.c: 1089: else if ( (bufferByte == 0x00) || (bufferByte == 0x0A) )
 13787                           
 13788                           ; BSR set to: 0
 13789  005514  5162               	movf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13790  005516  B4D8               	btfsc	status,2,c
 13791  005518  D00F               	goto	l626
 13792                           
 13793                           ; BSR set to: 0
 13794  00551A  0E0A               	movlw	10
 13795  00551C  1962               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13796  00551E  B4D8               	btfsc	status,2,c
 13797  005520  D00B               	goto	l626
 13798                           
 13799                           ; BSR set to: 0
 13800                           ;MOTEapp.c: 1093: else
 13801                           ;MOTEapp.c: 1094: {
 13802                           ;MOTEapp.c: 1095: moduleResonseBuffer[moduleBufferIndex] = bufferByte;
 13803                           
 13804                           ; BSR set to: 0
 13805                           
 13806                           ; BSR set to: 0
 13807                           ;MOTEapp.c: 1090: {
 13808                           ;MOTEapp.c: 1092: }
 13809  005522  51F2               	movf	_moduleBufferIndex& (0+255),w,b
 13810  005524  0D01               	mullw	1
 13811  005526  0E65               	movlw	low _moduleResonseBuffer
 13812  005528  24F3               	addwf	prodl,w,c
 13813  00552A  6ED9               	movwf	fsr2l,c
 13814  00552C  0E01               	movlw	high _moduleResonseBuffer
 13815  00552E  20F4               	addwfc	prodh,w,c
 13816  005530  6EDA               	movwf	fsr2h,c
 13817  005532  C062  FFDF         	movff	MOTEapp_getModuleResponse@bufferByte,indf2
 13818                           
 13819                           ; BSR set to: 0
 13820                           ;MOTEapp.c: 1097: moduleBufferIndex++;
 13821  005536  2BF2               	incf	_moduleBufferIndex& (0+255),f,b
 13822  005538                     l626:
 13823                           
 13824                           ; BSR set to: 0
 13825                           ;MOTEapp.c: 1098: }
 13826                           ;MOTEapp.c: 1099: }
 13827                           ;MOTEapp.c: 1100: return terminatorReceived;
 13828                           
 13829                           ; BSR set to: 0
 13830                           
 13831                           ; BSR set to: 0
 13832                           
 13833                           ; BSR set to: 0
 13834  005538  5161               	movf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),w,b
 13835  00553A  0012               	return	
 13836  00553C                     __end_of_MOTEapp_getModuleResponse:
 13837                           	opt stack 0
 13838                           tblptru	equ	0xFF8
 13839                           tblptrh	equ	0xFF7
 13840                           tblptrl	equ	0xFF6
 13841                           tablat	equ	0xFF5
 13842                           prodh	equ	0xFF4
 13843                           prodl	equ	0xFF3
 13844                           intcon	equ	0xFF2
 13845                           intcon3	equ	0xFF0
 13846                           postinc0	equ	0xFEE
 13847                           wreg	equ	0xFE8
 13848                           indf1	equ	0xFE7
 13849                           postdec1	equ	0xFE5
 13850                           fsr1h	equ	0xFE2
 13851                           fsr1l	equ	0xFE1
 13852                           indf2	equ	0xFDF
 13853                           fsr2h	equ	0xFDA
 13854                           fsr2l	equ	0xFD9
 13855                           status	equ	0xFD8
 13856                           
 13857 ;; *************** function _EUSART_FlushBuffer *****************
 13858 ;; Defined at:
 13859 ;;		line 202 in file "../Includes/MccGenerated/eusart.c"
 13860 ;; Parameters:    Size  Location     Type
 13861 ;;		None
 13862 ;; Auto vars:     Size  Location     Type
 13863 ;;  index           1    0[BANK0 ] unsigned char 
 13864 ;; Return value:  Size  Location     Type
 13865 ;;                  1    wreg      void 
 13866 ;; Registers used:
 13867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13868 ;; Tracked objects:
 13869 ;;		On entry : 0/0
 13870 ;;		On exit  : 0/0
 13871 ;;		Unchanged: 0/0
 13872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13873 ;;      Params:         0       0       0       0       0       0       0       0       0
 13874 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13875 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13876 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13877 ;;Total ram usage:        1 bytes
 13878 ;; Hardware stack levels used:    1
 13879 ;; Hardware stack levels required when called:   11
 13880 ;; This function calls:
 13881 ;;		Nothing
 13882 ;; This function is called by:
 13883 ;;		_test_powerup
 13884 ;;		_moteApp_GoToSleep
 13885 ;; This function uses a non-reentrant model
 13886 ;;
 13887                           
 13888                           	psect	text42
 13889  0058E4                     __ptext42:
 13890                           	opt stack 0
 13891  0058E4                     _EUSART_FlushBuffer:
 13892                           	opt stack 18
 13893                           
 13894                           ;eusart.c: 204: uint8_t index;
 13895                           ;eusart.c: 205: for (index=0; index < 64; index++)
 13896                           
 13897                           ; BSR set to: 0
 13898                           ;incstack = 0
 13899  0058E4  0E00               	movlw	0
 13900  0058E6  0100               	movlb	0	; () banked
 13901  0058E8  6F60               	movwf	EUSART_FlushBuffer@index& (0+255),b
 13902  0058EA                     l8621:
 13903                           
 13904                           ; BSR set to: 0
 13905  0058EA  0E3F               	movlw	63
 13906  0058EC  6560               	cpfsgt	EUSART_FlushBuffer@index& (0+255),b
 13907  0058EE  D001               	goto	l1243
 13908  0058F0  D00C               	goto	u6610
 13909  0058F2                     l1243:
 13910                           
 13911                           ; BSR set to: 0
 13912                           ;eusart.c: 206: {
 13913                           ;eusart.c: 207: eusartRxBuffer[index] = 0;
 13914                           
 13915                           ; BSR set to: 0
 13916  0058F2  5160               	movf	EUSART_FlushBuffer@index& (0+255),w,b
 13917  0058F4  0D01               	mullw	1
 13918  0058F6  0E00               	movlw	low _eusartRxBuffer
 13919  0058F8  24F3               	addwf	prodl,w,c
 13920  0058FA  6ED9               	movwf	fsr2l,c
 13921  0058FC  0E02               	movlw	high _eusartRxBuffer
 13922  0058FE  20F4               	addwfc	prodh,w,c
 13923  005900  6EDA               	movwf	fsr2h,c
 13924  005902  0E00               	movlw	0
 13925  005904  6EDF               	movwf	indf2,c
 13926                           
 13927                           ; BSR set to: 0
 13928  005906  2B60               	incf	EUSART_FlushBuffer@index& (0+255),f,b
 13929  005908  D7F0               	goto	l8621
 13930  00590A                     u6610:
 13931                           
 13932                           ; BSR set to: 0
 13933                           ;eusart.c: 208: }
 13934                           ;eusart.c: 209: eusartRxHead = 0;
 13935                           
 13936                           ; BSR set to: 0
 13937  00590A  0E00               	movlw	0
 13938  00590C  6FDF               	movwf	_eusartRxHead& (0+255),b
 13939                           
 13940                           ;eusart.c: 210: eusartRxTail = 0;
 13941  00590E  0E00               	movlw	0
 13942  005910  6FDE               	movwf	_eusartRxTail& (0+255),b
 13943                           
 13944                           ;eusart.c: 211: eusartRxCount = 0;
 13945  005912  0E00               	movlw	0
 13946  005914  6FF5               	movwf	_eusartRxCount& (0+255),b	;volatile
 13947                           
 13948                           ; BSR set to: 0
 13949                           ;eusart.c: 213: PIE1bits.TXIE = 0;
 13950  005916  989D               	bcf	3997,4,c	;volatile
 13951                           
 13952                           ;eusart.c: 214: eusartTxHead = 0;
 13953  005918  0E00               	movlw	0
 13954  00591A  6FE2               	movwf	_eusartTxHead& (0+255),b
 13955                           
 13956                           ;eusart.c: 215: eusartTxTail = 0;
 13957  00591C  0E00               	movlw	0
 13958  00591E  6FE1               	movwf	_eusartTxTail& (0+255),b
 13959                           
 13960                           ;eusart.c: 216: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 13961  005920  0E40               	movlw	64
 13962  005922  6FE0               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
 13963                           
 13964                           ; BSR set to: 0
 13965  005924  0012               	return		;funcret
 13966  005926                     __end_of_EUSART_FlushBuffer:
 13967                           	opt stack 0
 13968                           tblptru	equ	0xFF8
 13969                           tblptrh	equ	0xFF7
 13970                           tblptrl	equ	0xFF6
 13971                           tablat	equ	0xFF5
 13972                           prodh	equ	0xFF4
 13973                           prodl	equ	0xFF3
 13974                           intcon	equ	0xFF2
 13975                           intcon3	equ	0xFF0
 13976                           postinc0	equ	0xFEE
 13977                           wreg	equ	0xFE8
 13978                           indf1	equ	0xFE7
 13979                           postdec1	equ	0xFE5
 13980                           fsr1h	equ	0xFE2
 13981                           fsr1l	equ	0xFE1
 13982                           indf2	equ	0xFDF
 13983                           fsr2h	equ	0xFDA
 13984                           fsr2l	equ	0xFD9
 13985                           status	equ	0xFD8
 13986                           
 13987 ;; *************** function _TMR2_ReadTimer *****************
 13988 ;; Defined at:
 13989 ;;		line 87 in file "../Includes/MccGenerated/tmr2.c"
 13990 ;; Parameters:    Size  Location     Type
 13991 ;;		None
 13992 ;; Auto vars:     Size  Location     Type
 13993 ;;  readVal         1    0[BANK0 ] unsigned char 
 13994 ;; Return value:  Size  Location     Type
 13995 ;;                  1    wreg      unsigned char 
 13996 ;; Registers used:
 13997 ;;		wreg, status,2
 13998 ;; Tracked objects:
 13999 ;;		On entry : 0/0
 14000 ;;		On exit  : 0/0
 14001 ;;		Unchanged: 0/0
 14002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14003 ;;      Params:         0       0       0       0       0       0       0       0       0
 14004 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14005 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14006 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14007 ;;Total ram usage:        1 bytes
 14008 ;; Hardware stack levels used:    1
 14009 ;; Hardware stack levels required when called:   11
 14010 ;; This function calls:
 14011 ;;		Nothing
 14012 ;; This function is called by:
 14013 ;;		_moteRunningProcess
 14014 ;; This function uses a non-reentrant model
 14015 ;;
 14016                           
 14017                           	psect	text43
 14018  0061C0                     __ptext43:
 14019                           	opt stack 0
 14020  0061C0                     _TMR2_ReadTimer:
 14021                           	opt stack 17
 14022                           
 14023                           ;tmr2.c: 88: uint8_t readVal;
 14024                           ;tmr2.c: 90: readVal = TMR2;
 14025                           
 14026                           ; BSR set to: 0
 14027                           ;incstack = 0
 14028  0061C0  CFBC F060          	movff	4028,TMR2_ReadTimer@readVal	;volatile
 14029                           
 14030                           ;tmr2.c: 92: return readVal;
 14031  0061C4  0100               	movlb	0	; () banked
 14032  0061C6  5160               	movf	TMR2_ReadTimer@readVal& (0+255),w,b
 14033  0061C8  0012               	return	
 14034  0061CA                     __end_of_TMR2_ReadTimer:
 14035                           	opt stack 0
 14036                           tblptru	equ	0xFF8
 14037                           tblptrh	equ	0xFF7
 14038                           tblptrl	equ	0xFF6
 14039                           tablat	equ	0xFF5
 14040                           prodh	equ	0xFF4
 14041                           prodl	equ	0xFF3
 14042                           intcon	equ	0xFF2
 14043                           intcon3	equ	0xFF0
 14044                           postinc0	equ	0xFEE
 14045                           wreg	equ	0xFE8
 14046                           indf1	equ	0xFE7
 14047                           postdec1	equ	0xFE5
 14048                           fsr1h	equ	0xFE2
 14049                           fsr1l	equ	0xFE1
 14050                           indf2	equ	0xFDF
 14051                           fsr2h	equ	0xFDA
 14052                           fsr2l	equ	0xFD9
 14053                           status	equ	0xFD8
 14054                           
 14055 ;; *************** function _MOTEapp_SetDataRateSetting *****************
 14056 ;; Defined at:
 14057 ;;		line 981 in file "../Includes/Board/MOTEapp.c"
 14058 ;; Parameters:    Size  Location     Type
 14059 ;;  dr              1    wreg     unsigned char 
 14060 ;; Auto vars:     Size  Location     Type
 14061 ;;  dr              1    4[BANK0 ] unsigned char 
 14062 ;; Return value:  Size  Location     Type
 14063 ;;                  1    wreg      void 
 14064 ;; Registers used:
 14065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14066 ;; Tracked objects:
 14067 ;;		On entry : 0/0
 14068 ;;		On exit  : 0/0
 14069 ;;		Unchanged: 0/0
 14070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14071 ;;      Params:         0       0       0       0       0       0       0       0       0
 14072 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14073 ;;      Temps:          0       1       0       0       0       0       0       0       0
 14074 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14075 ;;Total ram usage:        2 bytes
 14076 ;; Hardware stack levels used:    1
 14077 ;; Hardware stack levels required when called:   14
 14078 ;; This function calls:
 14079 ;;		_sendCommand
 14080 ;; This function is called by:
 14081 ;;		_moteRunningProcess
 14082 ;; This function uses a non-reentrant model
 14083 ;;
 14084                           
 14085                           	psect	text44
 14086  00277C                     __ptext44:
 14087                           	opt stack 0
 14088  00277C                     _MOTEapp_SetDataRateSetting:
 14089                           	opt stack 14
 14090                           
 14091                           ; BSR set to: 0
 14092                           ;incstack = 0
 14093                           ;MOTEapp_SetDataRateSetting@dr stored from wreg
 14094  00277C  0100               	movlb	0	; () banked
 14095  00277E  6F64               	movwf	MOTEapp_SetDataRateSetting@dr& (0+255),b
 14096                           
 14097                           ;MOTEapp.c: 983: if (dr != 8)
 14098  002780  0E08               	movlw	8
 14099  002782  0100               	movlb	0	; () banked
 14100  002784  1964               	xorwf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 14101  002786  B4D8               	btfsc	status,2,c
 14102  002788  D06A               	goto	l591
 14103                           
 14104                           ; BSR set to: 0
 14105                           ;MOTEapp.c: 984: {
 14106                           ;MOTEapp.c: 985: sendCommand("mac set adr off");
 14107  00278A  0EA3               	movlw	low STR_163
 14108  00278C  6F61               	movwf	sendCommand@string& (0+255),b
 14109  00278E  0E7C               	movlw	high STR_163
 14110  002790  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14111  002792  ECC0  F02D         	call	_sendCommand	;wreg free
 14112                           
 14113                           ;MOTEapp.c: 986: _delay((unsigned long)((16)*(48000000/4000.0)));
 14114  002796  0EFA               	movlw	250
 14115  002798  0100               	movlb	0	; () banked
 14116  00279A  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14117  00279C  0E58               	movlw	88
 14118  00279E                     u11367:
 14119  00279E  2EE8               	decfsz	wreg,f,c
 14120  0027A0  D7FE               	bra	u11367
 14121  0027A2  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14122  0027A4  D7FC               	bra	u11367
 14123  0027A6  F000               	nop	
 14124                           
 14125                           ;MOTEapp.c: 987: _delay((unsigned long)((16)*(48000000/4000.0)));
 14126  0027A8  0EFA               	movlw	250
 14127  0027AA  0100               	movlb	0	; () banked
 14128  0027AC  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14129  0027AE  0E58               	movlw	88
 14130  0027B0                     u11377:
 14131  0027B0  2EE8               	decfsz	wreg,f,c
 14132  0027B2  D7FE               	bra	u11377
 14133  0027B4  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14134  0027B6  D7FC               	bra	u11377
 14135  0027B8  F000               	nop	
 14136                           
 14137                           ;MOTEapp.c: 988: _delay((unsigned long)((16)*(48000000/4000.0)));
 14138  0027BA  0EFA               	movlw	250
 14139  0027BC  0100               	movlb	0	; () banked
 14140  0027BE  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14141  0027C0  0E58               	movlw	88
 14142  0027C2                     u11387:
 14143  0027C2  2EE8               	decfsz	wreg,f,c
 14144  0027C4  D7FE               	bra	u11387
 14145  0027C6  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14146  0027C8  D7FC               	bra	u11387
 14147  0027CA  F000               	nop	
 14148                           
 14149                           ;MOTEapp.c: 989: }
 14150                           ;MOTEapp.c: 991: switch (dr)
 14151  0027CC  D048               	goto	l591
 14152  0027CE                     
 14153                           ;MOTEapp.c: 994: sendCommand("mac set dr 0");
 14154  0027CE  0E7F               	movlw	low STR_164
 14155  0027D0  0100               	movlb	0	; () banked
 14156  0027D2  6F61               	movwf	sendCommand@string& (0+255),b
 14157  0027D4  0E7D               	movlw	high STR_164
 14158  0027D6  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14159  0027D8  ECC0  F02D         	call	_sendCommand	;wreg free
 14160                           
 14161                           ;MOTEapp.c: 995: break;
 14162  0027DC  D05D               	goto	l593
 14163  0027DE                     
 14164                           ;MOTEapp.c: 997: sendCommand("mac set dr 1");
 14165  0027DE  0E8C               	movlw	low STR_165
 14166  0027E0  0100               	movlb	0	; () banked
 14167  0027E2  6F61               	movwf	sendCommand@string& (0+255),b
 14168  0027E4  0E7D               	movlw	high STR_165
 14169  0027E6  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14170  0027E8  ECC0  F02D         	call	_sendCommand	;wreg free
 14171                           
 14172                           ;MOTEapp.c: 998: break;
 14173  0027EC  D055               	goto	l593
 14174  0027EE                     
 14175                           ;MOTEapp.c: 1000: sendCommand("mac set dr 2");
 14176  0027EE  0E99               	movlw	low STR_166
 14177  0027F0  0100               	movlb	0	; () banked
 14178  0027F2  6F61               	movwf	sendCommand@string& (0+255),b
 14179  0027F4  0E7D               	movlw	high STR_166
 14180  0027F6  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14181  0027F8  ECC0  F02D         	call	_sendCommand	;wreg free
 14182                           
 14183                           ;MOTEapp.c: 1001: break;
 14184  0027FC  D04D               	goto	l593
 14185  0027FE                     
 14186                           ;MOTEapp.c: 1003: sendCommand("mac set dr 3");
 14187  0027FE  0EA6               	movlw	low STR_167
 14188  002800  0100               	movlb	0	; () banked
 14189  002802  6F61               	movwf	sendCommand@string& (0+255),b
 14190  002804  0E7D               	movlw	high STR_167
 14191  002806  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14192  002808  ECC0  F02D         	call	_sendCommand	;wreg free
 14193                           
 14194                           ;MOTEapp.c: 1004: break;
 14195  00280C  D045               	goto	l593
 14196  00280E                     
 14197                           ;MOTEapp.c: 1006: sendCommand("mac set dr 4");
 14198  00280E  0EB3               	movlw	low STR_168
 14199  002810  0100               	movlb	0	; () banked
 14200  002812  6F61               	movwf	sendCommand@string& (0+255),b
 14201  002814  0E7D               	movlw	high STR_168
 14202  002816  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14203  002818  ECC0  F02D         	call	_sendCommand	;wreg free
 14204                           
 14205                           ;MOTEapp.c: 1007: break;
 14206  00281C  D03D               	goto	l593
 14207  00281E                     
 14208                           ;MOTEapp.c: 1009: sendCommand("mac set dr 5");
 14209  00281E  0EC0               	movlw	low STR_169
 14210  002820  0100               	movlb	0	; () banked
 14211  002822  6F61               	movwf	sendCommand@string& (0+255),b
 14212  002824  0E7D               	movlw	high STR_169
 14213  002826  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14214  002828  ECC0  F02D         	call	_sendCommand	;wreg free
 14215                           
 14216                           ;MOTEapp.c: 1010: break;
 14217  00282C  D035               	goto	l593
 14218  00282E                     
 14219                           ;MOTEapp.c: 1012: sendCommand("mac set dr 6");
 14220  00282E  0ECD               	movlw	low STR_170
 14221  002830  0100               	movlb	0	; () banked
 14222  002832  6F61               	movwf	sendCommand@string& (0+255),b
 14223  002834  0E7D               	movlw	high STR_170
 14224  002836  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14225  002838  ECC0  F02D         	call	_sendCommand	;wreg free
 14226                           
 14227                           ;MOTEapp.c: 1013: break;
 14228  00283C  D02D               	goto	l593
 14229  00283E                     
 14230                           ;MOTEapp.c: 1015: sendCommand("mac set dr 7");
 14231  00283E  0EDA               	movlw	low STR_171
 14232  002840  0100               	movlb	0	; () banked
 14233  002842  6F61               	movwf	sendCommand@string& (0+255),b
 14234  002844  0E7D               	movlw	high STR_171
 14235  002846  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14236  002848  ECC0  F02D         	call	_sendCommand	;wreg free
 14237                           
 14238                           ;MOTEapp.c: 1016: break;
 14239  00284C  D025               	goto	l593
 14240  00284E                     
 14241                           ;MOTEapp.c: 1018: sendCommand("mac set adr on");
 14242  00284E  0EF1               	movlw	low STR_172
 14243  002850  0100               	movlb	0	; () banked
 14244  002852  6F61               	movwf	sendCommand@string& (0+255),b
 14245  002854  0E7C               	movlw	high STR_172
 14246  002856  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14247  002858  ECC0  F02D         	call	_sendCommand	;wreg free
 14248                           
 14249                           ;MOTEapp.c: 1020: }
 14250                           
 14251                           ;MOTEapp.c: 1019: break;
 14252  00285C  D01D               	goto	l593
 14253  00285E                     l591:
 14254  00285E  0100               	movlb	0	; () banked
 14255  002860  5164               	movf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 14256                           
 14257                           ; Switch size 1, requested type "space"
 14258                           ; Number of cases is 9, Range of values is 0 to 8
 14259                           ; switch strategies available:
 14260                           ; Name         Instructions Cycles
 14261                           ; simple_byte           28    15 (average)
 14262                           ;	Chosen strategy is simple_byte
 14263  002862  0A00               	xorlw	0	; case 0
 14264  002864  B4D8               	btfsc	status,2,c
 14265  002866  D7B3               	goto	l592
 14266  002868  0A01               	xorlw	1	; case 1
 14267  00286A  B4D8               	btfsc	status,2,c
 14268  00286C  D7B8               	goto	l594
 14269  00286E  0A03               	xorlw	3	; case 2
 14270  002870  B4D8               	btfsc	status,2,c
 14271  002872  D7BD               	goto	l595
 14272  002874  0A01               	xorlw	1	; case 3
 14273  002876  B4D8               	btfsc	status,2,c
 14274  002878  D7C2               	goto	l596
 14275  00287A  0A07               	xorlw	7	; case 4
 14276  00287C  B4D8               	btfsc	status,2,c
 14277  00287E  D7C7               	goto	l597
 14278  002880  0A01               	xorlw	1	; case 5
 14279  002882  B4D8               	btfsc	status,2,c
 14280  002884  D7CC               	goto	l598
 14281  002886  0A03               	xorlw	3	; case 6
 14282  002888  B4D8               	btfsc	status,2,c
 14283  00288A  D7D1               	goto	l599
 14284  00288C  0A01               	xorlw	1	; case 7
 14285  00288E  B4D8               	btfsc	status,2,c
 14286  002890  D7D6               	goto	l600
 14287  002892  0A0F               	xorlw	15	; case 8
 14288  002894  B4D8               	btfsc	status,2,c
 14289  002896  D7DB               	goto	l601
 14290  002898                     l593:
 14291                           
 14292                           ;MOTEapp.c: 1021: _delay((unsigned long)((16)*(48000000/4000.0)));
 14293                           
 14294                           ; BSR set to: 0
 14295  002898  0EFA               	movlw	250
 14296  00289A  0100               	movlb	0	; () banked
 14297  00289C  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14298  00289E  0E58               	movlw	88
 14299  0028A0                     u11397:
 14300  0028A0  2EE8               	decfsz	wreg,f,c
 14301  0028A2  D7FE               	bra	u11397
 14302  0028A4  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14303  0028A6  D7FC               	bra	u11397
 14304  0028A8  F000               	nop	
 14305                           
 14306                           ;MOTEapp.c: 1022: _delay((unsigned long)((16)*(48000000/4000.0)));
 14307  0028AA  0EFA               	movlw	250
 14308  0028AC  0100               	movlb	0	; () banked
 14309  0028AE  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14310  0028B0  0E58               	movlw	88
 14311  0028B2                     u11407:
 14312  0028B2  2EE8               	decfsz	wreg,f,c
 14313  0028B4  D7FE               	bra	u11407
 14314  0028B6  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14315  0028B8  D7FC               	bra	u11407
 14316  0028BA  F000               	nop	
 14317                           
 14318                           ;MOTEapp.c: 1023: _delay((unsigned long)((16)*(48000000/4000.0)));
 14319  0028BC  0EFA               	movlw	250
 14320  0028BE  0100               	movlb	0	; () banked
 14321  0028C0  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14322  0028C2  0E58               	movlw	88
 14323  0028C4                     u11417:
 14324  0028C4  2EE8               	decfsz	wreg,f,c
 14325  0028C6  D7FE               	bra	u11417
 14326  0028C8  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14327  0028CA  D7FC               	bra	u11417
 14328  0028CC  F000               	nop	
 14329                           
 14330                           ;MOTEapp.c: 1024: sendCommand("mac save");
 14331  0028CE  0E2B               	movlw	low STR_173
 14332  0028D0  0100               	movlb	0	; () banked
 14333  0028D2  6F61               	movwf	sendCommand@string& (0+255),b
 14334  0028D4  0E7F               	movlw	high STR_173
 14335  0028D6  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14336  0028D8  ECC0  F02D         	call	_sendCommand	;wreg free
 14337  0028DC  0012               	return		;funcret
 14338  0028DE                     __end_of_MOTEapp_SetDataRateSetting:
 14339                           	opt stack 0
 14340                           tblptru	equ	0xFF8
 14341                           tblptrh	equ	0xFF7
 14342                           tblptrl	equ	0xFF6
 14343                           tablat	equ	0xFF5
 14344                           prodh	equ	0xFF4
 14345                           prodl	equ	0xFF3
 14346                           intcon	equ	0xFF2
 14347                           intcon3	equ	0xFF0
 14348                           postinc0	equ	0xFEE
 14349                           wreg	equ	0xFE8
 14350                           indf1	equ	0xFE7
 14351                           postdec1	equ	0xFE5
 14352                           fsr1h	equ	0xFE2
 14353                           fsr1l	equ	0xFE1
 14354                           indf2	equ	0xFDF
 14355                           fsr2h	equ	0xFDA
 14356                           fsr2l	equ	0xFD9
 14357                           status	equ	0xFD8
 14358                           
 14359 ;; *************** function _ADC_TempConversion *****************
 14360 ;; Defined at:
 14361 ;;		line 136 in file "../Includes/MccGenerated/adc.c"
 14362 ;; Parameters:    Size  Location     Type
 14363 ;;  tempRaw         1    wreg     enum E5749
 14364 ;; Auto vars:     Size  Location     Type
 14365 ;;  tempRaw         1   70[BANK0 ] enum E5749
 14366 ;;  val             4   72[BANK0 ] enum E5749
 14367 ;;  temp            1   71[BANK0 ] unsigned char 
 14368 ;; Return value:  Size  Location     Type
 14369 ;;                  1    wreg      unsigned char 
 14370 ;; Registers used:
 14371 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14372 ;; Tracked objects:
 14373 ;;		On entry : 0/0
 14374 ;;		On exit  : 0/0
 14375 ;;		Unchanged: 0/0
 14376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14377 ;;      Params:         0       0       0       0       0       0       0       0       0
 14378 ;;      Locals:         0       6       0       0       0       0       0       0       0
 14379 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14380 ;;      Totals:         0       6       0       0       0       0       0       0       0
 14381 ;;Total ram usage:        6 bytes
 14382 ;; Hardware stack levels used:    1
 14383 ;; Hardware stack levels required when called:   12
 14384 ;; This function calls:
 14385 ;;		___fladd
 14386 ;;		___fldiv
 14387 ;;		___flmul
 14388 ;;		___fltol
 14389 ;;		___xxtofl
 14390 ;; This function is called by:
 14391 ;;		_moteHandler
 14392 ;;		_moteRunningProcess
 14393 ;;		_moteApp_testSensors
 14394 ;;		_test_adc
 14395 ;; This function uses a non-reentrant model
 14396 ;;
 14397                           
 14398                           	psect	text45
 14399  00378C                     __ptext45:
 14400                           	opt stack 0
 14401  00378C                     _ADC_TempConversion:
 14402                           	opt stack 16
 14403                           
 14404                           ;incstack = 0
 14405                           ;ADC_TempConversion@tempRaw stored from wreg
 14406  00378C  0100               	movlb	0	; () banked
 14407  00378E  6FA6               	movwf	ADC_TempConversion@tempRaw& (0+255),b
 14408                           
 14409                           ;adc.c: 138: uint8_t temp;
 14410                           ;adc.c: 140: double val = ((tempRaw * 3.2)/1024);
 14411  003790  0ECD               	movlw	205
 14412  003792  0100               	movlb	0	; () banked
 14413  003794  6F78               	movwf	___flmul@a& (0+255),b
 14414  003796  0ECC               	movlw	204
 14415  003798  6F79               	movwf	(___flmul@a+1)& (0+255),b
 14416  00379A  0E4C               	movlw	76
 14417  00379C  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 14418  00379E  0E40               	movlw	64
 14419  0037A0  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 14420  0037A2  51A6               	movf	ADC_TempConversion@tempRaw& (0+255),w,b
 14421  0037A4  6F60               	movwf	___xxtofl@val& (0+255),b
 14422  0037A6  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
 14423  0037A8  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 14424  0037AA  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 14425  0037AC  0E00               	movlw	0
 14426  0037AE  EC6F  F014         	call	___xxtofl
 14427  0037B2  C060  F074         	movff	?___xxtofl,___flmul@b
 14428  0037B6  C061  F075         	movff	?___xxtofl+1,___flmul@b+1
 14429  0037BA  C062  F076         	movff	?___xxtofl+2,___flmul@b+2
 14430  0037BE  C063  F077         	movff	?___xxtofl+3,___flmul@b+3
 14431  0037C2  ECB4  F00C         	call	___flmul	;wreg free
 14432  0037C6  C074  F08D         	movff	?___flmul,___fldiv@b
 14433  0037CA  C075  F08E         	movff	?___flmul+1,___fldiv@b+1
 14434  0037CE  C076  F08F         	movff	?___flmul+2,___fldiv@b+2
 14435  0037D2  C077  F090         	movff	?___flmul+3,___fldiv@b+3
 14436  0037D6  0E00               	movlw	0
 14437  0037D8  0100               	movlb	0	; () banked
 14438  0037DA  6F91               	movwf	___fldiv@a& (0+255),b
 14439  0037DC  0E00               	movlw	0
 14440  0037DE  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 14441  0037E0  0E80               	movlw	128
 14442  0037E2  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 14443  0037E4  0E44               	movlw	68
 14444  0037E6  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 14445  0037E8  ECFC  F00F         	call	___fldiv	;wreg free
 14446  0037EC  C08D  F0A8         	movff	?___fldiv,ADC_TempConversion@val
 14447  0037F0  C08E  F0A9         	movff	?___fldiv+1,ADC_TempConversion@val+1
 14448  0037F4  C08F  F0AA         	movff	?___fldiv+2,ADC_TempConversion@val+2
 14449  0037F8  C090  F0AB         	movff	?___fldiv+3,ADC_TempConversion@val+3
 14450                           
 14451                           ;adc.c: 141: val = ((val - 0.5)*100);
 14452  0037FC  0E00               	movlw	0
 14453  0037FE  0100               	movlb	0	; () banked
 14454  003800  6F64               	movwf	___fladd@a& (0+255),b
 14455  003802  0E00               	movlw	0
 14456  003804  6F65               	movwf	(___fladd@a+1)& (0+255),b
 14457  003806  0E00               	movlw	0
 14458  003808  6F66               	movwf	(___fladd@a+2)& (0+255),b
 14459  00380A  0EBF               	movlw	191
 14460  00380C  6F67               	movwf	(___fladd@a+3)& (0+255),b
 14461  00380E  C0A8  F060         	movff	ADC_TempConversion@val,___fladd@b
 14462  003812  C0A9  F061         	movff	ADC_TempConversion@val+1,___fladd@b+1
 14463  003816  C0AA  F062         	movff	ADC_TempConversion@val+2,___fladd@b+2
 14464  00381A  C0AB  F063         	movff	ADC_TempConversion@val+3,___fladd@b+3
 14465  00381E  EC5D  F00E         	call	___fladd	;wreg free
 14466  003822  C060  F074         	movff	?___fladd,___flmul@b
 14467  003826  C061  F075         	movff	?___fladd+1,___flmul@b+1
 14468  00382A  C062  F076         	movff	?___fladd+2,___flmul@b+2
 14469  00382E  C063  F077         	movff	?___fladd+3,___flmul@b+3
 14470  003832  0E00               	movlw	0
 14471  003834  0100               	movlb	0	; () banked
 14472  003836  6F78               	movwf	___flmul@a& (0+255),b
 14473  003838  0E00               	movlw	0
 14474  00383A  6F79               	movwf	(___flmul@a+1)& (0+255),b
 14475  00383C  0EC8               	movlw	200
 14476  00383E  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 14477  003840  0E42               	movlw	66
 14478  003842  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 14479  003844  ECB4  F00C         	call	___flmul	;wreg free
 14480  003848  C074  F0A8         	movff	?___flmul,ADC_TempConversion@val
 14481  00384C  C075  F0A9         	movff	?___flmul+1,ADC_TempConversion@val+1
 14482  003850  C076  F0AA         	movff	?___flmul+2,ADC_TempConversion@val+2
 14483  003854  C077  F0AB         	movff	?___flmul+3,ADC_TempConversion@val+3
 14484                           
 14485                           ;adc.c: 142: temp = (uint8_t) val;
 14486  003858  C0A8  F060         	movff	ADC_TempConversion@val,___fltol@f1
 14487  00385C  C0A9  F061         	movff	ADC_TempConversion@val+1,___fltol@f1+1
 14488  003860  C0AA  F062         	movff	ADC_TempConversion@val+2,___fltol@f1+2
 14489  003864  C0AB  F063         	movff	ADC_TempConversion@val+3,___fltol@f1+3
 14490  003868  EC01  F01E         	call	___fltol	;wreg free
 14491  00386C  0100               	movlb	0	; () banked
 14492  00386E  5160               	movf	?___fltol& (0+255),w,b
 14493  003870  6FA7               	movwf	ADC_TempConversion@temp& (0+255),b
 14494                           
 14495                           ; BSR set to: 0
 14496                           ;adc.c: 144: return temp;
 14497  003872  51A7               	movf	ADC_TempConversion@temp& (0+255),w,b
 14498  003874  0012               	return	
 14499  003876                     __end_of_ADC_TempConversion:
 14500                           	opt stack 0
 14501                           tblptru	equ	0xFF8
 14502                           tblptrh	equ	0xFF7
 14503                           tblptrl	equ	0xFF6
 14504                           tablat	equ	0xFF5
 14505                           prodh	equ	0xFF4
 14506                           prodl	equ	0xFF3
 14507                           intcon	equ	0xFF2
 14508                           intcon3	equ	0xFF0
 14509                           postinc0	equ	0xFEE
 14510                           wreg	equ	0xFE8
 14511                           indf1	equ	0xFE7
 14512                           postdec1	equ	0xFE5
 14513                           fsr1h	equ	0xFE2
 14514                           fsr1l	equ	0xFE1
 14515                           indf2	equ	0xFDF
 14516                           fsr2h	equ	0xFDA
 14517                           fsr2l	equ	0xFD9
 14518                           status	equ	0xFD8
 14519                           
 14520 ;; *************** function ___xxtofl *****************
 14521 ;; Defined at:
 14522 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 14523 ;; Parameters:    Size  Location     Type
 14524 ;;  sign            1    wreg     unsigned char 
 14525 ;;  val             4    0[BANK0 ] long 
 14526 ;; Auto vars:     Size  Location     Type
 14527 ;;  sign            1    8[BANK0 ] unsigned char 
 14528 ;;  arg             4   10[BANK0 ] unsigned long 
 14529 ;;  exp             1    9[BANK0 ] unsigned char 
 14530 ;; Return value:  Size  Location     Type
 14531 ;;                  4    0[BANK0 ] unsigned char 
 14532 ;; Registers used:
 14533 ;;		wreg, status,2, status,0
 14534 ;; Tracked objects:
 14535 ;;		On entry : 0/0
 14536 ;;		On exit  : 0/0
 14537 ;;		Unchanged: 0/0
 14538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14539 ;;      Params:         0       4       0       0       0       0       0       0       0
 14540 ;;      Locals:         0       6       0       0       0       0       0       0       0
 14541 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14542 ;;      Totals:         0      14       0       0       0       0       0       0       0
 14543 ;;Total ram usage:       14 bytes
 14544 ;; Hardware stack levels used:    1
 14545 ;; Hardware stack levels required when called:   11
 14546 ;; This function calls:
 14547 ;;		Nothing
 14548 ;; This function is called by:
 14549 ;;		_ADC_TempConversion
 14550 ;; This function uses a non-reentrant model
 14551 ;;
 14552                           
 14553                           	psect	text46
 14554  0028DE                     __ptext46:
 14555                           	opt stack 0
 14556  0028DE                     ___xxtofl:
 14557                           	opt stack 16
 14558                           
 14559                           ; BSR set to: 0
 14560                           ;incstack = 0
 14561                           ;___xxtofl@sign stored from wreg
 14562  0028DE  0100               	movlb	0	; () banked
 14563  0028E0  6F68               	movwf	___xxtofl@sign& (0+255),b
 14564  0028E2  0100               	movlb	0	; () banked
 14565  0028E4  5168               	movf	___xxtofl@sign& (0+255),w,b
 14566  0028E6  A4D8               	btfss	status,2,c
 14567                           
 14568                           ; BSR set to: 0
 14569  0028E8  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 14570  0028EA  D01A               	goto	l2823
 14571                           
 14572                           ; BSR set to: 0
 14573  0028EC  C060  F064         	movff	___xxtofl@val,??___xxtofl
 14574  0028F0  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 14575  0028F4  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 14576  0028F8  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 14577  0028FC  1F64               	comf	??___xxtofl& (0+255),f,b
 14578  0028FE  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 14579  002900  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 14580  002902  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 14581  002904  2B64               	incf	??___xxtofl& (0+255),f,b
 14582  002906  0E00               	movlw	0
 14583  002908  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 14584  00290A  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 14585  00290C  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 14586  00290E  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 14587  002912  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 14588  002916  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 14589  00291A  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 14590  00291E  D008               	goto	l2824
 14591  002920                     l2823:
 14592                           
 14593                           ; BSR set to: 0
 14594  002920  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 14595  002924  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 14596  002928  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 14597  00292C  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 14598  002930                     l2824:
 14599                           
 14600                           ; BSR set to: 0
 14601                           
 14602                           ; BSR set to: 0
 14603  002930  5160               	movf	___xxtofl@val& (0+255),w,b
 14604  002932  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 14605  002934  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 14606  002936  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 14607  002938  A4D8               	btfss	status,2,c
 14608  00293A  D009               	goto	l2825
 14609                           
 14610                           ; BSR set to: 0
 14611  00293C  0E00               	movlw	0
 14612  00293E  6F60               	movwf	?___xxtofl& (0+255),b
 14613  002940  0E00               	movlw	0
 14614  002942  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 14615  002944  0E00               	movlw	0
 14616  002946  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 14617  002948  0E00               	movlw	0
 14618  00294A  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 14619                           
 14620                           ; BSR set to: 0
 14621  00294C  0012               	return	
 14622  00294E                     l2825:
 14623                           
 14624                           ; BSR set to: 0
 14625                           
 14626                           ; BSR set to: 0
 14627  00294E  0E96               	movlw	150
 14628  002950  6F69               	movwf	___xxtofl@exp& (0+255),b
 14629  002952  D006               	goto	l2827
 14630  002954                     
 14631                           ; BSR set to: 0
 14632                           
 14633                           ; BSR set to: 0
 14634  002954  2B69               	incf	___xxtofl@exp& (0+255),f,b
 14635  002956  90D8               	bcf	status,0,c
 14636  002958  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 14637  00295A  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 14638  00295C  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 14639  00295E  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 14640  002960                     l2827:
 14641                           
 14642                           ; BSR set to: 0
 14643                           
 14644                           ; BSR set to: 0
 14645  002960  0E00               	movlw	0
 14646  002962  156A               	andwf	___xxtofl@arg& (0+255),w,b
 14647  002964  6F64               	movwf	??___xxtofl& (0+255),b
 14648  002966  0E00               	movlw	0
 14649  002968  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 14650  00296A  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 14651  00296C  0E00               	movlw	0
 14652  00296E  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 14653  002970  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 14654  002972  0EFE               	movlw	254
 14655  002974  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 14656  002976  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 14657  002978  5164               	movf	??___xxtofl& (0+255),w,b
 14658  00297A  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 14659  00297C  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 14660  00297E  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 14661  002980  B4D8               	btfsc	status,2,c
 14662  002982  D00D               	goto	l2830
 14663  002984  D7E7               	goto	l2828
 14664  002986                     
 14665                           ; BSR set to: 0
 14666                           
 14667                           ; BSR set to: 0
 14668  002986  2B69               	incf	___xxtofl@exp& (0+255),f,b
 14669                           
 14670                           ; BSR set to: 0
 14671  002988  0E01               	movlw	1
 14672  00298A  276A               	addwf	___xxtofl@arg& (0+255),f,b
 14673  00298C  0E00               	movlw	0
 14674  00298E  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 14675  002990  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 14676  002992  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 14677                           
 14678                           ; BSR set to: 0
 14679  002994  90D8               	bcf	status,0,c
 14680  002996  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 14681  002998  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 14682  00299A  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 14683  00299C  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 14684  00299E                     l2830:
 14685                           
 14686                           ; BSR set to: 0
 14687  00299E  0E00               	movlw	0
 14688  0029A0  156A               	andwf	___xxtofl@arg& (0+255),w,b
 14689  0029A2  6F64               	movwf	??___xxtofl& (0+255),b
 14690  0029A4  0E00               	movlw	0
 14691  0029A6  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 14692  0029A8  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 14693  0029AA  0E00               	movlw	0
 14694  0029AC  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 14695  0029AE  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 14696  0029B0  0EFF               	movlw	255
 14697  0029B2  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 14698  0029B4  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 14699  0029B6  5164               	movf	??___xxtofl& (0+255),w,b
 14700  0029B8  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 14701  0029BA  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 14702  0029BC  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 14703  0029BE  B4D8               	btfsc	status,2,c
 14704  0029C0  D007               	goto	l2833
 14705  0029C2  D7E1               	goto	l2831
 14706  0029C4                     
 14707                           ; BSR set to: 0
 14708                           
 14709                           ; BSR set to: 0
 14710  0029C4  0769               	decf	___xxtofl@exp& (0+255),f,b
 14711  0029C6  90D8               	bcf	status,0,c
 14712  0029C8  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 14713  0029CA  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 14714  0029CC  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 14715  0029CE  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 14716  0029D0                     l2833:
 14717                           
 14718                           ; BSR set to: 0
 14719                           
 14720                           ; BSR set to: 0
 14721  0029D0  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 14722  0029D2  D003               	goto	u7900
 14723                           
 14724                           ; BSR set to: 0
 14725  0029D4  0E02               	movlw	2
 14726  0029D6  6169               	cpfslt	___xxtofl@exp& (0+255),b
 14727  0029D8  D7F5               	goto	l2834
 14728  0029DA                     u7900:
 14729                           
 14730                           ; BSR set to: 0
 14731                           
 14732                           ; BSR set to: 0
 14733  0029DA  B169               	btfsc	___xxtofl@exp& (0+255),0,b
 14734  0029DC  D008               	goto	l2838
 14735                           
 14736                           ; BSR set to: 0
 14737  0029DE  0EFF               	movlw	255
 14738  0029E0  176A               	andwf	___xxtofl@arg& (0+255),f,b
 14739  0029E2  0EFF               	movlw	255
 14740  0029E4  176B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 14741  0029E6  0E7F               	movlw	127
 14742  0029E8  176C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 14743  0029EA  0EFF               	movlw	255
 14744  0029EC  176D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 14745  0029EE                     l2838:
 14746                           
 14747                           ; BSR set to: 0
 14748  0029EE  90D8               	bcf	status,0,c
 14749  0029F0  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 14750  0029F2  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 14751  0029F6  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 14752  0029F8  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 14753  0029FA  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 14754  0029FC  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 14755  002A00  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 14756  002A02  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 14757  002A04  6B64               	clrf	??___xxtofl& (0+255),b
 14758  002A06  5164               	movf	??___xxtofl& (0+255),w,b
 14759  002A08  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 14760  002A0A  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 14761  002A0C  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 14762  002A0E  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 14763  002A10  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 14764  002A12  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 14765  002A14  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 14766                           
 14767                           ; BSR set to: 0
 14768  002A16  5168               	movf	___xxtofl@sign& (0+255),w,b
 14769  002A18  A4D8               	btfss	status,2,c
 14770                           
 14771                           ; BSR set to: 0
 14772  002A1A  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 14773  002A1C  D001               	goto	l2839
 14774                           
 14775                           ; BSR set to: 0
 14776  002A1E  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 14777  002A20                     l2839:
 14778                           
 14779                           ; BSR set to: 0
 14780                           
 14781                           ; BSR set to: 0
 14782  002A20  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 14783  002A24  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 14784  002A28  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 14785  002A2C  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 14786  002A30  0012               	return	
 14787  002A32                     __end_of___xxtofl:
 14788                           	opt stack 0
 14789                           tblptru	equ	0xFF8
 14790                           tblptrh	equ	0xFF7
 14791                           tblptrl	equ	0xFF6
 14792                           tablat	equ	0xFF5
 14793                           prodh	equ	0xFF4
 14794                           prodl	equ	0xFF3
 14795                           intcon	equ	0xFF2
 14796                           intcon3	equ	0xFF0
 14797                           postinc0	equ	0xFEE
 14798                           wreg	equ	0xFE8
 14799                           indf1	equ	0xFE7
 14800                           postdec1	equ	0xFE5
 14801                           fsr1h	equ	0xFE2
 14802                           fsr1l	equ	0xFE1
 14803                           indf2	equ	0xFDF
 14804                           fsr2h	equ	0xFDA
 14805                           fsr2l	equ	0xFD9
 14806                           status	equ	0xFD8
 14807                           
 14808 ;; *************** function ___fltol *****************
 14809 ;; Defined at:
 14810 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 14811 ;; Parameters:    Size  Location     Type
 14812 ;;  f1              4    0[BANK0 ] unsigned char 
 14813 ;; Auto vars:     Size  Location     Type
 14814 ;;  exp1            1    9[BANK0 ] unsigned char 
 14815 ;;  sign1           1    8[BANK0 ] unsigned char 
 14816 ;; Return value:  Size  Location     Type
 14817 ;;                  4    0[BANK0 ] long 
 14818 ;; Registers used:
 14819 ;;		wreg, status,2, status,0
 14820 ;; Tracked objects:
 14821 ;;		On entry : 0/0
 14822 ;;		On exit  : 0/0
 14823 ;;		Unchanged: 0/0
 14824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14825 ;;      Params:         0       4       0       0       0       0       0       0       0
 14826 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14827 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14828 ;;      Totals:         0      10       0       0       0       0       0       0       0
 14829 ;;Total ram usage:       10 bytes
 14830 ;; Hardware stack levels used:    1
 14831 ;; Hardware stack levels required when called:   11
 14832 ;; This function calls:
 14833 ;;		Nothing
 14834 ;; This function is called by:
 14835 ;;		_ADC_TempConversion
 14836 ;; This function uses a non-reentrant model
 14837 ;;
 14838                           
 14839                           	psect	text47
 14840  003C02                     __ptext47:
 14841                           	opt stack 0
 14842  003C02                     ___fltol:
 14843                           	opt stack 16
 14844                           
 14845                           ; BSR set to: 0
 14846                           ;incstack = 0
 14847  003C02  0100               	movlb	0	; () banked
 14848  003C04  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 14849  003C06  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 14850  003C08  6F69               	movwf	___fltol@exp1& (0+255),b
 14851  003C0A  5169               	movf	___fltol@exp1& (0+255),w,b
 14852  003C0C  A4D8               	btfss	status,2,c
 14853  003C0E  D009               	goto	l2476
 14854                           
 14855                           ; BSR set to: 0
 14856  003C10  0E00               	movlw	0
 14857  003C12  6F60               	movwf	?___fltol& (0+255),b
 14858  003C14  0E00               	movlw	0
 14859  003C16  6F61               	movwf	(?___fltol+1)& (0+255),b
 14860  003C18  0E00               	movlw	0
 14861  003C1A  6F62               	movwf	(?___fltol+2)& (0+255),b
 14862  003C1C  0E00               	movlw	0
 14863  003C1E  6F63               	movwf	(?___fltol+3)& (0+255),b
 14864                           
 14865                           ; BSR set to: 0
 14866  003C20  0012               	return	
 14867  003C22                     l2476:
 14868                           
 14869                           ; BSR set to: 0
 14870                           
 14871                           ; BSR set to: 0
 14872  003C22  C060  F064         	movff	___fltol@f1,??___fltol
 14873  003C26  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 14874  003C2A  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 14875  003C2E  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 14876  003C32  0E20               	movlw	32
 14877  003C34  D005               	goto	u7750
 14878  003C36                     u7755:
 14879  003C36  90D8               	bcf	status,0,c
 14880  003C38  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 14881  003C3A  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 14882  003C3C  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 14883  003C3E  3364               	rrcf	??___fltol& (0+255),f,b
 14884  003C40                     u7750:
 14885  003C40  2EE8               	decfsz	wreg,f,c
 14886  003C42  D7F9               	goto	u7755
 14887  003C44  5164               	movf	??___fltol& (0+255),w,b
 14888  003C46  6F68               	movwf	___fltol@sign1& (0+255),b
 14889                           
 14890                           ; BSR set to: 0
 14891  003C48  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 14892                           
 14893                           ; BSR set to: 0
 14894  003C4A  0EFF               	movlw	255
 14895  003C4C  1760               	andwf	___fltol@f1& (0+255),f,b
 14896  003C4E  0EFF               	movlw	255
 14897  003C50  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 14898  003C52  0EFF               	movlw	255
 14899  003C54  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 14900  003C56  0E00               	movlw	0
 14901  003C58  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 14902                           
 14903                           ; BSR set to: 0
 14904  003C5A  0E96               	movlw	150
 14905  003C5C  5F69               	subwf	___fltol@exp1& (0+255),f,b
 14906                           
 14907                           ; BSR set to: 0
 14908  003C5E  AF69               	btfss	___fltol@exp1& (0+255),7,b
 14909  003C60  D016               	goto	l2478
 14910                           
 14911                           ; BSR set to: 0
 14912  003C62  5169               	movf	___fltol@exp1& (0+255),w,b
 14913  003C64  0A80               	xorlw	128
 14914  003C66  0F97               	addlw	151
 14915  003C68  B0D8               	btfsc	status,0,c
 14916  003C6A  D009               	goto	l2479
 14917                           
 14918                           ; BSR set to: 0
 14919  003C6C  0E00               	movlw	0
 14920  003C6E  6F60               	movwf	?___fltol& (0+255),b
 14921  003C70  0E00               	movlw	0
 14922  003C72  6F61               	movwf	(?___fltol+1)& (0+255),b
 14923  003C74  0E00               	movlw	0
 14924  003C76  6F62               	movwf	(?___fltol+2)& (0+255),b
 14925  003C78  0E00               	movlw	0
 14926  003C7A  6F63               	movwf	(?___fltol+3)& (0+255),b
 14927                           
 14928                           ; BSR set to: 0
 14929  003C7C  0012               	return	
 14930  003C7E                     l2479:
 14931                           
 14932                           ; BSR set to: 0
 14933                           
 14934                           ; BSR set to: 0
 14935                           
 14936                           ; BSR set to: 0
 14937  003C7E  90D8               	bcf	status,0,c
 14938  003C80  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 14939  003C82  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 14940  003C84  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 14941  003C86  3360               	rrcf	___fltol@f1& (0+255),f,b
 14942                           
 14943                           ; BSR set to: 0
 14944  003C88  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 14945  003C8A  D7F9               	goto	l2479
 14946                           
 14947                           ; BSR set to: 0
 14948  003C8C  D015               	goto	u7790
 14949  003C8E                     l2478:
 14950                           
 14951                           ; BSR set to: 0
 14952                           
 14953                           ; BSR set to: 0
 14954  003C8E  0E1F               	movlw	31
 14955  003C90  6569               	cpfsgt	___fltol@exp1& (0+255),b
 14956  003C92  D00F               	goto	l2484
 14957                           
 14958                           ; BSR set to: 0
 14959  003C94  0E00               	movlw	0
 14960  003C96  6F60               	movwf	?___fltol& (0+255),b
 14961  003C98  0E00               	movlw	0
 14962  003C9A  6F61               	movwf	(?___fltol+1)& (0+255),b
 14963  003C9C  0E00               	movlw	0
 14964  003C9E  6F62               	movwf	(?___fltol+2)& (0+255),b
 14965  003CA0  0E00               	movlw	0
 14966  003CA2  6F63               	movwf	(?___fltol+3)& (0+255),b
 14967                           
 14968                           ; BSR set to: 0
 14969  003CA4  0012               	return	
 14970  003CA6                     
 14971                           ; BSR set to: 0
 14972                           
 14973                           ; BSR set to: 0
 14974  003CA6  90D8               	bcf	status,0,c
 14975  003CA8  3760               	rlcf	___fltol@f1& (0+255),f,b
 14976  003CAA  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 14977  003CAC  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 14978  003CAE  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 14979  003CB0  0769               	decf	___fltol@exp1& (0+255),f,b
 14980  003CB2                     l2484:
 14981                           
 14982                           ; BSR set to: 0
 14983                           
 14984                           ; BSR set to: 0
 14985  003CB2  5169               	movf	___fltol@exp1& (0+255),w,b
 14986  003CB4  A4D8               	btfss	status,2,c
 14987  003CB6  D7F7               	goto	l2485
 14988  003CB8                     u7790:
 14989                           
 14990                           ; BSR set to: 0
 14991                           
 14992                           ; BSR set to: 0
 14993                           
 14994                           ; BSR set to: 0
 14995  003CB8  5168               	movf	___fltol@sign1& (0+255),w,b
 14996  003CBA  B4D8               	btfsc	status,2,c
 14997  003CBC  D008               	goto	l2487
 14998                           
 14999                           ; BSR set to: 0
 15000  003CBE  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 15001  003CC0  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 15002  003CC2  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 15003  003CC4  6D60               	negf	___fltol@f1& (0+255),b
 15004  003CC6  0E00               	movlw	0
 15005  003CC8  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 15006  003CCA  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 15007  003CCC  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 15008  003CCE                     l2487:
 15009                           
 15010                           ; BSR set to: 0
 15011                           
 15012                           ; BSR set to: 0
 15013  003CCE  C060  F060         	movff	___fltol@f1,?___fltol
 15014  003CD2  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 15015  003CD6  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 15016  003CDA  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 15017  003CDE  0012               	return	
 15018  003CE0                     __end_of___fltol:
 15019                           	opt stack 0
 15020                           tblptru	equ	0xFF8
 15021                           tblptrh	equ	0xFF7
 15022                           tblptrl	equ	0xFF6
 15023                           tablat	equ	0xFF5
 15024                           prodh	equ	0xFF4
 15025                           prodl	equ	0xFF3
 15026                           intcon	equ	0xFF2
 15027                           intcon3	equ	0xFF0
 15028                           postinc0	equ	0xFEE
 15029                           wreg	equ	0xFE8
 15030                           indf1	equ	0xFE7
 15031                           postdec1	equ	0xFE5
 15032                           fsr1h	equ	0xFE2
 15033                           fsr1l	equ	0xFE1
 15034                           indf2	equ	0xFDF
 15035                           fsr2h	equ	0xFDA
 15036                           fsr2l	equ	0xFD9
 15037                           status	equ	0xFD8
 15038                           
 15039 ;; *************** function ___flmul *****************
 15040 ;; Defined at:
 15041 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 15042 ;; Parameters:    Size  Location     Type
 15043 ;;  b               4   20[BANK0 ] long 
 15044 ;;  a               4   24[BANK0 ] long 
 15045 ;; Auto vars:     Size  Location     Type
 15046 ;;  prod            4   39[BANK0 ] struct .
 15047 ;;  grs             4   33[BANK0 ] unsigned long 
 15048 ;;  temp            2   43[BANK0 ] struct .
 15049 ;;  bexp            1   38[BANK0 ] unsigned char 
 15050 ;;  aexp            1   37[BANK0 ] unsigned char 
 15051 ;;  sign            1   32[BANK0 ] unsigned char 
 15052 ;; Return value:  Size  Location     Type
 15053 ;;                  4   20[BANK0 ] unsigned char 
 15054 ;; Registers used:
 15055 ;;		wreg, status,2, status,0, prodl, prodh
 15056 ;; Tracked objects:
 15057 ;;		On entry : 0/0
 15058 ;;		On exit  : 0/0
 15059 ;;		Unchanged: 0/0
 15060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15061 ;;      Params:         0       8       0       0       0       0       0       0       0
 15062 ;;      Locals:         0      13       0       0       0       0       0       0       0
 15063 ;;      Temps:          0       4       0       0       0       0       0       0       0
 15064 ;;      Totals:         0      25       0       0       0       0       0       0       0
 15065 ;;Total ram usage:       25 bytes
 15066 ;; Hardware stack levels used:    1
 15067 ;; Hardware stack levels required when called:   11
 15068 ;; This function calls:
 15069 ;;		Nothing
 15070 ;; This function is called by:
 15071 ;;		_ADC_TempConversion
 15072 ;; This function uses a non-reentrant model
 15073 ;;
 15074                           
 15075                           	psect	text48
 15076  001968                     __ptext48:
 15077                           	opt stack 0
 15078  001968                     ___flmul:
 15079                           	opt stack 16
 15080                           
 15081                           ; BSR set to: 0
 15082                           ;incstack = 0
 15083  001968  0100               	movlb	0	; () banked
 15084  00196A  5177               	movf	(___flmul@b+3)& (0+255),w,b
 15085  00196C  0B80               	andlw	128
 15086  00196E  6F80               	movwf	___flmul@sign& (0+255),b
 15087  001970  5177               	movf	(___flmul@b+3)& (0+255),w,b
 15088  001972  2577               	addwf	(___flmul@b+3)& (0+255),w,b
 15089  001974  6F86               	movwf	___flmul@bexp& (0+255),b
 15090                           
 15091                           ; BSR set to: 0
 15092  001976  BF76               	btfsc	(___flmul@b+2)& (0+255),7,b
 15093                           
 15094                           ; BSR set to: 0
 15095  001978  8186               	bsf	___flmul@bexp& (0+255),0,b
 15096                           
 15097                           ; BSR set to: 0
 15098                           
 15099                           ; BSR set to: 0
 15100  00197A  5186               	movf	___flmul@bexp& (0+255),w,b
 15101  00197C  B4D8               	btfsc	status,2,c
 15102  00197E  D00D               	goto	l2778
 15103                           
 15104                           ; BSR set to: 0
 15105  001980  2986               	incf	___flmul@bexp& (0+255),w,b
 15106  001982  A4D8               	btfss	status,2,c
 15107  001984  D008               	goto	l2779
 15108                           
 15109                           ; BSR set to: 0
 15110  001986  0E00               	movlw	0
 15111  001988  6F74               	movwf	___flmul@b& (0+255),b
 15112  00198A  0E00               	movlw	0
 15113  00198C  6F75               	movwf	(___flmul@b+1)& (0+255),b
 15114  00198E  0E00               	movlw	0
 15115  001990  6F76               	movwf	(___flmul@b+2)& (0+255),b
 15116  001992  0E00               	movlw	0
 15117  001994  6F77               	movwf	(___flmul@b+3)& (0+255),b
 15118  001996                     l2779:
 15119                           
 15120                           ; BSR set to: 0
 15121                           
 15122                           ; BSR set to: 0
 15123  001996  8F76               	bsf	(___flmul@b+2)& (0+255),7,b
 15124  001998  D008               	goto	l2780
 15125  00199A                     l2778:
 15126                           
 15127                           ; BSR set to: 0
 15128                           
 15129                           ; BSR set to: 0
 15130  00199A  0E00               	movlw	0
 15131  00199C  6F74               	movwf	___flmul@b& (0+255),b
 15132  00199E  0E00               	movlw	0
 15133  0019A0  6F75               	movwf	(___flmul@b+1)& (0+255),b
 15134  0019A2  0E00               	movlw	0
 15135  0019A4  6F76               	movwf	(___flmul@b+2)& (0+255),b
 15136  0019A6  0E00               	movlw	0
 15137  0019A8  6F77               	movwf	(___flmul@b+3)& (0+255),b
 15138  0019AA                     l2780:
 15139                           
 15140                           ; BSR set to: 0
 15141                           
 15142                           ; BSR set to: 0
 15143  0019AA  517B               	movf	(___flmul@a+3)& (0+255),w,b
 15144  0019AC  0B80               	andlw	128
 15145  0019AE  1B80               	xorwf	___flmul@sign& (0+255),f,b
 15146                           
 15147                           ; BSR set to: 0
 15148  0019B0  517B               	movf	(___flmul@a+3)& (0+255),w,b
 15149  0019B2  257B               	addwf	(___flmul@a+3)& (0+255),w,b
 15150  0019B4  6F85               	movwf	___flmul@aexp& (0+255),b
 15151                           
 15152                           ; BSR set to: 0
 15153  0019B6  BF7A               	btfsc	(___flmul@a+2)& (0+255),7,b
 15154                           
 15155                           ; BSR set to: 0
 15156  0019B8  8185               	bsf	___flmul@aexp& (0+255),0,b
 15157                           
 15158                           ; BSR set to: 0
 15159                           
 15160                           ; BSR set to: 0
 15161  0019BA  5185               	movf	___flmul@aexp& (0+255),w,b
 15162  0019BC  B4D8               	btfsc	status,2,c
 15163  0019BE  D00D               	goto	l2782
 15164                           
 15165                           ; BSR set to: 0
 15166  0019C0  2985               	incf	___flmul@aexp& (0+255),w,b
 15167  0019C2  A4D8               	btfss	status,2,c
 15168  0019C4  D008               	goto	l2783
 15169                           
 15170                           ; BSR set to: 0
 15171  0019C6  0E00               	movlw	0
 15172  0019C8  6F78               	movwf	___flmul@a& (0+255),b
 15173  0019CA  0E00               	movlw	0
 15174  0019CC  6F79               	movwf	(___flmul@a+1)& (0+255),b
 15175  0019CE  0E00               	movlw	0
 15176  0019D0  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 15177  0019D2  0E00               	movlw	0
 15178  0019D4  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 15179  0019D6                     l2783:
 15180                           
 15181                           ; BSR set to: 0
 15182                           
 15183                           ; BSR set to: 0
 15184  0019D6  8F7A               	bsf	(___flmul@a+2)& (0+255),7,b
 15185  0019D8  D008               	goto	l2784
 15186  0019DA                     l2782:
 15187                           
 15188                           ; BSR set to: 0
 15189                           
 15190                           ; BSR set to: 0
 15191  0019DA  0E00               	movlw	0
 15192  0019DC  6F78               	movwf	___flmul@a& (0+255),b
 15193  0019DE  0E00               	movlw	0
 15194  0019E0  6F79               	movwf	(___flmul@a+1)& (0+255),b
 15195  0019E2  0E00               	movlw	0
 15196  0019E4  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 15197  0019E6  0E00               	movlw	0
 15198  0019E8  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 15199  0019EA                     l2784:
 15200                           
 15201                           ; BSR set to: 0
 15202  0019EA  5185               	movf	___flmul@aexp& (0+255),w,b
 15203  0019EC  B4D8               	btfsc	status,2,c
 15204  0019EE  D003               	goto	u7560
 15205                           
 15206                           ; BSR set to: 0
 15207  0019F0  5186               	movf	___flmul@bexp& (0+255),w,b
 15208  0019F2  A4D8               	btfss	status,2,c
 15209  0019F4  D009               	goto	l2785
 15210  0019F6                     u7560:
 15211                           
 15212                           ; BSR set to: 0
 15213                           
 15214                           ; BSR set to: 0
 15215  0019F6  0E00               	movlw	0
 15216  0019F8  6F74               	movwf	?___flmul& (0+255),b
 15217  0019FA  0E00               	movlw	0
 15218  0019FC  6F75               	movwf	(?___flmul+1)& (0+255),b
 15219  0019FE  0E00               	movlw	0
 15220  001A00  6F76               	movwf	(?___flmul+2)& (0+255),b
 15221  001A02  0E00               	movlw	0
 15222  001A04  6F77               	movwf	(?___flmul+3)& (0+255),b
 15223                           
 15224                           ; BSR set to: 0
 15225  001A06  0012               	return	
 15226  001A08                     l2785:
 15227                           
 15228                           ; BSR set to: 0
 15229                           
 15230                           ; BSR set to: 0
 15231  001A08  517A               	movf	(___flmul@a+2)& (0+255),w,b
 15232  001A0A  0374               	mulwf	___flmul@b& (0+255),b
 15233  001A0C  CFF3 F08B          	movff	prodl,___flmul@temp
 15234  001A10  CFF4 F08C          	movff	prodh,___flmul@temp+1
 15235                           
 15236                           ; BSR set to: 0
 15237  001A14  518B               	movf	___flmul@temp& (0+255),w,b
 15238  001A16  6F81               	movwf	___flmul@grs& (0+255),b
 15239  001A18  6B82               	clrf	(___flmul@grs+1)& (0+255),b
 15240  001A1A  6B83               	clrf	(___flmul@grs+2)& (0+255),b
 15241  001A1C  6B84               	clrf	(___flmul@grs+3)& (0+255),b
 15242                           
 15243                           ; BSR set to: 0
 15244  001A1E  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 15245  001A20  6F87               	movwf	___flmul@prod& (0+255),b
 15246  001A22  6B88               	clrf	(___flmul@prod+1)& (0+255),b
 15247  001A24  6B89               	clrf	(___flmul@prod+2)& (0+255),b
 15248  001A26  6B8A               	clrf	(___flmul@prod+3)& (0+255),b
 15249  001A28  5179               	movf	(___flmul@a+1)& (0+255),w,b
 15250  001A2A  0375               	mulwf	(___flmul@b+1)& (0+255),b
 15251  001A2C  CFF3 F08B          	movff	prodl,___flmul@temp
 15252  001A30  CFF4 F08C          	movff	prodh,___flmul@temp+1
 15253                           
 15254                           ; BSR set to: 0
 15255  001A34  518B               	movf	___flmul@temp& (0+255),w,b
 15256  001A36  2781               	addwf	___flmul@grs& (0+255),f,b
 15257  001A38  0E00               	movlw	0
 15258  001A3A  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15259  001A3C  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15260  001A3E  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15261                           
 15262                           ; BSR set to: 0
 15263  001A40  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 15264  001A42  2787               	addwf	___flmul@prod& (0+255),f,b
 15265  001A44  0E00               	movlw	0
 15266  001A46  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15267  001A48  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15268  001A4A  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15269  001A4C  5178               	movf	___flmul@a& (0+255),w,b
 15270  001A4E  0376               	mulwf	(___flmul@b+2)& (0+255),b
 15271  001A50  CFF3 F08B          	movff	prodl,___flmul@temp
 15272  001A54  CFF4 F08C          	movff	prodh,___flmul@temp+1
 15273                           
 15274                           ; BSR set to: 0
 15275  001A58  518B               	movf	___flmul@temp& (0+255),w,b
 15276  001A5A  2781               	addwf	___flmul@grs& (0+255),f,b
 15277  001A5C  0E00               	movlw	0
 15278  001A5E  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15279  001A60  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15280  001A62  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15281                           
 15282                           ; BSR set to: 0
 15283  001A64  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 15284  001A66  2787               	addwf	___flmul@prod& (0+255),f,b
 15285  001A68  0E00               	movlw	0
 15286  001A6A  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15287  001A6C  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15288  001A6E  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15289                           
 15290                           ; BSR set to: 0
 15291  001A70  C083  F084         	movff	___flmul@grs+2,___flmul@grs+3
 15292  001A74  C082  F083         	movff	___flmul@grs+1,___flmul@grs+2
 15293  001A78  C081  F082         	movff	___flmul@grs,___flmul@grs+1
 15294  001A7C  6B81               	clrf	___flmul@grs& (0+255),b
 15295                           
 15296                           ; BSR set to: 0
 15297  001A7E  5178               	movf	___flmul@a& (0+255),w,b
 15298  001A80  0375               	mulwf	(___flmul@b+1)& (0+255),b
 15299  001A82  CFF3 F08B          	movff	prodl,___flmul@temp
 15300  001A86  CFF4 F08C          	movff	prodh,___flmul@temp+1
 15301                           
 15302                           ; BSR set to: 0
 15303  001A8A  518B               	movf	___flmul@temp& (0+255),w,b
 15304  001A8C  2781               	addwf	___flmul@grs& (0+255),f,b
 15305  001A8E  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 15306  001A90  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15307  001A92  0E00               	movlw	0
 15308  001A94  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15309  001A96  0E00               	movlw	0
 15310  001A98  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15311                           
 15312                           ; BSR set to: 0
 15313  001A9A  5179               	movf	(___flmul@a+1)& (0+255),w,b
 15314  001A9C  0374               	mulwf	___flmul@b& (0+255),b
 15315  001A9E  CFF3 F08B          	movff	prodl,___flmul@temp
 15316  001AA2  CFF4 F08C          	movff	prodh,___flmul@temp+1
 15317                           
 15318                           ; BSR set to: 0
 15319  001AA6  518B               	movf	___flmul@temp& (0+255),w,b
 15320  001AA8  2781               	addwf	___flmul@grs& (0+255),f,b
 15321  001AAA  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 15322  001AAC  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15323  001AAE  0E00               	movlw	0
 15324  001AB0  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15325  001AB2  0E00               	movlw	0
 15326  001AB4  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15327                           
 15328                           ; BSR set to: 0
 15329  001AB6  C083  F084         	movff	___flmul@grs+2,___flmul@grs+3
 15330  001ABA  C082  F083         	movff	___flmul@grs+1,___flmul@grs+2
 15331  001ABE  C081  F082         	movff	___flmul@grs,___flmul@grs+1
 15332  001AC2  6B81               	clrf	___flmul@grs& (0+255),b
 15333  001AC4  5178               	movf	___flmul@a& (0+255),w,b
 15334  001AC6  0374               	mulwf	___flmul@b& (0+255),b
 15335  001AC8  CFF3 F08B          	movff	prodl,___flmul@temp
 15336  001ACC  CFF4 F08C          	movff	prodh,___flmul@temp+1
 15337                           
 15338                           ; BSR set to: 0
 15339  001AD0  518B               	movf	___flmul@temp& (0+255),w,b
 15340  001AD2  2781               	addwf	___flmul@grs& (0+255),f,b
 15341  001AD4  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 15342  001AD6  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15343  001AD8  0E00               	movlw	0
 15344  001ADA  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15345  001ADC  0E00               	movlw	0
 15346  001ADE  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15347                           
 15348                           ; BSR set to: 0
 15349  001AE0  517A               	movf	(___flmul@a+2)& (0+255),w,b
 15350  001AE2  0375               	mulwf	(___flmul@b+1)& (0+255),b
 15351  001AE4  CFF3 F08B          	movff	prodl,___flmul@temp
 15352  001AE8  CFF4 F08C          	movff	prodh,___flmul@temp+1
 15353  001AEC  518B               	movf	___flmul@temp& (0+255),w,b
 15354  001AEE  2787               	addwf	___flmul@prod& (0+255),f,b
 15355  001AF0  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 15356  001AF2  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15357  001AF4  0E00               	movlw	0
 15358  001AF6  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15359  001AF8  0E00               	movlw	0
 15360  001AFA  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15361                           
 15362                           ; BSR set to: 0
 15363  001AFC  5179               	movf	(___flmul@a+1)& (0+255),w,b
 15364  001AFE  0376               	mulwf	(___flmul@b+2)& (0+255),b
 15365  001B00  CFF3 F08B          	movff	prodl,___flmul@temp
 15366  001B04  CFF4 F08C          	movff	prodh,___flmul@temp+1
 15367                           
 15368                           ; BSR set to: 0
 15369  001B08  518B               	movf	___flmul@temp& (0+255),w,b
 15370  001B0A  2787               	addwf	___flmul@prod& (0+255),f,b
 15371  001B0C  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 15372  001B0E  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15373  001B10  0E00               	movlw	0
 15374  001B12  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15375  001B14  0E00               	movlw	0
 15376  001B16  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15377  001B18  517A               	movf	(___flmul@a+2)& (0+255),w,b
 15378  001B1A  0376               	mulwf	(___flmul@b+2)& (0+255),b
 15379  001B1C  CFF3 F08B          	movff	prodl,___flmul@temp
 15380  001B20  CFF4 F08C          	movff	prodh,___flmul@temp+1
 15381                           
 15382                           ; BSR set to: 0
 15383  001B24  518B               	movf	___flmul@temp& (0+255),w,b
 15384  001B26  6F7C               	movwf	??___flmul& (0+255),b
 15385  001B28  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 15386  001B2A  6F7D               	movwf	(??___flmul+1)& (0+255),b
 15387  001B2C  6B7E               	clrf	(??___flmul+2)& (0+255),b
 15388  001B2E  6B7F               	clrf	(??___flmul+3)& (0+255),b
 15389  001B30  C07E  F07F         	movff	??___flmul+2,??___flmul+3
 15390  001B34  C07D  F07E         	movff	??___flmul+1,??___flmul+2
 15391  001B38  C07C  F07D         	movff	??___flmul,??___flmul+1
 15392  001B3C  6B7C               	clrf	??___flmul& (0+255),b
 15393  001B3E  517C               	movf	??___flmul& (0+255),w,b
 15394  001B40  2787               	addwf	___flmul@prod& (0+255),f,b
 15395  001B42  517D               	movf	(??___flmul+1)& (0+255),w,b
 15396  001B44  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15397  001B46  517E               	movf	(??___flmul+2)& (0+255),w,b
 15398  001B48  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15399  001B4A  517F               	movf	(??___flmul+3)& (0+255),w,b
 15400  001B4C  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15401                           
 15402                           ; BSR set to: 0
 15403  001B4E  C081  F07C         	movff	___flmul@grs,??___flmul
 15404  001B52  C082  F07D         	movff	___flmul@grs+1,??___flmul+1
 15405  001B56  C083  F07E         	movff	___flmul@grs+2,??___flmul+2
 15406  001B5A  C084  F07F         	movff	___flmul@grs+3,??___flmul+3
 15407  001B5E  0E19               	movlw	25
 15408  001B60  D005               	goto	u7570
 15409  001B62                     u7575:
 15410  001B62  90D8               	bcf	status,0,c
 15411  001B64  337F               	rrcf	(??___flmul+3)& (0+255),f,b
 15412  001B66  337E               	rrcf	(??___flmul+2)& (0+255),f,b
 15413  001B68  337D               	rrcf	(??___flmul+1)& (0+255),f,b
 15414  001B6A  337C               	rrcf	??___flmul& (0+255),f,b
 15415  001B6C                     u7570:
 15416  001B6C  2EE8               	decfsz	wreg,f,c
 15417  001B6E  D7F9               	goto	u7575
 15418  001B70  517C               	movf	??___flmul& (0+255),w,b
 15419  001B72  2787               	addwf	___flmul@prod& (0+255),f,b
 15420  001B74  517D               	movf	(??___flmul+1)& (0+255),w,b
 15421  001B76  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15422  001B78  517E               	movf	(??___flmul+2)& (0+255),w,b
 15423  001B7A  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15424  001B7C  517F               	movf	(??___flmul+3)& (0+255),w,b
 15425  001B7E  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15426                           
 15427                           ; BSR set to: 0
 15428  001B80  C083  F084         	movff	___flmul@grs+2,___flmul@grs+3
 15429  001B84  C082  F083         	movff	___flmul@grs+1,___flmul@grs+2
 15430  001B88  C081  F082         	movff	___flmul@grs,___flmul@grs+1
 15431  001B8C  6B81               	clrf	___flmul@grs& (0+255),b
 15432                           
 15433                           ; BSR set to: 0
 15434  001B8E  5185               	movf	___flmul@aexp& (0+255),w,b
 15435  001B90  C086  F07C         	movff	___flmul@bexp,??___flmul
 15436  001B94  6B7D               	clrf	(??___flmul+1)& (0+255),b
 15437  001B96  277C               	addwf	??___flmul& (0+255),f,b
 15438  001B98  0E00               	movlw	0
 15439  001B9A  237D               	addwfc	(??___flmul+1)& (0+255),f,b
 15440  001B9C  0E82               	movlw	130
 15441  001B9E  257C               	addwf	??___flmul& (0+255),w,b
 15442  001BA0  6F8B               	movwf	___flmul@temp& (0+255),b
 15443  001BA2  0EFF               	movlw	255
 15444  001BA4  217D               	addwfc	(??___flmul+1)& (0+255),w,b
 15445  001BA6  6F8C               	movwf	(___flmul@temp+1)& (0+255),b
 15446  001BA8  D00F               	goto	l2789
 15447  001BAA                     
 15448                           ; BSR set to: 0
 15449                           
 15450                           ; BSR set to: 0
 15451  001BAA  90D8               	bcf	status,0,c
 15452  001BAC  3787               	rlcf	___flmul@prod& (0+255),f,b
 15453  001BAE  3788               	rlcf	(___flmul@prod+1)& (0+255),f,b
 15454  001BB0  3789               	rlcf	(___flmul@prod+2)& (0+255),f,b
 15455  001BB2  378A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 15456                           
 15457                           ; BSR set to: 0
 15458  001BB4  BF84               	btfsc	(___flmul@grs+3)& (0+255),7,b
 15459                           
 15460                           ; BSR set to: 0
 15461  001BB6  8187               	bsf	___flmul@prod& (0+255),0,b
 15462                           
 15463                           ; BSR set to: 0
 15464  001BB8  90D8               	bcf	status,0,c
 15465  001BBA  3781               	rlcf	___flmul@grs& (0+255),f,b
 15466  001BBC  3782               	rlcf	(___flmul@grs+1)& (0+255),f,b
 15467  001BBE  3783               	rlcf	(___flmul@grs+2)& (0+255),f,b
 15468  001BC0  3784               	rlcf	(___flmul@grs+3)& (0+255),f,b
 15469  001BC2  078B               	decf	___flmul@temp& (0+255),f,b
 15470  001BC4  A0D8               	btfss	status,0,c
 15471  001BC6  078C               	decf	(___flmul@temp+1)& (0+255),f,b
 15472  001BC8                     l2789:
 15473                           
 15474                           ; BSR set to: 0
 15475                           
 15476                           ; BSR set to: 0
 15477  001BC8  AF89               	btfss	(___flmul@prod+2)& (0+255),7,b
 15478  001BCA  D7EF               	goto	l2790
 15479                           
 15480                           ; BSR set to: 0
 15481                           
 15482                           ; BSR set to: 0
 15483  001BCC  0E00               	movlw	0
 15484  001BCE  6F85               	movwf	___flmul@aexp& (0+255),b
 15485                           
 15486                           ; BSR set to: 0
 15487  001BD0  AF84               	btfss	(___flmul@grs+3)& (0+255),7,b
 15488  001BD2  D016               	goto	l2796
 15489                           
 15490                           ; BSR set to: 0
 15491  001BD4  0EFF               	movlw	255
 15492  001BD6  1581               	andwf	___flmul@grs& (0+255),w,b
 15493  001BD8  6F7C               	movwf	??___flmul& (0+255),b
 15494  001BDA  0EFF               	movlw	255
 15495  001BDC  1582               	andwf	(___flmul@grs+1)& (0+255),w,b
 15496  001BDE  6F7D               	movwf	(??___flmul+1)& (0+255),b
 15497  001BE0  0EFF               	movlw	255
 15498  001BE2  1583               	andwf	(___flmul@grs+2)& (0+255),w,b
 15499  001BE4  6F7E               	movwf	(??___flmul+2)& (0+255),b
 15500  001BE6  0E7F               	movlw	127
 15501  001BE8  1584               	andwf	(___flmul@grs+3)& (0+255),w,b
 15502  001BEA  6F7F               	movwf	(??___flmul+3)& (0+255),b
 15503  001BEC  517C               	movf	??___flmul& (0+255),w,b
 15504  001BEE  117D               	iorwf	(??___flmul+1)& (0+255),w,b
 15505  001BF0  117E               	iorwf	(??___flmul+2)& (0+255),w,b
 15506  001BF2  117F               	iorwf	(??___flmul+3)& (0+255),w,b
 15507  001BF4  A4D8               	btfss	status,2,c
 15508  001BF6  D002               	goto	u7620
 15509                           
 15510                           ; BSR set to: 0
 15511                           
 15512                           ; BSR set to: 0
 15513  001BF8  A187               	btfss	___flmul@prod& (0+255),0,b
 15514  001BFA  D002               	goto	l2796
 15515  001BFC                     u7620:
 15516                           
 15517                           ; BSR set to: 0
 15518  001BFC  0E01               	movlw	1
 15519  001BFE  6F85               	movwf	___flmul@aexp& (0+255),b
 15520  001C00                     l2796:
 15521                           
 15522                           ; BSR set to: 0
 15523                           
 15524                           ; BSR set to: 0
 15525                           
 15526                           ; BSR set to: 0
 15527  001C00  5185               	movf	___flmul@aexp& (0+255),w,b
 15528  001C02  B4D8               	btfsc	status,2,c
 15529  001C04  D01F               	goto	l2798
 15530                           
 15531                           ; BSR set to: 0
 15532  001C06  0E01               	movlw	1
 15533  001C08  2787               	addwf	___flmul@prod& (0+255),f,b
 15534  001C0A  0E00               	movlw	0
 15535  001C0C  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15536  001C0E  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15537  001C10  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15538                           
 15539                           ; BSR set to: 0
 15540  001C12  A18A               	btfss	(___flmul@prod+3)& (0+255),0,b
 15541  001C14  D017               	goto	l2798
 15542                           
 15543                           ; BSR set to: 0
 15544  001C16  C087  F07C         	movff	___flmul@prod,??___flmul
 15545  001C1A  C088  F07D         	movff	___flmul@prod+1,??___flmul+1
 15546  001C1E  C089  F07E         	movff	___flmul@prod+2,??___flmul+2
 15547  001C22  C08A  F07F         	movff	___flmul@prod+3,??___flmul+3
 15548  001C26  357F               	rlcf	(??___flmul+3)& (0+255),w,b
 15549  001C28  337F               	rrcf	(??___flmul+3)& (0+255),f,b
 15550  001C2A  337E               	rrcf	(??___flmul+2)& (0+255),f,b
 15551  001C2C  337D               	rrcf	(??___flmul+1)& (0+255),f,b
 15552  001C2E  337C               	rrcf	??___flmul& (0+255),f,b
 15553  001C30  C07C  F087         	movff	??___flmul,___flmul@prod
 15554  001C34  C07D  F088         	movff	??___flmul+1,___flmul@prod+1
 15555  001C38  C07E  F089         	movff	??___flmul+2,___flmul@prod+2
 15556  001C3C  C07F  F08A         	movff	??___flmul+3,___flmul@prod+3
 15557                           
 15558                           ; BSR set to: 0
 15559  001C40  4B8B               	infsnz	___flmul@temp& (0+255),f,b
 15560  001C42  2B8C               	incf	(___flmul@temp+1)& (0+255),f,b
 15561  001C44                     l2798:
 15562                           
 15563                           ; BSR set to: 0
 15564                           
 15565                           ; BSR set to: 0
 15566                           
 15567                           ; BSR set to: 0
 15568  001C44  BF8C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 15569  001C46  D00D               	goto	l2799
 15570  001C48  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 15571  001C4A  E103               	bnz	u7650
 15572  001C4C  298B               	incf	___flmul@temp& (0+255),w,b
 15573  001C4E  A0D8               	btfss	status,0,c
 15574  001C50  D008               	goto	l2799
 15575  001C52                     u7650:
 15576                           
 15577                           ; BSR set to: 0
 15578  001C52  0E00               	movlw	0
 15579  001C54  6F87               	movwf	___flmul@prod& (0+255),b
 15580  001C56  0E00               	movlw	0
 15581  001C58  6F88               	movwf	(___flmul@prod+1)& (0+255),b
 15582  001C5A  0E80               	movlw	128
 15583  001C5C  6F89               	movwf	(___flmul@prod+2)& (0+255),b
 15584  001C5E  0E7F               	movlw	127
 15585  001C60  D020               	goto	L7
 15586  001C62                     l2799:
 15587                           
 15588                           ; BSR set to: 0
 15589                           
 15590                           ; BSR set to: 0
 15591  001C62  BF8C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 15592  001C64  D005               	goto	u7660
 15593  001C66  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 15594  001C68  E10E               	bnz	l2801
 15595  001C6A  058B               	decf	___flmul@temp& (0+255),w,b
 15596  001C6C  B0D8               	btfsc	status,0,c
 15597  001C6E  D00B               	goto	l2801
 15598  001C70                     u7660:
 15599                           
 15600                           ; BSR set to: 0
 15601  001C70  0E00               	movlw	0
 15602  001C72  6F87               	movwf	___flmul@prod& (0+255),b
 15603  001C74  0E00               	movlw	0
 15604  001C76  6F88               	movwf	(___flmul@prod+1)& (0+255),b
 15605  001C78  0E00               	movlw	0
 15606  001C7A  6F89               	movwf	(___flmul@prod+2)& (0+255),b
 15607  001C7C  0E00               	movlw	0
 15608  001C7E  6F8A               	movwf	(___flmul@prod+3)& (0+255),b
 15609  001C80  0E00               	movlw	0
 15610  001C82  6F80               	movwf	___flmul@sign& (0+255),b
 15611  001C84  D00F               	goto	l2802
 15612  001C86                     l2801:
 15613                           
 15614                           ; BSR set to: 0
 15615  001C86  C08B  F086         	movff	___flmul@temp,___flmul@bexp
 15616                           
 15617                           ; BSR set to: 0
 15618  001C8A  0EFF               	movlw	255
 15619  001C8C  1787               	andwf	___flmul@prod& (0+255),f,b
 15620  001C8E  0EFF               	movlw	255
 15621  001C90  1788               	andwf	(___flmul@prod+1)& (0+255),f,b
 15622  001C92  0E7F               	movlw	127
 15623  001C94  1789               	andwf	(___flmul@prod+2)& (0+255),f,b
 15624  001C96  0E00               	movlw	0
 15625  001C98  178A               	andwf	(___flmul@prod+3)& (0+255),f,b
 15626                           
 15627                           ; BSR set to: 0
 15628  001C9A  B186               	btfsc	___flmul@bexp& (0+255),0,b
 15629                           
 15630                           ; BSR set to: 0
 15631  001C9C  8F89               	bsf	(___flmul@prod+2)& (0+255),7,b
 15632                           
 15633                           ; BSR set to: 0
 15634                           
 15635                           ; BSR set to: 0
 15636  001C9E  90D8               	bcf	status,0,c
 15637  001CA0  3186               	rrcf	___flmul@bexp& (0+255),w,b
 15638  001CA2                     L7:
 15639  001CA2  6F8A               	movwf	(___flmul@prod+3)& (0+255),b
 15640  001CA4                     l2802:
 15641                           
 15642                           ; BSR set to: 0
 15643                           
 15644                           ; BSR set to: 0
 15645                           
 15646                           ; BSR set to: 0
 15647  001CA4  5180               	movf	___flmul@sign& (0+255),w,b
 15648  001CA6  138A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 15649                           
 15650                           ; BSR set to: 0
 15651  001CA8  C087  F074         	movff	___flmul@prod,?___flmul
 15652  001CAC  C088  F075         	movff	___flmul@prod+1,?___flmul+1
 15653  001CB0  C089  F076         	movff	___flmul@prod+2,?___flmul+2
 15654  001CB4  C08A  F077         	movff	___flmul@prod+3,?___flmul+3
 15655  001CB8  0012               	return	
 15656  001CBA                     __end_of___flmul:
 15657                           	opt stack 0
 15658                           tblptru	equ	0xFF8
 15659                           tblptrh	equ	0xFF7
 15660                           tblptrl	equ	0xFF6
 15661                           tablat	equ	0xFF5
 15662                           prodh	equ	0xFF4
 15663                           prodl	equ	0xFF3
 15664                           intcon	equ	0xFF2
 15665                           intcon3	equ	0xFF0
 15666                           postinc0	equ	0xFEE
 15667                           wreg	equ	0xFE8
 15668                           indf1	equ	0xFE7
 15669                           postdec1	equ	0xFE5
 15670                           fsr1h	equ	0xFE2
 15671                           fsr1l	equ	0xFE1
 15672                           indf2	equ	0xFDF
 15673                           fsr2h	equ	0xFDA
 15674                           fsr2l	equ	0xFD9
 15675                           status	equ	0xFD8
 15676                           
 15677 ;; *************** function ___fldiv *****************
 15678 ;; Defined at:
 15679 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 15680 ;; Parameters:    Size  Location     Type
 15681 ;;  b               4   45[BANK0 ] unsigned char 
 15682 ;;  a               4   49[BANK0 ] unsigned char 
 15683 ;; Auto vars:     Size  Location     Type
 15684 ;;  grs             4   64[BANK0 ] unsigned long 
 15685 ;;  rem             4   58[BANK0 ] unsigned long 
 15686 ;;  new_exp         2   62[BANK0 ] int 
 15687 ;;  aexp            1   69[BANK0 ] unsigned char 
 15688 ;;  bexp            1   68[BANK0 ] unsigned char 
 15689 ;;  sign            1   57[BANK0 ] unsigned char 
 15690 ;; Return value:  Size  Location     Type
 15691 ;;                  4   45[BANK0 ] unsigned char 
 15692 ;; Registers used:
 15693 ;;		wreg, status,2, status,0
 15694 ;; Tracked objects:
 15695 ;;		On entry : 0/0
 15696 ;;		On exit  : 0/0
 15697 ;;		Unchanged: 0/0
 15698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15699 ;;      Params:         0       8       0       0       0       0       0       0       0
 15700 ;;      Locals:         0      13       0       0       0       0       0       0       0
 15701 ;;      Temps:          0       4       0       0       0       0       0       0       0
 15702 ;;      Totals:         0      25       0       0       0       0       0       0       0
 15703 ;;Total ram usage:       25 bytes
 15704 ;; Hardware stack levels used:    1
 15705 ;; Hardware stack levels required when called:   11
 15706 ;; This function calls:
 15707 ;;		Nothing
 15708 ;; This function is called by:
 15709 ;;		_ADC_TempConversion
 15710 ;; This function uses a non-reentrant model
 15711 ;;
 15712                           
 15713                           	psect	text49
 15714  001FF8                     __ptext49:
 15715                           	opt stack 0
 15716  001FF8                     ___fldiv:
 15717                           	opt stack 16
 15718                           
 15719                           ; BSR set to: 0
 15720                           ;incstack = 0
 15721  001FF8  0100               	movlb	0	; () banked
 15722  001FFA  5190               	movf	(___fldiv@b+3)& (0+255),w,b
 15723  001FFC  0B80               	andlw	128
 15724  001FFE  6F99               	movwf	___fldiv@sign& (0+255),b
 15725  002000  5190               	movf	(___fldiv@b+3)& (0+255),w,b
 15726  002002  2590               	addwf	(___fldiv@b+3)& (0+255),w,b
 15727  002004  6FA4               	movwf	___fldiv@bexp& (0+255),b
 15728                           
 15729                           ; BSR set to: 0
 15730  002006  BF8F               	btfsc	(___fldiv@b+2)& (0+255),7,b
 15731                           
 15732                           ; BSR set to: 0
 15733  002008  81A4               	bsf	___fldiv@bexp& (0+255),0,b
 15734                           
 15735                           ; BSR set to: 0
 15736                           
 15737                           ; BSR set to: 0
 15738  00200A  51A4               	movf	___fldiv@bexp& (0+255),w,b
 15739  00200C  B4D8               	btfsc	status,2,c
 15740  00200E  D00D               	goto	l2744
 15741                           
 15742                           ; BSR set to: 0
 15743  002010  29A4               	incf	___fldiv@bexp& (0+255),w,b
 15744  002012  A4D8               	btfss	status,2,c
 15745  002014  D008               	goto	l2745
 15746                           
 15747                           ; BSR set to: 0
 15748  002016  0E00               	movlw	0
 15749  002018  6F8D               	movwf	___fldiv@b& (0+255),b
 15750  00201A  0E00               	movlw	0
 15751  00201C  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15752  00201E  0E00               	movlw	0
 15753  002020  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15754  002022  0E00               	movlw	0
 15755  002024  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15756  002026                     l2745:
 15757                           
 15758                           ; BSR set to: 0
 15759                           
 15760                           ; BSR set to: 0
 15761  002026  8F8F               	bsf	(___fldiv@b+2)& (0+255),7,b
 15762  002028  D006               	goto	L8
 15763  00202A                     l2744:
 15764                           
 15765                           ; BSR set to: 0
 15766                           
 15767                           ; BSR set to: 0
 15768  00202A  0E00               	movlw	0
 15769  00202C  6F8D               	movwf	___fldiv@b& (0+255),b
 15770  00202E  0E00               	movlw	0
 15771  002030  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15772  002032  0E00               	movlw	0
 15773  002034  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15774  002036                     L8:
 15775  002036  0E00               	movlw	0
 15776  002038  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15777                           
 15778                           ; BSR set to: 0
 15779                           
 15780                           ; BSR set to: 0
 15781  00203A  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 15782  00203C  0B80               	andlw	128
 15783  00203E  1B99               	xorwf	___fldiv@sign& (0+255),f,b
 15784                           
 15785                           ; BSR set to: 0
 15786  002040  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 15787  002042  2594               	addwf	(___fldiv@a+3)& (0+255),w,b
 15788  002044  6FA5               	movwf	___fldiv@aexp& (0+255),b
 15789                           
 15790                           ; BSR set to: 0
 15791  002046  BF93               	btfsc	(___fldiv@a+2)& (0+255),7,b
 15792                           
 15793                           ; BSR set to: 0
 15794  002048  81A5               	bsf	___fldiv@aexp& (0+255),0,b
 15795                           
 15796                           ; BSR set to: 0
 15797                           
 15798                           ; BSR set to: 0
 15799  00204A  51A5               	movf	___fldiv@aexp& (0+255),w,b
 15800  00204C  B4D8               	btfsc	status,2,c
 15801  00204E  D00D               	goto	l2748
 15802                           
 15803                           ; BSR set to: 0
 15804  002050  29A5               	incf	___fldiv@aexp& (0+255),w,b
 15805  002052  A4D8               	btfss	status,2,c
 15806  002054  D008               	goto	l2749
 15807                           
 15808                           ; BSR set to: 0
 15809  002056  0E00               	movlw	0
 15810  002058  6F91               	movwf	___fldiv@a& (0+255),b
 15811  00205A  0E00               	movlw	0
 15812  00205C  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 15813  00205E  0E00               	movlw	0
 15814  002060  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 15815  002062  0E00               	movlw	0
 15816  002064  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 15817  002066                     l2749:
 15818                           
 15819                           ; BSR set to: 0
 15820                           
 15821                           ; BSR set to: 0
 15822  002066  8F93               	bsf	(___fldiv@a+2)& (0+255),7,b
 15823  002068  D006               	goto	L9
 15824  00206A                     l2748:
 15825                           
 15826                           ; BSR set to: 0
 15827                           
 15828                           ; BSR set to: 0
 15829  00206A  0E00               	movlw	0
 15830  00206C  6F91               	movwf	___fldiv@a& (0+255),b
 15831  00206E  0E00               	movlw	0
 15832  002070  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 15833  002072  0E00               	movlw	0
 15834  002074  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 15835  002076                     L9:
 15836  002076  0E00               	movlw	0
 15837  002078  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 15838                           
 15839                           ; BSR set to: 0
 15840                           
 15841                           ; BSR set to: 0
 15842  00207A  5191               	movf	___fldiv@a& (0+255),w,b
 15843  00207C  1192               	iorwf	(___fldiv@a+1)& (0+255),w,b
 15844  00207E  1193               	iorwf	(___fldiv@a+2)& (0+255),w,b
 15845  002080  1194               	iorwf	(___fldiv@a+3)& (0+255),w,b
 15846  002082  A4D8               	btfss	status,2,c
 15847  002084  D015               	goto	l2751
 15848                           
 15849                           ; BSR set to: 0
 15850  002086  0E00               	movlw	0
 15851  002088  6F8D               	movwf	___fldiv@b& (0+255),b
 15852  00208A  0E00               	movlw	0
 15853  00208C  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15854  00208E  0E00               	movlw	0
 15855  002090  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15856  002092  0E00               	movlw	0
 15857  002094  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15858                           
 15859                           ; BSR set to: 0
 15860  002096  0E80               	movlw	128
 15861  002098  138F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 15862  00209A  0E7F               	movlw	127
 15863  00209C  1390               	iorwf	(___fldiv@b+3)& (0+255),f,b
 15864                           
 15865                           ; BSR set to: 0
 15866  00209E  C08D  F08D         	movff	___fldiv@b,?___fldiv
 15867  0020A2  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 15868  0020A6  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 15869  0020AA  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 15870                           
 15871                           ; BSR set to: 0
 15872  0020AE  0012               	return	
 15873  0020B0                     l2751:
 15874                           
 15875                           ; BSR set to: 0
 15876                           
 15877                           ; BSR set to: 0
 15878  0020B0  51A4               	movf	___fldiv@bexp& (0+255),w,b
 15879  0020B2  A4D8               	btfss	status,2,c
 15880  0020B4  D011               	goto	l2753
 15881                           
 15882                           ; BSR set to: 0
 15883  0020B6  0E00               	movlw	0
 15884  0020B8  6F8D               	movwf	___fldiv@b& (0+255),b
 15885  0020BA  0E00               	movlw	0
 15886  0020BC  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15887  0020BE  0E00               	movlw	0
 15888  0020C0  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15889  0020C2  0E00               	movlw	0
 15890  0020C4  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15891                           
 15892                           ; BSR set to: 0
 15893  0020C6  C08D  F08D         	movff	___fldiv@b,?___fldiv
 15894  0020CA  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 15895  0020CE  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 15896  0020D2  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 15897                           
 15898                           ; BSR set to: 0
 15899  0020D6  0012               	return	
 15900  0020D8                     l2753:
 15901                           
 15902                           ; BSR set to: 0
 15903                           
 15904                           ; BSR set to: 0
 15905  0020D8  51A5               	movf	___fldiv@aexp& (0+255),w,b
 15906  0020DA  6F95               	movwf	??___fldiv& (0+255),b
 15907  0020DC  6B96               	clrf	(??___fldiv+1)& (0+255),b
 15908  0020DE  1F95               	comf	??___fldiv& (0+255),f,b
 15909  0020E0  1F96               	comf	(??___fldiv+1)& (0+255),f,b
 15910  0020E2  4B95               	infsnz	??___fldiv& (0+255),f,b
 15911  0020E4  2B96               	incf	(??___fldiv+1)& (0+255),f,b
 15912  0020E6  51A4               	movf	___fldiv@bexp& (0+255),w,b
 15913  0020E8  6F97               	movwf	(??___fldiv+2)& (0+255),b
 15914  0020EA  6B98               	clrf	(??___fldiv+3)& (0+255),b
 15915  0020EC  5195               	movf	??___fldiv& (0+255),w,b
 15916  0020EE  2797               	addwf	(??___fldiv+2)& (0+255),f,b
 15917  0020F0  5196               	movf	(??___fldiv+1)& (0+255),w,b
 15918  0020F2  2398               	addwfc	(??___fldiv+3)& (0+255),f,b
 15919  0020F4  0E7F               	movlw	127
 15920  0020F6  2597               	addwf	(??___fldiv+2)& (0+255),w,b
 15921  0020F8  6F9E               	movwf	___fldiv@new_exp& (0+255),b
 15922  0020FA  0E00               	movlw	0
 15923  0020FC  2198               	addwfc	(??___fldiv+3)& (0+255),w,b
 15924  0020FE  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15925                           
 15926                           ; BSR set to: 0
 15927  002100  C08D  F09A         	movff	___fldiv@b,___fldiv@rem
 15928  002104  C08E  F09B         	movff	___fldiv@b+1,___fldiv@rem+1
 15929  002108  C08F  F09C         	movff	___fldiv@b+2,___fldiv@rem+2
 15930  00210C  C090  F09D         	movff	___fldiv@b+3,___fldiv@rem+3
 15931                           
 15932                           ; BSR set to: 0
 15933  002110  0E00               	movlw	0
 15934  002112  6F8D               	movwf	___fldiv@b& (0+255),b
 15935  002114  0E00               	movlw	0
 15936  002116  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 15937  002118  0E00               	movlw	0
 15938  00211A  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 15939  00211C  0E00               	movlw	0
 15940  00211E  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 15941                           
 15942                           ; BSR set to: 0
 15943  002120  0E00               	movlw	0
 15944  002122  6FA0               	movwf	___fldiv@grs& (0+255),b
 15945  002124  0E00               	movlw	0
 15946  002126  6FA1               	movwf	(___fldiv@grs+1)& (0+255),b
 15947  002128  0E00               	movlw	0
 15948  00212A  6FA2               	movwf	(___fldiv@grs+2)& (0+255),b
 15949  00212C  0E00               	movlw	0
 15950  00212E  6FA3               	movwf	(___fldiv@grs+3)& (0+255),b
 15951                           
 15952                           ; BSR set to: 0
 15953  002130  0E00               	movlw	0
 15954  002132  6FA5               	movwf	___fldiv@aexp& (0+255),b
 15955  002134  D028               	goto	l2754
 15956  002136                     
 15957                           ; BSR set to: 0
 15958                           
 15959                           ; BSR set to: 0
 15960  002136  51A5               	movf	___fldiv@aexp& (0+255),w,b
 15961  002138  B4D8               	btfsc	status,2,c
 15962  00213A  D011               	goto	l2756
 15963                           
 15964                           ; BSR set to: 0
 15965  00213C  90D8               	bcf	status,0,c
 15966  00213E  379A               	rlcf	___fldiv@rem& (0+255),f,b
 15967  002140  379B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 15968  002142  379C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 15969  002144  379D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 15970  002146  90D8               	bcf	status,0,c
 15971  002148  378D               	rlcf	___fldiv@b& (0+255),f,b
 15972  00214A  378E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 15973  00214C  378F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 15974  00214E  3790               	rlcf	(___fldiv@b+3)& (0+255),f,b
 15975                           
 15976                           ; BSR set to: 0
 15977  002150  BFA3               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 15978                           
 15979                           ; BSR set to: 0
 15980  002152  818D               	bsf	___fldiv@b& (0+255),0,b
 15981                           
 15982                           ; BSR set to: 0
 15983  002154  90D8               	bcf	status,0,c
 15984  002156  37A0               	rlcf	___fldiv@grs& (0+255),f,b
 15985  002158  37A1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 15986  00215A  37A2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 15987  00215C  37A3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 15988  00215E                     l2756:
 15989                           
 15990                           ; BSR set to: 0
 15991                           
 15992                           ; BSR set to: 0
 15993  00215E  5191               	movf	___fldiv@a& (0+255),w,b
 15994  002160  5D9A               	subwf	___fldiv@rem& (0+255),w,b
 15995  002162  5192               	movf	(___fldiv@a+1)& (0+255),w,b
 15996  002164  599B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 15997  002166  5193               	movf	(___fldiv@a+2)& (0+255),w,b
 15998  002168  599C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 15999  00216A  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 16000  00216C  599D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 16001  00216E  A0D8               	btfss	status,0,c
 16002  002170  D009               	goto	l2758
 16003                           
 16004                           ; BSR set to: 0
 16005  002172  8DA3               	bsf	(___fldiv@grs+3)& (0+255),6,b
 16006                           
 16007                           ; BSR set to: 0
 16008  002174  5191               	movf	___fldiv@a& (0+255),w,b
 16009  002176  5F9A               	subwf	___fldiv@rem& (0+255),f,b
 16010  002178  5192               	movf	(___fldiv@a+1)& (0+255),w,b
 16011  00217A  5B9B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 16012  00217C  5193               	movf	(___fldiv@a+2)& (0+255),w,b
 16013  00217E  5B9C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 16014  002180  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 16015  002182  5B9D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 16016  002184                     l2758:
 16017                           
 16018                           ; BSR set to: 0
 16019                           
 16020                           ; BSR set to: 0
 16021  002184  2BA5               	incf	___fldiv@aexp& (0+255),f,b
 16022  002186                     l2754:
 16023                           
 16024                           ; BSR set to: 0
 16025  002186  0E19               	movlw	25
 16026  002188  65A5               	cpfsgt	___fldiv@aexp& (0+255),b
 16027  00218A  D7D5               	goto	l2755
 16028                           
 16029                           ; BSR set to: 0
 16030                           
 16031                           ; BSR set to: 0
 16032  00218C  519A               	movf	___fldiv@rem& (0+255),w,b
 16033  00218E  119B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 16034  002190  119C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 16035  002192  119D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 16036  002194  B4D8               	btfsc	status,2,c
 16037  002196  D011               	goto	l2761
 16038                           
 16039                           ; BSR set to: 0
 16040  002198  81A0               	bsf	___fldiv@grs& (0+255),0,b
 16041                           
 16042                           ; BSR set to: 0
 16043  00219A  D00F               	goto	l2761
 16044  00219C                     
 16045                           ; BSR set to: 0
 16046                           
 16047                           ; BSR set to: 0
 16048  00219C  90D8               	bcf	status,0,c
 16049  00219E  378D               	rlcf	___fldiv@b& (0+255),f,b
 16050  0021A0  378E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 16051  0021A2  378F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 16052  0021A4  3790               	rlcf	(___fldiv@b+3)& (0+255),f,b
 16053                           
 16054                           ; BSR set to: 0
 16055  0021A6  BFA3               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 16056                           
 16057                           ; BSR set to: 0
 16058  0021A8  818D               	bsf	___fldiv@b& (0+255),0,b
 16059                           
 16060                           ; BSR set to: 0
 16061  0021AA  90D8               	bcf	status,0,c
 16062  0021AC  37A0               	rlcf	___fldiv@grs& (0+255),f,b
 16063  0021AE  37A1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 16064  0021B0  37A2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 16065  0021B2  37A3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 16066  0021B4  079E               	decf	___fldiv@new_exp& (0+255),f,b
 16067  0021B6  A0D8               	btfss	status,0,c
 16068  0021B8  079F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 16069  0021BA                     l2761:
 16070                           
 16071                           ; BSR set to: 0
 16072                           
 16073                           ; BSR set to: 0
 16074  0021BA  AF8F               	btfss	(___fldiv@b+2)& (0+255),7,b
 16075  0021BC  D7EF               	goto	l2762
 16076                           
 16077                           ; BSR set to: 0
 16078                           
 16079                           ; BSR set to: 0
 16080  0021BE  0E00               	movlw	0
 16081  0021C0  6FA5               	movwf	___fldiv@aexp& (0+255),b
 16082                           
 16083                           ; BSR set to: 0
 16084  0021C2  AFA3               	btfss	(___fldiv@grs+3)& (0+255),7,b
 16085  0021C4  D016               	goto	l2768
 16086                           
 16087                           ; BSR set to: 0
 16088  0021C6  0EFF               	movlw	255
 16089  0021C8  15A0               	andwf	___fldiv@grs& (0+255),w,b
 16090  0021CA  6F95               	movwf	??___fldiv& (0+255),b
 16091  0021CC  0EFF               	movlw	255
 16092  0021CE  15A1               	andwf	(___fldiv@grs+1)& (0+255),w,b
 16093  0021D0  6F96               	movwf	(??___fldiv+1)& (0+255),b
 16094  0021D2  0EFF               	movlw	255
 16095  0021D4  15A2               	andwf	(___fldiv@grs+2)& (0+255),w,b
 16096  0021D6  6F97               	movwf	(??___fldiv+2)& (0+255),b
 16097  0021D8  0E7F               	movlw	127
 16098  0021DA  15A3               	andwf	(___fldiv@grs+3)& (0+255),w,b
 16099  0021DC  6F98               	movwf	(??___fldiv+3)& (0+255),b
 16100  0021DE  5195               	movf	??___fldiv& (0+255),w,b
 16101  0021E0  1196               	iorwf	(??___fldiv+1)& (0+255),w,b
 16102  0021E2  1197               	iorwf	(??___fldiv+2)& (0+255),w,b
 16103  0021E4  1198               	iorwf	(??___fldiv+3)& (0+255),w,b
 16104  0021E6  A4D8               	btfss	status,2,c
 16105  0021E8  D002               	goto	u7430
 16106                           
 16107                           ; BSR set to: 0
 16108                           
 16109                           ; BSR set to: 0
 16110  0021EA  A18D               	btfss	___fldiv@b& (0+255),0,b
 16111  0021EC  D002               	goto	l2768
 16112  0021EE                     u7430:
 16113                           
 16114                           ; BSR set to: 0
 16115  0021EE  0E01               	movlw	1
 16116  0021F0  6FA5               	movwf	___fldiv@aexp& (0+255),b
 16117  0021F2                     l2768:
 16118                           
 16119                           ; BSR set to: 0
 16120                           
 16121                           ; BSR set to: 0
 16122                           
 16123                           ; BSR set to: 0
 16124  0021F2  51A5               	movf	___fldiv@aexp& (0+255),w,b
 16125  0021F4  B4D8               	btfsc	status,2,c
 16126  0021F6  D01F               	goto	l2770
 16127                           
 16128                           ; BSR set to: 0
 16129  0021F8  0E01               	movlw	1
 16130  0021FA  278D               	addwf	___fldiv@b& (0+255),f,b
 16131  0021FC  0E00               	movlw	0
 16132  0021FE  238E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 16133  002200  238F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 16134  002202  2390               	addwfc	(___fldiv@b+3)& (0+255),f,b
 16135                           
 16136                           ; BSR set to: 0
 16137  002204  A190               	btfss	(___fldiv@b+3)& (0+255),0,b
 16138  002206  D017               	goto	l2770
 16139                           
 16140                           ; BSR set to: 0
 16141  002208  C08D  F095         	movff	___fldiv@b,??___fldiv
 16142  00220C  C08E  F096         	movff	___fldiv@b+1,??___fldiv+1
 16143  002210  C08F  F097         	movff	___fldiv@b+2,??___fldiv+2
 16144  002214  C090  F098         	movff	___fldiv@b+3,??___fldiv+3
 16145  002218  3598               	rlcf	(??___fldiv+3)& (0+255),w,b
 16146  00221A  3398               	rrcf	(??___fldiv+3)& (0+255),f,b
 16147  00221C  3397               	rrcf	(??___fldiv+2)& (0+255),f,b
 16148  00221E  3396               	rrcf	(??___fldiv+1)& (0+255),f,b
 16149  002220  3395               	rrcf	??___fldiv& (0+255),f,b
 16150  002222  C095  F08D         	movff	??___fldiv,___fldiv@b
 16151  002226  C096  F08E         	movff	??___fldiv+1,___fldiv@b+1
 16152  00222A  C097  F08F         	movff	??___fldiv+2,___fldiv@b+2
 16153  00222E  C098  F090         	movff	??___fldiv+3,___fldiv@b+3
 16154                           
 16155                           ; BSR set to: 0
 16156  002232  4B9E               	infsnz	___fldiv@new_exp& (0+255),f,b
 16157  002234  2B9F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 16158  002236                     l2770:
 16159                           
 16160                           ; BSR set to: 0
 16161                           
 16162                           ; BSR set to: 0
 16163                           
 16164                           ; BSR set to: 0
 16165  002236  BF9F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 16166  002238  D010               	goto	l2771
 16167  00223A  519F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 16168  00223C  E103               	bnz	u7460
 16169  00223E  299E               	incf	___fldiv@new_exp& (0+255),w,b
 16170  002240  A0D8               	btfss	status,0,c
 16171  002242  D00B               	goto	l2771
 16172  002244                     u7460:
 16173                           
 16174                           ; BSR set to: 0
 16175  002244  0E00               	movlw	0
 16176  002246  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 16177  002248  699E               	setf	___fldiv@new_exp& (0+255),b
 16178  00224A  0E00               	movlw	0
 16179  00224C  6F8D               	movwf	___fldiv@b& (0+255),b
 16180  00224E  0E00               	movlw	0
 16181  002250  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 16182  002252  0E00               	movlw	0
 16183  002254  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 16184  002256  0E00               	movlw	0
 16185  002258  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 16186  00225A                     l2771:
 16187                           
 16188                           ; BSR set to: 0
 16189                           
 16190                           ; BSR set to: 0
 16191  00225A  BF9F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 16192  00225C  D005               	goto	u7470
 16193  00225E  519F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 16194  002260  E111               	bnz	l9205
 16195  002262  059E               	decf	___fldiv@new_exp& (0+255),w,b
 16196  002264  B0D8               	btfsc	status,0,c
 16197  002266  D00E               	goto	l2772
 16198  002268                     u7470:
 16199                           
 16200                           ; BSR set to: 0
 16201  002268  0E00               	movlw	0
 16202  00226A  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 16203  00226C  0E00               	movlw	0
 16204  00226E  6F9E               	movwf	___fldiv@new_exp& (0+255),b
 16205  002270  0E00               	movlw	0
 16206  002272  6F8D               	movwf	___fldiv@b& (0+255),b
 16207  002274  0E00               	movlw	0
 16208  002276  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 16209  002278  0E00               	movlw	0
 16210  00227A  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 16211  00227C  0E00               	movlw	0
 16212  00227E  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 16213  002280  0E00               	movlw	0
 16214  002282  6F99               	movwf	___fldiv@sign& (0+255),b
 16215  002284                     l2772:
 16216  002284                     l9205:
 16217                           
 16218                           ; BSR set to: 0
 16219  002284  C09E  F0A4         	movff	___fldiv@new_exp,___fldiv@bexp
 16220                           
 16221                           ; BSR set to: 0
 16222  002288  A1A4               	btfss	___fldiv@bexp& (0+255),0,b
 16223  00228A  D002               	goto	l2773
 16224                           
 16225                           ; BSR set to: 0
 16226  00228C  8F8F               	bsf	(___fldiv@b+2)& (0+255),7,b
 16227  00228E  D001               	goto	l2774
 16228  002290                     l2773:
 16229                           
 16230                           ; BSR set to: 0
 16231                           
 16232                           ; BSR set to: 0
 16233  002290  9F8F               	bcf	(___fldiv@b+2)& (0+255),7,b
 16234  002292                     l2774:
 16235                           
 16236                           ; BSR set to: 0
 16237                           
 16238                           ; BSR set to: 0
 16239  002292  90D8               	bcf	status,0,c
 16240  002294  31A4               	rrcf	___fldiv@bexp& (0+255),w,b
 16241  002296  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 16242                           
 16243                           ; BSR set to: 0
 16244  002298  5199               	movf	___fldiv@sign& (0+255),w,b
 16245  00229A  1390               	iorwf	(___fldiv@b+3)& (0+255),f,b
 16246                           
 16247                           ; BSR set to: 0
 16248  00229C  C08D  F08D         	movff	___fldiv@b,?___fldiv
 16249  0022A0  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 16250  0022A4  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 16251  0022A8  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 16252  0022AC  0012               	return	
 16253  0022AE                     __end_of___fldiv:
 16254                           	opt stack 0
 16255                           tblptru	equ	0xFF8
 16256                           tblptrh	equ	0xFF7
 16257                           tblptrl	equ	0xFF6
 16258                           tablat	equ	0xFF5
 16259                           prodh	equ	0xFF4
 16260                           prodl	equ	0xFF3
 16261                           intcon	equ	0xFF2
 16262                           intcon3	equ	0xFF0
 16263                           postinc0	equ	0xFEE
 16264                           wreg	equ	0xFE8
 16265                           indf1	equ	0xFE7
 16266                           postdec1	equ	0xFE5
 16267                           fsr1h	equ	0xFE2
 16268                           fsr1l	equ	0xFE1
 16269                           indf2	equ	0xFDF
 16270                           fsr2h	equ	0xFDA
 16271                           fsr2l	equ	0xFD9
 16272                           status	equ	0xFD8
 16273                           
 16274 ;; *************** function ___fladd *****************
 16275 ;; Defined at:
 16276 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 16277 ;; Parameters:    Size  Location     Type
 16278 ;;  b               4    0[BANK0 ] unsigned char 
 16279 ;;  a               4    4[BANK0 ] unsigned char 
 16280 ;; Auto vars:     Size  Location     Type
 16281 ;;  grs             1   19[BANK0 ] unsigned char 
 16282 ;;  bexp            1   18[BANK0 ] unsigned char 
 16283 ;;  aexp            1   17[BANK0 ] unsigned char 
 16284 ;;  signs           1   16[BANK0 ] unsigned char 
 16285 ;; Return value:  Size  Location     Type
 16286 ;;                  4    0[BANK0 ] unsigned char 
 16287 ;; Registers used:
 16288 ;;		wreg, status,2, status,0
 16289 ;; Tracked objects:
 16290 ;;		On entry : 0/0
 16291 ;;		On exit  : 0/0
 16292 ;;		Unchanged: 0/0
 16293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16294 ;;      Params:         0       8       0       0       0       0       0       0       0
 16295 ;;      Locals:         0       4       0       0       0       0       0       0       0
 16296 ;;      Temps:          0       8       0       0       0       0       0       0       0
 16297 ;;      Totals:         0      20       0       0       0       0       0       0       0
 16298 ;;Total ram usage:       20 bytes
 16299 ;; Hardware stack levels used:    1
 16300 ;; Hardware stack levels required when called:   11
 16301 ;; This function calls:
 16302 ;;		Nothing
 16303 ;; This function is called by:
 16304 ;;		_ADC_TempConversion
 16305 ;; This function uses a non-reentrant model
 16306 ;;
 16307                           
 16308                           	psect	text50
 16309  001CBA                     __ptext50:
 16310                           	opt stack 0
 16311  001CBA                     ___fladd:
 16312                           	opt stack 16
 16313                           
 16314                           ; BSR set to: 0
 16315                           ;incstack = 0
 16316  001CBA  0100               	movlb	0	; () banked
 16317  001CBC  5163               	movf	(___fladd@b+3)& (0+255),w,b
 16318  001CBE  0B80               	andlw	128
 16319  001CC0  6F70               	movwf	___fladd@signs& (0+255),b
 16320  001CC2  5163               	movf	(___fladd@b+3)& (0+255),w,b
 16321  001CC4  2563               	addwf	(___fladd@b+3)& (0+255),w,b
 16322  001CC6  6F72               	movwf	___fladd@bexp& (0+255),b
 16323                           
 16324                           ; BSR set to: 0
 16325  001CC8  BF62               	btfsc	(___fladd@b+2)& (0+255),7,b
 16326                           
 16327                           ; BSR set to: 0
 16328  001CCA  8172               	bsf	___fladd@bexp& (0+255),0,b
 16329                           
 16330                           ; BSR set to: 0
 16331                           
 16332                           ; BSR set to: 0
 16333  001CCC  5172               	movf	___fladd@bexp& (0+255),w,b
 16334  001CCE  B4D8               	btfsc	status,2,c
 16335  001CD0  D00D               	goto	l2687
 16336                           
 16337                           ; BSR set to: 0
 16338  001CD2  2972               	incf	___fladd@bexp& (0+255),w,b
 16339  001CD4  A4D8               	btfss	status,2,c
 16340  001CD6  D008               	goto	l2688
 16341                           
 16342                           ; BSR set to: 0
 16343  001CD8  0E00               	movlw	0
 16344  001CDA  6F60               	movwf	___fladd@b& (0+255),b
 16345  001CDC  0E00               	movlw	0
 16346  001CDE  6F61               	movwf	(___fladd@b+1)& (0+255),b
 16347  001CE0  0E00               	movlw	0
 16348  001CE2  6F62               	movwf	(___fladd@b+2)& (0+255),b
 16349  001CE4  0E00               	movlw	0
 16350  001CE6  6F63               	movwf	(___fladd@b+3)& (0+255),b
 16351  001CE8                     l2688:
 16352                           
 16353                           ; BSR set to: 0
 16354                           
 16355                           ; BSR set to: 0
 16356  001CE8  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 16357  001CEA  D006               	goto	L10
 16358  001CEC                     l2687:
 16359                           
 16360                           ; BSR set to: 0
 16361                           
 16362                           ; BSR set to: 0
 16363  001CEC  0E00               	movlw	0
 16364  001CEE  6F60               	movwf	___fladd@b& (0+255),b
 16365  001CF0  0E00               	movlw	0
 16366  001CF2  6F61               	movwf	(___fladd@b+1)& (0+255),b
 16367  001CF4  0E00               	movlw	0
 16368  001CF6  6F62               	movwf	(___fladd@b+2)& (0+255),b
 16369  001CF8                     L10:
 16370  001CF8  0E00               	movlw	0
 16371  001CFA  6F63               	movwf	(___fladd@b+3)& (0+255),b
 16372                           
 16373                           ; BSR set to: 0
 16374                           
 16375                           ; BSR set to: 0
 16376  001CFC  5167               	movf	(___fladd@a+3)& (0+255),w,b
 16377  001CFE  0B80               	andlw	128
 16378  001D00  6F71               	movwf	___fladd@aexp& (0+255),b
 16379                           
 16380                           ; BSR set to: 0
 16381  001D02  5170               	movf	___fladd@signs& (0+255),w,b
 16382  001D04  1971               	xorwf	___fladd@aexp& (0+255),w,b
 16383  001D06  A4D8               	btfss	status,2,c
 16384                           
 16385                           ; BSR set to: 0
 16386  001D08  8D70               	bsf	___fladd@signs& (0+255),6,b
 16387                           
 16388                           ; BSR set to: 0
 16389                           
 16390                           ; BSR set to: 0
 16391  001D0A  5167               	movf	(___fladd@a+3)& (0+255),w,b
 16392  001D0C  2567               	addwf	(___fladd@a+3)& (0+255),w,b
 16393  001D0E  6F71               	movwf	___fladd@aexp& (0+255),b
 16394                           
 16395                           ; BSR set to: 0
 16396  001D10  BF66               	btfsc	(___fladd@a+2)& (0+255),7,b
 16397                           
 16398                           ; BSR set to: 0
 16399  001D12  8171               	bsf	___fladd@aexp& (0+255),0,b
 16400                           
 16401                           ; BSR set to: 0
 16402                           
 16403                           ; BSR set to: 0
 16404  001D14  5171               	movf	___fladd@aexp& (0+255),w,b
 16405  001D16  B4D8               	btfsc	status,2,c
 16406  001D18  D00D               	goto	l2692
 16407                           
 16408                           ; BSR set to: 0
 16409  001D1A  2971               	incf	___fladd@aexp& (0+255),w,b
 16410  001D1C  A4D8               	btfss	status,2,c
 16411  001D1E  D008               	goto	l2693
 16412                           
 16413                           ; BSR set to: 0
 16414  001D20  0E00               	movlw	0
 16415  001D22  6F64               	movwf	___fladd@a& (0+255),b
 16416  001D24  0E00               	movlw	0
 16417  001D26  6F65               	movwf	(___fladd@a+1)& (0+255),b
 16418  001D28  0E00               	movlw	0
 16419  001D2A  6F66               	movwf	(___fladd@a+2)& (0+255),b
 16420  001D2C  0E00               	movlw	0
 16421  001D2E  6F67               	movwf	(___fladd@a+3)& (0+255),b
 16422  001D30                     l2693:
 16423                           
 16424                           ; BSR set to: 0
 16425                           
 16426                           ; BSR set to: 0
 16427  001D30  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
 16428  001D32  D006               	goto	L11
 16429  001D34                     l2692:
 16430                           
 16431                           ; BSR set to: 0
 16432                           
 16433                           ; BSR set to: 0
 16434  001D34  0E00               	movlw	0
 16435  001D36  6F64               	movwf	___fladd@a& (0+255),b
 16436  001D38  0E00               	movlw	0
 16437  001D3A  6F65               	movwf	(___fladd@a+1)& (0+255),b
 16438  001D3C  0E00               	movlw	0
 16439  001D3E  6F66               	movwf	(___fladd@a+2)& (0+255),b
 16440  001D40                     L11:
 16441  001D40  0E00               	movlw	0
 16442  001D42  6F67               	movwf	(___fladd@a+3)& (0+255),b
 16443                           
 16444                           ; BSR set to: 0
 16445                           
 16446                           ; BSR set to: 0
 16447  001D44  5172               	movf	___fladd@bexp& (0+255),w,b
 16448  001D46  5D71               	subwf	___fladd@aexp& (0+255),w,b
 16449  001D48  B0D8               	btfsc	status,0,c
 16450  001D4A  D022               	goto	l2695
 16451                           
 16452                           ; BSR set to: 0
 16453  001D4C  AD70               	btfss	___fladd@signs& (0+255),6,b
 16454  001D4E  D002               	goto	l2696
 16455                           
 16456                           ; BSR set to: 0
 16457  001D50  0E80               	movlw	128
 16458  001D52  1B70               	xorwf	___fladd@signs& (0+255),f,b
 16459  001D54                     l2696:
 16460                           
 16461                           ; BSR set to: 0
 16462                           
 16463                           ; BSR set to: 0
 16464  001D54  C072  F073         	movff	___fladd@bexp,___fladd@grs
 16465                           
 16466                           ; BSR set to: 0
 16467  001D58  C071  F072         	movff	___fladd@aexp,___fladd@bexp
 16468                           
 16469                           ; BSR set to: 0
 16470  001D5C  C073  F071         	movff	___fladd@grs,___fladd@aexp
 16471                           
 16472                           ; BSR set to: 0
 16473  001D60  C060  F073         	movff	___fladd@b,___fladd@grs
 16474                           
 16475                           ; BSR set to: 0
 16476  001D64  C064  F060         	movff	___fladd@a,___fladd@b
 16477                           
 16478                           ; BSR set to: 0
 16479  001D68  C073  F064         	movff	___fladd@grs,___fladd@a
 16480                           
 16481                           ; BSR set to: 0
 16482  001D6C  C061  F073         	movff	___fladd@b+1,___fladd@grs
 16483                           
 16484                           ; BSR set to: 0
 16485  001D70  C065  F061         	movff	___fladd@a+1,___fladd@b+1
 16486                           
 16487                           ; BSR set to: 0
 16488  001D74  C073  F065         	movff	___fladd@grs,___fladd@a+1
 16489                           
 16490                           ; BSR set to: 0
 16491  001D78  C062  F073         	movff	___fladd@b+2,___fladd@grs
 16492                           
 16493                           ; BSR set to: 0
 16494  001D7C  C066  F062         	movff	___fladd@a+2,___fladd@b+2
 16495                           
 16496                           ; BSR set to: 0
 16497  001D80  C073  F066         	movff	___fladd@grs,___fladd@a+2
 16498                           
 16499                           ; BSR set to: 0
 16500  001D84  C063  F073         	movff	___fladd@b+3,___fladd@grs
 16501                           
 16502                           ; BSR set to: 0
 16503  001D88  C067  F063         	movff	___fladd@a+3,___fladd@b+3
 16504                           
 16505                           ; BSR set to: 0
 16506  001D8C  C073  F067         	movff	___fladd@grs,___fladd@a+3
 16507  001D90                     l2695:
 16508                           
 16509                           ; BSR set to: 0
 16510                           
 16511                           ; BSR set to: 0
 16512  001D90  0E00               	movlw	0
 16513  001D92  6F73               	movwf	___fladd@grs& (0+255),b
 16514                           
 16515                           ; BSR set to: 0
 16516  001D94  5172               	movf	___fladd@bexp& (0+255),w,b
 16517  001D96  6F68               	movwf	??___fladd& (0+255),b
 16518  001D98  6B69               	clrf	(??___fladd+1)& (0+255),b
 16519  001D9A  1F68               	comf	??___fladd& (0+255),f,b
 16520  001D9C  1F69               	comf	(??___fladd+1)& (0+255),f,b
 16521  001D9E  4B68               	infsnz	??___fladd& (0+255),f,b
 16522  001DA0  2B69               	incf	(??___fladd+1)& (0+255),f,b
 16523  001DA2  5171               	movf	___fladd@aexp& (0+255),w,b
 16524  001DA4  6F6A               	movwf	(??___fladd+2)& (0+255),b
 16525  001DA6  6B6B               	clrf	(??___fladd+3)& (0+255),b
 16526  001DA8  5168               	movf	??___fladd& (0+255),w,b
 16527  001DAA  276A               	addwf	(??___fladd+2)& (0+255),f,b
 16528  001DAC  5169               	movf	(??___fladd+1)& (0+255),w,b
 16529  001DAE  236B               	addwfc	(??___fladd+3)& (0+255),f,b
 16530  001DB0  BF6B               	btfsc	(??___fladd+3)& (0+255),7,b
 16531  001DB2  D02C               	goto	l2699
 16532  001DB4  516B               	movf	(??___fladd+3)& (0+255),w,b
 16533  001DB6  E104               	bnz	u6960
 16534  001DB8  0E1A               	movlw	26
 16535  001DBA  5D6A               	subwf	(??___fladd+2)& (0+255),w,b
 16536  001DBC  A0D8               	btfss	status,0,c
 16537  001DBE  D026               	goto	l2699
 16538  001DC0                     u6960:
 16539                           
 16540                           ; BSR set to: 0
 16541  001DC0  5160               	movf	___fladd@b& (0+255),w,b
 16542  001DC2  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 16543  001DC4  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 16544  001DC6  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 16545  001DC8  B4D8               	btfsc	status,2,c
 16546  001DCA  D002               	goto	u6970
 16547  001DCC  0E01               	movlw	1
 16548  001DCE  D001               	goto	u6980
 16549  001DD0                     u6970:
 16550  001DD0  0E00               	movlw	0
 16551  001DD2                     u6980:
 16552  001DD2  6F73               	movwf	___fladd@grs& (0+255),b
 16553                           
 16554                           ; BSR set to: 0
 16555  001DD4  0E00               	movlw	0
 16556  001DD6  6F60               	movwf	___fladd@b& (0+255),b
 16557  001DD8  0E00               	movlw	0
 16558  001DDA  6F61               	movwf	(___fladd@b+1)& (0+255),b
 16559  001DDC  0E00               	movlw	0
 16560  001DDE  6F62               	movwf	(___fladd@b+2)& (0+255),b
 16561  001DE0  0E00               	movlw	0
 16562  001DE2  6F63               	movwf	(___fladd@b+3)& (0+255),b
 16563                           
 16564                           ; BSR set to: 0
 16565  001DE4  C071  F072         	movff	___fladd@aexp,___fladd@bexp
 16566  001DE8  D015               	goto	u7010
 16567  001DEA                     l2700:
 16568                           
 16569                           ; BSR set to: 0
 16570  001DEA  A173               	btfss	___fladd@grs& (0+255),0,b
 16571  001DEC  D005               	goto	l2701
 16572                           
 16573                           ; BSR set to: 0
 16574  001DEE  90D8               	bcf	status,0,c
 16575  001DF0  3173               	rrcf	___fladd@grs& (0+255),w,b
 16576  001DF2  0901               	iorlw	1
 16577  001DF4  6F73               	movwf	___fladd@grs& (0+255),b
 16578  001DF6  D002               	goto	l2702
 16579  001DF8                     l2701:
 16580                           
 16581                           ; BSR set to: 0
 16582                           
 16583                           ; BSR set to: 0
 16584  001DF8  90D8               	bcf	status,0,c
 16585  001DFA  3373               	rrcf	___fladd@grs& (0+255),f,b
 16586  001DFC                     l2702:
 16587                           
 16588                           ; BSR set to: 0
 16589                           
 16590                           ; BSR set to: 0
 16591  001DFC  B160               	btfsc	___fladd@b& (0+255),0,b
 16592                           
 16593                           ; BSR set to: 0
 16594  001DFE  8F73               	bsf	___fladd@grs& (0+255),7,b
 16595                           
 16596                           ; BSR set to: 0
 16597                           
 16598                           ; BSR set to: 0
 16599  001E00  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 16600  001E02  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 16601  001E04  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 16602  001E06  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 16603  001E08  3360               	rrcf	___fladd@b& (0+255),f,b
 16604                           
 16605                           ; BSR set to: 0
 16606  001E0A  2B72               	incf	___fladd@bexp& (0+255),f,b
 16607  001E0C                     l2699:
 16608                           
 16609                           ; BSR set to: 0
 16610  001E0C  5171               	movf	___fladd@aexp& (0+255),w,b
 16611  001E0E  5D72               	subwf	___fladd@bexp& (0+255),w,b
 16612  001E10  A0D8               	btfss	status,0,c
 16613  001E12  D7EB               	goto	l2700
 16614  001E14                     u7010:
 16615                           
 16616                           ; BSR set to: 0
 16617                           
 16618                           ; BSR set to: 0
 16619  001E14  BD70               	btfsc	___fladd@signs& (0+255),6,b
 16620  001E16  D029               	goto	l2705
 16621                           
 16622                           ; BSR set to: 0
 16623  001E18  5172               	movf	___fladd@bexp& (0+255),w,b
 16624  001E1A  A4D8               	btfss	status,2,c
 16625  001E1C  D009               	goto	l2706
 16626                           
 16627                           ; BSR set to: 0
 16628  001E1E  0E00               	movlw	0
 16629  001E20  6F60               	movwf	?___fladd& (0+255),b
 16630  001E22  0E00               	movlw	0
 16631  001E24  6F61               	movwf	(?___fladd+1)& (0+255),b
 16632  001E26  0E00               	movlw	0
 16633  001E28  6F62               	movwf	(?___fladd+2)& (0+255),b
 16634  001E2A  0E00               	movlw	0
 16635  001E2C  6F63               	movwf	(?___fladd+3)& (0+255),b
 16636                           
 16637                           ; BSR set to: 0
 16638  001E2E  0012               	return	
 16639  001E30                     l2706:
 16640                           
 16641                           ; BSR set to: 0
 16642                           
 16643                           ; BSR set to: 0
 16644  001E30  5164               	movf	___fladd@a& (0+255),w,b
 16645  001E32  2760               	addwf	___fladd@b& (0+255),f,b
 16646  001E34  5165               	movf	(___fladd@a+1)& (0+255),w,b
 16647  001E36  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 16648  001E38  5166               	movf	(___fladd@a+2)& (0+255),w,b
 16649  001E3A  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 16650  001E3C  5167               	movf	(___fladd@a+3)& (0+255),w,b
 16651  001E3E  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 16652                           
 16653                           ; BSR set to: 0
 16654  001E40  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 16655  001E42  D083               	goto	u7140
 16656                           
 16657                           ; BSR set to: 0
 16658  001E44  A173               	btfss	___fladd@grs& (0+255),0,b
 16659  001E46  D006               	goto	l2709
 16660                           
 16661                           ; BSR set to: 0
 16662  001E48  90D8               	bcf	status,0,c
 16663  001E4A  3373               	rrcf	___fladd@grs& (0+255),f,b
 16664  001E4C  5173               	movf	___fladd@grs& (0+255),w,b
 16665  001E4E  0901               	iorlw	1
 16666  001E50  6F73               	movwf	___fladd@grs& (0+255),b
 16667  001E52  D002               	goto	l2710
 16668  001E54                     l2709:
 16669                           
 16670                           ; BSR set to: 0
 16671                           
 16672                           ; BSR set to: 0
 16673  001E54  90D8               	bcf	status,0,c
 16674  001E56  3373               	rrcf	___fladd@grs& (0+255),f,b
 16675  001E58                     l2710:
 16676                           
 16677                           ; BSR set to: 0
 16678                           
 16679                           ; BSR set to: 0
 16680  001E58  B160               	btfsc	___fladd@b& (0+255),0,b
 16681                           
 16682                           ; BSR set to: 0
 16683  001E5A  8F73               	bsf	___fladd@grs& (0+255),7,b
 16684                           
 16685                           ; BSR set to: 0
 16686                           
 16687                           ; BSR set to: 0
 16688  001E5C  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 16689  001E5E  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 16690  001E60  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 16691  001E62  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 16692  001E64  3360               	rrcf	___fladd@b& (0+255),f,b
 16693                           
 16694                           ; BSR set to: 0
 16695  001E66  2B72               	incf	___fladd@bexp& (0+255),f,b
 16696                           
 16697                           ; BSR set to: 0
 16698  001E68  D070               	goto	u7140
 16699  001E6A                     l2705:
 16700                           
 16701                           ; BSR set to: 0
 16702                           
 16703                           ; BSR set to: 0
 16704  001E6A  5164               	movf	___fladd@a& (0+255),w,b
 16705  001E6C  5D60               	subwf	___fladd@b& (0+255),w,b
 16706  001E6E  5165               	movf	(___fladd@a+1)& (0+255),w,b
 16707  001E70  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
 16708  001E72  5166               	movf	(___fladd@a+2)& (0+255),w,b
 16709  001E74  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
 16710  001E76  5163               	movf	(___fladd@b+3)& (0+255),w,b
 16711  001E78  0A80               	xorlw	128
 16712  001E7A  6F68               	movwf	??___fladd& (0+255),b
 16713  001E7C  5167               	movf	(___fladd@a+3)& (0+255),w,b
 16714  001E7E  0A80               	xorlw	128
 16715  001E80  5968               	subwfb	??___fladd& (0+255),w,b
 16716  001E82  B0D8               	btfsc	status,0,c
 16717  001E84  D036               	goto	l2713
 16718                           
 16719                           ; BSR set to: 0
 16720  001E86  C060  F068         	movff	___fladd@b,??___fladd
 16721  001E8A  C061  F069         	movff	___fladd@b+1,??___fladd+1
 16722  001E8E  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 16723  001E92  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 16724  001E96  1F68               	comf	??___fladd& (0+255),f,b
 16725  001E98  1F69               	comf	(??___fladd+1)& (0+255),f,b
 16726  001E9A  1F6A               	comf	(??___fladd+2)& (0+255),f,b
 16727  001E9C  1F6B               	comf	(??___fladd+3)& (0+255),f,b
 16728  001E9E  2B68               	incf	??___fladd& (0+255),f,b
 16729  001EA0  0E00               	movlw	0
 16730  001EA2  2369               	addwfc	(??___fladd+1)& (0+255),f,b
 16731  001EA4  236A               	addwfc	(??___fladd+2)& (0+255),f,b
 16732  001EA6  236B               	addwfc	(??___fladd+3)& (0+255),f,b
 16733  001EA8  5164               	movf	___fladd@a& (0+255),w,b
 16734  001EAA  2568               	addwf	??___fladd& (0+255),w,b
 16735  001EAC  6F6C               	movwf	(??___fladd+4)& (0+255),b
 16736  001EAE  5165               	movf	(___fladd@a+1)& (0+255),w,b
 16737  001EB0  2169               	addwfc	(??___fladd+1)& (0+255),w,b
 16738  001EB2  6F6D               	movwf	(??___fladd+5)& (0+255),b
 16739  001EB4  5166               	movf	(___fladd@a+2)& (0+255),w,b
 16740  001EB6  216A               	addwfc	(??___fladd+2)& (0+255),w,b
 16741  001EB8  6F6E               	movwf	(??___fladd+6)& (0+255),b
 16742  001EBA  5167               	movf	(___fladd@a+3)& (0+255),w,b
 16743  001EBC  216B               	addwfc	(??___fladd+3)& (0+255),w,b
 16744  001EBE  6F6F               	movwf	(??___fladd+7)& (0+255),b
 16745  001EC0  0EFF               	movlw	255
 16746  001EC2  256C               	addwf	(??___fladd+4)& (0+255),w,b
 16747  001EC4  6F60               	movwf	___fladd@b& (0+255),b
 16748  001EC6  0EFF               	movlw	255
 16749  001EC8  216D               	addwfc	(??___fladd+5)& (0+255),w,b
 16750  001ECA  6F61               	movwf	(___fladd@b+1)& (0+255),b
 16751  001ECC  0EFF               	movlw	255
 16752  001ECE  216E               	addwfc	(??___fladd+6)& (0+255),w,b
 16753  001ED0  6F62               	movwf	(___fladd@b+2)& (0+255),b
 16754  001ED2  0EFF               	movlw	255
 16755  001ED4  216F               	addwfc	(??___fladd+7)& (0+255),w,b
 16756  001ED6  6F63               	movwf	(___fladd@b+3)& (0+255),b
 16757  001ED8  0E80               	movlw	128
 16758  001EDA  1B70               	xorwf	___fladd@signs& (0+255),f,b
 16759                           
 16760                           ; BSR set to: 0
 16761  001EDC  6D73               	negf	___fladd@grs& (0+255),b
 16762                           
 16763                           ; BSR set to: 0
 16764  001EDE  5173               	movf	___fladd@grs& (0+255),w,b
 16765  001EE0  A4D8               	btfss	status,2,c
 16766  001EE2  D00F               	goto	l2715
 16767                           
 16768                           ; BSR set to: 0
 16769  001EE4  0E01               	movlw	1
 16770  001EE6  2760               	addwf	___fladd@b& (0+255),f,b
 16771  001EE8  0E00               	movlw	0
 16772  001EEA  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 16773  001EEC  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 16774  001EEE  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 16775                           
 16776                           ; BSR set to: 0
 16777  001EF0  D008               	goto	l2715
 16778  001EF2                     l2713:
 16779                           
 16780                           ; BSR set to: 0
 16781                           
 16782                           ; BSR set to: 0
 16783  001EF2  5164               	movf	___fladd@a& (0+255),w,b
 16784  001EF4  5F60               	subwf	___fladd@b& (0+255),f,b
 16785  001EF6  5165               	movf	(___fladd@a+1)& (0+255),w,b
 16786  001EF8  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
 16787  001EFA  5166               	movf	(___fladd@a+2)& (0+255),w,b
 16788  001EFC  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
 16789  001EFE  5167               	movf	(___fladd@a+3)& (0+255),w,b
 16790  001F00  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
 16791  001F02                     l2715:
 16792                           
 16793                           ; BSR set to: 0
 16794  001F02  5160               	movf	___fladd@b& (0+255),w,b
 16795  001F04  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 16796  001F06  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 16797  001F08  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 16798  001F0A  A4D8               	btfss	status,2,c
 16799  001F0C  D01C               	goto	l2722
 16800                           
 16801                           ; BSR set to: 0
 16802  001F0E  5173               	movf	___fladd@grs& (0+255),w,b
 16803  001F10  A4D8               	btfss	status,2,c
 16804  001F12  D019               	goto	l2722
 16805                           
 16806                           ; BSR set to: 0
 16807  001F14  0E00               	movlw	0
 16808  001F16  6F60               	movwf	?___fladd& (0+255),b
 16809  001F18  0E00               	movlw	0
 16810  001F1A  6F61               	movwf	(?___fladd+1)& (0+255),b
 16811  001F1C  0E00               	movlw	0
 16812  001F1E  6F62               	movwf	(?___fladd+2)& (0+255),b
 16813  001F20  0E00               	movlw	0
 16814  001F22  6F63               	movwf	(?___fladd+3)& (0+255),b
 16815                           
 16816                           ; BSR set to: 0
 16817  001F24  0012               	return	
 16818  001F26                     
 16819                           ; BSR set to: 0
 16820                           
 16821                           ; BSR set to: 0
 16822  001F26  90D8               	bcf	status,0,c
 16823  001F28  3760               	rlcf	___fladd@b& (0+255),f,b
 16824  001F2A  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
 16825  001F2C  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
 16826  001F2E  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
 16827                           
 16828                           ; BSR set to: 0
 16829  001F30  BF73               	btfsc	___fladd@grs& (0+255),7,b
 16830                           
 16831                           ; BSR set to: 0
 16832  001F32  8160               	bsf	___fladd@b& (0+255),0,b
 16833                           
 16834                           ; BSR set to: 0
 16835                           
 16836                           ; BSR set to: 0
 16837  001F34  A173               	btfss	___fladd@grs& (0+255),0,b
 16838  001F36  D002               	goto	l2720
 16839                           
 16840                           ; BSR set to: 0
 16841  001F38  80D8               	bsf	status,0,c
 16842  001F3A  D001               	goto	L12
 16843  001F3C                     l2720:
 16844                           
 16845                           ; BSR set to: 0
 16846                           
 16847                           ; BSR set to: 0
 16848  001F3C  90D8               	bcf	status,0,c
 16849  001F3E                     L12:
 16850  001F3E  3773               	rlcf	___fladd@grs& (0+255),f,b
 16851                           
 16852                           ; BSR set to: 0
 16853                           
 16854                           ; BSR set to: 0
 16855  001F40  5172               	movf	___fladd@bexp& (0+255),w,b
 16856  001F42  A4D8               	btfss	status,2,c
 16857                           
 16858                           ; BSR set to: 0
 16859  001F44  0772               	decf	___fladd@bexp& (0+255),f,b
 16860  001F46                     l2722:
 16861                           
 16862                           ; BSR set to: 0
 16863                           
 16864                           ; BSR set to: 0
 16865                           
 16866                           ; BSR set to: 0
 16867  001F46  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
 16868  001F48  D7EE               	goto	l2718
 16869  001F4A                     u7140:
 16870                           
 16871                           ; BSR set to: 0
 16872                           
 16873                           ; BSR set to: 0
 16874                           
 16875                           ; BSR set to: 0
 16876  001F4A  0E00               	movlw	0
 16877  001F4C  6F71               	movwf	___fladd@aexp& (0+255),b
 16878                           
 16879                           ; BSR set to: 0
 16880  001F4E  AF73               	btfss	___fladd@grs& (0+255),7,b
 16881  001F50  D00A               	goto	l2727
 16882                           
 16883                           ; BSR set to: 0
 16884  001F52  C073  F068         	movff	___fladd@grs,??___fladd
 16885  001F56  0E7F               	movlw	127
 16886  001F58  1768               	andwf	??___fladd& (0+255),f,b
 16887  001F5A  A4D8               	btfss	status,2,c
 16888  001F5C  D002               	goto	u7170
 16889                           
 16890                           ; BSR set to: 0
 16891                           
 16892                           ; BSR set to: 0
 16893  001F5E  A160               	btfss	___fladd@b& (0+255),0,b
 16894  001F60  D002               	goto	l2727
 16895  001F62                     u7170:
 16896                           
 16897                           ; BSR set to: 0
 16898  001F62  0E01               	movlw	1
 16899  001F64  6F71               	movwf	___fladd@aexp& (0+255),b
 16900  001F66                     l2727:
 16901                           
 16902                           ; BSR set to: 0
 16903                           
 16904                           ; BSR set to: 0
 16905                           
 16906                           ; BSR set to: 0
 16907  001F66  5171               	movf	___fladd@aexp& (0+255),w,b
 16908  001F68  B4D8               	btfsc	status,2,c
 16909  001F6A  D020               	goto	l2730
 16910                           
 16911                           ; BSR set to: 0
 16912  001F6C  0E01               	movlw	1
 16913  001F6E  2760               	addwf	___fladd@b& (0+255),f,b
 16914  001F70  0E00               	movlw	0
 16915  001F72  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 16916  001F74  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 16917  001F76  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 16918                           
 16919                           ; BSR set to: 0
 16920  001F78  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 16921  001F7A  D018               	goto	l2730
 16922                           
 16923                           ; BSR set to: 0
 16924  001F7C  C060  F068         	movff	___fladd@b,??___fladd
 16925  001F80  C061  F069         	movff	___fladd@b+1,??___fladd+1
 16926  001F84  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 16927  001F88  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 16928  001F8C  356B               	rlcf	(??___fladd+3)& (0+255),w,b
 16929  001F8E  336B               	rrcf	(??___fladd+3)& (0+255),f,b
 16930  001F90  336A               	rrcf	(??___fladd+2)& (0+255),f,b
 16931  001F92  3369               	rrcf	(??___fladd+1)& (0+255),f,b
 16932  001F94  3368               	rrcf	??___fladd& (0+255),f,b
 16933  001F96  C068  F060         	movff	??___fladd,___fladd@b
 16934  001F9A  C069  F061         	movff	??___fladd+1,___fladd@b+1
 16935  001F9E  C06A  F062         	movff	??___fladd+2,___fladd@b+2
 16936  001FA2  C06B  F063         	movff	??___fladd+3,___fladd@b+3
 16937  001FA6  2972               	incf	___fladd@bexp& (0+255),w,b
 16938  001FA8  A4D8               	btfss	status,2,c
 16939                           
 16940                           ; BSR set to: 0
 16941  001FAA  2B72               	incf	___fladd@bexp& (0+255),f,b
 16942  001FAC                     l2730:
 16943                           
 16944                           ; BSR set to: 0
 16945                           
 16946                           ; BSR set to: 0
 16947                           
 16948                           ; BSR set to: 0
 16949                           
 16950                           ; BSR set to: 0
 16951  001FAC  2972               	incf	___fladd@bexp& (0+255),w,b
 16952  001FAE  B4D8               	btfsc	status,2,c
 16953  001FB0  D003               	goto	u7220
 16954                           
 16955                           ; BSR set to: 0
 16956  001FB2  5172               	movf	___fladd@bexp& (0+255),w,b
 16957  001FB4  A4D8               	btfss	status,2,c
 16958  001FB6  D00D               	goto	l2734
 16959  001FB8                     u7220:
 16960                           
 16961                           ; BSR set to: 0
 16962                           
 16963                           ; BSR set to: 0
 16964  001FB8  0E00               	movlw	0
 16965  001FBA  6F60               	movwf	___fladd@b& (0+255),b
 16966  001FBC  0E00               	movlw	0
 16967  001FBE  6F61               	movwf	(___fladd@b+1)& (0+255),b
 16968  001FC0  0E00               	movlw	0
 16969  001FC2  6F62               	movwf	(___fladd@b+2)& (0+255),b
 16970  001FC4  0E00               	movlw	0
 16971  001FC6  6F63               	movwf	(___fladd@b+3)& (0+255),b
 16972  001FC8  5172               	movf	___fladd@bexp& (0+255),w,b
 16973  001FCA  A4D8               	btfss	status,2,c
 16974  001FCC  D002               	goto	l2734
 16975                           
 16976                           ; BSR set to: 0
 16977  001FCE  0E00               	movlw	0
 16978  001FD0  6F70               	movwf	___fladd@signs& (0+255),b
 16979  001FD2                     l2734:
 16980                           
 16981                           ; BSR set to: 0
 16982                           
 16983                           ; BSR set to: 0
 16984                           
 16985                           ; BSR set to: 0
 16986  001FD2  A172               	btfss	___fladd@bexp& (0+255),0,b
 16987  001FD4  D002               	goto	l2735
 16988                           
 16989                           ; BSR set to: 0
 16990  001FD6  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 16991  001FD8  D001               	goto	l2736
 16992  001FDA                     l2735:
 16993                           
 16994                           ; BSR set to: 0
 16995                           
 16996                           ; BSR set to: 0
 16997  001FDA  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
 16998  001FDC                     l2736:
 16999                           
 17000                           ; BSR set to: 0
 17001                           
 17002                           ; BSR set to: 0
 17003  001FDC  90D8               	bcf	status,0,c
 17004  001FDE  3172               	rrcf	___fladd@bexp& (0+255),w,b
 17005  001FE0  6F63               	movwf	(___fladd@b+3)& (0+255),b
 17006                           
 17007                           ; BSR set to: 0
 17008  001FE2  BF70               	btfsc	___fladd@signs& (0+255),7,b
 17009                           
 17010                           ; BSR set to: 0
 17011  001FE4  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
 17012                           
 17013                           ; BSR set to: 0
 17014                           
 17015                           ; BSR set to: 0
 17016  001FE6  C060  F060         	movff	___fladd@b,?___fladd
 17017  001FEA  C061  F061         	movff	___fladd@b+1,?___fladd+1
 17018  001FEE  C062  F062         	movff	___fladd@b+2,?___fladd+2
 17019  001FF2  C063  F063         	movff	___fladd@b+3,?___fladd+3
 17020  001FF6  0012               	return	
 17021  001FF8                     __end_of___fladd:
 17022                           	opt stack 0
 17023                           tblptru	equ	0xFF8
 17024                           tblptrh	equ	0xFF7
 17025                           tblptrl	equ	0xFF6
 17026                           tablat	equ	0xFF5
 17027                           prodh	equ	0xFF4
 17028                           prodl	equ	0xFF3
 17029                           intcon	equ	0xFF2
 17030                           intcon3	equ	0xFF0
 17031                           postinc0	equ	0xFEE
 17032                           wreg	equ	0xFE8
 17033                           indf1	equ	0xFE7
 17034                           postdec1	equ	0xFE5
 17035                           fsr1h	equ	0xFE2
 17036                           fsr1l	equ	0xFE1
 17037                           indf2	equ	0xFDF
 17038                           fsr2h	equ	0xFDA
 17039                           fsr2l	equ	0xFD9
 17040                           status	equ	0xFD8
 17041                           
 17042 ;; *************** function _moteJoiningProcess *****************
 17043 ;; Defined at:
 17044 ;;		line 293 in file "../Includes/Board/MOTEapp.c"
 17045 ;; Parameters:    Size  Location     Type
 17046 ;;  messageReady    1    wreg     unsigned char 
 17047 ;;  changeStates    1   24[BANK0 ] unsigned char 
 17048 ;;  selectButton    1   25[BANK0 ] unsigned char 
 17049 ;; Auto vars:     Size  Location     Type
 17050 ;;  messageReady    1   29[BANK0 ] unsigned char 
 17051 ;;  readDataRate    1   27[BANK0 ] unsigned char 
 17052 ;;  joiningCompl    1   28[BANK0 ] unsigned char 
 17053 ;; Return value:  Size  Location     Type
 17054 ;;                  1    wreg      enum E6154
 17055 ;; Registers used:
 17056 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17057 ;; Tracked objects:
 17058 ;;		On entry : 0/0
 17059 ;;		On exit  : 0/0
 17060 ;;		Unchanged: 0/0
 17061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17062 ;;      Params:         0       2       0       0       0       0       0       0       0
 17063 ;;      Locals:         0       3       0       0       0       0       0       0       0
 17064 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17065 ;;      Totals:         0       6       0       0       0       0       0       0       0
 17066 ;;Total ram usage:        6 bytes
 17067 ;; Hardware stack levels used:    1
 17068 ;; Hardware stack levels required when called:   16
 17069 ;; This function calls:
 17070 ;;		_DATAEE_WriteByte
 17071 ;;		_moteApp_delayms
 17072 ;;		_oled_clear
 17073 ;;		_oled_putString
 17074 ;;		_sendCommand
 17075 ;;		_strcmp
 17076 ;;		_strncmp
 17077 ;; This function is called by:
 17078 ;;		_moteHandler
 17079 ;; This function uses a non-reentrant model
 17080 ;;
 17081                           
 17082                           	psect	text51
 17083  00138E                     __ptext51:
 17084                           	opt stack 0
 17085  00138E                     _moteJoiningProcess:
 17086                           	opt stack 13
 17087                           
 17088                           ; BSR set to: 0
 17089                           ;incstack = 0
 17090                           ;moteJoiningProcess@messageReady stored from wreg
 17091  00138E  0100               	movlb	0	; () banked
 17092  001390  6F7D               	movwf	moteJoiningProcess@messageReady& (0+255),b
 17093                           
 17094                           ;MOTEapp.c: 295: bool joiningComplete = 0;
 17095  001392  0E00               	movlw	0
 17096  001394  0100               	movlb	0	; () banked
 17097  001396  6F7C               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 17098                           
 17099                           ;MOTEapp.c: 297: switch (activeState)
 17100  001398  D2C0               	goto	l390
 17101  00139A                     
 17102                           ; BSR set to: 0
 17103                           ;MOTEapp.c: 300: while(1);
 17104  00139A  D7FF               	goto	l391
 17105  00139C                     
 17106                           ;MOTEapp.c: 303: sendCommand("sys reset");
 17107  00139C  0EFC               	movlw	low STR_30
 17108  00139E  0100               	movlb	0	; () banked
 17109  0013A0  6F61               	movwf	sendCommand@string& (0+255),b
 17110  0013A2  0E7E               	movlw	high STR_30
 17111  0013A4  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17112  0013A6  ECC0  F02D         	call	_sendCommand	;wreg free
 17113  0013AA  D176               	goto	l10605
 17114  0013AC                     
 17115                           ; BSR set to: 0
 17116                           ;MOTEapp.c: 307: if (selectButton)
 17117                           
 17118                           ; BSR set to: 0
 17119  0013AC  5179               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 17120  0013AE  B4D8               	btfsc	status,2,c
 17121  0013B0  D002               	goto	l398
 17122                           
 17123                           ; BSR set to: 0
 17124                           ;MOTEapp.c: 308: {
 17125                           ;MOTEapp.c: 309: activeState = moteComFailure;
 17126  0013B2  0E0A               	movlw	10
 17127  0013B4  6FF4               	movwf	_activeState& (0+255),b
 17128  0013B6                     l398:
 17129                           
 17130                           ; BSR set to: 0
 17131                           ;MOTEapp.c: 310: }
 17132                           ;MOTEapp.c: 311: if ( messageReady )
 17133  0013B6  517D               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 17134  0013B8  B4D8               	btfsc	status,2,c
 17135  0013BA  D2D3               	goto	l395
 17136                           
 17137                           ; BSR set to: 0
 17138                           ;MOTEapp.c: 312: {
 17139                           ;MOTEapp.c: 313: if(strncmp(moduleResonseBuffer, "RN24", 4) == 0)
 17140  0013BC  0E65               	movlw	low _moduleResonseBuffer
 17141  0013BE  6F60               	movwf	strncmp@s1& (0+255),b
 17142  0013C0  0E01               	movlw	high _moduleResonseBuffer
 17143  0013C2  6F61               	movwf	(strncmp@s1+1)& (0+255),b
 17144  0013C4  0EB8               	movlw	low STR_31
 17145  0013C6  6F62               	movwf	strncmp@s2& (0+255),b
 17146  0013C8  0E7F               	movlw	high STR_31
 17147  0013CA  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 17148  0013CC  0E00               	movlw	0
 17149  0013CE  6F65               	movwf	(strncmp@len+1)& (0+255),b
 17150  0013D0  0E04               	movlw	4
 17151  0013D2  6F64               	movwf	strncmp@len& (0+255),b
 17152  0013D4  ECEE  F025         	call	_strncmp	;wreg free
 17153  0013D8  0100               	movlb	0	; () banked
 17154  0013DA  5160               	movf	?_strncmp& (0+255),w,b
 17155  0013DC  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 17156  0013DE  A4D8               	btfss	status,2,c
 17157  0013E0  D038               	goto	l400
 17158                           
 17159                           ; BSR set to: 0
 17160                           ;MOTEapp.c: 314: {
 17161                           ;MOTEapp.c: 315: rnModule = rn2483;
 17162  0013E2  0E00               	movlw	0
 17163  0013E4  6FEE               	movwf	_rnModule& (0+255),b
 17164                           
 17165                           ; BSR set to: 0
 17166                           ;MOTEapp.c: 316: oled_clear();
 17167  0013E6  ECF0  F02F         	call	_oled_clear	;wreg free
 17168                           
 17169                           ;MOTEapp.c: 317: oled_putString(" Joining Method ",0,0);
 17170  0013EA  0E43               	movlw	low STR_32
 17171  0013EC  0100               	movlb	0	; () banked
 17172  0013EE  6F72               	movwf	oled_putString@string& (0+255),b
 17173  0013F0  0E7B               	movlw	high STR_32
 17174  0013F2  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17175  0013F4  5172               	movf	oled_putString@string& (0+255),w,b
 17176  0013F6  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17177  0013F8  A4D8               	btfss	status,2,c
 17178  0013FA  0E00               	movlw	low (__mediumconst shr (0+16))
 17179  0013FC  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17180  0013FE  0E00               	movlw	0
 17181  001400  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17182  001402  0E00               	movlw	0
 17183  001404  6F76               	movwf	oled_putString@start_page& (0+255),b
 17184  001406  EC76  F028         	call	_oled_putString	;wreg free
 17185                           
 17186                           ;MOTEapp.c: 318: oled_putString("<- ABP   OTAA ->", 0,2);
 17187  00140A  0E98               	movlw	low STR_33
 17188  00140C  0100               	movlb	0	; () banked
 17189  00140E  6F72               	movwf	oled_putString@string& (0+255),b
 17190  001410  0E7B               	movlw	high STR_33
 17191  001412  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17192  001414  5172               	movf	oled_putString@string& (0+255),w,b
 17193  001416  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17194  001418  A4D8               	btfss	status,2,c
 17195  00141A  0E00               	movlw	low (__mediumconst shr (0+16))
 17196  00141C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17197  00141E  0E00               	movlw	0
 17198  001420  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17199  001422  0E02               	movlw	2
 17200  001424  6F76               	movwf	oled_putString@start_page& (0+255),b
 17201  001426  EC76  F028         	call	_oled_putString	;wreg free
 17202                           
 17203                           ;MOTEapp.c: 319: oled_putString("  (S2)   (S3)   ", 0,3);
 17204  00142A  0EEE               	movlw	low STR_34
 17205  00142C  0100               	movlb	0	; () banked
 17206  00142E  6F72               	movwf	oled_putString@string& (0+255),b
 17207  001430  0E7A               	movlw	high STR_34
 17208  001432  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17209  001434  5172               	movf	oled_putString@string& (0+255),w,b
 17210  001436  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17211  001438  A4D8               	btfss	status,2,c
 17212  00143A  0E00               	movlw	low (__mediumconst shr (0+16))
 17213  00143C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17214  00143E  0E00               	movlw	0
 17215  001440  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17216  001442  0E03               	movlw	3
 17217  001444  6F76               	movwf	oled_putString@start_page& (0+255),b
 17218  001446  EC76  F028         	call	_oled_putString	;wreg free
 17219  00144A  D04A               	goto	l10543
 17220  00144C                     L13:
 17221  00144C  0100               	movlb	0	; () banked
 17222  00144E                     L14:
 17223  00144E  6FF4               	movwf	_activeState& (0+255),b
 17224                           
 17225                           ;MOTEapp.c: 321: }
 17226  001450  D288               	goto	l395
 17227  001452                     l400:
 17228                           
 17229                           ; BSR set to: 0
 17230                           ;MOTEapp.c: 322: else if(strncmp(moduleResonseBuffer, "RN29", 4) == 0)
 17231                           
 17232                           ; BSR set to: 0
 17233  001452  0E65               	movlw	low _moduleResonseBuffer
 17234  001454  6F60               	movwf	strncmp@s1& (0+255),b
 17235  001456  0E01               	movlw	high _moduleResonseBuffer
 17236  001458  6F61               	movwf	(strncmp@s1+1)& (0+255),b
 17237  00145A  0EBD               	movlw	low STR_35
 17238  00145C  6F62               	movwf	strncmp@s2& (0+255),b
 17239  00145E  0E7F               	movlw	high STR_35
 17240  001460  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 17241  001462  0E00               	movlw	0
 17242  001464  6F65               	movwf	(strncmp@len+1)& (0+255),b
 17243  001466  0E04               	movlw	4
 17244  001468  6F64               	movwf	strncmp@len& (0+255),b
 17245  00146A  ECEE  F025         	call	_strncmp	;wreg free
 17246  00146E  0100               	movlb	0	; () banked
 17247  001470  5160               	movf	?_strncmp& (0+255),w,b
 17248  001472  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 17249  001474  A4D8               	btfss	status,2,c
 17250  001476  D036               	goto	l402
 17251                           
 17252                           ; BSR set to: 0
 17253                           ;MOTEapp.c: 323: {
 17254                           ;MOTEapp.c: 324: rnModule = rn2903;
 17255  001478  0E01               	movlw	1
 17256  00147A  6FEE               	movwf	_rnModule& (0+255),b
 17257                           
 17258                           ; BSR set to: 0
 17259                           ;MOTEapp.c: 325: oled_clear();
 17260  00147C  ECF0  F02F         	call	_oled_clear	;wreg free
 17261                           
 17262                           ;MOTEapp.c: 326: oled_putString(" Joining Method ",0,0);
 17263  001480  0E43               	movlw	low STR_32
 17264  001482  0100               	movlb	0	; () banked
 17265  001484  6F72               	movwf	oled_putString@string& (0+255),b
 17266  001486  0E7B               	movlw	high STR_32
 17267  001488  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17268  00148A  5172               	movf	oled_putString@string& (0+255),w,b
 17269  00148C  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17270  00148E  A4D8               	btfss	status,2,c
 17271  001490  0E00               	movlw	low (__mediumconst shr (0+16))
 17272  001492  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17273  001494  0E00               	movlw	0
 17274  001496  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17275  001498  0E00               	movlw	0
 17276  00149A  6F76               	movwf	oled_putString@start_page& (0+255),b
 17277  00149C  EC76  F028         	call	_oled_putString	;wreg free
 17278                           
 17279                           ;MOTEapp.c: 327: oled_putString("<- ABP   OTAA ->", 0,2);
 17280  0014A0  0E98               	movlw	low STR_33
 17281  0014A2  0100               	movlb	0	; () banked
 17282  0014A4  6F72               	movwf	oled_putString@string& (0+255),b
 17283  0014A6  0E7B               	movlw	high STR_33
 17284  0014A8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17285  0014AA  5172               	movf	oled_putString@string& (0+255),w,b
 17286  0014AC  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17287  0014AE  A4D8               	btfss	status,2,c
 17288  0014B0  0E00               	movlw	low (__mediumconst shr (0+16))
 17289  0014B2  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17290  0014B4  0E00               	movlw	0
 17291  0014B6  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17292  0014B8  0E02               	movlw	2
 17293  0014BA  6F76               	movwf	oled_putString@start_page& (0+255),b
 17294  0014BC  EC76  F028         	call	_oled_putString	;wreg free
 17295                           
 17296                           ;MOTEapp.c: 328: oled_putString("  (S2)   (S3)   ", 0,3);
 17297  0014C0  0EEE               	movlw	low STR_34
 17298  0014C2  0100               	movlb	0	; () banked
 17299  0014C4  6F72               	movwf	oled_putString@string& (0+255),b
 17300  0014C6  0E7A               	movlw	high STR_34
 17301  0014C8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17302  0014CA  5172               	movf	oled_putString@string& (0+255),w,b
 17303  0014CC  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17304  0014CE  A4D8               	btfss	status,2,c
 17305  0014D0  0E00               	movlw	low (__mediumconst shr (0+16))
 17306  0014D2  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17307  0014D4  0E00               	movlw	0
 17308  0014D6  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17309  0014D8  0E03               	movlw	3
 17310  0014DA  6F76               	movwf	oled_putString@start_page& (0+255),b
 17311  0014DC  EC76  F028         	call	_oled_putString	;wreg free
 17312  0014E0                     l10543:
 17313                           
 17314                           ;MOTEapp.c: 329: activeState = moteJoinMethod;
 17315  0014E0  0E02               	movlw	2
 17316  0014E2  D7B4               	goto	L13
 17317  0014E4                     l402:
 17318                           
 17319                           ; BSR set to: 0
 17320                           ;MOTEapp.c: 331: else
 17321                           ;MOTEapp.c: 332: {
 17322                           ;MOTEapp.c: 333: sendCommand("sys reset");
 17323                           
 17324                           ; BSR set to: 0
 17325  0014E4  0EFC               	movlw	low STR_30
 17326  0014E6  6F61               	movwf	sendCommand@string& (0+255),b
 17327  0014E8  0E7E               	movlw	high STR_30
 17328  0014EA  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17329  0014EC  ECC0  F02D         	call	_sendCommand	;wreg free
 17330                           
 17331                           ;MOTEapp.c: 334: moteApp_delayms(25);
 17332  0014F0  0E00               	movlw	0
 17333  0014F2  0100               	movlb	0	; () banked
 17334  0014F4  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 17335  0014F6  0E19               	movlw	25
 17336  0014F8  6F60               	movwf	moteApp_delayms@length& (0+255),b
 17337  0014FA  EC0D  F02E         	call	_moteApp_delayms	;wreg free
 17338                           
 17339                           ;MOTEapp.c: 335: activeState = moteStartup;
 17340  0014FE  0E00               	movlw	0
 17341  001500  D7A5               	goto	L13
 17342  001502                     
 17343                           ; BSR set to: 0
 17344                           ;MOTEapp.c: 340: if (changeStates)
 17345                           
 17346                           ; BSR set to: 0
 17347  001502  5178               	movf	moteJoiningProcess@changeStates& (0+255),w,b
 17348  001504  B4D8               	btfsc	status,2,c
 17349  001506  D01E               	goto	l405
 17350                           
 17351                           ; BSR set to: 0
 17352                           ;MOTEapp.c: 341: {
 17353                           ;MOTEapp.c: 342: oled_putString("  (S2)          ", 0,3);
 17354  001508  0EBB               	movlw	low STR_40
 17355  00150A  6F72               	movwf	oled_putString@string& (0+255),b
 17356  00150C  0E7A               	movlw	high STR_40
 17357  00150E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17358  001510  5172               	movf	oled_putString@string& (0+255),w,b
 17359  001512  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17360  001514  A4D8               	btfss	status,2,c
 17361  001516  0E00               	movlw	low (__mediumconst shr (0+16))
 17362  001518  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17363  00151A  0E00               	movlw	0
 17364  00151C  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17365  00151E  0E03               	movlw	3
 17366  001520  6F76               	movwf	oled_putString@start_page& (0+255),b
 17367  001522  EC76  F028         	call	_oled_putString	;wreg free
 17368                           
 17369                           ;MOTEapp.c: 343: moteApp_delayms(500);
 17370  001526  0E01               	movlw	1
 17371  001528  0100               	movlb	0	; () banked
 17372  00152A  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 17373  00152C  0EF4               	movlw	244
 17374  00152E  6F60               	movwf	moteApp_delayms@length& (0+255),b
 17375  001530  EC0D  F02E         	call	_moteApp_delayms	;wreg free
 17376                           
 17377                           ;MOTEapp.c: 344: sendCommand("mac join abp");
 17378  001534  0EE7               	movlw	low STR_41
 17379  001536  0100               	movlb	0	; () banked
 17380  001538  6F61               	movwf	sendCommand@string& (0+255),b
 17381  00153A  0E7D               	movlw	high STR_41
 17382  00153C  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17383  00153E  ECC0  F02D         	call	_sendCommand	;wreg free
 17384  001542  D06D               	goto	l10589
 17385  001544                     l405:
 17386                           
 17387                           ; BSR set to: 0
 17388                           ;MOTEapp.c: 347: else if (selectButton)
 17389                           
 17390                           ; BSR set to: 0
 17391  001544  5179               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 17392  001546  B4D8               	btfsc	status,2,c
 17393  001548  D20C               	goto	l395
 17394                           
 17395                           ; BSR set to: 0
 17396                           ;MOTEapp.c: 348: {
 17397                           ;MOTEapp.c: 349: oled_putString("         (S3)   ", 0,3);
 17398  00154A  0EDD               	movlw	low STR_42
 17399  00154C  6F72               	movwf	oled_putString@string& (0+255),b
 17400  00154E  0E7A               	movlw	high STR_42
 17401  001550  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17402  001552  5172               	movf	oled_putString@string& (0+255),w,b
 17403  001554  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17404  001556  A4D8               	btfss	status,2,c
 17405  001558  0E00               	movlw	low (__mediumconst shr (0+16))
 17406  00155A  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17407  00155C  0E00               	movlw	0
 17408  00155E  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17409  001560  0E03               	movlw	3
 17410  001562  6F76               	movwf	oled_putString@start_page& (0+255),b
 17411  001564  EC76  F028         	call	_oled_putString	;wreg free
 17412                           
 17413                           ;MOTEapp.c: 350: moteApp_delayms(500);
 17414  001568  0E01               	movlw	1
 17415  00156A  0100               	movlb	0	; () banked
 17416  00156C  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 17417  00156E  0EF4               	movlw	244
 17418  001570  6F60               	movwf	moteApp_delayms@length& (0+255),b
 17419  001572  EC0D  F02E         	call	_moteApp_delayms	;wreg free
 17420                           
 17421                           ;MOTEapp.c: 351: sendCommand("mac join otaa");
 17422  001576  0E3B               	movlw	low STR_43
 17423  001578  0100               	movlb	0	; () banked
 17424  00157A  6F61               	movwf	sendCommand@string& (0+255),b
 17425  00157C  0E7D               	movlw	high STR_43
 17426  00157E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17427  001580  ECC0  F02D         	call	_sendCommand	;wreg free
 17428  001584  D161               	goto	l10655
 17429  001586                     
 17430                           ; BSR set to: 0
 17431                           ;MOTEapp.c: 356: if ( messageReady )
 17432                           
 17433                           ; BSR set to: 0
 17434  001586  517D               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 17435  001588  B4D8               	btfsc	status,2,c
 17436  00158A  D1EB               	goto	l395
 17437                           
 17438                           ; BSR set to: 0
 17439                           ;MOTEapp.c: 357: {
 17440                           ;MOTEapp.c: 358: if(strcmp(moduleResonseBuffer, "ok") == 0)
 17441  00158C  0E65               	movlw	low _moduleResonseBuffer
 17442  00158E  6F60               	movwf	strcmp@s1& (0+255),b
 17443  001590  0E01               	movlw	high _moduleResonseBuffer
 17444  001592  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17445  001594  0EF7               	movlw	low STR_44
 17446  001596  6F62               	movwf	strcmp@s2& (0+255),b
 17447  001598  0E7F               	movlw	high STR_44
 17448  00159A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17449  00159C  EC05  F02C         	call	_strcmp	;wreg free
 17450  0015A0  0100               	movlb	0	; () banked
 17451  0015A2  5160               	movf	?_strcmp& (0+255),w,b
 17452  0015A4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17453  0015A6  A4D8               	btfss	status,2,c
 17454  0015A8  D002               	goto	l410
 17455                           
 17456                           ; BSR set to: 0
 17457                           ;MOTEapp.c: 359: {
 17458                           ;MOTEapp.c: 360: activeState = moteWaitAbp;
 17459  0015AA  0E04               	movlw	4
 17460  0015AC  D750               	goto	L14
 17461  0015AE                     l410:
 17462                           
 17463                           ; BSR set to: 0
 17464                           ;MOTEapp.c: 362: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 17465                           
 17466                           ; BSR set to: 0
 17467  0015AE  0E65               	movlw	low _moduleResonseBuffer
 17468  0015B0  6F60               	movwf	strcmp@s1& (0+255),b
 17469  0015B2  0E01               	movlw	high _moduleResonseBuffer
 17470  0015B4  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17471  0015B6  0E57               	movlw	low STR_45
 17472  0015B8  6F62               	movwf	strcmp@s2& (0+255),b
 17473  0015BA  0E7D               	movlw	high STR_45
 17474  0015BC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17475  0015BE  EC05  F02C         	call	_strcmp	;wreg free
 17476  0015C2  0100               	movlb	0	; () banked
 17477  0015C4  5160               	movf	?_strcmp& (0+255),w,b
 17478  0015C6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17479  0015C8  A4D8               	btfss	status,2,c
 17480  0015CA  D023               	goto	l412
 17481                           
 17482                           ; BSR set to: 0
 17483                           ;MOTEapp.c: 363: {
 17484                           ;MOTEapp.c: 364: oled_clear();
 17485  0015CC  ECF0  F02F         	call	_oled_clear	;wreg free
 17486                           
 17487                           ;MOTEapp.c: 365: oled_putString("Valid Keys",0,0);
 17488  0015D0  0EB4               	movlw	low STR_46
 17489  0015D2  0100               	movlb	0	; () banked
 17490  0015D4  6F72               	movwf	oled_putString@string& (0+255),b
 17491  0015D6  0E7E               	movlw	high STR_46
 17492  0015D8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17493  0015DA  5172               	movf	oled_putString@string& (0+255),w,b
 17494  0015DC  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17495  0015DE  A4D8               	btfss	status,2,c
 17496  0015E0  0E00               	movlw	low (__mediumconst shr (0+16))
 17497  0015E2  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17498  0015E4  0E00               	movlw	0
 17499  0015E6  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17500  0015E8  0E00               	movlw	0
 17501  0015EA  6F76               	movwf	oled_putString@start_page& (0+255),b
 17502  0015EC  EC76  F028         	call	_oled_putString	;wreg free
 17503                           
 17504                           ;MOTEapp.c: 366: oled_putString("Required",0,1);
 17505  0015F0  0E19               	movlw	low STR_47
 17506  0015F2  0100               	movlb	0	; () banked
 17507  0015F4  6F72               	movwf	oled_putString@string& (0+255),b
 17508  0015F6  0E7F               	movlw	high STR_47
 17509  0015F8  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17510  0015FA  5172               	movf	oled_putString@string& (0+255),w,b
 17511  0015FC  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17512  0015FE  A4D8               	btfss	status,2,c
 17513  001600  0E00               	movlw	low (__mediumconst shr (0+16))
 17514  001602  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17515  001604  0E00               	movlw	0
 17516  001606  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17517  001608  0E01               	movlw	1
 17518  00160A  6F76               	movwf	oled_putString@start_page& (0+255),b
 17519  00160C  EC76  F028         	call	_oled_putString	;wreg free
 17520  001610  D08A               	goto	l10621
 17521  001612                     l412:
 17522                           
 17523                           ; BSR set to: 0
 17524                           ;MOTEapp.c: 369: else
 17525                           ;MOTEapp.c: 370: {
 17526                           ;MOTEapp.c: 371: sendCommand("mac join abp");
 17527                           
 17528                           ; BSR set to: 0
 17529  001612  0EE7               	movlw	low STR_41
 17530  001614  6F61               	movwf	sendCommand@string& (0+255),b
 17531  001616  0E7D               	movlw	high STR_41
 17532  001618  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17533  00161A  ECC0  F02D         	call	_sendCommand	;wreg free
 17534  00161E                     l10589:
 17535                           
 17536                           ;MOTEapp.c: 372: activeState = moteCheckAbp;
 17537  00161E  0E03               	movlw	3
 17538  001620  D715               	goto	L13
 17539  001622                     
 17540                           ; BSR set to: 0
 17541                           ;MOTEapp.c: 377: if ( messageReady )
 17542                           
 17543                           ; BSR set to: 0
 17544  001622  517D               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 17545  001624  B4D8               	btfsc	status,2,c
 17546  001626  D19D               	goto	l395
 17547                           
 17548                           ; BSR set to: 0
 17549                           ;MOTEapp.c: 378: {
 17550                           ;MOTEapp.c: 379: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 17551  001628  0E65               	movlw	low _moduleResonseBuffer
 17552  00162A  6F60               	movwf	strcmp@s1& (0+255),b
 17553  00162C  0E01               	movlw	high _moduleResonseBuffer
 17554  00162E  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17555  001630  0E22               	movlw	low STR_49
 17556  001632  6F62               	movwf	strcmp@s2& (0+255),b
 17557  001634  0E7F               	movlw	high STR_49
 17558  001636  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17559  001638  EC05  F02C         	call	_strcmp	;wreg free
 17560  00163C  0100               	movlb	0	; () banked
 17561  00163E  5160               	movf	?_strcmp& (0+255),w,b
 17562  001640  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17563  001642  A4D8               	btfss	status,2,c
 17564  001644  D023               	goto	l416
 17565                           
 17566                           ; BSR set to: 0
 17567                           ;MOTEapp.c: 380: {
 17568                           ;MOTEapp.c: 381: oled_clear();
 17569  001646  ECF0  F02F         	call	_oled_clear	;wreg free
 17570                           
 17571                           ;MOTEapp.c: 382: oled_putString("ABP Join ",0,0);
 17572  00164A  0ED4               	movlw	low STR_50
 17573  00164C  0100               	movlb	0	; () banked
 17574  00164E  6F72               	movwf	oled_putString@string& (0+255),b
 17575  001650  0E7E               	movlw	high STR_50
 17576  001652  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17577  001654  5172               	movf	oled_putString@string& (0+255),w,b
 17578  001656  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17579  001658  A4D8               	btfss	status,2,c
 17580  00165A  0E00               	movlw	low (__mediumconst shr (0+16))
 17581  00165C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17582  00165E  0E00               	movlw	0
 17583  001660  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17584  001662  0E00               	movlw	0
 17585  001664  6F76               	movwf	oled_putString@start_page& (0+255),b
 17586  001666  EC76  F028         	call	_oled_putString	;wreg free
 17587                           
 17588                           ;MOTEapp.c: 383: oled_putString("Successful",0,1);
 17589  00166A  0E9E               	movlw	low STR_51
 17590  00166C  0100               	movlb	0	; () banked
 17591  00166E  6F72               	movwf	oled_putString@string& (0+255),b
 17592  001670  0E7E               	movlw	high STR_51
 17593  001672  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17594  001674  5172               	movf	oled_putString@string& (0+255),w,b
 17595  001676  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17596  001678  A4D8               	btfss	status,2,c
 17597  00167A  0E00               	movlw	low (__mediumconst shr (0+16))
 17598  00167C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17599  00167E  0E00               	movlw	0
 17600  001680  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17601  001682  0E01               	movlw	1
 17602  001684  6F76               	movwf	oled_putString@start_page& (0+255),b
 17603  001686  EC76  F028         	call	_oled_putString	;wreg free
 17604  00168A  D0A4               	goto	l10643
 17605  00168C                     l416:
 17606                           
 17607                           ; BSR set to: 0
 17608                           ;MOTEapp.c: 386: else
 17609                           ;MOTEapp.c: 387: {
 17610                           ;MOTEapp.c: 388: sendCommand("mac reset");
 17611                           
 17612                           ; BSR set to: 0
 17613  00168C  0EF2               	movlw	low STR_52
 17614  00168E  6F61               	movwf	sendCommand@string& (0+255),b
 17615  001690  0E7E               	movlw	high STR_52
 17616  001692  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17617  001694  ECC0  F02D         	call	_sendCommand	;wreg free
 17618  001698                     l10605:
 17619                           
 17620                           ;MOTEapp.c: 389: activeState = moteReset;
 17621  001698  0E01               	movlw	1
 17622  00169A  D6D8               	goto	L13
 17623  00169C                     
 17624                           ; BSR set to: 0
 17625                           ;MOTEapp.c: 395: if ( messageReady )
 17626                           
 17627                           ; BSR set to: 0
 17628  00169C  517D               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 17629  00169E  B4D8               	btfsc	status,2,c
 17630  0016A0  D160               	goto	l395
 17631                           
 17632                           ; BSR set to: 0
 17633                           ;MOTEapp.c: 396: {
 17634                           ;MOTEapp.c: 397: if(strcmp(moduleResonseBuffer, "ok") == 0)
 17635  0016A2  0E65               	movlw	low _moduleResonseBuffer
 17636  0016A4  6F60               	movwf	strcmp@s1& (0+255),b
 17637  0016A6  0E01               	movlw	high _moduleResonseBuffer
 17638  0016A8  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17639  0016AA  0EF7               	movlw	low STR_44
 17640  0016AC  6F62               	movwf	strcmp@s2& (0+255),b
 17641  0016AE  0E7F               	movlw	high STR_44
 17642  0016B0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17643  0016B2  EC05  F02C         	call	_strcmp	;wreg free
 17644  0016B6  0100               	movlb	0	; () banked
 17645  0016B8  5160               	movf	?_strcmp& (0+255),w,b
 17646  0016BA  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17647  0016BC  A4D8               	btfss	status,2,c
 17648  0016BE  D002               	goto	l420
 17649                           
 17650                           ; BSR set to: 0
 17651                           ;MOTEapp.c: 398: {
 17652                           ;MOTEapp.c: 399: activeState = moteWaitOtaa;
 17653  0016C0  0E06               	movlw	6
 17654  0016C2  D6C5               	goto	L14
 17655  0016C4                     l420:
 17656                           
 17657                           ; BSR set to: 0
 17658                           ;MOTEapp.c: 401: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 17659                           
 17660                           ; BSR set to: 0
 17661  0016C4  0E65               	movlw	low _moduleResonseBuffer
 17662  0016C6  6F60               	movwf	strcmp@s1& (0+255),b
 17663  0016C8  0E01               	movlw	high _moduleResonseBuffer
 17664  0016CA  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17665  0016CC  0E57               	movlw	low STR_45
 17666  0016CE  6F62               	movwf	strcmp@s2& (0+255),b
 17667  0016D0  0E7D               	movlw	high STR_45
 17668  0016D2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17669  0016D4  EC05  F02C         	call	_strcmp	;wreg free
 17670  0016D8  0100               	movlb	0	; () banked
 17671  0016DA  5160               	movf	?_strcmp& (0+255),w,b
 17672  0016DC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17673  0016DE  A4D8               	btfss	status,2,c
 17674  0016E0  D024               	goto	l422
 17675                           
 17676                           ; BSR set to: 0
 17677                           ;MOTEapp.c: 402: {
 17678                           ;MOTEapp.c: 403: oled_clear();
 17679  0016E2  ECF0  F02F         	call	_oled_clear	;wreg free
 17680                           
 17681                           ;MOTEapp.c: 404: oled_putString("Valid Keys",0,0);
 17682  0016E6  0EB4               	movlw	low STR_46
 17683  0016E8  0100               	movlb	0	; () banked
 17684  0016EA  6F72               	movwf	oled_putString@string& (0+255),b
 17685  0016EC  0E7E               	movlw	high STR_46
 17686  0016EE  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17687  0016F0  5172               	movf	oled_putString@string& (0+255),w,b
 17688  0016F2  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17689  0016F4  A4D8               	btfss	status,2,c
 17690  0016F6  0E00               	movlw	low (__mediumconst shr (0+16))
 17691  0016F8  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17692  0016FA  0E00               	movlw	0
 17693  0016FC  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17694  0016FE  0E00               	movlw	0
 17695  001700  6F76               	movwf	oled_putString@start_page& (0+255),b
 17696  001702  EC76  F028         	call	_oled_putString	;wreg free
 17697                           
 17698                           ;MOTEapp.c: 405: oled_putString("Required",0,1);
 17699  001706  0E19               	movlw	low STR_47
 17700  001708  0100               	movlb	0	; () banked
 17701  00170A  6F72               	movwf	oled_putString@string& (0+255),b
 17702  00170C  0E7F               	movlw	high STR_47
 17703  00170E  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17704  001710  5172               	movf	oled_putString@string& (0+255),w,b
 17705  001712  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17706  001714  A4D8               	btfss	status,2,c
 17707  001716  0E00               	movlw	low (__mediumconst shr (0+16))
 17708  001718  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17709  00171A  0E00               	movlw	0
 17710  00171C  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17711  00171E  0E01               	movlw	1
 17712  001720  6F76               	movwf	oled_putString@start_page& (0+255),b
 17713  001722  EC76  F028         	call	_oled_putString	;wreg free
 17714  001726                     l10621:
 17715                           
 17716                           ;MOTEapp.c: 406: activeState = moteNeedKeys;
 17717  001726  0E09               	movlw	9
 17718  001728  D691               	goto	L13
 17719  00172A                     l422:
 17720                           
 17721                           ; BSR set to: 0
 17722                           ;MOTEapp.c: 408: else if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 17723                           
 17724                           ; BSR set to: 0
 17725  00172A  0E65               	movlw	low _moduleResonseBuffer
 17726  00172C  6F60               	movwf	strcmp@s1& (0+255),b
 17727  00172E  0E01               	movlw	high _moduleResonseBuffer
 17728  001730  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17729  001732  0E49               	movlw	low STR_57
 17730  001734  6F62               	movwf	strcmp@s2& (0+255),b
 17731  001736  0E7D               	movlw	high STR_57
 17732  001738  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17733  00173A  EC05  F02C         	call	_strcmp	;wreg free
 17734  00173E  0100               	movlb	0	; () banked
 17735  001740  5160               	movf	?_strcmp& (0+255),w,b
 17736  001742  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17737  001744  A4D8               	btfss	status,2,c
 17738  001746  D007               	goto	l424
 17739                           
 17740                           ; BSR set to: 0
 17741                           ;MOTEapp.c: 409: {
 17742                           ;MOTEapp.c: 410: sendCommand("mac join otaa");
 17743  001748  0E3B               	movlw	low STR_43
 17744  00174A  6F61               	movwf	sendCommand@string& (0+255),b
 17745  00174C  0E7D               	movlw	high STR_43
 17746  00174E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17747  001750  ECC0  F02D         	call	_sendCommand	;wreg free
 17748  001754  D079               	goto	l10655
 17749  001756                     l424:
 17750                           
 17751                           ; BSR set to: 0
 17752                           ;MOTEapp.c: 413: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 17753                           
 17754                           ; BSR set to: 0
 17755  001756  0E65               	movlw	low _moduleResonseBuffer
 17756  001758  6F60               	movwf	strcmp@s1& (0+255),b
 17757  00175A  0E01               	movlw	high _moduleResonseBuffer
 17758  00175C  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17759  00175E  0E93               	movlw	low STR_59
 17760  001760  6F62               	movwf	strcmp@s2& (0+255),b
 17761  001762  0E7E               	movlw	high STR_59
 17762  001764  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17763  001766  EC05  F02C         	call	_strcmp	;wreg free
 17764  00176A  D07A               	goto	L15
 17765  00176C                     
 17766                           ; BSR set to: 0
 17767                           ;MOTEapp.c: 420: if ( messageReady )
 17768                           
 17769                           ; BSR set to: 0
 17770  00176C  517D               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 17771  00176E  B4D8               	btfsc	status,2,c
 17772  001770  D0F8               	goto	l395
 17773                           
 17774                           ; BSR set to: 0
 17775                           ;MOTEapp.c: 421: {
 17776                           ;MOTEapp.c: 422: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 17777  001772  0E65               	movlw	low _moduleResonseBuffer
 17778  001774  6F60               	movwf	strcmp@s1& (0+255),b
 17779  001776  0E01               	movlw	high _moduleResonseBuffer
 17780  001778  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17781  00177A  0E22               	movlw	low STR_49
 17782  00177C  6F62               	movwf	strcmp@s2& (0+255),b
 17783  00177E  0E7F               	movlw	high STR_49
 17784  001780  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17785  001782  EC05  F02C         	call	_strcmp	;wreg free
 17786  001786  0100               	movlb	0	; () banked
 17787  001788  5160               	movf	?_strcmp& (0+255),w,b
 17788  00178A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17789  00178C  A4D8               	btfss	status,2,c
 17790  00178E  D024               	goto	l429
 17791                           
 17792                           ; BSR set to: 0
 17793                           ;MOTEapp.c: 423: {
 17794                           ;MOTEapp.c: 424: oled_clear();
 17795  001790  ECF0  F02F         	call	_oled_clear	;wreg free
 17796                           
 17797                           ;MOTEapp.c: 425: oled_putString("OTAA Join ",0,0);
 17798  001794  0E88               	movlw	low STR_61
 17799  001796  0100               	movlb	0	; () banked
 17800  001798  6F72               	movwf	oled_putString@string& (0+255),b
 17801  00179A  0E7E               	movlw	high STR_61
 17802  00179C  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17803  00179E  5172               	movf	oled_putString@string& (0+255),w,b
 17804  0017A0  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17805  0017A2  A4D8               	btfss	status,2,c
 17806  0017A4  0E00               	movlw	low (__mediumconst shr (0+16))
 17807  0017A6  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17808  0017A8  0E00               	movlw	0
 17809  0017AA  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17810  0017AC  0E00               	movlw	0
 17811  0017AE  6F76               	movwf	oled_putString@start_page& (0+255),b
 17812  0017B0  EC76  F028         	call	_oled_putString	;wreg free
 17813                           
 17814                           ;MOTEapp.c: 426: oled_putString("Successful",0,1);
 17815  0017B4  0E9E               	movlw	low STR_51
 17816  0017B6  0100               	movlb	0	; () banked
 17817  0017B8  6F72               	movwf	oled_putString@string& (0+255),b
 17818  0017BA  0E7E               	movlw	high STR_51
 17819  0017BC  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17820  0017BE  5172               	movf	oled_putString@string& (0+255),w,b
 17821  0017C0  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17822  0017C2  A4D8               	btfss	status,2,c
 17823  0017C4  0E00               	movlw	low (__mediumconst shr (0+16))
 17824  0017C6  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17825  0017C8  0E00               	movlw	0
 17826  0017CA  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17827  0017CC  0E01               	movlw	1
 17828  0017CE  6F76               	movwf	oled_putString@start_page& (0+255),b
 17829  0017D0  EC76  F028         	call	_oled_putString	;wreg free
 17830  0017D4                     l10643:
 17831                           
 17832                           ;MOTEapp.c: 427: activeState = moteJoined;
 17833  0017D4  0E07               	movlw	7
 17834  0017D6  D63A               	goto	L13
 17835  0017D8                     l429:
 17836                           
 17837                           ; BSR set to: 0
 17838                           ;MOTEapp.c: 429: else if(strcmp(moduleResonseBuffer, "denied") == 0)
 17839                           
 17840                           ; BSR set to: 0
 17841  0017D8  0E65               	movlw	low _moduleResonseBuffer
 17842  0017DA  6F60               	movwf	strcmp@s1& (0+255),b
 17843  0017DC  0E01               	movlw	high _moduleResonseBuffer
 17844  0017DE  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17845  0017E0  0E95               	movlw	low STR_63
 17846  0017E2  6F62               	movwf	strcmp@s2& (0+255),b
 17847  0017E4  0E7F               	movlw	high STR_63
 17848  0017E6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17849  0017E8  EC05  F02C         	call	_strcmp	;wreg free
 17850  0017EC  0100               	movlb	0	; () banked
 17851  0017EE  5160               	movf	?_strcmp& (0+255),w,b
 17852  0017F0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17853  0017F2  A4D8               	btfss	status,2,c
 17854  0017F4  D02B               	goto	l431
 17855                           
 17856                           ; BSR set to: 0
 17857                           ;MOTEapp.c: 430: {
 17858                           ;MOTEapp.c: 431: oled_clear();
 17859  0017F6  ECF0  F02F         	call	_oled_clear	;wreg free
 17860                           
 17861                           ;MOTEapp.c: 432: oled_putString("OTAA Join",1,0);
 17862  0017FA  0EE8               	movlw	low STR_64
 17863  0017FC  0100               	movlb	0	; () banked
 17864  0017FE  6F72               	movwf	oled_putString@string& (0+255),b
 17865  001800  0E7E               	movlw	high STR_64
 17866  001802  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17867  001804  5172               	movf	oled_putString@string& (0+255),w,b
 17868  001806  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17869  001808  A4D8               	btfss	status,2,c
 17870  00180A  0E00               	movlw	low (__mediumconst shr (0+16))
 17871  00180C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17872  00180E  0E01               	movlw	1
 17873  001810  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17874  001812  0E00               	movlw	0
 17875  001814  6F76               	movwf	oled_putString@start_page& (0+255),b
 17876  001816  EC76  F028         	call	_oled_putString	;wreg free
 17877                           
 17878                           ;MOTEapp.c: 433: oled_putString("Denied",2,1);
 17879  00181A  0E8E               	movlw	low STR_65
 17880  00181C  0100               	movlb	0	; () banked
 17881  00181E  6F72               	movwf	oled_putString@string& (0+255),b
 17882  001820  0E7F               	movlw	high STR_65
 17883  001822  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 17884  001824  5172               	movf	oled_putString@string& (0+255),w,b
 17885  001826  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 17886  001828  A4D8               	btfss	status,2,c
 17887  00182A  0E00               	movlw	low (__mediumconst shr (0+16))
 17888  00182C  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 17889  00182E  0E02               	movlw	2
 17890  001830  6F75               	movwf	oled_putString@station_dot& (0+255),b
 17891  001832  0E01               	movlw	1
 17892  001834  6F76               	movwf	oled_putString@start_page& (0+255),b
 17893  001836  EC76  F028         	call	_oled_putString	;wreg free
 17894                           
 17895                           ;MOTEapp.c: 434: sendCommand("mac join otaa");
 17896  00183A  0E3B               	movlw	low STR_43
 17897  00183C  0100               	movlb	0	; () banked
 17898  00183E  6F61               	movwf	sendCommand@string& (0+255),b
 17899  001840  0E7D               	movlw	high STR_43
 17900  001842  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17901  001844  ECC0  F02D         	call	_sendCommand	;wreg free
 17902  001848                     l10655:
 17903                           
 17904                           ;MOTEapp.c: 435: activeState = moteCheckOtaa;
 17905  001848  0E05               	movlw	5
 17906  00184A  D600               	goto	L13
 17907  00184C                     l431:
 17908                           
 17909                           ; BSR set to: 0
 17910                           ;MOTEapp.c: 437: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 17911                           
 17912                           ; BSR set to: 0
 17913  00184C  0E65               	movlw	low _moduleResonseBuffer
 17914  00184E  6F60               	movwf	strcmp@s1& (0+255),b
 17915  001850  0E01               	movlw	high _moduleResonseBuffer
 17916  001852  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17917  001854  0E93               	movlw	low STR_59
 17918  001856  6F62               	movwf	strcmp@s2& (0+255),b
 17919  001858  0E7E               	movlw	high STR_59
 17920  00185A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17921  00185C  EC05  F02C         	call	_strcmp	;wreg free
 17922  001860                     L15:
 17923  001860  0100               	movlb	0	; () banked
 17924  001862  5160               	movf	?_strcmp& (0+255),w,b
 17925  001864  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17926  001866  A4D8               	btfss	status,2,c
 17927  001868  D07C               	goto	l395
 17928                           
 17929                           ; BSR set to: 0
 17930                           ;MOTEapp.c: 438: {
 17931                           ;MOTEapp.c: 439: activeState = moteStartup;
 17932  00186A  0E00               	movlw	0
 17933  00186C  D5F0               	goto	L14
 17934  00186E                     
 17935                           ; BSR set to: 0
 17936                           ;MOTEapp.c: 444: sendCommand("mac get dr");
 17937                           
 17938                           ; BSR set to: 0
 17939  00186E  0EA9               	movlw	low STR_68
 17940  001870  6F61               	movwf	sendCommand@string& (0+255),b
 17941  001872  0E7E               	movlw	high STR_68
 17942  001874  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17943  001876  ECC0  F02D         	call	_sendCommand	;wreg free
 17944  00187A  D018               	goto	l10671
 17945  00187C                     
 17946                           ; BSR set to: 0
 17947                           ;MOTEapp.c: 448: if ( messageReady )
 17948                           
 17949                           ; BSR set to: 0
 17950  00187C  517D               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 17951  00187E  B4D8               	btfsc	status,2,c
 17952  001880  D070               	goto	l395
 17953                           
 17954                           ; BSR set to: 0
 17955                           ;MOTEapp.c: 449: {
 17956                           ;MOTEapp.c: 450: if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 17957  001882  0E65               	movlw	low _moduleResonseBuffer
 17958  001884  6F60               	movwf	strcmp@s1& (0+255),b
 17959  001886  0E01               	movlw	high _moduleResonseBuffer
 17960  001888  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 17961  00188A  0E49               	movlw	low STR_57
 17962  00188C  6F62               	movwf	strcmp@s2& (0+255),b
 17963  00188E  0E7D               	movlw	high STR_57
 17964  001890  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 17965  001892  EC05  F02C         	call	_strcmp	;wreg free
 17966  001896  0100               	movlb	0	; () banked
 17967  001898  5160               	movf	?_strcmp& (0+255),w,b
 17968  00189A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 17969  00189C  A4D8               	btfss	status,2,c
 17970  00189E  D008               	goto	l437
 17971                           
 17972                           ; BSR set to: 0
 17973                           ;MOTEapp.c: 451: {
 17974                           ;MOTEapp.c: 452: sendCommand("mac get dr");
 17975  0018A0  0EA9               	movlw	low STR_68
 17976  0018A2  6F61               	movwf	sendCommand@string& (0+255),b
 17977  0018A4  0E7E               	movlw	high STR_68
 17978  0018A6  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 17979  0018A8  ECC0  F02D         	call	_sendCommand	;wreg free
 17980  0018AC                     l10671:
 17981                           
 17982                           ;MOTEapp.c: 453: activeState = moteGetDr;
 17983  0018AC  0E08               	movlw	8
 17984  0018AE  D5CE               	goto	L13
 17985  0018B0                     l437:
 17986                           
 17987                           ; BSR set to: 0
 17988                           ;MOTEapp.c: 455: else
 17989                           ;MOTEapp.c: 456: {
 17990                           ;MOTEapp.c: 457: uint8_t readDataRate;
 17991                           ;MOTEapp.c: 458: readDataRate = moduleResonseBuffer[0] - '0';
 17992                           
 17993                           ; BSR set to: 0
 17994  0018B0  0101               	movlb	1	; () banked
 17995  0018B2  5165               	movf	_moduleResonseBuffer& (0+255),w,b
 17996  0018B4  0FD0               	addlw	208
 17997  0018B6  0100               	movlb	0	; () banked
 17998  0018B8  6F7B               	movwf	moteJoiningProcess@readDataRate& (0+255),b
 17999                           
 18000                           ; BSR set to: 0
 18001                           ;MOTEapp.c: 459: dataRateValue = readDataRate;
 18002  0018BA  C07B  F0FC         	movff	moteJoiningProcess@readDataRate,_dataRateValue
 18003                           
 18004                           ; BSR set to: 0
 18005                           ;MOTEapp.c: 460: joiningComplete = 1;
 18006  0018BE  0E01               	movlw	1
 18007  0018C0  6F7C               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 18008                           
 18009                           ; BSR set to: 0
 18010                           ;MOTEapp.c: 461: }
 18011                           ;MOTEapp.c: 462: }
 18012                           ;MOTEapp.c: 463: break;
 18013                           
 18014                           ; BSR set to: 0
 18015  0018C2  D04F               	goto	l395
 18016  0018C4                     
 18017                           ; BSR set to: 0
 18018                           ;MOTEapp.c: 465: if (selectButton)
 18019                           
 18020                           ; BSR set to: 0
 18021  0018C4  5179               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 18022  0018C6  B4D8               	btfsc	status,2,c
 18023  0018C8  D04C               	goto	l395
 18024                           
 18025                           ; BSR set to: 0
 18026                           ;MOTEapp.c: 466: {
 18027                           ;MOTEapp.c: 467: activeState = moteComFailure;
 18028  0018CA  0E0A               	movlw	10
 18029  0018CC  D5C0               	goto	L14
 18030  0018CE                     
 18031                           ; BSR set to: 0
 18032                           ;MOTEapp.c: 472: DATAEE_WriteByte(0x00, 0x00);
 18033                           
 18034                           ; BSR set to: 0
 18035  0018CE  0E00               	movlw	0
 18036  0018D0  6F60               	movwf	DATAEE_WriteByte@bData& (0+255),b
 18037  0018D2  0E00               	movlw	0
 18038  0018D4  EC12  F02D         	call	_DATAEE_WriteByte
 18039  0018D8  B281               	btfsc	3969,1,c	;volatile
 18040  0018DA  D002               	goto	u9370
 18041  0018DC  A081               	btfss	3969,0,c	;volatile
 18042  0018DE  D7FC               	goto	l443
 18043  0018E0                     u9370:
 18044                           
 18045                           ;MOTEapp.c: 474: _delay((unsigned long)((16)*(48000000/4000.0)));
 18046  0018E0  0EFA               	movlw	250
 18047  0018E2  0100               	movlb	0	; () banked
 18048  0018E4  6F7A               	movwf	??_moteJoiningProcess& (0+255),b
 18049  0018E6  0E58               	movlw	88
 18050  0018E8                     u11427:
 18051  0018E8  2EE8               	decfsz	wreg,f,c
 18052  0018EA  D7FE               	bra	u11427
 18053  0018EC  2F7A               	decfsz	??_moteJoiningProcess& (0+255),f,b
 18054  0018EE  D7FC               	bra	u11427
 18055  0018F0  F000               	nop	
 18056                           
 18057                           ;MOTEapp.c: 475: _delay((unsigned long)((16)*(48000000/4000.0)));
 18058  0018F2  0EFA               	movlw	250
 18059  0018F4  0100               	movlb	0	; () banked
 18060  0018F6  6F7A               	movwf	??_moteJoiningProcess& (0+255),b
 18061  0018F8  0E58               	movlw	88
 18062  0018FA                     u11437:
 18063  0018FA  2EE8               	decfsz	wreg,f,c
 18064  0018FC  D7FE               	bra	u11437
 18065  0018FE  2F7A               	decfsz	??_moteJoiningProcess& (0+255),f,b
 18066  001900  D7FC               	bra	u11437
 18067  001902  F000               	nop	
 18068                           
 18069                           ;MOTEapp.c: 476: _delay((unsigned long)((16)*(48000000/4000.0)));
 18070  001904  0EFA               	movlw	250
 18071  001906  0100               	movlb	0	; () banked
 18072  001908  6F7A               	movwf	??_moteJoiningProcess& (0+255),b
 18073  00190A  0E58               	movlw	88
 18074  00190C                     u11447:
 18075  00190C  2EE8               	decfsz	wreg,f,c
 18076  00190E  D7FE               	bra	u11447
 18077  001910  2F7A               	decfsz	??_moteJoiningProcess& (0+255),f,b
 18078  001912  D7FC               	bra	u11447
 18079  001914  F000               	nop	
 18080  001916  00FF               	reset		;# 
 18081                           
 18082                           ;MOTEapp.c: 480: }
 18083                           
 18084                           ;MOTEapp.c: 479: break;
 18085  001918  D024               	goto	l395
 18086  00191A                     l390:
 18087  00191A  0100               	movlb	0	; () banked
 18088  00191C  51F4               	movf	_activeState& (0+255),w,b
 18089                           
 18090                           ; Switch size 1, requested type "space"
 18091                           ; Number of cases is 11, Range of values is 0 to 10
 18092                           ; switch strategies available:
 18093                           ; Name         Instructions Cycles
 18094                           ; simple_byte           34    18 (average)
 18095                           ;	Chosen strategy is simple_byte
 18096  00191E  0A00               	xorlw	0	; case 0
 18097  001920  B4D8               	btfsc	status,2,c
 18098  001922  D53C               	goto	l396
 18099  001924  0A01               	xorlw	1	; case 1
 18100  001926  B4D8               	btfsc	status,2,c
 18101  001928  D541               	goto	l397
 18102  00192A  0A03               	xorlw	3	; case 2
 18103  00192C  B4D8               	btfsc	status,2,c
 18104  00192E  D5E9               	goto	l404
 18105  001930  0A01               	xorlw	1	; case 3
 18106  001932  B4D8               	btfsc	status,2,c
 18107  001934  D628               	goto	l408
 18108  001936  0A07               	xorlw	7	; case 4
 18109  001938  B4D8               	btfsc	status,2,c
 18110  00193A  D673               	goto	l414
 18111  00193C  0A01               	xorlw	1	; case 5
 18112  00193E  B4D8               	btfsc	status,2,c
 18113  001940  D6AD               	goto	l418
 18114  001942  0A03               	xorlw	3	; case 6
 18115  001944  B4D8               	btfsc	status,2,c
 18116  001946  D712               	goto	l427
 18117  001948  0A01               	xorlw	1	; case 7
 18118  00194A  B4D8               	btfsc	status,2,c
 18119  00194C  D790               	goto	l434
 18120  00194E  0A0F               	xorlw	15	; case 8
 18121  001950  B4D8               	btfsc	status,2,c
 18122  001952  D794               	goto	l435
 18123  001954  0A01               	xorlw	1	; case 9
 18124  001956  B4D8               	btfsc	status,2,c
 18125  001958  D7B5               	goto	l439
 18126  00195A  0A03               	xorlw	3	; case 10
 18127  00195C  B4D8               	btfsc	status,2,c
 18128  00195E  D7B7               	goto	l441
 18129  001960  D51C               	goto	l391
 18130  001962                     l395:
 18131                           
 18132                           ;MOTEapp.c: 481: return joiningComplete;
 18133                           
 18134                           ; BSR set to: 0
 18135  001962  0100               	movlb	0	; () banked
 18136  001964  517C               	movf	moteJoiningProcess@joiningComplete& (0+255),w,b
 18137  001966  0012               	return	
 18138  001968                     __end_of_moteJoiningProcess:
 18139                           	opt stack 0
 18140                           tblptru	equ	0xFF8
 18141                           tblptrh	equ	0xFF7
 18142                           tblptrl	equ	0xFF6
 18143                           tablat	equ	0xFF5
 18144                           prodh	equ	0xFF4
 18145                           prodl	equ	0xFF3
 18146                           intcon	equ	0xFF2
 18147                           intcon3	equ	0xFF0
 18148                           postinc0	equ	0xFEE
 18149                           wreg	equ	0xFE8
 18150                           indf1	equ	0xFE7
 18151                           postdec1	equ	0xFE5
 18152                           fsr1h	equ	0xFE2
 18153                           fsr1l	equ	0xFE1
 18154                           indf2	equ	0xFDF
 18155                           fsr2h	equ	0xFDA
 18156                           fsr2l	equ	0xFD9
 18157                           status	equ	0xFD8
 18158                           
 18159 ;; *************** function _strncmp *****************
 18160 ;; Defined at:
 18161 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 18162 ;; Parameters:    Size  Location     Type
 18163 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 18164 ;;		 -> moduleResonseBuffer(64), 
 18165 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 18166 ;;		 -> STR_97(7), STR_95(7), STR_93(7), STR_90(7), 
 18167 ;;		 -> STR_35(5), STR_31(5), 
 18168 ;;  len             2    4[BANK0 ] unsigned int 
 18169 ;; Auto vars:     Size  Location     Type
 18170 ;;		None
 18171 ;; Return value:  Size  Location     Type
 18172 ;;                  2    0[BANK0 ] int 
 18173 ;; Registers used:
 18174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18175 ;; Tracked objects:
 18176 ;;		On entry : 0/0
 18177 ;;		On exit  : 0/0
 18178 ;;		Unchanged: 0/0
 18179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18180 ;;      Params:         0       6       0       0       0       0       0       0       0
 18181 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18182 ;;      Temps:          0       3       0       0       0       0       0       0       0
 18183 ;;      Totals:         0       9       0       0       0       0       0       0       0
 18184 ;;Total ram usage:        9 bytes
 18185 ;; Hardware stack levels used:    1
 18186 ;; Hardware stack levels required when called:   11
 18187 ;; This function calls:
 18188 ;;		Nothing
 18189 ;; This function is called by:
 18190 ;;		_moteJoiningProcess
 18191 ;;		_moteRunningProcess
 18192 ;; This function uses a non-reentrant model
 18193 ;;
 18194                           
 18195                           	psect	text52
 18196  004BDC                     __ptext52:
 18197                           	opt stack 0
 18198  004BDC                     _strncmp:
 18199                           	opt stack 17
 18200                           
 18201                           ; BSR set to: 0
 18202                           ;incstack = 0
 18203  004BDC  D037               	goto	l2814
 18204  004BDE                     l9717:
 18205  004BDE  C060  FFD9         	movff	strncmp@s1,fsr2l
 18206  004BE2  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 18207  004BE6  50DF               	movf	indf2,w,c
 18208  004BE8  B4D8               	btfsc	status,2,c
 18209  004BEA  D011               	goto	u8230
 18210  004BEC  C060  FFD9         	movff	strncmp@s1,fsr2l
 18211  004BF0  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 18212  004BF4  50DF               	movf	indf2,w,c
 18213  004BF6  0100               	movlb	0	; () banked
 18214  004BF8  6F66               	movwf	??_strncmp& (0+255),b
 18215  004BFA  C062  FFF6         	movff	strncmp@s2,tblptrl
 18216  004BFE  C063  FFF7         	movff	strncmp@s2+1,tblptrh
 18217  004C02                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18218  004C02  6AF8               	clrf	tblptru,c
 18219  004C04                     	endif
 18220  004C04                     	if	0	;tblptru may be non-zero
 18221  004C04                     	endif
 18222  004C04  0008               	tblrd		*
 18223  004C06  50F5               	movf	tablat,w,c
 18224  004C08  1966               	xorwf	??_strncmp& (0+255),w,b
 18225  004C0A  B4D8               	btfsc	status,2,c
 18226  004C0C  D01B               	goto	l2816
 18227  004C0E                     u8230:
 18228                           
 18229                           ; BSR set to: 0
 18230  004C0E  C062  FFF6         	movff	strncmp@s2,tblptrl
 18231  004C12  C063  FFF7         	movff	strncmp@s2+1,tblptrh
 18232  004C16                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18233  004C16  6AF8               	clrf	tblptru,c
 18234  004C18                     	endif
 18235  004C18                     	if	0	;tblptru may be non-zero
 18236  004C18                     	endif
 18237  004C18  0008               	tblrd		*
 18238  004C1A  50F5               	movf	tablat,w,c
 18239  004C1C  0100               	movlb	0	; () banked
 18240  004C1E  6F66               	movwf	??_strncmp& (0+255),b
 18241  004C20  6B67               	clrf	(??_strncmp+1)& (0+255),b
 18242  004C22  1F66               	comf	??_strncmp& (0+255),f,b
 18243  004C24  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 18244  004C26  4B66               	infsnz	??_strncmp& (0+255),f,b
 18245  004C28  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 18246  004C2A  C060  FFD9         	movff	strncmp@s1,fsr2l
 18247  004C2E  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 18248  004C32  50DF               	movf	indf2,w,c
 18249  004C34  6F68               	movwf	(??_strncmp+2)& (0+255),b
 18250  004C36  5168               	movf	(??_strncmp+2)& (0+255),w,b
 18251  004C38  2566               	addwf	??_strncmp& (0+255),w,b
 18252  004C3A  6F60               	movwf	?_strncmp& (0+255),b
 18253  004C3C  0E00               	movlw	0
 18254  004C3E  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 18255  004C40  6F61               	movwf	(?_strncmp+1)& (0+255),b
 18256                           
 18257                           ; BSR set to: 0
 18258  004C42  0012               	return	
 18259  004C44                     l2816:
 18260                           
 18261                           ; BSR set to: 0
 18262                           
 18263                           ; BSR set to: 0
 18264  004C44  4B60               	infsnz	strncmp@s1& (0+255),f,b
 18265  004C46  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 18266  004C48  4B62               	infsnz	strncmp@s2& (0+255),f,b
 18267  004C4A  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 18268  004C4C                     l2814:
 18269                           
 18270                           ; BSR set to: 0
 18271  004C4C  0100               	movlb	0	; () banked
 18272  004C4E  0764               	decf	strncmp@len& (0+255),f,b
 18273  004C50  A0D8               	btfss	status,0,c
 18274  004C52  0765               	decf	(strncmp@len+1)& (0+255),f,b
 18275  004C54  2964               	incf	strncmp@len& (0+255),w,b
 18276  004C56  E1C3               	bnz	l9717
 18277  004C58  2965               	incf	(strncmp@len+1)& (0+255),w,b
 18278  004C5A  A4D8               	btfss	status,2,c
 18279  004C5C  D7C0               	goto	l2815
 18280                           
 18281                           ; BSR set to: 0
 18282                           
 18283                           ; BSR set to: 0
 18284  004C5E  0E00               	movlw	0
 18285  004C60  6F61               	movwf	(?_strncmp+1)& (0+255),b
 18286  004C62  0E00               	movlw	0
 18287  004C64  6F60               	movwf	?_strncmp& (0+255),b
 18288  004C66  0012               	return	
 18289  004C68                     __end_of_strncmp:
 18290                           	opt stack 0
 18291                           tblptru	equ	0xFF8
 18292                           tblptrh	equ	0xFF7
 18293                           tblptrl	equ	0xFF6
 18294                           tablat	equ	0xFF5
 18295                           prodh	equ	0xFF4
 18296                           prodl	equ	0xFF3
 18297                           intcon	equ	0xFF2
 18298                           intcon3	equ	0xFF0
 18299                           postinc0	equ	0xFEE
 18300                           wreg	equ	0xFE8
 18301                           indf1	equ	0xFE7
 18302                           postdec1	equ	0xFE5
 18303                           fsr1h	equ	0xFE2
 18304                           fsr1l	equ	0xFE1
 18305                           indf2	equ	0xFDF
 18306                           fsr2h	equ	0xFDA
 18307                           fsr2l	equ	0xFD9
 18308                           status	equ	0xFD8
 18309                           
 18310 ;; *************** function _strcmp *****************
 18311 ;; Defined at:
 18312 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
 18313 ;; Parameters:    Size  Location     Type
 18314 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 18315 ;;		 -> moduleResonseBuffer(64), 
 18316 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 18317 ;;		 -> STR_89(3), STR_69(14), STR_67(11), STR_63(7), 
 18318 ;;		 -> STR_60(9), STR_59(11), STR_57(14), STR_54(14), 
 18319 ;;		 -> STR_53(3), STR_49(9), STR_45(14), STR_44(3), 
 18320 ;; Auto vars:     Size  Location     Type
 18321 ;;  r               1    5[BANK0 ] char 
 18322 ;; Return value:  Size  Location     Type
 18323 ;;                  2    0[BANK0 ] int 
 18324 ;; Registers used:
 18325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18326 ;; Tracked objects:
 18327 ;;		On entry : 0/0
 18328 ;;		On exit  : 0/0
 18329 ;;		Unchanged: 0/0
 18330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18331 ;;      Params:         0       4       0       0       0       0       0       0       0
 18332 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18333 ;;      Temps:          0       1       0       0       0       0       0       0       0
 18334 ;;      Totals:         0       6       0       0       0       0       0       0       0
 18335 ;;Total ram usage:        6 bytes
 18336 ;; Hardware stack levels used:    1
 18337 ;; Hardware stack levels required when called:   11
 18338 ;; This function calls:
 18339 ;;		Nothing
 18340 ;; This function is called by:
 18341 ;;		_moteJoiningProcess
 18342 ;;		_moteRunningProcess
 18343 ;; This function uses a non-reentrant model
 18344 ;;
 18345                           
 18346                           	psect	text53
 18347  00580A                     __ptext53:
 18348                           	opt stack 0
 18349  00580A                     _strcmp:
 18350                           	opt stack 17
 18351                           
 18352                           ; BSR set to: 0
 18353                           ;incstack = 0
 18354  00580A  D005               	goto	l2806
 18355  00580C  0100               	movlb	0	; () banked
 18356  00580E  4B60               	infsnz	strcmp@s1& (0+255),f,b
 18357  005810  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
 18358  005812  4B62               	infsnz	strcmp@s2& (0+255),f,b
 18359  005814  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
 18360  005816                     l2806:
 18361                           
 18362                           ; BSR set to: 0
 18363  005816  C060  FFD9         	movff	strcmp@s1,fsr2l
 18364  00581A  C061  FFDA         	movff	strcmp@s1+1,fsr2h
 18365  00581E  50DF               	movf	indf2,w,c
 18366  005820  0100               	movlb	0	; () banked
 18367  005822  6F64               	movwf	??_strcmp& (0+255),b
 18368  005824  C062  FFF6         	movff	strcmp@s2,tblptrl
 18369  005828  C063  FFF7         	movff	strcmp@s2+1,tblptrh
 18370  00582C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18371  00582C  6AF8               	clrf	tblptru,c
 18372  00582E                     	endif
 18373  00582E                     	if	0	;tblptru may be non-zero
 18374  00582E                     	endif
 18375  00582E  0008               	tblrd		*
 18376  005830  50F5               	movf	tablat,w,c
 18377  005832  0800               	sublw	0
 18378  005834  2564               	addwf	??_strcmp& (0+255),w,b
 18379  005836  6F65               	movwf	strcmp@r& (0+255),b
 18380  005838  5165               	movf	strcmp@r& (0+255),w,b
 18381  00583A  A4D8               	btfss	status,2,c
 18382  00583C  D007               	goto	u8260
 18383                           
 18384                           ; BSR set to: 0
 18385  00583E  C060  FFD9         	movff	strcmp@s1,fsr2l
 18386  005842  C061  FFDA         	movff	strcmp@s1+1,fsr2h
 18387  005846  50DF               	movf	indf2,w,c
 18388  005848  A4D8               	btfss	status,2,c
 18389  00584A  D7E0               	goto	l2807
 18390  00584C                     u8260:
 18391                           
 18392                           ; BSR set to: 0
 18393                           
 18394                           ; BSR set to: 0
 18395                           
 18396                           ; BSR set to: 0
 18397  00584C  5165               	movf	strcmp@r& (0+255),w,b
 18398  00584E  6F60               	movwf	?_strcmp& (0+255),b
 18399  005850  6B61               	clrf	(?_strcmp+1)& (0+255),b
 18400  005852  BF60               	btfsc	?_strcmp& (0+255),7,b
 18401  005854  0761               	decf	(?_strcmp+1)& (0+255),f,b
 18402  005856  0012               	return	
 18403  005858                     __end_of_strcmp:
 18404                           	opt stack 0
 18405                           tblptru	equ	0xFF8
 18406                           tblptrh	equ	0xFF7
 18407                           tblptrl	equ	0xFF6
 18408                           tablat	equ	0xFF5
 18409                           prodh	equ	0xFF4
 18410                           prodl	equ	0xFF3
 18411                           intcon	equ	0xFF2
 18412                           intcon3	equ	0xFF0
 18413                           postinc0	equ	0xFEE
 18414                           wreg	equ	0xFE8
 18415                           indf1	equ	0xFE7
 18416                           postdec1	equ	0xFE5
 18417                           fsr1h	equ	0xFE2
 18418                           fsr1l	equ	0xFE1
 18419                           indf2	equ	0xFDF
 18420                           fsr2h	equ	0xFDA
 18421                           fsr2l	equ	0xFD9
 18422                           status	equ	0xFD8
 18423                           
 18424 ;; *************** function _moteApp_delayms *****************
 18425 ;; Defined at:
 18426 ;;		line 167 in file "../Includes/Board/MOTEapp.c"
 18427 ;; Parameters:    Size  Location     Type
 18428 ;;  length          2    0[BANK0 ] unsigned int 
 18429 ;; Auto vars:     Size  Location     Type
 18430 ;;  counter         2    3[BANK0 ] unsigned int 
 18431 ;; Return value:  Size  Location     Type
 18432 ;;                  1    wreg      void 
 18433 ;; Registers used:
 18434 ;;		wreg, status,2, status,0
 18435 ;; Tracked objects:
 18436 ;;		On entry : 0/0
 18437 ;;		On exit  : 0/0
 18438 ;;		Unchanged: 0/0
 18439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18440 ;;      Params:         0       2       0       0       0       0       0       0       0
 18441 ;;      Locals:         0       2       0       0       0       0       0       0       0
 18442 ;;      Temps:          0       1       0       0       0       0       0       0       0
 18443 ;;      Totals:         0       5       0       0       0       0       0       0       0
 18444 ;;Total ram usage:        5 bytes
 18445 ;; Hardware stack levels used:    1
 18446 ;; Hardware stack levels required when called:   11
 18447 ;; This function calls:
 18448 ;;		Nothing
 18449 ;; This function is called by:
 18450 ;;		_main
 18451 ;;		_test_powerup
 18452 ;;		_moduleResync
 18453 ;;		_moteJoiningProcess
 18454 ;;		_moteRunningProcess
 18455 ;;		_moteApp_GoToSleep
 18456 ;;		_moteApp_setSensorsInput
 18457 ;; This function uses a non-reentrant model
 18458 ;;
 18459                           
 18460                           	psect	text54
 18461  005C1A                     __ptext54:
 18462                           	opt stack 0
 18463  005C1A                     _moteApp_delayms:
 18464                           	opt stack 16
 18465                           
 18466                           ;MOTEapp.c: 169: uint16_t counter;
 18467                           ;MOTEapp.c: 170: for(counter = 0; counter < length; counter++)
 18468                           
 18469                           ; BSR set to: 0
 18470                           ;incstack = 0
 18471  005C1A  0E00               	movlw	0
 18472  005C1C  0100               	movlb	0	; () banked
 18473  005C1E  6F64               	movwf	(moteApp_delayms@counter+1)& (0+255),b
 18474  005C20  0E00               	movlw	0
 18475  005C22  6F63               	movwf	moteApp_delayms@counter& (0+255),b
 18476  005C24  D00C               	goto	l348
 18477  005C26                     
 18478                           ; BSR set to: 0
 18479                           ;MOTEapp.c: 171: {
 18480                           ;MOTEapp.c: 172: _delay((unsigned long)((1)*(48000000/4000.0)));
 18481                           
 18482                           ; BSR set to: 0
 18483  005C26  0E10               	movlw	16
 18484  005C28  0100               	movlb	0	; () banked
 18485  005C2A  6F62               	movwf	??_moteApp_delayms& (0+255),b
 18486  005C2C  0E94               	movlw	148
 18487  005C2E                     u11457:
 18488  005C2E  2EE8               	decfsz	wreg,f,c
 18489  005C30  D7FE               	bra	u11457
 18490  005C32  2F62               	decfsz	??_moteApp_delayms& (0+255),f,b
 18491  005C34  D7FC               	bra	u11457
 18492  005C36  F000               	nop	
 18493  005C38  0100               	movlb	0	; () banked
 18494  005C3A  4B63               	infsnz	moteApp_delayms@counter& (0+255),f,b
 18495  005C3C  2B64               	incf	(moteApp_delayms@counter+1)& (0+255),f,b
 18496  005C3E                     l348:
 18497                           
 18498                           ; BSR set to: 0
 18499  005C3E  5160               	movf	moteApp_delayms@length& (0+255),w,b
 18500  005C40  5D63               	subwf	moteApp_delayms@counter& (0+255),w,b
 18501  005C42  5161               	movf	(moteApp_delayms@length+1)& (0+255),w,b
 18502  005C44  5964               	subwfb	(moteApp_delayms@counter+1)& (0+255),w,b
 18503  005C46  B0D8               	btfsc	status,0,c
 18504  005C48  0012               	return	
 18505  005C4A  D7ED               	goto	l349
 18506  005C4C                     __end_of_moteApp_delayms:
 18507                           	opt stack 0
 18508                           tblptru	equ	0xFF8
 18509                           tblptrh	equ	0xFF7
 18510                           tblptrl	equ	0xFF6
 18511                           tablat	equ	0xFF5
 18512                           prodh	equ	0xFF4
 18513                           prodl	equ	0xFF3
 18514                           intcon	equ	0xFF2
 18515                           intcon3	equ	0xFF0
 18516                           postinc0	equ	0xFEE
 18517                           wreg	equ	0xFE8
 18518                           indf1	equ	0xFE7
 18519                           postdec1	equ	0xFE5
 18520                           fsr1h	equ	0xFE2
 18521                           fsr1l	equ	0xFE1
 18522                           indf2	equ	0xFDF
 18523                           fsr2h	equ	0xFDA
 18524                           fsr2l	equ	0xFD9
 18525                           status	equ	0xFD8
 18526                           
 18527 ;; *************** function _DATAEE_WriteByte *****************
 18528 ;; Defined at:
 18529 ;;		line 166 in file "../Includes/MccGenerated/memory.c"
 18530 ;; Parameters:    Size  Location     Type
 18531 ;;  bAdd            1    wreg     unsigned char 
 18532 ;;  bData           1    0[BANK0 ] unsigned char 
 18533 ;; Auto vars:     Size  Location     Type
 18534 ;;  bAdd            1    1[BANK0 ] unsigned char 
 18535 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 18536 ;; Return value:  Size  Location     Type
 18537 ;;                  1    wreg      void 
 18538 ;; Registers used:
 18539 ;;		wreg, status,2
 18540 ;; Tracked objects:
 18541 ;;		On entry : 0/0
 18542 ;;		On exit  : 0/0
 18543 ;;		Unchanged: 0/0
 18544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18545 ;;      Params:         0       1       0       0       0       0       0       0       0
 18546 ;;      Locals:         0       2       0       0       0       0       0       0       0
 18547 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18548 ;;      Totals:         0       3       0       0       0       0       0       0       0
 18549 ;;Total ram usage:        3 bytes
 18550 ;; Hardware stack levels used:    1
 18551 ;; Hardware stack levels required when called:   11
 18552 ;; This function calls:
 18553 ;;		Nothing
 18554 ;; This function is called by:
 18555 ;;		_main
 18556 ;;		_moteJoiningProcess
 18557 ;; This function uses a non-reentrant model
 18558 ;;
 18559                           
 18560                           	psect	text55
 18561  005A24                     __ptext55:
 18562                           	opt stack 0
 18563  005A24                     _DATAEE_WriteByte:
 18564                           	opt stack 17
 18565                           
 18566                           ; BSR set to: 0
 18567                           ;incstack = 0
 18568                           ;DATAEE_WriteByte@bAdd stored from wreg
 18569  005A24  0100               	movlb	0	; () banked
 18570  005A26  6F61               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 18571                           
 18572                           ;memory.c: 168: uint8_t GIEBitValue = INTCONbits.GIE;
 18573  005A28  0E00               	movlw	0
 18574  005A2A  BEF2               	btfsc	intcon,7,c	;volatile
 18575  005A2C  0E01               	movlw	1
 18576  005A2E  0100               	movlb	0	; () banked
 18577  005A30  6F62               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 18578                           
 18579                           ; BSR set to: 0
 18580                           ;memory.c: 170: EEADR = (bAdd & 0xFF);
 18581  005A32  C061  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
 18582                           
 18583                           ; BSR set to: 0
 18584                           ;memory.c: 171: EEDATA = bData;
 18585  005A36  C060  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
 18586                           
 18587                           ; BSR set to: 0
 18588                           ;memory.c: 172: EECON1bits.EEPGD = 0;
 18589  005A3A  9EA6               	bcf	4006,7,c	;volsfr
 18590                           
 18591                           ; BSR set to: 0
 18592                           ;memory.c: 173: EECON1bits.CFGS = 0;
 18593  005A3C  9CA6               	bcf	4006,6,c	;volsfr
 18594                           
 18595                           ; BSR set to: 0
 18596                           ;memory.c: 174: EECON1bits.WREN = 1;
 18597  005A3E  84A6               	bsf	4006,2,c	;volsfr
 18598                           
 18599                           ; BSR set to: 0
 18600                           ;memory.c: 175: INTCONbits.GIE = 0;
 18601  005A40  9EF2               	bcf	intcon,7,c	;volatile
 18602                           
 18603                           ; BSR set to: 0
 18604                           ;memory.c: 176: EECON2 = 0x55;
 18605  005A42  0E55               	movlw	85
 18606  005A44  6EA7               	movwf	4007,c	;volsfr
 18607                           
 18608                           ; BSR set to: 0
 18609                           ;memory.c: 177: EECON2 = 0xAA;
 18610  005A46  0EAA               	movlw	170
 18611  005A48  6EA7               	movwf	4007,c	;volsfr
 18612                           
 18613                           ; BSR set to: 0
 18614                           ;memory.c: 178: EECON1bits.WR = 1;
 18615  005A4A  82A6               	bsf	4006,1,c	;volsfr
 18616  005A4C                     
 18617                           ; BSR set to: 0
 18618                           ;memory.c: 181: {
 18619  005A4C  B2A6               	btfsc	4006,1,c	;volsfr
 18620  005A4E  D7FE               	goto	l1551
 18621                           
 18622                           ;memory.c: 182: }
 18623                           ;memory.c: 184: EECON1bits.WREN = 0;
 18624  005A50  94A6               	bcf	4006,2,c	;volsfr
 18625                           
 18626                           ;memory.c: 185: INTCONbits.GIE = GIEBitValue;
 18627  005A52  0100               	movlb	0	; () banked
 18628  005A54  B162               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 18629  005A56  D002               	bra	u8095
 18630  005A58  9EF2               	bcf	intcon,7,c	;volatile
 18631  005A5A  D001               	bra	u8096
 18632  005A5C                     u8095:
 18633  005A5C  8EF2               	bsf	intcon,7,c	;volatile
 18634  005A5E                     u8096:
 18635  005A5E  0012               	return		;funcret
 18636  005A60                     __end_of_DATAEE_WriteByte:
 18637                           	opt stack 0
 18638                           tblptru	equ	0xFF8
 18639                           tblptrh	equ	0xFF7
 18640                           tblptrl	equ	0xFF6
 18641                           tablat	equ	0xFF5
 18642                           prodh	equ	0xFF4
 18643                           prodl	equ	0xFF3
 18644                           intcon	equ	0xFF2
 18645                           intcon3	equ	0xFF0
 18646                           postinc0	equ	0xFEE
 18647                           wreg	equ	0xFE8
 18648                           indf1	equ	0xFE7
 18649                           postdec1	equ	0xFE5
 18650                           fsr1h	equ	0xFE2
 18651                           fsr1l	equ	0xFE1
 18652                           indf2	equ	0xFDF
 18653                           fsr2h	equ	0xFDA
 18654                           fsr2l	equ	0xFD9
 18655                           status	equ	0xFD8
 18656                           
 18657 ;; *************** function _USBapp_exitCDCState *****************
 18658 ;; Defined at:
 18659 ;;		line 139 in file "../Includes/Board/USBapp.c"
 18660 ;; Parameters:    Size  Location     Type
 18661 ;;  usbState        1    wreg     enum E5838
 18662 ;; Auto vars:     Size  Location     Type
 18663 ;;  usbState        1    0[BANK0 ] enum E5838
 18664 ;; Return value:  Size  Location     Type
 18665 ;;                  1    wreg      void 
 18666 ;; Registers used:
 18667 ;;		wreg
 18668 ;; Tracked objects:
 18669 ;;		On entry : 0/0
 18670 ;;		On exit  : 0/0
 18671 ;;		Unchanged: 0/0
 18672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18673 ;;      Params:         0       0       0       0       0       0       0       0       0
 18674 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18675 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18676 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18677 ;;Total ram usage:        1 bytes
 18678 ;; Hardware stack levels used:    1
 18679 ;; Hardware stack levels required when called:   11
 18680 ;; This function calls:
 18681 ;;		Nothing
 18682 ;; This function is called by:
 18683 ;;		_moteHandler
 18684 ;; This function uses a non-reentrant model
 18685 ;;
 18686                           
 18687                           	psect	text56
 18688  0061CA                     __ptext56:
 18689                           	opt stack 0
 18690  0061CA                     _USBapp_exitCDCState:
 18691                           	opt stack 18
 18692                           
 18693                           ;incstack = 0
 18694                           ;USBapp_exitCDCState@usbState stored from wreg
 18695  0061CA  0100               	movlb	0	; () banked
 18696  0061CC  6F60               	movwf	USBapp_exitCDCState@usbState& (0+255),b
 18697                           
 18698                           ;USBapp.c: 141: exitUSB = usbState;
 18699  0061CE  C060  F0F9         	movff	USBapp_exitCDCState@usbState,_exitUSB
 18700  0061D2  0012               	return		;funcret
 18701  0061D4                     __end_of_USBapp_exitCDCState:
 18702                           	opt stack 0
 18703                           tblptru	equ	0xFF8
 18704                           tblptrh	equ	0xFF7
 18705                           tblptrl	equ	0xFF6
 18706                           tablat	equ	0xFF5
 18707                           prodh	equ	0xFF4
 18708                           prodl	equ	0xFF3
 18709                           intcon	equ	0xFF2
 18710                           intcon3	equ	0xFF0
 18711                           postinc0	equ	0xFEE
 18712                           wreg	equ	0xFE8
 18713                           indf1	equ	0xFE7
 18714                           postdec1	equ	0xFE5
 18715                           fsr1h	equ	0xFE2
 18716                           fsr1l	equ	0xFE1
 18717                           indf2	equ	0xFDF
 18718                           fsr2h	equ	0xFDA
 18719                           fsr2l	equ	0xFD9
 18720                           status	equ	0xFD8
 18721                           
 18722 ;; *************** function _USBapp_exitCDC *****************
 18723 ;; Defined at:
 18724 ;;		line 134 in file "../Includes/Board/USBapp.c"
 18725 ;; Parameters:    Size  Location     Type
 18726 ;;		None
 18727 ;; Auto vars:     Size  Location     Type
 18728 ;;		None
 18729 ;; Return value:  Size  Location     Type
 18730 ;;                  1    wreg      enum E5902
 18731 ;; Registers used:
 18732 ;;		wreg, status,2
 18733 ;; Tracked objects:
 18734 ;;		On entry : 0/0
 18735 ;;		On exit  : 0/0
 18736 ;;		Unchanged: 0/0
 18737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18738 ;;      Params:         0       0       0       0       0       0       0       0       0
 18739 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18740 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18741 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18742 ;;Total ram usage:        0 bytes
 18743 ;; Hardware stack levels used:    1
 18744 ;; Hardware stack levels required when called:   11
 18745 ;; This function calls:
 18746 ;;		Nothing
 18747 ;; This function is called by:
 18748 ;;		_moteHandler
 18749 ;; This function uses a non-reentrant model
 18750 ;;
 18751                           
 18752                           	psect	text57
 18753  006218                     __ptext57:
 18754                           	opt stack 0
 18755  006218                     _USBapp_exitCDC:
 18756                           	opt stack 18
 18757                           
 18758                           ;USBapp.c: 136: return exitUSB;
 18759                           
 18760                           ;incstack = 0
 18761  006218  0100               	movlb	0	; () banked
 18762  00621A  51F9               	movf	_exitUSB& (0+255),w,b
 18763  00621C  0012               	return	
 18764  00621E                     __end_of_USBapp_exitCDC:
 18765                           	opt stack 0
 18766                           tblptru	equ	0xFF8
 18767                           tblptrh	equ	0xFF7
 18768                           tblptrl	equ	0xFF6
 18769                           tablat	equ	0xFF5
 18770                           prodh	equ	0xFF4
 18771                           prodl	equ	0xFF3
 18772                           intcon	equ	0xFF2
 18773                           intcon3	equ	0xFF0
 18774                           postinc0	equ	0xFEE
 18775                           wreg	equ	0xFE8
 18776                           indf1	equ	0xFE7
 18777                           postdec1	equ	0xFE5
 18778                           fsr1h	equ	0xFE2
 18779                           fsr1l	equ	0xFE1
 18780                           indf2	equ	0xFDF
 18781                           fsr2h	equ	0xFDA
 18782                           fsr2l	equ	0xFD9
 18783                           status	equ	0xFD8
 18784                           
 18785 ;; *************** function _TMRapp_Handler *****************
 18786 ;; Defined at:
 18787 ;;		line 57 in file "../Includes/Drivers/TMRapp.c"
 18788 ;; Parameters:    Size  Location     Type
 18789 ;;		None
 18790 ;; Auto vars:     Size  Location     Type
 18791 ;;		None
 18792 ;; Return value:  Size  Location     Type
 18793 ;;                  1    wreg      void 
 18794 ;; Registers used:
 18795 ;;		wreg, status,2, status,0, cstack
 18796 ;; Tracked objects:
 18797 ;;		On entry : 0/0
 18798 ;;		On exit  : 0/0
 18799 ;;		Unchanged: 0/0
 18800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18801 ;;      Params:         0       0       0       0       0       0       0       0       0
 18802 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18803 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18804 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18805 ;;Total ram usage:        0 bytes
 18806 ;; Hardware stack levels used:    1
 18807 ;; Hardware stack levels required when called:   12
 18808 ;; This function calls:
 18809 ;;		___almod
 18810 ;;		___lwmod
 18811 ;; This function is called by:
 18812 ;;		_moteHandler
 18813 ;; This function uses a non-reentrant model
 18814 ;;
 18815                           
 18816                           	psect	text58
 18817  0032A6                     __ptext58:
 18818                           	opt stack 0
 18819  0032A6                     _TMRapp_Handler:
 18820                           	opt stack 17
 18821                           
 18822                           ;TMRapp.c: 60: timerMsTickCount++;
 18823                           
 18824                           ; BSR set to: 0
 18825                           ;incstack = 0
 18826  0032A6  0100               	movlb	0	; () banked
 18827  0032A8  4BD8               	infsnz	_timerMsTickCount& (0+255),f,b
 18828  0032AA  2BD9               	incf	(_timerMsTickCount+1)& (0+255),f,b
 18829                           
 18830                           ; BSR set to: 0
 18831                           ;TMRapp.c: 62: if ( (timerMsTickCount % 10) == 0)
 18832  0032AC  C0D8  F060         	movff	_timerMsTickCount,___lwmod@dividend
 18833  0032B0  C0D9  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 18834  0032B4  0E00               	movlw	0
 18835  0032B6  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 18836  0032B8  0E0A               	movlw	10
 18837  0032BA  6F62               	movwf	___lwmod@divisor& (0+255),b
 18838  0032BC  EC50  F02C         	call	___lwmod	;wreg free
 18839  0032C0  0100               	movlb	0	; () banked
 18840  0032C2  5160               	movf	?___lwmod& (0+255),w,b
 18841  0032C4  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 18842  0032C6  A4D8               	btfss	status,2,c
 18843  0032C8  0012               	return	
 18844                           
 18845                           ; BSR set to: 0
 18846                           ;TMRapp.c: 63: {
 18847                           ;TMRapp.c: 64: appTimer.mSecTenTick = 1;
 18848  0032CA  83F8               	bsf	_appTimer& (0+255),1,b
 18849                           
 18850                           ; BSR set to: 0
 18851                           ;TMRapp.c: 65: if ( (timerMsTickCount % 100) == 0)
 18852  0032CC  C0D8  F060         	movff	_timerMsTickCount,___lwmod@dividend
 18853  0032D0  C0D9  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 18854  0032D4  0E00               	movlw	0
 18855  0032D6  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 18856  0032D8  0E64               	movlw	100
 18857  0032DA  6F62               	movwf	___lwmod@divisor& (0+255),b
 18858  0032DC  EC50  F02C         	call	___lwmod	;wreg free
 18859  0032E0  0100               	movlb	0	; () banked
 18860  0032E2  5160               	movf	?___lwmod& (0+255),w,b
 18861  0032E4  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 18862  0032E6  A4D8               	btfss	status,2,c
 18863  0032E8  0012               	return	
 18864                           
 18865                           ; BSR set to: 0
 18866                           ;TMRapp.c: 66: {
 18867                           ;TMRapp.c: 67: appTimer.mSecHundredTick = 1;
 18868  0032EA  85F8               	bsf	_appTimer& (0+255),2,b
 18869                           
 18870                           ; BSR set to: 0
 18871                           ;TMRapp.c: 68: if ( (timerMsTickCount % 1000) == 0)
 18872  0032EC  C0D8  F060         	movff	_timerMsTickCount,___lwmod@dividend
 18873  0032F0  C0D9  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 18874  0032F4  0E03               	movlw	3
 18875  0032F6  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 18876  0032F8  0EE8               	movlw	232
 18877  0032FA  6F62               	movwf	___lwmod@divisor& (0+255),b
 18878  0032FC  EC50  F02C         	call	___lwmod	;wreg free
 18879  003300  0100               	movlb	0	; () banked
 18880  003302  5160               	movf	?___lwmod& (0+255),w,b
 18881  003304  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 18882  003306  A4D8               	btfss	status,2,c
 18883  003308  0012               	return	
 18884                           
 18885                           ; BSR set to: 0
 18886                           ;TMRapp.c: 69: {
 18887                           ;TMRapp.c: 70: appTimer.SecTick = 1;
 18888  00330A  87F8               	bsf	_appTimer& (0+255),3,b
 18889                           
 18890                           ; BSR set to: 0
 18891                           ;TMRapp.c: 71: if ( (timerMsTickCount % 60000) == 0)
 18892  00330C  C0D8  F060         	movff	_timerMsTickCount,___almod@dividend
 18893  003310  C0D9  F061         	movff	_timerMsTickCount+1,___almod@dividend+1
 18894  003314  6B62               	clrf	(___almod@dividend+2)& (0+255),b
 18895  003316  6B63               	clrf	(___almod@dividend+3)& (0+255),b
 18896  003318  0E60               	movlw	96
 18897  00331A  6F64               	movwf	___almod@divisor& (0+255),b
 18898  00331C  0EEA               	movlw	234
 18899  00331E  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 18900  003320  0E00               	movlw	0
 18901  003322  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 18902  003324  0E00               	movlw	0
 18903  003326  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 18904  003328  ECCB  F023         	call	___almod	;wreg free
 18905  00332C  0100               	movlb	0	; () banked
 18906  00332E  5160               	movf	?___almod& (0+255),w,b
 18907  003330  1161               	iorwf	(?___almod+1)& (0+255),w,b
 18908  003332  1162               	iorwf	(?___almod+2)& (0+255),w,b
 18909  003334  1163               	iorwf	(?___almod+3)& (0+255),w,b
 18910  003336  A4D8               	btfss	status,2,c
 18911  003338  0012               	return	
 18912                           
 18913                           ; BSR set to: 0
 18914                           ;TMRapp.c: 72: {
 18915                           ;TMRapp.c: 73: timerMinTickCount++;
 18916  00333A  4A3E               	infsnz	_timerMinTickCount,f,c
 18917  00333C  2A3F               	incf	_timerMinTickCount+1,f,c
 18918                           
 18919                           ; BSR set to: 0
 18920                           ;TMRapp.c: 74: appTimer.MinTick = 1;
 18921  00333E  89F8               	bsf	_appTimer& (0+255),4,b
 18922                           
 18923                           ; BSR set to: 0
 18924                           ;TMRapp.c: 75: if ( (timerMinTickCount % 60) == 0)
 18925  003340  C03E  F060         	movff	_timerMinTickCount,___lwmod@dividend
 18926  003344  C03F  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 18927  003348  0E00               	movlw	0
 18928  00334A  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 18929  00334C  0E3C               	movlw	60
 18930  00334E  6F62               	movwf	___lwmod@divisor& (0+255),b
 18931  003350  EC50  F02C         	call	___lwmod	;wreg free
 18932  003354  0100               	movlb	0	; () banked
 18933  003356  5160               	movf	?___lwmod& (0+255),w,b
 18934  003358  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 18935  00335A  A4D8               	btfss	status,2,c
 18936  00335C  0012               	return	
 18937                           
 18938                           ; BSR set to: 0
 18939                           ;TMRapp.c: 76: {
 18940                           ;TMRapp.c: 77: appTimer.HourTick = 1;
 18941  00335E  8BF8               	bsf	_appTimer& (0+255),5,b
 18942                           
 18943                           ; BSR set to: 0
 18944                           ;TMRapp.c: 78: if ( (timerMinTickCount % 720) == 0)
 18945  003360  C03E  F060         	movff	_timerMinTickCount,___lwmod@dividend
 18946  003364  C03F  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 18947  003368  0E02               	movlw	2
 18948  00336A  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 18949  00336C  0ED0               	movlw	208
 18950  00336E  6F62               	movwf	___lwmod@divisor& (0+255),b
 18951  003370  EC50  F02C         	call	___lwmod	;wreg free
 18952  003374  0100               	movlb	0	; () banked
 18953  003376  5160               	movf	?___lwmod& (0+255),w,b
 18954  003378  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 18955  00337A  A4D8               	btfss	status,2,c
 18956  00337C  0012               	return	
 18957                           
 18958                           ; BSR set to: 0
 18959                           ;TMRapp.c: 79: {
 18960                           ;TMRapp.c: 80: appTimer.HalfDayTick = 1;
 18961  00337E  8DF8               	bsf	_appTimer& (0+255),6,b
 18962                           
 18963                           ; BSR set to: 0
 18964                           ;TMRapp.c: 81: if ( (timerMinTickCount % 1440) == 0)
 18965  003380  C03E  F060         	movff	_timerMinTickCount,___lwmod@dividend
 18966  003384  C03F  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 18967  003388  0E05               	movlw	5
 18968  00338A  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 18969  00338C  0EA0               	movlw	160
 18970  00338E  6F62               	movwf	___lwmod@divisor& (0+255),b
 18971  003390  EC50  F02C         	call	___lwmod	;wreg free
 18972  003394  0100               	movlb	0	; () banked
 18973  003396  5160               	movf	?___lwmod& (0+255),w,b
 18974  003398  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 18975  00339A  A4D8               	btfss	status,2,c
 18976  00339C  0012               	return	
 18977                           
 18978                           ; BSR set to: 0
 18979                           ;TMRapp.c: 82: {
 18980                           ;TMRapp.c: 83: appTimer.DayTick = 1;
 18981  00339E  8FF8               	bsf	_appTimer& (0+255),7,b
 18982                           
 18983                           ; BSR set to: 0
 18984                           ;TMRapp.c: 85: timerMsTickCount = 0;
 18985  0033A0  0E00               	movlw	0
 18986  0033A2  6FD9               	movwf	(_timerMsTickCount+1)& (0+255),b
 18987  0033A4  0E00               	movlw	0
 18988  0033A6  6FD8               	movwf	_timerMsTickCount& (0+255),b
 18989                           
 18990                           ;TMRapp.c: 86: timerMinTickCount = 0;
 18991  0033A8  0E00               	movlw	0
 18992  0033AA  6E3F               	movwf	_timerMinTickCount+1,c
 18993  0033AC  0E00               	movlw	0
 18994  0033AE  6E3E               	movwf	_timerMinTickCount,c
 18995                           
 18996                           ; BSR set to: 0
 18997                           
 18998                           ; BSR set to: 0
 18999                           
 19000                           ; BSR set to: 0
 19001                           
 19002                           ; BSR set to: 0
 19003                           
 19004                           ; BSR set to: 0
 19005                           
 19006                           ; BSR set to: 0
 19007  0033B0  0012               	return	
 19008  0033B2                     __end_of_TMRapp_Handler:
 19009                           	opt stack 0
 19010                           tblptru	equ	0xFF8
 19011                           tblptrh	equ	0xFF7
 19012                           tblptrl	equ	0xFF6
 19013                           tablat	equ	0xFF5
 19014                           prodh	equ	0xFF4
 19015                           prodl	equ	0xFF3
 19016                           intcon	equ	0xFF2
 19017                           intcon3	equ	0xFF0
 19018                           postinc0	equ	0xFEE
 19019                           wreg	equ	0xFE8
 19020                           indf1	equ	0xFE7
 19021                           postdec1	equ	0xFE5
 19022                           fsr1h	equ	0xFE2
 19023                           fsr1l	equ	0xFE1
 19024                           indf2	equ	0xFDF
 19025                           fsr2h	equ	0xFDA
 19026                           fsr2l	equ	0xFD9
 19027                           status	equ	0xFD8
 19028                           
 19029 ;; *************** function ___lwmod *****************
 19030 ;; Defined at:
 19031 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 19032 ;; Parameters:    Size  Location     Type
 19033 ;;  dividend        2    0[BANK0 ] unsigned int 
 19034 ;;  divisor         2    2[BANK0 ] unsigned int 
 19035 ;; Auto vars:     Size  Location     Type
 19036 ;;  counter         1    4[BANK0 ] unsigned char 
 19037 ;; Return value:  Size  Location     Type
 19038 ;;                  2    0[BANK0 ] unsigned int 
 19039 ;; Registers used:
 19040 ;;		wreg, status,2, status,0
 19041 ;; Tracked objects:
 19042 ;;		On entry : 0/0
 19043 ;;		On exit  : 0/0
 19044 ;;		Unchanged: 0/0
 19045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19046 ;;      Params:         0       4       0       0       0       0       0       0       0
 19047 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19048 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19049 ;;      Totals:         0       5       0       0       0       0       0       0       0
 19050 ;;Total ram usage:        5 bytes
 19051 ;; Hardware stack levels used:    1
 19052 ;; Hardware stack levels required when called:   11
 19053 ;; This function calls:
 19054 ;;		Nothing
 19055 ;; This function is called by:
 19056 ;;		_TMRapp_Handler
 19057 ;;		_moteApp_add16bToDataBuffer
 19058 ;;		_oled_putUint16
 19059 ;; This function uses a non-reentrant model
 19060 ;;
 19061                           
 19062                           	psect	text59
 19063  0058A0                     __ptext59:
 19064                           	opt stack 0
 19065  0058A0                     ___lwmod:
 19066                           	opt stack 17
 19067                           
 19068                           ; BSR set to: 0
 19069                           ;incstack = 0
 19070  0058A0  0100               	movlb	0	; () banked
 19071  0058A2  5162               	movf	___lwmod@divisor& (0+255),w,b
 19072  0058A4  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 19073  0058A6  B4D8               	btfsc	status,2,c
 19074  0058A8  D018               	goto	l2665
 19075                           
 19076                           ; BSR set to: 0
 19077  0058AA  0E01               	movlw	1
 19078  0058AC  6F64               	movwf	___lwmod@counter& (0+255),b
 19079  0058AE  D004               	goto	l2660
 19080  0058B0                     
 19081                           ; BSR set to: 0
 19082                           
 19083                           ; BSR set to: 0
 19084  0058B0  90D8               	bcf	status,0,c
 19085  0058B2  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 19086  0058B4  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 19087  0058B6  2B64               	incf	___lwmod@counter& (0+255),f,b
 19088  0058B8                     l2660:
 19089                           
 19090                           ; BSR set to: 0
 19091                           
 19092                           ; BSR set to: 0
 19093  0058B8  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 19094  0058BA  D7FA               	goto	l2661
 19095  0058BC                     u8880:
 19096                           
 19097                           ; BSR set to: 0
 19098                           
 19099                           ; BSR set to: 0
 19100                           
 19101                           ; BSR set to: 0
 19102  0058BC  5162               	movf	___lwmod@divisor& (0+255),w,b
 19103  0058BE  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 19104  0058C0  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 19105  0058C2  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 19106  0058C4  A0D8               	btfss	status,0,c
 19107  0058C6  D004               	goto	l2664
 19108                           
 19109                           ; BSR set to: 0
 19110  0058C8  5162               	movf	___lwmod@divisor& (0+255),w,b
 19111  0058CA  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 19112  0058CC  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 19113  0058CE  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 19114  0058D0                     l2664:
 19115                           
 19116                           ; BSR set to: 0
 19117                           
 19118                           ; BSR set to: 0
 19119  0058D0  90D8               	bcf	status,0,c
 19120  0058D2  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 19121  0058D4  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 19122                           
 19123                           ; BSR set to: 0
 19124  0058D6  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 19125  0058D8  D7F1               	goto	u8880
 19126  0058DA                     l2665:
 19127                           
 19128                           ; BSR set to: 0
 19129                           
 19130                           ; BSR set to: 0
 19131  0058DA  C060  F060         	movff	___lwmod@dividend,?___lwmod
 19132  0058DE  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 19133                           
 19134                           ; BSR set to: 0
 19135  0058E2  0012               	return		;funcret
 19136  0058E4                     __end_of___lwmod:
 19137                           	opt stack 0
 19138                           tblptru	equ	0xFF8
 19139                           tblptrh	equ	0xFF7
 19140                           tblptrl	equ	0xFF6
 19141                           tablat	equ	0xFF5
 19142                           prodh	equ	0xFF4
 19143                           prodl	equ	0xFF3
 19144                           intcon	equ	0xFF2
 19145                           intcon3	equ	0xFF0
 19146                           postinc0	equ	0xFEE
 19147                           wreg	equ	0xFE8
 19148                           indf1	equ	0xFE7
 19149                           postdec1	equ	0xFE5
 19150                           fsr1h	equ	0xFE2
 19151                           fsr1l	equ	0xFE1
 19152                           indf2	equ	0xFDF
 19153                           fsr2h	equ	0xFDA
 19154                           fsr2l	equ	0xFD9
 19155                           status	equ	0xFD8
 19156                           
 19157 ;; *************** function ___almod *****************
 19158 ;; Defined at:
 19159 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\almod.c"
 19160 ;; Parameters:    Size  Location     Type
 19161 ;;  dividend        4    0[BANK0 ] long 
 19162 ;;  divisor         4    4[BANK0 ] long 
 19163 ;; Auto vars:     Size  Location     Type
 19164 ;;  sign            1    9[BANK0 ] unsigned char 
 19165 ;;  counter         1    8[BANK0 ] unsigned char 
 19166 ;; Return value:  Size  Location     Type
 19167 ;;                  4    0[BANK0 ] long 
 19168 ;; Registers used:
 19169 ;;		wreg, status,2, status,0
 19170 ;; Tracked objects:
 19171 ;;		On entry : 0/0
 19172 ;;		On exit  : 0/0
 19173 ;;		Unchanged: 0/0
 19174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19175 ;;      Params:         0       8       0       0       0       0       0       0       0
 19176 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19177 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19178 ;;      Totals:         0      10       0       0       0       0       0       0       0
 19179 ;;Total ram usage:       10 bytes
 19180 ;; Hardware stack levels used:    1
 19181 ;; Hardware stack levels required when called:   11
 19182 ;; This function calls:
 19183 ;;		Nothing
 19184 ;; This function is called by:
 19185 ;;		_TMRapp_Handler
 19186 ;; This function uses a non-reentrant model
 19187 ;;
 19188                           
 19189                           	psect	text60
 19190  004796                     __ptext60:
 19191                           	opt stack 0
 19192  004796                     ___almod:
 19193                           	opt stack 17
 19194                           
 19195                           ; BSR set to: 0
 19196                           ;incstack = 0
 19197  004796  0E00               	movlw	0
 19198  004798  0100               	movlb	0	; () banked
 19199  00479A  6F69               	movwf	___almod@sign& (0+255),b
 19200                           
 19201                           ; BSR set to: 0
 19202  00479C  AF63               	btfss	(___almod@dividend+3)& (0+255),7,b
 19203  00479E  D00A               	goto	l2315
 19204                           
 19205                           ; BSR set to: 0
 19206  0047A0  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 19207  0047A2  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 19208  0047A4  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 19209  0047A6  6D60               	negf	___almod@dividend& (0+255),b
 19210  0047A8  0E00               	movlw	0
 19211  0047AA  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 19212  0047AC  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 19213  0047AE  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 19214                           
 19215                           ; BSR set to: 0
 19216  0047B0  0E01               	movlw	1
 19217  0047B2  6F69               	movwf	___almod@sign& (0+255),b
 19218  0047B4                     l2315:
 19219                           
 19220                           ; BSR set to: 0
 19221                           
 19222                           ; BSR set to: 0
 19223  0047B4  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 19224  0047B6  D008               	goto	l2316
 19225                           
 19226                           ; BSR set to: 0
 19227  0047B8  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 19228  0047BA  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 19229  0047BC  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 19230  0047BE  6D64               	negf	___almod@divisor& (0+255),b
 19231  0047C0  0E00               	movlw	0
 19232  0047C2  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 19233  0047C4  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 19234  0047C6  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 19235  0047C8                     l2316:
 19236                           
 19237                           ; BSR set to: 0
 19238                           
 19239                           ; BSR set to: 0
 19240  0047C8  5164               	movf	___almod@divisor& (0+255),w,b
 19241  0047CA  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 19242  0047CC  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 19243  0047CE  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 19244  0047D0  B4D8               	btfsc	status,2,c
 19245  0047D2  D024               	goto	l2323
 19246                           
 19247                           ; BSR set to: 0
 19248  0047D4  0E01               	movlw	1
 19249  0047D6  6F68               	movwf	___almod@counter& (0+255),b
 19250  0047D8  D006               	goto	l2318
 19251  0047DA                     
 19252                           ; BSR set to: 0
 19253                           
 19254                           ; BSR set to: 0
 19255  0047DA  90D8               	bcf	status,0,c
 19256  0047DC  3764               	rlcf	___almod@divisor& (0+255),f,b
 19257  0047DE  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 19258  0047E0  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 19259  0047E2  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 19260  0047E4  2B68               	incf	___almod@counter& (0+255),f,b
 19261  0047E6                     l2318:
 19262                           
 19263                           ; BSR set to: 0
 19264                           
 19265                           ; BSR set to: 0
 19266  0047E6  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 19267  0047E8  D7F8               	goto	l2319
 19268  0047EA                     u8840:
 19269                           
 19270                           ; BSR set to: 0
 19271                           
 19272                           ; BSR set to: 0
 19273                           
 19274                           ; BSR set to: 0
 19275  0047EA  5164               	movf	___almod@divisor& (0+255),w,b
 19276  0047EC  5D60               	subwf	___almod@dividend& (0+255),w,b
 19277  0047EE  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 19278  0047F0  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 19279  0047F2  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 19280  0047F4  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 19281  0047F6  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 19282  0047F8  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 19283  0047FA  A0D8               	btfss	status,0,c
 19284  0047FC  D008               	goto	l2322
 19285                           
 19286                           ; BSR set to: 0
 19287  0047FE  5164               	movf	___almod@divisor& (0+255),w,b
 19288  004800  5F60               	subwf	___almod@dividend& (0+255),f,b
 19289  004802  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 19290  004804  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 19291  004806  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 19292  004808  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 19293  00480A  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 19294  00480C  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 19295  00480E                     l2322:
 19296                           
 19297                           ; BSR set to: 0
 19298                           
 19299                           ; BSR set to: 0
 19300  00480E  90D8               	bcf	status,0,c
 19301  004810  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 19302  004812  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 19303  004814  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 19304  004816  3364               	rrcf	___almod@divisor& (0+255),f,b
 19305                           
 19306                           ; BSR set to: 0
 19307  004818  2F68               	decfsz	___almod@counter& (0+255),f,b
 19308  00481A  D7E7               	goto	u8840
 19309  00481C                     l2323:
 19310                           
 19311                           ; BSR set to: 0
 19312                           
 19313                           ; BSR set to: 0
 19314                           
 19315                           ; BSR set to: 0
 19316  00481C  5169               	movf	___almod@sign& (0+255),w,b
 19317  00481E  B4D8               	btfsc	status,2,c
 19318  004820  D008               	goto	l2324
 19319                           
 19320                           ; BSR set to: 0
 19321  004822  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 19322  004824  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 19323  004826  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 19324  004828  6D60               	negf	___almod@dividend& (0+255),b
 19325  00482A  0E00               	movlw	0
 19326  00482C  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 19327  00482E  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 19328  004830  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 19329  004832                     l2324:
 19330                           
 19331                           ; BSR set to: 0
 19332                           
 19333                           ; BSR set to: 0
 19334  004832  C060  F060         	movff	___almod@dividend,?___almod
 19335  004836  C061  F061         	movff	___almod@dividend+1,?___almod+1
 19336  00483A  C062  F062         	movff	___almod@dividend+2,?___almod+2
 19337  00483E  C063  F063         	movff	___almod@dividend+3,?___almod+3
 19338  004842  0012               	return	
 19339  004844                     __end_of___almod:
 19340                           	opt stack 0
 19341                           tblptru	equ	0xFF8
 19342                           tblptrh	equ	0xFF7
 19343                           tblptrl	equ	0xFF6
 19344                           tablat	equ	0xFF5
 19345                           prodh	equ	0xFF4
 19346                           prodl	equ	0xFF3
 19347                           intcon	equ	0xFF2
 19348                           intcon3	equ	0xFF0
 19349                           postinc0	equ	0xFEE
 19350                           wreg	equ	0xFE8
 19351                           indf1	equ	0xFE7
 19352                           postdec1	equ	0xFE5
 19353                           fsr1h	equ	0xFE2
 19354                           fsr1l	equ	0xFE1
 19355                           indf2	equ	0xFDF
 19356                           fsr2h	equ	0xFDA
 19357                           fsr2l	equ	0xFD9
 19358                           status	equ	0xFD8
 19359                           
 19360 ;; *************** function _TMRapp_ClearBitFlags *****************
 19361 ;; Defined at:
 19362 ;;		line 51 in file "../Includes/Drivers/TMRapp.c"
 19363 ;; Parameters:    Size  Location     Type
 19364 ;;		None
 19365 ;; Auto vars:     Size  Location     Type
 19366 ;;		None
 19367 ;; Return value:  Size  Location     Type
 19368 ;;                  1    wreg      void 
 19369 ;; Registers used:
 19370 ;;		wreg, status,2
 19371 ;; Tracked objects:
 19372 ;;		On entry : 0/0
 19373 ;;		On exit  : 0/0
 19374 ;;		Unchanged: 0/0
 19375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19376 ;;      Params:         0       0       0       0       0       0       0       0       0
 19377 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19378 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19379 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19380 ;;Total ram usage:        0 bytes
 19381 ;; Hardware stack levels used:    1
 19382 ;; Hardware stack levels required when called:   11
 19383 ;; This function calls:
 19384 ;;		Nothing
 19385 ;; This function is called by:
 19386 ;;		_moteHandler
 19387 ;; This function uses a non-reentrant model
 19388 ;;
 19389                           
 19390                           	psect	text61
 19391  0061FA                     __ptext61:
 19392                           	opt stack 0
 19393  0061FA                     _TMRapp_ClearBitFlags:
 19394                           	opt stack 18
 19395                           
 19396                           ;TMRapp.c: 54: appTimer.TicksBitMap = 0x00;
 19397                           
 19398                           ; BSR set to: 0
 19399                           ;incstack = 0
 19400  0061FA  0E00               	movlw	0
 19401  0061FC  0100               	movlb	0	; () banked
 19402  0061FE  6FF8               	movwf	_appTimer& (0+255),b
 19403                           
 19404                           ; BSR set to: 0
 19405  006200  0012               	return		;funcret
 19406  006202                     __end_of_TMRapp_ClearBitFlags:
 19407                           	opt stack 0
 19408                           tblptru	equ	0xFF8
 19409                           tblptrh	equ	0xFF7
 19410                           tblptrl	equ	0xFF6
 19411                           tablat	equ	0xFF5
 19412                           prodh	equ	0xFF4
 19413                           prodl	equ	0xFF3
 19414                           intcon	equ	0xFF2
 19415                           intcon3	equ	0xFF0
 19416                           postinc0	equ	0xFEE
 19417                           wreg	equ	0xFE8
 19418                           indf1	equ	0xFE7
 19419                           postdec1	equ	0xFE5
 19420                           fsr1h	equ	0xFE2
 19421                           fsr1l	equ	0xFE1
 19422                           indf2	equ	0xFDF
 19423                           fsr2h	equ	0xFDA
 19424                           fsr2l	equ	0xFD9
 19425                           status	equ	0xFD8
 19426                           
 19427 ;; *************** function _MOTEapp_TimerBasedTask *****************
 19428 ;; Defined at:
 19429 ;;		line 1027 in file "../Includes/Board/MOTEapp.c"
 19430 ;; Parameters:    Size  Location     Type
 19431 ;;  timerTask       1    wreg     struct .
 19432 ;; Auto vars:     Size  Location     Type
 19433 ;;  timerTask       1    0[BANK0 ] struct .
 19434 ;; Return value:  Size  Location     Type
 19435 ;;                  1    wreg      void 
 19436 ;; Registers used:
 19437 ;;		wreg, status,2, status,0
 19438 ;; Tracked objects:
 19439 ;;		On entry : 0/0
 19440 ;;		On exit  : 0/0
 19441 ;;		Unchanged: 0/0
 19442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19443 ;;      Params:         0       0       0       0       0       0       0       0       0
 19444 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19445 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19446 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19447 ;;Total ram usage:        1 bytes
 19448 ;; Hardware stack levels used:    1
 19449 ;; Hardware stack levels required when called:   11
 19450 ;; This function calls:
 19451 ;;		Nothing
 19452 ;; This function is called by:
 19453 ;;		_moteHandler
 19454 ;; This function uses a non-reentrant model
 19455 ;;
 19456                           
 19457                           	psect	text62
 19458  005F2A                     __ptext62:
 19459                           	opt stack 0
 19460  005F2A                     _MOTEapp_TimerBasedTask:
 19461                           	opt stack 18
 19462                           
 19463                           ; BSR set to: 0
 19464                           ;incstack = 0
 19465                           ;MOTEapp_TimerBasedTask@timerTask stored from wreg
 19466  005F2A  0100               	movlb	0	; () banked
 19467  005F2C  6F60               	movwf	MOTEapp_TimerBasedTask@timerTask& (0+255),b
 19468                           
 19469                           ;MOTEapp.c: 1032: if (timerTask.mSecTenTick)
 19470  005F2E  0100               	movlb	0	; () banked
 19471  005F30  A360               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),1,b
 19472  005F32  D003               	goto	l605
 19473                           
 19474                           ; BSR set to: 0
 19475                           ;MOTEapp.c: 1033: {
 19476                           ;MOTEapp.c: 1035: m10SecTicker++;
 19477  005F34  0101               	movlb	1	; () banked
 19478  005F36  4B58               	infsnz	_m10SecTicker& (0+255),f,b
 19479  005F38  2B59               	incf	(_m10SecTicker+1)& (0+255),f,b
 19480  005F3A                     l605:
 19481                           
 19482                           ;MOTEapp.c: 1041: }
 19483                           ;MOTEapp.c: 1042: if (timerTask.SecTick)
 19484                           
 19485                           ; BSR set to: 1
 19486                           
 19487                           ;MOTEapp.c: 1038: {
 19488                           
 19489                           ; BSR set to: 1
 19490                           
 19491                           ; BSR set to: 1
 19492  005F3A  0100               	movlb	0	; () banked
 19493  005F3C  B760               	btfsc	MOTEapp_TimerBasedTask@timerTask& (0+255),3,b
 19494                           
 19495                           ; BSR set to: 0
 19496                           ;MOTEapp.c: 1043: {
 19497                           ;MOTEapp.c: 1045: secTicker++;
 19498  005F3E  2BF0               	incf	_secTicker& (0+255),f,b
 19499                           
 19500                           ; BSR set to: 0
 19501                           ;MOTEapp.c: 1046: }
 19502                           ;MOTEapp.c: 1047: if (timerTask.MinTick)
 19503                           
 19504                           ; BSR set to: 0
 19505  005F40  A960               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),4,b
 19506  005F42  0012               	return	
 19507                           
 19508                           ; BSR set to: 0
 19509                           ;MOTEapp.c: 1048: {
 19510                           ;MOTEapp.c: 1050: minTicker++;
 19511  005F44  0101               	movlb	1	; () banked
 19512  005F46  2B63               	incf	_minTicker& (0+255),f,b
 19513                           
 19514                           ; BSR set to: 1
 19515                           
 19516                           ; BSR set to: 1
 19517                           
 19518                           ;MOTEapp.c: 1057: {
 19519                           
 19520                           ; BSR set to: 1
 19521                           
 19522                           ; BSR set to: 1
 19523                           
 19524                           ;MOTEapp.c: 1053: {
 19525                           
 19526                           ; BSR set to: 1
 19527                           
 19528                           ; BSR set to: 1
 19529  005F48  0012               	return	
 19530  005F4A                     __end_of_MOTEapp_TimerBasedTask:
 19531                           	opt stack 0
 19532                           tblptru	equ	0xFF8
 19533                           tblptrh	equ	0xFF7
 19534                           tblptrl	equ	0xFF6
 19535                           tablat	equ	0xFF5
 19536                           prodh	equ	0xFF4
 19537                           prodl	equ	0xFF3
 19538                           intcon	equ	0xFF2
 19539                           intcon3	equ	0xFF0
 19540                           postinc0	equ	0xFEE
 19541                           wreg	equ	0xFE8
 19542                           indf1	equ	0xFE7
 19543                           postdec1	equ	0xFE5
 19544                           fsr1h	equ	0xFE2
 19545                           fsr1l	equ	0xFE1
 19546                           indf2	equ	0xFDF
 19547                           fsr2h	equ	0xFDA
 19548                           fsr2l	equ	0xFD9
 19549                           status	equ	0xFD8
 19550                           
 19551 ;; *************** function _moteApp_clearCommand *****************
 19552 ;; Defined at:
 19553 ;;		line 1259 in file "../Includes/Board/MOTEapp.c"
 19554 ;; Parameters:    Size  Location     Type
 19555 ;;		None
 19556 ;; Auto vars:     Size  Location     Type
 19557 ;;		None
 19558 ;; Return value:  Size  Location     Type
 19559 ;;                  1    wreg      void 
 19560 ;; Registers used:
 19561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19562 ;; Tracked objects:
 19563 ;;		On entry : 0/0
 19564 ;;		On exit  : 0/0
 19565 ;;		Unchanged: 0/0
 19566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19567 ;;      Params:         0       0       0       0       0       0       0       0       0
 19568 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19569 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19570 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19571 ;;Total ram usage:        0 bytes
 19572 ;; Hardware stack levels used:    1
 19573 ;; Hardware stack levels required when called:   14
 19574 ;; This function calls:
 19575 ;;		_sendCommand
 19576 ;; This function is called by:
 19577 ;;		_main
 19578 ;; This function uses a non-reentrant model
 19579 ;;
 19580                           
 19581                           	psect	text63
 19582  00616E                     __ptext63:
 19583                           	opt stack 0
 19584  00616E                     _moteApp_clearCommand:
 19585                           	opt stack 16
 19586                           
 19587                           ;MOTEapp.c: 1261: sendCommand("\r\n");
 19588                           
 19589                           ;incstack = 0
 19590  00616E  0E05               	movlw	low (STR_177+23)
 19591  006170  0100               	movlb	0	; () banked
 19592  006172  6F61               	movwf	sendCommand@string& (0+255),b
 19593  006174  0E7A               	movlw	high (STR_177+23)
 19594  006176  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 19595  006178  ECC0  F02D         	call	_sendCommand	;wreg free
 19596  00617C  0012               	return		;funcret
 19597  00617E                     __end_of_moteApp_clearCommand:
 19598                           	opt stack 0
 19599                           tblptru	equ	0xFF8
 19600                           tblptrh	equ	0xFF7
 19601                           tblptrl	equ	0xFF6
 19602                           tablat	equ	0xFF5
 19603                           prodh	equ	0xFF4
 19604                           prodl	equ	0xFF3
 19605                           intcon	equ	0xFF2
 19606                           intcon3	equ	0xFF0
 19607                           postinc0	equ	0xFEE
 19608                           wreg	equ	0xFE8
 19609                           indf1	equ	0xFE7
 19610                           postdec1	equ	0xFE5
 19611                           fsr1h	equ	0xFE2
 19612                           fsr1l	equ	0xFE1
 19613                           indf2	equ	0xFDF
 19614                           fsr2h	equ	0xFDA
 19615                           fsr2l	equ	0xFD9
 19616                           status	equ	0xFD8
 19617                           
 19618 ;; *************** function _sendCommand *****************
 19619 ;; Defined at:
 19620 ;;		line 1114 in file "../Includes/Board/MOTEapp.c"
 19621 ;; Parameters:    Size  Location     Type
 19622 ;;  string          2    1[BANK0 ] PTR const unsigned char 
 19623 ;;		 -> STR_186(22), STR_185(22), STR_184(27), STR_183(27), 
 19624 ;;		 -> STR_178(26), STR_177(26), STR_176(26), STR_175(26), 
 19625 ;;		 -> STR_174(3), STR_173(9), STR_172(15), STR_171(13), 
 19626 ;;		 -> STR_170(13), STR_169(13), STR_168(13), STR_167(13), 
 19627 ;;		 -> STR_166(13), STR_165(13), STR_164(13), STR_163(16), 
 19628 ;;		 -> STR_70(11), STR_68(11), STR_66(14), STR_58(14), 
 19629 ;;		 -> STR_52(10), STR_48(13), STR_43(14), STR_41(13), 
 19630 ;;		 -> STR_39(10), STR_30(10), STR_22(20), STR_21(2), 
 19631 ;; Auto vars:     Size  Location     Type
 19632 ;;		None
 19633 ;; Return value:  Size  Location     Type
 19634 ;;                  1    wreg      void 
 19635 ;; Registers used:
 19636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19637 ;; Tracked objects:
 19638 ;;		On entry : 0/0
 19639 ;;		On exit  : 0/0
 19640 ;;		Unchanged: 0/0
 19641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19642 ;;      Params:         0       2       0       0       0       0       0       0       0
 19643 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19644 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19645 ;;      Totals:         0       2       0       0       0       0       0       0       0
 19646 ;;Total ram usage:        2 bytes
 19647 ;; Hardware stack levels used:    1
 19648 ;; Hardware stack levels required when called:   13
 19649 ;; This function calls:
 19650 ;;		_EUSART_Write
 19651 ;;		_EndLine
 19652 ;; This function is called by:
 19653 ;;		_moduleResync
 19654 ;;		_moduleSleep
 19655 ;;		_moteJoiningProcess
 19656 ;;		_MOTEapp_SetDataRateSetting
 19657 ;;		_moteApp_clearCommand
 19658 ;;		_moteApp_toggleLeds
 19659 ;;		_moteApp_setSensorsInput
 19660 ;;		_moteApp_getTempValue
 19661 ;;		_moteApp_getLightValue
 19662 ;; This function uses a non-reentrant model
 19663 ;;
 19664                           
 19665                           	psect	text64
 19666  005B80                     __ptext64:
 19667                           	opt stack 0
 19668  005B80                     _sendCommand:
 19669                           	opt stack 14
 19670                           
 19671                           ;MOTEapp.c: 1117: while (*string)
 19672                           
 19673                           ;incstack = 0
 19674  005B80  D00C               	goto	l636
 19675  005B82                     
 19676                           ;MOTEapp.c: 1118: {
 19677                           ;MOTEapp.c: 1119: EUSART_Write(*string++);
 19678  005B82  C061  FFF6         	movff	sendCommand@string,tblptrl
 19679  005B86  C062  FFF7         	movff	sendCommand@string+1,tblptrh
 19680  005B8A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19681  005B8A  6AF8               	clrf	tblptru,c
 19682  005B8C                     	endif
 19683  005B8C                     	if	0	;tblptru may be non-zero
 19684  005B8C                     	endif
 19685  005B8C  0008               	tblrd		*
 19686  005B8E  50F5               	movf	tablat,w,c
 19687  005B90  ECF3  F02C         	call	_EUSART_Write
 19688  005B94  0100               	movlb	0	; () banked
 19689  005B96  4B61               	infsnz	sendCommand@string& (0+255),f,b
 19690  005B98  2B62               	incf	(sendCommand@string+1)& (0+255),f,b
 19691  005B9A                     l636:
 19692                           
 19693                           ; BSR set to: 0
 19694  005B9A  C061  FFF6         	movff	sendCommand@string,tblptrl
 19695  005B9E  C062  FFF7         	movff	sendCommand@string+1,tblptrh
 19696  005BA2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19697  005BA2  6AF8               	clrf	tblptru,c
 19698  005BA4                     	endif
 19699  005BA4                     	if	0	;tblptru may be non-zero
 19700  005BA4                     	endif
 19701  005BA4  0008               	tblrd		*
 19702  005BA6  50F5               	movf	tablat,w,c
 19703  005BA8  0900               	iorlw	0
 19704  005BAA  A4D8               	btfss	status,2,c
 19705  005BAC  D7EA               	goto	l637
 19706                           
 19707                           ;MOTEapp.c: 1120: }
 19708                           ;MOTEapp.c: 1121: EndLine();
 19709  005BAE  ECC7  F030         	call	_EndLine	;wreg free
 19710  005BB2  0012               	return		;funcret
 19711  005BB4                     __end_of_sendCommand:
 19712                           	opt stack 0
 19713                           tblptru	equ	0xFF8
 19714                           tblptrh	equ	0xFF7
 19715                           tblptrl	equ	0xFF6
 19716                           tablat	equ	0xFF5
 19717                           prodh	equ	0xFF4
 19718                           prodl	equ	0xFF3
 19719                           intcon	equ	0xFF2
 19720                           intcon3	equ	0xFF0
 19721                           postinc0	equ	0xFEE
 19722                           wreg	equ	0xFE8
 19723                           indf1	equ	0xFE7
 19724                           postdec1	equ	0xFE5
 19725                           fsr1h	equ	0xFE2
 19726                           fsr1l	equ	0xFE1
 19727                           indf2	equ	0xFDF
 19728                           fsr2h	equ	0xFDA
 19729                           fsr2l	equ	0xFD9
 19730                           status	equ	0xFD8
 19731                           
 19732 ;; *************** function _EndLine *****************
 19733 ;; Defined at:
 19734 ;;		line 1108 in file "../Includes/Board/MOTEapp.c"
 19735 ;; Parameters:    Size  Location     Type
 19736 ;;		None
 19737 ;; Auto vars:     Size  Location     Type
 19738 ;;		None
 19739 ;; Return value:  Size  Location     Type
 19740 ;;                  1    wreg      void 
 19741 ;; Registers used:
 19742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19743 ;; Tracked objects:
 19744 ;;		On entry : 0/0
 19745 ;;		On exit  : 0/0
 19746 ;;		Unchanged: 0/0
 19747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19748 ;;      Params:         0       0       0       0       0       0       0       0       0
 19749 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19750 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19751 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19752 ;;Total ram usage:        0 bytes
 19753 ;; Hardware stack levels used:    1
 19754 ;; Hardware stack levels required when called:   12
 19755 ;; This function calls:
 19756 ;;		_EUSART_Write
 19757 ;; This function is called by:
 19758 ;;		_sendCommand
 19759 ;;		_sendDataCommand
 19760 ;; This function uses a non-reentrant model
 19761 ;;
 19762                           
 19763                           	psect	text65
 19764  00618E                     __ptext65:
 19765                           	opt stack 0
 19766  00618E                     _EndLine:
 19767                           	opt stack 14
 19768                           
 19769                           ;MOTEapp.c: 1110: EUSART_Write(0x0D);
 19770                           
 19771                           ;incstack = 0
 19772  00618E  0E0D               	movlw	13
 19773  006190  ECF3  F02C         	call	_EUSART_Write
 19774                           
 19775                           ;MOTEapp.c: 1111: EUSART_Write(0x0A);
 19776  006194  0E0A               	movlw	10
 19777  006196  ECF3  F02C         	call	_EUSART_Write
 19778  00619A  0012               	return		;funcret
 19779  00619C                     __end_of_EndLine:
 19780                           	opt stack 0
 19781                           tblptru	equ	0xFF8
 19782                           tblptrh	equ	0xFF7
 19783                           tblptrl	equ	0xFF6
 19784                           tablat	equ	0xFF5
 19785                           prodh	equ	0xFF4
 19786                           prodl	equ	0xFF3
 19787                           intcon	equ	0xFF2
 19788                           intcon3	equ	0xFF0
 19789                           postinc0	equ	0xFEE
 19790                           wreg	equ	0xFE8
 19791                           indf1	equ	0xFE7
 19792                           postdec1	equ	0xFE5
 19793                           fsr1h	equ	0xFE2
 19794                           fsr1l	equ	0xFE1
 19795                           indf2	equ	0xFDF
 19796                           fsr2h	equ	0xFDA
 19797                           fsr2l	equ	0xFD9
 19798                           status	equ	0xFD8
 19799                           
 19800 ;; *************** function _USBapp_handlerState *****************
 19801 ;; Defined at:
 19802 ;;		line 78 in file "../Includes/Board/USBapp.c"
 19803 ;; Parameters:    Size  Location     Type
 19804 ;;  state           1    wreg     enum E5833
 19805 ;; Auto vars:     Size  Location     Type
 19806 ;;  state           1    0[BANK0 ] enum E5833
 19807 ;; Return value:  Size  Location     Type
 19808 ;;                  1    wreg      void 
 19809 ;; Registers used:
 19810 ;;		wreg
 19811 ;; Tracked objects:
 19812 ;;		On entry : 0/0
 19813 ;;		On exit  : 0/0
 19814 ;;		Unchanged: 0/0
 19815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19816 ;;      Params:         0       0       0       0       0       0       0       0       0
 19817 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19818 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19819 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19820 ;;Total ram usage:        1 bytes
 19821 ;; Hardware stack levels used:    1
 19822 ;; Hardware stack levels required when called:   11
 19823 ;; This function calls:
 19824 ;;		Nothing
 19825 ;; This function is called by:
 19826 ;;		_main
 19827 ;; This function uses a non-reentrant model
 19828 ;;
 19829                           
 19830                           	psect	text66
 19831  0061D4                     __ptext66:
 19832                           	opt stack 0
 19833  0061D4                     _USBapp_handlerState:
 19834                           	opt stack 19
 19835                           
 19836                           ;incstack = 0
 19837                           ;USBapp_handlerState@state stored from wreg
 19838  0061D4  0100               	movlb	0	; () banked
 19839  0061D6  6F60               	movwf	USBapp_handlerState@state& (0+255),b
 19840                           
 19841                           ;USBapp.c: 80: usbState = state;
 19842  0061D8  C060  F0EA         	movff	USBapp_handlerState@state,_usbState
 19843  0061DC  0012               	return		;funcret
 19844  0061DE                     __end_of_USBapp_handlerState:
 19845                           	opt stack 0
 19846                           tblptru	equ	0xFF8
 19847                           tblptrh	equ	0xFF7
 19848                           tblptrl	equ	0xFF6
 19849                           tablat	equ	0xFF5
 19850                           prodh	equ	0xFF4
 19851                           prodl	equ	0xFF3
 19852                           intcon	equ	0xFF2
 19853                           intcon3	equ	0xFF0
 19854                           postinc0	equ	0xFEE
 19855                           wreg	equ	0xFE8
 19856                           indf1	equ	0xFE7
 19857                           postdec1	equ	0xFE5
 19858                           fsr1h	equ	0xFE2
 19859                           fsr1l	equ	0xFE1
 19860                           indf2	equ	0xFDF
 19861                           fsr2h	equ	0xFDA
 19862                           fsr2l	equ	0xFD9
 19863                           status	equ	0xFD8
 19864                           
 19865 ;; *************** function _USBapp_Handler *****************
 19866 ;; Defined at:
 19867 ;;		line 86 in file "../Includes/Board/USBapp.c"
 19868 ;; Parameters:    Size  Location     Type
 19869 ;;		None
 19870 ;; Auto vars:     Size  Location     Type
 19871 ;;  buttonPress     1   24[BANK0 ] enum E5867
 19872 ;; Return value:  Size  Location     Type
 19873 ;;                  1    wreg      void 
 19874 ;; Registers used:
 19875 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19876 ;; Tracked objects:
 19877 ;;		On entry : 0/0
 19878 ;;		On exit  : 0/0
 19879 ;;		Unchanged: 0/0
 19880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19881 ;;      Params:         0       0       0       0       0       0       0       0       0
 19882 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19883 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19884 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19885 ;;Total ram usage:        1 bytes
 19886 ;; Hardware stack levels used:    1
 19887 ;; Hardware stack levels required when called:   16
 19888 ;; This function calls:
 19889 ;;		_USBapp_DeviceCdcEmulatorHandler
 19890 ;;		_oled_clear
 19891 ;;		_oled_putString
 19892 ;;		_service_pushbutton
 19893 ;; This function is called by:
 19894 ;;		_main
 19895 ;; This function uses a non-reentrant model
 19896 ;;
 19897                           
 19898                           	psect	text67
 19899  003F64                     __ptext67:
 19900                           	opt stack 0
 19901  003F64                     _USBapp_Handler:
 19902                           	opt stack 14
 19903                           
 19904                           ;USBapp.c: 90: {
 19905                           ;USBapp.c: 91: switch(usbState)
 19906                           
 19907                           ;incstack = 0
 19908                           ;USBapp.c: 89: do
 19909  003F64  D04D               	goto	l845
 19910  003F66                     
 19911                           ;USBapp.c: 94: while(1);
 19912  003F66  D7FF               	goto	l846
 19913  003F68                     
 19914                           ;USBapp.c: 98: oled_clear();
 19915  003F68  ECF0  F02F         	call	_oled_clear	;wreg free
 19916                           
 19917                           ;USBapp.c: 99: oled_putString("CDC Mode",1,0);
 19918  003F6C  0E10               	movlw	low STR_187
 19919  003F6E  0100               	movlb	0	; () banked
 19920  003F70  6F72               	movwf	oled_putString@string& (0+255),b
 19921  003F72  0E7F               	movlw	high STR_187
 19922  003F74  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 19923  003F76  5172               	movf	oled_putString@string& (0+255),w,b
 19924  003F78  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 19925  003F7A  A4D8               	btfss	status,2,c
 19926  003F7C  0E00               	movlw	low (__mediumconst shr (0+16))
 19927  003F7E  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 19928  003F80  0E01               	movlw	1
 19929  003F82  6F75               	movwf	oled_putString@station_dot& (0+255),b
 19930  003F84  0E00               	movlw	0
 19931  003F86  6F76               	movwf	oled_putString@start_page& (0+255),b
 19932  003F88  EC76  F028         	call	_oled_putString	;wreg free
 19933                           
 19934                           ;USBapp.c: 100: oled_putString("Command",2,1);
 19935  003F8C  0E61               	movlw	low STR_188
 19936  003F8E  0100               	movlb	0	; () banked
 19937  003F90  6F72               	movwf	oled_putString@string& (0+255),b
 19938  003F92  0E7F               	movlw	high STR_188
 19939  003F94  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 19940  003F96  5172               	movf	oled_putString@string& (0+255),w,b
 19941  003F98  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 19942  003F9A  A4D8               	btfss	status,2,c
 19943  003F9C  0E00               	movlw	low (__mediumconst shr (0+16))
 19944  003F9E  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 19945  003FA0  0E02               	movlw	2
 19946  003FA2  6F75               	movwf	oled_putString@station_dot& (0+255),b
 19947  003FA4  0E01               	movlw	1
 19948  003FA6  6F76               	movwf	oled_putString@start_page& (0+255),b
 19949  003FA8  EC76  F028         	call	_oled_putString	;wreg free
 19950                           
 19951                           ;USBapp.c: 101: oled_putString("USB Handler",0,2);
 19952  003FAC  0E28               	movlw	low STR_189
 19953  003FAE  0100               	movlb	0	; () banked
 19954  003FB0  6F72               	movwf	oled_putString@string& (0+255),b
 19955  003FB2  0E7E               	movlw	high STR_189
 19956  003FB4  6F73               	movwf	(oled_putString@string+1)& (0+255),b
 19957  003FB6  5172               	movf	oled_putString@string& (0+255),w,b
 19958  003FB8  1173               	iorwf	(oled_putString@string+1)& (0+255),w,b
 19959  003FBA  A4D8               	btfss	status,2,c
 19960  003FBC  0E00               	movlw	low (__mediumconst shr (0+16))
 19961  003FBE  6F74               	movwf	(oled_putString@string+2)& (0+255),b
 19962  003FC0  0E00               	movlw	0
 19963  003FC2  6F75               	movwf	oled_putString@station_dot& (0+255),b
 19964  003FC4  0E02               	movlw	2
 19965  003FC6  6F76               	movwf	oled_putString@start_page& (0+255),b
 19966  003FC8  EC76  F028         	call	_oled_putString	;wreg free
 19967                           
 19968                           ;USBapp.c: 103: usbState = USB_RUNNING;
 19969  003FCC  0E01               	movlw	1
 19970  003FCE  0100               	movlb	0	; () banked
 19971  003FD0  D005               	goto	L16
 19972  003FD2                     
 19973                           ; BSR set to: 0
 19974                           ;USBapp.c: 107: if( USBDeviceState < CONFIGURED_STATE )
 19975                           
 19976                           ; BSR set to: 0
 19977  003FD2  0E20               	movlw	32
 19978  003FD4  61EC               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 19979  003FD6  D001               	goto	l853
 19980  003FD8  D01F               	goto	l850
 19981  003FDA                     l853:
 19982                           
 19983                           ; BSR set to: 0
 19984                           ;USBapp.c: 111: }
 19985                           ;USBapp.c: 112: usbState = USB_CDC;
 19986                           
 19987                           ; BSR set to: 0
 19988  003FDA  0E02               	movlw	2
 19989  003FDC                     L16:
 19990  003FDC  6FEA               	movwf	_usbState& (0+255),b
 19991                           
 19992                           ;USBapp.c: 113: break;
 19993  003FDE  D01C               	goto	l850
 19994  003FE0                     
 19995                           ; BSR set to: 0
 19996                           ;USBapp.c: 116: USBapp_DeviceCdcEmulatorHandler();
 19997                           
 19998                           ; BSR set to: 0
 19999  003FE0  EC91  F01D         	call	_USBapp_DeviceCdcEmulatorHandler	;wreg free
 20000                           
 20001                           ;USBapp.c: 120: buttonStates_t buttonPress = Released;
 20002  003FE4  0E03               	movlw	3
 20003  003FE6  0100               	movlb	0	; () banked
 20004  003FE8  6F78               	movwf	USBapp_Handler@buttonPress& (0+255),b
 20005                           
 20006                           ; BSR set to: 0
 20007                           ;USBapp.c: 121: buttonPress = service_pushbutton();
 20008  003FEA  EC93  F029         	call	_service_pushbutton	;wreg free
 20009  003FEE  0100               	movlb	0	; () banked
 20010  003FF0  6F78               	movwf	USBapp_Handler@buttonPress& (0+255),b
 20011                           
 20012                           ; BSR set to: 0
 20013                           ;USBapp.c: 122: if (buttonPress != Released )
 20014  003FF2  0E03               	movlw	3
 20015  003FF4  1978               	xorwf	USBapp_Handler@buttonPress& (0+255),w,b
 20016  003FF6  B4D8               	btfsc	status,2,c
 20017  003FF8  D00F               	goto	l850
 20018                           
 20019                           ; BSR set to: 0
 20020                           ;USBapp.c: 123: {
 20021                           ;USBapp.c: 124: exitUSB = USB_BAT;
 20022  003FFA  0E02               	movlw	2
 20023  003FFC  6FF9               	movwf	_exitUSB& (0+255),b
 20024                           
 20025                           ; BSR set to: 0
 20026                           ;USBapp.c: 127: }
 20027                           
 20028                           ; BSR set to: 0
 20029                           ;USBapp.c: 125: }
 20030                           ;USBapp.c: 126: break;
 20031  003FFE  D00C               	goto	l850
 20032  004000                     l845:
 20033                           
 20034                           ; BSR set to: 0
 20035  004000  0100               	movlb	0	; () banked
 20036  004002  51EA               	movf	_usbState& (0+255),w,b
 20037                           
 20038                           ; Switch size 1, requested type "space"
 20039                           ; Number of cases is 3, Range of values is 0 to 2
 20040                           ; switch strategies available:
 20041                           ; Name         Instructions Cycles
 20042                           ; simple_byte           10     6 (average)
 20043                           ;	Chosen strategy is simple_byte
 20044  004004  0A00               	xorlw	0	; case 0
 20045  004006  B4D8               	btfsc	status,2,c
 20046  004008  D7AF               	goto	l851
 20047  00400A  0A01               	xorlw	1	; case 1
 20048  00400C  B4D8               	btfsc	status,2,c
 20049  00400E  D7E1               	goto	l852
 20050  004010  0A03               	xorlw	3	; case 2
 20051  004012  B4D8               	btfsc	status,2,c
 20052  004014  D7E5               	goto	l855
 20053  004016  D7A7               	goto	l846
 20054  004018                     l850:
 20055                           
 20056                           ;USBapp.c: 128: }while((PORTAbits.RA0) && (exitUSB == NO_USB));
 20057                           
 20058                           ; BSR set to: 0
 20059  004018  A080               	btfss	3968,0,c	;volatile
 20060  00401A  D004               	goto	u10280
 20061  00401C  0100               	movlb	0	; () banked
 20062  00401E  51F9               	movf	_exitUSB& (0+255),w,b
 20063  004020  B4D8               	btfsc	status,2,c
 20064  004022  D7EE               	goto	l845
 20065  004024                     u10280:
 20066                           
 20067                           ;USBapp.c: 129: __nop();
 20068                           
 20069                           ; BSR set to: 0
 20070  004024  F000               	nop	
 20071                           
 20072                           ;USBapp.c: 130: if (exitUSB != USB_BAT)
 20073  004026  0E02               	movlw	2
 20074  004028  0100               	movlb	0	; () banked
 20075  00402A  19F9               	xorwf	_exitUSB& (0+255),w,b
 20076  00402C  B4D8               	btfsc	status,2,c
 20077  00402E  0012               	return	
 20078                           
 20079                           ; BSR set to: 0
 20080                           ;USBapp.c: 131: exitUSB = NO_USB;
 20081  004030  0E00               	movlw	0
 20082  004032  6FF9               	movwf	_exitUSB& (0+255),b
 20083  004034  0012               	return	
 20084  004036                     __end_of_USBapp_Handler:
 20085                           	opt stack 0
 20086                           tblptru	equ	0xFF8
 20087                           tblptrh	equ	0xFF7
 20088                           tblptrl	equ	0xFF6
 20089                           tablat	equ	0xFF5
 20090                           prodh	equ	0xFF4
 20091                           prodl	equ	0xFF3
 20092                           intcon	equ	0xFF2
 20093                           intcon3	equ	0xFF0
 20094                           postinc0	equ	0xFEE
 20095                           wreg	equ	0xFE8
 20096                           indf1	equ	0xFE7
 20097                           postdec1	equ	0xFE5
 20098                           fsr1h	equ	0xFE2
 20099                           fsr1l	equ	0xFE1
 20100                           indf2	equ	0xFDF
 20101                           fsr2h	equ	0xFDA
 20102                           fsr2l	equ	0xFD9
 20103                           status	equ	0xFD8
 20104                           
 20105 ;; *************** function _service_pushbutton *****************
 20106 ;; Defined at:
 20107 ;;		line 49 in file "../Includes/Drivers/buttons.c"
 20108 ;; Parameters:    Size  Location     Type
 20109 ;;		None
 20110 ;; Auto vars:     Size  Location     Type
 20111 ;;  bs              1    0[BANK0 ] enum E5748
 20112 ;; Return value:  Size  Location     Type
 20113 ;;                  1    wreg      enum E5836
 20114 ;; Registers used:
 20115 ;;		wreg, status,2, status,0
 20116 ;; Tracked objects:
 20117 ;;		On entry : 0/0
 20118 ;;		On exit  : 0/0
 20119 ;;		Unchanged: 0/0
 20120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20121 ;;      Params:         0       0       0       0       0       0       0       0       0
 20122 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20123 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20124 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20125 ;;Total ram usage:        1 bytes
 20126 ;; Hardware stack levels used:    1
 20127 ;; Hardware stack levels required when called:   11
 20128 ;; This function calls:
 20129 ;;		Nothing
 20130 ;; This function is called by:
 20131 ;;		_moteHandler
 20132 ;;		_USBapp_Handler
 20133 ;; This function uses a non-reentrant model
 20134 ;;
 20135                           
 20136                           	psect	text68
 20137  005326                     __ptext68:
 20138                           	opt stack 0
 20139  005326                     _service_pushbutton:
 20140                           	opt stack 18
 20141                           
 20142                           ;buttons.c: 51: static uint32_t PB_Timer = 0;
 20143                           ;buttons.c: 52: static uint8_t Release_Timer = 0;
 20144                           ;buttons.c: 53: buttonStates_t bs = NoButton;
 20145                           
 20146                           ; BSR set to: 0
 20147                           ;incstack = 0
 20148  005326  0E00               	movlw	0
 20149  005328  0100               	movlb	0	; () banked
 20150  00532A  6F60               	movwf	service_pushbutton@bs& (0+255),b
 20151                           
 20152                           ; BSR set to: 0
 20153                           ;buttons.c: 55: if ((PORTBbits.RB1 == 0) || (PORTBbits.RB0 == 0) )
 20154  00532C  A281               	btfss	3969,1,c	;volatile
 20155  00532E  D002               	goto	u9090
 20156                           
 20157                           ; BSR set to: 0
 20158  005330  B081               	btfsc	3969,0,c	;volatile
 20159  005332  D01A               	goto	l938
 20160  005334                     u9090:
 20161                           
 20162                           ; BSR set to: 0
 20163                           ;buttons.c: 56: {
 20164                           ;buttons.c: 57: ++PB_Timer;
 20165                           
 20166                           ; BSR set to: 0
 20167  005334  0E01               	movlw	1
 20168  005336  0101               	movlb	1	; () banked
 20169  005338  274A               	addwf	service_pushbutton@PB_Timer& (0+255),f,b
 20170  00533A  0E00               	movlw	0
 20171  00533C  234B               	addwfc	(service_pushbutton@PB_Timer+1)& (0+255),f,b
 20172  00533E  234C               	addwfc	(service_pushbutton@PB_Timer+2)& (0+255),f,b
 20173  005340  234D               	addwfc	(service_pushbutton@PB_Timer+3)& (0+255),f,b
 20174                           
 20175                           ;buttons.c: 61: if (PB_Timer == 55)
 20176  005342  0E37               	movlw	55
 20177  005344  194A               	xorwf	service_pushbutton@PB_Timer& (0+255),w,b
 20178  005346  114B               	iorwf	(service_pushbutton@PB_Timer+1)& (0+255),w,b
 20179  005348  114C               	iorwf	(service_pushbutton@PB_Timer+2)& (0+255),w,b
 20180  00534A  114D               	iorwf	(service_pushbutton@PB_Timer+3)& (0+255),w,b
 20181  00534C  A4D8               	btfss	status,2,c
 20182  00534E  D009               	goto	l941
 20183                           
 20184                           ; BSR set to: 1
 20185                           ;buttons.c: 62: {
 20186                           ;buttons.c: 63: Release_Timer = 0;
 20187  005350  0E00               	movlw	0
 20188  005352  0100               	movlb	0	; () banked
 20189  005354  6FE4               	movwf	service_pushbutton@Release_Timer& (0+255),b
 20190                           
 20191                           ; BSR set to: 0
 20192                           ;buttons.c: 65: if (PORTBbits.RB1 == 0)
 20193  005356  B281               	btfsc	3969,1,c	;volatile
 20194  005358  D002               	goto	l942
 20195                           
 20196                           ; BSR set to: 0
 20197                           ;buttons.c: 66: {
 20198                           ;buttons.c: 67: bs = ShortPress1;
 20199  00535A  0E01               	movlw	1
 20200  00535C  D018               	goto	L19
 20201  00535E                     l942:
 20202                           
 20203                           ; BSR set to: 0
 20204                           ;buttons.c: 69: else
 20205                           ;buttons.c: 70: {
 20206                           ;buttons.c: 71: bs = ShortPress2;
 20207                           
 20208                           ; BSR set to: 0
 20209  00535E  0E02               	movlw	2
 20210  005360  D016               	goto	L19
 20211  005362                     l941:
 20212                           
 20213                           ;buttons.c: 74: else
 20214                           ;buttons.c: 75: {
 20215                           ;buttons.c: 76: bs = NoButton;
 20216                           
 20217                           ; BSR set to: 0
 20218  005362  0E00               	movlw	0
 20219  005364  0100               	movlb	0	; () banked
 20220  005366  D013               	goto	L19
 20221  005368                     l938:
 20222                           
 20223                           ; BSR set to: 0
 20224                           ;buttons.c: 79: else
 20225                           ;buttons.c: 80: {
 20226                           ;buttons.c: 81: if (Release_Timer == 20)
 20227                           
 20228                           ; BSR set to: 0
 20229  005368  0E14               	movlw	20
 20230  00536A  19E4               	xorwf	service_pushbutton@Release_Timer& (0+255),w,b
 20231  00536C  A4D8               	btfss	status,2,c
 20232  00536E  D00D               	goto	l946
 20233                           
 20234                           ; BSR set to: 0
 20235                           ;buttons.c: 82: {
 20236                           ;buttons.c: 83: PB_Timer = 0;
 20237  005370  0E00               	movlw	0
 20238  005372  0101               	movlb	1	; () banked
 20239  005374  6F4A               	movwf	service_pushbutton@PB_Timer& (0+255),b
 20240  005376  0E00               	movlw	0
 20241  005378  6F4B               	movwf	(service_pushbutton@PB_Timer+1)& (0+255),b
 20242  00537A  0E00               	movlw	0
 20243  00537C  6F4C               	movwf	(service_pushbutton@PB_Timer+2)& (0+255),b
 20244  00537E  0E00               	movlw	0
 20245  005380  6F4D               	movwf	(service_pushbutton@PB_Timer+3)& (0+255),b
 20246                           
 20247                           ;buttons.c: 84: Release_Timer = 0;
 20248  005382  0E00               	movlw	0
 20249  005384  0100               	movlb	0	; () banked
 20250  005386  6FE4               	movwf	service_pushbutton@Release_Timer& (0+255),b
 20251                           
 20252                           ;buttons.c: 85: }
 20253  005388  D001               	goto	l947
 20254  00538A                     l946:
 20255                           
 20256                           ; BSR set to: 0
 20257                           ;buttons.c: 86: else
 20258                           ;buttons.c: 87: {
 20259                           ;buttons.c: 88: Release_Timer++;
 20260                           
 20261                           ; BSR set to: 0
 20262  00538A  2BE4               	incf	service_pushbutton@Release_Timer& (0+255),f,b
 20263  00538C                     l947:
 20264                           
 20265                           ; BSR set to: 0
 20266                           ;buttons.c: 89: }
 20267                           ;buttons.c: 90: bs = Released;
 20268                           
 20269                           ; BSR set to: 0
 20270  00538C  0E03               	movlw	3
 20271  00538E                     L19:
 20272  00538E  6F60               	movwf	service_pushbutton@bs& (0+255),b
 20273                           
 20274                           ; BSR set to: 0
 20275                           ;buttons.c: 91: }
 20276                           ;buttons.c: 93: return bs;
 20277                           
 20278                           ; BSR set to: 0
 20279  005390  5160               	movf	service_pushbutton@bs& (0+255),w,b
 20280  005392  0012               	return	
 20281  005394                     __end_of_service_pushbutton:
 20282                           	opt stack 0
 20283                           tblptru	equ	0xFF8
 20284                           tblptrh	equ	0xFF7
 20285                           tblptrl	equ	0xFF6
 20286                           tablat	equ	0xFF5
 20287                           prodh	equ	0xFF4
 20288                           prodl	equ	0xFF3
 20289                           intcon	equ	0xFF2
 20290                           intcon3	equ	0xFF0
 20291                           postinc0	equ	0xFEE
 20292                           wreg	equ	0xFE8
 20293                           indf1	equ	0xFE7
 20294                           postdec1	equ	0xFE5
 20295                           fsr1h	equ	0xFE2
 20296                           fsr1l	equ	0xFE1
 20297                           indf2	equ	0xFDF
 20298                           fsr2h	equ	0xFDA
 20299                           fsr2l	equ	0xFD9
 20300                           status	equ	0xFD8
 20301                           
 20302 ;; *************** function _oled_putString *****************
 20303 ;; Defined at:
 20304 ;;		line 331 in file "../Includes/Drivers/SSD1306oLED.c"
 20305 ;; Parameters:    Size  Location     Type
 20306 ;;  string          3   18[BANK0 ] PTR const unsigned char 
 20307 ;;		 -> oled_putUint16@numData(6), oled_putint8@numData(6), oled_putUint8@numData(6), ROM(32767), 
 20308 ;;		 -> STR_189(12), STR_188(8), STR_187(9), storedLight(5), 
 20309 ;;		 -> STR_182(5), STR_181(8), STR_180(8), STR_179(9), 
 20310 ;;		 -> STR_162(16), STR_161(17), STR_160(17), STR_159(4), 
 20311 ;;		 -> STR_158(4), STR_157(4), STR_156(4), STR_155(4), 
 20312 ;;		 -> STR_154(4), STR_153(4), STR_152(16), STR_151(17), 
 20313 ;;		 -> STR_150(4), STR_149(4), STR_148(4), STR_147(4), 
 20314 ;;		 -> STR_146(4), STR_145(4), STR_144(4), STR_143(4), 
 20315 ;;		 -> STR_142(4), STR_141(4), STR_140(4), STR_139(4), 
 20316 ;;		 -> STR_138(4), STR_137(16), STR_136(12), STR_135(17), 
 20317 ;;		 -> STR_134(16), STR_133(16), STR_132(16), STR_131(15), 
 20318 ;;		 -> STR_130(15), STR_129(16), STR_128(4), STR_127(3), 
 20319 ;;		 -> STR_126(3), STR_125(3), STR_124(3), STR_123(2), 
 20320 ;;		 -> STR_122(5), STR_121(7), STR_120(17), STR_119(17), 
 20321 ;;		 -> STR_118(2), STR_117(7), STR_116(7), STR_115(16), 
 20322 ;;		 -> STR_114(16), STR_113(15), STR_112(15), STR_111(17), 
 20323 ;;		 -> STR_110(16), STR_109(17), STR_108(17), STR_107(7), 
 20324 ;;		 -> STR_106(10), STR_105(17), STR_104(16), STR_103(16), 
 20325 ;;		 -> STR_102(16), STR_101(16), STR_100(17), STR_99(17), 
 20326 ;;		 -> STR_98(16), STR_96(19), STR_94(17), STR_92(17), 
 20327 ;;		 -> STR_91(17), responseData(32), responsePortNum(3), STR_88(13), 
 20328 ;;		 -> STR_87(12), STR_86(12), STR_83(18), STR_82(13), 
 20329 ;;		 -> STR_81(17), STR_80(16), STR_79(17), STR_78(17), 
 20330 ;;		 -> STR_77(16), STR_76(17), STR_75(17), STR_73(13), 
 20331 ;;		 -> STR_72(12), STR_71(17), STR_65(7), STR_64(10), 
 20332 ;;		 -> STR_62(11), STR_61(11), STR_56(9), STR_55(11), 
 20333 ;;		 -> STR_51(11), STR_50(10), STR_47(9), STR_46(11), 
 20334 ;;		 -> STR_42(17), STR_40(17), STR_38(17), STR_37(17), 
 20335 ;;		 -> STR_36(17), STR_34(17), STR_33(17), STR_32(17), 
 20336 ;;		 -> moduleResonseBuffer(64), STR_29(17), STR_28(17), STR_27(17), 
 20337 ;;		 -> STR_26(17), STR_25(9), STR_24(10), STR_23(5), 
 20338 ;;		 -> STR_20(9), STR_19(8), STR_18(8), STR_17(9), 
 20339 ;;		 -> STR_16(10), STR_15(11), STR_14(13), STR_13(13), 
 20340 ;;		 -> STR_12(13), STR_11(12), STR_10(13), STR_9(9), 
 20341 ;;		 -> STR_8(12), STR_7(16), STR_6(2), STR_5(2), 
 20342 ;;		 -> STR_4(9), STR_3(15), STR_2(15), STR_1(15), 
 20343 ;;  station_dot     1   21[BANK0 ] unsigned char 
 20344 ;;  start_page      1   22[BANK0 ] unsigned char 
 20345 ;; Auto vars:     Size  Location     Type
 20346 ;;  index           1   23[BANK0 ] unsigned char 
 20347 ;; Return value:  Size  Location     Type
 20348 ;;                  1    wreg      void 
 20349 ;; Registers used:
 20350 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20351 ;; Tracked objects:
 20352 ;;		On entry : 0/0
 20353 ;;		On exit  : 0/0
 20354 ;;		Unchanged: 0/0
 20355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20356 ;;      Params:         0       5       0       0       0       0       0       0       0
 20357 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20358 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20359 ;;      Totals:         0       6       0       0       0       0       0       0       0
 20360 ;;Total ram usage:        6 bytes
 20361 ;; Hardware stack levels used:    1
 20362 ;; Hardware stack levels required when called:   14
 20363 ;; This function calls:
 20364 ;;		_oled_putChar
 20365 ;; This function is called by:
 20366 ;;		_main
 20367 ;;		_test_oled
 20368 ;;		_test_switch
 20369 ;;		_test_comms
 20370 ;;		_test_leds
 20371 ;;		_moteHandler
 20372 ;;		_moteJoiningProcess
 20373 ;;		_moteRunningProcess
 20374 ;;		_moteApp_testSensors
 20375 ;;		_USBapp_Handler
 20376 ;;		_oled_putUint8
 20377 ;;		_oled_putint8
 20378 ;;		_test_adc
 20379 ;;		_test_rf
 20380 ;;		_oled_putUint16
 20381 ;;		_printfOled
 20382 ;; This function uses a non-reentrant model
 20383 ;;
 20384                           
 20385                           	psect	text69
 20386  0050EC                     __ptext69:
 20387                           	opt stack 0
 20388  0050EC                     _oled_putString:
 20389                           	opt stack 14
 20390                           
 20391                           ;SSD1306oLED.c: 333: uint8_t index;
 20392                           ;SSD1306oLED.c: 334: for(index = station_dot; index < 16; index++)
 20393                           
 20394                           ; BSR set to: 0
 20395                           ;incstack = 0
 20396  0050EC  C075  F077         	movff	oled_putString@station_dot,oled_putString@index
 20397  0050F0  0E0F               	movlw	15
 20398  0050F2  0100               	movlb	0	; () banked
 20399  0050F4  6577               	cpfsgt	oled_putString@index& (0+255),b
 20400  0050F6  D001               	goto	l1045
 20401  0050F8  0012               	return	
 20402  0050FA                     l1045:
 20403                           
 20404                           ; BSR set to: 0
 20405                           ;SSD1306oLED.c: 335: {
 20406                           ;SSD1306oLED.c: 336: if (*string != 0)
 20407                           
 20408                           ; BSR set to: 0
 20409  0050FA  C072  FFF6         	movff	oled_putString@string,tblptrl
 20410  0050FE  C073  FFF7         	movff	oled_putString@string+1,tblptrh
 20411  005102  C074  FFF8         	movff	oled_putString@string+2,tblptru
 20412  005106  BAF8               	btfsc	tblptru,5,c
 20413  005108  D003               	bra	u6567
 20414  00510A  0008               	tblrd		*
 20415  00510C  50F5               	movf	tablat,w,c
 20416  00510E  D005               	bra	u6560
 20417  005110                     u6567:
 20418  005110  CFF6 FFE9          	movff	tblptrl,fsr0l
 20419  005114  CFF7 FFEA          	movff	tblptrh,fsr0h
 20420  005118  50EF               	movf	indf0,w,c
 20421  00511A                     u6560:
 20422  00511A  0900               	iorlw	0
 20423  00511C  B4D8               	btfsc	status,2,c
 20424  00511E  0012               	return	
 20425                           
 20426                           ;SSD1306oLED.c: 337: {
 20427                           ;SSD1306oLED.c: 338: oled_putChar(*string, index, start_page);
 20428  005120  C077  F062         	movff	oled_putString@index,oled_putChar@station_dot
 20429  005124  C076  F063         	movff	oled_putString@start_page,oled_putChar@start_page
 20430  005128  C072  FFF6         	movff	oled_putString@string,tblptrl
 20431  00512C  C073  FFF7         	movff	oled_putString@string+1,tblptrh
 20432  005130  C074  FFF8         	movff	oled_putString@string+2,tblptru
 20433  005134  BAF8               	btfsc	tblptru,5,c
 20434  005136  D003               	bra	u6587
 20435  005138  0008               	tblrd		*
 20436  00513A  50F5               	movf	tablat,w,c
 20437  00513C  D005               	bra	u6580
 20438  00513E                     u6587:
 20439  00513E  CFF6 FFE9          	movff	tblptrl,fsr0l
 20440  005142  CFF7 FFEA          	movff	tblptrh,fsr0h
 20441  005146  50EF               	movf	indf0,w,c
 20442  005148                     u6580:
 20443  005148  ECB9  F026         	call	_oled_putChar
 20444                           
 20445                           ;SSD1306oLED.c: 339: *string++;
 20446  00514C  0100               	movlb	0	; () banked
 20447  00514E  0E01               	movlw	1
 20448  005150  2772               	addwf	oled_putString@string& (0+255),f,b
 20449  005152  0E00               	movlw	0
 20450  005154  2373               	addwfc	(oled_putString@string+1)& (0+255),f,b
 20451  005156  0E00               	movlw	0
 20452  005158  2374               	addwfc	(oled_putString@string+2)& (0+255),f,b
 20453                           
 20454                           ; BSR set to: 0
 20455                           
 20456                           ; BSR set to: 0
 20457                           
 20458                           ; BSR set to: 0
 20459                           ;SSD1306oLED.c: 341: else
 20460                           ;SSD1306oLED.c: 342: {
 20461                           ;SSD1306oLED.c: 343: break;
 20462                           
 20463                           ;SSD1306oLED.c: 340: }
 20464  00515A  2B77               	incf	oled_putString@index& (0+255),f,b
 20465                           
 20466                           ; BSR set to: 0
 20467  00515C  0E0F               	movlw	15
 20468  00515E  D7CA               	goto	L20
 20469  005160                     __end_of_oled_putString:
 20470                           	opt stack 0
 20471                           tblptru	equ	0xFF8
 20472                           tblptrh	equ	0xFF7
 20473                           tblptrl	equ	0xFF6
 20474                           tablat	equ	0xFF5
 20475                           prodh	equ	0xFF4
 20476                           prodl	equ	0xFF3
 20477                           intcon	equ	0xFF2
 20478                           intcon3	equ	0xFF0
 20479                           indf0	equ	0xFEF
 20480                           postinc0	equ	0xFEE
 20481                           fsr0h	equ	0xFEA
 20482                           fsr0l	equ	0xFE9
 20483                           wreg	equ	0xFE8
 20484                           indf1	equ	0xFE7
 20485                           postdec1	equ	0xFE5
 20486                           fsr1h	equ	0xFE2
 20487                           fsr1l	equ	0xFE1
 20488                           indf2	equ	0xFDF
 20489                           fsr2h	equ	0xFDA
 20490                           fsr2l	equ	0xFD9
 20491                           status	equ	0xFD8
 20492                           
 20493 ;; *************** function _oled_clear *****************
 20494 ;; Defined at:
 20495 ;;		line 348 in file "../Includes/Drivers/SSD1306oLED.c"
 20496 ;; Parameters:    Size  Location     Type
 20497 ;;		None
 20498 ;; Auto vars:     Size  Location     Type
 20499 ;;		None
 20500 ;; Return value:  Size  Location     Type
 20501 ;;                  1    wreg      void 
 20502 ;; Registers used:
 20503 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20504 ;; Tracked objects:
 20505 ;;		On entry : 0/0
 20506 ;;		On exit  : 0/0
 20507 ;;		Unchanged: 0/0
 20508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20509 ;;      Params:         0       0       0       0       0       0       0       0       0
 20510 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20511 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20512 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20513 ;;Total ram usage:        0 bytes
 20514 ;; Hardware stack levels used:    1
 20515 ;; Hardware stack levels required when called:   15
 20516 ;; This function calls:
 20517 ;;		_oled_clearRow
 20518 ;; This function is called by:
 20519 ;;		_main
 20520 ;;		_test_powerup
 20521 ;;		_test_oled
 20522 ;;		_test_switch
 20523 ;;		_moteHandler
 20524 ;;		_moteJoiningProcess
 20525 ;;		_moteRunningProcess
 20526 ;;		_moteApp_testSensors
 20527 ;;		_USBapp_Handler
 20528 ;;		_oled_init
 20529 ;;		_test_adc
 20530 ;;		_test_rf
 20531 ;;		_printfOled
 20532 ;; This function uses a non-reentrant model
 20533 ;;
 20534                           
 20535                           	psect	text70
 20536  005FE0                     __ptext70:
 20537                           	opt stack 0
 20538  005FE0                     _oled_clear:
 20539                           	opt stack 13
 20540                           
 20541                           ;SSD1306oLED.c: 350: oled_clearRow(0);
 20542                           
 20543                           ;incstack = 0
 20544  005FE0  0E00               	movlw	0
 20545  005FE2  EC60  F02F         	call	_oled_clearRow
 20546                           
 20547                           ;SSD1306oLED.c: 351: oled_clearRow(1);
 20548  005FE6  0E01               	movlw	1
 20549  005FE8  EC60  F02F         	call	_oled_clearRow
 20550                           
 20551                           ;SSD1306oLED.c: 352: oled_clearRow(2);
 20552  005FEC  0E02               	movlw	2
 20553  005FEE  EC60  F02F         	call	_oled_clearRow
 20554                           
 20555                           ;SSD1306oLED.c: 353: oled_clearRow(3);
 20556  005FF2  0E03               	movlw	3
 20557  005FF4  EC60  F02F         	call	_oled_clearRow
 20558  005FF8  0012               	return		;funcret
 20559  005FFA                     __end_of_oled_clear:
 20560                           	opt stack 0
 20561                           tblptru	equ	0xFF8
 20562                           tblptrh	equ	0xFF7
 20563                           tblptrl	equ	0xFF6
 20564                           tablat	equ	0xFF5
 20565                           prodh	equ	0xFF4
 20566                           prodl	equ	0xFF3
 20567                           intcon	equ	0xFF2
 20568                           intcon3	equ	0xFF0
 20569                           indf0	equ	0xFEF
 20570                           postinc0	equ	0xFEE
 20571                           fsr0h	equ	0xFEA
 20572                           fsr0l	equ	0xFE9
 20573                           wreg	equ	0xFE8
 20574                           indf1	equ	0xFE7
 20575                           postdec1	equ	0xFE5
 20576                           fsr1h	equ	0xFE2
 20577                           fsr1l	equ	0xFE1
 20578                           indf2	equ	0xFDF
 20579                           fsr2h	equ	0xFDA
 20580                           fsr2l	equ	0xFD9
 20581                           status	equ	0xFD8
 20582                           
 20583 ;; *************** function _oled_clearRow *****************
 20584 ;; Defined at:
 20585 ;;		line 356 in file "../Includes/Drivers/SSD1306oLED.c"
 20586 ;; Parameters:    Size  Location     Type
 20587 ;;  page            1    wreg     unsigned char 
 20588 ;; Auto vars:     Size  Location     Type
 20589 ;;  page            1   12[BANK0 ] unsigned char 
 20590 ;;  index           1   13[BANK0 ] unsigned char 
 20591 ;; Return value:  Size  Location     Type
 20592 ;;                  1    wreg      void 
 20593 ;; Registers used:
 20594 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20595 ;; Tracked objects:
 20596 ;;		On entry : 0/0
 20597 ;;		On exit  : 0/0
 20598 ;;		Unchanged: 0/0
 20599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20600 ;;      Params:         0       0       0       0       0       0       0       0       0
 20601 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20602 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20603 ;;      Totals:         0       2       0       0       0       0       0       0       0
 20604 ;;Total ram usage:        2 bytes
 20605 ;; Hardware stack levels used:    1
 20606 ;; Hardware stack levels required when called:   14
 20607 ;; This function calls:
 20608 ;;		_oled_putChar
 20609 ;; This function is called by:
 20610 ;;		_oled_clear
 20611 ;; This function uses a non-reentrant model
 20612 ;;
 20613                           
 20614                           	psect	text71
 20615  005EC0                     __ptext71:
 20616                           	opt stack 0
 20617  005EC0                     _oled_clearRow:
 20618                           	opt stack 13
 20619                           
 20620                           ;incstack = 0
 20621                           ;oled_clearRow@page stored from wreg
 20622  005EC0  0100               	movlb	0	; () banked
 20623  005EC2  6F6C               	movwf	oled_clearRow@page& (0+255),b
 20624                           
 20625                           ;SSD1306oLED.c: 358: uint8_t index;
 20626                           ;SSD1306oLED.c: 360: for(index = 0; index < 16; index++)
 20627  005EC4  0E00               	movlw	0
 20628  005EC6  0100               	movlb	0	; () banked
 20629  005EC8  6F6D               	movwf	oled_clearRow@index& (0+255),b
 20630  005ECA                     l8077:
 20631                           
 20632                           ; BSR set to: 0
 20633  005ECA  0E0F               	movlw	15
 20634  005ECC  656D               	cpfsgt	oled_clearRow@index& (0+255),b
 20635  005ECE  D001               	goto	l1055
 20636  005ED0  0012               	return	
 20637  005ED2                     l1055:
 20638                           
 20639                           ; BSR set to: 0
 20640                           ;SSD1306oLED.c: 361: {
 20641                           ;SSD1306oLED.c: 362: oled_putChar( ' ', index, page);
 20642                           
 20643                           ; BSR set to: 0
 20644  005ED2  C06D  F062         	movff	oled_clearRow@index,oled_putChar@station_dot
 20645  005ED6  C06C  F063         	movff	oled_clearRow@page,oled_putChar@start_page
 20646  005EDA  0E20               	movlw	32
 20647  005EDC  ECB9  F026         	call	_oled_putChar
 20648  005EE0  0100               	movlb	0	; () banked
 20649  005EE2  2B6D               	incf	oled_clearRow@index& (0+255),f,b
 20650  005EE4  D7F2               	goto	l8077
 20651  005EE6                     __end_of_oled_clearRow:
 20652                           	opt stack 0
 20653                           tblptru	equ	0xFF8
 20654                           tblptrh	equ	0xFF7
 20655                           tblptrl	equ	0xFF6
 20656                           tablat	equ	0xFF5
 20657                           prodh	equ	0xFF4
 20658                           prodl	equ	0xFF3
 20659                           intcon	equ	0xFF2
 20660                           intcon3	equ	0xFF0
 20661                           indf0	equ	0xFEF
 20662                           postinc0	equ	0xFEE
 20663                           fsr0h	equ	0xFEA
 20664                           fsr0l	equ	0xFE9
 20665                           wreg	equ	0xFE8
 20666                           indf1	equ	0xFE7
 20667                           postdec1	equ	0xFE5
 20668                           fsr1h	equ	0xFE2
 20669                           fsr1l	equ	0xFE1
 20670                           indf2	equ	0xFDF
 20671                           fsr2h	equ	0xFDA
 20672                           fsr2l	equ	0xFD9
 20673                           status	equ	0xFD8
 20674                           
 20675 ;; *************** function _oled_putChar *****************
 20676 ;; Defined at:
 20677 ;;		line 318 in file "../Includes/Drivers/SSD1306oLED.c"
 20678 ;; Parameters:    Size  Location     Type
 20679 ;;  k               1    wreg     unsigned char 
 20680 ;;  station_dot     1    2[BANK0 ] unsigned char 
 20681 ;;  start_page      1    3[BANK0 ] unsigned char 
 20682 ;; Auto vars:     Size  Location     Type
 20683 ;;  k               1   10[BANK0 ] unsigned char 
 20684 ;;  index           1   11[BANK0 ] unsigned char 
 20685 ;; Return value:  Size  Location     Type
 20686 ;;                  1    wreg      void 
 20687 ;; Registers used:
 20688 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20689 ;; Tracked objects:
 20690 ;;		On entry : 0/0
 20691 ;;		On exit  : 0/0
 20692 ;;		Unchanged: 0/0
 20693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20694 ;;      Params:         0       2       0       0       0       0       0       0       0
 20695 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20696 ;;      Temps:          0       6       0       0       0       0       0       0       0
 20697 ;;      Totals:         0      10       0       0       0       0       0       0       0
 20698 ;;Total ram usage:       10 bytes
 20699 ;; Hardware stack levels used:    1
 20700 ;; Hardware stack levels required when called:   13
 20701 ;; This function calls:
 20702 ;;		_Set_Column_Address
 20703 ;;		_Set_Page_Address
 20704 ;;		_oled_writeData
 20705 ;; This function is called by:
 20706 ;;		_moteApp_testSensors
 20707 ;;		_oled_putString
 20708 ;;		_oled_clearRow
 20709 ;;		_test_adc
 20710 ;; This function uses a non-reentrant model
 20711 ;;
 20712                           
 20713                           	psect	text72
 20714  004D72                     __ptext72:
 20715                           	opt stack 0
 20716  004D72                     _oled_putChar:
 20717                           	opt stack 14
 20718                           
 20719                           ; BSR set to: 0
 20720                           ;incstack = 0
 20721                           ;oled_putChar@k stored from wreg
 20722  004D72  0100               	movlb	0	; () banked
 20723  004D74  6F6A               	movwf	oled_putChar@k& (0+255),b
 20724                           
 20725                           ;SSD1306oLED.c: 320: uint8_t index;
 20726                           ;SSD1306oLED.c: 322: Set_Page_Address(start_page);
 20727  004D76  0100               	movlb	0	; () banked
 20728  004D78  5163               	movf	oled_putChar@start_page& (0+255),w,b
 20729  004D7A  EC6E  F030         	call	_Set_Page_Address
 20730                           
 20731                           ;SSD1306oLED.c: 323: Set_Column_Address(0x00 + station_dot * 8 + 4);
 20732  004D7E  0100               	movlb	0	; () banked
 20733  004D80  5162               	movf	oled_putChar@station_dot& (0+255),w,b
 20734  004D82  0D08               	mullw	8
 20735  004D84  50F3               	movf	prodl,w,c
 20736  004D86  0F04               	addlw	4
 20737  004D88  ECD4  F02F         	call	_Set_Column_Address
 20738                           
 20739                           ;SSD1306oLED.c: 325: for(index = 0; index < 8; index++)
 20740  004D8C  0E00               	movlw	0
 20741  004D8E  0100               	movlb	0	; () banked
 20742  004D90  6F6B               	movwf	oled_putChar@index& (0+255),b
 20743  004D92                     l7927:
 20744                           
 20745                           ; BSR set to: 0
 20746  004D92  0E07               	movlw	7
 20747  004D94  656B               	cpfsgt	oled_putChar@index& (0+255),b
 20748  004D96  D001               	goto	l1040
 20749  004D98  0012               	return	
 20750  004D9A                     l1040:
 20751                           
 20752                           ; BSR set to: 0
 20753                           ;SSD1306oLED.c: 326: {
 20754                           ;SSD1306oLED.c: 327: oled_writeData(*(selectedFont + 8 * (k - 0x20) + index));
 20755                           
 20756                           ; BSR set to: 0
 20757  004D9A  516B               	movf	oled_putChar@index& (0+255),w,b
 20758  004D9C  0D01               	mullw	1
 20759  004D9E  0E00               	movlw	0
 20760  004DA0  6F64               	movwf	??_oled_putChar& (0+255),b
 20761  004DA2  0EFF               	movlw	255
 20762  004DA4  6F65               	movwf	(??_oled_putChar+1)& (0+255),b
 20763  004DA6  516A               	movf	oled_putChar@k& (0+255),w,b
 20764  004DA8  6F66               	movwf	(??_oled_putChar+2)& (0+255),b
 20765  004DAA  6B67               	clrf	(??_oled_putChar+3)& (0+255),b
 20766  004DAC  90D8               	bcf	status,0,c
 20767  004DAE  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 20768  004DB0  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 20769  004DB2  90D8               	bcf	status,0,c
 20770  004DB4  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 20771  004DB6  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 20772  004DB8  90D8               	bcf	status,0,c
 20773  004DBA  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 20774  004DBC  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 20775  004DBE  5164               	movf	??_oled_putChar& (0+255),w,b
 20776  004DC0  2766               	addwf	(??_oled_putChar+2)& (0+255),f,b
 20777  004DC2  5165               	movf	(??_oled_putChar+1)& (0+255),w,b
 20778  004DC4  2367               	addwfc	(??_oled_putChar+3)& (0+255),f,b
 20779  004DC6  C1FB  F068         	movff	_selectedFont,??_oled_putChar+4
 20780  004DCA  C1FC  F069         	movff	_selectedFont+1,??_oled_putChar+5
 20781  004DCE  5166               	movf	(??_oled_putChar+2)& (0+255),w,b
 20782  004DD0  2768               	addwf	(??_oled_putChar+4)& (0+255),f,b
 20783  004DD2  5167               	movf	(??_oled_putChar+3)& (0+255),w,b
 20784  004DD4  2369               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 20785  004DD6  50F3               	movf	prodl,w,c
 20786  004DD8  2768               	addwf	(??_oled_putChar+4)& (0+255),f,b
 20787  004DDA  50F4               	movf	prodh,w,c
 20788  004DDC  2369               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 20789  004DDE  C068  FFF6         	movff	??_oled_putChar+4,tblptrl
 20790  004DE2  C069  FFF7         	movff	??_oled_putChar+5,tblptrh
 20791  004DE6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20792  004DE6  6AF8               	clrf	tblptru,c
 20793  004DE8                     	endif
 20794  004DE8                     	if	0	;tblptru may be non-zero
 20795  004DE8                     	endif
 20796  004DE8  0008               	tblrd		*
 20797  004DEA  50F5               	movf	tablat,w,c
 20798  004DEC  EC23  F030         	call	_oled_writeData
 20799  004DF0  0100               	movlb	0	; () banked
 20800  004DF2  2B6B               	incf	oled_putChar@index& (0+255),f,b
 20801  004DF4  D7CE               	goto	l7927
 20802  004DF6                     __end_of_oled_putChar:
 20803                           	opt stack 0
 20804                           tblptru	equ	0xFF8
 20805                           tblptrh	equ	0xFF7
 20806                           tblptrl	equ	0xFF6
 20807                           tablat	equ	0xFF5
 20808                           prodh	equ	0xFF4
 20809                           prodl	equ	0xFF3
 20810                           intcon	equ	0xFF2
 20811                           intcon3	equ	0xFF0
 20812                           indf0	equ	0xFEF
 20813                           postinc0	equ	0xFEE
 20814                           fsr0h	equ	0xFEA
 20815                           fsr0l	equ	0xFE9
 20816                           wreg	equ	0xFE8
 20817                           indf1	equ	0xFE7
 20818                           postdec1	equ	0xFE5
 20819                           fsr1h	equ	0xFE2
 20820                           fsr1l	equ	0xFE1
 20821                           indf2	equ	0xFDF
 20822                           fsr2h	equ	0xFDA
 20823                           fsr2l	equ	0xFD9
 20824                           status	equ	0xFD8
 20825                           
 20826 ;; *************** function _oled_writeData *****************
 20827 ;; Defined at:
 20828 ;;		line 442 in file "../Includes/Drivers/SSD1306oLED.c"
 20829 ;; Parameters:    Size  Location     Type
 20830 ;;  data            1    wreg     unsigned char 
 20831 ;; Auto vars:     Size  Location     Type
 20832 ;;  data            1    0[BANK0 ] unsigned char 
 20833 ;; Return value:  Size  Location     Type
 20834 ;;                  1    wreg      void 
 20835 ;; Registers used:
 20836 ;;		wreg
 20837 ;; Tracked objects:
 20838 ;;		On entry : 0/0
 20839 ;;		On exit  : 0/0
 20840 ;;		Unchanged: 0/0
 20841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20842 ;;      Params:         0       0       0       0       0       0       0       0       0
 20843 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20844 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20845 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20846 ;;Total ram usage:        1 bytes
 20847 ;; Hardware stack levels used:    1
 20848 ;; Hardware stack levels required when called:   11
 20849 ;; This function calls:
 20850 ;;		Nothing
 20851 ;; This function is called by:
 20852 ;;		_oled_putChar
 20853 ;; This function uses a non-reentrant model
 20854 ;;
 20855                           
 20856                           	psect	text73
 20857  006046                     __ptext73:
 20858                           	opt stack 0
 20859  006046                     _oled_writeData:
 20860                           	opt stack 15
 20861                           
 20862                           ; BSR set to: 0
 20863                           ;incstack = 0
 20864                           ;oled_writeData@data stored from wreg
 20865  006046  0100               	movlb	0	; () banked
 20866  006048  6F60               	movwf	oled_writeData@data& (0+255),b
 20867                           
 20868                           ;SSD1306oLED.c: 444: LATBbits.LATB4=0;
 20869  00604A  988A               	bcf	3978,4,c	;volatile
 20870                           
 20871                           ;SSD1306oLED.c: 445: LATCbits.LATC0=1;
 20872  00604C  808B               	bsf	3979,0,c	;volatile
 20873                           
 20874                           ;SSD1306oLED.c: 446: LATD=data;
 20875  00604E  C060  FF8C         	movff	oled_writeData@data,3980	;volatile
 20876                           
 20877                           ;SSD1306oLED.c: 447: LATCbits.LATC1=0;
 20878  006052  928B               	bcf	3979,1,c	;volatile
 20879                           
 20880                           ;SSD1306oLED.c: 448: __nop();
 20881  006054  F000               	nop	
 20882                           
 20883                           ;SSD1306oLED.c: 449: LATCbits.LATC1=1;
 20884  006056  828B               	bsf	3979,1,c	;volatile
 20885                           
 20886                           ;SSD1306oLED.c: 450: LATBbits.LATB4=1;
 20887  006058  888A               	bsf	3978,4,c	;volatile
 20888  00605A  0012               	return	
 20889  00605C                     __end_of_oled_writeData:
 20890                           	opt stack 0
 20891                           tblptru	equ	0xFF8
 20892                           tblptrh	equ	0xFF7
 20893                           tblptrl	equ	0xFF6
 20894                           tablat	equ	0xFF5
 20895                           prodh	equ	0xFF4
 20896                           prodl	equ	0xFF3
 20897                           intcon	equ	0xFF2
 20898                           intcon3	equ	0xFF0
 20899                           indf0	equ	0xFEF
 20900                           postinc0	equ	0xFEE
 20901                           fsr0h	equ	0xFEA
 20902                           fsr0l	equ	0xFE9
 20903                           wreg	equ	0xFE8
 20904                           indf1	equ	0xFE7
 20905                           postdec1	equ	0xFE5
 20906                           fsr1h	equ	0xFE2
 20907                           fsr1l	equ	0xFE1
 20908                           indf2	equ	0xFDF
 20909                           fsr2h	equ	0xFDA
 20910                           fsr2l	equ	0xFD9
 20911                           status	equ	0xFD8
 20912                           
 20913 ;; *************** function _Set_Page_Address *****************
 20914 ;; Defined at:
 20915 ;;		line 241 in file "../Includes/Drivers/SSD1306oLED.c"
 20916 ;; Parameters:    Size  Location     Type
 20917 ;;  address         1    wreg     unsigned char 
 20918 ;; Auto vars:     Size  Location     Type
 20919 ;;  address         1    1[BANK0 ] unsigned char 
 20920 ;; Return value:  Size  Location     Type
 20921 ;;                  1    wreg      void 
 20922 ;; Registers used:
 20923 ;;		wreg, status,2, status,0, cstack
 20924 ;; Tracked objects:
 20925 ;;		On entry : 0/0
 20926 ;;		On exit  : 0/0
 20927 ;;		Unchanged: 0/0
 20928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20929 ;;      Params:         0       0       0       0       0       0       0       0       0
 20930 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20931 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20932 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20933 ;;Total ram usage:        1 bytes
 20934 ;; Hardware stack levels used:    1
 20935 ;; Hardware stack levels required when called:   12
 20936 ;; This function calls:
 20937 ;;		_oled_writeCommand
 20938 ;; This function is called by:
 20939 ;;		_oled_putChar
 20940 ;; This function uses a non-reentrant model
 20941 ;;
 20942                           
 20943                           	psect	text74
 20944  0060DC                     __ptext74:
 20945                           	opt stack 0
 20946  0060DC                     _Set_Page_Address:
 20947                           	opt stack 14
 20948                           
 20949                           ;incstack = 0
 20950                           ;Set_Page_Address@address stored from wreg
 20951  0060DC  0100               	movlb	0	; () banked
 20952  0060DE  6F61               	movwf	Set_Page_Address@address& (0+255),b
 20953                           
 20954                           ;SSD1306oLED.c: 243: address = 0xb0 | address;
 20955  0060E0  0100               	movlb	0	; () banked
 20956  0060E2  5161               	movf	Set_Page_Address@address& (0+255),w,b
 20957  0060E4  09B0               	iorlw	176
 20958  0060E6  6F61               	movwf	Set_Page_Address@address& (0+255),b
 20959                           
 20960                           ; BSR set to: 0
 20961                           ;SSD1306oLED.c: 244: oled_writeCommand(address);
 20962  0060E8  5161               	movf	Set_Page_Address@address& (0+255),w,b
 20963  0060EA  EC2E  F030         	call	_oled_writeCommand
 20964  0060EE  0012               	return	
 20965  0060F0                     __end_of_Set_Page_Address:
 20966                           	opt stack 0
 20967                           tblptru	equ	0xFF8
 20968                           tblptrh	equ	0xFF7
 20969                           tblptrl	equ	0xFF6
 20970                           tablat	equ	0xFF5
 20971                           prodh	equ	0xFF4
 20972                           prodl	equ	0xFF3
 20973                           intcon	equ	0xFF2
 20974                           intcon3	equ	0xFF0
 20975                           indf0	equ	0xFEF
 20976                           postinc0	equ	0xFEE
 20977                           fsr0h	equ	0xFEA
 20978                           fsr0l	equ	0xFE9
 20979                           wreg	equ	0xFE8
 20980                           indf1	equ	0xFE7
 20981                           postdec1	equ	0xFE5
 20982                           fsr1h	equ	0xFE2
 20983                           fsr1l	equ	0xFE1
 20984                           indf2	equ	0xFDF
 20985                           fsr2h	equ	0xFDA
 20986                           fsr2l	equ	0xFD9
 20987                           status	equ	0xFD8
 20988                           
 20989 ;; *************** function _Set_Column_Address *****************
 20990 ;; Defined at:
 20991 ;;		line 249 in file "../Includes/Drivers/SSD1306oLED.c"
 20992 ;; Parameters:    Size  Location     Type
 20993 ;;  address         1    wreg     unsigned char 
 20994 ;; Auto vars:     Size  Location     Type
 20995 ;;  address         1    1[BANK0 ] unsigned char 
 20996 ;; Return value:  Size  Location     Type
 20997 ;;                  1    wreg      void 
 20998 ;; Registers used:
 20999 ;;		wreg, status,2, status,0, cstack
 21000 ;; Tracked objects:
 21001 ;;		On entry : 0/0
 21002 ;;		On exit  : 0/0
 21003 ;;		Unchanged: 0/0
 21004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21005 ;;      Params:         0       0       0       0       0       0       0       0       0
 21006 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21007 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21008 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21009 ;;Total ram usage:        1 bytes
 21010 ;; Hardware stack levels used:    1
 21011 ;; Hardware stack levels required when called:   12
 21012 ;; This function calls:
 21013 ;;		_oled_writeCommand
 21014 ;; This function is called by:
 21015 ;;		_oled_putChar
 21016 ;; This function uses a non-reentrant model
 21017 ;;
 21018                           
 21019                           	psect	text75
 21020  005FA8                     __ptext75:
 21021                           	opt stack 0
 21022  005FA8                     _Set_Column_Address:
 21023                           	opt stack 14
 21024                           
 21025                           ;incstack = 0
 21026                           ;Set_Column_Address@address stored from wreg
 21027  005FA8  0100               	movlb	0	; () banked
 21028  005FAA  6F61               	movwf	Set_Column_Address@address& (0+255),b
 21029                           
 21030                           ;SSD1306oLED.c: 251: oled_writeCommand((0x10|(address>>4)));
 21031  005FAC  0100               	movlb	0	; () banked
 21032  005FAE  3961               	swapf	Set_Column_Address@address& (0+255),w,b
 21033  005FB0  0B0F               	andlw	15
 21034  005FB2  0910               	iorlw	16
 21035  005FB4  EC2E  F030         	call	_oled_writeCommand
 21036                           
 21037                           ;SSD1306oLED.c: 252: oled_writeCommand((0x0f&address));
 21038  005FB8  0100               	movlb	0	; () banked
 21039  005FBA  5161               	movf	Set_Column_Address@address& (0+255),w,b
 21040  005FBC  0B0F               	andlw	15
 21041  005FBE  EC2E  F030         	call	_oled_writeCommand
 21042  005FC2  0012               	return	
 21043  005FC4                     __end_of_Set_Column_Address:
 21044                           	opt stack 0
 21045                           tblptru	equ	0xFF8
 21046                           tblptrh	equ	0xFF7
 21047                           tblptrl	equ	0xFF6
 21048                           tablat	equ	0xFF5
 21049                           prodh	equ	0xFF4
 21050                           prodl	equ	0xFF3
 21051                           intcon	equ	0xFF2
 21052                           intcon3	equ	0xFF0
 21053                           indf0	equ	0xFEF
 21054                           postinc0	equ	0xFEE
 21055                           fsr0h	equ	0xFEA
 21056                           fsr0l	equ	0xFE9
 21057                           wreg	equ	0xFE8
 21058                           indf1	equ	0xFE7
 21059                           postdec1	equ	0xFE5
 21060                           fsr1h	equ	0xFE2
 21061                           fsr1l	equ	0xFE1
 21062                           indf2	equ	0xFDF
 21063                           fsr2h	equ	0xFDA
 21064                           fsr2l	equ	0xFD9
 21065                           status	equ	0xFD8
 21066                           
 21067 ;; *************** function _oled_writeCommand *****************
 21068 ;; Defined at:
 21069 ;;		line 430 in file "../Includes/Drivers/SSD1306oLED.c"
 21070 ;; Parameters:    Size  Location     Type
 21071 ;;  command         1    wreg     unsigned char 
 21072 ;; Auto vars:     Size  Location     Type
 21073 ;;  command         1    0[BANK0 ] unsigned char 
 21074 ;; Return value:  Size  Location     Type
 21075 ;;                  1    wreg      void 
 21076 ;; Registers used:
 21077 ;;		wreg
 21078 ;; Tracked objects:
 21079 ;;		On entry : 0/0
 21080 ;;		On exit  : 0/0
 21081 ;;		Unchanged: 0/0
 21082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21083 ;;      Params:         0       0       0       0       0       0       0       0       0
 21084 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21085 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21086 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21087 ;;Total ram usage:        1 bytes
 21088 ;; Hardware stack levels used:    1
 21089 ;; Hardware stack levels required when called:   11
 21090 ;; This function calls:
 21091 ;;		Nothing
 21092 ;; This function is called by:
 21093 ;;		_Set_Page_Address
 21094 ;;		_Set_Column_Address
 21095 ;;		_oled_devInit
 21096 ;;		_oled_setDisplay
 21097 ;;		_oled_displayOff
 21098 ;;		_oled_setContrastControlRegister
 21099 ;;		_oled_initialDispayLine
 21100 ;;		_oled_powerControl
 21101 ;;		_oled_regulorResistorSelect
 21102 ;; This function uses a non-reentrant model
 21103 ;;
 21104                           
 21105                           	psect	text76
 21106  00605C                     __ptext76:
 21107                           	opt stack 0
 21108  00605C                     _oled_writeCommand:
 21109                           	opt stack 14
 21110                           
 21111                           ;incstack = 0
 21112                           ;oled_writeCommand@command stored from wreg
 21113  00605C  0100               	movlb	0	; () banked
 21114  00605E  6F60               	movwf	oled_writeCommand@command& (0+255),b
 21115                           
 21116                           ;SSD1306oLED.c: 432: LATBbits.LATB4=0;
 21117  006060  988A               	bcf	3978,4,c	;volatile
 21118                           
 21119                           ;SSD1306oLED.c: 433: LATCbits.LATC0=0;
 21120  006062  908B               	bcf	3979,0,c	;volatile
 21121                           
 21122                           ;SSD1306oLED.c: 434: LATD=command;
 21123  006064  C060  FF8C         	movff	oled_writeCommand@command,3980	;volatile
 21124                           
 21125                           ;SSD1306oLED.c: 435: LATCbits.LATC1=0;
 21126  006068  928B               	bcf	3979,1,c	;volatile
 21127                           
 21128                           ;SSD1306oLED.c: 436: __nop();
 21129  00606A  F000               	nop	
 21130                           
 21131                           ;SSD1306oLED.c: 437: LATCbits.LATC1=1;
 21132  00606C  828B               	bsf	3979,1,c	;volatile
 21133                           
 21134                           ;SSD1306oLED.c: 438: LATBbits.LATB4=1;
 21135  00606E  888A               	bsf	3978,4,c	;volatile
 21136  006070  0012               	return	
 21137  006072                     __end_of_oled_writeCommand:
 21138                           	opt stack 0
 21139                           tblptru	equ	0xFF8
 21140                           tblptrh	equ	0xFF7
 21141                           tblptrl	equ	0xFF6
 21142                           tablat	equ	0xFF5
 21143                           prodh	equ	0xFF4
 21144                           prodl	equ	0xFF3
 21145                           intcon	equ	0xFF2
 21146                           intcon3	equ	0xFF0
 21147                           indf0	equ	0xFEF
 21148                           postinc0	equ	0xFEE
 21149                           fsr0h	equ	0xFEA
 21150                           fsr0l	equ	0xFE9
 21151                           wreg	equ	0xFE8
 21152                           indf1	equ	0xFE7
 21153                           postdec1	equ	0xFE5
 21154                           fsr1h	equ	0xFE2
 21155                           fsr1l	equ	0xFE1
 21156                           indf2	equ	0xFDF
 21157                           fsr2h	equ	0xFDA
 21158                           fsr2l	equ	0xFD9
 21159                           status	equ	0xFD8
 21160                           
 21161 ;; *************** function _USBapp_DeviceCdcEmulatorHandler *****************
 21162 ;; Defined at:
 21163 ;;		line 162 in file "../Includes/Board/USBapp.c"
 21164 ;; Parameters:    Size  Location     Type
 21165 ;;		None
 21166 ;; Auto vars:     Size  Location     Type
 21167 ;;		None
 21168 ;; Return value:  Size  Location     Type
 21169 ;;                  1    wreg      void 
 21170 ;; Registers used:
 21171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21172 ;; Tracked objects:
 21173 ;;		On entry : 0/0
 21174 ;;		On exit  : 0/0
 21175 ;;		Unchanged: 0/0
 21176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21177 ;;      Params:         0       0       0       0       0       0       0       0       0
 21178 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21179 ;;      Temps:          0       1       0       0       0       0       0       0       0
 21180 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21181 ;;Total ram usage:        1 bytes
 21182 ;; Hardware stack levels used:    1
 21183 ;; Hardware stack levels required when called:   13
 21184 ;; This function calls:
 21185 ;;		_CDCTxService
 21186 ;;		_EUSART_Read
 21187 ;;		_EUSART_Write
 21188 ;;		_MOTEapp_setResponseReady
 21189 ;;		_USBapp_getrxByteFlag
 21190 ;;		_getsUSBUSART
 21191 ;;		_putUSBUSART
 21192 ;; This function is called by:
 21193 ;;		_USBapp_Handler
 21194 ;; This function uses a non-reentrant model
 21195 ;;
 21196                           
 21197                           	psect	text77
 21198  003B22                     __ptext77:
 21199                           	opt stack 0
 21200  003B22                     _USBapp_DeviceCdcEmulatorHandler:
 21201                           	opt stack 16
 21202                           
 21203                           ;USBapp.c: 165: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 21204                           
 21205                           ;incstack = 0
 21206  003B22  0E1F               	movlw	31
 21207  003B24  0100               	movlb	0	; () banked
 21208  003B26  65EC               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
 21209  003B28  0012               	return	
 21210                           
 21211                           ; BSR set to: 0
 21212  003B2A  B260               	btfsc	3936,1,c	;volatile
 21213  003B2C  0012               	return	
 21214                           
 21215                           ; BSR set to: 0
 21216                           ;USBapp.c: 168: if (RS232_Out_Data_Rdy == 0)
 21217                           
 21218                           ; BSR set to: 0
 21219                           
 21220                           ; BSR set to: 0
 21221                           ;USBapp.c: 166: return;
 21222  003B2E  51E7               	movf	_RS232_Out_Data_Rdy& (0+255),w,b
 21223  003B30  A4D8               	btfss	status,2,c
 21224  003B32  D011               	goto	l880
 21225                           
 21226                           ; BSR set to: 0
 21227                           ;USBapp.c: 169: {
 21228                           ;USBapp.c: 170: LastRS232Out = getsUSBUSART(USB_Buffer,64);
 21229  003B34  0E80               	movlw	low _USB_Buffer
 21230  003B36  6F67               	movwf	getsUSBUSART@buffer& (0+255),b
 21231  003B38  0E02               	movlw	high _USB_Buffer
 21232  003B3A  6F68               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 21233  003B3C  0E40               	movlw	64
 21234  003B3E  6F69               	movwf	getsUSBUSART@len& (0+255),b
 21235  003B40  EC64  F022         	call	_getsUSBUSART	;wreg free
 21236  003B44  0100               	movlb	0	; () banked
 21237  003B46  6FE6               	movwf	_LastRS232Out& (0+255),b
 21238                           
 21239                           ; BSR set to: 0
 21240                           ;USBapp.c: 171: if(LastRS232Out > 0)
 21241  003B48  51E6               	movf	_LastRS232Out& (0+255),w,b
 21242  003B4A  B4D8               	btfsc	status,2,c
 21243  003B4C  D004               	goto	l880
 21244                           
 21245                           ; BSR set to: 0
 21246                           ;USBapp.c: 172: {
 21247                           ;USBapp.c: 173: RS232_Out_Data_Rdy = 1;
 21248  003B4E  0E01               	movlw	1
 21249  003B50  6FE7               	movwf	_RS232_Out_Data_Rdy& (0+255),b
 21250                           
 21251                           ;USBapp.c: 174: RS232cp = 0;
 21252  003B52  0E00               	movlw	0
 21253  003B54  6FE5               	movwf	_RS232cp& (0+255),b
 21254  003B56                     l880:
 21255                           
 21256                           ; BSR set to: 0
 21257                           ;USBapp.c: 175: }
 21258                           ;USBapp.c: 176: }
 21259                           ;USBapp.c: 179: if(RS232_Out_Data_Rdy && TXSTAbits.TRMT)
 21260                           
 21261                           ; BSR set to: 0
 21262  003B56  51E7               	movf	_RS232_Out_Data_Rdy& (0+255),w,b
 21263  003B58  A4D8               	btfss	status,2,c
 21264                           
 21265                           ; BSR set to: 0
 21266  003B5A  A2AC               	btfss	4012,1,c	;volatile
 21267  003B5C  D013               	goto	l882
 21268                           
 21269                           ; BSR set to: 0
 21270                           ;USBapp.c: 180: {
 21271                           ;USBapp.c: 182: EUSART_Write(USB_Buffer[RS232cp]);
 21272  003B5E  51E5               	movf	_RS232cp& (0+255),w,b
 21273  003B60  0D01               	mullw	1
 21274  003B62  0E80               	movlw	low _USB_Buffer
 21275  003B64  24F3               	addwf	prodl,w,c
 21276  003B66  6ED9               	movwf	fsr2l,c
 21277  003B68  0E02               	movlw	high _USB_Buffer
 21278  003B6A  20F4               	addwfc	prodh,w,c
 21279  003B6C  6EDA               	movwf	fsr2h,c
 21280  003B6E  50DF               	movf	indf2,w,c
 21281  003B70  ECF3  F02C         	call	_EUSART_Write
 21282                           
 21283                           ;USBapp.c: 183: ++RS232cp;
 21284  003B74  0100               	movlb	0	; () banked
 21285  003B76  2BE5               	incf	_RS232cp& (0+255),f,b
 21286                           
 21287                           ; BSR set to: 0
 21288                           ;USBapp.c: 184: if (RS232cp == LastRS232Out)
 21289  003B78  51E6               	movf	_LastRS232Out& (0+255),w,b
 21290  003B7A  19E5               	xorwf	_RS232cp& (0+255),w,b
 21291  003B7C  A4D8               	btfss	status,2,c
 21292  003B7E  D002               	goto	l882
 21293                           
 21294                           ; BSR set to: 0
 21295                           ;USBapp.c: 185: RS232_Out_Data_Rdy = 0;
 21296  003B80  0E00               	movlw	0
 21297  003B82  6FE7               	movwf	_RS232_Out_Data_Rdy& (0+255),b
 21298  003B84                     l882:
 21299                           
 21300                           ; BSR set to: 0
 21301                           ;USBapp.c: 186: }
 21302                           ;USBapp.c: 189: if ((eusartRxCount))
 21303                           
 21304                           ; BSR set to: 0
 21305  003B84  51F5               	movf	_eusartRxCount& (0+255),w,b	;volatile
 21306  003B86  B4D8               	btfsc	status,2,c
 21307  003B88  D025               	goto	l884
 21308                           
 21309                           ; BSR set to: 0
 21310                           ;USBapp.c: 190: {
 21311                           ;USBapp.c: 191: if(USBapp_getrxByteFlag() && (NextUSBOut < (64 - 1)))
 21312  003B8A  EC0F  F031         	call	_USBapp_getrxByteFlag	;wreg free
 21313  003B8E  0900               	iorlw	0
 21314  003B90  B4D8               	btfsc	status,2,c
 21315  003B92  D020               	goto	l884
 21316  003B94  0E3F               	movlw	63
 21317  003B96  0100               	movlb	0	; () banked
 21318  003B98  61E8               	cpfslt	_NextUSBOut& (0+255),b
 21319  003B9A  D01C               	goto	l884
 21320                           
 21321                           ; BSR set to: 0
 21322                           ;USBapp.c: 192: {
 21323                           ;USBapp.c: 193: __nop();
 21324  003B9C  F000               	nop	
 21325                           
 21326                           ;USBapp.c: 194: USB_Buffer[NextUSBOut] = EUSART_Read();
 21327  003B9E  EC4E  F02D         	call	_EUSART_Read	;wreg free
 21328  003BA2  0100               	movlb	0	; () banked
 21329  003BA4  6F6D               	movwf	??_USBapp_DeviceCdcEmulatorHandler& (0+255),b
 21330  003BA6  51E8               	movf	_NextUSBOut& (0+255),w,b
 21331  003BA8  0D01               	mullw	1
 21332  003BAA  0E80               	movlw	low _USB_Buffer
 21333  003BAC  24F3               	addwf	prodl,w,c
 21334  003BAE  6ED9               	movwf	fsr2l,c
 21335  003BB0  0E02               	movlw	high _USB_Buffer
 21336  003BB2  20F4               	addwfc	prodh,w,c
 21337  003BB4  6EDA               	movwf	fsr2h,c
 21338  003BB6  C06D  FFDF         	movff	??_USBapp_DeviceCdcEmulatorHandler,indf2
 21339                           
 21340                           ; BSR set to: 0
 21341                           ;USBapp.c: 195: ++NextUSBOut;
 21342  003BBA  2BE8               	incf	_NextUSBOut& (0+255),f,b
 21343                           
 21344                           ; BSR set to: 0
 21345                           ;USBapp.c: 196: USB_Buffer[NextUSBOut] = 0;
 21346  003BBC  51E8               	movf	_NextUSBOut& (0+255),w,b
 21347  003BBE  0D01               	mullw	1
 21348  003BC0  0E80               	movlw	low _USB_Buffer
 21349  003BC2  24F3               	addwf	prodl,w,c
 21350  003BC4  6ED9               	movwf	fsr2l,c
 21351  003BC6  0E02               	movlw	high _USB_Buffer
 21352  003BC8  20F4               	addwfc	prodh,w,c
 21353  003BCA  6EDA               	movwf	fsr2h,c
 21354  003BCC  0E00               	movlw	0
 21355  003BCE  6EDF               	movwf	indf2,c
 21356                           
 21357                           ; BSR set to: 0
 21358                           ;USBapp.c: 197: rxByteFlag = 0;
 21359  003BD0  0E00               	movlw	0
 21360  003BD2  6FE9               	movwf	_rxByteFlag& (0+255),b	;volatile
 21361  003BD4                     l884:
 21362                           
 21363                           ;USBapp.c: 198: }
 21364                           ;USBapp.c: 199: }
 21365                           ;USBapp.c: 203: if(((cdc_trf_state == 0)) && (NextUSBOut > 0))
 21366                           
 21367                           ; BSR set to: 0
 21368                           
 21369                           ; BSR set to: 0
 21370  003BD4  0100               	movlb	0	; () banked
 21371  003BD6  51EB               	movf	_cdc_trf_state& (0+255),w,b
 21372  003BD8  A4D8               	btfss	status,2,c
 21373  003BDA  D010               	goto	l885
 21374                           
 21375                           ; BSR set to: 0
 21376  003BDC  51E8               	movf	_NextUSBOut& (0+255),w,b
 21377  003BDE  B4D8               	btfsc	status,2,c
 21378  003BE0  D00D               	goto	l885
 21379                           
 21380                           ; BSR set to: 0
 21381                           ;USBapp.c: 204: {
 21382                           ;USBapp.c: 205: putUSBUSART(&USB_Buffer[0], NextUSBOut);
 21383  003BE2  0E80               	movlw	low _USB_Buffer
 21384  003BE4  6F60               	movwf	putUSBUSART@data& (0+255),b
 21385  003BE6  0E02               	movlw	high _USB_Buffer
 21386  003BE8  6F61               	movwf	(putUSBUSART@data+1)& (0+255),b
 21387  003BEA  C0E8  F062         	movff	_NextUSBOut,putUSBUSART@length
 21388  003BEE  EC73  F02F         	call	_putUSBUSART	;wreg free
 21389                           
 21390                           ;USBapp.c: 206: MOTEapp_setResponseReady();
 21391  003BF2  EC12  F031         	call	_MOTEapp_setResponseReady	;wreg free
 21392                           
 21393                           ;USBapp.c: 207: NextUSBOut = 0;
 21394  003BF6  0E00               	movlw	0
 21395  003BF8  0100               	movlb	0	; () banked
 21396  003BFA  6FE8               	movwf	_NextUSBOut& (0+255),b
 21397  003BFC                     l885:
 21398                           
 21399                           ; BSR set to: 0
 21400                           ;USBapp.c: 208: }
 21401                           ;USBapp.c: 210: CDCTxService();
 21402                           
 21403                           ; BSR set to: 0
 21404  003BFC  EC19  F015         	call	_CDCTxService	;wreg free
 21405  003C00  0012               	return		;funcret
 21406  003C02                     __end_of_USBapp_DeviceCdcEmulatorHandler:
 21407                           	opt stack 0
 21408                           tblptru	equ	0xFF8
 21409                           tblptrh	equ	0xFF7
 21410                           tblptrl	equ	0xFF6
 21411                           tablat	equ	0xFF5
 21412                           prodh	equ	0xFF4
 21413                           prodl	equ	0xFF3
 21414                           intcon	equ	0xFF2
 21415                           intcon3	equ	0xFF0
 21416                           indf0	equ	0xFEF
 21417                           postinc0	equ	0xFEE
 21418                           fsr0h	equ	0xFEA
 21419                           fsr0l	equ	0xFE9
 21420                           wreg	equ	0xFE8
 21421                           indf1	equ	0xFE7
 21422                           postdec1	equ	0xFE5
 21423                           fsr1h	equ	0xFE2
 21424                           fsr1l	equ	0xFE1
 21425                           indf2	equ	0xFDF
 21426                           fsr2h	equ	0xFDA
 21427                           fsr2l	equ	0xFD9
 21428                           status	equ	0xFD8
 21429                           
 21430 ;; *************** function _putUSBUSART *****************
 21431 ;; Defined at:
 21432 ;;		line 503 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 21433 ;; Parameters:    Size  Location     Type
 21434 ;;  data            2    0[BANK0 ] PTR unsigned char 
 21435 ;;		 -> USB_Buffer(64), 
 21436 ;;  length          1    2[BANK0 ] unsigned char 
 21437 ;; Auto vars:     Size  Location     Type
 21438 ;;		None
 21439 ;; Return value:  Size  Location     Type
 21440 ;;                  1    wreg      void 
 21441 ;; Registers used:
 21442 ;;		wreg, status,2, status,0
 21443 ;; Tracked objects:
 21444 ;;		On entry : 0/0
 21445 ;;		On exit  : 0/0
 21446 ;;		Unchanged: 0/0
 21447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21448 ;;      Params:         0       3       0       0       0       0       0       0       0
 21449 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21450 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21451 ;;      Totals:         0       3       0       0       0       0       0       0       0
 21452 ;;Total ram usage:        3 bytes
 21453 ;; Hardware stack levels used:    1
 21454 ;; Hardware stack levels required when called:   11
 21455 ;; This function calls:
 21456 ;;		Nothing
 21457 ;; This function is called by:
 21458 ;;		_USBapp_DeviceCdcEmulatorHandler
 21459 ;; This function uses a non-reentrant model
 21460 ;;
 21461                           
 21462                           	psect	text78
 21463  005EE6                     __ptext78:
 21464                           	opt stack 0
 21465  005EE6                     _putUSBUSART:
 21466                           	opt stack 17
 21467                           
 21468                           ;usb_device_cdc.c: 528: {PIE3bits.USBIE = 0;};
 21469                           
 21470                           ;incstack = 0
 21471  005EE6  94A3               	bcf	4003,2,c	;volatile
 21472                           
 21473                           ;usb_device_cdc.c: 529: if(cdc_trf_state == 0)
 21474  005EE8  0100               	movlb	0	; () banked
 21475  005EEA  51EB               	movf	_cdc_trf_state& (0+255),w,b
 21476  005EEC  A4D8               	btfss	status,2,c
 21477  005EEE  D00A               	goto	l2191
 21478                           
 21479                           ; BSR set to: 0
 21480                           ;usb_device_cdc.c: 530: {
 21481                           ;usb_device_cdc.c: 531: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 21482  005EF0  C060  F151         	movff	putUSBUSART@data,_pCDCSrc
 21483  005EF4  C061  F152         	movff	putUSBUSART@data+1,_pCDCSrc+1
 21484                           
 21485                           ; BSR set to: 0
 21486  005EF8  C062  F0DC         	movff	putUSBUSART@length,_cdc_tx_len
 21487                           
 21488                           ; BSR set to: 0
 21489  005EFC  0E01               	movlw	1
 21490  005EFE  6E42               	movwf	_cdc_mem_type,c
 21491                           
 21492                           ; BSR set to: 0
 21493  005F00  0E01               	movlw	1
 21494  005F02  6FEB               	movwf	_cdc_trf_state& (0+255),b
 21495  005F04                     l2191:
 21496                           
 21497                           ; BSR set to: 0
 21498                           ;usb_device_cdc.c: 532: }
 21499                           ;usb_device_cdc.c: 533: {PIE3bits.USBIE = 1;};
 21500                           
 21501                           ; BSR set to: 0
 21502  005F04  84A3               	bsf	4003,2,c	;volatile
 21503                           
 21504                           ; BSR set to: 0
 21505  005F06  0012               	return		;funcret
 21506  005F08                     __end_of_putUSBUSART:
 21507                           	opt stack 0
 21508                           tblptru	equ	0xFF8
 21509                           tblptrh	equ	0xFF7
 21510                           tblptrl	equ	0xFF6
 21511                           tablat	equ	0xFF5
 21512                           prodh	equ	0xFF4
 21513                           prodl	equ	0xFF3
 21514                           intcon	equ	0xFF2
 21515                           intcon3	equ	0xFF0
 21516                           indf0	equ	0xFEF
 21517                           postinc0	equ	0xFEE
 21518                           fsr0h	equ	0xFEA
 21519                           fsr0l	equ	0xFE9
 21520                           wreg	equ	0xFE8
 21521                           indf1	equ	0xFE7
 21522                           postdec1	equ	0xFE5
 21523                           fsr1h	equ	0xFE2
 21524                           fsr1l	equ	0xFE1
 21525                           indf2	equ	0xFDF
 21526                           fsr2h	equ	0xFDA
 21527                           fsr2l	equ	0xFD9
 21528                           status	equ	0xFD8
 21529                           
 21530 ;; *************** function _getsUSBUSART *****************
 21531 ;; Defined at:
 21532 ;;		line 432 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 21533 ;; Parameters:    Size  Location     Type
 21534 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 21535 ;;		 -> USB_Buffer(64), 
 21536 ;;  len             1    9[BANK0 ] unsigned char 
 21537 ;; Auto vars:     Size  Location     Type
 21538 ;;		None
 21539 ;; Return value:  Size  Location     Type
 21540 ;;                  1    wreg      unsigned char 
 21541 ;; Registers used:
 21542 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21543 ;; Tracked objects:
 21544 ;;		On entry : 0/0
 21545 ;;		On exit  : 0/0
 21546 ;;		Unchanged: 0/0
 21547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21548 ;;      Params:         0       3       0       0       0       0       0       0       0
 21549 ;;      Locals:         0       2       0       0       0       0       0       0       0
 21550 ;;      Temps:          0       1       0       0       0       0       0       0       0
 21551 ;;      Totals:         0       6       0       0       0       0       0       0       0
 21552 ;;Total ram usage:        6 bytes
 21553 ;; Hardware stack levels used:    1
 21554 ;; Hardware stack levels required when called:   12
 21555 ;; This function calls:
 21556 ;;		_USBTransferOnePacket
 21557 ;; This function is called by:
 21558 ;;		_USBapp_DeviceCdcEmulatorHandler
 21559 ;; This function uses a non-reentrant model
 21560 ;;
 21561                           
 21562                           	psect	text79
 21563  0044C8                     __ptext79:
 21564                           	opt stack 0
 21565  0044C8                     _getsUSBUSART:
 21566                           	opt stack 16
 21567                           
 21568                           ;usb_device_cdc.c: 434: cdc_rx_len = 0;
 21569                           
 21570                           ; BSR set to: 0
 21571                           ;incstack = 0
 21572  0044C8  0E00               	movlw	0
 21573  0044CA  0100               	movlb	0	; () banked
 21574  0044CC  6FDD               	movwf	_cdc_rx_len& (0+255),b
 21575                           
 21576                           ; BSR set to: 0
 21577                           ;usb_device_cdc.c: 436: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 21578  0044CE  51D6               	movf	_CDCDataOutHandle& (0+255),w,b
 21579  0044D0  11D7               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 21580  0044D2  B4D8               	btfsc	status,2,c
 21581  0044D4  D00F               	goto	l2181
 21582                           
 21583                           ; BSR set to: 0
 21584  0044D6  C0D6  FFD9         	movff	_CDCDataOutHandle,fsr2l
 21585  0044DA  C0D7  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 21586  0044DE  AEDF               	btfss	indf2,7,c
 21587  0044E0  D003               	goto	u8530
 21588  0044E2  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 21589  0044E4  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 21590  0044E6  D002               	goto	u8538
 21591  0044E8                     u8530:
 21592  0044E8  0100               	movlb	0	; () banked
 21593  0044EA  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 21594  0044EC                     u8538:
 21595  0044EC  516A               	movf	??_getsUSBUSART& (0+255),w,b
 21596  0044EE  6F6B               	movwf	_getsUSBUSART$6624& (0+255),b
 21597  0044F0  6B6C               	clrf	(_getsUSBUSART$6624+1)& (0+255),b
 21598  0044F2  D004               	goto	l2183
 21599  0044F4                     l2181:
 21600                           
 21601                           ; BSR set to: 0
 21602                           
 21603                           ; BSR set to: 0
 21604  0044F4  0E00               	movlw	0
 21605  0044F6  6F6C               	movwf	(_getsUSBUSART$6624+1)& (0+255),b
 21606  0044F8  0E00               	movlw	0
 21607  0044FA  6F6B               	movwf	_getsUSBUSART$6624& (0+255),b
 21608  0044FC                     l2183:
 21609                           
 21610                           ; BSR set to: 0
 21611                           
 21612                           ; BSR set to: 0
 21613  0044FC  516B               	movf	_getsUSBUSART$6624& (0+255),w,b
 21614  0044FE  116C               	iorwf	(_getsUSBUSART$6624+1)& (0+255),w,b
 21615  004500  A4D8               	btfss	status,2,c
 21616  004502  D03B               	goto	l2179
 21617                           
 21618                           ; BSR set to: 0
 21619                           ;usb_device_cdc.c: 437: {
 21620                           ;usb_device_cdc.c: 442: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 21621  004504  EE20 F001          	lfsr	2,1
 21622  004508  51D6               	movf	_CDCDataOutHandle& (0+255),w,b
 21623  00450A  26D9               	addwf	fsr2l,f,c
 21624  00450C  51D7               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 21625  00450E  22DA               	addwfc	fsr2h,f,c
 21626  004510  5169               	movf	getsUSBUSART@len& (0+255),w,b
 21627  004512  5CDE               	subwf	postinc2,w,c
 21628  004514  B0D8               	btfsc	status,0,c
 21629  004516  D008               	goto	l2184
 21630                           
 21631                           ; BSR set to: 0
 21632                           ;usb_device_cdc.c: 443: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 21633  004518  EE20 F001          	lfsr	2,1
 21634  00451C  51D6               	movf	_CDCDataOutHandle& (0+255),w,b
 21635  00451E  26D9               	addwf	fsr2l,f,c
 21636  004520  51D7               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 21637  004522  22DA               	addwfc	fsr2h,f,c
 21638  004524  50DF               	movf	indf2,w,c
 21639  004526  6F69               	movwf	getsUSBUSART@len& (0+255),b
 21640  004528                     l2184:
 21641                           
 21642                           ; BSR set to: 0
 21643                           ;usb_device_cdc.c: 448: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 21644                           
 21645                           ; BSR set to: 0
 21646  004528  0E00               	movlw	0
 21647  00452A  6FDD               	movwf	_cdc_rx_len& (0+255),b
 21648  00452C  D013               	goto	l2185
 21649  00452E                     
 21650                           ; BSR set to: 0
 21651                           ;usb_device_cdc.c: 449: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 21652                           
 21653                           ; BSR set to: 0
 21654  00452E  51DD               	movf	_cdc_rx_len& (0+255),w,b
 21655  004530  0D01               	mullw	1
 21656  004532  0E40               	movlw	64
 21657  004534  24F3               	addwf	prodl,w,c
 21658  004536  6ED9               	movwf	fsr2l,c
 21659  004538  0E05               	movlw	5
 21660  00453A  20F4               	addwfc	prodh,w,c
 21661  00453C  6EDA               	movwf	fsr2h,c
 21662  00453E  51DD               	movf	_cdc_rx_len& (0+255),w,b
 21663  004540  0D01               	mullw	1
 21664  004542  50F3               	movf	prodl,w,c
 21665  004544  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 21666  004546  6EE1               	movwf	fsr1l,c
 21667  004548  50F4               	movf	prodh,w,c
 21668  00454A  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 21669  00454C  6EE2               	movwf	fsr1h,c
 21670  00454E  CFDF FFE7          	movff	indf2,indf1
 21671                           
 21672                           ; BSR set to: 0
 21673  004552  2BDD               	incf	_cdc_rx_len& (0+255),f,b
 21674  004554                     l2185:
 21675                           
 21676                           ; BSR set to: 0
 21677                           
 21678                           ; BSR set to: 0
 21679  004554  5169               	movf	getsUSBUSART@len& (0+255),w,b
 21680  004556  5DDD               	subwf	_cdc_rx_len& (0+255),w,b
 21681  004558  A0D8               	btfss	status,0,c
 21682  00455A  D7E9               	goto	l2186
 21683                           
 21684                           ; BSR set to: 0
 21685                           ;usb_device_cdc.c: 455: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 21686                           
 21687                           ; BSR set to: 0
 21688  00455C  0E00               	movlw	0
 21689  00455E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21690  004560  0E40               	movlw	64
 21691  004562  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21692  004564  0E05               	movlw	5
 21693  004566  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21694  004568  0E40               	movlw	64
 21695  00456A  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 21696  00456C  0E02               	movlw	2
 21697  00456E  ECA8  F021         	call	_USBTransferOnePacket
 21698  004572  C060  F0D6         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 21699  004576  C061  F0D7         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 21700  00457A                     l2179:
 21701                           
 21702                           ;usb_device_cdc.c: 457: }
 21703                           ;usb_device_cdc.c: 459: return cdc_rx_len;
 21704  00457A  0100               	movlb	0	; () banked
 21705  00457C  51DD               	movf	_cdc_rx_len& (0+255),w,b
 21706  00457E  0012               	return	
 21707  004580                     __end_of_getsUSBUSART:
 21708                           	opt stack 0
 21709                           tblptru	equ	0xFF8
 21710                           tblptrh	equ	0xFF7
 21711                           tblptrl	equ	0xFF6
 21712                           tablat	equ	0xFF5
 21713                           prodh	equ	0xFF4
 21714                           prodl	equ	0xFF3
 21715                           intcon	equ	0xFF2
 21716                           intcon3	equ	0xFF0
 21717                           indf0	equ	0xFEF
 21718                           postinc0	equ	0xFEE
 21719                           fsr0h	equ	0xFEA
 21720                           fsr0l	equ	0xFE9
 21721                           wreg	equ	0xFE8
 21722                           indf1	equ	0xFE7
 21723                           postdec1	equ	0xFE5
 21724                           fsr1h	equ	0xFE2
 21725                           fsr1l	equ	0xFE1
 21726                           indf2	equ	0xFDF
 21727                           postinc2	equ	0xFDE
 21728                           fsr2h	equ	0xFDA
 21729                           fsr2l	equ	0xFD9
 21730                           status	equ	0xFD8
 21731                           
 21732 ;; *************** function _USBapp_getrxByteFlag *****************
 21733 ;; Defined at:
 21734 ;;		line 268 in file "../Includes/Board/USBapp.c"
 21735 ;; Parameters:    Size  Location     Type
 21736 ;;		None
 21737 ;; Auto vars:     Size  Location     Type
 21738 ;;		None
 21739 ;; Return value:  Size  Location     Type
 21740 ;;                  1    wreg      unsigned char 
 21741 ;; Registers used:
 21742 ;;		wreg, status,2
 21743 ;; Tracked objects:
 21744 ;;		On entry : 0/0
 21745 ;;		On exit  : 0/0
 21746 ;;		Unchanged: 0/0
 21747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21748 ;;      Params:         0       0       0       0       0       0       0       0       0
 21749 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21750 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21751 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21752 ;;Total ram usage:        0 bytes
 21753 ;; Hardware stack levels used:    1
 21754 ;; Hardware stack levels required when called:   11
 21755 ;; This function calls:
 21756 ;;		Nothing
 21757 ;; This function is called by:
 21758 ;;		_USBapp_DeviceCdcEmulatorHandler
 21759 ;; This function uses a non-reentrant model
 21760 ;;
 21761                           
 21762                           	psect	text80
 21763  00621E                     __ptext80:
 21764                           	opt stack 0
 21765  00621E                     _USBapp_getrxByteFlag:
 21766                           	opt stack 17
 21767                           
 21768                           ;USBapp.c: 270: return rxByteFlag;
 21769                           
 21770                           ; BSR set to: 0
 21771                           ;incstack = 0
 21772  00621E  0100               	movlb	0	; () banked
 21773  006220  51E9               	movf	_rxByteFlag& (0+255),w,b	;volatile
 21774  006222  0012               	return	
 21775  006224                     __end_of_USBapp_getrxByteFlag:
 21776                           	opt stack 0
 21777                           tblptru	equ	0xFF8
 21778                           tblptrh	equ	0xFF7
 21779                           tblptrl	equ	0xFF6
 21780                           tablat	equ	0xFF5
 21781                           prodh	equ	0xFF4
 21782                           prodl	equ	0xFF3
 21783                           intcon	equ	0xFF2
 21784                           intcon3	equ	0xFF0
 21785                           indf0	equ	0xFEF
 21786                           postinc0	equ	0xFEE
 21787                           fsr0h	equ	0xFEA
 21788                           fsr0l	equ	0xFE9
 21789                           wreg	equ	0xFE8
 21790                           indf1	equ	0xFE7
 21791                           postdec1	equ	0xFE5
 21792                           fsr1h	equ	0xFE2
 21793                           fsr1l	equ	0xFE1
 21794                           indf2	equ	0xFDF
 21795                           postinc2	equ	0xFDE
 21796                           fsr2h	equ	0xFDA
 21797                           fsr2l	equ	0xFD9
 21798                           status	equ	0xFD8
 21799                           
 21800 ;; *************** function _MOTEapp_setResponseReady *****************
 21801 ;; Defined at:
 21802 ;;		line 1103 in file "../Includes/Board/MOTEapp.c"
 21803 ;; Parameters:    Size  Location     Type
 21804 ;;		None
 21805 ;; Auto vars:     Size  Location     Type
 21806 ;;		None
 21807 ;; Return value:  Size  Location     Type
 21808 ;;                  1    wreg      void 
 21809 ;; Registers used:
 21810 ;;		wreg, status,2
 21811 ;; Tracked objects:
 21812 ;;		On entry : 0/0
 21813 ;;		On exit  : 0/0
 21814 ;;		Unchanged: 0/0
 21815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21816 ;;      Params:         0       0       0       0       0       0       0       0       0
 21817 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21818 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21819 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21820 ;;Total ram usage:        0 bytes
 21821 ;; Hardware stack levels used:    1
 21822 ;; Hardware stack levels required when called:   11
 21823 ;; This function calls:
 21824 ;;		Nothing
 21825 ;; This function is called by:
 21826 ;;		_USBapp_DeviceCdcEmulatorHandler
 21827 ;; This function uses a non-reentrant model
 21828 ;;
 21829                           
 21830                           	psect	text81
 21831  006224                     __ptext81:
 21832                           	opt stack 0
 21833  006224                     _MOTEapp_setResponseReady:
 21834                           	opt stack 17
 21835                           
 21836                           ;MOTEapp.c: 1105: responseReady = 1;
 21837                           
 21838                           ; BSR set to: 0
 21839                           ;incstack = 0
 21840  006224  0E01               	movlw	1
 21841  006226  6E53               	movwf	_responseReady,c
 21842  006228  0012               	return		;funcret
 21843  00622A                     __end_of_MOTEapp_setResponseReady:
 21844                           	opt stack 0
 21845                           tblptru	equ	0xFF8
 21846                           tblptrh	equ	0xFF7
 21847                           tblptrl	equ	0xFF6
 21848                           tablat	equ	0xFF5
 21849                           prodh	equ	0xFF4
 21850                           prodl	equ	0xFF3
 21851                           intcon	equ	0xFF2
 21852                           intcon3	equ	0xFF0
 21853                           indf0	equ	0xFEF
 21854                           postinc0	equ	0xFEE
 21855                           fsr0h	equ	0xFEA
 21856                           fsr0l	equ	0xFE9
 21857                           wreg	equ	0xFE8
 21858                           indf1	equ	0xFE7
 21859                           postdec1	equ	0xFE5
 21860                           fsr1h	equ	0xFE2
 21861                           fsr1l	equ	0xFE1
 21862                           indf2	equ	0xFDF
 21863                           postinc2	equ	0xFDE
 21864                           fsr2h	equ	0xFDA
 21865                           fsr2l	equ	0xFD9
 21866                           status	equ	0xFD8
 21867                           
 21868 ;; *************** function _EUSART_Write *****************
 21869 ;; Defined at:
 21870 ;;		line 139 in file "../Includes/MccGenerated/eusart.c"
 21871 ;; Parameters:    Size  Location     Type
 21872 ;;  txData          1    wreg     unsigned char 
 21873 ;; Auto vars:     Size  Location     Type
 21874 ;;  txData          1    0[BANK0 ] unsigned char 
 21875 ;; Return value:  Size  Location     Type
 21876 ;;                  1    wreg      void 
 21877 ;; Registers used:
 21878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21879 ;; Tracked objects:
 21880 ;;		On entry : 0/0
 21881 ;;		On exit  : 0/0
 21882 ;;		Unchanged: 0/0
 21883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21884 ;;      Params:         0       0       0       0       0       0       0       0       0
 21885 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21886 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21887 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21888 ;;Total ram usage:        1 bytes
 21889 ;; Hardware stack levels used:    1
 21890 ;; Hardware stack levels required when called:   11
 21891 ;; This function calls:
 21892 ;;		Nothing
 21893 ;; This function is called by:
 21894 ;;		_EndLine
 21895 ;;		_sendCommand
 21896 ;;		_sendDataCommand
 21897 ;;		_USBapp_DeviceCdcEmulatorHandler
 21898 ;; This function uses a non-reentrant model
 21899 ;;
 21900                           
 21901                           	psect	text82
 21902  0059E6                     __ptext82:
 21903                           	opt stack 0
 21904  0059E6                     _EUSART_Write:
 21905                           	opt stack 14
 21906                           
 21907                           ;incstack = 0
 21908                           ;EUSART_Write@txData stored from wreg
 21909  0059E6  0100               	movlb	0	; () banked
 21910  0059E8  6F60               	movwf	EUSART_Write@txData& (0+255),b
 21911  0059EA                     
 21912                           ;eusart.c: 142: {
 21913                           
 21914                           ;eusart.c: 141: while(0 == eusartTxBufferRemaining)
 21915  0059EA  0100               	movlb	0	; () banked
 21916  0059EC  51E0               	movf	_eusartTxBufferRemaining& (0+255),w,b	;volatile
 21917  0059EE  B4D8               	btfsc	status,2,c
 21918  0059F0  D7FC               	goto	l7937
 21919                           
 21920                           ; BSR set to: 0
 21921                           ;eusart.c: 143: }
 21922                           ;eusart.c: 145: if(0 == PIE1bits.TXIE)
 21923  0059F2  B89D               	btfsc	3997,4,c	;volatile
 21924  0059F4  D003               	goto	l1225
 21925                           
 21926                           ; BSR set to: 0
 21927                           ;eusart.c: 146: {
 21928                           ;eusart.c: 147: TXREG = txData;
 21929  0059F6  C060  FFAD         	movff	EUSART_Write@txData,4013	;volatile
 21930                           
 21931                           ;eusart.c: 148: }
 21932  0059FA  D012               	goto	l1226
 21933  0059FC                     l1225:
 21934                           
 21935                           ; BSR set to: 0
 21936                           ;eusart.c: 149: else
 21937                           ;eusart.c: 150: {
 21938                           ;eusart.c: 151: PIE1bits.TXIE = 0;
 21939  0059FC  989D               	bcf	3997,4,c	;volatile
 21940                           
 21941                           ; BSR set to: 0
 21942                           ;eusart.c: 152: eusartTxBuffer[eusartTxHead++] = txData;
 21943  0059FE  51E2               	movf	_eusartTxHead& (0+255),w,b
 21944  005A00  0D01               	mullw	1
 21945  005A02  0E40               	movlw	low _eusartTxBuffer
 21946  005A04  24F3               	addwf	prodl,w,c
 21947  005A06  6ED9               	movwf	fsr2l,c
 21948  005A08  0E02               	movlw	high _eusartTxBuffer
 21949  005A0A  20F4               	addwfc	prodh,w,c
 21950  005A0C  6EDA               	movwf	fsr2h,c
 21951  005A0E  C060  FFDF         	movff	EUSART_Write@txData,indf2
 21952                           
 21953                           ; BSR set to: 0
 21954  005A12  2BE2               	incf	_eusartTxHead& (0+255),f,b
 21955                           
 21956                           ; BSR set to: 0
 21957                           ;eusart.c: 153: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 21958  005A14  0E3F               	movlw	63
 21959  005A16  65E2               	cpfsgt	_eusartTxHead& (0+255),b
 21960  005A18  D002               	goto	l1227
 21961                           
 21962                           ; BSR set to: 0
 21963                           ;eusart.c: 154: {
 21964                           ;eusart.c: 155: eusartTxHead = 0;
 21965  005A1A  0E00               	movlw	0
 21966  005A1C  6FE2               	movwf	_eusartTxHead& (0+255),b
 21967  005A1E                     l1227:
 21968                           
 21969                           ; BSR set to: 0
 21970                           ;eusart.c: 156: }
 21971                           ;eusart.c: 157: eusartTxBufferRemaining--;
 21972                           
 21973                           ; BSR set to: 0
 21974  005A1E  07E0               	decf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
 21975  005A20                     l1226:
 21976                           
 21977                           ; BSR set to: 0
 21978                           ;eusart.c: 158: }
 21979                           ;eusart.c: 159: PIE1bits.TXIE = 1;
 21980                           
 21981                           ; BSR set to: 0
 21982  005A20  889D               	bsf	3997,4,c	;volatile
 21983                           
 21984                           ; BSR set to: 0
 21985  005A22  0012               	return		;funcret
 21986  005A24                     __end_of_EUSART_Write:
 21987                           	opt stack 0
 21988                           tblptru	equ	0xFF8
 21989                           tblptrh	equ	0xFF7
 21990                           tblptrl	equ	0xFF6
 21991                           tablat	equ	0xFF5
 21992                           prodh	equ	0xFF4
 21993                           prodl	equ	0xFF3
 21994                           intcon	equ	0xFF2
 21995                           intcon3	equ	0xFF0
 21996                           indf0	equ	0xFEF
 21997                           postinc0	equ	0xFEE
 21998                           fsr0h	equ	0xFEA
 21999                           fsr0l	equ	0xFE9
 22000                           wreg	equ	0xFE8
 22001                           indf1	equ	0xFE7
 22002                           postdec1	equ	0xFE5
 22003                           fsr1h	equ	0xFE2
 22004                           fsr1l	equ	0xFE1
 22005                           indf2	equ	0xFDF
 22006                           postinc2	equ	0xFDE
 22007                           fsr2h	equ	0xFDA
 22008                           fsr2l	equ	0xFD9
 22009                           status	equ	0xFD8
 22010                           
 22011 ;; *************** function _EUSART_Read *****************
 22012 ;; Defined at:
 22013 ;;		line 117 in file "../Includes/MccGenerated/eusart.c"
 22014 ;; Parameters:    Size  Location     Type
 22015 ;;		None
 22016 ;; Auto vars:     Size  Location     Type
 22017 ;;  readValue       1    0[BANK0 ] unsigned char 
 22018 ;; Return value:  Size  Location     Type
 22019 ;;                  1    wreg      unsigned char 
 22020 ;; Registers used:
 22021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22022 ;; Tracked objects:
 22023 ;;		On entry : 0/0
 22024 ;;		On exit  : 0/0
 22025 ;;		Unchanged: 0/0
 22026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22027 ;;      Params:         0       0       0       0       0       0       0       0       0
 22028 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22029 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22030 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22031 ;;Total ram usage:        1 bytes
 22032 ;; Hardware stack levels used:    1
 22033 ;; Hardware stack levels required when called:   11
 22034 ;; This function calls:
 22035 ;;		Nothing
 22036 ;; This function is called by:
 22037 ;;		_MOTEapp_getModuleResponse
 22038 ;;		_USBapp_DeviceCdcEmulatorHandler
 22039 ;; This function uses a non-reentrant model
 22040 ;;
 22041                           
 22042                           	psect	text83
 22043  005A9C                     __ptext83:
 22044                           	opt stack 0
 22045  005A9C                     _EUSART_Read:
 22046                           	opt stack 15
 22047                           
 22048                           ;eusart.c: 119: uint8_t readValue = 0;
 22049                           
 22050                           ; BSR set to: 0
 22051                           ;incstack = 0
 22052  005A9C  0E00               	movlw	0
 22053  005A9E  0100               	movlb	0	; () banked
 22054  005AA0  6F60               	movwf	EUSART_Read@readValue& (0+255),b
 22055                           
 22056                           ;eusart.c: 121: while(0 == eusartRxCount)
 22057  005AA2  D001               	goto	l1215
 22058  005AA4                     l1216:
 22059                           
 22060                           ; BSR set to: 0
 22061                           ;eusart.c: 122: {
 22062                           ;eusart.c: 123: LATAbits.LATA7 = 1;
 22063  005AA4  8E89               	bsf	3977,7,c	;volatile
 22064  005AA6                     l1215:
 22065                           
 22066                           ; BSR set to: 0
 22067                           
 22068                           ; BSR set to: 0
 22069  005AA6  51F5               	movf	_eusartRxCount& (0+255),w,b	;volatile
 22070  005AA8  B4D8               	btfsc	status,2,c
 22071  005AAA  D7FC               	goto	l1216
 22072                           
 22073                           ; BSR set to: 0
 22074                           ;eusart.c: 124: }
 22075                           ;eusart.c: 126: PIE1bits.RCIE = 0;
 22076  005AAC  9A9D               	bcf	3997,5,c	;volatile
 22077                           
 22078                           ; BSR set to: 0
 22079                           ;eusart.c: 128: readValue = eusartRxBuffer[eusartRxTail++];
 22080  005AAE  51DE               	movf	_eusartRxTail& (0+255),w,b
 22081  005AB0  0D01               	mullw	1
 22082  005AB2  0E00               	movlw	low _eusartRxBuffer
 22083  005AB4  24F3               	addwf	prodl,w,c
 22084  005AB6  6ED9               	movwf	fsr2l,c
 22085  005AB8  0E02               	movlw	high _eusartRxBuffer
 22086  005ABA  20F4               	addwfc	prodh,w,c
 22087  005ABC  6EDA               	movwf	fsr2h,c
 22088  005ABE  50DF               	movf	indf2,w,c
 22089  005AC0  6F60               	movwf	EUSART_Read@readValue& (0+255),b
 22090                           
 22091                           ; BSR set to: 0
 22092  005AC2  2BDE               	incf	_eusartRxTail& (0+255),f,b
 22093                           
 22094                           ; BSR set to: 0
 22095                           ;eusart.c: 129: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 22096  005AC4  0E3F               	movlw	63
 22097  005AC6  65DE               	cpfsgt	_eusartRxTail& (0+255),b
 22098  005AC8  D002               	goto	l1218
 22099                           
 22100                           ; BSR set to: 0
 22101                           ;eusart.c: 130: {
 22102                           ;eusart.c: 131: eusartRxTail = 0;
 22103  005ACA  0E00               	movlw	0
 22104  005ACC  6FDE               	movwf	_eusartRxTail& (0+255),b
 22105  005ACE                     l1218:
 22106                           
 22107                           ; BSR set to: 0
 22108                           ;eusart.c: 132: }
 22109                           ;eusart.c: 133: eusartRxCount--;
 22110                           
 22111                           ; BSR set to: 0
 22112  005ACE  07F5               	decf	_eusartRxCount& (0+255),f,b	;volatile
 22113                           
 22114                           ; BSR set to: 0
 22115                           ;eusart.c: 134: PIE1bits.RCIE = 1;
 22116  005AD0  8A9D               	bsf	3997,5,c	;volatile
 22117                           
 22118                           ; BSR set to: 0
 22119                           ;eusart.c: 136: return readValue;
 22120  005AD2  5160               	movf	EUSART_Read@readValue& (0+255),w,b
 22121  005AD4  0012               	return	
 22122  005AD6                     __end_of_EUSART_Read:
 22123                           	opt stack 0
 22124                           tblptru	equ	0xFF8
 22125                           tblptrh	equ	0xFF7
 22126                           tblptrl	equ	0xFF6
 22127                           tablat	equ	0xFF5
 22128                           prodh	equ	0xFF4
 22129                           prodl	equ	0xFF3
 22130                           intcon	equ	0xFF2
 22131                           intcon3	equ	0xFF0
 22132                           indf0	equ	0xFEF
 22133                           postinc0	equ	0xFEE
 22134                           fsr0h	equ	0xFEA
 22135                           fsr0l	equ	0xFE9
 22136                           wreg	equ	0xFE8
 22137                           indf1	equ	0xFE7
 22138                           postdec1	equ	0xFE5
 22139                           fsr1h	equ	0xFE2
 22140                           fsr1l	equ	0xFE1
 22141                           indf2	equ	0xFDF
 22142                           postinc2	equ	0xFDE
 22143                           fsr2h	equ	0xFDA
 22144                           fsr2l	equ	0xFD9
 22145                           status	equ	0xFD8
 22146                           
 22147 ;; *************** function _CDCTxService *****************
 22148 ;; Defined at:
 22149 ;;		line 783 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 22150 ;; Parameters:    Size  Location     Type
 22151 ;;		None
 22152 ;; Auto vars:     Size  Location     Type
 22153 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 22154 ;;  i               1   10[BANK0 ] unsigned char 
 22155 ;; Return value:  Size  Location     Type
 22156 ;;                  1    wreg      void 
 22157 ;; Registers used:
 22158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22159 ;; Tracked objects:
 22160 ;;		On entry : 0/0
 22161 ;;		On exit  : 0/0
 22162 ;;		Unchanged: 0/0
 22163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22164 ;;      Params:         0       0       0       0       0       0       0       0       0
 22165 ;;      Locals:         0       4       0       0       0       0       0       0       0
 22166 ;;      Temps:          0       1       0       0       0       0       0       0       0
 22167 ;;      Totals:         0       5       0       0       0       0       0       0       0
 22168 ;;Total ram usage:        5 bytes
 22169 ;; Hardware stack levels used:    1
 22170 ;; Hardware stack levels required when called:   12
 22171 ;; This function calls:
 22172 ;;		_USBTransferOnePacket
 22173 ;; This function is called by:
 22174 ;;		_USBapp_DeviceCdcEmulatorHandler
 22175 ;; This function uses a non-reentrant model
 22176 ;;
 22177                           
 22178                           	psect	text84
 22179  002A32                     __ptext84:
 22180                           	opt stack 0
 22181  002A32                     _CDCTxService:
 22182                           	opt stack 16
 22183                           
 22184                           ;usb_device_cdc.c: 785: uint8_t byte_to_send;
 22185                           ;usb_device_cdc.c: 786: uint8_t i;
 22186                           ;usb_device_cdc.c: 788: {PIE3bits.USBIE = 0;};
 22187                           
 22188                           ; BSR set to: 0
 22189                           ;incstack = 0
 22190  002A32  94A3               	bcf	4003,2,c	;volatile
 22191                           
 22192                           ;usb_device_cdc.c: 790: {};
 22193                           ;usb_device_cdc.c: 792: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 22194  002A34  5034               	movf	_CDCDataInHandle,w,c
 22195  002A36  1035               	iorwf	_CDCDataInHandle+1,w,c
 22196  002A38  B4D8               	btfsc	status,2,c
 22197  002A3A  D010               	goto	l2211
 22198  002A3C  C034  FFD9         	movff	_CDCDataInHandle,fsr2l
 22199  002A40  C035  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 22200  002A44  AEDF               	btfss	indf2,7,c
 22201  002A46  D004               	goto	u8590
 22202  002A48  0100               	movlb	0	; () banked
 22203  002A4A  6B67               	clrf	??_CDCTxService& (0+255),b
 22204  002A4C  2B67               	incf	??_CDCTxService& (0+255),f,b
 22205  002A4E  D002               	goto	u8598
 22206  002A50                     u8590:
 22207  002A50  0100               	movlb	0	; () banked
 22208  002A52  6B67               	clrf	??_CDCTxService& (0+255),b
 22209  002A54                     u8598:
 22210  002A54  5167               	movf	??_CDCTxService& (0+255),w,b
 22211  002A56  6F68               	movwf	_CDCTxService$6672& (0+255),b
 22212  002A58  6B69               	clrf	(_CDCTxService$6672+1)& (0+255),b
 22213  002A5A  D005               	goto	l2213
 22214  002A5C                     l2211:
 22215                           
 22216                           ; BSR set to: 0
 22217  002A5C  0E00               	movlw	0
 22218  002A5E  0100               	movlb	0	; () banked
 22219  002A60  6F69               	movwf	(_CDCTxService$6672+1)& (0+255),b
 22220  002A62  0E00               	movlw	0
 22221  002A64  6F68               	movwf	_CDCTxService$6672& (0+255),b
 22222  002A66                     l2213:
 22223                           
 22224                           ; BSR set to: 0
 22225                           
 22226                           ; BSR set to: 0
 22227  002A66  5168               	movf	_CDCTxService$6672& (0+255),w,b
 22228  002A68  1169               	iorwf	(_CDCTxService$6672+1)& (0+255),w,b
 22229  002A6A  B4D8               	btfsc	status,2,c
 22230  002A6C  D002               	goto	l2209
 22231                           
 22232                           ; BSR set to: 0
 22233                           ;usb_device_cdc.c: 793: {
 22234                           ;usb_device_cdc.c: 794: {PIE3bits.USBIE = 1;};
 22235  002A6E  84A3               	bsf	4003,2,c	;volatile
 22236                           
 22237                           ;usb_device_cdc.c: 795: return;
 22238  002A70  0012               	return	
 22239  002A72                     l2209:
 22240                           
 22241                           ; BSR set to: 0
 22242                           ;usb_device_cdc.c: 796: }
 22243                           ;usb_device_cdc.c: 803: if(cdc_trf_state == 3)
 22244                           
 22245                           ; BSR set to: 0
 22246  002A72  0E03               	movlw	3
 22247  002A74  19EB               	xorwf	_cdc_trf_state& (0+255),w,b
 22248  002A76  A4D8               	btfss	status,2,c
 22249  002A78  D002               	goto	l2215
 22250                           
 22251                           ; BSR set to: 0
 22252                           ;usb_device_cdc.c: 804: cdc_trf_state = 0;
 22253  002A7A  0E00               	movlw	0
 22254  002A7C  6FEB               	movwf	_cdc_trf_state& (0+255),b
 22255  002A7E                     l2215:
 22256                           
 22257                           ; BSR set to: 0
 22258                           ;usb_device_cdc.c: 809: if(cdc_trf_state == 0)
 22259  002A7E  51EB               	movf	_cdc_trf_state& (0+255),w,b
 22260  002A80  A4D8               	btfss	status,2,c
 22261  002A82  D002               	goto	l2216
 22262                           
 22263                           ; BSR set to: 0
 22264                           ;usb_device_cdc.c: 810: {
 22265                           ;usb_device_cdc.c: 811: {PIE3bits.USBIE = 1;};
 22266  002A84  84A3               	bsf	4003,2,c	;volatile
 22267                           
 22268                           ;usb_device_cdc.c: 812: return;
 22269  002A86  0012               	return	
 22270  002A88                     l2216:
 22271                           
 22272                           ; BSR set to: 0
 22273                           ;usb_device_cdc.c: 813: }
 22274                           ;usb_device_cdc.c: 818: if(cdc_trf_state == 2)
 22275                           
 22276                           ; BSR set to: 0
 22277  002A88  0E02               	movlw	2
 22278  002A8A  19EB               	xorwf	_cdc_trf_state& (0+255),w,b
 22279  002A8C  A4D8               	btfss	status,2,c
 22280  002A8E  D013               	goto	l2217
 22281                           
 22282                           ; BSR set to: 0
 22283                           ;usb_device_cdc.c: 819: {
 22284                           ;usb_device_cdc.c: 820: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 22285  002A90  0E01               	movlw	1
 22286  002A92  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 22287  002A94  0E00               	movlw	0
 22288  002A96  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 22289  002A98  0E00               	movlw	0
 22290  002A9A  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 22291  002A9C  0E00               	movlw	0
 22292  002A9E  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 22293  002AA0  0E02               	movlw	2
 22294  002AA2  ECA8  F021         	call	_USBTransferOnePacket
 22295  002AA6  C060  F034         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 22296  002AAA  C061  F035         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 22297                           
 22298                           ;usb_device_cdc.c: 822: cdc_trf_state = 3;
 22299  002AAE  0E03               	movlw	3
 22300  002AB0  0100               	movlb	0	; () banked
 22301  002AB2  6FEB               	movwf	_cdc_trf_state& (0+255),b
 22302                           
 22303                           ;usb_device_cdc.c: 823: }
 22304  002AB4  D05F               	goto	l2219
 22305  002AB6                     l2217:
 22306                           
 22307                           ; BSR set to: 0
 22308                           ;usb_device_cdc.c: 824: else if(cdc_trf_state == 1)
 22309                           
 22310                           ; BSR set to: 0
 22311  002AB6  05EB               	decf	_cdc_trf_state& (0+255),w,b
 22312  002AB8  A4D8               	btfss	status,2,c
 22313  002ABA  D05C               	goto	l2219
 22314                           
 22315                           ; BSR set to: 0
 22316                           ;usb_device_cdc.c: 825: {
 22317                           ;usb_device_cdc.c: 829: if(cdc_tx_len > sizeof(cdc_data_tx))
 22318  002ABC  0E40               	movlw	64
 22319  002ABE  65DC               	cpfsgt	_cdc_tx_len& (0+255),b
 22320  002AC0  D003               	goto	l2220
 22321                           
 22322                           ; BSR set to: 0
 22323                           ;usb_device_cdc.c: 830: byte_to_send = sizeof(cdc_data_tx);
 22324  002AC2  0E40               	movlw	64
 22325  002AC4  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 22326  002AC6  D002               	goto	l2221
 22327  002AC8                     l2220:
 22328                           
 22329                           ; BSR set to: 0
 22330                           ;usb_device_cdc.c: 831: else
 22331                           ;usb_device_cdc.c: 832: byte_to_send = cdc_tx_len;
 22332  002AC8  C0DC  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 22333  002ACC                     l2221:
 22334                           
 22335                           ; BSR set to: 0
 22336                           ;usb_device_cdc.c: 837: cdc_tx_len = cdc_tx_len - byte_to_send;
 22337                           
 22338                           ; BSR set to: 0
 22339  002ACC  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 22340  002ACE  0800               	sublw	0
 22341  002AD0  25DC               	addwf	_cdc_tx_len& (0+255),w,b
 22342  002AD2  6FDC               	movwf	_cdc_tx_len& (0+255),b
 22343                           
 22344                           ;usb_device_cdc.c: 839: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 22345  002AD4  0E00               	movlw	0
 22346  002AD6  0101               	movlb	1	; () banked
 22347  002AD8  6F4E               	movwf	_pCDCDst& (0+255),b
 22348  002ADA  0E05               	movlw	5
 22349  002ADC  6F4F               	movwf	(_pCDCDst+1)& (0+255),b
 22350                           
 22351                           ; BSR set to: 1
 22352                           ;usb_device_cdc.c: 841: i = byte_to_send;
 22353  002ADE  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 22354                           
 22355                           ; BSR set to: 1
 22356                           ;usb_device_cdc.c: 842: if(cdc_mem_type == 0x00)
 22357  002AE2  5042               	movf	_cdc_mem_type,w,c
 22358  002AE4  B4D8               	btfsc	status,2,c
 22359  002AE6  D012               	goto	l2223
 22360  002AE8  D027               	goto	l2227
 22361  002AEA                     
 22362                           ;usb_device_cdc.c: 845: {
 22363                           ;usb_device_cdc.c: 846: *pCDCDst.bRam = *pCDCSrc.bRom;
 22364                           
 22365                           ; BSR set to: 1
 22366  002AEA  C151  FFD9         	movff	_pCDCSrc,fsr2l
 22367  002AEE  C152  FFDA         	movff	_pCDCSrc+1,fsr2h
 22368  002AF2  C14E  FFE1         	movff	_pCDCDst,fsr1l
 22369  002AF6  C14F  FFE2         	movff	_pCDCDst+1,fsr1h
 22370  002AFA  CFDF FFE7          	movff	indf2,indf1
 22371                           
 22372                           ;usb_device_cdc.c: 847: pCDCDst.bRam++;
 22373  002AFE  0101               	movlb	1	; () banked
 22374  002B00  4B4E               	infsnz	_pCDCDst& (0+255),f,b
 22375  002B02  2B4F               	incf	(_pCDCDst+1)& (0+255),f,b
 22376                           
 22377                           ; BSR set to: 1
 22378                           ;usb_device_cdc.c: 848: pCDCSrc.bRom++;
 22379  002B04  4B51               	infsnz	_pCDCSrc& (0+255),f,b
 22380  002B06  2B52               	incf	(_pCDCSrc+1)& (0+255),f,b
 22381                           
 22382                           ; BSR set to: 1
 22383                           ;usb_device_cdc.c: 849: i--;
 22384  002B08  0100               	movlb	0	; () banked
 22385  002B0A  076A               	decf	CDCTxService@i& (0+255),f,b
 22386  002B0C                     l2223:
 22387                           
 22388                           ; BSR set to: 0
 22389  002B0C  0100               	movlb	0	; () banked
 22390  002B0E  516A               	movf	CDCTxService@i& (0+255),w,b
 22391  002B10  B4D8               	btfsc	status,2,c
 22392  002B12  D016               	goto	u8680
 22393  002B14  D7EA               	goto	l2224
 22394  002B16                     
 22395                           ; BSR set to: 0
 22396                           ;usb_device_cdc.c: 855: {
 22397                           ;usb_device_cdc.c: 856: *pCDCDst.bRam = *pCDCSrc.bRam;
 22398                           
 22399                           ; BSR set to: 0
 22400  002B16  C151  FFD9         	movff	_pCDCSrc,fsr2l
 22401  002B1A  C152  FFDA         	movff	_pCDCSrc+1,fsr2h
 22402  002B1E  C14E  FFE1         	movff	_pCDCDst,fsr1l
 22403  002B22  C14F  FFE2         	movff	_pCDCDst+1,fsr1h
 22404  002B26  CFDF FFE7          	movff	indf2,indf1
 22405                           
 22406                           ; BSR set to: 0
 22407                           ;usb_device_cdc.c: 857: pCDCDst.bRam++;
 22408  002B2A  0101               	movlb	1	; () banked
 22409  002B2C  4B4E               	infsnz	_pCDCDst& (0+255),f,b
 22410  002B2E  2B4F               	incf	(_pCDCDst+1)& (0+255),f,b
 22411                           
 22412                           ; BSR set to: 1
 22413                           ;usb_device_cdc.c: 858: pCDCSrc.bRam++;
 22414  002B30  4B51               	infsnz	_pCDCSrc& (0+255),f,b
 22415  002B32  2B52               	incf	(_pCDCSrc+1)& (0+255),f,b
 22416                           
 22417                           ; BSR set to: 1
 22418                           ;usb_device_cdc.c: 859: i--;
 22419  002B34  0100               	movlb	0	; () banked
 22420  002B36  076A               	decf	CDCTxService@i& (0+255),f,b
 22421  002B38                     l2227:
 22422                           
 22423                           ; BSR set to: 0
 22424  002B38  0100               	movlb	0	; () banked
 22425  002B3A  516A               	movf	CDCTxService@i& (0+255),w,b
 22426  002B3C  A4D8               	btfss	status,2,c
 22427  002B3E  D7EB               	goto	l2228
 22428  002B40                     u8680:
 22429                           
 22430                           ; BSR set to: 0
 22431                           ;usb_device_cdc.c: 860: }
 22432                           ;usb_device_cdc.c: 861: }
 22433                           ;usb_device_cdc.c: 867: if(cdc_tx_len == 0)
 22434                           
 22435                           ; BSR set to: 0
 22436                           
 22437                           ; BSR set to: 0
 22438  002B40  51DC               	movf	_cdc_tx_len& (0+255),w,b
 22439  002B42  A4D8               	btfss	status,2,c
 22440  002B44  D008               	goto	l2232
 22441                           
 22442                           ; BSR set to: 0
 22443                           ;usb_device_cdc.c: 868: {
 22444                           ;usb_device_cdc.c: 869: if(byte_to_send == 64)
 22445  002B46  0E40               	movlw	64
 22446  002B48  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 22447  002B4A  A4D8               	btfss	status,2,c
 22448  002B4C  D002               	goto	l2231
 22449                           
 22450                           ; BSR set to: 0
 22451                           ;usb_device_cdc.c: 870: cdc_trf_state = 2;
 22452  002B4E  0E02               	movlw	2
 22453  002B50  D001               	goto	L21
 22454  002B52                     l2231:
 22455                           
 22456                           ; BSR set to: 0
 22457                           ;usb_device_cdc.c: 871: else
 22458                           ;usb_device_cdc.c: 872: cdc_trf_state = 3;
 22459                           
 22460                           ; BSR set to: 0
 22461  002B52  0E03               	movlw	3
 22462  002B54                     L21:
 22463  002B54  6FEB               	movwf	_cdc_trf_state& (0+255),b
 22464  002B56                     l2232:
 22465                           
 22466                           ; BSR set to: 0
 22467                           ;usb_device_cdc.c: 873: }
 22468                           ;usb_device_cdc.c: 874: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 22469                           
 22470                           ; BSR set to: 0
 22471                           
 22472                           ; BSR set to: 0
 22473  002B56  0E01               	movlw	1
 22474  002B58  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 22475  002B5A  0E00               	movlw	0
 22476  002B5C  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 22477  002B5E  0E05               	movlw	5
 22478  002B60  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 22479  002B62  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 22480  002B66  0E02               	movlw	2
 22481  002B68  ECA8  F021         	call	_USBTransferOnePacket
 22482  002B6C  C060  F034         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 22483  002B70  C061  F035         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 22484  002B74                     l2219:
 22485                           
 22486                           ;usb_device_cdc.c: 876: }
 22487                           ;usb_device_cdc.c: 878: {PIE3bits.USBIE = 1;};
 22488  002B74  84A3               	bsf	4003,2,c	;volatile
 22489  002B76  0012               	return		;funcret
 22490  002B78                     __end_of_CDCTxService:
 22491                           	opt stack 0
 22492                           tblptru	equ	0xFF8
 22493                           tblptrh	equ	0xFF7
 22494                           tblptrl	equ	0xFF6
 22495                           tablat	equ	0xFF5
 22496                           prodh	equ	0xFF4
 22497                           prodl	equ	0xFF3
 22498                           intcon	equ	0xFF2
 22499                           intcon3	equ	0xFF0
 22500                           indf0	equ	0xFEF
 22501                           postinc0	equ	0xFEE
 22502                           fsr0h	equ	0xFEA
 22503                           fsr0l	equ	0xFE9
 22504                           wreg	equ	0xFE8
 22505                           indf1	equ	0xFE7
 22506                           postdec1	equ	0xFE5
 22507                           fsr1h	equ	0xFE2
 22508                           fsr1l	equ	0xFE1
 22509                           indf2	equ	0xFDF
 22510                           postinc2	equ	0xFDE
 22511                           fsr2h	equ	0xFDA
 22512                           fsr2l	equ	0xFD9
 22513                           status	equ	0xFD8
 22514                           
 22515 ;; *************** function _USBTransferOnePacket *****************
 22516 ;; Defined at:
 22517 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 22518 ;; Parameters:    Size  Location     Type
 22519 ;;  ep              1    wreg     unsigned char 
 22520 ;;  dir             1    0[BANK0 ] unsigned char 
 22521 ;;  data            2    1[BANK0 ] PTR unsigned char 
 22522 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 22523 ;;  len             1    3[BANK0 ] unsigned char 
 22524 ;; Auto vars:     Size  Location     Type
 22525 ;;  ep              1    4[BANK0 ] unsigned char 
 22526 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 22527 ;;		 -> BDT(48), NULL(0), 
 22528 ;; Return value:  Size  Location     Type
 22529 ;;                  2    0[BANK0 ] PTR void 
 22530 ;; Registers used:
 22531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22532 ;; Tracked objects:
 22533 ;;		On entry : 0/0
 22534 ;;		On exit  : 0/0
 22535 ;;		Unchanged: 0/0
 22536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22537 ;;      Params:         0       4       0       0       0       0       0       0       0
 22538 ;;      Locals:         0       3       0       0       0       0       0       0       0
 22539 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22540 ;;      Totals:         0       7       0       0       0       0       0       0       0
 22541 ;;Total ram usage:        7 bytes
 22542 ;; Hardware stack levels used:    1
 22543 ;; Hardware stack levels required when called:   11
 22544 ;; This function calls:
 22545 ;;		Nothing
 22546 ;; This function is called by:
 22547 ;;		_getsUSBUSART
 22548 ;;		_CDCTxService
 22549 ;;		_USBCDCEventHandler
 22550 ;; This function uses a non-reentrant model
 22551 ;;
 22552                           
 22553                           	psect	text85
 22554  004350                     __ptext85:
 22555                           	opt stack 0
 22556  004350                     _USBTransferOnePacket:
 22557                           	opt stack 16
 22558                           
 22559                           ;incstack = 0
 22560                           ;USBTransferOnePacket@ep stored from wreg
 22561  004350  0100               	movlb	0	; () banked
 22562  004352  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 22563                           
 22564                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 22565                           ;usb_device.c: 762: if(dir != 0)
 22566  004354  0100               	movlb	0	; () banked
 22567  004356  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 22568  004358  B4D8               	btfsc	status,2,c
 22569  00435A  D007               	goto	l1894
 22570                           
 22571                           ; BSR set to: 0
 22572                           ;usb_device.c: 763: {
 22573                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 22574  00435C  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 22575  00435E  0D02               	mullw	2
 22576  004360  0ECA               	movlw	low _pBDTEntryIn
 22577  004362  24F3               	addwf	prodl,w,c
 22578  004364  6ED9               	movwf	fsr2l,c
 22579  004366  0E00               	movlw	high _pBDTEntryIn
 22580  004368  D006               	goto	L22
 22581  00436A                     l1894:
 22582                           
 22583                           ; BSR set to: 0
 22584                           ;usb_device.c: 767: else
 22585                           ;usb_device.c: 768: {
 22586                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 22587                           
 22588                           ; BSR set to: 0
 22589  00436A  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 22590  00436C  0D02               	mullw	2
 22591  00436E  0E40               	movlw	low _pBDTEntryOut
 22592  004370  24F3               	addwf	prodl,w,c
 22593  004372  6ED9               	movwf	fsr2l,c
 22594  004374  0E01               	movlw	high _pBDTEntryOut
 22595  004376                     L22:
 22596  004376  20F4               	addwfc	prodh,w,c
 22597  004378  6EDA               	movwf	fsr2h,c
 22598  00437A  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 22599  00437E  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 22600                           
 22601                           ; BSR set to: 0
 22602                           ;usb_device.c: 771: }
 22603                           ;usb_device.c: 775: if(handle == 0)
 22604                           
 22605                           ; BSR set to: 0
 22606  004382  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 22607  004384  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 22608  004386  A4D8               	btfss	status,2,c
 22609  004388  D005               	goto	l1896
 22610                           
 22611                           ; BSR set to: 0
 22612                           ;usb_device.c: 776: {
 22613                           ;usb_device.c: 777: return 0;
 22614  00438A  0E00               	movlw	0
 22615  00438C  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 22616  00438E  0E00               	movlw	0
 22617  004390  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 22618                           
 22619                           ; BSR set to: 0
 22620  004392  0012               	return	
 22621  004394                     l1896:
 22622                           
 22623                           ; BSR set to: 0
 22624                           ;usb_device.c: 778: }
 22625                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 22626                           
 22627                           ; BSR set to: 0
 22628  004394  EE20 F002          	lfsr	2,2
 22629  004398  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 22630  00439A  26D9               	addwf	fsr2l,f,c
 22631  00439C  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 22632  00439E  22DA               	addwfc	fsr2h,f,c
 22633  0043A0  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 22634  0043A4  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 22635                           
 22636                           ;usb_device.c: 781: handle->CNT = len;
 22637  0043A8  EE20 F001          	lfsr	2,1
 22638  0043AC  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 22639  0043AE  26D9               	addwf	fsr2l,f,c
 22640  0043B0  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 22641  0043B2  22DA               	addwfc	fsr2h,f,c
 22642  0043B4  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 22643                           
 22644                           ; BSR set to: 0
 22645                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 22646  0043B8  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 22647  0043BC  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 22648  0043C0  0E40               	movlw	64
 22649  0043C2  16DF               	andwf	indf2,f,c
 22650                           
 22651                           ; BSR set to: 0
 22652                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 22653  0043C4  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 22654  0043C8  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 22655  0043CC  0E00               	movlw	0
 22656  0043CE  86DB               	bsf	plusw2,3,c
 22657                           
 22658                           ; BSR set to: 0
 22659                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 22660  0043D0  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 22661  0043D4  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 22662  0043D8  0E00               	movlw	0
 22663  0043DA  8EDB               	bsf	plusw2,7,c
 22664                           
 22665                           ; BSR set to: 0
 22666                           ;usb_device.c: 787: if(dir != 0)
 22667  0043DC  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 22668  0043DE  B4D8               	btfsc	status,2,c
 22669  0043E0  D007               	goto	l1898
 22670                           
 22671                           ; BSR set to: 0
 22672                           ;usb_device.c: 788: {
 22673                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 22674  0043E2  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 22675  0043E4  0D02               	mullw	2
 22676  0043E6  0ECA               	movlw	low _pBDTEntryIn
 22677  0043E8  24F3               	addwf	prodl,w,c
 22678  0043EA  6ED9               	movwf	fsr2l,c
 22679  0043EC  0E00               	movlw	high _pBDTEntryIn
 22680  0043EE  D006               	goto	L23
 22681  0043F0                     l1898:
 22682                           
 22683                           ; BSR set to: 0
 22684                           ;usb_device.c: 792: else
 22685                           ;usb_device.c: 793: {
 22686                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 22687                           
 22688                           ; BSR set to: 0
 22689  0043F0  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 22690  0043F2  0D02               	mullw	2
 22691  0043F4  0E40               	movlw	low _pBDTEntryOut
 22692  0043F6  24F3               	addwf	prodl,w,c
 22693  0043F8  6ED9               	movwf	fsr2l,c
 22694  0043FA  0E01               	movlw	high _pBDTEntryOut
 22695  0043FC                     L23:
 22696  0043FC  20F4               	addwfc	prodh,w,c
 22697  0043FE  6EDA               	movwf	fsr2h,c
 22698  004400  0E04               	movlw	4
 22699  004402  1ADF               	xorwf	indf2,f,c
 22700                           
 22701                           ; BSR set to: 0
 22702                           ;usb_device.c: 796: }
 22703                           ;usb_device.c: 797: return (void*)handle;
 22704                           
 22705                           ; BSR set to: 0
 22706  004404  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 22707  004408  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 22708  00440C  0012               	return	
 22709  00440E                     __end_of_USBTransferOnePacket:
 22710                           	opt stack 0
 22711                           tblptru	equ	0xFF8
 22712                           tblptrh	equ	0xFF7
 22713                           tblptrl	equ	0xFF6
 22714                           tablat	equ	0xFF5
 22715                           prodh	equ	0xFF4
 22716                           prodl	equ	0xFF3
 22717                           intcon	equ	0xFF2
 22718                           intcon3	equ	0xFF0
 22719                           indf0	equ	0xFEF
 22720                           postinc0	equ	0xFEE
 22721                           fsr0h	equ	0xFEA
 22722                           fsr0l	equ	0xFE9
 22723                           wreg	equ	0xFE8
 22724                           indf1	equ	0xFE7
 22725                           postdec1	equ	0xFE5
 22726                           fsr1h	equ	0xFE2
 22727                           fsr1l	equ	0xFE1
 22728                           indf2	equ	0xFDF
 22729                           postinc2	equ	0xFDE
 22730                           postdec2	equ	0xFDD
 22731                           plusw2	equ	0xFDB
 22732                           fsr2h	equ	0xFDA
 22733                           fsr2l	equ	0xFD9
 22734                           status	equ	0xFD8
 22735                           
 22736 ;; *************** function _USBDeviceInit *****************
 22737 ;; Defined at:
 22738 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 22739 ;; Parameters:    Size  Location     Type
 22740 ;;		None
 22741 ;; Auto vars:     Size  Location     Type
 22742 ;;  i               1    8[BANK0 ] unsigned char 
 22743 ;; Return value:  Size  Location     Type
 22744 ;;                  1    wreg      void 
 22745 ;; Registers used:
 22746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22747 ;; Tracked objects:
 22748 ;;		On entry : 0/0
 22749 ;;		On exit  : 0/0
 22750 ;;		Unchanged: 0/0
 22751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22752 ;;      Params:         0       0       0       0       0       0       0       0       0
 22753 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22754 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22755 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22756 ;;Total ram usage:        1 bytes
 22757 ;; Hardware stack levels used:    1
 22758 ;; Hardware stack levels required when called:   12
 22759 ;; This function calls:
 22760 ;;		_memset
 22761 ;; This function is called by:
 22762 ;;		_main
 22763 ;; This function uses a non-reentrant model
 22764 ;;
 22765                           
 22766                           	psect	text86
 22767  002F1A                     __ptext86:
 22768                           	opt stack 0
 22769  002F1A                     _USBDeviceInit:
 22770                           	opt stack 18
 22771                           
 22772                           ;usb_device.c: 239: uint8_t i;
 22773                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 22774                           
 22775                           ; BSR set to: 0
 22776                           ;incstack = 0
 22777  002F1A  94A3               	bcf	4003,2,c	;volatile
 22778                           
 22779                           ;usb_device.c: 244: {UEIR = 0;};
 22780  002F1C  0E00               	movlw	0
 22781  002F1E  6E67               	movwf	3943,c	;volatile
 22782                           
 22783                           ;usb_device.c: 247: {UIR = 0;};
 22784  002F20  0E00               	movlw	0
 22785  002F22  6E65               	movwf	3941,c	;volatile
 22786                           
 22787                           ;usb_device.c: 250: UEP0 = 0;
 22788  002F24  0E00               	movlw	0
 22789  002F26  6E6A               	movwf	3946,c	;volatile
 22790                           
 22791                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 22792  002F28  0E6B               	movlw	107
 22793  002F2A  0100               	movlb	0	; () banked
 22794  002F2C  6F60               	movwf	memset@p1& (0+255),b
 22795  002F2E  0E0F               	movlw	15
 22796  002F30  6F61               	movwf	(memset@p1+1)& (0+255),b
 22797  002F32  0E00               	movlw	0
 22798  002F34  6F63               	movwf	(memset@c+1)& (0+255),b
 22799  002F36  0E00               	movlw	0
 22800  002F38  6F62               	movwf	memset@c& (0+255),b
 22801  002F3A  0E00               	movlw	0
 22802  002F3C  6F65               	movwf	(memset@n+1)& (0+255),b
 22803  002F3E  0E02               	movlw	2
 22804  002F40  6F64               	movwf	memset@n& (0+255),b
 22805  002F42  EC57  F02E         	call	_memset	;wreg free
 22806                           
 22807                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 22808  002F46  0E16               	movlw	22
 22809  002F48  6E62               	movwf	3938,c	;volatile
 22810  002F4A  0E9F               	movlw	159
 22811  002F4C  6E66               	movwf	3942,c	;volatile
 22812  002F4E  0E7B               	movlw	123
 22813  002F50  6E64               	movwf	3940,c	;volatile
 22814                           
 22815                           ;usb_device.c: 257: ;
 22816                           ;usb_device.c: 260: ;
 22817                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 22818  002F52  0E00               	movlw	0
 22819  002F54  0100               	movlb	0	; () banked
 22820  002F56  6F68               	movwf	USBDeviceInit@i& (0+255),b
 22821  002F58                     l11545:
 22822                           
 22823                           ; BSR set to: 0
 22824  002F58  0E0B               	movlw	11
 22825  002F5A  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 22826  002F5C  D001               	goto	l1854
 22827  002F5E  D00E               	goto	u10190
 22828  002F60                     l1854:
 22829                           
 22830                           ; BSR set to: 0
 22831                           ;usb_device.c: 264: {
 22832                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 22833                           
 22834                           ; BSR set to: 0
 22835  002F60  5168               	movf	USBDeviceInit@i& (0+255),w,b
 22836  002F62  0D04               	mullw	4
 22837  002F64  0E00               	movlw	0
 22838  002F66  24F3               	addwf	prodl,w,c
 22839  002F68  6ED9               	movwf	fsr2l,c
 22840  002F6A  0E04               	movlw	4
 22841  002F6C  20F4               	addwfc	prodh,w,c
 22842  002F6E  6EDA               	movwf	fsr2h,c
 22843  002F70  6ADE               	clrf	postinc2,c
 22844  002F72  6ADE               	clrf	postinc2,c
 22845  002F74  6ADE               	clrf	postinc2,c
 22846  002F76  6ADD               	clrf	postdec2,c
 22847                           
 22848                           ; BSR set to: 0
 22849  002F78  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 22850  002F7A  D7EE               	goto	l11545
 22851  002F7C                     u10190:
 22852                           
 22853                           ; BSR set to: 0
 22854                           ;usb_device.c: 266: }
 22855                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 22856  002F7C  8C60               	bsf	3936,6,c	;volatile
 22857                           
 22858                           ; BSR set to: 0
 22859                           ;usb_device.c: 272: UADDR = 0x00;
 22860  002F7E  0E00               	movlw	0
 22861  002F80  6E63               	movwf	3939,c	;volatile
 22862                           
 22863                           ; BSR set to: 0
 22864                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 22865  002F82  9860               	bcf	3936,4,c	;volatile
 22866                           
 22867                           ; BSR set to: 0
 22868                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 22869  002F84  9C60               	bcf	3936,6,c	;volatile
 22870                           
 22871                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 22872  002F86  D009               	goto	l1856
 22873  002F88                     
 22874                           ; BSR set to: 0
 22875                           ;usb_device.c: 282: {
 22876                           ;usb_device.c: 283: (UIR &= 0xF7);
 22877                           
 22878                           ; BSR set to: 0
 22879  002F88  9665               	bcf	3941,3,c	;volatile
 22880                           
 22881                           ; BSR set to: 0
 22882                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 22883  002F8A  0E00               	movlw	0
 22884  002F8C  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 22885                           
 22886                           ; BSR set to: 0
 22887                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 22888  002F8E  0E00               	movlw	0
 22889  002F90  6FBF               	movwf	(_outPipes+3)& (0+255),b	;volatile
 22890                           
 22891                           ; BSR set to: 0
 22892                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 22893  002F92  0E00               	movlw	0
 22894  002F94  6FC1               	movwf	(_outPipes+5)& (0+255),b	;volatile
 22895  002F96  0E00               	movlw	0
 22896  002F98  6FC0               	movwf	(_outPipes+4)& (0+255),b	;volatile
 22897  002F9A                     l1856:
 22898                           
 22899                           ; BSR set to: 0
 22900                           
 22901                           ; BSR set to: 0
 22902  002F9A  B665               	btfsc	3941,3,c	;volatile
 22903  002F9C  D7F5               	goto	l1857
 22904                           
 22905                           ; BSR set to: 0
 22906                           ;usb_device.c: 288: }
 22907                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 22908                           
 22909                           ; BSR set to: 0
 22910  002F9E  0E01               	movlw	1
 22911  002FA0  6E46               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 22912                           
 22913                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 22914  002FA2  0E01               	movlw	1
 22915  002FA4  6E45               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 22916                           
 22917                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 22918  002FA6  0E00               	movlw	0
 22919  002FA8  6E44               	movwf	_USBDeferINDataStagePackets,c	;volatile
 22920                           
 22921                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 22922  002FAA  0E00               	movlw	0
 22923  002FAC  6E43               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 22924                           
 22925                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 22926  002FAE  0E00               	movlw	0
 22927  002FB0  0101               	movlb	1	; () banked
 22928  002FB2  6F5D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 22929                           
 22930                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 22931  002FB4  0E00               	movlw	0
 22932  002FB6  0100               	movlb	0	; () banked
 22933  002FB8  6F68               	movwf	USBDeviceInit@i& (0+255),b
 22934  002FBA                     l11573:
 22935                           
 22936                           ; BSR set to: 0
 22937  002FBA  0E02               	movlw	2
 22938  002FBC  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 22939  002FBE  D001               	goto	l1859
 22940  002FC0  D02E               	goto	u10220
 22941  002FC2                     l1859:
 22942                           
 22943                           ; BSR set to: 0
 22944                           ;usb_device.c: 302: {
 22945                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 22946                           
 22947                           ; BSR set to: 0
 22948  002FC2  5168               	movf	USBDeviceInit@i& (0+255),w,b
 22949  002FC4  0D02               	mullw	2
 22950  002FC6  0ECA               	movlw	low _pBDTEntryIn
 22951  002FC8  24F3               	addwf	prodl,w,c
 22952  002FCA  6ED9               	movwf	fsr2l,c
 22953  002FCC  0E00               	movlw	high _pBDTEntryIn
 22954  002FCE  20F4               	addwfc	prodh,w,c
 22955  002FD0  6EDA               	movwf	fsr2h,c
 22956  002FD2  0E00               	movlw	0
 22957  002FD4  6EDE               	movwf	postinc2,c
 22958  002FD6  0E00               	movlw	0
 22959  002FD8  6EDD               	movwf	postdec2,c
 22960                           
 22961                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 22962  002FDA  5168               	movf	USBDeviceInit@i& (0+255),w,b
 22963  002FDC  0D02               	mullw	2
 22964  002FDE  0E40               	movlw	low _pBDTEntryOut
 22965  002FE0  24F3               	addwf	prodl,w,c
 22966  002FE2  6ED9               	movwf	fsr2l,c
 22967  002FE4  0E01               	movlw	high _pBDTEntryOut
 22968  002FE6  20F4               	addwfc	prodh,w,c
 22969  002FE8  6EDA               	movwf	fsr2h,c
 22970  002FEA  0E00               	movlw	0
 22971  002FEC  6EDE               	movwf	postinc2,c
 22972  002FEE  0E00               	movlw	0
 22973  002FF0  6EDD               	movwf	postdec2,c
 22974                           
 22975                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 22976  002FF2  5168               	movf	USBDeviceInit@i& (0+255),w,b
 22977  002FF4  0D01               	mullw	1
 22978  002FF6  0ED3               	movlw	low _ep_data_in
 22979  002FF8  24F3               	addwf	prodl,w,c
 22980  002FFA  6ED9               	movwf	fsr2l,c
 22981  002FFC  0E00               	movlw	high _ep_data_in
 22982  002FFE  20F4               	addwfc	prodh,w,c
 22983  003000  6EDA               	movwf	fsr2h,c
 22984  003002  0E00               	movlw	0
 22985  003004  6EDF               	movwf	indf2,c
 22986                           
 22987                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 22988  003006  5168               	movf	USBDeviceInit@i& (0+255),w,b
 22989  003008  0D01               	mullw	1
 22990  00300A  0ED0               	movlw	low _ep_data_out
 22991  00300C  24F3               	addwf	prodl,w,c
 22992  00300E  6ED9               	movwf	fsr2l,c
 22993  003010  0E00               	movlw	high _ep_data_out
 22994  003012  20F4               	addwfc	prodh,w,c
 22995  003014  6EDA               	movwf	fsr2h,c
 22996  003016  0E00               	movlw	0
 22997  003018  6EDF               	movwf	indf2,c
 22998                           
 22999                           ; BSR set to: 0
 23000  00301A  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 23001  00301C  D7CE               	goto	l11573
 23002  00301E                     u10220:
 23003                           
 23004                           ; BSR set to: 0
 23005                           ;usb_device.c: 307: }
 23006                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 23007                           
 23008                           ; BSR set to: 0
 23009  00301E  0E08               	movlw	8
 23010  003020  6FCA               	movwf	_pBDTEntryIn& (0+255),b
 23011  003022  0E04               	movlw	4
 23012  003024  6FCB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 23013                           
 23014                           ; BSR set to: 0
 23015                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 23016  003026  0E16               	movlw	22
 23017  003028  6E6A               	movwf	3946,c	;volatile
 23018                           
 23019                           ; BSR set to: 0
 23020                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 23021  00302A  0E04               	movlw	4
 23022  00302C  0104               	movlb	4	; () banked
 23023  00302E  6F03               	movwf	3,b	;volatile
 23024  003030  0E30               	movlw	48
 23025  003032  6F02               	movwf	2,b	;volatile
 23026                           
 23027                           ; BSR set to: 4
 23028                           ;usb_device.c: 315: BDT[0].CNT = 8;
 23029  003034  0E08               	movlw	8
 23030  003036  6F01               	movwf	1,b	;volatile
 23031                           
 23032                           ; BSR set to: 4
 23033                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 23034  003038  0E04               	movlw	4
 23035  00303A  6F00               	movwf	0,b	;volatile
 23036                           
 23037                           ; BSR set to: 4
 23038                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 23039  00303C  8F00               	bsf	0,7,b	;volatile
 23040                           
 23041                           ; BSR set to: 4
 23042                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 23043  00303E  0E00               	movlw	0
 23044  003040  6E5B               	movwf	_USBActiveConfiguration,c	;volatile
 23045                           
 23046                           ; BSR set to: 4
 23047                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 23048  003042  0E00               	movlw	0
 23049  003044  0100               	movlb	0	; () banked
 23050  003046  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 23051                           
 23052                           ; BSR set to: 0
 23053  003048  0012               	return		;funcret
 23054  00304A                     __end_of_USBDeviceInit:
 23055                           	opt stack 0
 23056                           tblptru	equ	0xFF8
 23057                           tblptrh	equ	0xFF7
 23058                           tblptrl	equ	0xFF6
 23059                           tablat	equ	0xFF5
 23060                           prodh	equ	0xFF4
 23061                           prodl	equ	0xFF3
 23062                           intcon	equ	0xFF2
 23063                           intcon3	equ	0xFF0
 23064                           indf0	equ	0xFEF
 23065                           postinc0	equ	0xFEE
 23066                           fsr0h	equ	0xFEA
 23067                           fsr0l	equ	0xFE9
 23068                           wreg	equ	0xFE8
 23069                           indf1	equ	0xFE7
 23070                           postdec1	equ	0xFE5
 23071                           fsr1h	equ	0xFE2
 23072                           fsr1l	equ	0xFE1
 23073                           indf2	equ	0xFDF
 23074                           postinc2	equ	0xFDE
 23075                           postdec2	equ	0xFDD
 23076                           plusw2	equ	0xFDB
 23077                           fsr2h	equ	0xFDA
 23078                           fsr2l	equ	0xFD9
 23079                           status	equ	0xFD8
 23080                           
 23081 ;; *************** function _memset *****************
 23082 ;; Defined at:
 23083 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 23084 ;; Parameters:    Size  Location     Type
 23085 ;;  p1              2    0[BANK0 ] PTR void 
 23086 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 23087 ;;  c               2    2[BANK0 ] int 
 23088 ;;  n               2    4[BANK0 ] unsigned int 
 23089 ;; Auto vars:     Size  Location     Type
 23090 ;;  p               2    6[BANK0 ] PTR unsigned char 
 23091 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 23092 ;; Return value:  Size  Location     Type
 23093 ;;                  2    0[BANK0 ] PTR void 
 23094 ;; Registers used:
 23095 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23096 ;; Tracked objects:
 23097 ;;		On entry : 0/0
 23098 ;;		On exit  : 0/0
 23099 ;;		Unchanged: 0/0
 23100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23101 ;;      Params:         0       6       0       0       0       0       0       0       0
 23102 ;;      Locals:         0       2       0       0       0       0       0       0       0
 23103 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23104 ;;      Totals:         0       8       0       0       0       0       0       0       0
 23105 ;;Total ram usage:        8 bytes
 23106 ;; Hardware stack levels used:    1
 23107 ;; Hardware stack levels required when called:   11
 23108 ;; This function calls:
 23109 ;;		Nothing
 23110 ;; This function is called by:
 23111 ;;		_USBDeviceInit
 23112 ;; This function uses a non-reentrant model
 23113 ;;
 23114                           
 23115                           	psect	text87
 23116  005CAE                     __ptext87:
 23117                           	opt stack 0
 23118  005CAE                     _memset:
 23119                           	opt stack 18
 23120                           
 23121                           ; BSR set to: 0
 23122                           ;incstack = 0
 23123  005CAE  C060  F066         	movff	memset@p1,memset@p
 23124  005CB2  C061  F067         	movff	memset@p1+1,memset@p+1
 23125  005CB6  D009               	goto	l2680
 23126  005CB8                     l11365:
 23127  005CB8  C066  FFD9         	movff	memset@p,fsr2l
 23128  005CBC  C067  FFDA         	movff	memset@p+1,fsr2h
 23129  005CC0  C062  FFDF         	movff	memset@c,indf2
 23130  005CC4  0100               	movlb	0	; () banked
 23131  005CC6  4B66               	infsnz	memset@p& (0+255),f,b
 23132  005CC8  2B67               	incf	(memset@p+1)& (0+255),f,b
 23133  005CCA                     l2680:
 23134                           
 23135                           ; BSR set to: 0
 23136  005CCA  0100               	movlb	0	; () banked
 23137  005CCC  0764               	decf	memset@n& (0+255),f,b
 23138  005CCE  A0D8               	btfss	status,0,c
 23139  005CD0  0765               	decf	(memset@n+1)& (0+255),f,b
 23140  005CD2  2964               	incf	memset@n& (0+255),w,b
 23141  005CD4  E1F1               	bnz	l11365
 23142  005CD6  2965               	incf	(memset@n+1)& (0+255),w,b
 23143  005CD8  B4D8               	btfsc	status,2,c
 23144  005CDA  0012               	return	
 23145  005CDC  D7ED               	goto	l2681
 23146  005CDE                     __end_of_memset:
 23147                           	opt stack 0
 23148                           tblptru	equ	0xFF8
 23149                           tblptrh	equ	0xFF7
 23150                           tblptrl	equ	0xFF6
 23151                           tablat	equ	0xFF5
 23152                           prodh	equ	0xFF4
 23153                           prodl	equ	0xFF3
 23154                           intcon	equ	0xFF2
 23155                           intcon3	equ	0xFF0
 23156                           indf0	equ	0xFEF
 23157                           postinc0	equ	0xFEE
 23158                           fsr0h	equ	0xFEA
 23159                           fsr0l	equ	0xFE9
 23160                           wreg	equ	0xFE8
 23161                           indf1	equ	0xFE7
 23162                           postdec1	equ	0xFE5
 23163                           fsr1h	equ	0xFE2
 23164                           fsr1l	equ	0xFE1
 23165                           indf2	equ	0xFDF
 23166                           postinc2	equ	0xFDE
 23167                           postdec2	equ	0xFDD
 23168                           plusw2	equ	0xFDB
 23169                           fsr2h	equ	0xFDA
 23170                           fsr2l	equ	0xFD9
 23171                           status	equ	0xFD8
 23172                           
 23173 ;; *************** function _USBDeviceAttach *****************
 23174 ;; Defined at:
 23175 ;;		line 1046 in file "../Includes/Usb/Framework/usb_device.c"
 23176 ;; Parameters:    Size  Location     Type
 23177 ;;		None
 23178 ;; Auto vars:     Size  Location     Type
 23179 ;;		None
 23180 ;; Return value:  Size  Location     Type
 23181 ;;                  1    wreg      void 
 23182 ;; Registers used:
 23183 ;;		wreg, status,2
 23184 ;; Tracked objects:
 23185 ;;		On entry : 0/0
 23186 ;;		On exit  : 0/0
 23187 ;;		Unchanged: 0/0
 23188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23189 ;;      Params:         0       0       0       0       0       0       0       0       0
 23190 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23191 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23192 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23193 ;;Total ram usage:        0 bytes
 23194 ;; Hardware stack levels used:    1
 23195 ;; Hardware stack levels required when called:   11
 23196 ;; This function calls:
 23197 ;;		Nothing
 23198 ;; This function is called by:
 23199 ;;		_main
 23200 ;; This function uses a non-reentrant model
 23201 ;;
 23202                           
 23203                           	psect	text88
 23204  005BB4                     __ptext88:
 23205                           	opt stack 0
 23206  005BB4                     _USBDeviceAttach:
 23207                           	opt stack 19
 23208                           
 23209                           ;usb_device.c: 1050: {
 23210                           ;usb_device.c: 1051: if(1 == 1)
 23211                           
 23212                           ; BSR set to: 0
 23213                           ;incstack = 0
 23214  005BB4  0100               	movlb	0	; () banked
 23215  005BB6  51EC               	movf	_USBDeviceState& (0+255),w,b	;volatile
 23216  005BB8  A4D8               	btfss	status,2,c
 23217  005BBA  0012               	return	
 23218                           
 23219                           ; BSR set to: 0
 23220                           ;usb_device.c: 1052: {
 23221                           ;usb_device.c: 1054: UCON = 0;
 23222  005BBC  0E00               	movlw	0
 23223  005BBE  6E60               	movwf	3936,c	;volatile
 23224                           
 23225                           ;usb_device.c: 1057: UIE = 0;
 23226  005BC0  0E00               	movlw	0
 23227  005BC2  6E64               	movwf	3940,c	;volatile
 23228                           
 23229                           ;usb_device.c: 1061: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 23230  005BC4  0E16               	movlw	22
 23231  005BC6  6E62               	movwf	3938,c	;volatile
 23232  005BC8  0E9F               	movlw	159
 23233  005BCA  6E66               	movwf	3942,c	;volatile
 23234  005BCC  0E7B               	movlw	123
 23235  005BCE  6E64               	movwf	3940,c	;volatile
 23236                           
 23237                           ; BSR set to: 0
 23238                           ;usb_device.c: 1063: {RCONbits.IPEN = 1;IPR3bits.USBIP = 1;PIE3bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 23239  005BD0  8ED0               	bsf	4048,7,c	;volatile
 23240                           
 23241                           ; BSR set to: 0
 23242  005BD2  84A5               	bsf	4005,2,c	;volatile
 23243                           
 23244                           ; BSR set to: 0
 23245  005BD4  84A3               	bsf	4003,2,c	;volatile
 23246                           
 23247                           ; BSR set to: 0
 23248  005BD6  8EF2               	bsf	intcon,7,c	;volatile
 23249                           
 23250                           ;usb_device.c: 1066: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 23251  005BD8  D001               	goto	l1916
 23252  005BDA                     l1917:
 23253  005BDA  8660               	bsf	3936,3,c	;volatile
 23254  005BDC                     l1916:
 23255  005BDC  A660               	btfss	3936,3,c	;volatile
 23256  005BDE  D7FD               	goto	l1917
 23257                           
 23258                           ;usb_device.c: 1069: USBDeviceState = ATTACHED_STATE;
 23259  005BE0  0E01               	movlw	1
 23260  005BE2  0100               	movlb	0	; () banked
 23261  005BE4  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 23262                           
 23263                           ; BSR set to: 0
 23264  005BE6  0012               	return	
 23265  005BE8                     __end_of_USBDeviceAttach:
 23266                           	opt stack 0
 23267                           tblptru	equ	0xFF8
 23268                           tblptrh	equ	0xFF7
 23269                           tblptrl	equ	0xFF6
 23270                           tablat	equ	0xFF5
 23271                           prodh	equ	0xFF4
 23272                           prodl	equ	0xFF3
 23273                           intcon	equ	0xFF2
 23274                           intcon3	equ	0xFF0
 23275                           indf0	equ	0xFEF
 23276                           postinc0	equ	0xFEE
 23277                           fsr0h	equ	0xFEA
 23278                           fsr0l	equ	0xFE9
 23279                           wreg	equ	0xFE8
 23280                           indf1	equ	0xFE7
 23281                           postdec1	equ	0xFE5
 23282                           fsr1h	equ	0xFE2
 23283                           fsr1l	equ	0xFE1
 23284                           indf2	equ	0xFDF
 23285                           postinc2	equ	0xFDE
 23286                           postdec2	equ	0xFDD
 23287                           plusw2	equ	0xFDB
 23288                           fsr2h	equ	0xFDA
 23289                           fsr2l	equ	0xFD9
 23290                           status	equ	0xFD8
 23291                           
 23292 ;; *************** function _SYSTEM_Initialize *****************
 23293 ;; Defined at:
 23294 ;;		line 94 in file "../Includes/MccGenerated/mcc.c"
 23295 ;; Parameters:    Size  Location     Type
 23296 ;;		None
 23297 ;; Auto vars:     Size  Location     Type
 23298 ;;		None
 23299 ;; Return value:  Size  Location     Type
 23300 ;;                  1    wreg      void 
 23301 ;; Registers used:
 23302 ;;		wreg, status,2, status,0, cstack
 23303 ;; Tracked objects:
 23304 ;;		On entry : 0/0
 23305 ;;		On exit  : 0/0
 23306 ;;		Unchanged: 0/0
 23307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23308 ;;      Params:         0       0       0       0       0       0       0       0       0
 23309 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23310 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23311 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23312 ;;Total ram usage:        0 bytes
 23313 ;; Hardware stack levels used:    1
 23314 ;; Hardware stack levels required when called:   13
 23315 ;; This function calls:
 23316 ;;		_ADC_Initialize
 23317 ;;		_CMP1_Initialize
 23318 ;;		_EUSART_Initialize
 23319 ;;		_InitSwUart
 23320 ;;		_OSCILLATOR_Initialize
 23321 ;;		_PIN_MANAGER_Initialize
 23322 ;;		_TMR0_Initialize
 23323 ;;		_TMR1_Initialize
 23324 ;;		_TMR2_Initialize
 23325 ;;		_TMR3_Initialize
 23326 ;; This function is called by:
 23327 ;;		_main
 23328 ;; This function uses a non-reentrant model
 23329 ;;
 23330                           
 23331                           	psect	text89
 23332  005DF6                     __ptext89:
 23333                           	opt stack 0
 23334  005DF6                     _SYSTEM_Initialize:
 23335                           	opt stack 17
 23336                           
 23337                           ;mcc.c: 96: OSCILLATOR_Initialize();
 23338                           
 23339                           ; BSR set to: 0
 23340                           ;incstack = 0
 23341  005DF6  EC39  F030         	call	_OSCILLATOR_Initialize	;wreg free
 23342                           
 23343                           ;mcc.c: 97: PIN_MANAGER_Initialize();
 23344  005DFA  ECB4  F02B         	call	_PIN_MANAGER_Initialize	;wreg free
 23345                           
 23346                           ;mcc.c: 99: TMR1_Initialize();
 23347  005DFE  EC26  F02E         	call	_TMR1_Initialize	;wreg free
 23348                           
 23349                           ;mcc.c: 100: TMR2_Initialize();
 23350  005E02  EC78  F030         	call	_TMR2_Initialize	;wreg free
 23351                           
 23352                           ;mcc.c: 101: TMR3_Initialize();
 23353  005E06  EC84  F02F         	call	_TMR3_Initialize	;wreg free
 23354                           
 23355                           ;mcc.c: 102: EUSART_Initialize();
 23356  005E0A  EC88  F02D         	call	_EUSART_Initialize	;wreg free
 23357                           
 23358                           ;mcc.c: 103: TMR0_Initialize();
 23359  005E0E  ECA5  F02F         	call	_TMR0_Initialize	;wreg free
 23360                           
 23361                           ;mcc.c: 104: ADC_Initialize();
 23362  005E12  ECFD  F02F         	call	_ADC_Initialize	;wreg free
 23363                           
 23364                           ;mcc.c: 105: CMP1_Initialize();
 23365  005E16  EC96  F030         	call	_CMP1_Initialize	;wreg free
 23366                           
 23367                           ;mcc.c: 107: InitSwUart();
 23368  005E1A  ECE2  F02F         	call	_InitSwUart	;wreg free
 23369  005E1E  0012               	return		;funcret
 23370  005E20                     __end_of_SYSTEM_Initialize:
 23371                           	opt stack 0
 23372                           tblptru	equ	0xFF8
 23373                           tblptrh	equ	0xFF7
 23374                           tblptrl	equ	0xFF6
 23375                           tablat	equ	0xFF5
 23376                           prodh	equ	0xFF4
 23377                           prodl	equ	0xFF3
 23378                           intcon	equ	0xFF2
 23379                           intcon3	equ	0xFF0
 23380                           indf0	equ	0xFEF
 23381                           postinc0	equ	0xFEE
 23382                           fsr0h	equ	0xFEA
 23383                           fsr0l	equ	0xFE9
 23384                           wreg	equ	0xFE8
 23385                           indf1	equ	0xFE7
 23386                           postdec1	equ	0xFE5
 23387                           fsr1h	equ	0xFE2
 23388                           fsr1l	equ	0xFE1
 23389                           indf2	equ	0xFDF
 23390                           postinc2	equ	0xFDE
 23391                           postdec2	equ	0xFDD
 23392                           plusw2	equ	0xFDB
 23393                           fsr2h	equ	0xFDA
 23394                           fsr2l	equ	0xFD9
 23395                           status	equ	0xFD8
 23396                           
 23397 ;; *************** function _TMR3_Initialize *****************
 23398 ;; Defined at:
 23399 ;;		line 67 in file "../Includes/MccGenerated/tmr3.c"
 23400 ;; Parameters:    Size  Location     Type
 23401 ;;		None
 23402 ;; Auto vars:     Size  Location     Type
 23403 ;;		None
 23404 ;; Return value:  Size  Location     Type
 23405 ;;                  1    wreg      void 
 23406 ;; Registers used:
 23407 ;;		wreg, status,2, cstack
 23408 ;; Tracked objects:
 23409 ;;		On entry : 0/0
 23410 ;;		On exit  : 0/0
 23411 ;;		Unchanged: 0/0
 23412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23413 ;;      Params:         0       0       0       0       0       0       0       0       0
 23414 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23415 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23416 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23417 ;;Total ram usage:        0 bytes
 23418 ;; Hardware stack levels used:    1
 23419 ;; Hardware stack levels required when called:   12
 23420 ;; This function calls:
 23421 ;;		_TMR3_StartTimer
 23422 ;; This function is called by:
 23423 ;;		_SYSTEM_Initialize
 23424 ;; This function uses a non-reentrant model
 23425 ;;
 23426                           
 23427                           	psect	text90
 23428  005F08                     __ptext90:
 23429                           	opt stack 0
 23430  005F08                     _TMR3_Initialize:
 23431                           	opt stack 17
 23432                           
 23433                           ;tmr3.c: 72: T3CON = 0x04;
 23434                           
 23435                           ;incstack = 0
 23436  005F08  0E04               	movlw	4
 23437  005F0A  6EB1               	movwf	4017,c	;volatile
 23438                           
 23439                           ;tmr3.c: 75: T3GCON = 0x00;
 23440  005F0C  0E00               	movlw	0
 23441  005F0E  6EB4               	movwf	4020,c	;volatile
 23442                           
 23443                           ;tmr3.c: 78: TMR3H = 0xD5;
 23444  005F10  0ED5               	movlw	213
 23445  005F12  6EB3               	movwf	4019,c	;volatile
 23446                           
 23447                           ;tmr3.c: 81: TMR3L = 0xD0;
 23448  005F14  0ED0               	movlw	208
 23449  005F16  6EB2               	movwf	4018,c	;volatile
 23450                           
 23451                           ;tmr3.c: 84: timer3ReloadVal=TMR3;
 23452  005F18  CFB2 F03A          	movff	4018,_timer3ReloadVal	;volatile
 23453  005F1C  CFB3 F03B          	movff	4019,_timer3ReloadVal+1	;volatile
 23454                           
 23455                           ;tmr3.c: 87: PIR2bits.TMR3IF = 0;
 23456  005F20  92A1               	bcf	4001,1,c	;volatile
 23457                           
 23458                           ;tmr3.c: 90: PIE2bits.TMR3IE = 1;
 23459  005F22  82A0               	bsf	4000,1,c	;volatile
 23460                           
 23461                           ;tmr3.c: 93: TMR3_StartTimer();
 23462  005F24  EC1B  F031         	call	_TMR3_StartTimer	;wreg free
 23463  005F28  0012               	return		;funcret
 23464  005F2A                     __end_of_TMR3_Initialize:
 23465                           	opt stack 0
 23466                           tblptru	equ	0xFF8
 23467                           tblptrh	equ	0xFF7
 23468                           tblptrl	equ	0xFF6
 23469                           tablat	equ	0xFF5
 23470                           prodh	equ	0xFF4
 23471                           prodl	equ	0xFF3
 23472                           intcon	equ	0xFF2
 23473                           intcon3	equ	0xFF0
 23474                           indf0	equ	0xFEF
 23475                           postinc0	equ	0xFEE
 23476                           fsr0h	equ	0xFEA
 23477                           fsr0l	equ	0xFE9
 23478                           wreg	equ	0xFE8
 23479                           indf1	equ	0xFE7
 23480                           postdec1	equ	0xFE5
 23481                           fsr1h	equ	0xFE2
 23482                           fsr1l	equ	0xFE1
 23483                           indf2	equ	0xFDF
 23484                           postinc2	equ	0xFDE
 23485                           postdec2	equ	0xFDD
 23486                           plusw2	equ	0xFDB
 23487                           fsr2h	equ	0xFDA
 23488                           fsr2l	equ	0xFD9
 23489                           status	equ	0xFD8
 23490                           
 23491 ;; *************** function _TMR3_StartTimer *****************
 23492 ;; Defined at:
 23493 ;;		line 96 in file "../Includes/MccGenerated/tmr3.c"
 23494 ;; Parameters:    Size  Location     Type
 23495 ;;		None
 23496 ;; Auto vars:     Size  Location     Type
 23497 ;;		None
 23498 ;; Return value:  Size  Location     Type
 23499 ;;                  1    wreg      void 
 23500 ;; Registers used:
 23501 ;;		None
 23502 ;; Tracked objects:
 23503 ;;		On entry : 0/0
 23504 ;;		On exit  : 0/0
 23505 ;;		Unchanged: 0/0
 23506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23507 ;;      Params:         0       0       0       0       0       0       0       0       0
 23508 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23509 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23510 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23511 ;;Total ram usage:        0 bytes
 23512 ;; Hardware stack levels used:    1
 23513 ;; Hardware stack levels required when called:   11
 23514 ;; This function calls:
 23515 ;;		Nothing
 23516 ;; This function is called by:
 23517 ;;		_TMR3_Initialize
 23518 ;; This function uses a non-reentrant model
 23519 ;;
 23520                           
 23521                           	psect	text91
 23522  006236                     __ptext91:
 23523                           	opt stack 0
 23524  006236                     _TMR3_StartTimer:
 23525                           	opt stack 17
 23526                           
 23527                           ;tmr3.c: 99: T3CONbits.TMR3ON = 1;
 23528                           
 23529                           ;incstack = 0
 23530  006236  80B1               	bsf	4017,0,c	;volatile
 23531  006238  0012               	return		;funcret
 23532  00623A                     __end_of_TMR3_StartTimer:
 23533                           	opt stack 0
 23534                           tblptru	equ	0xFF8
 23535                           tblptrh	equ	0xFF7
 23536                           tblptrl	equ	0xFF6
 23537                           tablat	equ	0xFF5
 23538                           prodh	equ	0xFF4
 23539                           prodl	equ	0xFF3
 23540                           intcon	equ	0xFF2
 23541                           intcon3	equ	0xFF0
 23542                           indf0	equ	0xFEF
 23543                           postinc0	equ	0xFEE
 23544                           fsr0h	equ	0xFEA
 23545                           fsr0l	equ	0xFE9
 23546                           wreg	equ	0xFE8
 23547                           indf1	equ	0xFE7
 23548                           postdec1	equ	0xFE5
 23549                           fsr1h	equ	0xFE2
 23550                           fsr1l	equ	0xFE1
 23551                           indf2	equ	0xFDF
 23552                           postinc2	equ	0xFDE
 23553                           postdec2	equ	0xFDD
 23554                           plusw2	equ	0xFDB
 23555                           fsr2h	equ	0xFDA
 23556                           fsr2l	equ	0xFD9
 23557                           status	equ	0xFD8
 23558                           
 23559 ;; *************** function _TMR2_Initialize *****************
 23560 ;; Defined at:
 23561 ;;		line 58 in file "../Includes/MccGenerated/tmr2.c"
 23562 ;; Parameters:    Size  Location     Type
 23563 ;;		None
 23564 ;; Auto vars:     Size  Location     Type
 23565 ;;		None
 23566 ;; Return value:  Size  Location     Type
 23567 ;;                  1    wreg      void 
 23568 ;; Registers used:
 23569 ;;		wreg, status,2, cstack
 23570 ;; Tracked objects:
 23571 ;;		On entry : 0/0
 23572 ;;		On exit  : 0/0
 23573 ;;		Unchanged: 0/0
 23574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23575 ;;      Params:         0       0       0       0       0       0       0       0       0
 23576 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23577 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23578 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23579 ;;Total ram usage:        0 bytes
 23580 ;; Hardware stack levels used:    1
 23581 ;; Hardware stack levels required when called:   12
 23582 ;; This function calls:
 23583 ;;		_TMR2_StartTimer
 23584 ;; This function is called by:
 23585 ;;		_SYSTEM_Initialize
 23586 ;; This function uses a non-reentrant model
 23587 ;;
 23588                           
 23589                           	psect	text92
 23590  0060F0                     __ptext92:
 23591                           	opt stack 0
 23592  0060F0                     _TMR2_Initialize:
 23593                           	opt stack 17
 23594                           
 23595                           ;tmr2.c: 62: T2CON = 0x7A;
 23596                           
 23597                           ;incstack = 0
 23598  0060F0  0E7A               	movlw	122
 23599  0060F2  6EBA               	movwf	4026,c	;volatile
 23600                           
 23601                           ;tmr2.c: 65: PR2 = 0x9B;
 23602  0060F4  0E9B               	movlw	155
 23603  0060F6  6EBB               	movwf	4027,c	;volatile
 23604                           
 23605                           ;tmr2.c: 68: TMR2 = 0x00;
 23606  0060F8  0E00               	movlw	0
 23607  0060FA  6EBC               	movwf	4028,c	;volatile
 23608                           
 23609                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
 23610  0060FC  929E               	bcf	3998,1,c	;volatile
 23611                           
 23612                           ;tmr2.c: 74: TMR2_StartTimer();
 23613  0060FE  EC1D  F031         	call	_TMR2_StartTimer	;wreg free
 23614  006102  0012               	return		;funcret
 23615  006104                     __end_of_TMR2_Initialize:
 23616                           	opt stack 0
 23617                           tblptru	equ	0xFF8
 23618                           tblptrh	equ	0xFF7
 23619                           tblptrl	equ	0xFF6
 23620                           tablat	equ	0xFF5
 23621                           prodh	equ	0xFF4
 23622                           prodl	equ	0xFF3
 23623                           intcon	equ	0xFF2
 23624                           intcon3	equ	0xFF0
 23625                           indf0	equ	0xFEF
 23626                           postinc0	equ	0xFEE
 23627                           fsr0h	equ	0xFEA
 23628                           fsr0l	equ	0xFE9
 23629                           wreg	equ	0xFE8
 23630                           indf1	equ	0xFE7
 23631                           postdec1	equ	0xFE5
 23632                           fsr1h	equ	0xFE2
 23633                           fsr1l	equ	0xFE1
 23634                           indf2	equ	0xFDF
 23635                           postinc2	equ	0xFDE
 23636                           postdec2	equ	0xFDD
 23637                           plusw2	equ	0xFDB
 23638                           fsr2h	equ	0xFDA
 23639                           fsr2l	equ	0xFD9
 23640                           status	equ	0xFD8
 23641                           
 23642 ;; *************** function _TMR2_StartTimer *****************
 23643 ;; Defined at:
 23644 ;;		line 77 in file "../Includes/MccGenerated/tmr2.c"
 23645 ;; Parameters:    Size  Location     Type
 23646 ;;		None
 23647 ;; Auto vars:     Size  Location     Type
 23648 ;;		None
 23649 ;; Return value:  Size  Location     Type
 23650 ;;                  1    wreg      void 
 23651 ;; Registers used:
 23652 ;;		None
 23653 ;; Tracked objects:
 23654 ;;		On entry : 0/0
 23655 ;;		On exit  : 0/0
 23656 ;;		Unchanged: 0/0
 23657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23658 ;;      Params:         0       0       0       0       0       0       0       0       0
 23659 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23660 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23661 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23662 ;;Total ram usage:        0 bytes
 23663 ;; Hardware stack levels used:    1
 23664 ;; Hardware stack levels required when called:   11
 23665 ;; This function calls:
 23666 ;;		Nothing
 23667 ;; This function is called by:
 23668 ;;		_TMR2_Initialize
 23669 ;; This function uses a non-reentrant model
 23670 ;;
 23671                           
 23672                           	psect	text93
 23673  00623A                     __ptext93:
 23674                           	opt stack 0
 23675  00623A                     _TMR2_StartTimer:
 23676                           	opt stack 17
 23677                           
 23678                           ;tmr2.c: 79: T2CONbits.TMR2ON = 1;
 23679                           
 23680                           ;incstack = 0
 23681  00623A  84BA               	bsf	4026,2,c	;volatile
 23682  00623C  0012               	return		;funcret
 23683  00623E                     __end_of_TMR2_StartTimer:
 23684                           	opt stack 0
 23685                           tblptru	equ	0xFF8
 23686                           tblptrh	equ	0xFF7
 23687                           tblptrl	equ	0xFF6
 23688                           tablat	equ	0xFF5
 23689                           prodh	equ	0xFF4
 23690                           prodl	equ	0xFF3
 23691                           intcon	equ	0xFF2
 23692                           intcon3	equ	0xFF0
 23693                           indf0	equ	0xFEF
 23694                           postinc0	equ	0xFEE
 23695                           fsr0h	equ	0xFEA
 23696                           fsr0l	equ	0xFE9
 23697                           wreg	equ	0xFE8
 23698                           indf1	equ	0xFE7
 23699                           postdec1	equ	0xFE5
 23700                           fsr1h	equ	0xFE2
 23701                           fsr1l	equ	0xFE1
 23702                           indf2	equ	0xFDF
 23703                           postinc2	equ	0xFDE
 23704                           postdec2	equ	0xFDD
 23705                           plusw2	equ	0xFDB
 23706                           fsr2h	equ	0xFDA
 23707                           fsr2l	equ	0xFD9
 23708                           status	equ	0xFD8
 23709                           
 23710 ;; *************** function _TMR1_Initialize *****************
 23711 ;; Defined at:
 23712 ;;		line 63 in file "../Includes/MccGenerated/tmr1.c"
 23713 ;; Parameters:    Size  Location     Type
 23714 ;;		None
 23715 ;; Auto vars:     Size  Location     Type
 23716 ;;		None
 23717 ;; Return value:  Size  Location     Type
 23718 ;;                  1    wreg      void 
 23719 ;; Registers used:
 23720 ;;		wreg, status,2, status,0, cstack
 23721 ;; Tracked objects:
 23722 ;;		On entry : 0/0
 23723 ;;		On exit  : 0/0
 23724 ;;		Unchanged: 0/0
 23725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23726 ;;      Params:         0       0       0       0       0       0       0       0       0
 23727 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23728 ;;      Temps:          0       2       0       0       0       0       0       0       0
 23729 ;;      Totals:         0       2       0       0       0       0       0       0       0
 23730 ;;Total ram usage:        2 bytes
 23731 ;; Hardware stack levels used:    1
 23732 ;; Hardware stack levels required when called:   12
 23733 ;; This function calls:
 23734 ;;		_TMR1_StartTimer
 23735 ;; This function is called by:
 23736 ;;		_SYSTEM_Initialize
 23737 ;; This function uses a non-reentrant model
 23738 ;;
 23739                           
 23740                           	psect	text94
 23741  005C4C                     __ptext94:
 23742                           	opt stack 0
 23743  005C4C                     _TMR1_Initialize:
 23744                           	opt stack 17
 23745                           
 23746                           ;tmr1.c: 68: T1CON = 0x00;
 23747                           
 23748                           ;incstack = 0
 23749  005C4C  0E00               	movlw	0
 23750  005C4E  6ECD               	movwf	4045,c	;volatile
 23751                           
 23752                           ;tmr1.c: 71: T1GCON = 0x00;
 23753  005C50  0E00               	movlw	0
 23754  005C52  6ECC               	movwf	4044,c	;volatile
 23755                           
 23756                           ;tmr1.c: 74: TMR1H = 0xD0;
 23757  005C54  0ED0               	movlw	208
 23758  005C56  6ECF               	movwf	4047,c	;volatile
 23759                           
 23760                           ;tmr1.c: 77: TMR1L = 0x20;
 23761  005C58  0E20               	movlw	32
 23762  005C5A  6ECE               	movwf	4046,c	;volatile
 23763                           
 23764                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
 23765  005C5C  50CE               	movf	4046,w,c	;volatile
 23766  005C5E  CFCF F060          	movff	4047,??_TMR1_Initialize	;volatile
 23767  005C62  0100               	movlb	0	; () banked
 23768  005C64  6B61               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 23769  005C66  C060  F061         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 23770  005C6A  6B60               	clrf	??_TMR1_Initialize& (0+255),b
 23771  005C6C  1160               	iorwf	??_TMR1_Initialize& (0+255),w,b
 23772  005C6E  6E3C               	movwf	_timer1ReloadVal,c	;volatile
 23773  005C70  5161               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 23774  005C72  6E3D               	movwf	_timer1ReloadVal+1,c	;volatile
 23775                           
 23776                           ; BSR set to: 0
 23777                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
 23778  005C74  909E               	bcf	3998,0,c	;volatile
 23779                           
 23780                           ; BSR set to: 0
 23781                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
 23782  005C76  809D               	bsf	3997,0,c	;volatile
 23783                           
 23784                           ; BSR set to: 0
 23785                           ;tmr1.c: 89: TMR1_StartTimer();
 23786  005C78  EC1F  F031         	call	_TMR1_StartTimer	;wreg free
 23787  005C7C  0012               	return		;funcret
 23788  005C7E                     __end_of_TMR1_Initialize:
 23789                           	opt stack 0
 23790                           tblptru	equ	0xFF8
 23791                           tblptrh	equ	0xFF7
 23792                           tblptrl	equ	0xFF6
 23793                           tablat	equ	0xFF5
 23794                           prodh	equ	0xFF4
 23795                           prodl	equ	0xFF3
 23796                           intcon	equ	0xFF2
 23797                           intcon3	equ	0xFF0
 23798                           indf0	equ	0xFEF
 23799                           postinc0	equ	0xFEE
 23800                           fsr0h	equ	0xFEA
 23801                           fsr0l	equ	0xFE9
 23802                           wreg	equ	0xFE8
 23803                           indf1	equ	0xFE7
 23804                           postdec1	equ	0xFE5
 23805                           fsr1h	equ	0xFE2
 23806                           fsr1l	equ	0xFE1
 23807                           indf2	equ	0xFDF
 23808                           postinc2	equ	0xFDE
 23809                           postdec2	equ	0xFDD
 23810                           plusw2	equ	0xFDB
 23811                           fsr2h	equ	0xFDA
 23812                           fsr2l	equ	0xFD9
 23813                           status	equ	0xFD8
 23814                           
 23815 ;; *************** function _TMR1_StartTimer *****************
 23816 ;; Defined at:
 23817 ;;		line 92 in file "../Includes/MccGenerated/tmr1.c"
 23818 ;; Parameters:    Size  Location     Type
 23819 ;;		None
 23820 ;; Auto vars:     Size  Location     Type
 23821 ;;		None
 23822 ;; Return value:  Size  Location     Type
 23823 ;;                  1    wreg      void 
 23824 ;; Registers used:
 23825 ;;		None
 23826 ;; Tracked objects:
 23827 ;;		On entry : 0/0
 23828 ;;		On exit  : 0/0
 23829 ;;		Unchanged: 0/0
 23830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23831 ;;      Params:         0       0       0       0       0       0       0       0       0
 23832 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23833 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23834 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23835 ;;Total ram usage:        0 bytes
 23836 ;; Hardware stack levels used:    1
 23837 ;; Hardware stack levels required when called:   11
 23838 ;; This function calls:
 23839 ;;		Nothing
 23840 ;; This function is called by:
 23841 ;;		_TMR1_Initialize
 23842 ;; This function uses a non-reentrant model
 23843 ;;
 23844                           
 23845                           	psect	text95
 23846  00623E                     __ptext95:
 23847                           	opt stack 0
 23848  00623E                     _TMR1_StartTimer:
 23849                           	opt stack 17
 23850                           
 23851                           ;tmr1.c: 95: T1CONbits.TMR1ON = 1;
 23852                           
 23853                           ;incstack = 0
 23854  00623E  80CD               	bsf	4045,0,c	;volatile
 23855  006240  0012               	return		;funcret
 23856  006242                     __end_of_TMR1_StartTimer:
 23857                           	opt stack 0
 23858                           tblptru	equ	0xFF8
 23859                           tblptrh	equ	0xFF7
 23860                           tblptrl	equ	0xFF6
 23861                           tablat	equ	0xFF5
 23862                           prodh	equ	0xFF4
 23863                           prodl	equ	0xFF3
 23864                           intcon	equ	0xFF2
 23865                           intcon3	equ	0xFF0
 23866                           indf0	equ	0xFEF
 23867                           postinc0	equ	0xFEE
 23868                           fsr0h	equ	0xFEA
 23869                           fsr0l	equ	0xFE9
 23870                           wreg	equ	0xFE8
 23871                           indf1	equ	0xFE7
 23872                           postdec1	equ	0xFE5
 23873                           fsr1h	equ	0xFE2
 23874                           fsr1l	equ	0xFE1
 23875                           indf2	equ	0xFDF
 23876                           postinc2	equ	0xFDE
 23877                           postdec2	equ	0xFDD
 23878                           plusw2	equ	0xFDB
 23879                           fsr2h	equ	0xFDA
 23880                           fsr2l	equ	0xFD9
 23881                           status	equ	0xFD8
 23882                           
 23883 ;; *************** function _TMR0_Initialize *****************
 23884 ;; Defined at:
 23885 ;;		line 63 in file "../Includes/MccGenerated/tmr0.c"
 23886 ;; Parameters:    Size  Location     Type
 23887 ;;		None
 23888 ;; Auto vars:     Size  Location     Type
 23889 ;;		None
 23890 ;; Return value:  Size  Location     Type
 23891 ;;                  1    wreg      void 
 23892 ;; Registers used:
 23893 ;;		wreg, status,2, cstack
 23894 ;; Tracked objects:
 23895 ;;		On entry : 0/0
 23896 ;;		On exit  : 0/0
 23897 ;;		Unchanged: 0/0
 23898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23899 ;;      Params:         0       0       0       0       0       0       0       0       0
 23900 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23901 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23902 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23903 ;;Total ram usage:        0 bytes
 23904 ;; Hardware stack levels used:    1
 23905 ;; Hardware stack levels required when called:   12
 23906 ;; This function calls:
 23907 ;;		_TMR0_StartTimer
 23908 ;; This function is called by:
 23909 ;;		_SYSTEM_Initialize
 23910 ;; This function uses a non-reentrant model
 23911 ;;
 23912                           
 23913                           	psect	text96
 23914  005F4A                     __ptext96:
 23915                           	opt stack 0
 23916  005F4A                     _TMR0_Initialize:
 23917                           	opt stack 17
 23918                           
 23919                           ;tmr0.c: 67: T0CONbits.T0CS = 0;
 23920                           
 23921                           ;incstack = 0
 23922  005F4A  9AD5               	bcf	4053,5,c	;volatile
 23923                           
 23924                           ;tmr0.c: 68: T0CONbits.T0SE = 0;
 23925  005F4C  98D5               	bcf	4053,4,c	;volatile
 23926                           
 23927                           ;tmr0.c: 69: T0CONbits.PSA = 0;
 23928  005F4E  96D5               	bcf	4053,3,c	;volatile
 23929                           
 23930                           ;tmr0.c: 70: T0CONbits.T0PS2 = 0;
 23931  005F50  94D5               	bcf	4053,2,c	;volatile
 23932                           
 23933                           ;tmr0.c: 71: T0CONbits.T0PS1 = 1;
 23934  005F52  82D5               	bsf	4053,1,c	;volatile
 23935                           
 23936                           ;tmr0.c: 72: T0CONbits.T0PS0 = 0;
 23937  005F54  90D5               	bcf	4053,0,c	;volatile
 23938                           
 23939                           ;tmr0.c: 77: timer0ReloadVal=110;
 23940  005F56  0E00               	movlw	0
 23941  005F58  0101               	movlb	1	; () banked
 23942  005F5A  6F57               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
 23943  005F5C  0E6E               	movlw	110
 23944  005F5E  6F56               	movwf	_timer0ReloadVal& (0+255),b	;volatile
 23945                           
 23946                           ; BSR set to: 1
 23947                           ;tmr0.c: 80: INTCONbits.TMR0IF = 0;
 23948  005F60  94F2               	bcf	intcon,2,c	;volatile
 23949                           
 23950                           ; BSR set to: 1
 23951                           ;tmr0.c: 83: INTCONbits.TMR0IE = 1;
 23952  005F62  8AF2               	bsf	intcon,5,c	;volatile
 23953                           
 23954                           ; BSR set to: 1
 23955                           ;tmr0.c: 86: TMR0_StartTimer();
 23956  005F64  EC21  F031         	call	_TMR0_StartTimer	;wreg free
 23957  005F68  0012               	return		;funcret
 23958  005F6A                     __end_of_TMR0_Initialize:
 23959                           	opt stack 0
 23960                           tblptru	equ	0xFF8
 23961                           tblptrh	equ	0xFF7
 23962                           tblptrl	equ	0xFF6
 23963                           tablat	equ	0xFF5
 23964                           prodh	equ	0xFF4
 23965                           prodl	equ	0xFF3
 23966                           intcon	equ	0xFF2
 23967                           intcon3	equ	0xFF0
 23968                           indf0	equ	0xFEF
 23969                           postinc0	equ	0xFEE
 23970                           fsr0h	equ	0xFEA
 23971                           fsr0l	equ	0xFE9
 23972                           wreg	equ	0xFE8
 23973                           indf1	equ	0xFE7
 23974                           postdec1	equ	0xFE5
 23975                           fsr1h	equ	0xFE2
 23976                           fsr1l	equ	0xFE1
 23977                           indf2	equ	0xFDF
 23978                           postinc2	equ	0xFDE
 23979                           postdec2	equ	0xFDD
 23980                           plusw2	equ	0xFDB
 23981                           fsr2h	equ	0xFDA
 23982                           fsr2l	equ	0xFD9
 23983                           status	equ	0xFD8
 23984                           
 23985 ;; *************** function _TMR0_StartTimer *****************
 23986 ;; Defined at:
 23987 ;;		line 89 in file "../Includes/MccGenerated/tmr0.c"
 23988 ;; Parameters:    Size  Location     Type
 23989 ;;		None
 23990 ;; Auto vars:     Size  Location     Type
 23991 ;;		None
 23992 ;; Return value:  Size  Location     Type
 23993 ;;                  1    wreg      void 
 23994 ;; Registers used:
 23995 ;;		None
 23996 ;; Tracked objects:
 23997 ;;		On entry : 0/0
 23998 ;;		On exit  : 0/0
 23999 ;;		Unchanged: 0/0
 24000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24001 ;;      Params:         0       0       0       0       0       0       0       0       0
 24002 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24003 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24004 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24005 ;;Total ram usage:        0 bytes
 24006 ;; Hardware stack levels used:    1
 24007 ;; Hardware stack levels required when called:   11
 24008 ;; This function calls:
 24009 ;;		Nothing
 24010 ;; This function is called by:
 24011 ;;		_TMR0_Initialize
 24012 ;; This function uses a non-reentrant model
 24013 ;;
 24014                           
 24015                           	psect	text97
 24016  006242                     __ptext97:
 24017                           	opt stack 0
 24018  006242                     _TMR0_StartTimer:
 24019                           	opt stack 17
 24020                           
 24021                           ;tmr0.c: 92: T0CONbits.TMR0ON = 1;
 24022                           
 24023                           ;incstack = 0
 24024  006242  8ED5               	bsf	4053,7,c	;volatile
 24025  006244  0012               	return		;funcret
 24026  006246                     __end_of_TMR0_StartTimer:
 24027                           	opt stack 0
 24028                           tblptru	equ	0xFF8
 24029                           tblptrh	equ	0xFF7
 24030                           tblptrl	equ	0xFF6
 24031                           tablat	equ	0xFF5
 24032                           prodh	equ	0xFF4
 24033                           prodl	equ	0xFF3
 24034                           intcon	equ	0xFF2
 24035                           intcon3	equ	0xFF0
 24036                           indf0	equ	0xFEF
 24037                           postinc0	equ	0xFEE
 24038                           fsr0h	equ	0xFEA
 24039                           fsr0l	equ	0xFE9
 24040                           wreg	equ	0xFE8
 24041                           indf1	equ	0xFE7
 24042                           postdec1	equ	0xFE5
 24043                           fsr1h	equ	0xFE2
 24044                           fsr1l	equ	0xFE1
 24045                           indf2	equ	0xFDF
 24046                           postinc2	equ	0xFDE
 24047                           postdec2	equ	0xFDD
 24048                           plusw2	equ	0xFDB
 24049                           fsr2h	equ	0xFDA
 24050                           fsr2l	equ	0xFD9
 24051                           status	equ	0xFD8
 24052                           
 24053 ;; *************** function _PIN_MANAGER_Initialize *****************
 24054 ;; Defined at:
 24055 ;;		line 51 in file "../Includes/MccGenerated/pin_manager.c"
 24056 ;; Parameters:    Size  Location     Type
 24057 ;;		None
 24058 ;; Auto vars:     Size  Location     Type
 24059 ;;		None
 24060 ;; Return value:  Size  Location     Type
 24061 ;;                  1    wreg      void 
 24062 ;; Registers used:
 24063 ;;		wreg, status,2
 24064 ;; Tracked objects:
 24065 ;;		On entry : 0/0
 24066 ;;		On exit  : 0/0
 24067 ;;		Unchanged: 0/0
 24068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24069 ;;      Params:         0       0       0       0       0       0       0       0       0
 24070 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24071 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24072 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24073 ;;Total ram usage:        0 bytes
 24074 ;; Hardware stack levels used:    1
 24075 ;; Hardware stack levels required when called:   11
 24076 ;; This function calls:
 24077 ;;		Nothing
 24078 ;; This function is called by:
 24079 ;;		_moteApp_GoToSleep
 24080 ;;		_SYSTEM_Initialize
 24081 ;; This function uses a non-reentrant model
 24082 ;;
 24083                           
 24084                           	psect	text98
 24085  005768                     __ptext98:
 24086                           	opt stack 0
 24087  005768                     _PIN_MANAGER_Initialize:
 24088                           	opt stack 16
 24089                           
 24090                           ;pin_manager.c: 55: TRISAbits.TRISA0 = 1;
 24091                           
 24092                           ;incstack = 0
 24093  005768  8092               	bsf	3986,0,c	;volatile
 24094                           
 24095                           ;pin_manager.c: 56: TRISAbits.TRISA1 = 1;
 24096  00576A  8292               	bsf	3986,1,c	;volatile
 24097                           
 24098                           ;pin_manager.c: 57: TRISAbits.TRISA2 = 1;
 24099  00576C  8492               	bsf	3986,2,c	;volatile
 24100                           
 24101                           ;pin_manager.c: 58: TRISAbits.TRISA3 = 1;
 24102  00576E  8692               	bsf	3986,3,c	;volatile
 24103                           
 24104                           ;pin_manager.c: 60: LATEbits.LATE2 = 0;
 24105  005770  948D               	bcf	3981,2,c	;volatile
 24106                           
 24107                           ;pin_manager.c: 61: TRISEbits.TRISE2 = 0;
 24108  005772  9496               	bcf	3990,2,c	;volatile
 24109                           
 24110                           ;pin_manager.c: 62: TRISAbits.TRISA5 = 0;
 24111  005774  9A92               	bcf	3986,5,c	;volatile
 24112                           
 24113                           ;pin_manager.c: 63: TRISAbits.TRISA6 = 0;
 24114  005776  9C92               	bcf	3986,6,c	;volatile
 24115                           
 24116                           ;pin_manager.c: 64: TRISAbits.TRISA7 = 0;
 24117  005778  9E92               	bcf	3986,7,c	;volatile
 24118                           
 24119                           ;pin_manager.c: 66: INTCON2bits.nRBPU = 0;
 24120  00577A  9EF1               	bcf	intcon2,7,c	;volatile
 24121                           
 24122                           ;pin_manager.c: 67: IOCBbits.IOCB7 = 1;
 24123  00577C  8E86               	bsf	3974,7,c	;volatile
 24124                           
 24125                           ;pin_manager.c: 68: INTCONbits.IOCIE = 1;
 24126  00577E  86F2               	bsf	intcon,3,c	;volatile
 24127                           
 24128                           ;pin_manager.c: 69: TRISBbits.TRISB1 = 1;
 24129  005780  8293               	bsf	3987,1,c	;volatile
 24130                           
 24131                           ;pin_manager.c: 70: TRISBbits.TRISB0 = 1;
 24132  005782  8093               	bsf	3987,0,c	;volatile
 24133                           
 24134                           ;pin_manager.c: 71: TRISBbits.TRISB7 = 1;
 24135  005784  8E93               	bsf	3987,7,c	;volatile
 24136                           
 24137                           ;pin_manager.c: 72: TRISBbits.TRISB2 = 0;
 24138  005786  9493               	bcf	3987,2,c	;volatile
 24139                           
 24140                           ;pin_manager.c: 73: TRISBbits.TRISB3 = 0;
 24141  005788  9693               	bcf	3987,3,c	;volatile
 24142                           
 24143                           ;pin_manager.c: 74: TRISBbits.TRISB4 = 0;
 24144  00578A  9893               	bcf	3987,4,c	;volatile
 24145                           
 24146                           ;pin_manager.c: 75: TRISBbits.TRISB5 = 0;
 24147  00578C  9A93               	bcf	3987,5,c	;volatile
 24148                           
 24149                           ;pin_manager.c: 77: TRISCbits.TRISC0 = 0;
 24150  00578E  9094               	bcf	3988,0,c	;volatile
 24151                           
 24152                           ;pin_manager.c: 78: TRISCbits.TRISC1 = 0;
 24153  005790  9294               	bcf	3988,1,c	;volatile
 24154                           
 24155                           ;pin_manager.c: 79: TRISCbits.TRISC2 = 1;
 24156  005792  8494               	bsf	3988,2,c	;volatile
 24157                           
 24158                           ;pin_manager.c: 80: TRISCbits.TRISC6 = 0;
 24159  005794  9C94               	bcf	3988,6,c	;volatile
 24160                           
 24161                           ;pin_manager.c: 81: TRISCbits.TRISC7 = 1;
 24162  005796  8E94               	bsf	3988,7,c	;volatile
 24163                           
 24164                           ;pin_manager.c: 83: TRISD = 0b00000000;
 24165  005798  0E00               	movlw	0
 24166  00579A  6E95               	movwf	3989,c	;volatile
 24167                           
 24168                           ;pin_manager.c: 85: TRISEbits.TRISE2 = 0;
 24169  00579C  9496               	bcf	3990,2,c	;volatile
 24170                           
 24171                           ;pin_manager.c: 88: LATAbits.LATA5 = 0;
 24172  00579E  9A89               	bcf	3977,5,c	;volatile
 24173                           
 24174                           ;pin_manager.c: 89: LATAbits.LATA6 = 0;
 24175  0057A0  9C89               	bcf	3977,6,c	;volatile
 24176                           
 24177                           ;pin_manager.c: 90: LATAbits.LATA7 = 0;
 24178  0057A2  9E89               	bcf	3977,7,c	;volatile
 24179                           
 24180                           ;pin_manager.c: 92: LATBbits.LATB2 = 0;
 24181  0057A4  948A               	bcf	3978,2,c	;volatile
 24182                           
 24183                           ;pin_manager.c: 94: LATCbits.LATC2 = 0;
 24184  0057A6  948B               	bcf	3979,2,c	;volatile
 24185                           
 24186                           ;pin_manager.c: 95: LATCbits.LATC6 = 0;
 24187  0057A8  9C8B               	bcf	3979,6,c	;volatile
 24188                           
 24189                           ;pin_manager.c: 97: LATEbits.LATE2 = 1;
 24190  0057AA  848D               	bsf	3981,2,c	;volatile
 24191                           
 24192                           ;pin_manager.c: 99: ANSELAbits.ANSA0 = 0;
 24193  0057AC  010F               	movlb	15	; () banked
 24194  0057AE  915B               	bcf	91,0,b	;volatile
 24195                           
 24196                           ; BSR set to: 15
 24197                           ;pin_manager.c: 100: ANSELAbits.ANSA1 = 1;
 24198  0057B0  835B               	bsf	91,1,b	;volatile
 24199                           
 24200                           ; BSR set to: 15
 24201                           ;pin_manager.c: 101: ANSELAbits.ANSA2 = 1;
 24202  0057B2  855B               	bsf	91,2,b	;volatile
 24203                           
 24204                           ; BSR set to: 15
 24205                           ;pin_manager.c: 102: ANSELAbits.ANSA3 = 1;
 24206  0057B4  875B               	bsf	91,3,b	;volatile
 24207                           
 24208                           ; BSR set to: 15
 24209                           ;pin_manager.c: 103: ANSELCbits.ANSC7 = 0;
 24210  0057B6  9F5D               	bcf	93,7,b	;volatile
 24211                           
 24212                           ; BSR set to: 15
 24213                           ;pin_manager.c: 104: ANSELCbits.ANSC6 = 0;
 24214  0057B8  9D5D               	bcf	93,6,b	;volatile
 24215                           
 24216                           ; BSR set to: 15
 24217  0057BA  0012               	return		;funcret
 24218  0057BC                     __end_of_PIN_MANAGER_Initialize:
 24219                           	opt stack 0
 24220                           tblptru	equ	0xFF8
 24221                           tblptrh	equ	0xFF7
 24222                           tblptrl	equ	0xFF6
 24223                           tablat	equ	0xFF5
 24224                           prodh	equ	0xFF4
 24225                           prodl	equ	0xFF3
 24226                           intcon	equ	0xFF2
 24227                           intcon2	equ	0xFF1
 24228                           intcon3	equ	0xFF0
 24229                           indf0	equ	0xFEF
 24230                           postinc0	equ	0xFEE
 24231                           fsr0h	equ	0xFEA
 24232                           fsr0l	equ	0xFE9
 24233                           wreg	equ	0xFE8
 24234                           indf1	equ	0xFE7
 24235                           postdec1	equ	0xFE5
 24236                           fsr1h	equ	0xFE2
 24237                           fsr1l	equ	0xFE1
 24238                           indf2	equ	0xFDF
 24239                           postinc2	equ	0xFDE
 24240                           postdec2	equ	0xFDD
 24241                           plusw2	equ	0xFDB
 24242                           fsr2h	equ	0xFDA
 24243                           fsr2l	equ	0xFD9
 24244                           status	equ	0xFD8
 24245                           
 24246 ;; *************** function _OSCILLATOR_Initialize *****************
 24247 ;; Defined at:
 24248 ;;		line 111 in file "../Includes/MccGenerated/mcc.c"
 24249 ;; Parameters:    Size  Location     Type
 24250 ;;		None
 24251 ;; Auto vars:     Size  Location     Type
 24252 ;;		None
 24253 ;; Return value:  Size  Location     Type
 24254 ;;                  1    wreg      void 
 24255 ;; Registers used:
 24256 ;;		wreg, status,2
 24257 ;; Tracked objects:
 24258 ;;		On entry : 0/0
 24259 ;;		On exit  : 0/0
 24260 ;;		Unchanged: 0/0
 24261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24262 ;;      Params:         0       0       0       0       0       0       0       0       0
 24263 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24264 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24265 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24266 ;;Total ram usage:        0 bytes
 24267 ;; Hardware stack levels used:    1
 24268 ;; Hardware stack levels required when called:   11
 24269 ;; This function calls:
 24270 ;;		Nothing
 24271 ;; This function is called by:
 24272 ;;		_SYSTEM_Initialize
 24273 ;; This function uses a non-reentrant model
 24274 ;;
 24275                           
 24276                           	psect	text99
 24277  006072                     __ptext99:
 24278                           	opt stack 0
 24279  006072                     _OSCILLATOR_Initialize:
 24280                           	opt stack 18
 24281                           
 24282                           ;mcc.c: 113: OSCTUNE = 0x80;
 24283                           
 24284                           ; BSR set to: 15
 24285                           ;incstack = 0
 24286  006072  0E80               	movlw	128
 24287  006074  6E9B               	movwf	3995,c	;volatile
 24288                           
 24289                           ;mcc.c: 114: OSCCON = 0x70;
 24290  006076  0E70               	movlw	112
 24291  006078  6ED3               	movwf	4051,c	;volatile
 24292                           
 24293                           ;mcc.c: 115: OSCCON2 = 0x10;
 24294  00607A  0E10               	movlw	16
 24295  00607C  6ED2               	movwf	4050,c	;volatile
 24296  00607E  AED2               	btfss	4050,7,c	;volatile
 24297  006080  D7FE               	goto	l1333
 24298                           
 24299                           ;mcc.c: 117: ACTCON = 0x90;
 24300  006082  0E90               	movlw	144
 24301  006084  6EB5               	movwf	4021,c	;volatile
 24302  006086  0012               	return		;funcret
 24303  006088                     __end_of_OSCILLATOR_Initialize:
 24304                           	opt stack 0
 24305                           tblptru	equ	0xFF8
 24306                           tblptrh	equ	0xFF7
 24307                           tblptrl	equ	0xFF6
 24308                           tablat	equ	0xFF5
 24309                           prodh	equ	0xFF4
 24310                           prodl	equ	0xFF3
 24311                           intcon	equ	0xFF2
 24312                           intcon2	equ	0xFF1
 24313                           intcon3	equ	0xFF0
 24314                           indf0	equ	0xFEF
 24315                           postinc0	equ	0xFEE
 24316                           fsr0h	equ	0xFEA
 24317                           fsr0l	equ	0xFE9
 24318                           wreg	equ	0xFE8
 24319                           indf1	equ	0xFE7
 24320                           postdec1	equ	0xFE5
 24321                           fsr1h	equ	0xFE2
 24322                           fsr1l	equ	0xFE1
 24323                           indf2	equ	0xFDF
 24324                           postinc2	equ	0xFDE
 24325                           postdec2	equ	0xFDD
 24326                           plusw2	equ	0xFDB
 24327                           fsr2h	equ	0xFDA
 24328                           fsr2l	equ	0xFD9
 24329                           status	equ	0xFD8
 24330                           
 24331 ;; *************** function _InitSwUart *****************
 24332 ;; Defined at:
 24333 ;;		line 75 in file "../Includes/Drivers/swUart.c"
 24334 ;; Parameters:    Size  Location     Type
 24335 ;;		None
 24336 ;; Auto vars:     Size  Location     Type
 24337 ;;		None
 24338 ;; Return value:  Size  Location     Type
 24339 ;;                  1    wreg      void 
 24340 ;; Registers used:
 24341 ;;		wreg, status,2
 24342 ;; Tracked objects:
 24343 ;;		On entry : 0/0
 24344 ;;		On exit  : 0/0
 24345 ;;		Unchanged: 0/0
 24346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24347 ;;      Params:         0       0       0       0       0       0       0       0       0
 24348 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24349 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24350 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24351 ;;Total ram usage:        0 bytes
 24352 ;; Hardware stack levels used:    1
 24353 ;; Hardware stack levels required when called:   11
 24354 ;; This function calls:
 24355 ;;		Nothing
 24356 ;; This function is called by:
 24357 ;;		_SYSTEM_Initialize
 24358 ;; This function uses a non-reentrant model
 24359 ;;
 24360                           
 24361                           	psect	text100
 24362  005FC4                     __ptext100:
 24363                           	opt stack 0
 24364  005FC4                     _InitSwUart:
 24365                           	opt stack 18
 24366                           
 24367                           ;swUart.c: 77: status = SILENT;
 24368                           
 24369                           ;incstack = 0
 24370  005FC4  0E00               	movlw	0
 24371  005FC6  6E51               	movwf	_status,c
 24372                           
 24373                           ;swUart.c: 78: n_bit = 0;
 24374  005FC8  0E00               	movlw	0
 24375  005FCA  6E5C               	movwf	_n_bit,c
 24376                           
 24377                           ;swUart.c: 79: rx_data = 0;
 24378  005FCC  0E00               	movlw	0
 24379  005FCE  6E50               	movwf	_rx_data,c
 24380                           
 24381                           ;swUart.c: 80: cs = 0;
 24382  005FD0  0E00               	movlw	0
 24383  005FD2  0101               	movlb	1	; () banked
 24384  005FD4  6F5E               	movwf	_cs& (0+255),b
 24385                           
 24386                           ;swUart.c: 81: countRX = 0;
 24387  005FD6  0E00               	movlw	0
 24388  005FD8  6E4F               	movwf	_countRX,c
 24389                           
 24390                           ;swUart.c: 82: countBitsSilent = 0;
 24391  005FDA  0E00               	movlw	0
 24392  005FDC  6E4E               	movwf	_countBitsSilent,c
 24393                           
 24394                           ; BSR set to: 1
 24395  005FDE  0012               	return		;funcret
 24396  005FE0                     __end_of_InitSwUart:
 24397                           	opt stack 0
 24398                           tblptru	equ	0xFF8
 24399                           tblptrh	equ	0xFF7
 24400                           tblptrl	equ	0xFF6
 24401                           tablat	equ	0xFF5
 24402                           prodh	equ	0xFF4
 24403                           prodl	equ	0xFF3
 24404                           intcon	equ	0xFF2
 24405                           intcon2	equ	0xFF1
 24406                           intcon3	equ	0xFF0
 24407                           indf0	equ	0xFEF
 24408                           postinc0	equ	0xFEE
 24409                           fsr0h	equ	0xFEA
 24410                           fsr0l	equ	0xFE9
 24411                           wreg	equ	0xFE8
 24412                           indf1	equ	0xFE7
 24413                           postdec1	equ	0xFE5
 24414                           fsr1h	equ	0xFE2
 24415                           fsr1l	equ	0xFE1
 24416                           indf2	equ	0xFDF
 24417                           postinc2	equ	0xFDE
 24418                           postdec2	equ	0xFDD
 24419                           plusw2	equ	0xFDB
 24420                           fsr2h	equ	0xFDA
 24421                           fsr2l	equ	0xFD9
 24422                           status	equ	0xFD8
 24423                           
 24424 ;; *************** function _EUSART_Initialize *****************
 24425 ;; Defined at:
 24426 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 24427 ;; Parameters:    Size  Location     Type
 24428 ;;		None
 24429 ;; Auto vars:     Size  Location     Type
 24430 ;;		None
 24431 ;; Return value:  Size  Location     Type
 24432 ;;                  1    wreg      void 
 24433 ;; Registers used:
 24434 ;;		wreg, status,2
 24435 ;; Tracked objects:
 24436 ;;		On entry : 0/0
 24437 ;;		On exit  : 0/0
 24438 ;;		Unchanged: 0/0
 24439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24440 ;;      Params:         0       0       0       0       0       0       0       0       0
 24441 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24442 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24443 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24444 ;;Total ram usage:        0 bytes
 24445 ;; Hardware stack levels used:    1
 24446 ;; Hardware stack levels required when called:   11
 24447 ;; This function calls:
 24448 ;;		Nothing
 24449 ;; This function is called by:
 24450 ;;		_SYSTEM_Initialize
 24451 ;; This function uses a non-reentrant model
 24452 ;;
 24453                           
 24454                           	psect	text101
 24455  005B10                     __ptext101:
 24456                           	opt stack 0
 24457  005B10                     _EUSART_Initialize:
 24458                           	opt stack 18
 24459                           
 24460                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 24461                           
 24462                           ; BSR set to: 1
 24463                           ;incstack = 0
 24464  005B10  9A9D               	bcf	3997,5,c	;volatile
 24465                           
 24466                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 24467  005B12  989D               	bcf	3997,4,c	;volatile
 24468                           
 24469                           ;eusart.c: 85: BAUDCON = 0x48;
 24470  005B14  0E48               	movlw	72
 24471  005B16  6EB8               	movwf	4024,c	;volatile
 24472                           
 24473                           ;eusart.c: 88: RCSTA = 0x90;
 24474  005B18  0E90               	movlw	144
 24475  005B1A  6EAB               	movwf	4011,c	;volatile
 24476                           
 24477                           ;eusart.c: 91: TXSTA = 0x26;
 24478  005B1C  0E26               	movlw	38
 24479  005B1E  6EAC               	movwf	4012,c	;volatile
 24480                           
 24481                           ;eusart.c: 95: SPBRG = 0xD0;
 24482  005B20  0ED0               	movlw	208
 24483  005B22  6EAF               	movwf	4015,c	;volatile
 24484                           
 24485                           ;eusart.c: 100: SPBRGH = 0x00;
 24486  005B24  0E00               	movlw	0
 24487  005B26  6EB0               	movwf	4016,c	;volatile
 24488                           
 24489                           ;eusart.c: 103: eusartTxHead = 0;
 24490  005B28  0E00               	movlw	0
 24491  005B2A  0100               	movlb	0	; () banked
 24492  005B2C  6FE2               	movwf	_eusartTxHead& (0+255),b
 24493                           
 24494                           ;eusart.c: 104: eusartTxTail = 0;
 24495  005B2E  0E00               	movlw	0
 24496  005B30  6FE1               	movwf	_eusartTxTail& (0+255),b
 24497                           
 24498                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 24499  005B32  0E40               	movlw	64
 24500  005B34  6FE0               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
 24501                           
 24502                           ;eusart.c: 107: eusartRxHead = 0;
 24503  005B36  0E00               	movlw	0
 24504  005B38  6FDF               	movwf	_eusartRxHead& (0+255),b
 24505                           
 24506                           ;eusart.c: 108: eusartRxTail = 0;
 24507  005B3A  0E00               	movlw	0
 24508  005B3C  6FDE               	movwf	_eusartRxTail& (0+255),b
 24509                           
 24510                           ;eusart.c: 109: eusartRxCount = 0;
 24511  005B3E  0E00               	movlw	0
 24512  005B40  6FF5               	movwf	_eusartRxCount& (0+255),b	;volatile
 24513                           
 24514                           ; BSR set to: 0
 24515                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 24516  005B42  8A9D               	bsf	3997,5,c	;volatile
 24517                           
 24518                           ; BSR set to: 0
 24519                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 24520  005B44  88AB               	bsf	4011,4,c	;volatile
 24521                           
 24522                           ; BSR set to: 0
 24523  005B46  0012               	return		;funcret
 24524  005B48                     __end_of_EUSART_Initialize:
 24525                           	opt stack 0
 24526                           tblptru	equ	0xFF8
 24527                           tblptrh	equ	0xFF7
 24528                           tblptrl	equ	0xFF6
 24529                           tablat	equ	0xFF5
 24530                           prodh	equ	0xFF4
 24531                           prodl	equ	0xFF3
 24532                           intcon	equ	0xFF2
 24533                           intcon2	equ	0xFF1
 24534                           intcon3	equ	0xFF0
 24535                           indf0	equ	0xFEF
 24536                           postinc0	equ	0xFEE
 24537                           fsr0h	equ	0xFEA
 24538                           fsr0l	equ	0xFE9
 24539                           wreg	equ	0xFE8
 24540                           indf1	equ	0xFE7
 24541                           postdec1	equ	0xFE5
 24542                           fsr1h	equ	0xFE2
 24543                           fsr1l	equ	0xFE1
 24544                           indf2	equ	0xFDF
 24545                           postinc2	equ	0xFDE
 24546                           postdec2	equ	0xFDD
 24547                           plusw2	equ	0xFDB
 24548                           fsr2h	equ	0xFDA
 24549                           fsr2l	equ	0xFD9
 24550                           status	equ	0xFD8
 24551                           
 24552 ;; *************** function _CMP1_Initialize *****************
 24553 ;; Defined at:
 24554 ;;		line 58 in file "../Includes/MccGenerated/cmp1.c"
 24555 ;; Parameters:    Size  Location     Type
 24556 ;;		None
 24557 ;; Auto vars:     Size  Location     Type
 24558 ;;		None
 24559 ;; Return value:  Size  Location     Type
 24560 ;;                  1    wreg      void 
 24561 ;; Registers used:
 24562 ;;		wreg, status,2
 24563 ;; Tracked objects:
 24564 ;;		On entry : 0/0
 24565 ;;		On exit  : 0/0
 24566 ;;		Unchanged: 0/0
 24567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24568 ;;      Params:         0       0       0       0       0       0       0       0       0
 24569 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24570 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24571 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24572 ;;Total ram usage:        0 bytes
 24573 ;; Hardware stack levels used:    1
 24574 ;; Hardware stack levels required when called:   11
 24575 ;; This function calls:
 24576 ;;		Nothing
 24577 ;; This function is called by:
 24578 ;;		_SYSTEM_Initialize
 24579 ;; This function uses a non-reentrant model
 24580 ;;
 24581                           
 24582                           	psect	text102
 24583  00612C                     __ptext102:
 24584                           	opt stack 0
 24585  00612C                     _CMP1_Initialize:
 24586                           	opt stack 18
 24587                           
 24588                           ;cmp1.c: 65: PIE2bits.C1IE = 0;
 24589                           
 24590                           ; BSR set to: 0
 24591                           ;incstack = 0
 24592  00612C  9CA0               	bcf	4000,6,c	;volatile
 24593                           
 24594                           ;cmp1.c: 70: CM1CON0 = 0x9C;
 24595  00612E  0E9C               	movlw	156
 24596  006130  6E98               	movwf	3992,c	;volatile
 24597                           
 24598                           ;cmp1.c: 73: CM2CON1bits.C1RSEL = 0x1;
 24599  006132  8A9A               	bsf	3994,5,c	;volatile
 24600                           
 24601                           ;cmp1.c: 76: CM2CON1bits.C1SYNC = 0x0;
 24602  006134  929A               	bcf	3994,1,c	;volatile
 24603                           
 24604                           ;cmp1.c: 79: CM2CON1bits.C1HYS = 0x0;
 24605  006136  969A               	bcf	3994,3,c	;volatile
 24606                           
 24607                           ;cmp1.c: 83: PIR2bits.C1IF = 0;
 24608  006138  9CA1               	bcf	4001,6,c	;volatile
 24609                           
 24610                           ;cmp1.c: 86: PIE2bits.C1IE = 0;
 24611  00613A  9CA0               	bcf	4000,6,c	;volatile
 24612  00613C  0012               	return		;funcret
 24613  00613E                     __end_of_CMP1_Initialize:
 24614                           	opt stack 0
 24615                           tblptru	equ	0xFF8
 24616                           tblptrh	equ	0xFF7
 24617                           tblptrl	equ	0xFF6
 24618                           tablat	equ	0xFF5
 24619                           prodh	equ	0xFF4
 24620                           prodl	equ	0xFF3
 24621                           intcon	equ	0xFF2
 24622                           intcon2	equ	0xFF1
 24623                           intcon3	equ	0xFF0
 24624                           indf0	equ	0xFEF
 24625                           postinc0	equ	0xFEE
 24626                           fsr0h	equ	0xFEA
 24627                           fsr0l	equ	0xFE9
 24628                           wreg	equ	0xFE8
 24629                           indf1	equ	0xFE7
 24630                           postdec1	equ	0xFE5
 24631                           fsr1h	equ	0xFE2
 24632                           fsr1l	equ	0xFE1
 24633                           indf2	equ	0xFDF
 24634                           postinc2	equ	0xFDE
 24635                           postdec2	equ	0xFDD
 24636                           plusw2	equ	0xFDB
 24637                           fsr2h	equ	0xFDA
 24638                           fsr2l	equ	0xFD9
 24639                           status	equ	0xFD8
 24640                           
 24641 ;; *************** function _ADC_Initialize *****************
 24642 ;; Defined at:
 24643 ;;		line 65 in file "../Includes/MccGenerated/adc.c"
 24644 ;; Parameters:    Size  Location     Type
 24645 ;;		None
 24646 ;; Auto vars:     Size  Location     Type
 24647 ;;		None
 24648 ;; Return value:  Size  Location     Type
 24649 ;;                  1    wreg      void 
 24650 ;; Registers used:
 24651 ;;		wreg, status,2
 24652 ;; Tracked objects:
 24653 ;;		On entry : 0/0
 24654 ;;		On exit  : 0/0
 24655 ;;		Unchanged: 0/0
 24656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24657 ;;      Params:         0       0       0       0       0       0       0       0       0
 24658 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24659 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24660 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24661 ;;Total ram usage:        0 bytes
 24662 ;; Hardware stack levels used:    1
 24663 ;; Hardware stack levels required when called:   11
 24664 ;; This function calls:
 24665 ;;		Nothing
 24666 ;; This function is called by:
 24667 ;;		_SYSTEM_Initialize
 24668 ;; This function uses a non-reentrant model
 24669 ;;
 24670                           
 24671                           	psect	text103
 24672  005FFA                     __ptext103:
 24673                           	opt stack 0
 24674  005FFA                     _ADC_Initialize:
 24675                           	opt stack 18
 24676                           
 24677                           ;adc.c: 68: VREFCON0 = 0b10100000;
 24678                           
 24679                           ;incstack = 0
 24680  005FFA  0EA0               	movlw	160
 24681  005FFC  6E7D               	movwf	3965,c	;volatile
 24682                           
 24683                           ;adc.c: 70: ADCON0 = 0x01;
 24684  005FFE  0E01               	movlw	1
 24685  006000  6EC2               	movwf	4034,c	;volatile
 24686                           
 24687                           ;adc.c: 73: ADCON1 = 0x08;
 24688  006002  0E08               	movlw	8
 24689  006004  6EC1               	movwf	4033,c	;volatile
 24690                           
 24691                           ;adc.c: 76: ADCON2 = 0b10001110;
 24692  006006  0E8E               	movlw	142
 24693  006008  6EC0               	movwf	4032,c	;volatile
 24694                           
 24695                           ;adc.c: 79: ADRESL = 0x00;
 24696  00600A  0E00               	movlw	0
 24697  00600C  6EC3               	movwf	4035,c	;volatile
 24698                           
 24699                           ;adc.c: 82: ADRESH = 0x00;
 24700  00600E  0E00               	movlw	0
 24701  006010  6EC4               	movwf	4036,c	;volatile
 24702  006012  0012               	return		;funcret
 24703  006014                     __end_of_ADC_Initialize:
 24704                           	opt stack 0
 24705                           tblptru	equ	0xFF8
 24706                           tblptrh	equ	0xFF7
 24707                           tblptrl	equ	0xFF6
 24708                           tablat	equ	0xFF5
 24709                           prodh	equ	0xFF4
 24710                           prodl	equ	0xFF3
 24711                           intcon	equ	0xFF2
 24712                           intcon2	equ	0xFF1
 24713                           intcon3	equ	0xFF0
 24714                           indf0	equ	0xFEF
 24715                           postinc0	equ	0xFEE
 24716                           fsr0h	equ	0xFEA
 24717                           fsr0l	equ	0xFE9
 24718                           wreg	equ	0xFE8
 24719                           indf1	equ	0xFE7
 24720                           postdec1	equ	0xFE5
 24721                           fsr1h	equ	0xFE2
 24722                           fsr1l	equ	0xFE1
 24723                           indf2	equ	0xFDF
 24724                           postinc2	equ	0xFDE
 24725                           postdec2	equ	0xFDD
 24726                           plusw2	equ	0xFDB
 24727                           fsr2h	equ	0xFDA
 24728                           fsr2l	equ	0xFD9
 24729                           status	equ	0xFD8
 24730                           
 24731 ;; *************** function _MOTEapp_handlerState *****************
 24732 ;; Defined at:
 24733 ;;		line 183 in file "../Includes/Board/MOTEapp.c"
 24734 ;; Parameters:    Size  Location     Type
 24735 ;;  state           1    wreg     enum E5864
 24736 ;; Auto vars:     Size  Location     Type
 24737 ;;  state           1    0[BANK0 ] enum E5864
 24738 ;; Return value:  Size  Location     Type
 24739 ;;                  1    wreg      void 
 24740 ;; Registers used:
 24741 ;;		wreg
 24742 ;; Tracked objects:
 24743 ;;		On entry : 0/0
 24744 ;;		On exit  : 0/0
 24745 ;;		Unchanged: 0/0
 24746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24747 ;;      Params:         0       0       0       0       0       0       0       0       0
 24748 ;;      Locals:         0       1       0       0       0       0       0       0       0
 24749 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24750 ;;      Totals:         0       1       0       0       0       0       0       0       0
 24751 ;;Total ram usage:        1 bytes
 24752 ;; Hardware stack levels used:    1
 24753 ;; Hardware stack levels required when called:   11
 24754 ;; This function calls:
 24755 ;;		Nothing
 24756 ;; This function is called by:
 24757 ;;		_main
 24758 ;; This function uses a non-reentrant model
 24759 ;;
 24760                           
 24761                           	psect	text104
 24762  0061DE                     __ptext104:
 24763                           	opt stack 0
 24764  0061DE                     _MOTEapp_handlerState:
 24765                           	opt stack 19
 24766                           
 24767                           ;incstack = 0
 24768                           ;MOTEapp_handlerState@state stored from wreg
 24769  0061DE  0100               	movlb	0	; () banked
 24770  0061E0  6F60               	movwf	MOTEapp_handlerState@state& (0+255),b
 24771                           
 24772                           ;MOTEapp.c: 185: moteState = state;
 24773  0061E2  C060  F0FF         	movff	MOTEapp_handlerState@state,_moteState
 24774  0061E6  0012               	return		;funcret
 24775  0061E8                     __end_of_MOTEapp_handlerState:
 24776                           	opt stack 0
 24777                           tblptru	equ	0xFF8
 24778                           tblptrh	equ	0xFF7
 24779                           tblptrl	equ	0xFF6
 24780                           tablat	equ	0xFF5
 24781                           prodh	equ	0xFF4
 24782                           prodl	equ	0xFF3
 24783                           intcon	equ	0xFF2
 24784                           intcon2	equ	0xFF1
 24785                           intcon3	equ	0xFF0
 24786                           indf0	equ	0xFEF
 24787                           postinc0	equ	0xFEE
 24788                           fsr0h	equ	0xFEA
 24789                           fsr0l	equ	0xFE9
 24790                           wreg	equ	0xFE8
 24791                           indf1	equ	0xFE7
 24792                           postdec1	equ	0xFE5
 24793                           fsr1h	equ	0xFE2
 24794                           fsr1l	equ	0xFE1
 24795                           indf2	equ	0xFDF
 24796                           postinc2	equ	0xFDE
 24797                           postdec2	equ	0xFDD
 24798                           plusw2	equ	0xFDB
 24799                           fsr2h	equ	0xFDA
 24800                           fsr2l	equ	0xFD9
 24801                           status	equ	0xFD8
 24802                           
 24803 ;; *************** function _DATAEE_ReadByte *****************
 24804 ;; Defined at:
 24805 ;;		line 188 in file "../Includes/MccGenerated/memory.c"
 24806 ;; Parameters:    Size  Location     Type
 24807 ;;  bAdd            1    wreg     unsigned char 
 24808 ;; Auto vars:     Size  Location     Type
 24809 ;;  bAdd            1    0[BANK0 ] unsigned char 
 24810 ;; Return value:  Size  Location     Type
 24811 ;;                  1    wreg      unsigned char 
 24812 ;; Registers used:
 24813 ;;		wreg, status,2
 24814 ;; Tracked objects:
 24815 ;;		On entry : 0/0
 24816 ;;		On exit  : 0/0
 24817 ;;		Unchanged: 0/0
 24818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24819 ;;      Params:         0       0       0       0       0       0       0       0       0
 24820 ;;      Locals:         0       1       0       0       0       0       0       0       0
 24821 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24822 ;;      Totals:         0       1       0       0       0       0       0       0       0
 24823 ;;Total ram usage:        1 bytes
 24824 ;; Hardware stack levels used:    1
 24825 ;; Hardware stack levels required when called:   11
 24826 ;; This function calls:
 24827 ;;		Nothing
 24828 ;; This function is called by:
 24829 ;;		_main
 24830 ;; This function uses a non-reentrant model
 24831 ;;
 24832                           
 24833                           	psect	text105
 24834  006088                     __ptext105:
 24835                           	opt stack 0
 24836  006088                     _DATAEE_ReadByte:
 24837                           	opt stack 19
 24838                           
 24839                           ;incstack = 0
 24840                           ;DATAEE_ReadByte@bAdd stored from wreg
 24841  006088  0100               	movlb	0	; () banked
 24842  00608A  6F60               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 24843                           
 24844                           ;memory.c: 190: EEADR = (bAdd & 0xFF);
 24845  00608C  C060  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
 24846                           
 24847                           ;memory.c: 191: EECON1bits.CFGS = 0;
 24848  006090  9CA6               	bcf	4006,6,c	;volsfr
 24849                           
 24850                           ;memory.c: 192: EECON1bits.EEPGD = 0;
 24851  006092  9EA6               	bcf	4006,7,c	;volsfr
 24852                           
 24853                           ;memory.c: 193: EECON1bits.RD = 1;
 24854  006094  80A6               	bsf	4006,0,c	;volsfr
 24855                           
 24856                           ;memory.c: 194: __nop();
 24857  006096  F000               	nop	
 24858                           
 24859                           ;memory.c: 195: __nop();
 24860  006098  F000               	nop	
 24861                           
 24862                           ;memory.c: 197: return (EEDATA);
 24863  00609A  50A8               	movf	4008,w,c	;volatile
 24864  00609C  0012               	return	
 24865  00609E                     __end_of_DATAEE_ReadByte:
 24866                           	opt stack 0
 24867                           tblptru	equ	0xFF8
 24868                           tblptrh	equ	0xFF7
 24869                           tblptrl	equ	0xFF6
 24870                           tablat	equ	0xFF5
 24871                           prodh	equ	0xFF4
 24872                           prodl	equ	0xFF3
 24873                           intcon	equ	0xFF2
 24874                           intcon2	equ	0xFF1
 24875                           intcon3	equ	0xFF0
 24876                           indf0	equ	0xFEF
 24877                           postinc0	equ	0xFEE
 24878                           fsr0h	equ	0xFEA
 24879                           fsr0l	equ	0xFE9
 24880                           wreg	equ	0xFE8
 24881                           indf1	equ	0xFE7
 24882                           postdec1	equ	0xFE5
 24883                           fsr1h	equ	0xFE2
 24884                           fsr1l	equ	0xFE1
 24885                           indf2	equ	0xFDF
 24886                           postinc2	equ	0xFDE
 24887                           postdec2	equ	0xFDD
 24888                           plusw2	equ	0xFDB
 24889                           fsr2h	equ	0xFDA
 24890                           fsr2l	equ	0xFD9
 24891                           status	equ	0xFD8
 24892                           
 24893 ;; *************** function _INTERRUPT_InterruptManager *****************
 24894 ;; Defined at:
 24895 ;;		line 56 in file "../Includes/MccGenerated/interrupt_manager.c"
 24896 ;; Parameters:    Size  Location     Type
 24897 ;;		None
 24898 ;; Auto vars:     Size  Location     Type
 24899 ;;		None
 24900 ;; Return value:  Size  Location     Type
 24901 ;;                  1    wreg      void 
 24902 ;; Registers used:
 24903 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 24904 ;; Tracked objects:
 24905 ;;		On entry : 0/0
 24906 ;;		On exit  : 0/0
 24907 ;;		Unchanged: 0/0
 24908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24909 ;;      Params:         0       0       0       0       0       0       0       0       0
 24910 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24911 ;;      Temps:         18       0       0       0       0       0       0       0       0
 24912 ;;      Totals:        18       0       0       0       0       0       0       0       0
 24913 ;;Total ram usage:       18 bytes
 24914 ;; Hardware stack levels used:    1
 24915 ;; Hardware stack levels required when called:   10
 24916 ;; This function calls:
 24917 ;;		_CMP1_ISR
 24918 ;;		_EUSART_Receive_ISR
 24919 ;;		_EUSART_Transmit_ISR
 24920 ;;		_InterruptPinRX
 24921 ;;		_InterruptTimerUART
 24922 ;;		_TMR0_ISR
 24923 ;;		_TMR1_ISR
 24924 ;;		_TMR3_ISR
 24925 ;;		_TMRapp_Tick
 24926 ;;		_USBDeviceTasks
 24927 ;;		_USBapp_setrxByteFlag
 24928 ;; This function is called by:
 24929 ;;		Interrupt level 2
 24930 ;; This function uses a non-reentrant model
 24931 ;;
 24932                           
 24933                           	psect	intcode
 24934  000008                     __pintcode:
 24935                           	opt stack 0
 24936  000008                     _INTERRUPT_InterruptManager:
 24937                           	opt stack 11
 24938                           
 24939                           ;incstack = 0
 24940  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 24941  00000A  CFFA F022          	movff	pclath,??_INTERRUPT_InterruptManager
 24942  00000E  CFFB F023          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 24943  000012  CFE9 F024          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 24944  000016  CFEA F025          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 24945  00001A  CFE1 F026          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 24946  00001E  CFE2 F027          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 24947  000022  CFD9 F028          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 24948  000026  CFDA F029          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 24949  00002A  CFF3 F02A          	movff	prodl,??_INTERRUPT_InterruptManager+8
 24950  00002E  CFF4 F02B          	movff	prodh,??_INTERRUPT_InterruptManager+9
 24951  000032  CFF6 F02C          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 24952  000036  CFF7 F02D          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 24953  00003A  CFF8 F02E          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 24954  00003E  CFF5 F02F          	movff	tablat,??_INTERRUPT_InterruptManager+13
 24955  000042  C05F  F030         	movff	btemp,??_INTERRUPT_InterruptManager+14
 24956  000046  C060  F031         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
 24957  00004A  C061  F032         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
 24958  00004E  C062  F033         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
 24959                           
 24960                           ;interrupt_manager.c: 59: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 24961  000052  B09D               	btfsc	3997,0,c	;volatile
 24962  000054  A09E               	btfss	3998,0,c	;volatile
 24963  000056  D004               	goto	i2l1284
 24964                           
 24965                           ;interrupt_manager.c: 60: {
 24966                           ;interrupt_manager.c: 61: TMR1_ISR();
 24967  000058  ECD4  F030         	call	_TMR1_ISR	;wreg free
 24968                           
 24969                           ;interrupt_manager.c: 63: TMRapp_Tick();
 24970  00005C  EC15  F031         	call	_TMRapp_Tick	;wreg free
 24971  000060                     i2l1284:
 24972                           
 24973                           ;interrupt_manager.c: 64: }
 24974                           ;interrupt_manager.c: 65: if(PIE2bits.TMR3IE == 1 && PIR2bits.TMR3IF == 1)
 24975  000060  B2A0               	btfsc	4000,1,c	;volatile
 24976  000062  A2A1               	btfss	4001,1,c	;volatile
 24977  000064  D003               	goto	i2l1285
 24978                           
 24979                           ;interrupt_manager.c: 66: {
 24980                           ;interrupt_manager.c: 67: TMR3_ISR();
 24981  000066  ECC5  F02F         	call	_TMR3_ISR	;wreg free
 24982                           
 24983                           ;interrupt_manager.c: 68: }
 24984  00006A  D013               	goto	i2l1291
 24985  00006C                     i2l1285:
 24986                           
 24987                           ;interrupt_manager.c: 69: else if( (PIE1bits.RCIE == 1) && (PIR1bits.RCIF == 1) )
 24988  00006C  BA9D               	btfsc	3997,5,c	;volatile
 24989  00006E  AA9E               	btfss	3998,5,c	;volatile
 24990  000070  D005               	goto	i2l1287
 24991                           
 24992                           ;interrupt_manager.c: 70: {
 24993                           ;interrupt_manager.c: 71: USBapp_setrxByteFlag();
 24994  000072  EC01  F031         	call	_USBapp_setrxByteFlag	;wreg free
 24995                           
 24996                           ;interrupt_manager.c: 72: EUSART_Receive_ISR();
 24997  000076  EC9F  F02E         	call	_EUSART_Receive_ISR	;wreg free
 24998                           
 24999                           ;interrupt_manager.c: 73: }
 25000  00007A  D00B               	goto	i2l1291
 25001  00007C                     i2l1287:
 25002                           
 25003                           ;interrupt_manager.c: 74: else if( (PIE1bits.TXIE == 1) && (PIR1bits.TXIF == 1) )
 25004  00007C  B89D               	btfsc	3997,4,c	;volatile
 25005  00007E  A89E               	btfss	3998,4,c	;volatile
 25006  000080  D003               	goto	i2l1289
 25007                           
 25008                           ;interrupt_manager.c: 75: {
 25009                           ;interrupt_manager.c: 76: EUSART_Transmit_ISR();
 25010  000082  EC87  F02E         	call	_EUSART_Transmit_ISR	;wreg free
 25011                           
 25012                           ;interrupt_manager.c: 77: }
 25013  000086  D005               	goto	i2l1291
 25014  000088                     i2l1289:
 25015                           
 25016                           ;interrupt_manager.c: 78: else if(PIE2bits.C1IE == 1 && PIR2bits.C1IF == 1)
 25017  000088  BCA0               	btfsc	4000,6,c	;volatile
 25018  00008A  ACA1               	btfss	4001,6,c	;volatile
 25019  00008C  D002               	goto	i2l1291
 25020                           
 25021                           ;interrupt_manager.c: 79: {
 25022                           ;interrupt_manager.c: 80: CMP1_ISR();
 25023  00008E  EC2B  F031         	call	_CMP1_ISR	;wreg free
 25024  000092                     i2l1291:
 25025                           
 25026                           ;interrupt_manager.c: 81: }
 25027                           ;interrupt_manager.c: 82: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 25028  000092  BAF2               	btfsc	intcon,5,c	;volatile
 25029  000094  A4F2               	btfss	intcon,2,c	;volatile
 25030  000096  D005               	goto	i2l1292
 25031                           
 25032                           ;interrupt_manager.c: 83: {
 25033                           ;interrupt_manager.c: 84: TMR0_ISR();
 25034  000098  EC23  F031         	call	_TMR0_ISR	;wreg free
 25035                           
 25036                           ;interrupt_manager.c: 85: InterruptTimerUART();
 25037  00009C  EC4D  F01B         	call	_InterruptTimerUART	;wreg free
 25038                           
 25039                           ;interrupt_manager.c: 88: }
 25040  0000A0  D008               	goto	i2l1295
 25041  0000A2                     i2l1292:
 25042                           
 25043                           ;interrupt_manager.c: 89: else if(INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1)
 25044  0000A2  B6F2               	btfsc	intcon,3,c	;volatile
 25045  0000A4  A0F2               	btfss	intcon,0,c	;volatile
 25046  0000A6  D003               	goto	i2l1294
 25047                           
 25048                           ;interrupt_manager.c: 90: {
 25049                           ;interrupt_manager.c: 100: InterruptPinRX();
 25050  0000A8  ECCE  F02E         	call	_InterruptPinRX	;wreg free
 25051                           
 25052                           ;interrupt_manager.c: 113: }
 25053  0000AC  D002               	goto	i2l1295
 25054  0000AE                     i2l1294:
 25055                           
 25056                           ;interrupt_manager.c: 114: else
 25057                           ;interrupt_manager.c: 115: {
 25058                           ;interrupt_manager.c: 117: USBDeviceTasks();
 25059  0000AE  ECF4  F016         	call	_USBDeviceTasks	;wreg free
 25060  0000B2                     i2l1295:
 25061  0000B2  C033  F062         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
 25062  0000B6  C032  F061         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
 25063  0000BA  C031  F060         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
 25064  0000BE  C030  F05F         	movff	??_INTERRUPT_InterruptManager+14,btemp
 25065  0000C2  C02F  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 25066  0000C6  C02E  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 25067  0000CA  C02D  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 25068  0000CE  C02C  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 25069  0000D2  C02B  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 25070  0000D6  C02A  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 25071  0000DA  C029  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 25072  0000DE  C028  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 25073  0000E2  C027  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 25074  0000E6  C026  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 25075  0000EA  C025  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 25076  0000EE  C024  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 25077  0000F2  C023  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 25078  0000F6  C022  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 25079  0000FA  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 25080  0000FC  0011               	retfie		f
 25081  0000FE                     __end_of_INTERRUPT_InterruptManager:
 25082                           	opt stack 0
 25083                           pclatu	equ	0xFFB
 25084                           pclath	equ	0xFFA
 25085                           tblptru	equ	0xFF8
 25086                           tblptrh	equ	0xFF7
 25087                           tblptrl	equ	0xFF6
 25088                           tablat	equ	0xFF5
 25089                           prodh	equ	0xFF4
 25090                           prodl	equ	0xFF3
 25091                           intcon	equ	0xFF2
 25092                           intcon2	equ	0xFF1
 25093                           intcon3	equ	0xFF0
 25094                           indf0	equ	0xFEF
 25095                           postinc0	equ	0xFEE
 25096                           fsr0h	equ	0xFEA
 25097                           fsr0l	equ	0xFE9
 25098                           wreg	equ	0xFE8
 25099                           indf1	equ	0xFE7
 25100                           postdec1	equ	0xFE5
 25101                           fsr1h	equ	0xFE2
 25102                           fsr1l	equ	0xFE1
 25103                           indf2	equ	0xFDF
 25104                           postinc2	equ	0xFDE
 25105                           postdec2	equ	0xFDD
 25106                           plusw2	equ	0xFDB
 25107                           fsr2h	equ	0xFDA
 25108                           fsr2l	equ	0xFD9
 25109                           status	equ	0xFD8
 25110                           
 25111 ;; *************** function _USBapp_setrxByteFlag *****************
 25112 ;; Defined at:
 25113 ;;		line 263 in file "../Includes/Board/USBapp.c"
 25114 ;; Parameters:    Size  Location     Type
 25115 ;;		None
 25116 ;; Auto vars:     Size  Location     Type
 25117 ;;		None
 25118 ;; Return value:  Size  Location     Type
 25119 ;;                  1    wreg      void 
 25120 ;; Registers used:
 25121 ;;		wreg, status,2
 25122 ;; Tracked objects:
 25123 ;;		On entry : 0/0
 25124 ;;		On exit  : 0/0
 25125 ;;		Unchanged: 0/0
 25126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25127 ;;      Params:         0       0       0       0       0       0       0       0       0
 25128 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25129 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25130 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25131 ;;Total ram usage:        0 bytes
 25132 ;; Hardware stack levels used:    1
 25133 ;; This function calls:
 25134 ;;		Nothing
 25135 ;; This function is called by:
 25136 ;;		_INTERRUPT_InterruptManager
 25137 ;; This function uses a non-reentrant model
 25138 ;;
 25139                           
 25140                           	psect	text107
 25141  006202                     __ptext107:
 25142                           	opt stack 0
 25143  006202                     _USBapp_setrxByteFlag:
 25144                           	opt stack 20
 25145                           
 25146                           ;USBapp.c: 265: rxByteFlag = 1;
 25147                           
 25148                           ;incstack = 0
 25149  006202  0E01               	movlw	1
 25150  006204  0100               	movlb	0	; () banked
 25151  006206  6FE9               	movwf	_rxByteFlag& (0+255),b	;volatile
 25152                           
 25153                           ; BSR set to: 0
 25154  006208  0012               	return		;funcret
 25155  00620A                     __end_of_USBapp_setrxByteFlag:
 25156                           	opt stack 0
 25157                           pclatu	equ	0xFFB
 25158                           pclath	equ	0xFFA
 25159                           tblptru	equ	0xFF8
 25160                           tblptrh	equ	0xFF7
 25161                           tblptrl	equ	0xFF6
 25162                           tablat	equ	0xFF5
 25163                           prodh	equ	0xFF4
 25164                           prodl	equ	0xFF3
 25165                           intcon	equ	0xFF2
 25166                           intcon2	equ	0xFF1
 25167                           intcon3	equ	0xFF0
 25168                           indf0	equ	0xFEF
 25169                           postinc0	equ	0xFEE
 25170                           fsr0h	equ	0xFEA
 25171                           fsr0l	equ	0xFE9
 25172                           wreg	equ	0xFE8
 25173                           indf1	equ	0xFE7
 25174                           postdec1	equ	0xFE5
 25175                           fsr1h	equ	0xFE2
 25176                           fsr1l	equ	0xFE1
 25177                           indf2	equ	0xFDF
 25178                           postinc2	equ	0xFDE
 25179                           postdec2	equ	0xFDD
 25180                           plusw2	equ	0xFDB
 25181                           fsr2h	equ	0xFDA
 25182                           fsr2l	equ	0xFD9
 25183                           status	equ	0xFD8
 25184                           
 25185 ;; *************** function _USBDeviceTasks *****************
 25186 ;; Defined at:
 25187 ;;		line 428 in file "../Includes/Usb/Framework/usb_device.c"
 25188 ;; Parameters:    Size  Location     Type
 25189 ;;		None
 25190 ;; Auto vars:     Size  Location     Type
 25191 ;;  i               1   30[COMRAM] unsigned char 
 25192 ;; Return value:  Size  Location     Type
 25193 ;;                  1    wreg      void 
 25194 ;; Registers used:
 25195 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 25196 ;; Tracked objects:
 25197 ;;		On entry : 0/0
 25198 ;;		On exit  : 0/0
 25199 ;;		Unchanged: 0/0
 25200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25201 ;;      Params:         0       0       0       0       0       0       0       0       0
 25202 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25203 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25204 ;;      Totals:         1       0       0       0       0       0       0       0       0
 25205 ;;Total ram usage:        1 bytes
 25206 ;; Hardware stack levels used:    1
 25207 ;; Hardware stack levels required when called:    9
 25208 ;; This function calls:
 25209 ;;		_USBCtrlEPAllowStatusStage
 25210 ;;		_USBCtrlEPService
 25211 ;;		_USBStallHandler
 25212 ;;		_USBSuspend
 25213 ;;		_USBWakeFromSuspend
 25214 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25215 ;;		i2_USBDeviceInit
 25216 ;; This function is called by:
 25217 ;;		_INTERRUPT_InterruptManager
 25218 ;; This function uses a non-reentrant model
 25219 ;;
 25220                           
 25221                           	psect	text108
 25222  002DE8                     __ptext108:
 25223                           	opt stack 0
 25224  002DE8                     _USBDeviceTasks:
 25225                           	opt stack 11
 25226                           
 25227                           ;usb_device.c: 430: uint8_t i;
 25228                           ;usb_device.c: 432: if(USBDeviceState == ATTACHED_STATE)
 25229                           
 25230                           ; BSR set to: 0
 25231                           ;incstack = 0
 25232  002DE8  0100               	movlb	0	; () banked
 25233  002DEA  05EC               	decf	_USBDeviceState& (0+255),w,b	;volatile
 25234  002DEC  B4D8               	btfsc	status,2,c
 25235                           
 25236                           ; BSR set to: 0
 25237                           ;usb_device.c: 433: {
 25238                           ;usb_device.c: 443: if(!UCONbits.SE0)
 25239  002DEE  BA60               	btfsc	3936,5,c	;volatile
 25240  002DF0  D006               	goto	i2l1865
 25241                           
 25242                           ; BSR set to: 0
 25243                           ;usb_device.c: 444: {
 25244                           ;usb_device.c: 445: {UIR = 0;};
 25245  002DF2  0E00               	movlw	0
 25246  002DF4  6E65               	movwf	3941,c	;volatile
 25247                           
 25248                           ; BSR set to: 0
 25249                           ;usb_device.c: 446: UIEbits.URSTIE = 1;
 25250  002DF6  8064               	bsf	3940,0,c	;volatile
 25251                           
 25252                           ; BSR set to: 0
 25253                           ;usb_device.c: 447: UIEbits.IDLEIE = 1;
 25254  002DF8  8864               	bsf	3940,4,c	;volatile
 25255                           
 25256                           ;usb_device.c: 448: USBDeviceState = POWERED_STATE;
 25257  002DFA  0E02               	movlw	2
 25258  002DFC  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 25259  002DFE                     i2l1865:
 25260                           
 25261                           ; BSR set to: 0
 25262                           ;usb_device.c: 449: }
 25263                           ;usb_device.c: 450: }
 25264                           ;usb_device.c: 454: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 25265                           
 25266                           ; BSR set to: 0
 25267                           
 25268                           ; BSR set to: 0
 25269  002DFE  B465               	btfsc	3941,2,c	;volatile
 25270                           
 25271                           ; BSR set to: 0
 25272  002E00  A464               	btfss	3940,2,c	;volatile
 25273  002E02  D003               	goto	i2l1866
 25274                           
 25275                           ; BSR set to: 0
 25276                           ;usb_device.c: 455: {
 25277                           ;usb_device.c: 456: (UIR &= 0xFB);
 25278  002E04  9465               	bcf	3941,2,c	;volatile
 25279                           
 25280                           ; BSR set to: 0
 25281                           ;usb_device.c: 457: USBWakeFromSuspend();
 25282  002E06  EC6F  F02E         	call	_USBWakeFromSuspend	;wreg free
 25283  002E0A                     i2l1866:
 25284                           
 25285                           ;usb_device.c: 458: }
 25286                           ;usb_device.c: 463: if(UCONbits.SUSPND==1)
 25287  002E0A  A260               	btfss	3936,1,c	;volatile
 25288  002E0C  D002               	goto	i2l1867
 25289                           
 25290                           ;usb_device.c: 464: {
 25291                           ;usb_device.c: 465: PIR3bits.USBIF = 0;;
 25292  002E0E  94A4               	bcf	4004,2,c	;volatile
 25293                           
 25294                           ;usb_device.c: 466: return;
 25295  002E10  0012               	return	
 25296  002E12                     i2l1867:
 25297                           
 25298                           ;usb_device.c: 467: }
 25299                           ;usb_device.c: 479: if(UIRbits.URSTIF && UIEbits.URSTIE)
 25300  002E12  B065               	btfsc	3941,0,c	;volatile
 25301  002E14  A064               	btfss	3940,0,c	;volatile
 25302  002E16  D007               	goto	i2l1869
 25303                           
 25304                           ;usb_device.c: 480: {
 25305                           ;usb_device.c: 481: USBDeviceInit();
 25306  002E18  EC25  F018         	call	i2_USBDeviceInit	;wreg free
 25307                           
 25308                           ;usb_device.c: 485: {PIE3bits.USBIE = 1;};
 25309  002E1C  84A3               	bsf	4003,2,c	;volatile
 25310                           
 25311                           ;usb_device.c: 487: USBDeviceState = DEFAULT_STATE;
 25312  002E1E  0E04               	movlw	4
 25313  002E20  0100               	movlb	0	; () banked
 25314  002E22  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 25315                           
 25316                           ; BSR set to: 0
 25317                           ;usb_device.c: 489: (UIR &= 0xFE);
 25318  002E24  9065               	bcf	3941,0,c	;volatile
 25319  002E26                     i2l1869:
 25320                           
 25321                           ;usb_device.c: 490: }
 25322                           ;usb_device.c: 495: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 25323                           
 25324                           ; BSR set to: 0
 25325  002E26  B865               	btfsc	3941,4,c	;volatile
 25326  002E28  A864               	btfss	3940,4,c	;volatile
 25327  002E2A  D003               	goto	i2l1870
 25328                           
 25329                           ;usb_device.c: 496: {
 25330                           ;usb_device.c: 497: USBSuspend();
 25331  002E2C  EC10  F02F         	call	_USBSuspend	;wreg free
 25332                           
 25333                           ;usb_device.c: 498: (UIR &= 0xEF);
 25334  002E30  9865               	bcf	3941,4,c	;volatile
 25335  002E32                     i2l1870:
 25336                           
 25337                           ;usb_device.c: 499: }
 25338                           ;usb_device.c: 501: if(UIRbits.SOFIF)
 25339  002E32  AC65               	btfss	3941,6,c	;volatile
 25340  002E34  D018               	goto	i2l1874
 25341                           
 25342                           ;usb_device.c: 502: {
 25343                           ;usb_device.c: 503: if(UIEbits.SOFIE)
 25344  002E36  AC64               	btfss	3940,6,c	;volatile
 25345  002E38  D00E               	goto	i2l1872
 25346                           
 25347                           ;usb_device.c: 504: {
 25348                           ;usb_device.c: 505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 25349  002E3A  0E00               	movlw	0
 25350  002E3C  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25351  002E3E  0E73               	movlw	115
 25352  002E40  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25353  002E42  0E00               	movlw	0
 25354  002E44  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25355  002E46  0E00               	movlw	0
 25356  002E48  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25357  002E4A  0E00               	movlw	0
 25358  002E4C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25359  002E4E  0E01               	movlw	1
 25360  002E50  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25361  002E52  EC00  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25362  002E56                     i2l1872:
 25363                           
 25364                           ;usb_device.c: 506: }
 25365                           ;usb_device.c: 507: (UIR &= 0xBF);
 25366  002E56  9C65               	bcf	3941,6,c	;volatile
 25367                           
 25368                           ;usb_device.c: 512: if(USBStatusStageTimeoutCounter != 0u)
 25369  002E58  5048               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 25370  002E5A  A4D8               	btfss	status,2,c
 25371                           
 25372                           ;usb_device.c: 513: {
 25373                           ;usb_device.c: 514: USBStatusStageTimeoutCounter--;
 25374  002E5C  0648               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 25375                           
 25376                           ;usb_device.c: 515: }
 25377                           ;usb_device.c: 521: if(USBStatusStageTimeoutCounter == 0)
 25378  002E5E  5048               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 25379  002E60  B4D8               	btfsc	status,2,c
 25380                           
 25381                           ;usb_device.c: 522: {
 25382                           ;usb_device.c: 523: USBCtrlEPAllowStatusStage();
 25383  002E62  ECE5  F020         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25384  002E66                     i2l1874:
 25385                           
 25386                           ;usb_device.c: 524: }
 25387                           ;usb_device.c: 525: }
 25388                           ;usb_device.c: 527: if(UIRbits.STALLIF && UIEbits.STALLIE)
 25389  002E66  BA65               	btfsc	3941,5,c	;volatile
 25390  002E68  AA64               	btfss	3940,5,c	;volatile
 25391  002E6A  D002               	goto	i2l1875
 25392                           
 25393                           ;usb_device.c: 528: {
 25394                           ;usb_device.c: 529: USBStallHandler();
 25395  002E6C  EC93  F02C         	call	_USBStallHandler	;wreg free
 25396  002E70                     i2l1875:
 25397                           
 25398                           ;usb_device.c: 530: }
 25399                           ;usb_device.c: 532: if(UIRbits.UERRIF && UIEbits.UERRIE)
 25400  002E70  B265               	btfsc	3941,1,c	;volatile
 25401  002E72  A264               	btfss	3940,1,c	;volatile
 25402  002E74  D00F               	goto	i2l1876
 25403                           
 25404                           ;usb_device.c: 533: {
 25405                           ;usb_device.c: 534: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 25406  002E76  0E7F               	movlw	127
 25407  002E78  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25408  002E7A  680E               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25409  002E7C  0E00               	movlw	0
 25410  002E7E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25411  002E80  0E00               	movlw	0
 25412  002E82  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25413  002E84  0E00               	movlw	0
 25414  002E86  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25415  002E88  0E01               	movlw	1
 25416  002E8A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25417  002E8C  EC00  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25418                           
 25419                           ;usb_device.c: 535: {UEIR = 0;};
 25420  002E90  0E00               	movlw	0
 25421  002E92  6E67               	movwf	3943,c	;volatile
 25422  002E94                     i2l1876:
 25423                           
 25424                           ;usb_device.c: 536: }
 25425                           ;usb_device.c: 543: if(USBDeviceState < DEFAULT_STATE)
 25426  002E94  0E04               	movlw	4
 25427  002E96  0100               	movlb	0	; () banked
 25428  002E98  61EC               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 25429  002E9A  D002               	goto	i2l1877
 25430                           
 25431                           ; BSR set to: 0
 25432                           ;usb_device.c: 544: {
 25433                           ;usb_device.c: 545: PIR3bits.USBIF = 0;;
 25434  002E9C  94A4               	bcf	4004,2,c	;volatile
 25435                           
 25436                           ;usb_device.c: 546: return;
 25437  002E9E  0012               	return	
 25438  002EA0                     i2l1877:
 25439                           
 25440                           ; BSR set to: 0
 25441                           ;usb_device.c: 547: }
 25442                           ;usb_device.c: 552: if(UIEbits.TRNIE)
 25443  002EA0  A664               	btfss	3940,3,c	;volatile
 25444  002EA2  D039               	goto	i2u1078_40
 25445                           
 25446                           ; BSR set to: 0
 25447                           ;usb_device.c: 553: {
 25448                           ;usb_device.c: 554: for(i = 0; i < 4u; i++)
 25449  002EA4  0E00               	movlw	0
 25450  002EA6  6E1F               	movwf	USBDeviceTasks@i,c
 25451  002EA8                     i2l11977:
 25452                           
 25453                           ; BSR set to: 0
 25454  002EA8  0E03               	movlw	3
 25455  002EAA  641F               	cpfsgt	USBDeviceTasks@i,c
 25456  002EAC  D001               	goto	i2l1879
 25457  002EAE  D033               	goto	i2u1078_40
 25458  002EB0                     i2l1879:
 25459                           
 25460                           ;usb_device.c: 555: {
 25461                           ;usb_device.c: 556: if(UIRbits.TRNIF)
 25462  002EB0  A665               	btfss	3941,3,c	;volatile
 25463  002EB2  D031               	goto	i2u1078_40
 25464                           
 25465                           ;usb_device.c: 557: {
 25466                           ;usb_device.c: 559: USTATcopy.Val = USTAT;
 25467  002EB4  CF61 F05A          	movff	3937,_USTATcopy	;volatile
 25468                           
 25469                           ;usb_device.c: 560: endpoint_number = USTATcopy.endpoint_number;
 25470  002EB8  305A               	rrcf	_USTATcopy,w,c	;volatile
 25471  002EBA  32E8               	rrcf	wreg,f,c
 25472  002EBC  32E8               	rrcf	wreg,f,c
 25473  002EBE  0B0F               	andlw	15
 25474  002EC0  6E4A               	movwf	_endpoint_number,c	;volatile
 25475                           
 25476                           ;usb_device.c: 562: (UIR &= 0xF7);
 25477  002EC2  9665               	bcf	3941,3,c	;volatile
 25478                           
 25479                           ;usb_device.c: 566: if(USTATcopy.direction == 0)
 25480  002EC4  B45A               	btfsc	_USTATcopy,2,c	;volatile
 25481  002EC6  D007               	goto	i2l1882
 25482                           
 25483                           ;usb_device.c: 567: {
 25484                           ;usb_device.c: 568: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 25485  002EC8  504A               	movf	_endpoint_number,w,c	;volatile
 25486  002ECA  0D01               	mullw	1
 25487  002ECC  0ED0               	movlw	low _ep_data_out
 25488  002ECE  24F3               	addwf	prodl,w,c
 25489  002ED0  6ED9               	movwf	fsr2l,c
 25490  002ED2  0E00               	movlw	high _ep_data_out
 25491  002ED4  D006               	goto	L24
 25492  002ED6                     i2l1882:
 25493                           
 25494                           ;usb_device.c: 570: else
 25495                           ;usb_device.c: 571: {
 25496                           ;usb_device.c: 572: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 25497                           
 25498                           ; BSR set to: 0
 25499  002ED6  504A               	movf	_endpoint_number,w,c	;volatile
 25500  002ED8  0D01               	mullw	1
 25501  002EDA  0ED3               	movlw	low _ep_data_in
 25502  002EDC  24F3               	addwf	prodl,w,c
 25503  002EDE  6ED9               	movwf	fsr2l,c
 25504  002EE0  0E00               	movlw	high _ep_data_in
 25505  002EE2                     L24:
 25506  002EE2  20F4               	addwfc	prodh,w,c
 25507  002EE4  6EDA               	movwf	fsr2h,c
 25508  002EE6  0100               	movlb	0	; () banked
 25509  002EE8  70DF               	btg	indf2,0,c
 25510                           
 25511                           ; BSR set to: 0
 25512                           ;usb_device.c: 573: }
 25513                           ;usb_device.c: 577: if(endpoint_number == 0)
 25514                           
 25515                           ; BSR set to: 0
 25516  002EEA  504A               	movf	_endpoint_number,w,c	;volatile
 25517  002EEC  A4D8               	btfss	status,2,c
 25518  002EEE  D003               	goto	i2l1884
 25519                           
 25520                           ; BSR set to: 0
 25521                           ;usb_device.c: 578: {
 25522                           ;usb_device.c: 579: USBCtrlEPService();
 25523  002EF0  EC1B  F020         	call	_USBCtrlEPService	;wreg free
 25524                           
 25525                           ;usb_device.c: 580: }
 25526  002EF4  D00E               	goto	i2l1886
 25527  002EF6                     i2l1884:
 25528                           
 25529                           ;usb_device.c: 581: else
 25530                           ;usb_device.c: 582: {
 25531                           ;usb_device.c: 583: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 25532  002EF6  0E00               	movlw	0
 25533  002EF8  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25534  002EFA  0E72               	movlw	114
 25535  002EFC  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25536  002EFE  0E5A               	movlw	low _USTATcopy
 25537  002F00  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25538  002F02  0E00               	movlw	high _USTATcopy
 25539  002F04  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25540  002F06  0E00               	movlw	0
 25541  002F08  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25542  002F0A  0E00               	movlw	0
 25543  002F0C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25544  002F0E  EC00  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25545  002F12                     i2l1886:
 25546  002F12  2A1F               	incf	USBDeviceTasks@i,f,c
 25547  002F14  D7C9               	goto	i2l11977
 25548  002F16                     i2u1078_40:
 25549                           
 25550                           ;usb_device.c: 589: }
 25551                           ;usb_device.c: 590: }
 25552                           ;usb_device.c: 591: }
 25553                           ;usb_device.c: 593: PIR3bits.USBIF = 0;;
 25554  002F16  94A4               	bcf	4004,2,c	;volatile
 25555  002F18  0012               	return		;funcret
 25556  002F1A                     __end_of_USBDeviceTasks:
 25557                           	opt stack 0
 25558                           pclatu	equ	0xFFB
 25559                           pclath	equ	0xFFA
 25560                           tblptru	equ	0xFF8
 25561                           tblptrh	equ	0xFF7
 25562                           tblptrl	equ	0xFF6
 25563                           tablat	equ	0xFF5
 25564                           prodh	equ	0xFF4
 25565                           prodl	equ	0xFF3
 25566                           intcon	equ	0xFF2
 25567                           intcon2	equ	0xFF1
 25568                           intcon3	equ	0xFF0
 25569                           indf0	equ	0xFEF
 25570                           postinc0	equ	0xFEE
 25571                           fsr0h	equ	0xFEA
 25572                           fsr0l	equ	0xFE9
 25573                           wreg	equ	0xFE8
 25574                           indf1	equ	0xFE7
 25575                           postdec1	equ	0xFE5
 25576                           fsr1h	equ	0xFE2
 25577                           fsr1l	equ	0xFE1
 25578                           indf2	equ	0xFDF
 25579                           postinc2	equ	0xFDE
 25580                           postdec2	equ	0xFDD
 25581                           plusw2	equ	0xFDB
 25582                           fsr2h	equ	0xFDA
 25583                           fsr2l	equ	0xFD9
 25584                           status	equ	0xFD8
 25585                           
 25586 ;; *************** function i2_USBDeviceInit *****************
 25587 ;; Defined at:
 25588 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 25589 ;; Parameters:    Size  Location     Type
 25590 ;;		None
 25591 ;; Auto vars:     Size  Location     Type
 25592 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 25593 ;; Return value:  Size  Location     Type
 25594 ;;                  1    wreg      void 
 25595 ;; Registers used:
 25596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25597 ;; Tracked objects:
 25598 ;;		On entry : 0/0
 25599 ;;		On exit  : 0/0
 25600 ;;		Unchanged: 0/0
 25601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25602 ;;      Params:         0       0       0       0       0       0       0       0       0
 25603 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25604 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25605 ;;      Totals:         1       0       0       0       0       0       0       0       0
 25606 ;;Total ram usage:        1 bytes
 25607 ;; Hardware stack levels used:    1
 25608 ;; Hardware stack levels required when called:    1
 25609 ;; This function calls:
 25610 ;;		i2_memset
 25611 ;; This function is called by:
 25612 ;;		_USBDeviceTasks
 25613 ;; This function uses a non-reentrant model
 25614 ;;
 25615                           
 25616                           	psect	text109
 25617  00304A                     __ptext109:
 25618                           	opt stack 0
 25619  00304A                     i2_USBDeviceInit:
 25620                           	opt stack 18
 25621                           
 25622                           ;usb_device.c: 239: uint8_t i;
 25623                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 25624                           
 25625                           ;incstack = 0
 25626  00304A  94A3               	bcf	4003,2,c	;volatile
 25627                           
 25628                           ;usb_device.c: 244: {UEIR = 0;};
 25629  00304C  0E00               	movlw	0
 25630  00304E  6E67               	movwf	3943,c	;volatile
 25631                           
 25632                           ;usb_device.c: 247: {UIR = 0;};
 25633  003050  0E00               	movlw	0
 25634  003052  6E65               	movwf	3941,c	;volatile
 25635                           
 25636                           ;usb_device.c: 250: UEP0 = 0;
 25637  003054  0E00               	movlw	0
 25638  003056  6E6A               	movwf	3946,c	;volatile
 25639                           
 25640                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 25641  003058  0E6B               	movlw	107
 25642  00305A  6E01               	movwf	i2memset@p1,c
 25643  00305C  0E0F               	movlw	15
 25644  00305E  6E02               	movwf	i2memset@p1+1,c
 25645  003060  0E00               	movlw	0
 25646  003062  6E04               	movwf	i2memset@c+1,c
 25647  003064  0E00               	movlw	0
 25648  003066  6E03               	movwf	i2memset@c,c
 25649  003068  0E00               	movlw	0
 25650  00306A  6E06               	movwf	i2memset@n+1,c
 25651  00306C  0E02               	movlw	2
 25652  00306E  6E05               	movwf	i2memset@n,c
 25653  003070  ECE5  F02E         	call	i2_memset	;wreg free
 25654                           
 25655                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 25656  003074  0E16               	movlw	22
 25657  003076  6E62               	movwf	3938,c	;volatile
 25658  003078  0E9F               	movlw	159
 25659  00307A  6E66               	movwf	3942,c	;volatile
 25660  00307C  0E7B               	movlw	123
 25661  00307E  6E64               	movwf	3940,c	;volatile
 25662                           
 25663                           ;usb_device.c: 257: ;
 25664                           ;usb_device.c: 260: ;
 25665                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 25666  003080  0E00               	movlw	0
 25667  003082  6E09               	movwf	i2USBDeviceInit@i,c
 25668  003084                     i2l11459:
 25669  003084  0E0B               	movlw	11
 25670  003086  6409               	cpfsgt	i2USBDeviceInit@i,c
 25671  003088  D001               	goto	i2l1854
 25672  00308A  D00E               	goto	i2u1014_40
 25673  00308C                     i2l1854:
 25674                           
 25675                           ;usb_device.c: 264: {
 25676                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 25677  00308C  5009               	movf	i2USBDeviceInit@i,w,c
 25678  00308E  0D04               	mullw	4
 25679  003090  0E00               	movlw	0
 25680  003092  24F3               	addwf	prodl,w,c
 25681  003094  6ED9               	movwf	fsr2l,c
 25682  003096  0E04               	movlw	4
 25683  003098  20F4               	addwfc	prodh,w,c
 25684  00309A  6EDA               	movwf	fsr2h,c
 25685  00309C  6ADE               	clrf	postinc2,c
 25686  00309E  6ADE               	clrf	postinc2,c
 25687  0030A0  6ADE               	clrf	postinc2,c
 25688  0030A2  6ADD               	clrf	postdec2,c
 25689  0030A4  2A09               	incf	i2USBDeviceInit@i,f,c
 25690  0030A6  D7EE               	goto	i2l11459
 25691  0030A8                     i2u1014_40:
 25692                           
 25693                           ;usb_device.c: 266: }
 25694                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 25695  0030A8  8C60               	bsf	3936,6,c	;volatile
 25696                           
 25697                           ;usb_device.c: 272: UADDR = 0x00;
 25698  0030AA  0E00               	movlw	0
 25699  0030AC  6E63               	movwf	3939,c	;volatile
 25700                           
 25701                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 25702  0030AE  9860               	bcf	3936,4,c	;volatile
 25703                           
 25704                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 25705  0030B0  9C60               	bcf	3936,6,c	;volatile
 25706                           
 25707                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 25708  0030B2  D00A               	goto	i2l1856
 25709  0030B4                     
 25710                           ;usb_device.c: 282: {
 25711                           ;usb_device.c: 283: (UIR &= 0xF7);
 25712  0030B4  9665               	bcf	3941,3,c	;volatile
 25713                           
 25714                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 25715  0030B6  0E00               	movlw	0
 25716  0030B8  0100               	movlb	0	; () banked
 25717  0030BA  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 25718                           
 25719                           ; BSR set to: 0
 25720                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 25721  0030BC  0E00               	movlw	0
 25722  0030BE  6FBF               	movwf	(_outPipes+3)& (0+255),b	;volatile
 25723                           
 25724                           ; BSR set to: 0
 25725                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 25726  0030C0  0E00               	movlw	0
 25727  0030C2  6FC1               	movwf	(_outPipes+5)& (0+255),b	;volatile
 25728  0030C4  0E00               	movlw	0
 25729  0030C6  6FC0               	movwf	(_outPipes+4)& (0+255),b	;volatile
 25730  0030C8                     i2l1856:
 25731                           
 25732                           ; BSR set to: 0
 25733  0030C8  B665               	btfsc	3941,3,c	;volatile
 25734  0030CA  D7F4               	goto	i2l1857
 25735                           
 25736                           ;usb_device.c: 288: }
 25737                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 25738  0030CC  0E01               	movlw	1
 25739  0030CE  6E46               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25740                           
 25741                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 25742  0030D0  0E01               	movlw	1
 25743  0030D2  6E45               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25744                           
 25745                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 25746  0030D4  0E00               	movlw	0
 25747  0030D6  6E44               	movwf	_USBDeferINDataStagePackets,c	;volatile
 25748                           
 25749                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 25750  0030D8  0E00               	movlw	0
 25751  0030DA  6E43               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 25752                           
 25753                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 25754  0030DC  0E00               	movlw	0
 25755  0030DE  0101               	movlb	1	; () banked
 25756  0030E0  6F5D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25757                           
 25758                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 25759  0030E2  0E00               	movlw	0
 25760  0030E4  6E09               	movwf	i2USBDeviceInit@i,c
 25761  0030E6                     i2l11487:
 25762                           
 25763                           ; BSR set to: 1
 25764  0030E6  0E02               	movlw	2
 25765  0030E8  6409               	cpfsgt	i2USBDeviceInit@i,c
 25766  0030EA  D001               	goto	i2l1859
 25767  0030EC  D02E               	goto	i2u1017_40
 25768  0030EE                     i2l1859:
 25769                           
 25770                           ;usb_device.c: 302: {
 25771                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 25772                           
 25773                           ; BSR set to: 1
 25774  0030EE  5009               	movf	i2USBDeviceInit@i,w,c
 25775  0030F0  0D02               	mullw	2
 25776  0030F2  0ECA               	movlw	low _pBDTEntryIn
 25777  0030F4  24F3               	addwf	prodl,w,c
 25778  0030F6  6ED9               	movwf	fsr2l,c
 25779  0030F8  0E00               	movlw	high _pBDTEntryIn
 25780  0030FA  20F4               	addwfc	prodh,w,c
 25781  0030FC  6EDA               	movwf	fsr2h,c
 25782  0030FE  0E00               	movlw	0
 25783  003100  6EDE               	movwf	postinc2,c
 25784  003102  0E00               	movlw	0
 25785  003104  6EDD               	movwf	postdec2,c
 25786                           
 25787                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 25788  003106  5009               	movf	i2USBDeviceInit@i,w,c
 25789  003108  0D02               	mullw	2
 25790  00310A  0E40               	movlw	low _pBDTEntryOut
 25791  00310C  24F3               	addwf	prodl,w,c
 25792  00310E  6ED9               	movwf	fsr2l,c
 25793  003110  0E01               	movlw	high _pBDTEntryOut
 25794  003112  20F4               	addwfc	prodh,w,c
 25795  003114  6EDA               	movwf	fsr2h,c
 25796  003116  0E00               	movlw	0
 25797  003118  6EDE               	movwf	postinc2,c
 25798  00311A  0E00               	movlw	0
 25799  00311C  6EDD               	movwf	postdec2,c
 25800                           
 25801                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 25802  00311E  5009               	movf	i2USBDeviceInit@i,w,c
 25803  003120  0D01               	mullw	1
 25804  003122  0ED3               	movlw	low _ep_data_in
 25805  003124  24F3               	addwf	prodl,w,c
 25806  003126  6ED9               	movwf	fsr2l,c
 25807  003128  0E00               	movlw	high _ep_data_in
 25808  00312A  20F4               	addwfc	prodh,w,c
 25809  00312C  6EDA               	movwf	fsr2h,c
 25810  00312E  0E00               	movlw	0
 25811  003130  6EDF               	movwf	indf2,c
 25812                           
 25813                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 25814  003132  5009               	movf	i2USBDeviceInit@i,w,c
 25815  003134  0D01               	mullw	1
 25816  003136  0ED0               	movlw	low _ep_data_out
 25817  003138  24F3               	addwf	prodl,w,c
 25818  00313A  6ED9               	movwf	fsr2l,c
 25819  00313C  0E00               	movlw	high _ep_data_out
 25820  00313E  20F4               	addwfc	prodh,w,c
 25821  003140  6EDA               	movwf	fsr2h,c
 25822  003142  0E00               	movlw	0
 25823  003144  6EDF               	movwf	indf2,c
 25824  003146  2A09               	incf	i2USBDeviceInit@i,f,c
 25825  003148  D7CE               	goto	i2l11487
 25826  00314A                     i2u1017_40:
 25827                           
 25828                           ;usb_device.c: 307: }
 25829                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 25830  00314A  0E08               	movlw	8
 25831  00314C  0100               	movlb	0	; () banked
 25832  00314E  6FCA               	movwf	_pBDTEntryIn& (0+255),b
 25833  003150  0E04               	movlw	4
 25834  003152  6FCB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 25835                           
 25836                           ; BSR set to: 0
 25837                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 25838  003154  0E16               	movlw	22
 25839  003156  6E6A               	movwf	3946,c	;volatile
 25840                           
 25841                           ; BSR set to: 0
 25842                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 25843  003158  0E04               	movlw	4
 25844  00315A  0104               	movlb	4	; () banked
 25845  00315C  6F03               	movwf	3,b	;volatile
 25846  00315E  0E30               	movlw	48
 25847  003160  6F02               	movwf	2,b	;volatile
 25848                           
 25849                           ; BSR set to: 4
 25850                           ;usb_device.c: 315: BDT[0].CNT = 8;
 25851  003162  0E08               	movlw	8
 25852  003164  6F01               	movwf	1,b	;volatile
 25853                           
 25854                           ; BSR set to: 4
 25855                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 25856  003166  0E04               	movlw	4
 25857  003168  6F00               	movwf	0,b	;volatile
 25858                           
 25859                           ; BSR set to: 4
 25860                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 25861  00316A  8F00               	bsf	0,7,b	;volatile
 25862                           
 25863                           ; BSR set to: 4
 25864                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 25865  00316C  0E00               	movlw	0
 25866  00316E  6E5B               	movwf	_USBActiveConfiguration,c	;volatile
 25867                           
 25868                           ; BSR set to: 4
 25869                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 25870  003170  0E00               	movlw	0
 25871  003172  0100               	movlb	0	; () banked
 25872  003174  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 25873                           
 25874                           ; BSR set to: 0
 25875  003176  0012               	return		;funcret
 25876  003178                     __end_ofi2_USBDeviceInit:
 25877                           	opt stack 0
 25878                           pclatu	equ	0xFFB
 25879                           pclath	equ	0xFFA
 25880                           tblptru	equ	0xFF8
 25881                           tblptrh	equ	0xFF7
 25882                           tblptrl	equ	0xFF6
 25883                           tablat	equ	0xFF5
 25884                           prodh	equ	0xFF4
 25885                           prodl	equ	0xFF3
 25886                           intcon	equ	0xFF2
 25887                           intcon2	equ	0xFF1
 25888                           intcon3	equ	0xFF0
 25889                           indf0	equ	0xFEF
 25890                           postinc0	equ	0xFEE
 25891                           fsr0h	equ	0xFEA
 25892                           fsr0l	equ	0xFE9
 25893                           wreg	equ	0xFE8
 25894                           indf1	equ	0xFE7
 25895                           postdec1	equ	0xFE5
 25896                           fsr1h	equ	0xFE2
 25897                           fsr1l	equ	0xFE1
 25898                           indf2	equ	0xFDF
 25899                           postinc2	equ	0xFDE
 25900                           postdec2	equ	0xFDD
 25901                           plusw2	equ	0xFDB
 25902                           fsr2h	equ	0xFDA
 25903                           fsr2l	equ	0xFD9
 25904                           status	equ	0xFD8
 25905                           
 25906 ;; *************** function _USBWakeFromSuspend *****************
 25907 ;; Defined at:
 25908 ;;		line 1944 in file "../Includes/Usb/Framework/usb_device.c"
 25909 ;; Parameters:    Size  Location     Type
 25910 ;;		None
 25911 ;; Auto vars:     Size  Location     Type
 25912 ;;		None
 25913 ;; Return value:  Size  Location     Type
 25914 ;;                  1    wreg      void 
 25915 ;; Registers used:
 25916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25917 ;; Tracked objects:
 25918 ;;		On entry : 0/0
 25919 ;;		On exit  : 0/0
 25920 ;;		Unchanged: 0/0
 25921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25922 ;;      Params:         0       0       0       0       0       0       0       0       0
 25923 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25924 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25925 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25926 ;;Total ram usage:        0 bytes
 25927 ;; Hardware stack levels used:    1
 25928 ;; Hardware stack levels required when called:    5
 25929 ;; This function calls:
 25930 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25931 ;; This function is called by:
 25932 ;;		_USBDeviceTasks
 25933 ;; This function uses a non-reentrant model
 25934 ;;
 25935                           
 25936                           	psect	text110
 25937  005CDE                     __ptext110:
 25938                           	opt stack 0
 25939  005CDE                     _USBWakeFromSuspend:
 25940                           	opt stack 14
 25941                           
 25942                           ;usb_device.c: 1946: USBBusIsSuspended = 0;
 25943                           
 25944                           ; BSR set to: 0
 25945                           ;incstack = 0
 25946  005CDE  0E00               	movlw	0
 25947  005CE0  0101               	movlb	1	; () banked
 25948  005CE2  6F5D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25949                           
 25950                           ; BSR set to: 1
 25951                           ;usb_device.c: 1952: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 25952  005CE4  0E00               	movlw	0
 25953  005CE6  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25954  005CE8  0E74               	movlw	116
 25955  005CEA  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25956  005CEC  0E00               	movlw	0
 25957  005CEE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25958  005CF0  0E00               	movlw	0
 25959  005CF2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25960  005CF4  0E00               	movlw	0
 25961  005CF6  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25962  005CF8  0E00               	movlw	0
 25963  005CFA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25964  005CFC  EC00  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25965                           
 25966                           ;usb_device.c: 1958: UCONbits.SUSPND = 0;
 25967  005D00  9260               	bcf	3936,1,c	;volatile
 25968                           
 25969                           ;usb_device.c: 1960: UIEbits.ACTVIE = 0;
 25970  005D02  9464               	bcf	3940,2,c	;volatile
 25971                           
 25972                           ;usb_device.c: 1976: while(UIRbits.ACTVIF)
 25973  005D04  D001               	goto	i2l2025
 25974  005D06                     
 25975                           ;usb_device.c: 1977: {
 25976                           ;usb_device.c: 1978: (UIR &= 0xFB);
 25977  005D06  9465               	bcf	3941,2,c	;volatile
 25978  005D08                     i2l2025:
 25979  005D08  A465               	btfss	3941,2,c	;volatile
 25980  005D0A  0012               	return	
 25981  005D0C  D7FC               	goto	i2l2026
 25982  005D0E                     __end_of_USBWakeFromSuspend:
 25983                           	opt stack 0
 25984                           pclatu	equ	0xFFB
 25985                           pclath	equ	0xFFA
 25986                           tblptru	equ	0xFF8
 25987                           tblptrh	equ	0xFF7
 25988                           tblptrl	equ	0xFF6
 25989                           tablat	equ	0xFF5
 25990                           prodh	equ	0xFF4
 25991                           prodl	equ	0xFF3
 25992                           intcon	equ	0xFF2
 25993                           intcon2	equ	0xFF1
 25994                           intcon3	equ	0xFF0
 25995                           indf0	equ	0xFEF
 25996                           postinc0	equ	0xFEE
 25997                           fsr0h	equ	0xFEA
 25998                           fsr0l	equ	0xFE9
 25999                           wreg	equ	0xFE8
 26000                           indf1	equ	0xFE7
 26001                           postdec1	equ	0xFE5
 26002                           fsr1h	equ	0xFE2
 26003                           fsr1l	equ	0xFE1
 26004                           indf2	equ	0xFDF
 26005                           postinc2	equ	0xFDE
 26006                           postdec2	equ	0xFDD
 26007                           plusw2	equ	0xFDB
 26008                           fsr2h	equ	0xFDA
 26009                           fsr2l	equ	0xFD9
 26010                           status	equ	0xFD8
 26011                           
 26012 ;; *************** function _USBSuspend *****************
 26013 ;; Defined at:
 26014 ;;		line 1889 in file "../Includes/Usb/Framework/usb_device.c"
 26015 ;; Parameters:    Size  Location     Type
 26016 ;;		None
 26017 ;; Auto vars:     Size  Location     Type
 26018 ;;		None
 26019 ;; Return value:  Size  Location     Type
 26020 ;;                  1    wreg      void 
 26021 ;; Registers used:
 26022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26023 ;; Tracked objects:
 26024 ;;		On entry : 0/0
 26025 ;;		On exit  : 0/0
 26026 ;;		Unchanged: 0/0
 26027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26028 ;;      Params:         0       0       0       0       0       0       0       0       0
 26029 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26030 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26031 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26032 ;;Total ram usage:        0 bytes
 26033 ;; Hardware stack levels used:    1
 26034 ;; Hardware stack levels required when called:    5
 26035 ;; This function calls:
 26036 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26037 ;; This function is called by:
 26038 ;;		_USBDeviceTasks
 26039 ;; This function uses a non-reentrant model
 26040 ;;
 26041                           
 26042                           	psect	text111
 26043  005E20                     __ptext111:
 26044                           	opt stack 0
 26045  005E20                     _USBSuspend:
 26046                           	opt stack 14
 26047                           
 26048                           ;usb_device.c: 1914: UIEbits.ACTVIE = 1;
 26049                           
 26050                           ;incstack = 0
 26051  005E20  8464               	bsf	3940,2,c	;volatile
 26052                           
 26053                           ;usb_device.c: 1915: (UIR &= 0xEF);
 26054  005E22  9865               	bcf	3941,4,c	;volatile
 26055                           
 26056                           ;usb_device.c: 1917: UCONbits.SUSPND = 1;
 26057  005E24  8260               	bsf	3936,1,c	;volatile
 26058                           
 26059                           ;usb_device.c: 1919: USBBusIsSuspended = 1;
 26060  005E26  0E01               	movlw	1
 26061  005E28  0101               	movlb	1	; () banked
 26062  005E2A  6F5D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 26063                           
 26064                           ; BSR set to: 1
 26065                           ;usb_device.c: 1926: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 26066  005E2C  0E00               	movlw	0
 26067  005E2E  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26068  005E30  0E75               	movlw	117
 26069  005E32  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26070  005E34  0E00               	movlw	0
 26071  005E36  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26072  005E38  0E00               	movlw	0
 26073  005E3A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26074  005E3C  0E00               	movlw	0
 26075  005E3E  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26076  005E40  0E00               	movlw	0
 26077  005E42  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26078  005E44  EC00  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26079  005E48  0012               	return		;funcret
 26080  005E4A                     __end_of_USBSuspend:
 26081                           	opt stack 0
 26082                           pclatu	equ	0xFFB
 26083                           pclath	equ	0xFFA
 26084                           tblptru	equ	0xFF8
 26085                           tblptrh	equ	0xFF7
 26086                           tblptrl	equ	0xFF6
 26087                           tablat	equ	0xFF5
 26088                           prodh	equ	0xFF4
 26089                           prodl	equ	0xFF3
 26090                           intcon	equ	0xFF2
 26091                           intcon2	equ	0xFF1
 26092                           intcon3	equ	0xFF0
 26093                           indf0	equ	0xFEF
 26094                           postinc0	equ	0xFEE
 26095                           fsr0h	equ	0xFEA
 26096                           fsr0l	equ	0xFE9
 26097                           wreg	equ	0xFE8
 26098                           indf1	equ	0xFE7
 26099                           postdec1	equ	0xFE5
 26100                           fsr1h	equ	0xFE2
 26101                           fsr1l	equ	0xFE1
 26102                           indf2	equ	0xFDF
 26103                           postinc2	equ	0xFDE
 26104                           postdec2	equ	0xFDD
 26105                           plusw2	equ	0xFDB
 26106                           fsr2h	equ	0xFDA
 26107                           fsr2l	equ	0xFD9
 26108                           status	equ	0xFD8
 26109                           
 26110 ;; *************** function _USBStallHandler *****************
 26111 ;; Defined at:
 26112 ;;		line 1846 in file "../Includes/Usb/Framework/usb_device.c"
 26113 ;; Parameters:    Size  Location     Type
 26114 ;;		None
 26115 ;; Auto vars:     Size  Location     Type
 26116 ;;		None
 26117 ;; Return value:  Size  Location     Type
 26118 ;;                  1    wreg      void 
 26119 ;; Registers used:
 26120 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26121 ;; Tracked objects:
 26122 ;;		On entry : 0/0
 26123 ;;		On exit  : 0/0
 26124 ;;		Unchanged: 0/0
 26125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26126 ;;      Params:         0       0       0       0       0       0       0       0       0
 26127 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26128 ;;      Temps:          1       0       0       0       0       0       0       0       0
 26129 ;;      Totals:         1       0       0       0       0       0       0       0       0
 26130 ;;Total ram usage:        1 bytes
 26131 ;; Hardware stack levels used:    1
 26132 ;; This function calls:
 26133 ;;		Nothing
 26134 ;; This function is called by:
 26135 ;;		_USBDeviceTasks
 26136 ;; This function uses a non-reentrant model
 26137 ;;
 26138                           
 26139                           	psect	text112
 26140  005926                     __ptext112:
 26141                           	opt stack 0
 26142  005926                     _USBStallHandler:
 26143                           	opt stack 19
 26144                           
 26145                           ;usb_device.c: 1858: if(UEP0bits.EPSTALL == 1)
 26146                           
 26147                           ;incstack = 0
 26148  005926  A06A               	btfss	3946,0,c	;volatile
 26149  005928  D01D               	goto	i2l2017
 26150                           
 26151                           ;usb_device.c: 1859: {
 26152                           ;usb_device.c: 1861: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 26153  00592A  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 26154  00592E  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 26155  005932  0E80               	movlw	128
 26156  005934  18DE               	xorwf	postinc2,w,c
 26157  005936  A4D8               	btfss	status,2,c
 26158  005938  D014               	goto	i2l2018
 26159  00593A  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 26160  00593E  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26161  005942  0E84               	movlw	132
 26162  005944  18DE               	xorwf	postinc2,w,c
 26163  005946  A4D8               	btfss	status,2,c
 26164  005948  D00C               	goto	i2l2018
 26165                           
 26166                           ;usb_device.c: 1862: {
 26167                           ;usb_device.c: 1864: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 26168  00594A  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 26169  00594E  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 26170  005952  0E0C               	movlw	12
 26171  005954  6EDF               	movwf	indf2,c
 26172                           
 26173                           ;usb_device.c: 1865: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 26174  005956  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 26175  00595A  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 26176  00595E  0E00               	movlw	0
 26177  005960  8EDB               	bsf	plusw2,7,c
 26178  005962                     i2l2018:
 26179                           
 26180                           ;usb_device.c: 1866: }
 26181                           ;usb_device.c: 1867: UEP0bits.EPSTALL = 0;
 26182  005962  906A               	bcf	3946,0,c	;volatile
 26183  005964                     i2l2017:
 26184                           
 26185                           ;usb_device.c: 1868: }
 26186                           ;usb_device.c: 1870: (UIR &= 0xDF);
 26187  005964  9A65               	bcf	3941,5,c	;volatile
 26188  005966  0012               	return		;funcret
 26189  005968                     __end_of_USBStallHandler:
 26190                           	opt stack 0
 26191                           pclatu	equ	0xFFB
 26192                           pclath	equ	0xFFA
 26193                           tblptru	equ	0xFF8
 26194                           tblptrh	equ	0xFF7
 26195                           tblptrl	equ	0xFF6
 26196                           tablat	equ	0xFF5
 26197                           prodh	equ	0xFF4
 26198                           prodl	equ	0xFF3
 26199                           intcon	equ	0xFF2
 26200                           intcon2	equ	0xFF1
 26201                           intcon3	equ	0xFF0
 26202                           indf0	equ	0xFEF
 26203                           postinc0	equ	0xFEE
 26204                           fsr0h	equ	0xFEA
 26205                           fsr0l	equ	0xFE9
 26206                           wreg	equ	0xFE8
 26207                           indf1	equ	0xFE7
 26208                           postdec1	equ	0xFE5
 26209                           fsr1h	equ	0xFE2
 26210                           fsr1l	equ	0xFE1
 26211                           indf2	equ	0xFDF
 26212                           postinc2	equ	0xFDE
 26213                           postdec2	equ	0xFDD
 26214                           plusw2	equ	0xFDB
 26215                           fsr2h	equ	0xFDA
 26216                           fsr2l	equ	0xFD9
 26217                           status	equ	0xFD8
 26218                           
 26219 ;; *************** function _USBCtrlEPService *****************
 26220 ;; Defined at:
 26221 ;;		line 2004 in file "../Includes/Usb/Framework/usb_device.c"
 26222 ;; Parameters:    Size  Location     Type
 26223 ;;		None
 26224 ;; Auto vars:     Size  Location     Type
 26225 ;;  setup_cnt       1   29[COMRAM] unsigned char 
 26226 ;; Return value:  Size  Location     Type
 26227 ;;                  1    wreg      void 
 26228 ;; Registers used:
 26229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 26230 ;; Tracked objects:
 26231 ;;		On entry : 0/0
 26232 ;;		On exit  : 0/0
 26233 ;;		Unchanged: 0/0
 26234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26235 ;;      Params:         0       0       0       0       0       0       0       0       0
 26236 ;;      Locals:         1       0       0       0       0       0       0       0       0
 26237 ;;      Temps:          2       0       0       0       0       0       0       0       0
 26238 ;;      Totals:         3       0       0       0       0       0       0       0       0
 26239 ;;Total ram usage:        3 bytes
 26240 ;; Hardware stack levels used:    1
 26241 ;; Hardware stack levels required when called:    8
 26242 ;; This function calls:
 26243 ;;		_USBCtrlTrfInHandler
 26244 ;;		_USBCtrlTrfOutHandler
 26245 ;;		_USBCtrlTrfSetupHandler
 26246 ;; This function is called by:
 26247 ;;		_USBDeviceTasks
 26248 ;; This function uses a non-reentrant model
 26249 ;;
 26250                           
 26251                           	psect	text113
 26252  004036                     __ptext113:
 26253                           	opt stack 0
 26254  004036                     _USBCtrlEPService:
 26255                           	opt stack 11
 26256                           
 26257                           ;usb_device.c: 2009: USBStatusStageTimeoutCounter = (uint8_t)45;
 26258                           
 26259                           ;incstack = 0
 26260  004036  0E2D               	movlw	45
 26261  004038  6E48               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 26262                           
 26263                           ;usb_device.c: 2012: if((USTATcopy.Val & ~0x02) == 0x00)
 26264  00403A  C05A  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 26265  00403E  0EFD               	movlw	253
 26266  004040  161C               	andwf	??_USBCtrlEPService,f,c
 26267  004042  A4D8               	btfss	status,2,c
 26268  004044  D057               	goto	i2l2031
 26269                           
 26270                           ;usb_device.c: 2013: {
 26271                           ;usb_device.c: 2015: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 26272  004046  C05A  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 26273  00404A  90D8               	bcf	status,0,c
 26274  00404C  321C               	rrcf	??_USBCtrlEPService,f,c
 26275  00404E  0E3F               	movlw	63
 26276  004050  161C               	andwf	??_USBCtrlEPService,f,c
 26277  004052  501C               	movf	??_USBCtrlEPService,w,c
 26278  004054  0D04               	mullw	4
 26279  004056  0E00               	movlw	0
 26280  004058  24F3               	addwf	prodl,w,c
 26281  00405A  6E38               	movwf	_pBDTEntryEP0OutCurrent,c
 26282  00405C  0E04               	movlw	4
 26283  00405E  20F4               	addwfc	prodh,w,c
 26284  004060  6E39               	movwf	_pBDTEntryEP0OutCurrent+1,c
 26285                           
 26286                           ;usb_device.c: 2019: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 26287  004062  C038  F036         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 26288  004066  C039  F037         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 26289                           
 26290                           ;usb_device.c: 2021: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 26291  00406A  0E04               	movlw	4
 26292  00406C  1A36               	xorwf	_pBDTEntryEP0OutNext,f,c
 26293                           
 26294                           ;usb_device.c: 2024: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 26295  00406E  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 26296  004072  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 26297  004076  30DF               	rrcf	indf2,w,c
 26298  004078  32E8               	rrcf	wreg,f,c
 26299  00407A  0B0F               	andlw	15
 26300  00407C  0A0D               	xorlw	13
 26301  00407E  A4D8               	btfss	status,2,c
 26302  004080  D036               	goto	i2l2032
 26303                           
 26304                           ;usb_device.c: 2025: {
 26305                           ;usb_device.c: 2026: unsigned char setup_cnt;
 26306                           ;usb_device.c: 2032: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 26307  004082  0E00               	movlw	0
 26308  004084  6E1E               	movwf	USBCtrlEPService@setup_cnt,c
 26309  004086                     i2l11419:
 26310  004086  0E07               	movlw	7
 26311  004088  641E               	cpfsgt	USBCtrlEPService@setup_cnt,c
 26312  00408A  D001               	goto	i2l2033
 26313  00408C  D023               	goto	i2u1011_40
 26314  00408E                     i2l2033:
 26315                           
 26316                           ;usb_device.c: 2033: {
 26317                           ;usb_device.c: 2034: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 26318  00408E  EE20 F002          	lfsr	2,2
 26319  004092  5038               	movf	_pBDTEntryEP0OutCurrent,w,c
 26320  004094  26D9               	addwf	fsr2l,f,c
 26321  004096  5039               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 26322  004098  22DA               	addwfc	fsr2h,f,c
 26323  00409A  CFDE F01C          	movff	postinc2,??_USBCtrlEPService
 26324  00409E  CFDD F01D          	movff	postdec2,??_USBCtrlEPService+1
 26325  0040A2  C01C  FFD9         	movff	??_USBCtrlEPService,fsr2l
 26326  0040A6  C01D  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 26327  0040AA  501E               	movf	USBCtrlEPService@setup_cnt,w,c
 26328  0040AC  0D01               	mullw	1
 26329  0040AE  0E30               	movlw	48
 26330  0040B0  24F3               	addwf	prodl,w,c
 26331  0040B2  6EE1               	movwf	fsr1l,c
 26332  0040B4  0E04               	movlw	4
 26333  0040B6  20F4               	addwfc	prodh,w,c
 26334  0040B8  6EE2               	movwf	fsr1h,c
 26335  0040BA  CFDF FFE7          	movff	indf2,indf1
 26336                           
 26337                           ;usb_device.c: 2035: pBDTEntryEP0OutCurrent->ADR++;
 26338  0040BE  EE20 F002          	lfsr	2,2
 26339  0040C2  5038               	movf	_pBDTEntryEP0OutCurrent,w,c
 26340  0040C4  26D9               	addwf	fsr2l,f,c
 26341  0040C6  5039               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 26342  0040C8  22DA               	addwfc	fsr2h,f,c
 26343  0040CA  2ADE               	incf	postinc2,f,c
 26344  0040CC  0E00               	movlw	0
 26345  0040CE  22DD               	addwfc	postdec2,f,c
 26346  0040D0  2A1E               	incf	USBCtrlEPService@setup_cnt,f,c
 26347  0040D2  D7D9               	goto	i2l11419
 26348  0040D4                     i2u1011_40:
 26349                           
 26350                           ;usb_device.c: 2036: }
 26351                           ;usb_device.c: 2037: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 26352  0040D4  EE20 F002          	lfsr	2,2
 26353  0040D8  5038               	movf	_pBDTEntryEP0OutCurrent,w,c
 26354  0040DA  26D9               	addwf	fsr2l,f,c
 26355  0040DC  5039               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 26356  0040DE  22DA               	addwfc	fsr2h,f,c
 26357  0040E0  0E30               	movlw	48
 26358  0040E2  6EDE               	movwf	postinc2,c
 26359  0040E4  0E04               	movlw	4
 26360  0040E6  6EDD               	movwf	postdec2,c
 26361                           
 26362                           ;usb_device.c: 2040: USBCtrlTrfSetupHandler();
 26363  0040E8  ECFB  F026         	call	_USBCtrlTrfSetupHandler	;wreg free
 26364                           
 26365                           ;usb_device.c: 2041: }
 26366  0040EC  0012               	return	
 26367  0040EE                     i2l2032:
 26368                           
 26369                           ;usb_device.c: 2042: else
 26370                           ;usb_device.c: 2043: {
 26371                           ;usb_device.c: 2045: USBCtrlTrfOutHandler();
 26372  0040EE  EC2E  F02B         	call	_USBCtrlTrfOutHandler	;wreg free
 26373                           
 26374                           ;usb_device.c: 2046: }
 26375                           ;usb_device.c: 2047: }
 26376  0040F2  0012               	return	
 26377  0040F4                     i2l2031:
 26378                           
 26379                           ;usb_device.c: 2048: else if((USTATcopy.Val & ~0x02) == 0x04)
 26380  0040F4  505A               	movf	_USTATcopy,w,c	;volatile
 26381  0040F6  0BFD               	andlw	253
 26382  0040F8  0A04               	xorlw	4
 26383  0040FA  A4D8               	btfss	status,2,c
 26384  0040FC  0012               	return	
 26385                           
 26386                           ;usb_device.c: 2049: {
 26387                           ;usb_device.c: 2052: USBCtrlTrfInHandler();
 26388  0040FE  EC70  F01E         	call	_USBCtrlTrfInHandler	;wreg free
 26389  004102  0012               	return	
 26390  004104                     __end_of_USBCtrlEPService:
 26391                           	opt stack 0
 26392                           pclatu	equ	0xFFB
 26393                           pclath	equ	0xFFA
 26394                           tblptru	equ	0xFF8
 26395                           tblptrh	equ	0xFF7
 26396                           tblptrl	equ	0xFF6
 26397                           tablat	equ	0xFF5
 26398                           prodh	equ	0xFF4
 26399                           prodl	equ	0xFF3
 26400                           intcon	equ	0xFF2
 26401                           intcon2	equ	0xFF1
 26402                           intcon3	equ	0xFF0
 26403                           indf0	equ	0xFEF
 26404                           postinc0	equ	0xFEE
 26405                           fsr0h	equ	0xFEA
 26406                           fsr0l	equ	0xFE9
 26407                           wreg	equ	0xFE8
 26408                           indf1	equ	0xFE7
 26409                           postdec1	equ	0xFE5
 26410                           fsr1h	equ	0xFE2
 26411                           fsr1l	equ	0xFE1
 26412                           indf2	equ	0xFDF
 26413                           postinc2	equ	0xFDE
 26414                           postdec2	equ	0xFDD
 26415                           plusw2	equ	0xFDB
 26416                           fsr2h	equ	0xFDA
 26417                           fsr2l	equ	0xFD9
 26418                           status	equ	0xFD8
 26419                           
 26420 ;; *************** function _USBCtrlTrfSetupHandler *****************
 26421 ;; Defined at:
 26422 ;;		line 2097 in file "../Includes/Usb/Framework/usb_device.c"
 26423 ;; Parameters:    Size  Location     Type
 26424 ;;		None
 26425 ;; Auto vars:     Size  Location     Type
 26426 ;;		None
 26427 ;; Return value:  Size  Location     Type
 26428 ;;                  1    wreg      void 
 26429 ;; Registers used:
 26430 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26431 ;; Tracked objects:
 26432 ;;		On entry : 0/0
 26433 ;;		On exit  : 0/0
 26434 ;;		Unchanged: 0/0
 26435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26436 ;;      Params:         0       0       0       0       0       0       0       0       0
 26437 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26438 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26439 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26440 ;;Total ram usage:        0 bytes
 26441 ;; Hardware stack levels used:    1
 26442 ;; Hardware stack levels required when called:    7
 26443 ;; This function calls:
 26444 ;;		_USBCheckStdRequest
 26445 ;;		_USBCtrlEPServiceComplete
 26446 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26447 ;; This function is called by:
 26448 ;;		_USBCtrlEPService
 26449 ;; This function uses a non-reentrant model
 26450 ;;
 26451                           
 26452                           	psect	text114
 26453  004DF6                     __ptext114:
 26454                           	opt stack 0
 26455  004DF6                     _USBCtrlTrfSetupHandler:
 26456                           	opt stack 11
 26457                           
 26458                           ;usb_device.c: 2102: shortPacketStatus = 0;
 26459                           
 26460                           ;incstack = 0
 26461  004DF6  0E00               	movlw	0
 26462  004DF8  6E4D               	movwf	_shortPacketStatus,c	;volatile
 26463                           
 26464                           ;usb_device.c: 2103: USBDeferStatusStagePacket = 0;
 26465  004DFA  0E00               	movlw	0
 26466  004DFC  6E47               	movwf	_USBDeferStatusStagePacket,c	;volatile
 26467                           
 26468                           ;usb_device.c: 2104: USBDeferINDataStagePackets = 0;
 26469  004DFE  0E00               	movlw	0
 26470  004E00  6E44               	movwf	_USBDeferINDataStagePackets,c	;volatile
 26471                           
 26472                           ;usb_device.c: 2105: USBDeferOUTDataStagePackets = 0;
 26473  004E02  0E00               	movlw	0
 26474  004E04  6E43               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 26475                           
 26476                           ;usb_device.c: 2106: BothEP0OutUOWNsSet = 0;
 26477  004E06  0E00               	movlw	0
 26478  004E08  6E49               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 26479                           
 26480                           ;usb_device.c: 2107: controlTransferState = 0;
 26481  004E0A  0E00               	movlw	0
 26482  004E0C  6E4C               	movwf	_controlTransferState,c	;volatile
 26483                           
 26484                           ;usb_device.c: 2116: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 26485  004E0E  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 26486  004E12  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26487  004E16  0E7F               	movlw	127
 26488  004E18  16DF               	andwf	indf2,f,c
 26489                           
 26490                           ;usb_device.c: 2117: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 26491  004E1A  0E04               	movlw	4
 26492  004E1C  0100               	movlb	0	; () banked
 26493  004E1E  1BCA               	xorwf	_pBDTEntryIn& (0+255),f,b
 26494                           
 26495                           ; BSR set to: 0
 26496                           ;usb_device.c: 2118: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 26497  004E20  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 26498  004E24  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26499  004E28  0E7F               	movlw	127
 26500  004E2A  16DF               	andwf	indf2,f,c
 26501                           
 26502                           ; BSR set to: 0
 26503                           ;usb_device.c: 2119: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 26504  004E2C  0E04               	movlw	4
 26505  004E2E  1BCA               	xorwf	_pBDTEntryIn& (0+255),f,b
 26506                           
 26507                           ; BSR set to: 0
 26508                           ;usb_device.c: 2120: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 26509  004E30  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26510  004E34  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26511  004E38  0E7F               	movlw	127
 26512  004E3A  16DF               	andwf	indf2,f,c
 26513                           
 26514                           ; BSR set to: 0
 26515                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 26516  004E3C  0E00               	movlw	0
 26517  004E3E  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26518                           
 26519                           ; BSR set to: 0
 26520                           ;usb_device.c: 2123: inPipes[0].wCount.Val = 0;
 26521  004E40  0E00               	movlw	0
 26522  004E42  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 26523  004E44  0E00               	movlw	0
 26524  004E46  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26525                           
 26526                           ; BSR set to: 0
 26527                           ;usb_device.c: 2124: outPipes[0].info.Val = 0;
 26528  004E48  0E00               	movlw	0
 26529  004E4A  6FBF               	movwf	(_outPipes+3)& (0+255),b	;volatile
 26530                           
 26531                           ; BSR set to: 0
 26532                           ;usb_device.c: 2125: outPipes[0].wCount.Val = 0;
 26533  004E4C  0E00               	movlw	0
 26534  004E4E  6FC1               	movwf	(_outPipes+5)& (0+255),b	;volatile
 26535  004E50  0E00               	movlw	0
 26536  004E52  6FC0               	movwf	(_outPipes+4)& (0+255),b	;volatile
 26537                           
 26538                           ; BSR set to: 0
 26539                           ;usb_device.c: 2131: USBCheckStdRequest();
 26540  004E54  ECAF  F01C         	call	_USBCheckStdRequest	;wreg free
 26541                           
 26542                           ;usb_device.c: 2132: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 26543  004E58  0E00               	movlw	0
 26544  004E5A  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26545  004E5C  0E03               	movlw	3
 26546  004E5E  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26547  004E60  0E00               	movlw	0
 26548  004E62  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26549  004E64  0E00               	movlw	0
 26550  004E66  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26551  004E68  0E00               	movlw	0
 26552  004E6A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26553  004E6C  0E00               	movlw	0
 26554  004E6E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26555  004E70  EC00  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26556                           
 26557                           ;usb_device.c: 2145: USBCtrlEPServiceComplete();
 26558  004E74  ECD4  F01A         	call	_USBCtrlEPServiceComplete	;wreg free
 26559  004E78  0012               	return		;funcret
 26560  004E7A                     __end_of_USBCtrlTrfSetupHandler:
 26561                           	opt stack 0
 26562                           pclatu	equ	0xFFB
 26563                           pclath	equ	0xFFA
 26564                           tblptru	equ	0xFF8
 26565                           tblptrh	equ	0xFF7
 26566                           tblptrl	equ	0xFF6
 26567                           tablat	equ	0xFF5
 26568                           prodh	equ	0xFF4
 26569                           prodl	equ	0xFF3
 26570                           intcon	equ	0xFF2
 26571                           intcon2	equ	0xFF1
 26572                           intcon3	equ	0xFF0
 26573                           indf0	equ	0xFEF
 26574                           postinc0	equ	0xFEE
 26575                           fsr0h	equ	0xFEA
 26576                           fsr0l	equ	0xFE9
 26577                           wreg	equ	0xFE8
 26578                           indf1	equ	0xFE7
 26579                           postdec1	equ	0xFE5
 26580                           fsr1h	equ	0xFE2
 26581                           fsr1l	equ	0xFE1
 26582                           indf2	equ	0xFDF
 26583                           postinc2	equ	0xFDE
 26584                           postdec2	equ	0xFDD
 26585                           plusw2	equ	0xFDB
 26586                           fsr2h	equ	0xFDA
 26587                           fsr2l	equ	0xFD9
 26588                           status	equ	0xFD8
 26589                           
 26590 ;; *************** function _USBCtrlEPServiceComplete *****************
 26591 ;; Defined at:
 26592 ;;		line 1282 in file "../Includes/Usb/Framework/usb_device.c"
 26593 ;; Parameters:    Size  Location     Type
 26594 ;;		None
 26595 ;; Auto vars:     Size  Location     Type
 26596 ;;		None
 26597 ;; Return value:  Size  Location     Type
 26598 ;;                  1    wreg      void 
 26599 ;; Registers used:
 26600 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26601 ;; Tracked objects:
 26602 ;;		On entry : 0/0
 26603 ;;		On exit  : 0/0
 26604 ;;		Unchanged: 0/0
 26605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26606 ;;      Params:         0       0       0       0       0       0       0       0       0
 26607 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26608 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26609 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26610 ;;Total ram usage:        0 bytes
 26611 ;; Hardware stack levels used:    1
 26612 ;; Hardware stack levels required when called:    2
 26613 ;; This function calls:
 26614 ;;		_USBCtrlEPAllowDataStage
 26615 ;;		_USBCtrlEPAllowStatusStage
 26616 ;; This function is called by:
 26617 ;;		_USBCtrlTrfSetupHandler
 26618 ;; This function uses a non-reentrant model
 26619 ;;
 26620                           
 26621                           	psect	text115
 26622  0035A8                     __ptext115:
 26623                           	opt stack 0
 26624  0035A8                     _USBCtrlEPServiceComplete:
 26625                           	opt stack 15
 26626                           
 26627                           ;usb_device.c: 1288: UCONbits.PKTDIS = 0;
 26628                           
 26629                           ;incstack = 0
 26630  0035A8  9860               	bcf	3936,4,c	;volatile
 26631                           
 26632                           ;usb_device.c: 1294: if(inPipes[0].info.bits.busy == 0)
 26633  0035AA  0100               	movlb	0	; () banked
 26634  0035AC  BFC7               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 26635  0035AE  D038               	goto	i2l1941
 26636                           
 26637                           ; BSR set to: 0
 26638                           ;usb_device.c: 1295: {
 26639                           ;usb_device.c: 1296: if(outPipes[0].info.bits.busy == 1)
 26640  0035B0  AFBF               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 26641  0035B2  D00B               	goto	i2l1942
 26642                           
 26643                           ; BSR set to: 0
 26644                           ;usb_device.c: 1297: {
 26645                           ;usb_device.c: 1298: controlTransferState = 2;
 26646  0035B4  0E02               	movlw	2
 26647  0035B6  6E4C               	movwf	_controlTransferState,c	;volatile
 26648                           
 26649                           ;usb_device.c: 1309: if(USBDeferOUTDataStagePackets == 0)
 26650  0035B8  5043               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 26651  0035BA  B4D8               	btfsc	status,2,c
 26652                           
 26653                           ; BSR set to: 0
 26654                           ;usb_device.c: 1310: {
 26655                           ;usb_device.c: 1311: USBCtrlEPAllowDataStage();
 26656  0035BC  EC76  F024         	call	_USBCtrlEPAllowDataStage	;wreg free
 26657                           
 26658                           ;usb_device.c: 1312: }
 26659                           ;usb_device.c: 1316: USBStatusStageEnabledFlag2 = 0;
 26660  0035C0  0E00               	movlw	0
 26661  0035C2  6E45               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 26662                           
 26663                           ;usb_device.c: 1317: USBStatusStageEnabledFlag1 = 0;
 26664  0035C4  0E00               	movlw	0
 26665  0035C6  6E46               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 26666                           
 26667                           ;usb_device.c: 1318: }
 26668  0035C8  0012               	return	
 26669  0035CA                     i2l1942:
 26670                           
 26671                           ;usb_device.c: 1319: else
 26672                           ;usb_device.c: 1320: {
 26673                           ;usb_device.c: 1325: pBDTEntryEP0OutNext->CNT = 8;
 26674  0035CA  EE20 F001          	lfsr	2,1
 26675  0035CE  5036               	movf	_pBDTEntryEP0OutNext,w,c
 26676  0035D0  26D9               	addwf	fsr2l,f,c
 26677  0035D2  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
 26678  0035D4  22DA               	addwfc	fsr2h,f,c
 26679  0035D6  0E08               	movlw	8
 26680  0035D8  6EDF               	movwf	indf2,c
 26681                           
 26682                           ;usb_device.c: 1326: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 26683  0035DA  EE20 F002          	lfsr	2,2
 26684  0035DE  5036               	movf	_pBDTEntryEP0OutNext,w,c
 26685  0035E0  26D9               	addwf	fsr2l,f,c
 26686  0035E2  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
 26687  0035E4  22DA               	addwfc	fsr2h,f,c
 26688  0035E6  0E30               	movlw	48
 26689  0035E8  6EDE               	movwf	postinc2,c
 26690  0035EA  0E04               	movlw	4
 26691  0035EC  6EDD               	movwf	postdec2,c
 26692                           
 26693                           ;usb_device.c: 1327: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 26694  0035EE  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26695  0035F2  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26696  0035F6  0E0C               	movlw	12
 26697  0035F8  6EDF               	movwf	indf2,c
 26698                           
 26699                           ;usb_device.c: 1328: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26700  0035FA  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26701  0035FE  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26702  003602  0E00               	movlw	0
 26703  003604  8EDB               	bsf	plusw2,7,c
 26704                           
 26705                           ;usb_device.c: 1329: pBDTEntryIn[0]->STAT.Val = 0x04;
 26706  003606  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 26707  00360A  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26708  00360E  0E04               	movlw	4
 26709  003610  6EDF               	movwf	indf2,c
 26710                           
 26711                           ;usb_device.c: 1330: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26712  003612  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 26713  003616  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26714  00361A  0E00               	movlw	0
 26715  00361C  8EDB               	bsf	plusw2,7,c
 26716                           
 26717                           ;usb_device.c: 1331: }
 26718                           ;usb_device.c: 1332: }
 26719  00361E  0012               	return	
 26720  003620                     i2l1941:
 26721                           
 26722                           ; BSR set to: 0
 26723                           ;usb_device.c: 1333: else
 26724                           ;usb_device.c: 1334: {
 26725                           ;usb_device.c: 1335: if(SetupPkt.DataDir == (0x80>>7))
 26726  003620  0104               	movlb	4	; () banked
 26727  003622  AF30               	btfss	48,7,b	;volatile
 26728  003624  D010               	goto	i2l1946
 26729                           
 26730                           ; BSR set to: 4
 26731                           ;usb_device.c: 1336: {
 26732                           ;usb_device.c: 1337: controlTransferState = 1;
 26733  003626  0E01               	movlw	1
 26734  003628  6E4C               	movwf	_controlTransferState,c	;volatile
 26735                           
 26736                           ;usb_device.c: 1351: if(USBDeferINDataStagePackets == 0)
 26737  00362A  5044               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 26738  00362C  B4D8               	btfsc	status,2,c
 26739                           
 26740                           ; BSR set to: 4
 26741                           ;usb_device.c: 1352: {
 26742                           ;usb_device.c: 1353: USBCtrlEPAllowDataStage();
 26743  00362E  EC76  F024         	call	_USBCtrlEPAllowDataStage	;wreg free
 26744                           
 26745                           ;usb_device.c: 1354: }
 26746                           ;usb_device.c: 1376: USBStatusStageEnabledFlag2 = 0;
 26747  003632  0E00               	movlw	0
 26748  003634  6E45               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 26749                           
 26750                           ;usb_device.c: 1377: USBStatusStageEnabledFlag1 = 0;
 26751  003636  0E00               	movlw	0
 26752  003638  6E46               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 26753                           
 26754                           ;usb_device.c: 1378: if(USBDeferStatusStagePacket == 0)
 26755  00363A  5047               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 26756  00363C  A4D8               	btfss	status,2,c
 26757  00363E  0012               	return	
 26758                           
 26759                           ;usb_device.c: 1379: {
 26760                           ;usb_device.c: 1380: USBCtrlEPAllowStatusStage();
 26761  003640  ECE5  F020         	call	_USBCtrlEPAllowStatusStage	;wreg free
 26762                           
 26763                           ;usb_device.c: 1381: }
 26764                           ;usb_device.c: 1382: }
 26765  003644  0012               	return	
 26766  003646                     i2l1946:
 26767                           
 26768                           ;usb_device.c: 1383: else
 26769                           ;usb_device.c: 1384: {
 26770                           ;usb_device.c: 1395: controlTransferState = 2;
 26771  003646  0E02               	movlw	2
 26772  003648  6E4C               	movwf	_controlTransferState,c	;volatile
 26773                           
 26774                           ;usb_device.c: 1398: pBDTEntryEP0OutNext->CNT = 8;
 26775  00364A  EE20 F001          	lfsr	2,1
 26776  00364E  5036               	movf	_pBDTEntryEP0OutNext,w,c
 26777  003650  26D9               	addwf	fsr2l,f,c
 26778  003652  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
 26779  003654  22DA               	addwfc	fsr2h,f,c
 26780  003656  0E08               	movlw	8
 26781  003658  6EDF               	movwf	indf2,c
 26782                           
 26783                           ;usb_device.c: 1399: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 26784  00365A  EE20 F002          	lfsr	2,2
 26785  00365E  5036               	movf	_pBDTEntryEP0OutNext,w,c
 26786  003660  26D9               	addwf	fsr2l,f,c
 26787  003662  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
 26788  003664  22DA               	addwfc	fsr2h,f,c
 26789  003666  0E30               	movlw	48
 26790  003668  6EDE               	movwf	postinc2,c
 26791  00366A  0E04               	movlw	4
 26792  00366C  6EDD               	movwf	postdec2,c
 26793                           
 26794                           ;usb_device.c: 1400: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 26795  00366E  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26796  003672  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26797  003676  0E04               	movlw	4
 26798  003678  6EDF               	movwf	indf2,c
 26799                           
 26800                           ;usb_device.c: 1401: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26801  00367A  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26802  00367E  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26803  003682  0E00               	movlw	0
 26804  003684  8EDB               	bsf	plusw2,7,c
 26805                           
 26806                           ;usb_device.c: 1404: USBStatusStageEnabledFlag2 = 0;
 26807  003686  0E00               	movlw	0
 26808  003688  6E45               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 26809                           
 26810                           ;usb_device.c: 1405: USBStatusStageEnabledFlag1 = 0;
 26811  00368A  0E00               	movlw	0
 26812  00368C  6E46               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 26813                           
 26814                           ;usb_device.c: 1406: if(USBDeferStatusStagePacket == 0)
 26815  00368E  5047               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 26816  003690  A4D8               	btfss	status,2,c
 26817  003692  0012               	return	
 26818                           
 26819                           ;usb_device.c: 1407: {
 26820                           ;usb_device.c: 1408: USBCtrlEPAllowStatusStage();
 26821  003694  ECE5  F020         	call	_USBCtrlEPAllowStatusStage	;wreg free
 26822  003698  0012               	return	
 26823  00369A                     __end_of_USBCtrlEPServiceComplete:
 26824                           	opt stack 0
 26825                           pclatu	equ	0xFFB
 26826                           pclath	equ	0xFFA
 26827                           tblptru	equ	0xFF8
 26828                           tblptrh	equ	0xFF7
 26829                           tblptrl	equ	0xFF6
 26830                           tablat	equ	0xFF5
 26831                           prodh	equ	0xFF4
 26832                           prodl	equ	0xFF3
 26833                           intcon	equ	0xFF2
 26834                           intcon2	equ	0xFF1
 26835                           intcon3	equ	0xFF0
 26836                           indf0	equ	0xFEF
 26837                           postinc0	equ	0xFEE
 26838                           fsr0h	equ	0xFEA
 26839                           fsr0l	equ	0xFE9
 26840                           wreg	equ	0xFE8
 26841                           indf1	equ	0xFE7
 26842                           postdec1	equ	0xFE5
 26843                           fsr1h	equ	0xFE2
 26844                           fsr1l	equ	0xFE1
 26845                           indf2	equ	0xFDF
 26846                           postinc2	equ	0xFDE
 26847                           postdec2	equ	0xFDD
 26848                           plusw2	equ	0xFDB
 26849                           fsr2h	equ	0xFDA
 26850                           fsr2l	equ	0xFD9
 26851                           status	equ	0xFD8
 26852                           
 26853 ;; *************** function _USBCtrlEPAllowDataStage *****************
 26854 ;; Defined at:
 26855 ;;		line 1173 in file "../Includes/Usb/Framework/usb_device.c"
 26856 ;; Parameters:    Size  Location     Type
 26857 ;;		None
 26858 ;; Auto vars:     Size  Location     Type
 26859 ;;		None
 26860 ;; Return value:  Size  Location     Type
 26861 ;;                  1    wreg      void 
 26862 ;; Registers used:
 26863 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26864 ;; Tracked objects:
 26865 ;;		On entry : 0/0
 26866 ;;		On exit  : 0/0
 26867 ;;		Unchanged: 0/0
 26868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26869 ;;      Params:         0       0       0       0       0       0       0       0       0
 26870 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26871 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26872 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26873 ;;Total ram usage:        0 bytes
 26874 ;; Hardware stack levels used:    1
 26875 ;; Hardware stack levels required when called:    1
 26876 ;; This function calls:
 26877 ;;		_USBCtrlTrfTxService
 26878 ;; This function is called by:
 26879 ;;		_USBCtrlEPServiceComplete
 26880 ;; This function uses a non-reentrant model
 26881 ;;
 26882                           
 26883                           	psect	text116
 26884  0048EC                     __ptext116:
 26885                           	opt stack 0
 26886  0048EC                     _USBCtrlEPAllowDataStage:
 26887                           	opt stack 15
 26888                           
 26889                           ;usb_device.c: 1175: USBDeferINDataStagePackets = 0;
 26890                           
 26891                           ;incstack = 0
 26892  0048EC  0E00               	movlw	0
 26893  0048EE  6E44               	movwf	_USBDeferINDataStagePackets,c	;volatile
 26894                           
 26895                           ;usb_device.c: 1176: USBDeferOUTDataStagePackets = 0;
 26896  0048F0  0E00               	movlw	0
 26897  0048F2  6E43               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 26898                           
 26899                           ;usb_device.c: 1178: if(controlTransferState == 2)
 26900  0048F4  0E02               	movlw	2
 26901  0048F6  184C               	xorwf	_controlTransferState,w,c	;volatile
 26902  0048F8  A4D8               	btfss	status,2,c
 26903  0048FA  D01F               	goto	i2l1930
 26904                           
 26905                           ;usb_device.c: 1179: {
 26906                           ;usb_device.c: 1181: pBDTEntryEP0OutNext->CNT = 8;
 26907  0048FC  EE20 F001          	lfsr	2,1
 26908  004900  5036               	movf	_pBDTEntryEP0OutNext,w,c
 26909  004902  26D9               	addwf	fsr2l,f,c
 26910  004904  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
 26911  004906  22DA               	addwfc	fsr2h,f,c
 26912  004908  0E08               	movlw	8
 26913  00490A  6EDF               	movwf	indf2,c
 26914                           
 26915                           ;usb_device.c: 1182: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 26916  00490C  EE20 F002          	lfsr	2,2
 26917  004910  5036               	movf	_pBDTEntryEP0OutNext,w,c
 26918  004912  26D9               	addwf	fsr2l,f,c
 26919  004914  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
 26920  004916  22DA               	addwfc	fsr2h,f,c
 26921  004918  0E38               	movlw	56
 26922  00491A  6EDE               	movwf	postinc2,c
 26923  00491C  0E04               	movlw	4
 26924  00491E  6EDD               	movwf	postdec2,c
 26925                           
 26926                           ;usb_device.c: 1183: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 26927  004920  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26928  004924  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26929  004928  0E48               	movlw	72
 26930  00492A  6EDF               	movwf	indf2,c
 26931                           
 26932                           ;usb_device.c: 1184: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26933  00492C  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26934  004930  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26935  004934  0E00               	movlw	0
 26936  004936  8EDB               	bsf	plusw2,7,c
 26937                           
 26938                           ;usb_device.c: 1185: }
 26939  004938  0012               	return	
 26940  00493A                     i2l1930:
 26941                           
 26942                           ;usb_device.c: 1186: else
 26943                           ;usb_device.c: 1187: {
 26944                           ;usb_device.c: 1190: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 26945  00493A  0100               	movlb	0	; () banked
 26946  00493C  51C8               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 26947  00493E  0104               	movlb	4	; () banked
 26948  004940  5D36               	subwf	54,w,b	;volatile
 26949  004942  0100               	movlb	0	; () banked
 26950  004944  51C9               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 26951  004946  0104               	movlb	4	; () banked
 26952  004948  5937               	subwfb	55,w,b	;volatile
 26953  00494A  B0D8               	btfsc	status,0,c
 26954  00494C  D004               	goto	i2l1932
 26955                           
 26956                           ; BSR set to: 4
 26957                           ;usb_device.c: 1191: {
 26958                           ;usb_device.c: 1192: inPipes[0].wCount.Val = SetupPkt.wLength;
 26959  00494E  C436 F0C8          	movff	1078,_inPipes+4	;volatile
 26960  004952  C437 F0C9          	movff	1079,_inPipes+5	;volatile
 26961  004956                     i2l1932:
 26962                           
 26963                           ; BSR set to: 4
 26964                           ;usb_device.c: 1193: }
 26965                           ;usb_device.c: 1194: USBCtrlTrfTxService();
 26966                           
 26967                           ; BSR set to: 4
 26968  004956  EC48  F01F         	call	_USBCtrlTrfTxService	;wreg free
 26969                           
 26970                           ;usb_device.c: 1199: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 26971  00495A  0100               	movlb	0	; () banked
 26972  00495C  EE20 F002          	lfsr	2,2
 26973  004960  51CA               	movf	_pBDTEntryIn& (0+255),w,b
 26974  004962  26D9               	addwf	fsr2l,f,c
 26975  004964  51CB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 26976  004966  22DA               	addwfc	fsr2h,f,c
 26977  004968  0E38               	movlw	56
 26978  00496A  6EDE               	movwf	postinc2,c
 26979  00496C  0E04               	movlw	4
 26980  00496E  6EDD               	movwf	postdec2,c
 26981                           
 26982                           ; BSR set to: 0
 26983                           ;usb_device.c: 1200: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 26984  004970  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 26985  004974  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26986  004978  0E48               	movlw	72
 26987  00497A  6EDF               	movwf	indf2,c
 26988                           
 26989                           ; BSR set to: 0
 26990                           ;usb_device.c: 1201: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26991  00497C  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 26992  004980  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26993  004984  0E00               	movlw	0
 26994  004986  8EDB               	bsf	plusw2,7,c
 26995  004988  0012               	return	
 26996  00498A                     __end_of_USBCtrlEPAllowDataStage:
 26997                           	opt stack 0
 26998                           pclatu	equ	0xFFB
 26999                           pclath	equ	0xFFA
 27000                           tblptru	equ	0xFF8
 27001                           tblptrh	equ	0xFF7
 27002                           tblptrl	equ	0xFF6
 27003                           tablat	equ	0xFF5
 27004                           prodh	equ	0xFF4
 27005                           prodl	equ	0xFF3
 27006                           intcon	equ	0xFF2
 27007                           intcon2	equ	0xFF1
 27008                           intcon3	equ	0xFF0
 27009                           indf0	equ	0xFEF
 27010                           postinc0	equ	0xFEE
 27011                           fsr0h	equ	0xFEA
 27012                           fsr0l	equ	0xFE9
 27013                           wreg	equ	0xFE8
 27014                           indf1	equ	0xFE7
 27015                           postdec1	equ	0xFE5
 27016                           fsr1h	equ	0xFE2
 27017                           fsr1l	equ	0xFE1
 27018                           indf2	equ	0xFDF
 27019                           postinc2	equ	0xFDE
 27020                           postdec2	equ	0xFDD
 27021                           plusw2	equ	0xFDB
 27022                           fsr2h	equ	0xFDA
 27023                           fsr2l	equ	0xFD9
 27024                           status	equ	0xFD8
 27025                           
 27026 ;; *************** function _USBCheckStdRequest *****************
 27027 ;; Defined at:
 27028 ;;		line 2317 in file "../Includes/Usb/Framework/usb_device.c"
 27029 ;; Parameters:    Size  Location     Type
 27030 ;;		None
 27031 ;; Auto vars:     Size  Location     Type
 27032 ;;		None
 27033 ;; Return value:  Size  Location     Type
 27034 ;;                  1    wreg      void 
 27035 ;; Registers used:
 27036 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27037 ;; Tracked objects:
 27038 ;;		On entry : 0/0
 27039 ;;		On exit  : 0/0
 27040 ;;		Unchanged: 0/0
 27041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27042 ;;      Params:         0       0       0       0       0       0       0       0       0
 27043 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27044 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27045 ;;      Totals:         0       0       0       0       0       0       0       0       0
 27046 ;;Total ram usage:        0 bytes
 27047 ;; Hardware stack levels used:    1
 27048 ;; Hardware stack levels required when called:    6
 27049 ;; This function calls:
 27050 ;;		_USBStdFeatureReqHandler
 27051 ;;		_USBStdGetDscHandler
 27052 ;;		_USBStdGetStatusHandler
 27053 ;;		_USBStdSetCfgHandler
 27054 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27055 ;; This function is called by:
 27056 ;;		_USBCtrlTrfSetupHandler
 27057 ;; This function uses a non-reentrant model
 27058 ;;
 27059                           
 27060                           	psect	text117
 27061  00395E                     __ptext117:
 27062                           	opt stack 0
 27063  00395E                     _USBCheckStdRequest:
 27064                           	opt stack 11
 27065                           
 27066                           ;usb_device.c: 2319: if(SetupPkt.RequestType != (0x00>>5)) return;
 27067                           
 27068                           ;incstack = 0
 27069  00395E  0104               	movlb	4	; () banked
 27070  003960  3930               	swapf	48,w,b	;volatile
 27071  003962  32E8               	rrcf	wreg,f,c
 27072  003964  0B03               	andlw	3
 27073  003966  0900               	iorlw	0
 27074  003968  A4D8               	btfss	status,2,c
 27075  00396A  0012               	return	
 27076  00396C  D047               	goto	i2l2067
 27077  00396E                     i2l2068:
 27078                           
 27079                           ; BSR set to: 4
 27080                           ;usb_device.c: 2324: inPipes[0].info.bits.busy = 1;
 27081  00396E  0100               	movlb	0	; () banked
 27082  003970  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27083                           
 27084                           ; BSR set to: 0
 27085                           ;usb_device.c: 2325: USBDeviceState = ADR_PENDING_STATE;
 27086  003972  0E08               	movlw	8
 27087  003974  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 27088                           
 27089                           ;usb_device.c: 2327: break;
 27090  003976  0012               	return	
 27091  003978                     
 27092                           ;usb_device.c: 2329: USBStdGetDscHandler();
 27093                           
 27094                           ; BSR set to: 0
 27095  003978  ECBC  F015         	call	_USBStdGetDscHandler	;wreg free
 27096                           
 27097                           ;usb_device.c: 2330: break;
 27098  00397C  0012               	return	
 27099  00397E                     
 27100                           ;usb_device.c: 2332: USBStdSetCfgHandler();
 27101  00397E  EC20  F01D         	call	_USBStdSetCfgHandler	;wreg free
 27102                           
 27103                           ;usb_device.c: 2333: break;
 27104  003982  0012               	return	
 27105  003984                     
 27106                           ;usb_device.c: 2335: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 27107  003984  0E5B               	movlw	low _USBActiveConfiguration
 27108  003986  0100               	movlb	0	; () banked
 27109  003988  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 27110  00398A  0E00               	movlw	high _USBActiveConfiguration
 27111  00398C  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27112                           
 27113                           ; BSR set to: 0
 27114                           ;usb_device.c: 2336: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27115  00398E  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 27116                           
 27117                           ; BSR set to: 0
 27118                           ;usb_device.c: 2337: inPipes[0].wCount.v[0] = 1;
 27119  003990  0E01               	movlw	1
 27120  003992  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27121                           
 27122                           ; BSR set to: 0
 27123                           ;usb_device.c: 2338: inPipes[0].info.bits.busy = 1;
 27124  003994  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27125                           
 27126                           ;usb_device.c: 2339: break;
 27127  003996  0012               	return	
 27128  003998                     
 27129                           ;usb_device.c: 2341: USBStdGetStatusHandler();
 27130                           
 27131                           ; BSR set to: 0
 27132  003998  EC22  F024         	call	_USBStdGetStatusHandler	;wreg free
 27133                           
 27134                           ;usb_device.c: 2342: break;
 27135  00399C  0012               	return	
 27136  00399E                     
 27137                           ;usb_device.c: 2344: case 3:
 27138                           ;usb_device.c: 2345: USBStdFeatureReqHandler();
 27139  00399E  EC8C  F012         	call	_USBStdFeatureReqHandler	;wreg free
 27140                           
 27141                           ;usb_device.c: 2346: break;
 27142  0039A2  0012               	return	
 27143  0039A4                     
 27144                           ;usb_device.c: 2348: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 27145  0039A4  0104               	movlb	4	; () banked
 27146  0039A6  5134               	movf	52,w,b	;volatile
 27147  0039A8  0D01               	mullw	1
 27148  0039AA  0E58               	movlw	low _USBAlternateInterface
 27149  0039AC  24F3               	addwf	prodl,w,c
 27150  0039AE  0100               	movlb	0	; () banked
 27151  0039B0  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 27152  0039B2  0E00               	movlw	high _USBAlternateInterface
 27153  0039B4  20F4               	addwfc	prodh,w,c
 27154  0039B6  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27155                           
 27156                           ; BSR set to: 0
 27157                           ;usb_device.c: 2349: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27158  0039B8  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 27159                           
 27160                           ; BSR set to: 0
 27161                           ;usb_device.c: 2350: inPipes[0].wCount.v[0] = 1;
 27162  0039BA  0E01               	movlw	1
 27163  0039BC  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27164                           
 27165                           ; BSR set to: 0
 27166                           ;usb_device.c: 2351: inPipes[0].info.bits.busy = 1;
 27167  0039BE  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27168                           
 27169                           ;usb_device.c: 2352: break;
 27170  0039C0  0012               	return	
 27171  0039C2                     i2l2077:
 27172                           
 27173                           ; BSR set to: 4
 27174                           ;usb_device.c: 2354: inPipes[0].info.bits.busy = 1;
 27175  0039C2  0100               	movlb	0	; () banked
 27176  0039C4  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27177                           
 27178                           ; BSR set to: 0
 27179                           ;usb_device.c: 2355: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 27180  0039C6  0104               	movlb	4	; () banked
 27181  0039C8  5134               	movf	52,w,b	;volatile
 27182  0039CA  0D01               	mullw	1
 27183  0039CC  0E58               	movlw	low _USBAlternateInterface
 27184  0039CE  24F3               	addwf	prodl,w,c
 27185  0039D0  6ED9               	movwf	fsr2l,c
 27186  0039D2  0E00               	movlw	high _USBAlternateInterface
 27187  0039D4  20F4               	addwfc	prodh,w,c
 27188  0039D6  6EDA               	movwf	fsr2h,c
 27189  0039D8  C432 FFDF          	movff	1074,indf2	;volatile
 27190                           
 27191                           ;usb_device.c: 2356: break;
 27192  0039DC  0012               	return	
 27193  0039DE                     
 27194                           ; BSR set to: 4
 27195                           ;usb_device.c: 2358: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 27196                           
 27197                           ; BSR set to: 4
 27198  0039DE  0E00               	movlw	0
 27199  0039E0  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27200  0039E2  0E02               	movlw	2
 27201  0039E4  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27202  0039E6  0E00               	movlw	0
 27203  0039E8  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 27204  0039EA  0E00               	movlw	0
 27205  0039EC  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 27206  0039EE  0E00               	movlw	0
 27207  0039F0  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27208  0039F2  0E00               	movlw	0
 27209  0039F4  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27210  0039F6  EC00  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27211                           
 27212                           ;usb_device.c: 2363: }
 27213                           
 27214                           ;usb_device.c: 2362: break;
 27215                           
 27216                           ;usb_device.c: 2361: default:
 27217                           
 27218                           ;usb_device.c: 2360: case 12:
 27219                           
 27220                           ;usb_device.c: 2359: break;
 27221  0039FA  0012               	return	
 27222  0039FC                     i2l2067:
 27223  0039FC  0104               	movlb	4	; () banked
 27224  0039FE  5131               	movf	49,w,b	;volatile
 27225                           
 27226                           ; Switch size 1, requested type "space"
 27227                           ; Number of cases is 11, Range of values is 0 to 12
 27228                           ; switch strategies available:
 27229                           ; Name         Instructions Cycles
 27230                           ; simple_byte           34    18 (average)
 27231                           ;	Chosen strategy is simple_byte
 27232  003A00  0A00               	xorlw	0	; case 0
 27233  003A02  B4D8               	btfsc	status,2,c
 27234  003A04  D7C9               	goto	i2l2073
 27235  003A06  0A01               	xorlw	1	; case 1
 27236  003A08  B4D8               	btfsc	status,2,c
 27237  003A0A  D7C9               	goto	i2l2074
 27238  003A0C  0A02               	xorlw	2	; case 3
 27239  003A0E  B4D8               	btfsc	status,2,c
 27240  003A10  D7C6               	goto	i2l2074
 27241  003A12  0A06               	xorlw	6	; case 5
 27242  003A14  B4D8               	btfsc	status,2,c
 27243  003A16  D7AB               	goto	i2l2068
 27244  003A18  0A03               	xorlw	3	; case 6
 27245  003A1A  B4D8               	btfsc	status,2,c
 27246  003A1C  D7AD               	goto	i2l2070
 27247  003A1E  0A01               	xorlw	1	; case 7
 27248  003A20  B4D8               	btfsc	status,2,c
 27249  003A22  D7DD               	goto	i2l2078
 27250  003A24  0A0F               	xorlw	15	; case 8
 27251  003A26  B4D8               	btfsc	status,2,c
 27252  003A28  D7AD               	goto	i2l2072
 27253  003A2A  0A01               	xorlw	1	; case 9
 27254  003A2C  B4D8               	btfsc	status,2,c
 27255  003A2E  D7A7               	goto	i2l2071
 27256  003A30  0A03               	xorlw	3	; case 10
 27257  003A32  B4D8               	btfsc	status,2,c
 27258  003A34  D7B7               	goto	i2l2076
 27259  003A36  0A01               	xorlw	1	; case 11
 27260  003A38  B4D8               	btfsc	status,2,c
 27261  003A3A  D7C3               	goto	i2l2077
 27262  003A3C  0A07               	xorlw	7	; case 12
 27263  003A3E  0012               	return	
 27264  003A40                     __end_of_USBCheckStdRequest:
 27265                           	opt stack 0
 27266                           pclatu	equ	0xFFB
 27267                           pclath	equ	0xFFA
 27268                           tblptru	equ	0xFF8
 27269                           tblptrh	equ	0xFF7
 27270                           tblptrl	equ	0xFF6
 27271                           tablat	equ	0xFF5
 27272                           prodh	equ	0xFF4
 27273                           prodl	equ	0xFF3
 27274                           intcon	equ	0xFF2
 27275                           intcon2	equ	0xFF1
 27276                           intcon3	equ	0xFF0
 27277                           indf0	equ	0xFEF
 27278                           postinc0	equ	0xFEE
 27279                           fsr0h	equ	0xFEA
 27280                           fsr0l	equ	0xFE9
 27281                           wreg	equ	0xFE8
 27282                           indf1	equ	0xFE7
 27283                           postdec1	equ	0xFE5
 27284                           fsr1h	equ	0xFE2
 27285                           fsr1l	equ	0xFE1
 27286                           indf2	equ	0xFDF
 27287                           postinc2	equ	0xFDE
 27288                           postdec2	equ	0xFDD
 27289                           plusw2	equ	0xFDB
 27290                           fsr2h	equ	0xFDA
 27291                           fsr2l	equ	0xFD9
 27292                           status	equ	0xFD8
 27293                           
 27294 ;; *************** function _USBStdSetCfgHandler *****************
 27295 ;; Defined at:
 27296 ;;		line 1629 in file "../Includes/Usb/Framework/usb_device.c"
 27297 ;; Parameters:    Size  Location     Type
 27298 ;;		None
 27299 ;; Auto vars:     Size  Location     Type
 27300 ;;  i               1   21[COMRAM] unsigned char 
 27301 ;; Return value:  Size  Location     Type
 27302 ;;                  1    wreg      void 
 27303 ;; Registers used:
 27304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27305 ;; Tracked objects:
 27306 ;;		On entry : 0/0
 27307 ;;		On exit  : 0/0
 27308 ;;		Unchanged: 0/0
 27309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27310 ;;      Params:         0       0       0       0       0       0       0       0       0
 27311 ;;      Locals:         1       0       0       0       0       0       0       0       0
 27312 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27313 ;;      Totals:         1       0       0       0       0       0       0       0       0
 27314 ;;Total ram usage:        1 bytes
 27315 ;; Hardware stack levels used:    1
 27316 ;; Hardware stack levels required when called:    5
 27317 ;; This function calls:
 27318 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27319 ;;		i2_memset
 27320 ;; This function is called by:
 27321 ;;		_USBCheckStdRequest
 27322 ;; This function uses a non-reentrant model
 27323 ;;
 27324                           
 27325                           	psect	text118
 27326  003A40                     __ptext118:
 27327                           	opt stack 0
 27328  003A40                     _USBStdSetCfgHandler:
 27329                           	opt stack 11
 27330                           
 27331                           ;usb_device.c: 1631: uint8_t i;
 27332                           ;usb_device.c: 1634: inPipes[0].info.bits.busy = 1;
 27333                           
 27334                           ;incstack = 0
 27335  003A40  0100               	movlb	0	; () banked
 27336  003A42  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27337                           
 27338                           ; BSR set to: 0
 27339                           ;usb_device.c: 1637: memset((void*)&UEP1,0x00,(2));;
 27340  003A44  0E6B               	movlw	107
 27341  003A46  6E01               	movwf	i2memset@p1,c
 27342  003A48  0E0F               	movlw	15
 27343  003A4A  6E02               	movwf	i2memset@p1+1,c
 27344  003A4C  0E00               	movlw	0
 27345  003A4E  6E04               	movwf	i2memset@c+1,c
 27346  003A50  0E00               	movlw	0
 27347  003A52  6E03               	movwf	i2memset@c,c
 27348  003A54  0E00               	movlw	0
 27349  003A56  6E06               	movwf	i2memset@n+1,c
 27350  003A58  0E02               	movlw	2
 27351  003A5A  6E05               	movwf	i2memset@n,c
 27352  003A5C  ECE5  F02E         	call	i2_memset	;wreg free
 27353                           
 27354                           ;usb_device.c: 1640: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 27355  003A60  0E00               	movlw	0
 27356  003A62  6E01               	movwf	i2memset@p1,c
 27357  003A64  0E04               	movlw	4
 27358  003A66  6E02               	movwf	i2memset@p1+1,c
 27359  003A68  0E00               	movlw	0
 27360  003A6A  6E04               	movwf	i2memset@c+1,c
 27361  003A6C  0E00               	movlw	0
 27362  003A6E  6E03               	movwf	i2memset@c,c
 27363  003A70  0E00               	movlw	0
 27364  003A72  6E06               	movwf	i2memset@n+1,c
 27365  003A74  0E30               	movlw	48
 27366  003A76  6E05               	movwf	i2memset@n,c
 27367  003A78  ECE5  F02E         	call	i2_memset	;wreg free
 27368                           
 27369                           ;usb_device.c: 1643: UCONbits.PPBRST = 1;
 27370  003A7C  8C60               	bsf	3936,6,c	;volatile
 27371                           
 27372                           ;usb_device.c: 1648: for(i = 0; i < (uint8_t)(2+1u); i++)
 27373  003A7E  0E00               	movlw	0
 27374  003A80  6E16               	movwf	USBStdSetCfgHandler@i,c
 27375  003A82                     i2l8379:
 27376  003A82  0E02               	movlw	2
 27377  003A84  6416               	cpfsgt	USBStdSetCfgHandler@i,c
 27378  003A86  D001               	goto	i2l1982
 27379  003A88  D016               	goto	i2u618_40
 27380  003A8A                     i2l1982:
 27381                           
 27382                           ;usb_device.c: 1649: {
 27383                           ;usb_device.c: 1650: ep_data_in[i].Val = 0u;
 27384  003A8A  5016               	movf	USBStdSetCfgHandler@i,w,c
 27385  003A8C  0D01               	mullw	1
 27386  003A8E  0ED3               	movlw	low _ep_data_in
 27387  003A90  24F3               	addwf	prodl,w,c
 27388  003A92  6ED9               	movwf	fsr2l,c
 27389  003A94  0E00               	movlw	high _ep_data_in
 27390  003A96  20F4               	addwfc	prodh,w,c
 27391  003A98  6EDA               	movwf	fsr2h,c
 27392  003A9A  0E00               	movlw	0
 27393  003A9C  6EDF               	movwf	indf2,c
 27394                           
 27395                           ;usb_device.c: 1651: ep_data_out[i].Val = 0u;
 27396  003A9E  5016               	movf	USBStdSetCfgHandler@i,w,c
 27397  003AA0  0D01               	mullw	1
 27398  003AA2  0ED0               	movlw	low _ep_data_out
 27399  003AA4  24F3               	addwf	prodl,w,c
 27400  003AA6  6ED9               	movwf	fsr2l,c
 27401  003AA8  0E00               	movlw	high _ep_data_out
 27402  003AAA  20F4               	addwfc	prodh,w,c
 27403  003AAC  6EDA               	movwf	fsr2h,c
 27404  003AAE  0E00               	movlw	0
 27405  003AB0  6EDF               	movwf	indf2,c
 27406  003AB2  2A16               	incf	USBStdSetCfgHandler@i,f,c
 27407  003AB4  D7E6               	goto	i2l8379
 27408  003AB6                     i2u618_40:
 27409                           
 27410                           ;usb_device.c: 1652: }
 27411                           ;usb_device.c: 1655: memset((void*)&USBAlternateInterface,0x00,2);
 27412  003AB6  0E58               	movlw	low _USBAlternateInterface
 27413  003AB8  6E01               	movwf	i2memset@p1,c
 27414  003ABA  0E00               	movlw	high _USBAlternateInterface
 27415  003ABC  6E02               	movwf	i2memset@p1+1,c
 27416  003ABE  0E00               	movlw	0
 27417  003AC0  6E04               	movwf	i2memset@c+1,c
 27418  003AC2  0E00               	movlw	0
 27419  003AC4  6E03               	movwf	i2memset@c,c
 27420  003AC6  0E00               	movlw	0
 27421  003AC8  6E06               	movwf	i2memset@n+1,c
 27422  003ACA  0E02               	movlw	2
 27423  003ACC  6E05               	movwf	i2memset@n,c
 27424  003ACE  ECE5  F02E         	call	i2_memset	;wreg free
 27425                           
 27426                           ;usb_device.c: 1658: UCONbits.PPBRST = 0;
 27427  003AD2  9C60               	bcf	3936,6,c	;volatile
 27428                           
 27429                           ;usb_device.c: 1660: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 27430  003AD4  0E08               	movlw	8
 27431  003AD6  0100               	movlb	0	; () banked
 27432  003AD8  6FCA               	movwf	_pBDTEntryIn& (0+255),b
 27433  003ADA  0E04               	movlw	4
 27434  003ADC  6FCB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 27435                           
 27436                           ; BSR set to: 0
 27437                           ;usb_device.c: 1663: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 27438  003ADE  0E00               	movlw	0
 27439  003AE0  6E38               	movwf	_pBDTEntryEP0OutCurrent,c
 27440  003AE2  0E04               	movlw	4
 27441  003AE4  6E39               	movwf	_pBDTEntryEP0OutCurrent+1,c
 27442                           
 27443                           ; BSR set to: 0
 27444                           ;usb_device.c: 1664: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 27445  003AE6  C038  F036         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 27446  003AEA  C039  F037         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 27447                           
 27448                           ; BSR set to: 0
 27449                           ;usb_device.c: 1667: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 27450  003AEE  C432 F05B          	movff	1074,_USBActiveConfiguration	;volatile
 27451                           
 27452                           ; BSR set to: 0
 27453                           ;usb_device.c: 1670: if(USBActiveConfiguration == 0)
 27454  003AF2  505B               	movf	_USBActiveConfiguration,w,c	;volatile
 27455  003AF4  A4D8               	btfss	status,2,c
 27456  003AF6  D003               	goto	i2l1984
 27457                           
 27458                           ; BSR set to: 0
 27459                           ;usb_device.c: 1671: {
 27460                           ;usb_device.c: 1673: USBDeviceState = ADDRESS_STATE;
 27461  003AF8  0E10               	movlw	16
 27462  003AFA  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 27463                           
 27464                           ;usb_device.c: 1674: }
 27465  003AFC  0012               	return	
 27466  003AFE                     i2l1984:
 27467                           
 27468                           ; BSR set to: 0
 27469                           ;usb_device.c: 1675: else
 27470                           ;usb_device.c: 1676: {
 27471                           ;usb_device.c: 1678: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 27472                           
 27473                           ; BSR set to: 0
 27474  003AFE  0E00               	movlw	0
 27475  003B00  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27476  003B02  0E01               	movlw	1
 27477  003B04  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27478  003B06  0E5B               	movlw	low _USBActiveConfiguration
 27479  003B08  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 27480  003B0A  0E00               	movlw	high _USBActiveConfiguration
 27481  003B0C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 27482  003B0E  0E00               	movlw	0
 27483  003B10  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27484  003B12  0E01               	movlw	1
 27485  003B14  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27486  003B16  EC00  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27487                           
 27488                           ;usb_device.c: 1683: USBDeviceState = CONFIGURED_STATE;
 27489  003B1A  0E20               	movlw	32
 27490  003B1C  0100               	movlb	0	; () banked
 27491  003B1E  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 27492  003B20  0012               	return	
 27493  003B22                     __end_of_USBStdSetCfgHandler:
 27494                           	opt stack 0
 27495                           pclatu	equ	0xFFB
 27496                           pclath	equ	0xFFA
 27497                           tblptru	equ	0xFF8
 27498                           tblptrh	equ	0xFF7
 27499                           tblptrl	equ	0xFF6
 27500                           tablat	equ	0xFF5
 27501                           prodh	equ	0xFF4
 27502                           prodl	equ	0xFF3
 27503                           intcon	equ	0xFF2
 27504                           intcon2	equ	0xFF1
 27505                           intcon3	equ	0xFF0
 27506                           indf0	equ	0xFEF
 27507                           postinc0	equ	0xFEE
 27508                           fsr0h	equ	0xFEA
 27509                           fsr0l	equ	0xFE9
 27510                           wreg	equ	0xFE8
 27511                           indf1	equ	0xFE7
 27512                           postdec1	equ	0xFE5
 27513                           fsr1h	equ	0xFE2
 27514                           fsr1l	equ	0xFE1
 27515                           indf2	equ	0xFDF
 27516                           postinc2	equ	0xFDE
 27517                           postdec2	equ	0xFDD
 27518                           plusw2	equ	0xFDB
 27519                           fsr2h	equ	0xFDA
 27520                           fsr2l	equ	0xFD9
 27521                           status	equ	0xFD8
 27522                           
 27523 ;; *************** function i2_memset *****************
 27524 ;; Defined at:
 27525 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 27526 ;; Parameters:    Size  Location     Type
 27527 ;;  p1              2    0[COMRAM] PTR void 
 27528 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 27529 ;;  c               2    2[COMRAM] int 
 27530 ;;  n               2    4[COMRAM] unsigned int 
 27531 ;; Auto vars:     Size  Location     Type
 27532 ;;  memset          2    6[COMRAM] PTR unsigned char 
 27533 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 27534 ;; Return value:  Size  Location     Type
 27535 ;;                  2    0[COMRAM] PTR void 
 27536 ;; Registers used:
 27537 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27538 ;; Tracked objects:
 27539 ;;		On entry : 0/0
 27540 ;;		On exit  : 0/0
 27541 ;;		Unchanged: 0/0
 27542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27543 ;;      Params:         6       0       0       0       0       0       0       0       0
 27544 ;;      Locals:         2       0       0       0       0       0       0       0       0
 27545 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27546 ;;      Totals:         8       0       0       0       0       0       0       0       0
 27547 ;;Total ram usage:        8 bytes
 27548 ;; Hardware stack levels used:    1
 27549 ;; This function calls:
 27550 ;;		Nothing
 27551 ;; This function is called by:
 27552 ;;		_USBStdSetCfgHandler
 27553 ;;		i2_USBDeviceInit
 27554 ;; This function uses a non-reentrant model
 27555 ;;
 27556                           
 27557                           	psect	text119
 27558  005DCA                     __ptext119:
 27559                           	opt stack 0
 27560  005DCA                     i2_memset:
 27561                           	opt stack 18
 27562                           
 27563                           ; BSR set to: 0
 27564                           ;incstack = 0
 27565  005DCA  C001  F007         	movff	i2memset@p1,i2memset@p
 27566  005DCE  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 27567  005DD2  D008               	goto	i2l2680
 27568  005DD4                     i2l8199:
 27569  005DD4  C007  FFD9         	movff	i2memset@p,fsr2l
 27570  005DD8  C008  FFDA         	movff	i2memset@p+1,fsr2h
 27571  005DDC  C003  FFDF         	movff	i2memset@c,indf2
 27572  005DE0  4A07               	infsnz	i2memset@p,f,c
 27573  005DE2  2A08               	incf	i2memset@p+1,f,c
 27574  005DE4                     i2l2680:
 27575  005DE4  0605               	decf	i2memset@n,f,c
 27576  005DE6  A0D8               	btfss	status,0,c
 27577  005DE8  0606               	decf	i2memset@n+1,f,c
 27578  005DEA  2805               	incf	i2memset@n,w,c
 27579  005DEC  E1F3               	bnz	i2l8199
 27580  005DEE  2806               	incf	i2memset@n+1,w,c
 27581  005DF0  B4D8               	btfsc	status,2,c
 27582  005DF2  0012               	return	
 27583  005DF4  D7EF               	goto	i2l2681
 27584  005DF6                     __end_ofi2_memset:
 27585                           	opt stack 0
 27586                           pclatu	equ	0xFFB
 27587                           pclath	equ	0xFFA
 27588                           tblptru	equ	0xFF8
 27589                           tblptrh	equ	0xFF7
 27590                           tblptrl	equ	0xFF6
 27591                           tablat	equ	0xFF5
 27592                           prodh	equ	0xFF4
 27593                           prodl	equ	0xFF3
 27594                           intcon	equ	0xFF2
 27595                           intcon2	equ	0xFF1
 27596                           intcon3	equ	0xFF0
 27597                           indf0	equ	0xFEF
 27598                           postinc0	equ	0xFEE
 27599                           fsr0h	equ	0xFEA
 27600                           fsr0l	equ	0xFE9
 27601                           wreg	equ	0xFE8
 27602                           indf1	equ	0xFE7
 27603                           postdec1	equ	0xFE5
 27604                           fsr1h	equ	0xFE2
 27605                           fsr1l	equ	0xFE1
 27606                           indf2	equ	0xFDF
 27607                           postinc2	equ	0xFDE
 27608                           postdec2	equ	0xFDD
 27609                           plusw2	equ	0xFDB
 27610                           fsr2h	equ	0xFDA
 27611                           fsr2l	equ	0xFD9
 27612                           status	equ	0xFD8
 27613                           
 27614 ;; *************** function _USBStdGetStatusHandler *****************
 27615 ;; Defined at:
 27616 ;;		line 1773 in file "../Includes/Usb/Framework/usb_device.c"
 27617 ;; Parameters:    Size  Location     Type
 27618 ;;		None
 27619 ;; Auto vars:     Size  Location     Type
 27620 ;;  p               2    1[COMRAM] PTR struct __BDT
 27621 ;;		 -> BDT(48), NULL(0), 
 27622 ;; Return value:  Size  Location     Type
 27623 ;;                  1    wreg      void 
 27624 ;; Registers used:
 27625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27626 ;; Tracked objects:
 27627 ;;		On entry : 0/0
 27628 ;;		On exit  : 0/0
 27629 ;;		Unchanged: 0/0
 27630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27631 ;;      Params:         0       0       0       0       0       0       0       0       0
 27632 ;;      Locals:         2       0       0       0       0       0       0       0       0
 27633 ;;      Temps:          1       0       0       0       0       0       0       0       0
 27634 ;;      Totals:         3       0       0       0       0       0       0       0       0
 27635 ;;Total ram usage:        3 bytes
 27636 ;; Hardware stack levels used:    1
 27637 ;; This function calls:
 27638 ;;		Nothing
 27639 ;; This function is called by:
 27640 ;;		_USBCheckStdRequest
 27641 ;; This function uses a non-reentrant model
 27642 ;;
 27643                           
 27644                           	psect	text120
 27645  004844                     __ptext120:
 27646                           	opt stack 0
 27647  004844                     _USBStdGetStatusHandler:
 27648                           	opt stack 16
 27649                           
 27650                           ;usb_device.c: 1775: CtrlTrfData[0] = 0;
 27651                           
 27652                           ;incstack = 0
 27653  004844  0E00               	movlw	0
 27654  004846  0104               	movlb	4	; () banked
 27655  004848  6F38               	movwf	56,b	;volatile
 27656                           
 27657                           ;usb_device.c: 1776: CtrlTrfData[1] = 0;
 27658  00484A  0E00               	movlw	0
 27659  00484C  6F39               	movwf	57,b	;volatile
 27660                           
 27661                           ;usb_device.c: 1778: switch(SetupPkt.Recipient)
 27662  00484E  D038               	goto	i2l2003
 27663  004850                     i2l2004:
 27664                           
 27665                           ; BSR set to: 4
 27666                           ;usb_device.c: 1781: inPipes[0].info.bits.busy = 1;
 27667  004850  0100               	movlb	0	; () banked
 27668  004852  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27669                           
 27670                           ;usb_device.c: 1789: }
 27671                           ;usb_device.c: 1791: if(RemoteWakeup == 1)
 27672                           
 27673                           ; BSR set to: 4
 27674                           
 27675                           ; BSR set to: 0
 27676                           ;usb_device.c: 1787: {
 27677                           ;usb_device.c: 1788: CtrlTrfData[0]|=0x01;
 27678                           
 27679                           ;usb_device.c: 1786: if(0 == 1)
 27680  004854  044B               	decf	_RemoteWakeup,w,c	;volatile
 27681  004856  A4D8               	btfss	status,2,c
 27682  004858  D03E               	goto	i2l2007
 27683                           
 27684                           ;usb_device.c: 1792: {
 27685                           ;usb_device.c: 1793: CtrlTrfData[0]|=0x02;
 27686  00485A  0104               	movlb	4	; () banked
 27687  00485C  8338               	bsf	56,1,b	;volatile
 27688                           
 27689                           ; BSR set to: 4
 27690                           ;usb_device.c: 1794: }
 27691                           ;usb_device.c: 1795: break;
 27692  00485E  D03B               	goto	i2l2007
 27693  004860                     i2l2008:
 27694                           
 27695                           ; BSR set to: 4
 27696                           ;usb_device.c: 1797: inPipes[0].info.bits.busy = 1;
 27697  004860  0100               	movlb	0	; () banked
 27698  004862  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27699                           
 27700                           ;usb_device.c: 1798: break;
 27701  004864  D038               	goto	i2l2007
 27702  004866                     i2l2009:
 27703                           
 27704                           ; BSR set to: 4
 27705                           ;usb_device.c: 1800: inPipes[0].info.bits.busy = 1;
 27706  004866  0100               	movlb	0	; () banked
 27707  004868  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27708                           
 27709                           ;usb_device.c: 1804: {
 27710                           ;usb_device.c: 1805: BDT_ENTRY *p;
 27711                           ;usb_device.c: 1807: if(SetupPkt.EPDir == 0)
 27712  00486A  0104               	movlb	4	; () banked
 27713  00486C  BF34               	btfsc	52,7,b	;volatile
 27714  00486E  D00A               	goto	i2l2010
 27715                           
 27716                           ; BSR set to: 4
 27717                           ;usb_device.c: 1808: {
 27718                           ;usb_device.c: 1809: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 27719  004870  5134               	movf	52,w,b	;volatile
 27720  004872  0B0F               	andlw	15
 27721  004874  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 27722  004876  5001               	movf	??_USBStdGetStatusHandler,w,c
 27723  004878  0D02               	mullw	2
 27724  00487A  0E40               	movlw	low _pBDTEntryOut
 27725  00487C  24F3               	addwf	prodl,w,c
 27726  00487E  6ED9               	movwf	fsr2l,c
 27727  004880  0E01               	movlw	high _pBDTEntryOut
 27728  004882  D009               	goto	L25
 27729  004884                     i2l2010:
 27730                           
 27731                           ; BSR set to: 4
 27732                           ;usb_device.c: 1811: else
 27733                           ;usb_device.c: 1812: {
 27734                           ;usb_device.c: 1813: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 27735                           
 27736                           ; BSR set to: 4
 27737  004884  5134               	movf	52,w,b	;volatile
 27738  004886  0B0F               	andlw	15
 27739  004888  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 27740  00488A  5001               	movf	??_USBStdGetStatusHandler,w,c
 27741  00488C  0D02               	mullw	2
 27742  00488E  0ECA               	movlw	low _pBDTEntryIn
 27743  004890  24F3               	addwf	prodl,w,c
 27744  004892  6ED9               	movwf	fsr2l,c
 27745  004894  0E00               	movlw	high _pBDTEntryIn
 27746  004896                     L25:
 27747  004896  20F4               	addwfc	prodh,w,c
 27748  004898  6EDA               	movwf	fsr2h,c
 27749  00489A  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 27750  00489E  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 27751                           
 27752                           ; BSR set to: 4
 27753                           ;usb_device.c: 1814: }
 27754                           ;usb_device.c: 1816: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 27755                           
 27756                           ; BSR set to: 4
 27757  0048A2  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 27758  0048A6  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 27759  0048AA  AEDF               	btfss	indf2,7,c
 27760  0048AC  D014               	goto	i2l2007
 27761                           
 27762                           ; BSR set to: 4
 27763  0048AE  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 27764  0048B2  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 27765  0048B6  A4DF               	btfss	indf2,2,c
 27766  0048B8  D00E               	goto	i2l2007
 27767                           
 27768                           ; BSR set to: 4
 27769                           ;usb_device.c: 1817: CtrlTrfData[0]=0x01;
 27770  0048BA  0E01               	movlw	1
 27771  0048BC  6F38               	movwf	56,b	;volatile
 27772                           
 27773                           ; BSR set to: 4
 27774                           ;usb_device.c: 1819: }
 27775                           ;usb_device.c: 1820: }
 27776                           
 27777                           ; BSR set to: 4
 27778                           ;usb_device.c: 1818: break;
 27779  0048BE  D00B               	goto	i2l2007
 27780  0048C0                     i2l2003:
 27781                           
 27782                           ; BSR set to: 4
 27783                           
 27784                           ; BSR set to: 4
 27785  0048C0  5130               	movf	48,w,b	;volatile
 27786  0048C2  0B1F               	andlw	31
 27787                           
 27788                           ; Switch size 1, requested type "space"
 27789                           ; Number of cases is 3, Range of values is 0 to 2
 27790                           ; switch strategies available:
 27791                           ; Name         Instructions Cycles
 27792                           ; simple_byte           10     6 (average)
 27793                           ;	Chosen strategy is simple_byte
 27794  0048C4  0A00               	xorlw	0	; case 0
 27795  0048C6  B4D8               	btfsc	status,2,c
 27796  0048C8  D7C3               	goto	i2l2004
 27797  0048CA  0A01               	xorlw	1	; case 1
 27798  0048CC  B4D8               	btfsc	status,2,c
 27799  0048CE  D7C8               	goto	i2l2008
 27800  0048D0  0A03               	xorlw	3	; case 2
 27801  0048D2  B4D8               	btfsc	status,2,c
 27802  0048D4  D7C8               	goto	i2l2009
 27803  0048D6                     i2l2007:
 27804                           
 27805                           ;usb_device.c: 1822: if(inPipes[0].info.bits.busy == 1)
 27806  0048D6  0100               	movlb	0	; () banked
 27807  0048D8  AFC7               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 27808  0048DA  0012               	return	
 27809                           
 27810                           ; BSR set to: 0
 27811                           ;usb_device.c: 1823: {
 27812                           ;usb_device.c: 1824: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 27813  0048DC  0E38               	movlw	56
 27814  0048DE  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 27815  0048E0  0E04               	movlw	4
 27816  0048E2  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27817                           
 27818                           ; BSR set to: 0
 27819                           ;usb_device.c: 1825: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27820  0048E4  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 27821                           
 27822                           ; BSR set to: 0
 27823                           ;usb_device.c: 1826: inPipes[0].wCount.v[0] = 2;
 27824  0048E6  0E02               	movlw	2
 27825  0048E8  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27826  0048EA  0012               	return	
 27827  0048EC                     __end_of_USBStdGetStatusHandler:
 27828                           	opt stack 0
 27829                           pclatu	equ	0xFFB
 27830                           pclath	equ	0xFFA
 27831                           tblptru	equ	0xFF8
 27832                           tblptrh	equ	0xFF7
 27833                           tblptrl	equ	0xFF6
 27834                           tablat	equ	0xFF5
 27835                           prodh	equ	0xFF4
 27836                           prodl	equ	0xFF3
 27837                           intcon	equ	0xFF2
 27838                           intcon2	equ	0xFF1
 27839                           intcon3	equ	0xFF0
 27840                           indf0	equ	0xFEF
 27841                           postinc0	equ	0xFEE
 27842                           fsr0h	equ	0xFEA
 27843                           fsr0l	equ	0xFE9
 27844                           wreg	equ	0xFE8
 27845                           indf1	equ	0xFE7
 27846                           postdec1	equ	0xFE5
 27847                           fsr1h	equ	0xFE2
 27848                           fsr1l	equ	0xFE1
 27849                           indf2	equ	0xFDF
 27850                           postinc2	equ	0xFDE
 27851                           postdec2	equ	0xFDD
 27852                           plusw2	equ	0xFDB
 27853                           fsr2h	equ	0xFDA
 27854                           fsr2l	equ	0xFD9
 27855                           status	equ	0xFD8
 27856                           
 27857 ;; *************** function _USBStdGetDscHandler *****************
 27858 ;; Defined at:
 27859 ;;		line 1704 in file "../Includes/Usb/Framework/usb_device.c"
 27860 ;; Parameters:    Size  Location     Type
 27861 ;;		None
 27862 ;; Auto vars:     Size  Location     Type
 27863 ;;		None
 27864 ;; Return value:  Size  Location     Type
 27865 ;;                  1    wreg      void 
 27866 ;; Registers used:
 27867 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27868 ;; Tracked objects:
 27869 ;;		On entry : 0/0
 27870 ;;		On exit  : 0/0
 27871 ;;		Unchanged: 0/0
 27872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27873 ;;      Params:         0       0       0       0       0       0       0       0       0
 27874 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27875 ;;      Temps:          2       0       0       0       0       0       0       0       0
 27876 ;;      Totals:         2       0       0       0       0       0       0       0       0
 27877 ;;Total ram usage:        2 bytes
 27878 ;; Hardware stack levels used:    1
 27879 ;; This function calls:
 27880 ;;		Nothing
 27881 ;; This function is called by:
 27882 ;;		_USBCheckStdRequest
 27883 ;; This function uses a non-reentrant model
 27884 ;;
 27885                           
 27886                           	psect	text121
 27887  002B78                     __ptext121:
 27888                           	opt stack 0
 27889  002B78                     _USBStdGetDscHandler:
 27890                           	opt stack 16
 27891                           
 27892                           ;usb_device.c: 1706: if(SetupPkt.bmRequestType == 0x80)
 27893                           
 27894                           ; BSR set to: 0
 27895                           ;incstack = 0
 27896  002B78  0E80               	movlw	128
 27897  002B7A  0104               	movlb	4	; () banked
 27898  002B7C  1930               	xorwf	48,w,b	;volatile
 27899  002B7E  A4D8               	btfss	status,2,c
 27900  002B80  0012               	return	
 27901                           
 27902                           ; BSR set to: 4
 27903                           ;usb_device.c: 1707: {
 27904                           ;usb_device.c: 1708: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 27905  002B82  0EC0               	movlw	192
 27906  002B84  0100               	movlb	0	; () banked
 27907  002B86  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27908                           
 27909                           ;usb_device.c: 1710: switch(SetupPkt.bDescriptorType)
 27910  002B88  D088               	goto	i2l1990
 27911  002B8A                     
 27912                           ;usb_device.c: 1713: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 27913                           
 27914                           ; BSR set to: 0
 27915  002B8A  0EA2               	movlw	low _device_dsc
 27916  002B8C  0100               	movlb	0	; () banked
 27917  002B8E  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 27918  002B90  0E79               	movlw	high _device_dsc
 27919  002B92  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27920                           
 27921                           ; BSR set to: 0
 27922                           ;usb_device.c: 1714: inPipes[0].wCount.Val = sizeof(device_dsc);
 27923  002B94  0E00               	movlw	0
 27924  002B96  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27925  002B98  0E12               	movlw	18
 27926  002B9A  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27927                           
 27928                           ;usb_device.c: 1715: break;
 27929  002B9C  0012               	return	
 27930  002B9E                     
 27931                           ;usb_device.c: 1720: if(SetupPkt.bDscIndex < 1)
 27932                           
 27933                           ; BSR set to: 0
 27934  002B9E  0104               	movlb	4	; () banked
 27935  002BA0  5132               	movf	50,w,b	;volatile
 27936  002BA2  A4D8               	btfss	status,2,c
 27937  002BA4  D043               	goto	i2l1994
 27938                           
 27939                           ; BSR set to: 4
 27940                           ;usb_device.c: 1721: {
 27941                           ;usb_device.c: 1722: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 27942  002BA6  5132               	movf	50,w,b	;volatile
 27943  002BA8  0D02               	mullw	2
 27944  002BAA  0EF5               	movlw	low _USB_CD_Ptr
 27945  002BAC  24F3               	addwf	prodl,w,c
 27946  002BAE  6EF6               	movwf	tblptrl,c
 27947  002BB0  0E75               	movlw	high _USB_CD_Ptr
 27948  002BB2  20F4               	addwfc	prodh,w,c
 27949  002BB4  6EF7               	movwf	tblptrh,c
 27950  002BB6                     	if	1	;There are 3 active tblptr bytes
 27951  002BB6  6AF8               	clrf	tblptru,c
 27952  002BB8  0E00               	movlw	low (__mediumconst shr (0+16))
 27953  002BBA  22F8               	addwfc	tblptru,f,c
 27954  002BBC                     	endif
 27955  002BBC  0009               	tblrd		*+
 27956  002BBE  CFF5 F0C4          	movff	tablat,_inPipes	;volatile
 27957  002BC2  000A               	tblrd		*-
 27958  002BC4  CFF5 F0C5          	movff	tablat,_inPipes+1	;volatile
 27959                           
 27960                           ; BSR set to: 4
 27961                           ;usb_device.c: 1727: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 27962  002BC8  0E02               	movlw	2
 27963  002BCA  0100               	movlb	0	; () banked
 27964  002BCC  25C4               	addwf	_inPipes& (0+255),w,b	;volatile
 27965  002BCE  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 27966  002BD0  0E00               	movlw	0
 27967  002BD2  21C5               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 27968  002BD4  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 27969  002BD6  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 27970  002BDA  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 27971  002BDE  6AF8               	clrf	tblptru,c
 27972  002BE0  0E07               	movlw	(high __ramtop+-1)
 27973  002BE2  64F7               	cpfsgt	tblptrh,c
 27974  002BE4  D003               	bra	i2u622_47
 27975  002BE6  0008               	tblrd		*
 27976  002BE8  50F5               	movf	tablat,w,c
 27977  002BEA  D005               	bra	i2u622_40
 27978  002BEC                     i2u622_47:
 27979  002BEC  CFF6 FFE9          	movff	tblptrl,fsr0l
 27980  002BF0  CFF7 FFEA          	movff	tblptrh,fsr0h
 27981  002BF4  50EF               	movf	indf0,w,c
 27982  002BF6                     i2u622_40:
 27983  002BF6  0100               	movlb	0	; () banked
 27984  002BF8  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27985                           
 27986                           ; BSR set to: 0
 27987                           ;usb_device.c: 1728: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 27988  002BFA  0E03               	movlw	3
 27989  002BFC  25C4               	addwf	_inPipes& (0+255),w,b	;volatile
 27990  002BFE  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 27991  002C00  0E00               	movlw	0
 27992  002C02  21C5               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 27993  002C04  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 27994  002C06  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 27995  002C0A  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 27996  002C0E  6AF8               	clrf	tblptru,c
 27997  002C10  0E07               	movlw	(high __ramtop+-1)
 27998  002C12  64F7               	cpfsgt	tblptrh,c
 27999  002C14  D003               	bra	i2u623_47
 28000  002C16  0008               	tblrd		*
 28001  002C18  50F5               	movf	tablat,w,c
 28002  002C1A  D005               	bra	i2u623_40
 28003  002C1C                     i2u623_47:
 28004  002C1C  CFF6 FFE9          	movff	tblptrl,fsr0l
 28005  002C20  CFF7 FFEA          	movff	tblptrh,fsr0h
 28006  002C24  50EF               	movf	indf0,w,c
 28007  002C26                     i2u623_40:
 28008  002C26  0100               	movlb	0	; () banked
 28009  002C28  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 28010                           
 28011                           ;usb_device.c: 1729: }
 28012  002C2A  0012               	return	
 28013  002C2C                     i2l1994:
 28014                           
 28015                           ;usb_device.c: 1730: else
 28016                           ;usb_device.c: 1731: {
 28017                           ;usb_device.c: 1732: inPipes[0].info.Val = 0;
 28018                           
 28019                           ; BSR set to: 0
 28020  002C2C  0E00               	movlw	0
 28021  002C2E  0100               	movlb	0	; () banked
 28022  002C30  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 28023                           
 28024                           ; BSR set to: 0
 28025                           ;usb_device.c: 1733: }
 28026                           ;usb_device.c: 1734: break;
 28027  002C32  0012               	return	
 28028  002C34                     
 28029                           ;usb_device.c: 1739: if(SetupPkt.bDscIndex<3)
 28030                           
 28031                           ; BSR set to: 0
 28032  002C34  0E03               	movlw	3
 28033  002C36  0104               	movlb	4	; () banked
 28034  002C38  6132               	cpfslt	50,b	;volatile
 28035  002C3A  D027               	goto	i2l1997
 28036                           
 28037                           ; BSR set to: 4
 28038                           ;usb_device.c: 1740: {
 28039                           ;usb_device.c: 1742: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 28040  002C3C  5132               	movf	50,w,b	;volatile
 28041  002C3E  0D02               	mullw	2
 28042  002C40  0EEF               	movlw	low _USB_SD_Ptr
 28043  002C42  24F3               	addwf	prodl,w,c
 28044  002C44  6EF6               	movwf	tblptrl,c
 28045  002C46  0E75               	movlw	high _USB_SD_Ptr
 28046  002C48  20F4               	addwfc	prodh,w,c
 28047  002C4A  6EF7               	movwf	tblptrh,c
 28048  002C4C                     	if	1	;There are 3 active tblptr bytes
 28049  002C4C  6AF8               	clrf	tblptru,c
 28050  002C4E  0E00               	movlw	low (__mediumconst shr (0+16))
 28051  002C50  22F8               	addwfc	tblptru,f,c
 28052  002C52                     	endif
 28053  002C52  0009               	tblrd		*+
 28054  002C54  CFF5 F0C4          	movff	tablat,_inPipes	;volatile
 28055  002C58  000A               	tblrd		*-
 28056  002C5A  CFF5 F0C5          	movff	tablat,_inPipes+1	;volatile
 28057                           
 28058                           ; BSR set to: 4
 28059                           ;usb_device.c: 1744: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 28060  002C5E  C0C4  FFF6         	movff	_inPipes,tblptrl	;volatile
 28061  002C62  C0C5  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 28062  002C66  6AF8               	clrf	tblptru,c
 28063  002C68  0E07               	movlw	(high __ramtop+-1)
 28064  002C6A  64F7               	cpfsgt	tblptrh,c
 28065  002C6C  D003               	bra	i2u625_47
 28066  002C6E  0008               	tblrd		*
 28067  002C70  50F5               	movf	tablat,w,c
 28068  002C72  D005               	bra	i2u625_40
 28069  002C74                     i2u625_47:
 28070  002C74  CFF6 FFE9          	movff	tblptrl,fsr0l
 28071  002C78  CFF7 FFEA          	movff	tblptrh,fsr0h
 28072  002C7C  50EF               	movf	indf0,w,c
 28073  002C7E                     i2u625_40:
 28074  002C7E  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 28075  002C80  5001               	movf	??_USBStdGetDscHandler,w,c
 28076  002C82  0100               	movlb	0	; () banked
 28077  002C84  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 28078  002C86  6BC9               	clrf	(_inPipes+5)& (0+255),b	;volatile
 28079                           
 28080                           ;usb_device.c: 1745: }
 28081  002C88  0012               	return	
 28082  002C8A                     i2l1997:
 28083                           
 28084                           ;usb_device.c: 1746: else
 28085                           ;usb_device.c: 1747: {
 28086                           ;usb_device.c: 1748: inPipes[0].info.Val = 0;
 28087                           
 28088                           ; BSR set to: 0
 28089  002C8A  0E00               	movlw	0
 28090  002C8C  0100               	movlb	0	; () banked
 28091  002C8E  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 28092                           
 28093                           ; BSR set to: 0
 28094                           ;usb_device.c: 1749: }
 28095                           ;usb_device.c: 1750: break;
 28096  002C90  0012               	return	
 28097  002C92                     
 28098                           ;usb_device.c: 1752: inPipes[0].info.Val = 0;
 28099                           
 28100                           ; BSR set to: 0
 28101  002C92  0E00               	movlw	0
 28102  002C94  0100               	movlb	0	; () banked
 28103  002C96  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 28104                           
 28105                           ; BSR set to: 0
 28106                           ;usb_device.c: 1754: }
 28107                           
 28108                           ;usb_device.c: 1753: break;
 28109  002C98  0012               	return	
 28110  002C9A                     i2l1990:
 28111                           
 28112                           ; BSR set to: 0
 28113                           
 28114                           ; BSR set to: 0
 28115  002C9A  0104               	movlb	4	; () banked
 28116  002C9C  5133               	movf	51,w,b	;volatile
 28117                           
 28118                           ; Switch size 1, requested type "space"
 28119                           ; Number of cases is 3, Range of values is 1 to 3
 28120                           ; switch strategies available:
 28121                           ; Name         Instructions Cycles
 28122                           ; simple_byte           10     6 (average)
 28123                           ;	Chosen strategy is simple_byte
 28124  002C9E  0A01               	xorlw	1	; case 1
 28125  002CA0  B4D8               	btfsc	status,2,c
 28126  002CA2  D773               	goto	i2l1991
 28127  002CA4  0A03               	xorlw	3	; case 2
 28128  002CA6  B4D8               	btfsc	status,2,c
 28129  002CA8  D77A               	goto	i2l1993
 28130  002CAA  0A01               	xorlw	1	; case 3
 28131  002CAC  B4D8               	btfsc	status,2,c
 28132  002CAE  D7C2               	goto	i2l1996
 28133  002CB0  D7F0               	goto	i2l1999
 28134  002CB2                     __end_of_USBStdGetDscHandler:
 28135                           	opt stack 0
 28136                           pclatu	equ	0xFFB
 28137                           pclath	equ	0xFFA
 28138                           tblptru	equ	0xFF8
 28139                           tblptrh	equ	0xFF7
 28140                           tblptrl	equ	0xFF6
 28141                           tablat	equ	0xFF5
 28142                           prodh	equ	0xFF4
 28143                           prodl	equ	0xFF3
 28144                           intcon	equ	0xFF2
 28145                           intcon2	equ	0xFF1
 28146                           intcon3	equ	0xFF0
 28147                           indf0	equ	0xFEF
 28148                           postinc0	equ	0xFEE
 28149                           fsr0h	equ	0xFEA
 28150                           fsr0l	equ	0xFE9
 28151                           wreg	equ	0xFE8
 28152                           indf1	equ	0xFE7
 28153                           postdec1	equ	0xFE5
 28154                           fsr1h	equ	0xFE2
 28155                           fsr1l	equ	0xFE1
 28156                           indf2	equ	0xFDF
 28157                           postinc2	equ	0xFDE
 28158                           postdec2	equ	0xFDD
 28159                           plusw2	equ	0xFDB
 28160                           fsr2h	equ	0xFDA
 28161                           fsr2l	equ	0xFD9
 28162                           status	equ	0xFD8
 28163                           
 28164 ;; *************** function _USBStdFeatureReqHandler *****************
 28165 ;; Defined at:
 28166 ;;		line 2385 in file "../Includes/Usb/Framework/usb_device.c"
 28167 ;; Parameters:    Size  Location     Type
 28168 ;;		None
 28169 ;; Auto vars:     Size  Location     Type
 28170 ;;  p               2   25[COMRAM] PTR struct __BDT
 28171 ;;		 -> BDT(48), NULL(0), 
 28172 ;;  pUEP            2   22[COMRAM] PTR unsigned char 
 28173 ;;		 -> UEP0(1), 
 28174 ;;  current_ep_d    1   24[COMRAM] struct .
 28175 ;; Return value:  Size  Location     Type
 28176 ;;                  1    wreg      void 
 28177 ;; Registers used:
 28178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28179 ;; Tracked objects:
 28180 ;;		On entry : 0/0
 28181 ;;		On exit  : 0/0
 28182 ;;		Unchanged: 0/0
 28183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28184 ;;      Params:         0       0       0       0       0       0       0       0       0
 28185 ;;      Locals:         5       0       0       0       0       0       0       0       0
 28186 ;;      Temps:          1       0       0       0       0       0       0       0       0
 28187 ;;      Totals:         6       0       0       0       0       0       0       0       0
 28188 ;;Total ram usage:        6 bytes
 28189 ;; Hardware stack levels used:    1
 28190 ;; Hardware stack levels required when called:    5
 28191 ;; This function calls:
 28192 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28193 ;; This function is called by:
 28194 ;;		_USBCheckStdRequest
 28195 ;; This function uses a non-reentrant model
 28196 ;;
 28197                           
 28198                           	psect	text122
 28199  002518                     __ptext122:
 28200                           	opt stack 0
 28201  002518                     _USBStdFeatureReqHandler:
 28202                           	opt stack 11
 28203                           
 28204                           ;usb_device.c: 2387: BDT_ENTRY *p;
 28205                           ;usb_device.c: 2388: EP_STATUS current_ep_data;
 28206                           ;usb_device.c: 2390: unsigned char* pUEP;
 28207                           ;usb_device.c: 2393: if((SetupPkt.bFeature == 1)&&
 28208                           ;usb_device.c: 2394: (SetupPkt.Recipient == (0x00)))
 28209                           
 28210                           ;incstack = 0
 28211  002518  0104               	movlb	4	; () banked
 28212  00251A  0532               	decf	50,w,b	;volatile
 28213  00251C  A4D8               	btfss	status,2,c
 28214  00251E  D010               	goto	i2l2085
 28215                           
 28216                           ; BSR set to: 4
 28217  002520  5130               	movf	48,w,b	;volatile
 28218  002522  0B1F               	andlw	31
 28219  002524  0900               	iorlw	0
 28220  002526  A4D8               	btfss	status,2,c
 28221  002528  D00B               	goto	i2l2085
 28222                           
 28223                           ; BSR set to: 4
 28224                           ;usb_device.c: 2395: {
 28225                           ;usb_device.c: 2396: inPipes[0].info.bits.busy = 1;
 28226  00252A  0100               	movlb	0	; () banked
 28227  00252C  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28228                           
 28229                           ; BSR set to: 0
 28230                           ;usb_device.c: 2397: if(SetupPkt.bRequest == 3)
 28231  00252E  0E03               	movlw	3
 28232  002530  0104               	movlb	4	; () banked
 28233  002532  1931               	xorwf	49,w,b	;volatile
 28234  002534  A4D8               	btfss	status,2,c
 28235  002536  D002               	goto	i2l2084
 28236                           
 28237                           ; BSR set to: 4
 28238                           ;usb_device.c: 2398: RemoteWakeup = 1;
 28239  002538  0E01               	movlw	1
 28240  00253A  D001               	goto	L26
 28241  00253C                     i2l2084:
 28242                           
 28243                           ; BSR set to: 4
 28244                           ;usb_device.c: 2399: else
 28245                           ;usb_device.c: 2400: RemoteWakeup = 0;
 28246                           
 28247                           ; BSR set to: 4
 28248  00253C  0E00               	movlw	0
 28249  00253E                     L26:
 28250  00253E  6E4B               	movwf	_RemoteWakeup,c	;volatile
 28251  002540                     i2l2085:
 28252                           
 28253                           ; BSR set to: 4
 28254                           ;usb_device.c: 2401: }
 28255                           ;usb_device.c: 2404: if((SetupPkt.bFeature == 0)&&
 28256                           ;usb_device.c: 2405: (SetupPkt.Recipient == (0x02))&&
 28257                           ;usb_device.c: 2406: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 28258                           ;usb_device.c: 2407: (USBDeviceState == CONFIGURED_STATE))
 28259                           
 28260                           ; BSR set to: 4
 28261  002540  5132               	movf	50,w,b	;volatile
 28262  002542  A4D8               	btfss	status,2,c
 28263  002544  0012               	return	
 28264                           
 28265                           ; BSR set to: 4
 28266  002546  5130               	movf	48,w,b	;volatile
 28267  002548  0B1F               	andlw	31
 28268  00254A  0A02               	xorlw	2
 28269  00254C  A4D8               	btfss	status,2,c
 28270  00254E  0012               	return	
 28271                           
 28272                           ; BSR set to: 4
 28273  002550  5134               	movf	52,w,b	;volatile
 28274  002552  0B0F               	andlw	15
 28275  002554  0900               	iorlw	0
 28276  002556  B4D8               	btfsc	status,2,c
 28277  002558  0012               	return	
 28278                           
 28279                           ; BSR set to: 4
 28280  00255A  5134               	movf	52,w,b	;volatile
 28281  00255C  0B0F               	andlw	15
 28282  00255E  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28283  002560  0E03               	movlw	3
 28284  002562  6016               	cpfslt	??_USBStdFeatureReqHandler,c
 28285  002564  0012               	return	
 28286                           
 28287                           ; BSR set to: 4
 28288  002566  0E20               	movlw	32
 28289  002568  0100               	movlb	0	; () banked
 28290  00256A  19EC               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 28291  00256C  A4D8               	btfss	status,2,c
 28292  00256E  0012               	return	
 28293                           
 28294                           ; BSR set to: 0
 28295                           ;usb_device.c: 2408: {
 28296                           ;usb_device.c: 2411: inPipes[0].info.bits.busy = 1;
 28297  002570  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28298                           
 28299                           ;usb_device.c: 2414: if(SetupPkt.EPDir == 0)
 28300  002572  0104               	movlb	4	; () banked
 28301  002574  BF34               	btfsc	52,7,b	;volatile
 28302  002576  D019               	goto	i2l2087
 28303                           
 28304                           ; BSR set to: 4
 28305                           ;usb_device.c: 2415: {
 28306                           ;usb_device.c: 2416: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 28307  002578  5134               	movf	52,w,b	;volatile
 28308  00257A  0B0F               	andlw	15
 28309  00257C  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28310  00257E  5016               	movf	??_USBStdFeatureReqHandler,w,c
 28311  002580  0D02               	mullw	2
 28312  002582  0E40               	movlw	low _pBDTEntryOut
 28313  002584  24F3               	addwf	prodl,w,c
 28314  002586  6ED9               	movwf	fsr2l,c
 28315  002588  0E01               	movlw	high _pBDTEntryOut
 28316  00258A  20F4               	addwfc	prodh,w,c
 28317  00258C  6EDA               	movwf	fsr2h,c
 28318  00258E  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 28319  002592  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 28320                           
 28321                           ;usb_device.c: 2417: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 28322  002596  5134               	movf	52,w,b	;volatile
 28323  002598  0B0F               	andlw	15
 28324  00259A  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28325  00259C  5016               	movf	??_USBStdFeatureReqHandler,w,c
 28326  00259E  0D01               	mullw	1
 28327  0025A0  0ED0               	movlw	low _ep_data_out
 28328  0025A2  24F3               	addwf	prodl,w,c
 28329  0025A4  6ED9               	movwf	fsr2l,c
 28330  0025A6  0E00               	movlw	high _ep_data_out
 28331  0025A8  D018               	goto	L27
 28332  0025AA                     i2l2087:
 28333                           
 28334                           ; BSR set to: 4
 28335                           ;usb_device.c: 2419: else
 28336                           ;usb_device.c: 2420: {
 28337                           ;usb_device.c: 2421: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 28338                           
 28339                           ; BSR set to: 4
 28340  0025AA  5134               	movf	52,w,b	;volatile
 28341  0025AC  0B0F               	andlw	15
 28342  0025AE  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28343  0025B0  5016               	movf	??_USBStdFeatureReqHandler,w,c
 28344  0025B2  0D02               	mullw	2
 28345  0025B4  0ECA               	movlw	low _pBDTEntryIn
 28346  0025B6  24F3               	addwf	prodl,w,c
 28347  0025B8  6ED9               	movwf	fsr2l,c
 28348  0025BA  0E00               	movlw	high _pBDTEntryIn
 28349  0025BC  20F4               	addwfc	prodh,w,c
 28350  0025BE  6EDA               	movwf	fsr2h,c
 28351  0025C0  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 28352  0025C4  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 28353                           
 28354                           ;usb_device.c: 2422: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 28355  0025C8  5134               	movf	52,w,b	;volatile
 28356  0025CA  0B0F               	andlw	15
 28357  0025CC  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28358  0025CE  5016               	movf	??_USBStdFeatureReqHandler,w,c
 28359  0025D0  0D01               	mullw	1
 28360  0025D2  0ED3               	movlw	low _ep_data_in
 28361  0025D4  24F3               	addwf	prodl,w,c
 28362  0025D6  6ED9               	movwf	fsr2l,c
 28363  0025D8  0E00               	movlw	high _ep_data_in
 28364  0025DA                     L27:
 28365  0025DA  20F4               	addwfc	prodh,w,c
 28366  0025DC  6EDA               	movwf	fsr2h,c
 28367  0025DE  50DF               	movf	indf2,w,c
 28368  0025E0  6E19               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 28369                           
 28370                           ; BSR set to: 4
 28371                           ;usb_device.c: 2423: }
 28372                           ;usb_device.c: 2428: if(current_ep_data.bits.ping_pong_state == 0)
 28373                           
 28374                           ; BSR set to: 4
 28375  0025E2  B019               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 28376  0025E4  D002               	goto	i2l2089
 28377                           
 28378                           ; BSR set to: 4
 28379                           ;usb_device.c: 2429: {
 28380                           ;usb_device.c: 2430: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 28381  0025E6  941A               	bcf	USBStdFeatureReqHandler@p,2,c
 28382                           
 28383                           ;usb_device.c: 2431: }
 28384  0025E8  D001               	goto	i2l2090
 28385  0025EA                     i2l2089:
 28386                           
 28387                           ; BSR set to: 4
 28388                           ;usb_device.c: 2432: else
 28389                           ;usb_device.c: 2433: {
 28390                           ;usb_device.c: 2434: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 28391                           
 28392                           ; BSR set to: 4
 28393  0025EA  841A               	bsf	USBStdFeatureReqHandler@p,2,c
 28394  0025EC                     i2l2090:
 28395                           
 28396                           ; BSR set to: 4
 28397                           ;usb_device.c: 2435: }
 28398                           ;usb_device.c: 2439: if(SetupPkt.EPDir == 0)
 28399                           
 28400                           ; BSR set to: 4
 28401  0025EC  BF34               	btfsc	52,7,b	;volatile
 28402  0025EE  D00A               	goto	i2l2091
 28403                           
 28404                           ; BSR set to: 4
 28405                           ;usb_device.c: 2440: {
 28406                           ;usb_device.c: 2441: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 28407  0025F0  5134               	movf	52,w,b	;volatile
 28408  0025F2  0B0F               	andlw	15
 28409  0025F4  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28410  0025F6  5016               	movf	??_USBStdFeatureReqHandler,w,c
 28411  0025F8  0D02               	mullw	2
 28412  0025FA  0E40               	movlw	low _pBDTEntryOut
 28413  0025FC  24F3               	addwf	prodl,w,c
 28414  0025FE  6ED9               	movwf	fsr2l,c
 28415  002600  0E01               	movlw	high _pBDTEntryOut
 28416  002602  D009               	goto	L28
 28417  002604                     i2l2091:
 28418                           
 28419                           ; BSR set to: 4
 28420                           ;usb_device.c: 2443: else
 28421                           ;usb_device.c: 2444: {
 28422                           ;usb_device.c: 2445: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 28423                           
 28424                           ; BSR set to: 4
 28425  002604  5134               	movf	52,w,b	;volatile
 28426  002606  0B0F               	andlw	15
 28427  002608  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28428  00260A  5016               	movf	??_USBStdFeatureReqHandler,w,c
 28429  00260C  0D02               	mullw	2
 28430  00260E  0ECA               	movlw	low _pBDTEntryIn
 28431  002610  24F3               	addwf	prodl,w,c
 28432  002612  6ED9               	movwf	fsr2l,c
 28433  002614  0E00               	movlw	high _pBDTEntryIn
 28434  002616                     L28:
 28435  002616  20F4               	addwfc	prodh,w,c
 28436  002618  6EDA               	movwf	fsr2h,c
 28437  00261A  C01A  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 28438  00261E  C01B  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 28439                           
 28440                           ; BSR set to: 4
 28441                           ;usb_device.c: 2446: }
 28442                           ;usb_device.c: 2449: if(SetupPkt.bRequest == 3)
 28443                           
 28444                           ; BSR set to: 4
 28445  002622  0E03               	movlw	3
 28446  002624  1931               	xorwf	49,w,b	;volatile
 28447  002626  A4D8               	btfss	status,2,c
 28448  002628  D02D               	goto	i2l2093
 28449                           
 28450                           ; BSR set to: 4
 28451                           ;usb_device.c: 2450: {
 28452                           ;usb_device.c: 2451: if(p->STAT.UOWN == 1)
 28453  00262A  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28454  00262E  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28455  002632  AEDF               	btfss	indf2,7,c
 28456  002634  D01A               	goto	i2l2096
 28457                           
 28458                           ; BSR set to: 4
 28459                           ;usb_device.c: 2452: {
 28460                           ;usb_device.c: 2455: if(SetupPkt.EPDir == 0)
 28461  002636  BF34               	btfsc	52,7,b	;volatile
 28462  002638  D00A               	goto	i2l2095
 28463                           
 28464                           ; BSR set to: 4
 28465                           ;usb_device.c: 2456: {
 28466                           ;usb_device.c: 2457: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 28467  00263A  5134               	movf	52,w,b	;volatile
 28468  00263C  0B0F               	andlw	15
 28469  00263E  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28470  002640  5016               	movf	??_USBStdFeatureReqHandler,w,c
 28471  002642  0D01               	mullw	1
 28472  002644  0ED0               	movlw	low _ep_data_out
 28473  002646  24F3               	addwf	prodl,w,c
 28474  002648  6ED9               	movwf	fsr2l,c
 28475  00264A  0E00               	movlw	high _ep_data_out
 28476  00264C  D00A               	goto	L29
 28477  00264E                     i2l2095:
 28478                           
 28479                           ;usb_device.c: 2459: else
 28480                           ;usb_device.c: 2460: {
 28481                           ;usb_device.c: 2461: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 28482                           
 28483                           ; BSR set to: 0
 28484  00264E  0104               	movlb	4	; () banked
 28485  002650  5134               	movf	52,w,b	;volatile
 28486  002652  0B0F               	andlw	15
 28487  002654  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28488  002656  5016               	movf	??_USBStdFeatureReqHandler,w,c
 28489  002658  0D01               	mullw	1
 28490  00265A  0ED3               	movlw	low _ep_data_in
 28491  00265C  24F3               	addwf	prodl,w,c
 28492  00265E  6ED9               	movwf	fsr2l,c
 28493  002660  0E00               	movlw	high _ep_data_in
 28494  002662                     L29:
 28495  002662  20F4               	addwfc	prodh,w,c
 28496  002664  6EDA               	movwf	fsr2h,c
 28497  002666  0100               	movlb	0	; () banked
 28498  002668  82DF               	bsf	indf2,1,c
 28499  00266A                     i2l2096:
 28500                           
 28501                           ;usb_device.c: 2462: }
 28502                           ;usb_device.c: 2463: }
 28503                           ;usb_device.c: 2466: p->STAT.Val |= 0x04;
 28504                           
 28505                           ; BSR set to: 0
 28506                           
 28507                           ; BSR set to: 0
 28508  00266A  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28509  00266E  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28510  002672  0E00               	movlw	0
 28511  002674  84DB               	bsf	plusw2,2,c
 28512                           
 28513                           ;usb_device.c: 2467: p->STAT.Val |= 0x80;
 28514  002676  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28515  00267A  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28516  00267E  0E00               	movlw	0
 28517  002680  8EDB               	bsf	plusw2,7,c
 28518                           
 28519                           ;usb_device.c: 2468: }
 28520  002682  0012               	return	
 28521  002684                     i2l2093:
 28522                           
 28523                           ;usb_device.c: 2469: else
 28524                           ;usb_device.c: 2470: {
 28525                           ;usb_device.c: 2473: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 28526  002684  0E04               	movlw	4
 28527  002686  1A1A               	xorwf	USBStdFeatureReqHandler@p,f,c
 28528                           
 28529                           ;usb_device.c: 2475: if(p->STAT.UOWN == 1)
 28530  002688  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28531  00268C  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28532  002690  AEDF               	btfss	indf2,7,c
 28533  002692  D01B               	goto	i2l2098
 28534                           
 28535                           ;usb_device.c: 2476: {
 28536                           ;usb_device.c: 2479: p->STAT.Val &= (~0x80);
 28537  002694  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28538  002698  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28539  00269C  0E7F               	movlw	127
 28540  00269E  16DF               	andwf	indf2,f,c
 28541                           
 28542                           ;usb_device.c: 2480: p->STAT.Val |= 0x40;
 28543  0026A0  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28544  0026A4  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28545  0026A8  0E00               	movlw	0
 28546  0026AA  8CDB               	bsf	plusw2,6,c
 28547                           
 28548                           ;usb_device.c: 2481: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 28549  0026AC  0E00               	movlw	0
 28550  0026AE  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 28551  0026B0  0E05               	movlw	5
 28552  0026B2  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 28553  0026B4  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 28554  0026B8  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 28555  0026BC  0E00               	movlw	0
 28556  0026BE  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 28557  0026C0  0E02               	movlw	2
 28558  0026C2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 28559  0026C4  EC00  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 28560                           
 28561                           ;usb_device.c: 2482: }
 28562  0026C8  D006               	goto	i2l2099
 28563  0026CA                     i2l2098:
 28564                           
 28565                           ;usb_device.c: 2483: else
 28566                           ;usb_device.c: 2484: {
 28567                           ;usb_device.c: 2486: p->STAT.Val |= 0x40;
 28568  0026CA  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28569  0026CE  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28570  0026D2  0E00               	movlw	0
 28571  0026D4  8CDB               	bsf	plusw2,6,c
 28572  0026D6                     i2l2099:
 28573                           
 28574                           ;usb_device.c: 2487: }
 28575                           ;usb_device.c: 2491: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 28576  0026D6  0E04               	movlw	4
 28577  0026D8  1A1A               	xorwf	USBStdFeatureReqHandler@p,f,c
 28578                           
 28579                           ;usb_device.c: 2497: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 28580  0026DA  B219               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 28581  0026DC  D006               	goto	i2u647_40
 28582  0026DE  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28583  0026E2  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28584  0026E6  AEDF               	btfss	indf2,7,c
 28585  0026E8  D030               	goto	i2l2100
 28586  0026EA                     i2u647_40:
 28587                           
 28588                           ;usb_device.c: 2498: {
 28589                           ;usb_device.c: 2499: if(SetupPkt.EPDir == 0)
 28590  0026EA  0104               	movlb	4	; () banked
 28591  0026EC  BF34               	btfsc	52,7,b	;volatile
 28592  0026EE  D00A               	goto	i2l2103
 28593                           
 28594                           ; BSR set to: 4
 28595                           ;usb_device.c: 2500: {
 28596                           ;usb_device.c: 2501: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 28597  0026F0  5134               	movf	52,w,b	;volatile
 28598  0026F2  0B0F               	andlw	15
 28599  0026F4  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28600  0026F6  5016               	movf	??_USBStdFeatureReqHandler,w,c
 28601  0026F8  0D01               	mullw	1
 28602  0026FA  0ED0               	movlw	low _ep_data_out
 28603  0026FC  24F3               	addwf	prodl,w,c
 28604  0026FE  6ED9               	movwf	fsr2l,c
 28605  002700  0E00               	movlw	high _ep_data_out
 28606  002702  D00A               	goto	L30
 28607  002704                     i2l2103:
 28608                           
 28609                           ;usb_device.c: 2503: else
 28610                           ;usb_device.c: 2504: {
 28611                           ;usb_device.c: 2505: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 28612                           
 28613                           ; BSR set to: 0
 28614  002704  0104               	movlb	4	; () banked
 28615  002706  5134               	movf	52,w,b	;volatile
 28616  002708  0B0F               	andlw	15
 28617  00270A  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28618  00270C  5016               	movf	??_USBStdFeatureReqHandler,w,c
 28619  00270E  0D01               	mullw	1
 28620  002710  0ED3               	movlw	low _ep_data_in
 28621  002712  24F3               	addwf	prodl,w,c
 28622  002714  6ED9               	movwf	fsr2l,c
 28623  002716  0E00               	movlw	high _ep_data_in
 28624  002718                     L30:
 28625  002718  20F4               	addwfc	prodh,w,c
 28626  00271A  6EDA               	movwf	fsr2h,c
 28627  00271C  0100               	movlb	0	; () banked
 28628  00271E  92DF               	bcf	indf2,1,c
 28629                           
 28630                           ; BSR set to: 0
 28631                           ;usb_device.c: 2506: }
 28632                           ;usb_device.c: 2508: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 28633                           
 28634                           ; BSR set to: 0
 28635  002720  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28636  002724  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28637  002728  0E3B               	movlw	59
 28638  00272A  16DF               	andwf	indf2,f,c
 28639                           
 28640                           ; BSR set to: 0
 28641                           ;usb_device.c: 2511: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 28642  00272C  0E00               	movlw	0
 28643  00272E  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 28644  002730  0E05               	movlw	5
 28645  002732  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 28646  002734  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 28647  002738  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 28648  00273C  0E00               	movlw	0
 28649  00273E  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 28650  002740  0E02               	movlw	2
 28651  002742  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 28652  002744  EC00  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 28653                           
 28654                           ;usb_device.c: 2512: }
 28655  002748  D006               	goto	i2l2105
 28656  00274A                     i2l2100:
 28657                           
 28658                           ;usb_device.c: 2513: else
 28659                           ;usb_device.c: 2514: {
 28660                           ;usb_device.c: 2516: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 28661  00274A  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28662  00274E  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28663  002752  0E3B               	movlw	59
 28664  002754  16DF               	andwf	indf2,f,c
 28665  002756                     i2l2105:
 28666                           
 28667                           ;usb_device.c: 2517: }
 28668                           ;usb_device.c: 2519: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 28669  002756  0104               	movlb	4	; () banked
 28670  002758  5134               	movf	52,w,b	;volatile
 28671  00275A  0B0F               	andlw	15
 28672  00275C  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28673  00275E  5016               	movf	??_USBStdFeatureReqHandler,w,c
 28674  002760  0D01               	mullw	1
 28675  002762  0E6A               	movlw	106
 28676  002764  24F3               	addwf	prodl,w,c
 28677  002766  6E17               	movwf	USBStdFeatureReqHandler@pUEP,c
 28678  002768  0E0F               	movlw	15
 28679  00276A  20F4               	addwfc	prodh,w,c
 28680  00276C  6E18               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 28681                           
 28682                           ; BSR set to: 4
 28683                           ;usb_device.c: 2522: *pUEP &= ~0x0001;
 28684  00276E  C017  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 28685  002772  C018  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 28686  002776  0EFE               	movlw	254
 28687  002778  16DF               	andwf	indf2,f,c
 28688                           
 28689                           ; BSR set to: 4
 28690  00277A  0012               	return	
 28691  00277C                     __end_of_USBStdFeatureReqHandler:
 28692                           	opt stack 0
 28693                           pclatu	equ	0xFFB
 28694                           pclath	equ	0xFFA
 28695                           tblptru	equ	0xFF8
 28696                           tblptrh	equ	0xFF7
 28697                           tblptrl	equ	0xFF6
 28698                           tablat	equ	0xFF5
 28699                           prodh	equ	0xFF4
 28700                           prodl	equ	0xFF3
 28701                           intcon	equ	0xFF2
 28702                           intcon2	equ	0xFF1
 28703                           intcon3	equ	0xFF0
 28704                           indf0	equ	0xFEF
 28705                           postinc0	equ	0xFEE
 28706                           fsr0h	equ	0xFEA
 28707                           fsr0l	equ	0xFE9
 28708                           wreg	equ	0xFE8
 28709                           indf1	equ	0xFE7
 28710                           postdec1	equ	0xFE5
 28711                           fsr1h	equ	0xFE2
 28712                           fsr1l	equ	0xFE1
 28713                           indf2	equ	0xFDF
 28714                           postinc2	equ	0xFDE
 28715                           postdec2	equ	0xFDD
 28716                           plusw2	equ	0xFDB
 28717                           fsr2h	equ	0xFDA
 28718                           fsr2l	equ	0xFD9
 28719                           status	equ	0xFD8
 28720                           
 28721 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 28722 ;; Defined at:
 28723 ;;		line 308 in file "../Includes/Board/USBapp.c"
 28724 ;; Parameters:    Size  Location     Type
 28725 ;;  event           2   13[COMRAM] enum E5981
 28726 ;;  pdata           2   15[COMRAM] PTR void 
 28727 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(48), NULL(0), 
 28728 ;;  size            2   17[COMRAM] unsigned int 
 28729 ;; Auto vars:     Size  Location     Type
 28730 ;;		None
 28731 ;; Return value:  Size  Location     Type
 28732 ;;                  1    wreg      unsigned char 
 28733 ;; Registers used:
 28734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28735 ;; Tracked objects:
 28736 ;;		On entry : 0/0
 28737 ;;		On exit  : 0/0
 28738 ;;		Unchanged: 0/0
 28739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28740 ;;      Params:         6       0       0       0       0       0       0       0       0
 28741 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28742 ;;      Temps:          2       0       0       0       0       0       0       0       0
 28743 ;;      Totals:         8       0       0       0       0       0       0       0       0
 28744 ;;Total ram usage:        8 bytes
 28745 ;; Hardware stack levels used:    1
 28746 ;; Hardware stack levels required when called:    4
 28747 ;; This function calls:
 28748 ;;		_USBCheckCDCRequest
 28749 ;;		_USBapp_CdcEmulatorInitialize
 28750 ;; This function is called by:
 28751 ;;		_USBDeviceTasks
 28752 ;;		_USBStdSetCfgHandler
 28753 ;;		_USBSuspend
 28754 ;;		_USBWakeFromSuspend
 28755 ;;		_USBCtrlTrfSetupHandler
 28756 ;;		_USBCheckStdRequest
 28757 ;;		_USBStdFeatureReqHandler
 28758 ;; This function uses a non-reentrant model
 28759 ;;
 28760                           
 28761                           	psect	text123
 28762  005600                     __ptext123:
 28763                           	opt stack 0
 28764  005600                     _USER_USB_CALLBACK_EVENT_HANDLER:
 28765                           	opt stack 15
 28766                           
 28767                           ;USBapp.c: 310: switch( (int) event )
 28768                           
 28769                           ;incstack = 0
 28770  005600  D006               	goto	i2l917
 28771  005602                     
 28772                           ;USBapp.c: 334: USBapp_CdcEmulatorInitialize();
 28773  005602  EC89  F02B         	call	_USBapp_CdcEmulatorInitialize	;wreg free
 28774                           
 28775                           ;USBapp.c: 338: break;
 28776                           
 28777                           ;USBapp.c: 337: case EVENT_SET_DESCRIPTOR:
 28778                           
 28779                           ;USBapp.c: 335: break;
 28780  005606  0012               	return	
 28781  005608                     
 28782                           ;USBapp.c: 343: USBCheckCDCRequest();
 28783  005608  EC73  F023         	call	_USBCheckCDCRequest	;wreg free
 28784                           
 28785                           ;USBapp.c: 354: }
 28786                           
 28787                           ;USBapp.c: 353: break;
 28788                           
 28789                           ;USBapp.c: 352: default:
 28790                           
 28791                           ;USBapp.c: 350: break;
 28792                           
 28793                           ;USBapp.c: 349: case EVENT_TRANSFER_TERMINATED:
 28794                           
 28795                           ;USBapp.c: 347: break;
 28796                           
 28797                           ;USBapp.c: 346: case EVENT_BUS_ERROR:
 28798                           
 28799                           ;USBapp.c: 344: break;
 28800  00560C  0012               	return	
 28801  00560E                     i2l917:
 28802  00560E  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 28803  005612  C00F  F015         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 28804                           
 28805                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 28806                           ; Switch size 1, requested type "space"
 28807                           ; Number of cases is 2, Range of values is 0 to 127
 28808                           ; switch strategies available:
 28809                           ; Name         Instructions Cycles
 28810                           ; simple_byte            7     4 (average)
 28811                           ;	Chosen strategy is simple_byte
 28812  005616  5015               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 28813  005618  0A00               	xorlw	0	; case 0
 28814  00561A  B4D8               	btfsc	status,2,c
 28815  00561C  D004               	goto	i2l12413
 28816  00561E  0A7F               	xorlw	127	; case 127
 28817  005620  A4D8               	btfss	status,2,c
 28818  005622  0012               	return	
 28819  005624  D018               	goto	i2l12415
 28820  005626                     i2l12413:
 28821                           
 28822                           ; Switch size 1, requested type "space"
 28823                           ; Number of cases is 8, Range of values is 1 to 117
 28824                           ; switch strategies available:
 28825                           ; Name         Instructions Cycles
 28826                           ; simple_byte           25    13 (average)
 28827                           ;	Chosen strategy is simple_byte
 28828  005626  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 28829  005628  0A01               	xorlw	1	; case 1
 28830  00562A  B4D8               	btfsc	status,2,c
 28831  00562C  D7EA               	goto	i2l923
 28832  00562E  0A03               	xorlw	3	; case 2
 28833  005630  B4D8               	btfsc	status,2,c
 28834  005632  0012               	return	
 28835  005634  0A01               	xorlw	1	; case 3
 28836  005636  B4D8               	btfsc	status,2,c
 28837  005638  D7E7               	goto	i2l925
 28838  00563A  0A06               	xorlw	6	; case 5
 28839  00563C  B4D8               	btfsc	status,2,c
 28840  00563E  0012               	return	
 28841  005640  0A77               	xorlw	119	; case 114
 28842  005642  B4D8               	btfsc	status,2,c
 28843  005644  0012               	return	
 28844  005646  0A01               	xorlw	1	; case 115
 28845  005648  B4D8               	btfsc	status,2,c
 28846  00564A  0012               	return	
 28847  00564C  0A07               	xorlw	7	; case 116
 28848  00564E  B4D8               	btfsc	status,2,c
 28849  005650  0012               	return	
 28850  005652  0A01               	xorlw	1	; case 117
 28851  005654  0012               	return	
 28852  005656                     i2l12415:
 28853                           
 28854                           ; Switch size 1, requested type "space"
 28855                           ; Number of cases is 1, Range of values is 255 to 255
 28856                           ; switch strategies available:
 28857                           ; Name         Instructions Cycles
 28858                           ; simple_byte            4     3 (average)
 28859                           ;	Chosen strategy is simple_byte
 28860  005656  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 28861  005658  0AFF               	xorlw	255	; case 255
 28862  00565A  0012               	return	
 28863  00565C                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 28864                           	opt stack 0
 28865                           pclatu	equ	0xFFB
 28866                           pclath	equ	0xFFA
 28867                           tblptru	equ	0xFF8
 28868                           tblptrh	equ	0xFF7
 28869                           tblptrl	equ	0xFF6
 28870                           tablat	equ	0xFF5
 28871                           prodh	equ	0xFF4
 28872                           prodl	equ	0xFF3
 28873                           intcon	equ	0xFF2
 28874                           intcon2	equ	0xFF1
 28875                           intcon3	equ	0xFF0
 28876                           indf0	equ	0xFEF
 28877                           postinc0	equ	0xFEE
 28878                           fsr0h	equ	0xFEA
 28879                           fsr0l	equ	0xFE9
 28880                           wreg	equ	0xFE8
 28881                           indf1	equ	0xFE7
 28882                           postdec1	equ	0xFE5
 28883                           fsr1h	equ	0xFE2
 28884                           fsr1l	equ	0xFE1
 28885                           indf2	equ	0xFDF
 28886                           postinc2	equ	0xFDE
 28887                           postdec2	equ	0xFDD
 28888                           plusw2	equ	0xFDB
 28889                           fsr2h	equ	0xFDA
 28890                           fsr2l	equ	0xFD9
 28891                           status	equ	0xFD8
 28892                           
 28893 ;; *************** function _USBapp_CdcEmulatorInitialize *****************
 28894 ;; Defined at:
 28895 ;;		line 144 in file "../Includes/Board/USBapp.c"
 28896 ;; Parameters:    Size  Location     Type
 28897 ;;		None
 28898 ;; Auto vars:     Size  Location     Type
 28899 ;;  i               1   12[COMRAM] unsigned char 
 28900 ;; Return value:  Size  Location     Type
 28901 ;;                  1    wreg      void 
 28902 ;; Registers used:
 28903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28904 ;; Tracked objects:
 28905 ;;		On entry : 0/0
 28906 ;;		On exit  : 0/0
 28907 ;;		Unchanged: 0/0
 28908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28909 ;;      Params:         0       0       0       0       0       0       0       0       0
 28910 ;;      Locals:         1       0       0       0       0       0       0       0       0
 28911 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28912 ;;      Totals:         1       0       0       0       0       0       0       0       0
 28913 ;;Total ram usage:        1 bytes
 28914 ;; Hardware stack levels used:    1
 28915 ;; Hardware stack levels required when called:    3
 28916 ;; This function calls:
 28917 ;;		_CDCInitEP
 28918 ;;		i2_EUSART_Initialize
 28919 ;; This function is called by:
 28920 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28921 ;; This function uses a non-reentrant model
 28922 ;;
 28923                           
 28924                           	psect	text124
 28925  005712                     __ptext124:
 28926                           	opt stack 0
 28927  005712                     _USBapp_CdcEmulatorInitialize:
 28928                           	opt stack 15
 28929                           
 28930                           ;USBapp.c: 147: CDCInitEP();
 28931                           
 28932                           ;incstack = 0
 28933  005712  EC9E  F02A         	call	_CDCInitEP	;wreg free
 28934                           
 28935                           ;USBapp.c: 148: line_coding.bCharFormat = 0;
 28936  005716  0E00               	movlw	0
 28937  005718  0101               	movlb	1	; () banked
 28938  00571A  6FEB               	movwf	(_line_coding+4)& (0+255),b
 28939                           
 28940                           ; BSR set to: 1
 28941                           ;USBapp.c: 149: line_coding.bDataBits = 8;
 28942  00571C  0E08               	movlw	8
 28943  00571E  6FED               	movwf	(_line_coding+6)& (0+255),b
 28944                           
 28945                           ; BSR set to: 1
 28946                           ;USBapp.c: 150: line_coding.bParityType = 0;
 28947  005720  0E00               	movlw	0
 28948  005722  6FEC               	movwf	(_line_coding+5)& (0+255),b
 28949                           
 28950                           ; BSR set to: 1
 28951                           ;USBapp.c: 151: line_coding.dwDTERate = 19200;
 28952  005724  0E00               	movlw	0
 28953  005726  6FE7               	movwf	_line_coding& (0+255),b
 28954  005728  0E4B               	movlw	75
 28955  00572A  6FE8               	movwf	(_line_coding+1)& (0+255),b
 28956  00572C  0E00               	movlw	0
 28957  00572E  6FE9               	movwf	(_line_coding+2)& (0+255),b
 28958  005730  0E00               	movlw	0
 28959  005732  6FEA               	movwf	(_line_coding+3)& (0+255),b
 28960                           
 28961                           ; BSR set to: 1
 28962                           ;USBapp.c: 152: EUSART_Initialize();
 28963  005734  ECA4  F02D         	call	i2_EUSART_Initialize	;wreg free
 28964                           
 28965                           ;USBapp.c: 154: for (unsigned char i = 0; i <sizeof (USB_Buffer); i++)
 28966  005738  0E00               	movlw	0
 28967  00573A  6E0D               	movwf	USBapp_CdcEmulatorInitialize@i,c
 28968  00573C                     i2l7969:
 28969  00573C  0E3F               	movlw	63
 28970  00573E  640D               	cpfsgt	USBapp_CdcEmulatorInitialize@i,c
 28971  005740  D001               	goto	i2l870
 28972  005742  D00C               	goto	i2u581_40
 28973  005744                     i2l870:
 28974                           
 28975                           ;USBapp.c: 155: {
 28976                           ;USBapp.c: 156: USB_Buffer[i] = 0;
 28977  005744  500D               	movf	USBapp_CdcEmulatorInitialize@i,w,c
 28978  005746  0D01               	mullw	1
 28979  005748  0E80               	movlw	low _USB_Buffer
 28980  00574A  24F3               	addwf	prodl,w,c
 28981  00574C  6ED9               	movwf	fsr2l,c
 28982  00574E  0E02               	movlw	high _USB_Buffer
 28983  005750  20F4               	addwfc	prodh,w,c
 28984  005752  6EDA               	movwf	fsr2h,c
 28985  005754  0E00               	movlw	0
 28986  005756  6EDF               	movwf	indf2,c
 28987  005758  2A0D               	incf	USBapp_CdcEmulatorInitialize@i,f,c
 28988  00575A  D7F0               	goto	i2l7969
 28989  00575C                     i2u581_40:
 28990                           
 28991                           ;USBapp.c: 157: }
 28992                           ;USBapp.c: 158: NextUSBOut = 0;
 28993  00575C  0E00               	movlw	0
 28994  00575E  0100               	movlb	0	; () banked
 28995  005760  6FE8               	movwf	_NextUSBOut& (0+255),b
 28996                           
 28997                           ;USBapp.c: 159: LastRS232Out = 0;
 28998  005762  0E00               	movlw	0
 28999  005764  6FE6               	movwf	_LastRS232Out& (0+255),b
 29000                           
 29001                           ; BSR set to: 0
 29002  005766  0012               	return		;funcret
 29003  005768                     __end_of_USBapp_CdcEmulatorInitialize:
 29004                           	opt stack 0
 29005                           pclatu	equ	0xFFB
 29006                           pclath	equ	0xFFA
 29007                           tblptru	equ	0xFF8
 29008                           tblptrh	equ	0xFF7
 29009                           tblptrl	equ	0xFF6
 29010                           tablat	equ	0xFF5
 29011                           prodh	equ	0xFF4
 29012                           prodl	equ	0xFF3
 29013                           intcon	equ	0xFF2
 29014                           intcon2	equ	0xFF1
 29015                           intcon3	equ	0xFF0
 29016                           indf0	equ	0xFEF
 29017                           postinc0	equ	0xFEE
 29018                           fsr0h	equ	0xFEA
 29019                           fsr0l	equ	0xFE9
 29020                           wreg	equ	0xFE8
 29021                           indf1	equ	0xFE7
 29022                           postdec1	equ	0xFE5
 29023                           fsr1h	equ	0xFE2
 29024                           fsr1l	equ	0xFE1
 29025                           indf2	equ	0xFDF
 29026                           postinc2	equ	0xFDE
 29027                           postdec2	equ	0xFDD
 29028                           plusw2	equ	0xFDB
 29029                           fsr2h	equ	0xFDA
 29030                           fsr2l	equ	0xFD9
 29031                           status	equ	0xFD8
 29032                           
 29033 ;; *************** function _CDCInitEP *****************
 29034 ;; Defined at:
 29035 ;;		line 296 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 29036 ;; Parameters:    Size  Location     Type
 29037 ;;		None
 29038 ;; Auto vars:     Size  Location     Type
 29039 ;;		None
 29040 ;; Return value:  Size  Location     Type
 29041 ;;                  1    wreg      void 
 29042 ;; Registers used:
 29043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29044 ;; Tracked objects:
 29045 ;;		On entry : 0/0
 29046 ;;		On exit  : 0/0
 29047 ;;		Unchanged: 0/0
 29048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29049 ;;      Params:         0       0       0       0       0       0       0       0       0
 29050 ;;      Locals:         0       0       0       0       0       0       0       0       0
 29051 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29052 ;;      Totals:         0       0       0       0       0       0       0       0       0
 29053 ;;Total ram usage:        0 bytes
 29054 ;; Hardware stack levels used:    1
 29055 ;; Hardware stack levels required when called:    2
 29056 ;; This function calls:
 29057 ;;		_USBEnableEndpoint
 29058 ;;		i2_USBTransferOnePacket
 29059 ;; This function is called by:
 29060 ;;		_USBapp_CdcEmulatorInitialize
 29061 ;; This function uses a non-reentrant model
 29062 ;;
 29063                           
 29064                           	psect	text125
 29065  00553C                     __ptext125:
 29066                           	opt stack 0
 29067  00553C                     _CDCInitEP:
 29068                           	opt stack 15
 29069                           
 29070                           ;usb_device_cdc.c: 299: line_coding.dwDTERate = 19200;
 29071                           
 29072                           ; BSR set to: 0
 29073                           ;incstack = 0
 29074  00553C  0E00               	movlw	0
 29075  00553E  0101               	movlb	1	; () banked
 29076  005540  6FE7               	movwf	_line_coding& (0+255),b
 29077  005542  0E4B               	movlw	75
 29078  005544  6FE8               	movwf	(_line_coding+1)& (0+255),b
 29079  005546  0E00               	movlw	0
 29080  005548  6FE9               	movwf	(_line_coding+2)& (0+255),b
 29081  00554A  0E00               	movlw	0
 29082  00554C  6FEA               	movwf	(_line_coding+3)& (0+255),b
 29083                           
 29084                           ;usb_device_cdc.c: 300: line_coding.bCharFormat = 0x00;
 29085  00554E  0E00               	movlw	0
 29086  005550  6FEB               	movwf	(_line_coding+4)& (0+255),b
 29087                           
 29088                           ;usb_device_cdc.c: 301: line_coding.bParityType = 0x00;
 29089  005552  0E00               	movlw	0
 29090  005554  6FEC               	movwf	(_line_coding+5)& (0+255),b
 29091                           
 29092                           ;usb_device_cdc.c: 302: line_coding.bDataBits = 0x08;
 29093  005556  0E08               	movlw	8
 29094  005558  6FED               	movwf	(_line_coding+6)& (0+255),b
 29095                           
 29096                           ;usb_device_cdc.c: 304: cdc_rx_len = 0;
 29097  00555A  0E00               	movlw	0
 29098  00555C  0100               	movlb	0	; () banked
 29099  00555E  6FDD               	movwf	_cdc_rx_len& (0+255),b
 29100                           
 29101                           ; BSR set to: 0
 29102                           ;usb_device_cdc.c: 317: USBEnableEndpoint(1,0x02|0x10|0x08);
 29103  005560  0E1A               	movlw	26
 29104  005562  6E09               	movwf	USBEnableEndpoint@options,c
 29105  005564  0E01               	movlw	1
 29106  005566  EC30  F02D         	call	_USBEnableEndpoint
 29107                           
 29108                           ;usb_device_cdc.c: 318: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 29109  00556A  0E1E               	movlw	30
 29110  00556C  6E09               	movwf	USBEnableEndpoint@options,c
 29111  00556E  0E02               	movlw	2
 29112  005570  EC30  F02D         	call	_USBEnableEndpoint
 29113                           
 29114                           ;usb_device_cdc.c: 320: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 29115  005574  0E00               	movlw	0
 29116  005576  6E01               	movwf	i2USBTransferOnePacket@dir,c
 29117  005578  0E40               	movlw	64
 29118  00557A  6E02               	movwf	i2USBTransferOnePacket@data,c
 29119  00557C  0E05               	movlw	5
 29120  00557E  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 29121  005580  0E40               	movlw	64
 29122  005582  6E04               	movwf	i2USBTransferOnePacket@len,c
 29123  005584  0E02               	movlw	2
 29124  005586  EC07  F022         	call	i2_USBTransferOnePacket
 29125  00558A  C001  F0D6         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 29126  00558E  C002  F0D7         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 29127                           
 29128                           ;usb_device_cdc.c: 321: CDCDataInHandle = (0);
 29129  005592  0E00               	movlw	0
 29130  005594  6E34               	movwf	_CDCDataInHandle,c
 29131  005596  0E00               	movlw	0
 29132  005598  6E35               	movwf	_CDCDataInHandle+1,c
 29133                           
 29134                           ;usb_device_cdc.c: 326: cdc_trf_state = 0;
 29135  00559A  0E00               	movlw	0
 29136  00559C  0100               	movlb	0	; () banked
 29137  00559E  6FEB               	movwf	_cdc_trf_state& (0+255),b
 29138                           
 29139                           ; BSR set to: 0
 29140  0055A0  0012               	return		;funcret
 29141  0055A2                     __end_of_CDCInitEP:
 29142                           	opt stack 0
 29143                           pclatu	equ	0xFFB
 29144                           pclath	equ	0xFFA
 29145                           tblptru	equ	0xFF8
 29146                           tblptrh	equ	0xFF7
 29147                           tblptrl	equ	0xFF6
 29148                           tablat	equ	0xFF5
 29149                           prodh	equ	0xFF4
 29150                           prodl	equ	0xFF3
 29151                           intcon	equ	0xFF2
 29152                           intcon2	equ	0xFF1
 29153                           intcon3	equ	0xFF0
 29154                           indf0	equ	0xFEF
 29155                           postinc0	equ	0xFEE
 29156                           fsr0h	equ	0xFEA
 29157                           fsr0l	equ	0xFE9
 29158                           wreg	equ	0xFE8
 29159                           indf1	equ	0xFE7
 29160                           postdec1	equ	0xFE5
 29161                           fsr1h	equ	0xFE2
 29162                           fsr1l	equ	0xFE1
 29163                           indf2	equ	0xFDF
 29164                           postinc2	equ	0xFDE
 29165                           postdec2	equ	0xFDD
 29166                           plusw2	equ	0xFDB
 29167                           fsr2h	equ	0xFDA
 29168                           fsr2l	equ	0xFD9
 29169                           status	equ	0xFD8
 29170                           
 29171 ;; *************** function i2_USBTransferOnePacket *****************
 29172 ;; Defined at:
 29173 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 29174 ;; Parameters:    Size  Location     Type
 29175 ;;  ep              1    wreg     unsigned char 
 29176 ;;  dir             1    0[COMRAM] unsigned char 
 29177 ;;  data            2    1[COMRAM] PTR unsigned char 
 29178 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 29179 ;;  len             1    3[COMRAM] unsigned char 
 29180 ;; Auto vars:     Size  Location     Type
 29181 ;;  ep              1    4[COMRAM] unsigned char 
 29182 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 29183 ;;		 -> BDT(48), NULL(0), 
 29184 ;; Return value:  Size  Location     Type
 29185 ;;                  2    0[COMRAM] PTR void 
 29186 ;; Registers used:
 29187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29188 ;; Tracked objects:
 29189 ;;		On entry : 0/0
 29190 ;;		On exit  : 0/0
 29191 ;;		Unchanged: 0/0
 29192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29193 ;;      Params:         4       0       0       0       0       0       0       0       0
 29194 ;;      Locals:         3       0       0       0       0       0       0       0       0
 29195 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29196 ;;      Totals:         7       0       0       0       0       0       0       0       0
 29197 ;;Total ram usage:        7 bytes
 29198 ;; Hardware stack levels used:    1
 29199 ;; This function calls:
 29200 ;;		Nothing
 29201 ;; This function is called by:
 29202 ;;		_CDCInitEP
 29203 ;; This function uses a non-reentrant model
 29204 ;;
 29205                           
 29206                           	psect	text126
 29207  00440E                     __ptext126:
 29208                           	opt stack 0
 29209  00440E                     i2_USBTransferOnePacket:
 29210                           	opt stack 16
 29211                           
 29212                           ; BSR set to: 0
 29213                           ;incstack = 0
 29214                           ;i2USBTransferOnePacket@ep stored from wreg
 29215  00440E  6E05               	movwf	i2USBTransferOnePacket@ep,c
 29216                           
 29217                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 29218                           ;usb_device.c: 762: if(dir != 0)
 29219  004410  5001               	movf	i2USBTransferOnePacket@dir,w,c
 29220  004412  B4D8               	btfsc	status,2,c
 29221  004414  D007               	goto	i2l1894
 29222                           
 29223                           ;usb_device.c: 763: {
 29224                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 29225  004416  5005               	movf	i2USBTransferOnePacket@ep,w,c
 29226  004418  0D02               	mullw	2
 29227  00441A  0ECA               	movlw	low _pBDTEntryIn
 29228  00441C  24F3               	addwf	prodl,w,c
 29229  00441E  6ED9               	movwf	fsr2l,c
 29230  004420  0E00               	movlw	high _pBDTEntryIn
 29231  004422  D006               	goto	L31
 29232  004424                     i2l1894:
 29233                           
 29234                           ;usb_device.c: 767: else
 29235                           ;usb_device.c: 768: {
 29236                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 29237  004424  5005               	movf	i2USBTransferOnePacket@ep,w,c
 29238  004426  0D02               	mullw	2
 29239  004428  0E40               	movlw	low _pBDTEntryOut
 29240  00442A  24F3               	addwf	prodl,w,c
 29241  00442C  6ED9               	movwf	fsr2l,c
 29242  00442E  0E01               	movlw	high _pBDTEntryOut
 29243  004430                     L31:
 29244  004430  20F4               	addwfc	prodh,w,c
 29245  004432  6EDA               	movwf	fsr2h,c
 29246  004434  CFDE F006          	movff	postinc2,i2USBTransferOnePacket@handle
 29247  004438  CFDD F007          	movff	postdec2,i2USBTransferOnePacket@handle+1
 29248                           
 29249                           ;usb_device.c: 771: }
 29250                           ;usb_device.c: 775: if(handle == 0)
 29251  00443C  5006               	movf	i2USBTransferOnePacket@handle,w,c
 29252  00443E  1007               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 29253  004440  A4D8               	btfss	status,2,c
 29254  004442  D005               	goto	i2l1896
 29255                           
 29256                           ;usb_device.c: 776: {
 29257                           ;usb_device.c: 777: return 0;
 29258  004444  0E00               	movlw	0
 29259  004446  6E01               	movwf	?i2_USBTransferOnePacket,c
 29260  004448  0E00               	movlw	0
 29261  00444A  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 29262  00444C  0012               	return	
 29263  00444E                     i2l1896:
 29264                           
 29265                           ;usb_device.c: 778: }
 29266                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 29267  00444E  EE20 F002          	lfsr	2,2
 29268  004452  5006               	movf	i2USBTransferOnePacket@handle,w,c
 29269  004454  26D9               	addwf	fsr2l,f,c
 29270  004456  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 29271  004458  22DA               	addwfc	fsr2h,f,c
 29272  00445A  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 29273  00445E  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 29274                           
 29275                           ;usb_device.c: 781: handle->CNT = len;
 29276  004462  EE20 F001          	lfsr	2,1
 29277  004466  5006               	movf	i2USBTransferOnePacket@handle,w,c
 29278  004468  26D9               	addwf	fsr2l,f,c
 29279  00446A  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 29280  00446C  22DA               	addwfc	fsr2h,f,c
 29281  00446E  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 29282                           
 29283                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 29284  004472  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 29285  004476  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 29286  00447A  0E40               	movlw	64
 29287  00447C  16DF               	andwf	indf2,f,c
 29288                           
 29289                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 29290  00447E  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 29291  004482  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 29292  004486  0E00               	movlw	0
 29293  004488  86DB               	bsf	plusw2,3,c
 29294                           
 29295                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 29296  00448A  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 29297  00448E  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 29298  004492  0E00               	movlw	0
 29299  004494  8EDB               	bsf	plusw2,7,c
 29300                           
 29301                           ;usb_device.c: 787: if(dir != 0)
 29302  004496  5001               	movf	i2USBTransferOnePacket@dir,w,c
 29303  004498  B4D8               	btfsc	status,2,c
 29304  00449A  D007               	goto	i2l1898
 29305                           
 29306                           ;usb_device.c: 788: {
 29307                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 29308  00449C  5005               	movf	i2USBTransferOnePacket@ep,w,c
 29309  00449E  0D02               	mullw	2
 29310  0044A0  0ECA               	movlw	low _pBDTEntryIn
 29311  0044A2  24F3               	addwf	prodl,w,c
 29312  0044A4  6ED9               	movwf	fsr2l,c
 29313  0044A6  0E00               	movlw	high _pBDTEntryIn
 29314  0044A8  D006               	goto	L32
 29315  0044AA                     i2l1898:
 29316                           
 29317                           ;usb_device.c: 792: else
 29318                           ;usb_device.c: 793: {
 29319                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 29320  0044AA  5005               	movf	i2USBTransferOnePacket@ep,w,c
 29321  0044AC  0D02               	mullw	2
 29322  0044AE  0E40               	movlw	low _pBDTEntryOut
 29323  0044B0  24F3               	addwf	prodl,w,c
 29324  0044B2  6ED9               	movwf	fsr2l,c
 29325  0044B4  0E01               	movlw	high _pBDTEntryOut
 29326  0044B6                     L32:
 29327  0044B6  20F4               	addwfc	prodh,w,c
 29328  0044B8  6EDA               	movwf	fsr2h,c
 29329  0044BA  0E04               	movlw	4
 29330  0044BC  1ADF               	xorwf	indf2,f,c
 29331                           
 29332                           ;usb_device.c: 796: }
 29333                           ;usb_device.c: 797: return (void*)handle;
 29334  0044BE  C006  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 29335  0044C2  C007  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 29336  0044C6  0012               	return	
 29337  0044C8                     __end_ofi2_USBTransferOnePacket:
 29338                           	opt stack 0
 29339                           pclatu	equ	0xFFB
 29340                           pclath	equ	0xFFA
 29341                           tblptru	equ	0xFF8
 29342                           tblptrh	equ	0xFF7
 29343                           tblptrl	equ	0xFF6
 29344                           tablat	equ	0xFF5
 29345                           prodh	equ	0xFF4
 29346                           prodl	equ	0xFF3
 29347                           intcon	equ	0xFF2
 29348                           intcon2	equ	0xFF1
 29349                           intcon3	equ	0xFF0
 29350                           indf0	equ	0xFEF
 29351                           postinc0	equ	0xFEE
 29352                           fsr0h	equ	0xFEA
 29353                           fsr0l	equ	0xFE9
 29354                           wreg	equ	0xFE8
 29355                           indf1	equ	0xFE7
 29356                           postdec1	equ	0xFE5
 29357                           fsr1h	equ	0xFE2
 29358                           fsr1l	equ	0xFE1
 29359                           indf2	equ	0xFDF
 29360                           postinc2	equ	0xFDE
 29361                           postdec2	equ	0xFDD
 29362                           plusw2	equ	0xFDB
 29363                           fsr2h	equ	0xFDA
 29364                           fsr2l	equ	0xFD9
 29365                           status	equ	0xFD8
 29366                           
 29367 ;; *************** function _USBEnableEndpoint *****************
 29368 ;; Defined at:
 29369 ;;		line 645 in file "../Includes/Usb/Framework/usb_device.c"
 29370 ;; Parameters:    Size  Location     Type
 29371 ;;  ep              1    wreg     unsigned char 
 29372 ;;  options         1    8[COMRAM] unsigned char 
 29373 ;; Auto vars:     Size  Location     Type
 29374 ;;  ep              1   11[COMRAM] unsigned char 
 29375 ;;  p               2    9[COMRAM] PTR unsigned char 
 29376 ;;		 -> UEP0(1), 
 29377 ;; Return value:  Size  Location     Type
 29378 ;;                  1    wreg      void 
 29379 ;; Registers used:
 29380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29381 ;; Tracked objects:
 29382 ;;		On entry : 0/0
 29383 ;;		On exit  : 0/0
 29384 ;;		Unchanged: 0/0
 29385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29386 ;;      Params:         1       0       0       0       0       0       0       0       0
 29387 ;;      Locals:         3       0       0       0       0       0       0       0       0
 29388 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29389 ;;      Totals:         4       0       0       0       0       0       0       0       0
 29390 ;;Total ram usage:        4 bytes
 29391 ;; Hardware stack levels used:    1
 29392 ;; Hardware stack levels required when called:    1
 29393 ;; This function calls:
 29394 ;;		_USBConfigureEndpoint
 29395 ;; This function is called by:
 29396 ;;		_CDCInitEP
 29397 ;; This function uses a non-reentrant model
 29398 ;;
 29399                           
 29400                           	psect	text127
 29401  005A60                     __ptext127:
 29402                           	opt stack 0
 29403  005A60                     _USBEnableEndpoint:
 29404                           	opt stack 15
 29405                           
 29406                           ;incstack = 0
 29407                           ;USBEnableEndpoint@ep stored from wreg
 29408  005A60  6E0C               	movwf	USBEnableEndpoint@ep,c
 29409                           
 29410                           ;usb_device.c: 647: unsigned char* p;
 29411                           ;usb_device.c: 651: if(options & 0x04)
 29412  005A62  A409               	btfss	USBEnableEndpoint@options,2,c
 29413  005A64  D005               	goto	i2l1889
 29414                           
 29415                           ;usb_device.c: 652: {
 29416                           ;usb_device.c: 653: USBConfigureEndpoint(ep, 0);
 29417  005A66  0E00               	movlw	0
 29418  005A68  6E01               	movwf	USBConfigureEndpoint@direction,c
 29419  005A6A  500C               	movf	USBEnableEndpoint@ep,w,c
 29420  005A6C  EC5B  F025         	call	_USBConfigureEndpoint
 29421  005A70                     i2l1889:
 29422                           
 29423                           ;usb_device.c: 654: }
 29424                           ;usb_device.c: 655: if(options & 0x02)
 29425  005A70  A209               	btfss	USBEnableEndpoint@options,1,c
 29426  005A72  D005               	goto	i2l1890
 29427                           
 29428                           ;usb_device.c: 656: {
 29429                           ;usb_device.c: 657: USBConfigureEndpoint(ep, 1);
 29430  005A74  0E01               	movlw	1
 29431  005A76  6E01               	movwf	USBConfigureEndpoint@direction,c
 29432  005A78  500C               	movf	USBEnableEndpoint@ep,w,c
 29433  005A7A  EC5B  F025         	call	_USBConfigureEndpoint
 29434  005A7E                     i2l1890:
 29435                           
 29436                           ;usb_device.c: 658: }
 29437                           ;usb_device.c: 663: p = (unsigned char*)(&UEP0+ep);
 29438  005A7E  500C               	movf	USBEnableEndpoint@ep,w,c
 29439  005A80  0D01               	mullw	1
 29440  005A82  0E6A               	movlw	106
 29441  005A84  24F3               	addwf	prodl,w,c
 29442  005A86  6E0A               	movwf	USBEnableEndpoint@p,c
 29443  005A88  0E0F               	movlw	15
 29444  005A8A  20F4               	addwfc	prodh,w,c
 29445  005A8C  6E0B               	movwf	USBEnableEndpoint@p+1,c
 29446                           
 29447                           ;usb_device.c: 664: *p = options;
 29448  005A8E  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 29449  005A92  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 29450  005A96  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 29451  005A9A  0012               	return		;funcret
 29452  005A9C                     __end_of_USBEnableEndpoint:
 29453                           	opt stack 0
 29454                           pclatu	equ	0xFFB
 29455                           pclath	equ	0xFFA
 29456                           tblptru	equ	0xFF8
 29457                           tblptrh	equ	0xFF7
 29458                           tblptrl	equ	0xFF6
 29459                           tablat	equ	0xFF5
 29460                           prodh	equ	0xFF4
 29461                           prodl	equ	0xFF3
 29462                           intcon	equ	0xFF2
 29463                           intcon2	equ	0xFF1
 29464                           intcon3	equ	0xFF0
 29465                           indf0	equ	0xFEF
 29466                           postinc0	equ	0xFEE
 29467                           fsr0h	equ	0xFEA
 29468                           fsr0l	equ	0xFE9
 29469                           wreg	equ	0xFE8
 29470                           indf1	equ	0xFE7
 29471                           postdec1	equ	0xFE5
 29472                           fsr1h	equ	0xFE2
 29473                           fsr1l	equ	0xFE1
 29474                           indf2	equ	0xFDF
 29475                           postinc2	equ	0xFDE
 29476                           postdec2	equ	0xFDD
 29477                           plusw2	equ	0xFDB
 29478                           fsr2h	equ	0xFDA
 29479                           fsr2l	equ	0xFD9
 29480                           status	equ	0xFD8
 29481                           
 29482 ;; *************** function _USBConfigureEndpoint *****************
 29483 ;; Defined at:
 29484 ;;		line 1228 in file "../Includes/Usb/Framework/usb_device.c"
 29485 ;; Parameters:    Size  Location     Type
 29486 ;;  EPNum           1    wreg     unsigned char 
 29487 ;;  direction       1    0[COMRAM] unsigned char 
 29488 ;; Auto vars:     Size  Location     Type
 29489 ;;  EPNum           1    5[COMRAM] unsigned char 
 29490 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 29491 ;;		 -> BDT(48), 
 29492 ;; Return value:  Size  Location     Type
 29493 ;;                  1    wreg      void 
 29494 ;; Registers used:
 29495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29496 ;; Tracked objects:
 29497 ;;		On entry : 0/0
 29498 ;;		On exit  : 0/0
 29499 ;;		Unchanged: 0/0
 29500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29501 ;;      Params:         1       0       0       0       0       0       0       0       0
 29502 ;;      Locals:         3       0       0       0       0       0       0       0       0
 29503 ;;      Temps:          4       0       0       0       0       0       0       0       0
 29504 ;;      Totals:         8       0       0       0       0       0       0       0       0
 29505 ;;Total ram usage:        8 bytes
 29506 ;; Hardware stack levels used:    1
 29507 ;; This function calls:
 29508 ;;		Nothing
 29509 ;; This function is called by:
 29510 ;;		_USBEnableEndpoint
 29511 ;; This function uses a non-reentrant model
 29512 ;;
 29513                           
 29514                           	psect	text128
 29515  004AB6                     __ptext128:
 29516                           	opt stack 0
 29517  004AB6                     _USBConfigureEndpoint:
 29518                           	opt stack 15
 29519                           
 29520                           ;incstack = 0
 29521                           ;USBConfigureEndpoint@EPNum stored from wreg
 29522  004AB6  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 29523                           
 29524                           ;usb_device.c: 1230: volatile BDT_ENTRY* handle;
 29525                           ;usb_device.c: 1234: handle = (volatile BDT_ENTRY*)&BDT[0];
 29526  004AB8  0E00               	movlw	0
 29527  004ABA  6E07               	movwf	USBConfigureEndpoint@handle,c
 29528  004ABC  0E04               	movlw	4
 29529  004ABE  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 29530                           
 29531                           ;usb_device.c: 1235: handle += (4*EPNum+2*direction+0u);
 29532  004AC0  5001               	movf	USBConfigureEndpoint@direction,w,c
 29533  004AC2  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 29534  004AC4  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 29535  004AC6  90D8               	bcf	status,0,c
 29536  004AC8  3602               	rlcf	??_USBConfigureEndpoint,f,c
 29537  004ACA  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 29538  004ACC  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 29539  004ACE  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 29540  004AD0  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 29541  004AD2  90D8               	bcf	status,0,c
 29542  004AD4  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 29543  004AD6  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 29544  004AD8  90D8               	bcf	status,0,c
 29545  004ADA  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 29546  004ADC  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 29547  004ADE  5002               	movf	??_USBConfigureEndpoint,w,c
 29548  004AE0  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 29549  004AE2  5003               	movf	??_USBConfigureEndpoint+1,w,c
 29550  004AE4  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 29551  004AE6  90D8               	bcf	status,0,c
 29552  004AE8  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 29553  004AEA  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 29554  004AEC  90D8               	bcf	status,0,c
 29555  004AEE  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 29556  004AF0  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 29557  004AF2  5004               	movf	??_USBConfigureEndpoint+2,w,c
 29558  004AF4  2607               	addwf	USBConfigureEndpoint@handle,f,c
 29559  004AF6  5005               	movf	??_USBConfigureEndpoint+3,w,c
 29560  004AF8  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 29561                           
 29562                           ;usb_device.c: 1237: handle->STAT.UOWN = 0;
 29563  004AFA  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 29564  004AFE  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 29565  004B02  9EDF               	bcf	indf2,7,c
 29566                           
 29567                           ;usb_device.c: 1242: if(direction == 0)
 29568  004B04  5001               	movf	USBConfigureEndpoint@direction,w,c
 29569  004B06  A4D8               	btfss	status,2,c
 29570  004B08  D007               	goto	i2l1936
 29571                           
 29572                           ;usb_device.c: 1243: {
 29573                           ;usb_device.c: 1244: pBDTEntryOut[EPNum] = handle;
 29574  004B0A  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 29575  004B0C  0D02               	mullw	2
 29576  004B0E  0E40               	movlw	low _pBDTEntryOut
 29577  004B10  24F3               	addwf	prodl,w,c
 29578  004B12  6ED9               	movwf	fsr2l,c
 29579  004B14  0E01               	movlw	high _pBDTEntryOut
 29580  004B16  D006               	goto	L33
 29581  004B18                     i2l1936:
 29582                           
 29583                           ;usb_device.c: 1246: else
 29584                           ;usb_device.c: 1247: {
 29585                           ;usb_device.c: 1248: pBDTEntryIn[EPNum] = handle;
 29586  004B18  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 29587  004B1A  0D02               	mullw	2
 29588  004B1C  0ECA               	movlw	low _pBDTEntryIn
 29589  004B1E  24F3               	addwf	prodl,w,c
 29590  004B20  6ED9               	movwf	fsr2l,c
 29591  004B22  0E00               	movlw	high _pBDTEntryIn
 29592  004B24                     L33:
 29593  004B24  20F4               	addwfc	prodh,w,c
 29594  004B26  6EDA               	movwf	fsr2h,c
 29595  004B28  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 29596  004B2C  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 29597                           
 29598                           ;usb_device.c: 1249: }
 29599                           ;usb_device.c: 1250: handle->STAT.DTS = 0;
 29600  004B30  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 29601  004B34  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 29602  004B38  9CDF               	bcf	indf2,6,c
 29603                           
 29604                           ;usb_device.c: 1251: (handle+1)->STAT.DTS = 1;
 29605  004B3A  EE20 F004          	lfsr	2,4
 29606  004B3E  5007               	movf	USBConfigureEndpoint@handle,w,c
 29607  004B40  26D9               	addwf	fsr2l,f,c
 29608  004B42  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 29609  004B44  22DA               	addwfc	fsr2h,f,c
 29610  004B46  8CDF               	bsf	indf2,6,c
 29611  004B48  0012               	return		;funcret
 29612  004B4A                     __end_of_USBConfigureEndpoint:
 29613                           	opt stack 0
 29614                           pclatu	equ	0xFFB
 29615                           pclath	equ	0xFFA
 29616                           tblptru	equ	0xFF8
 29617                           tblptrh	equ	0xFF7
 29618                           tblptrl	equ	0xFF6
 29619                           tablat	equ	0xFF5
 29620                           prodh	equ	0xFF4
 29621                           prodl	equ	0xFF3
 29622                           intcon	equ	0xFF2
 29623                           intcon2	equ	0xFF1
 29624                           intcon3	equ	0xFF0
 29625                           indf0	equ	0xFEF
 29626                           postinc0	equ	0xFEE
 29627                           fsr0h	equ	0xFEA
 29628                           fsr0l	equ	0xFE9
 29629                           wreg	equ	0xFE8
 29630                           indf1	equ	0xFE7
 29631                           postdec1	equ	0xFE5
 29632                           fsr1h	equ	0xFE2
 29633                           fsr1l	equ	0xFE1
 29634                           indf2	equ	0xFDF
 29635                           postinc2	equ	0xFDE
 29636                           postdec2	equ	0xFDD
 29637                           plusw2	equ	0xFDB
 29638                           fsr2h	equ	0xFDA
 29639                           fsr2l	equ	0xFD9
 29640                           status	equ	0xFD8
 29641                           
 29642 ;; *************** function _USBCheckCDCRequest *****************
 29643 ;; Defined at:
 29644 ;;		line 184 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 29645 ;; Parameters:    Size  Location     Type
 29646 ;;		None
 29647 ;; Auto vars:     Size  Location     Type
 29648 ;;		None
 29649 ;; Return value:  Size  Location     Type
 29650 ;;                  1    wreg      void 
 29651 ;; Registers used:
 29652 ;;		wreg, status,2, status,0
 29653 ;; Tracked objects:
 29654 ;;		On entry : 0/0
 29655 ;;		On exit  : 0/0
 29656 ;;		Unchanged: 0/0
 29657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29658 ;;      Params:         0       0       0       0       0       0       0       0       0
 29659 ;;      Locals:         0       0       0       0       0       0       0       0       0
 29660 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29661 ;;      Totals:         0       0       0       0       0       0       0       0       0
 29662 ;;Total ram usage:        0 bytes
 29663 ;; Hardware stack levels used:    1
 29664 ;; This function calls:
 29665 ;;		Nothing
 29666 ;; This function is called by:
 29667 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 29668 ;; This function uses a non-reentrant model
 29669 ;;
 29670                           
 29671                           	psect	text129
 29672  0046E6                     __ptext129:
 29673                           	opt stack 0
 29674  0046E6                     _USBCheckCDCRequest:
 29675                           	opt stack 18
 29676                           
 29677                           ;usb_device_cdc.c: 189: if(SetupPkt.Recipient != (0x01)) return;
 29678                           
 29679                           ;incstack = 0
 29680  0046E6  0104               	movlb	4	; () banked
 29681  0046E8  5130               	movf	48,w,b	;volatile
 29682  0046EA  0B1F               	andlw	31
 29683  0046EC  06E8               	decf	wreg,f,c
 29684  0046EE  A4D8               	btfss	status,2,c
 29685  0046F0  0012               	return	
 29686                           
 29687                           ; BSR set to: 4
 29688                           ;usb_device_cdc.c: 194: if(SetupPkt.RequestType != (0x20>>5)) return;
 29689                           
 29690                           ; BSR set to: 4
 29691                           
 29692                           ; BSR set to: 4
 29693  0046F2  3930               	swapf	48,w,b	;volatile
 29694  0046F4  32E8               	rrcf	wreg,f,c
 29695  0046F6  0B03               	andlw	3
 29696  0046F8  06E8               	decf	wreg,f,c
 29697  0046FA  A4D8               	btfss	status,2,c
 29698  0046FC  0012               	return	
 29699                           
 29700                           ; BSR set to: 4
 29701                           ;usb_device_cdc.c: 200: if((SetupPkt.bIntfID != 0x0)&&
 29702                           ;usb_device_cdc.c: 201: (SetupPkt.bIntfID != 0x01)) return;
 29703                           
 29704                           ; BSR set to: 4
 29705                           
 29706                           ; BSR set to: 4
 29707  0046FE  5134               	movf	52,w,b	;volatile
 29708  004700  B4D8               	btfsc	status,2,c
 29709  004702  D037               	goto	i2l2157
 29710                           
 29711                           ; BSR set to: 4
 29712  004704  0534               	decf	52,w,b	;volatile
 29713  004706  A4D8               	btfss	status,2,c
 29714  004708  0012               	return	
 29715  00470A  D033               	goto	i2l2157
 29716  00470C                     
 29717                           ; BSR set to: 4
 29718                           ;usb_device_cdc.c: 208: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 29719                           
 29720                           ; BSR set to: 4
 29721  00470C  0EDF               	movlw	low _dummy_encapsulated_cmd_response
 29722  00470E  0100               	movlb	0	; () banked
 29723  004710  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 29724  004712  0E01               	movlw	high _dummy_encapsulated_cmd_response
 29725  004714  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 29726                           
 29727                           ; BSR set to: 0
 29728                           ;usb_device_cdc.c: 209: inPipes[0].wCount.Val = 0x08;
 29729  004716  0E00               	movlw	0
 29730  004718  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 29731  00471A  0E08               	movlw	8
 29732  00471C  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 29733                           
 29734                           ; BSR set to: 0
 29735                           ;usb_device_cdc.c: 210: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 29736  00471E  81C7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 29737                           
 29738                           ; BSR set to: 0
 29739                           ;usb_device_cdc.c: 211: inPipes[0].info.bits.busy = 1;
 29740  004720  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 29741                           
 29742                           ;usb_device_cdc.c: 212: break;
 29743  004722  0012               	return	
 29744  004724                     
 29745                           ;usb_device_cdc.c: 215: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 29746                           
 29747                           ; BSR set to: 0
 29748  004724  0EDF               	movlw	low _dummy_encapsulated_cmd_response
 29749  004726  0100               	movlb	0	; () banked
 29750  004728  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 29751  00472A  0E01               	movlw	high _dummy_encapsulated_cmd_response
 29752  00472C  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 29753                           
 29754                           ; BSR set to: 0
 29755                           ;usb_device_cdc.c: 216: inPipes[0].info.bits.busy = 1;
 29756  00472E  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 29757                           
 29758                           ;usb_device_cdc.c: 217: break;
 29759  004730  0012               	return	
 29760  004732                     i2l2161:
 29761                           
 29762                           ; BSR set to: 4
 29763                           ;usb_device_cdc.c: 220: outPipes[0].wCount.Val = SetupPkt.wLength;
 29764  004732  C436 F0C0          	movff	1078,_outPipes+4	;volatile
 29765  004736  C437 F0C1          	movff	1079,_outPipes+5	;volatile
 29766                           
 29767                           ; BSR set to: 4
 29768                           ;usb_device_cdc.c: 221: outPipes[0].pDst.bRam = (uint8_t*)&cdc_notice.SetLineCoding._byt
      +                          e[0];
 29769  00473A  0ED5               	movlw	low _cdc_notice
 29770  00473C  0100               	movlb	0	; () banked
 29771  00473E  6FBC               	movwf	_outPipes& (0+255),b	;volatile
 29772  004740  0E01               	movlw	high _cdc_notice
 29773  004742  6FBD               	movwf	(_outPipes+1)& (0+255),b	;volatile
 29774                           
 29775                           ;usb_device_cdc.c: 222: outPipes[0].pFunc = &USART_mySetLineCodingHandler;
 29776  004744  0EB8               	movlw	low _USART_mySetLineCodingHandler
 29777  004746  6FC2               	movwf	(_outPipes+6)& (0+255),b	;volatile
 29778  004748  0E56               	movlw	high _USART_mySetLineCodingHandler
 29779  00474A  6FC3               	movwf	(_outPipes+7)& (0+255),b	;volatile
 29780                           
 29781                           ; BSR set to: 0
 29782                           ;usb_device_cdc.c: 223: outPipes[0].info.bits.busy = 1;
 29783  00474C  8FBF               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 29784                           
 29785                           ;usb_device_cdc.c: 224: break;
 29786  00474E  0012               	return	
 29787  004750                     
 29788                           ;usb_device_cdc.c: 227: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 29789                           
 29790                           ; BSR set to: 0
 29791  004750  0EE7               	movlw	low _line_coding
 29792  004752  0100               	movlb	0	; () banked
 29793  004754  6FC4               	movwf	_inPipes& (0+255),b	;volatile
 29794  004756  0E01               	movlw	high _line_coding
 29795  004758  6FC5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 29796                           
 29797                           ; BSR set to: 0
 29798  00475A  0E00               	movlw	0
 29799  00475C  6FC9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 29800  00475E  0E07               	movlw	7
 29801  004760  6FC8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 29802                           
 29803                           ; BSR set to: 0
 29804  004762  0EC1               	movlw	193
 29805  004764  6FC7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 29806                           
 29807                           ;usb_device_cdc.c: 231: break;
 29808  004766  0012               	return	
 29809  004768                     i2l2163:
 29810                           
 29811                           ; BSR set to: 4
 29812                           ;usb_device_cdc.c: 234: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 29813  004768  C432 F15C          	movff	1074,_control_signal_bitmap	;volatile
 29814                           
 29815                           ;usb_device_cdc.c: 255: inPipes[0].info.bits.busy = 1;
 29816  00476C  0100               	movlb	0	; () banked
 29817  00476E  8FC7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 29818                           
 29819                           ; BSR set to: 0
 29820                           ;usb_device_cdc.c: 260: }
 29821                           
 29822                           ; BSR set to: 0
 29823                           ;usb_device_cdc.c: 259: break;
 29824                           
 29825                           ;usb_device_cdc.c: 258: default:
 29826                           
 29827                           ;usb_device_cdc.c: 256: break;
 29828  004770  0012               	return	
 29829  004772                     i2l2157:
 29830                           
 29831                           ; BSR set to: 0
 29832  004772  0104               	movlb	4	; () banked
 29833  004774  5131               	movf	49,w,b	;volatile
 29834                           
 29835                           ; Switch size 1, requested type "space"
 29836                           ; Number of cases is 5, Range of values is 0 to 34
 29837                           ; switch strategies available:
 29838                           ; Name         Instructions Cycles
 29839                           ; simple_byte           16     9 (average)
 29840                           ;	Chosen strategy is simple_byte
 29841  004776  0A00               	xorlw	0	; case 0
 29842  004778  B4D8               	btfsc	status,2,c
 29843  00477A  D7C8               	goto	i2l2158
 29844  00477C  0A01               	xorlw	1	; case 1
 29845  00477E  B4D8               	btfsc	status,2,c
 29846  004780  D7D1               	goto	i2l2160
 29847  004782  0A21               	xorlw	33	; case 32
 29848  004784  B4D8               	btfsc	status,2,c
 29849  004786  D7D5               	goto	i2l2161
 29850  004788  0A01               	xorlw	1	; case 33
 29851  00478A  B4D8               	btfsc	status,2,c
 29852  00478C  D7E1               	goto	i2l2162
 29853  00478E  0A03               	xorlw	3	; case 34
 29854  004790  A4D8               	btfss	status,2,c
 29855  004792  0012               	return	
 29856  004794  D7E9               	goto	i2l2163
 29857  004796                     __end_of_USBCheckCDCRequest:
 29858                           	opt stack 0
 29859                           pclatu	equ	0xFFB
 29860                           pclath	equ	0xFFA
 29861                           tblptru	equ	0xFF8
 29862                           tblptrh	equ	0xFF7
 29863                           tblptrl	equ	0xFF6
 29864                           tablat	equ	0xFF5
 29865                           prodh	equ	0xFF4
 29866                           prodl	equ	0xFF3
 29867                           intcon	equ	0xFF2
 29868                           intcon2	equ	0xFF1
 29869                           intcon3	equ	0xFF0
 29870                           indf0	equ	0xFEF
 29871                           postinc0	equ	0xFEE
 29872                           fsr0h	equ	0xFEA
 29873                           fsr0l	equ	0xFE9
 29874                           wreg	equ	0xFE8
 29875                           indf1	equ	0xFE7
 29876                           postdec1	equ	0xFE5
 29877                           fsr1h	equ	0xFE2
 29878                           fsr1l	equ	0xFE1
 29879                           indf2	equ	0xFDF
 29880                           postinc2	equ	0xFDE
 29881                           postdec2	equ	0xFDD
 29882                           plusw2	equ	0xFDB
 29883                           fsr2h	equ	0xFDA
 29884                           fsr2l	equ	0xFD9
 29885                           status	equ	0xFD8
 29886                           
 29887 ;; *************** function _USBCtrlTrfOutHandler *****************
 29888 ;; Defined at:
 29889 ;;		line 2169 in file "../Includes/Usb/Framework/usb_device.c"
 29890 ;; Parameters:    Size  Location     Type
 29891 ;;		None
 29892 ;; Auto vars:     Size  Location     Type
 29893 ;;		None
 29894 ;; Return value:  Size  Location     Type
 29895 ;;                  1    wreg      void 
 29896 ;; Registers used:
 29897 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 29898 ;; Tracked objects:
 29899 ;;		On entry : 0/0
 29900 ;;		On exit  : 0/0
 29901 ;;		Unchanged: 0/0
 29902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29903 ;;      Params:         0       0       0       0       0       0       0       0       0
 29904 ;;      Locals:         0       0       0       0       0       0       0       0       0
 29905 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29906 ;;      Totals:         0       0       0       0       0       0       0       0       0
 29907 ;;Total ram usage:        0 bytes
 29908 ;; Hardware stack levels used:    1
 29909 ;; Hardware stack levels required when called:    3
 29910 ;; This function calls:
 29911 ;;		_USBCtrlTrfRxService
 29912 ;; This function is called by:
 29913 ;;		_USBCtrlEPService
 29914 ;; This function uses a non-reentrant model
 29915 ;;
 29916                           
 29917                           	psect	text130
 29918  00565C                     __ptext130:
 29919                           	opt stack 0
 29920  00565C                     _USBCtrlTrfOutHandler:
 29921                           	opt stack 15
 29922                           
 29923                           ;usb_device.c: 2171: if(controlTransferState == 2)
 29924                           
 29925                           ;incstack = 0
 29926  00565C  0E02               	movlw	2
 29927  00565E  184C               	xorwf	_controlTransferState,w,c	;volatile
 29928  005660  A4D8               	btfss	status,2,c
 29929  005662  D003               	goto	i2l2044
 29930                           
 29931                           ;usb_device.c: 2172: {
 29932                           ;usb_device.c: 2173: USBCtrlTrfRxService();
 29933  005664  ECBC  F018         	call	_USBCtrlTrfRxService	;wreg free
 29934                           
 29935                           ;usb_device.c: 2174: }
 29936  005668  0012               	return	
 29937  00566A                     i2l2044:
 29938                           
 29939                           ;usb_device.c: 2175: else
 29940                           ;usb_device.c: 2176: {
 29941                           ;usb_device.c: 2179: controlTransferState = 0;
 29942  00566A  0E00               	movlw	0
 29943  00566C  6E4C               	movwf	_controlTransferState,c	;volatile
 29944                           
 29945                           ;usb_device.c: 2186: if(BothEP0OutUOWNsSet == 0)
 29946  00566E  5049               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 29947  005670  A4D8               	btfss	status,2,c
 29948  005672  D01F               	goto	i2l2046
 29949                           
 29950                           ;usb_device.c: 2187: {
 29951                           ;usb_device.c: 2188: pBDTEntryEP0OutNext->CNT = 8;
 29952  005674  EE20 F001          	lfsr	2,1
 29953  005678  5036               	movf	_pBDTEntryEP0OutNext,w,c
 29954  00567A  26D9               	addwf	fsr2l,f,c
 29955  00567C  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
 29956  00567E  22DA               	addwfc	fsr2h,f,c
 29957  005680  0E08               	movlw	8
 29958  005682  6EDF               	movwf	indf2,c
 29959                           
 29960                           ;usb_device.c: 2189: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29961  005684  EE20 F002          	lfsr	2,2
 29962  005688  5036               	movf	_pBDTEntryEP0OutNext,w,c
 29963  00568A  26D9               	addwf	fsr2l,f,c
 29964  00568C  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
 29965  00568E  22DA               	addwfc	fsr2h,f,c
 29966  005690  0E30               	movlw	48
 29967  005692  6EDE               	movwf	postinc2,c
 29968  005694  0E04               	movlw	4
 29969  005696  6EDD               	movwf	postdec2,c
 29970                           
 29971                           ;usb_device.c: 2190: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 29972  005698  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29973  00569C  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29974  0056A0  0E0C               	movlw	12
 29975  0056A2  6EDF               	movwf	indf2,c
 29976                           
 29977                           ;usb_device.c: 2191: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29978  0056A4  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29979  0056A8  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29980  0056AC  0E00               	movlw	0
 29981  0056AE  8EDB               	bsf	plusw2,7,c
 29982                           
 29983                           ;usb_device.c: 2192: }
 29984  0056B0  0012               	return	
 29985  0056B2                     i2l2046:
 29986                           
 29987                           ;usb_device.c: 2193: else
 29988                           ;usb_device.c: 2194: {
 29989                           ;usb_device.c: 2195: BothEP0OutUOWNsSet = 0;
 29990  0056B2  0E00               	movlw	0
 29991  0056B4  6E49               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29992  0056B6  0012               	return	
 29993  0056B8                     __end_of_USBCtrlTrfOutHandler:
 29994                           	opt stack 0
 29995                           pclatu	equ	0xFFB
 29996                           pclath	equ	0xFFA
 29997                           tblptru	equ	0xFF8
 29998                           tblptrh	equ	0xFF7
 29999                           tblptrl	equ	0xFF6
 30000                           tablat	equ	0xFF5
 30001                           prodh	equ	0xFF4
 30002                           prodl	equ	0xFF3
 30003                           intcon	equ	0xFF2
 30004                           intcon2	equ	0xFF1
 30005                           intcon3	equ	0xFF0
 30006                           indf0	equ	0xFEF
 30007                           postinc0	equ	0xFEE
 30008                           fsr0h	equ	0xFEA
 30009                           fsr0l	equ	0xFE9
 30010                           wreg	equ	0xFE8
 30011                           indf1	equ	0xFE7
 30012                           postdec1	equ	0xFE5
 30013                           fsr1h	equ	0xFE2
 30014                           fsr1l	equ	0xFE1
 30015                           indf2	equ	0xFDF
 30016                           postinc2	equ	0xFDE
 30017                           postdec2	equ	0xFDD
 30018                           plusw2	equ	0xFDB
 30019                           fsr2h	equ	0xFDA
 30020                           fsr2l	equ	0xFD9
 30021                           status	equ	0xFD8
 30022                           
 30023 ;; *************** function _USBCtrlTrfRxService *****************
 30024 ;; Defined at:
 30025 ;;		line 1518 in file "../Includes/Usb/Framework/usb_device.c"
 30026 ;; Parameters:    Size  Location     Type
 30027 ;;		None
 30028 ;; Auto vars:     Size  Location     Type
 30029 ;;  byteToRead      1   18[COMRAM] unsigned char 
 30030 ;;  i               1   17[COMRAM] unsigned char 
 30031 ;; Return value:  Size  Location     Type
 30032 ;;                  1    wreg      void 
 30033 ;; Registers used:
 30034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 30035 ;; Tracked objects:
 30036 ;;		On entry : 0/0
 30037 ;;		On exit  : 0/0
 30038 ;;		Unchanged: 0/0
 30039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30040 ;;      Params:         0       0       0       0       0       0       0       0       0
 30041 ;;      Locals:         2       0       0       0       0       0       0       0       0
 30042 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30043 ;;      Totals:         2       0       0       0       0       0       0       0       0
 30044 ;;Total ram usage:        2 bytes
 30045 ;; Hardware stack levels used:    1
 30046 ;; Hardware stack levels required when called:    2
 30047 ;; This function calls:
 30048 ;;		_USART_mySetLineCodingHandler
 30049 ;;		_USBCtrlEPAllowStatusStage
 30050 ;; This function is called by:
 30051 ;;		_USBCtrlTrfOutHandler
 30052 ;; This function uses a non-reentrant model
 30053 ;;
 30054                           
 30055                           	psect	text131
 30056  003178                     __ptext131:
 30057                           	opt stack 0
 30058  003178                     _USBCtrlTrfRxService:
 30059                           	opt stack 15
 30060                           
 30061                           ;usb_device.c: 1520: uint8_t byteToRead;
 30062                           ;usb_device.c: 1521: uint8_t i;
 30063                           ;usb_device.c: 1525: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 30064                           
 30065                           ;incstack = 0
 30066  003178  EE20 F001          	lfsr	2,1
 30067  00317C  5038               	movf	_pBDTEntryEP0OutCurrent,w,c
 30068  00317E  26D9               	addwf	fsr2l,f,c
 30069  003180  5039               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 30070  003182  22DA               	addwfc	fsr2h,f,c
 30071  003184  50DF               	movf	indf2,w,c
 30072  003186  6E13               	movwf	USBCtrlTrfRxService@byteToRead,c
 30073                           
 30074                           ;usb_device.c: 1531: if(byteToRead > outPipes[0].wCount.Val)
 30075  003188  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 30076  00318A  0100               	movlb	0	; () banked
 30077  00318C  5DC0               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 30078  00318E  0E00               	movlw	0
 30079  003190  59C1               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 30080  003192  A0D8               	btfss	status,0,c
 30081                           
 30082                           ; BSR set to: 0
 30083                           ;usb_device.c: 1532: {
 30084                           ;usb_device.c: 1533: byteToRead = outPipes[0].wCount.Val;
 30085  003194  C0C0  F013         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 30086                           
 30087                           ; BSR set to: 0
 30088                           ;usb_device.c: 1534: }
 30089                           ;usb_device.c: 1536: outPipes[0].wCount.Val -= byteToRead;
 30090                           
 30091                           ; BSR set to: 0
 30092  003198  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 30093  00319A  5FC0               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 30094  00319C  0E00               	movlw	0
 30095  00319E  5BC1               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 30096                           
 30097                           ; BSR set to: 0
 30098                           ;usb_device.c: 1540: for(i=0;i<byteToRead;i++)
 30099  0031A0  0E00               	movlw	0
 30100  0031A2  6E12               	movwf	USBCtrlTrfRxService@i,c
 30101  0031A4  D011               	goto	i2l1970
 30102  0031A6                     
 30103                           ; BSR set to: 0
 30104                           ;usb_device.c: 1541: {
 30105                           ;usb_device.c: 1542: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 30106                           
 30107                           ; BSR set to: 0
 30108  0031A6  5012               	movf	USBCtrlTrfRxService@i,w,c
 30109  0031A8  0D01               	mullw	1
 30110  0031AA  0E38               	movlw	56
 30111  0031AC  24F3               	addwf	prodl,w,c
 30112  0031AE  6ED9               	movwf	fsr2l,c
 30113  0031B0  0E04               	movlw	4
 30114  0031B2  20F4               	addwfc	prodh,w,c
 30115  0031B4  6EDA               	movwf	fsr2h,c
 30116  0031B6  C0BC  FFE1         	movff	_outPipes,fsr1l	;volatile
 30117  0031BA  C0BD  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 30118  0031BE  CFDF FFE7          	movff	indf2,indf1
 30119                           
 30120                           ; BSR set to: 0
 30121  0031C2  4BBC               	infsnz	_outPipes& (0+255),f,b	;volatile
 30122  0031C4  2BBD               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 30123                           
 30124                           ; BSR set to: 0
 30125  0031C6  2A12               	incf	USBCtrlTrfRxService@i,f,c
 30126  0031C8                     i2l1970:
 30127                           
 30128                           ; BSR set to: 0
 30129                           
 30130                           ; BSR set to: 0
 30131  0031C8  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 30132  0031CA  5C12               	subwf	USBCtrlTrfRxService@i,w,c
 30133  0031CC  A0D8               	btfss	status,0,c
 30134  0031CE  D7EB               	goto	i2l1971
 30135                           
 30136                           ; BSR set to: 0
 30137                           ;usb_device.c: 1543: }
 30138                           ;usb_device.c: 1547: if(outPipes[0].wCount.Val > 0)
 30139                           
 30140                           ; BSR set to: 0
 30141  0031D0  51C0               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 30142  0031D2  11C1               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 30143  0031D4  B4D8               	btfsc	status,2,c
 30144  0031D6  D032               	goto	i2l1973
 30145                           
 30146                           ; BSR set to: 0
 30147                           ;usb_device.c: 1548: {
 30148                           ;usb_device.c: 1549: pBDTEntryEP0OutNext->CNT = 8;
 30149  0031D8  EE20 F001          	lfsr	2,1
 30150  0031DC  5036               	movf	_pBDTEntryEP0OutNext,w,c
 30151  0031DE  26D9               	addwf	fsr2l,f,c
 30152  0031E0  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
 30153  0031E2  22DA               	addwfc	fsr2h,f,c
 30154  0031E4  0E08               	movlw	8
 30155  0031E6  6EDF               	movwf	indf2,c
 30156                           
 30157                           ;usb_device.c: 1550: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 30158  0031E8  EE20 F002          	lfsr	2,2
 30159  0031EC  5036               	movf	_pBDTEntryEP0OutNext,w,c
 30160  0031EE  26D9               	addwf	fsr2l,f,c
 30161  0031F0  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
 30162  0031F2  22DA               	addwfc	fsr2h,f,c
 30163  0031F4  0E38               	movlw	56
 30164  0031F6  6EDE               	movwf	postinc2,c
 30165  0031F8  0E04               	movlw	4
 30166  0031FA  6EDD               	movwf	postdec2,c
 30167                           
 30168                           ; BSR set to: 0
 30169                           ;usb_device.c: 1551: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 30170  0031FC  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 30171  003200  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 30172  003204  BCDF               	btfsc	indf2,6,c
 30173  003206  D00D               	goto	i2l1974
 30174                           
 30175                           ; BSR set to: 0
 30176                           ;usb_device.c: 1552: {
 30177                           ;usb_device.c: 1553: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 30178  003208  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30179  00320C  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30180  003210  0E48               	movlw	72
 30181  003212  6EDF               	movwf	indf2,c
 30182                           
 30183                           ; BSR set to: 0
 30184                           ;usb_device.c: 1554: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 30185  003214  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30186  003218  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30187  00321C  0E00               	movlw	0
 30188  00321E  8EDB               	bsf	plusw2,7,c
 30189                           
 30190                           ;usb_device.c: 1555: }
 30191  003220  0012               	return	
 30192  003222                     i2l1974:
 30193                           
 30194                           ; BSR set to: 0
 30195                           ;usb_device.c: 1556: else
 30196                           ;usb_device.c: 1557: {
 30197                           ;usb_device.c: 1558: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 30198                           
 30199                           ; BSR set to: 0
 30200  003222  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30201  003226  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30202  00322A  0E08               	movlw	8
 30203  00322C  6EDF               	movwf	indf2,c
 30204                           
 30205                           ; BSR set to: 0
 30206                           ;usb_device.c: 1559: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 30207  00322E  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30208  003232  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30209  003236  0E00               	movlw	0
 30210  003238  8EDB               	bsf	plusw2,7,c
 30211                           
 30212                           ; BSR set to: 0
 30213                           ;usb_device.c: 1560: }
 30214                           ;usb_device.c: 1561: }
 30215  00323A  0012               	return	
 30216  00323C                     i2l1973:
 30217                           
 30218                           ; BSR set to: 0
 30219                           ;usb_device.c: 1562: else
 30220                           ;usb_device.c: 1563: {
 30221                           ;usb_device.c: 1567: pBDTEntryEP0OutNext->CNT = 8;
 30222                           
 30223                           ; BSR set to: 0
 30224  00323C  EE20 F001          	lfsr	2,1
 30225  003240  5036               	movf	_pBDTEntryEP0OutNext,w,c
 30226  003242  26D9               	addwf	fsr2l,f,c
 30227  003244  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
 30228  003246  22DA               	addwfc	fsr2h,f,c
 30229  003248  0E08               	movlw	8
 30230  00324A  6EDF               	movwf	indf2,c
 30231                           
 30232                           ;usb_device.c: 1568: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 30233  00324C  EE20 F002          	lfsr	2,2
 30234  003250  5036               	movf	_pBDTEntryEP0OutNext,w,c
 30235  003252  26D9               	addwf	fsr2l,f,c
 30236  003254  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
 30237  003256  22DA               	addwfc	fsr2h,f,c
 30238  003258  0E30               	movlw	48
 30239  00325A  6EDE               	movwf	postinc2,c
 30240  00325C  0E04               	movlw	4
 30241  00325E  6EDD               	movwf	postdec2,c
 30242                           
 30243                           ; BSR set to: 0
 30244                           ;usb_device.c: 1572: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 30245  003260  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30246  003264  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30247  003268  0E04               	movlw	4
 30248  00326A  6EDF               	movwf	indf2,c
 30249                           
 30250                           ; BSR set to: 0
 30251                           ;usb_device.c: 1573: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 30252  00326C  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30253  003270  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30254  003274  0E00               	movlw	0
 30255  003276  8EDB               	bsf	plusw2,7,c
 30256                           
 30257                           ; BSR set to: 0
 30258                           ;usb_device.c: 1580: if(outPipes[0].pFunc != (0))
 30259  003278  51C2               	movf	(_outPipes+6)& (0+255),w,b	;volatile
 30260  00327A  11C3               	iorwf	(_outPipes+7)& (0+255),w,b	;volatile
 30261  00327C  B4D8               	btfsc	status,2,c
 30262  00327E  D00B               	goto	i2u684_49
 30263                           
 30264                           ; BSR set to: 0
 30265                           ;usb_device.c: 1581: {
 30266                           ;usb_device.c: 1586: outPipes[0].pFunc();
 30267  003280  D801               	call	i2u684_48
 30268  003282  D009               	goto	i2u684_49
 30269  003284                     i2u684_48:
 30270  003284  0005               	push	
 30271  003286  6EFA               	movwf	pclath,c
 30272  003288  51C2               	movf	(_outPipes+6)& (0+255),w,b	;volatile
 30273  00328A  6EFD               	movwf	tosl,c
 30274  00328C  51C3               	movf	(_outPipes+7)& (0+255),w,b	;volatile
 30275  00328E  6EFE               	movwf	tosh,c
 30276  003290  6AFF               	clrf	tosu,c
 30277  003292  50FA               	movf	pclath,w,c
 30278  003294  0012               	return		;indir
 30279  003296                     i2u684_49:
 30280                           
 30281                           ;usb_device.c: 1588: }
 30282                           ;usb_device.c: 1589: outPipes[0].info.bits.busy = 0;
 30283  003296  0100               	movlb	0	; () banked
 30284  003298  9FBF               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 30285                           
 30286                           ; BSR set to: 0
 30287                           ;usb_device.c: 1603: if(USBDeferStatusStagePacket == 0)
 30288  00329A  5047               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 30289  00329C  A4D8               	btfss	status,2,c
 30290  00329E  0012               	return	
 30291                           
 30292                           ; BSR set to: 0
 30293                           ;usb_device.c: 1604: {
 30294                           ;usb_device.c: 1605: USBCtrlEPAllowStatusStage();
 30295  0032A0  ECE5  F020         	call	_USBCtrlEPAllowStatusStage	;wreg free
 30296  0032A4  0012               	return	
 30297  0032A6                     __end_of_USBCtrlTrfRxService:
 30298                           	opt stack 0
 30299                           tosu	equ	0xFFF
 30300                           tosh	equ	0xFFE
 30301                           tosl	equ	0xFFD
 30302                           pclatu	equ	0xFFB
 30303                           pclath	equ	0xFFA
 30304                           tblptru	equ	0xFF8
 30305                           tblptrh	equ	0xFF7
 30306                           tblptrl	equ	0xFF6
 30307                           tablat	equ	0xFF5
 30308                           prodh	equ	0xFF4
 30309                           prodl	equ	0xFF3
 30310                           intcon	equ	0xFF2
 30311                           intcon2	equ	0xFF1
 30312                           intcon3	equ	0xFF0
 30313                           indf0	equ	0xFEF
 30314                           postinc0	equ	0xFEE
 30315                           fsr0h	equ	0xFEA
 30316                           fsr0l	equ	0xFE9
 30317                           wreg	equ	0xFE8
 30318                           indf1	equ	0xFE7
 30319                           postdec1	equ	0xFE5
 30320                           fsr1h	equ	0xFE2
 30321                           fsr1l	equ	0xFE1
 30322                           indf2	equ	0xFDF
 30323                           postinc2	equ	0xFDE
 30324                           postdec2	equ	0xFDD
 30325                           plusw2	equ	0xFDB
 30326                           fsr2h	equ	0xFDA
 30327                           fsr2l	equ	0xFD9
 30328                           status	equ	0xFD8
 30329                           
 30330 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 30331 ;; Defined at:
 30332 ;;		line 1104 in file "../Includes/Usb/Framework/usb_device.c"
 30333 ;; Parameters:    Size  Location     Type
 30334 ;;		None
 30335 ;; Auto vars:     Size  Location     Type
 30336 ;;		None
 30337 ;; Return value:  Size  Location     Type
 30338 ;;                  1    wreg      void 
 30339 ;; Registers used:
 30340 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30341 ;; Tracked objects:
 30342 ;;		On entry : 0/0
 30343 ;;		On exit  : 0/0
 30344 ;;		Unchanged: 0/0
 30345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30346 ;;      Params:         0       0       0       0       0       0       0       0       0
 30347 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30348 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30349 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30350 ;;Total ram usage:        0 bytes
 30351 ;; Hardware stack levels used:    1
 30352 ;; This function calls:
 30353 ;;		Nothing
 30354 ;; This function is called by:
 30355 ;;		_USBDeviceTasks
 30356 ;;		_USBCtrlEPServiceComplete
 30357 ;;		_USBCtrlTrfRxService
 30358 ;; This function uses a non-reentrant model
 30359 ;;
 30360                           
 30361                           	psect	text132
 30362  0041CA                     __ptext132:
 30363                           	opt stack 0
 30364  0041CA                     _USBCtrlEPAllowStatusStage:
 30365                           	opt stack 16
 30366                           
 30367                           ;usb_device.c: 1111: if(USBStatusStageEnabledFlag1 == 0)
 30368                           
 30369                           ;incstack = 0
 30370  0041CA  5046               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 30371  0041CC  A4D8               	btfss	status,2,c
 30372  0041CE  0012               	return	
 30373                           
 30374                           ;usb_device.c: 1112: {
 30375                           ;usb_device.c: 1113: USBStatusStageEnabledFlag1 = 1;
 30376  0041D0  0E01               	movlw	1
 30377  0041D2  6E46               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 30378                           
 30379                           ;usb_device.c: 1114: if(USBStatusStageEnabledFlag2 == 0)
 30380  0041D4  5045               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 30381  0041D6  A4D8               	btfss	status,2,c
 30382  0041D8  0012               	return	
 30383                           
 30384                           ;usb_device.c: 1115: {
 30385                           ;usb_device.c: 1116: USBStatusStageEnabledFlag2 = 1;
 30386  0041DA  0E01               	movlw	1
 30387  0041DC  6E45               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 30388                           
 30389                           ;usb_device.c: 1120: if(controlTransferState == 2)
 30390  0041DE  0E02               	movlw	2
 30391  0041E0  184C               	xorwf	_controlTransferState,w,c	;volatile
 30392  0041E2  A4D8               	btfss	status,2,c
 30393  0041E4  D016               	goto	i2l1924
 30394                           
 30395                           ;usb_device.c: 1121: {
 30396                           ;usb_device.c: 1122: pBDTEntryIn[0]->CNT = 0;
 30397  0041E6  0100               	movlb	0	; () banked
 30398  0041E8  EE20 F001          	lfsr	2,1
 30399  0041EC  51CA               	movf	_pBDTEntryIn& (0+255),w,b
 30400  0041EE  26D9               	addwf	fsr2l,f,c
 30401  0041F0  51CB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 30402  0041F2  22DA               	addwfc	fsr2h,f,c
 30403  0041F4  0E00               	movlw	0
 30404  0041F6  6EDF               	movwf	indf2,c
 30405                           
 30406                           ; BSR set to: 0
 30407                           ;usb_device.c: 1123: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 30408  0041F8  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 30409  0041FC  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30410  004200  0E48               	movlw	72
 30411  004202  6EDF               	movwf	indf2,c
 30412                           
 30413                           ; BSR set to: 0
 30414                           ;usb_device.c: 1124: pBDTEntryIn[0]->STAT.Val |= 0x80;
 30415  004204  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 30416  004208  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30417  00420C  0E00               	movlw	0
 30418  00420E  8EDB               	bsf	plusw2,7,c
 30419                           
 30420                           ;usb_device.c: 1125: }
 30421  004210  0012               	return	
 30422  004212                     i2l1924:
 30423                           
 30424                           ;usb_device.c: 1126: else if(controlTransferState == 1)
 30425                           
 30426                           ; BSR set to: 0
 30427  004212  044C               	decf	_controlTransferState,w,c	;volatile
 30428  004214  A4D8               	btfss	status,2,c
 30429  004216  0012               	return	
 30430                           
 30431                           ;usb_device.c: 1127: {
 30432                           ;usb_device.c: 1128: BothEP0OutUOWNsSet = 0;
 30433  004218  0E00               	movlw	0
 30434  00421A  6E49               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 30435                           
 30436                           ;usb_device.c: 1132: pBDTEntryEP0OutCurrent->CNT = 8;
 30437  00421C  EE20 F001          	lfsr	2,1
 30438  004220  5038               	movf	_pBDTEntryEP0OutCurrent,w,c
 30439  004222  26D9               	addwf	fsr2l,f,c
 30440  004224  5039               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 30441  004226  22DA               	addwfc	fsr2h,f,c
 30442  004228  0E08               	movlw	8
 30443  00422A  6EDF               	movwf	indf2,c
 30444                           
 30445                           ;usb_device.c: 1133: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 30446  00422C  EE20 F002          	lfsr	2,2
 30447  004230  5038               	movf	_pBDTEntryEP0OutCurrent,w,c
 30448  004232  26D9               	addwf	fsr2l,f,c
 30449  004234  5039               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 30450  004236  22DA               	addwfc	fsr2h,f,c
 30451  004238  0E30               	movlw	48
 30452  00423A  6EDE               	movwf	postinc2,c
 30453  00423C  0E04               	movlw	4
 30454  00423E  6EDD               	movwf	postdec2,c
 30455                           
 30456                           ;usb_device.c: 1134: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 30457  004240  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 30458  004244  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 30459  004248  0E04               	movlw	4
 30460  00424A  6EDF               	movwf	indf2,c
 30461                           
 30462                           ;usb_device.c: 1135: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 30463  00424C  C038  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 30464  004250  C039  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 30465  004254  0E00               	movlw	0
 30466  004256  8EDB               	bsf	plusw2,7,c
 30467                           
 30468                           ;usb_device.c: 1136: BothEP0OutUOWNsSet = 1;
 30469  004258  0E01               	movlw	1
 30470  00425A  6E49               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 30471                           
 30472                           ;usb_device.c: 1139: pBDTEntryEP0OutNext->CNT = 8;
 30473  00425C  EE20 F001          	lfsr	2,1
 30474  004260  5036               	movf	_pBDTEntryEP0OutNext,w,c
 30475  004262  26D9               	addwf	fsr2l,f,c
 30476  004264  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
 30477  004266  22DA               	addwfc	fsr2h,f,c
 30478  004268  0E08               	movlw	8
 30479  00426A  6EDF               	movwf	indf2,c
 30480                           
 30481                           ;usb_device.c: 1140: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 30482  00426C  EE20 F002          	lfsr	2,2
 30483  004270  5036               	movf	_pBDTEntryEP0OutNext,w,c
 30484  004272  26D9               	addwf	fsr2l,f,c
 30485  004274  5037               	movf	_pBDTEntryEP0OutNext+1,w,c
 30486  004276  22DA               	addwfc	fsr2h,f,c
 30487  004278  0E30               	movlw	48
 30488  00427A  6EDE               	movwf	postinc2,c
 30489  00427C  0E04               	movlw	4
 30490  00427E  6EDD               	movwf	postdec2,c
 30491                           
 30492                           ;usb_device.c: 1141: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 30493  004280  C036  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30494  004284  C037  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30495  004288  0E80               	movlw	128
 30496  00428A  6EDF               	movwf	indf2,c
 30497  00428C  0012               	return	
 30498  00428E                     __end_of_USBCtrlEPAllowStatusStage:
 30499                           	opt stack 0
 30500                           tosu	equ	0xFFF
 30501                           tosh	equ	0xFFE
 30502                           tosl	equ	0xFFD
 30503                           pclatu	equ	0xFFB
 30504                           pclath	equ	0xFFA
 30505                           tblptru	equ	0xFF8
 30506                           tblptrh	equ	0xFF7
 30507                           tblptrl	equ	0xFF6
 30508                           tablat	equ	0xFF5
 30509                           prodh	equ	0xFF4
 30510                           prodl	equ	0xFF3
 30511                           intcon	equ	0xFF2
 30512                           intcon2	equ	0xFF1
 30513                           intcon3	equ	0xFF0
 30514                           indf0	equ	0xFEF
 30515                           postinc0	equ	0xFEE
 30516                           fsr0h	equ	0xFEA
 30517                           fsr0l	equ	0xFE9
 30518                           wreg	equ	0xFE8
 30519                           indf1	equ	0xFE7
 30520                           postdec1	equ	0xFE5
 30521                           fsr1h	equ	0xFE2
 30522                           fsr1l	equ	0xFE1
 30523                           indf2	equ	0xFDF
 30524                           postinc2	equ	0xFDE
 30525                           postdec2	equ	0xFDD
 30526                           plusw2	equ	0xFDB
 30527                           fsr2h	equ	0xFDA
 30528                           fsr2l	equ	0xFD9
 30529                           status	equ	0xFD8
 30530                           
 30531 ;; *************** function _USBCtrlTrfInHandler *****************
 30532 ;; Defined at:
 30533 ;;		line 2223 in file "../Includes/Usb/Framework/usb_device.c"
 30534 ;; Parameters:    Size  Location     Type
 30535 ;;		None
 30536 ;; Auto vars:     Size  Location     Type
 30537 ;;  lastDTS         1   17[COMRAM] unsigned char 
 30538 ;; Return value:  Size  Location     Type
 30539 ;;                  1    wreg      void 
 30540 ;; Registers used:
 30541 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 30542 ;; Tracked objects:
 30543 ;;		On entry : 0/0
 30544 ;;		On exit  : 0/0
 30545 ;;		Unchanged: 0/0
 30546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30547 ;;      Params:         0       0       0       0       0       0       0       0       0
 30548 ;;      Locals:         1       0       0       0       0       0       0       0       0
 30549 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30550 ;;      Totals:         1       0       0       0       0       0       0       0       0
 30551 ;;Total ram usage:        1 bytes
 30552 ;; Hardware stack levels used:    1
 30553 ;; Hardware stack levels required when called:    2
 30554 ;; This function calls:
 30555 ;;		_USART_mySetLineCodingHandler
 30556 ;;		_USBCtrlTrfTxService
 30557 ;; This function is called by:
 30558 ;;		_USBCtrlEPService
 30559 ;; This function uses a non-reentrant model
 30560 ;;
 30561                           
 30562                           	psect	text133
 30563  003CE0                     __ptext133:
 30564                           	opt stack 0
 30565  003CE0                     _USBCtrlTrfInHandler:
 30566                           	opt stack 16
 30567                           
 30568                           ;usb_device.c: 2225: uint8_t lastDTS;
 30569                           ;usb_device.c: 2227: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 30570                           
 30571                           ;incstack = 0
 30572  003CE0  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 30573  003CE4  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30574  003CE8  0100               	movlb	0	; () banked
 30575  003CEA  0E00               	movlw	0
 30576  003CEC  BCDF               	btfsc	indf2,6,c
 30577  003CEE  0E01               	movlw	1
 30578  003CF0  6E12               	movwf	USBCtrlTrfInHandler@lastDTS,c
 30579                           
 30580                           ; BSR set to: 0
 30581                           ;usb_device.c: 2230: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 30582  003CF2  0E04               	movlw	4
 30583  003CF4  1BCA               	xorwf	_pBDTEntryIn& (0+255),f,b
 30584                           
 30585                           ; BSR set to: 0
 30586                           ;usb_device.c: 2235: if(USBDeviceState == ADR_PENDING_STATE)
 30587  003CF6  0E08               	movlw	8
 30588  003CF8  19EC               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 30589  003CFA  A4D8               	btfss	status,2,c
 30590  003CFC  D00C               	goto	i2l2053
 30591                           
 30592                           ; BSR set to: 0
 30593                           ;usb_device.c: 2236: {
 30594                           ;usb_device.c: 2237: UADDR = (SetupPkt.bDevADR & 0x7F);
 30595  003CFE  0104               	movlb	4	; () banked
 30596  003D00  5132               	movf	50,w,b	;volatile
 30597  003D02  0B7F               	andlw	127
 30598  003D04  6E63               	movwf	3939,c	;volatile
 30599                           
 30600                           ; BSR set to: 4
 30601                           ;usb_device.c: 2238: if(UADDR != 0u)
 30602  003D06  5063               	movf	3939,w,c	;volatile
 30603  003D08  B4D8               	btfsc	status,2,c
 30604  003D0A  D002               	goto	i2l2052
 30605                           
 30606                           ; BSR set to: 4
 30607                           ;usb_device.c: 2239: {
 30608                           ;usb_device.c: 2240: USBDeviceState=ADDRESS_STATE;
 30609  003D0C  0E10               	movlw	16
 30610  003D0E  D001               	goto	L34
 30611  003D10                     i2l2052:
 30612                           
 30613                           ;usb_device.c: 2242: else
 30614                           ;usb_device.c: 2243: {
 30615                           ;usb_device.c: 2244: USBDeviceState=DEFAULT_STATE;
 30616                           
 30617                           ; BSR set to: 0
 30618  003D10  0E04               	movlw	4
 30619  003D12                     L34:
 30620  003D12  0100               	movlb	0	; () banked
 30621  003D14  6FEC               	movwf	_USBDeviceState& (0+255),b	;volatile
 30622  003D16                     i2l2053:
 30623                           
 30624                           ; BSR set to: 0
 30625                           ;usb_device.c: 2245: }
 30626                           ;usb_device.c: 2246: }
 30627                           ;usb_device.c: 2249: if(controlTransferState == 1)
 30628                           
 30629                           ; BSR set to: 0
 30630                           
 30631                           ; BSR set to: 0
 30632  003D16  044C               	decf	_controlTransferState,w,c	;volatile
 30633  003D18  A4D8               	btfss	status,2,c
 30634  003D1A  D03A               	goto	i2l2054
 30635                           
 30636                           ; BSR set to: 0
 30637                           ;usb_device.c: 2250: {
 30638                           ;usb_device.c: 2251: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 30639  003D1C  EE20 F002          	lfsr	2,2
 30640  003D20  51CA               	movf	_pBDTEntryIn& (0+255),w,b
 30641  003D22  26D9               	addwf	fsr2l,f,c
 30642  003D24  51CB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 30643  003D26  22DA               	addwfc	fsr2h,f,c
 30644  003D28  0E38               	movlw	56
 30645  003D2A  6EDE               	movwf	postinc2,c
 30646  003D2C  0E04               	movlw	4
 30647  003D2E  6EDD               	movwf	postdec2,c
 30648                           
 30649                           ; BSR set to: 0
 30650                           ;usb_device.c: 2252: USBCtrlTrfTxService();
 30651  003D30  EC48  F01F         	call	_USBCtrlTrfTxService	;wreg free
 30652                           
 30653                           ;usb_device.c: 2258: if(shortPacketStatus == 2)
 30654  003D34  0E02               	movlw	2
 30655  003D36  184D               	xorwf	_shortPacketStatus,w,c	;volatile
 30656  003D38  A4D8               	btfss	status,2,c
 30657  003D3A  D00D               	goto	i2l2055
 30658                           
 30659                           ;usb_device.c: 2259: {
 30660                           ;usb_device.c: 2262: pBDTEntryIn[0]->STAT.Val = 0x04;
 30661  003D3C  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 30662  003D40  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30663  003D44  0E04               	movlw	4
 30664  003D46  6EDF               	movwf	indf2,c
 30665                           
 30666                           ;usb_device.c: 2263: pBDTEntryIn[0]->STAT.Val |= 0x80;
 30667  003D48  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 30668  003D4C  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30669  003D50  0E00               	movlw	0
 30670  003D52  8EDB               	bsf	plusw2,7,c
 30671                           
 30672                           ;usb_device.c: 2264: }
 30673  003D54  0012               	return	
 30674  003D56                     i2l2055:
 30675                           
 30676                           ;usb_device.c: 2265: else
 30677                           ;usb_device.c: 2266: {
 30678                           ;usb_device.c: 2267: if(lastDTS == 0)
 30679  003D56  5012               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 30680  003D58  A4D8               	btfss	status,2,c
 30681  003D5A  D00D               	goto	i2l2057
 30682                           
 30683                           ;usb_device.c: 2268: {
 30684                           ;usb_device.c: 2269: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 30685  003D5C  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 30686  003D60  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30687  003D64  0E48               	movlw	72
 30688  003D66  6EDF               	movwf	indf2,c
 30689                           
 30690                           ;usb_device.c: 2270: pBDTEntryIn[0]->STAT.Val |= 0x80;
 30691  003D68  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 30692  003D6C  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30693  003D70  0E00               	movlw	0
 30694  003D72  8EDB               	bsf	plusw2,7,c
 30695                           
 30696                           ;usb_device.c: 2271: }
 30697  003D74  0012               	return	
 30698  003D76                     i2l2057:
 30699                           
 30700                           ;usb_device.c: 2272: else
 30701                           ;usb_device.c: 2273: {
 30702                           ;usb_device.c: 2274: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 30703  003D76  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 30704  003D7A  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30705  003D7E  0E08               	movlw	8
 30706  003D80  6EDF               	movwf	indf2,c
 30707                           
 30708                           ;usb_device.c: 2275: pBDTEntryIn[0]->STAT.Val |= 0x80;
 30709  003D82  C0CA  FFD9         	movff	_pBDTEntryIn,fsr2l
 30710  003D86  C0CB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30711  003D8A  0E00               	movlw	0
 30712  003D8C  8EDB               	bsf	plusw2,7,c
 30713                           
 30714                           ;usb_device.c: 2276: }
 30715                           ;usb_device.c: 2277: }
 30716                           ;usb_device.c: 2278: }
 30717  003D8E  0012               	return	
 30718  003D90                     i2l2054:
 30719                           
 30720                           ; BSR set to: 0
 30721                           ;usb_device.c: 2279: else
 30722                           ;usb_device.c: 2280: {
 30723                           ;usb_device.c: 2284: if(outPipes[0].info.bits.busy == 1)
 30724  003D90  AFBF               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 30725  003D92  D011               	goto	i2l2060
 30726                           
 30727                           ; BSR set to: 0
 30728                           ;usb_device.c: 2285: {
 30729                           ;usb_device.c: 2286: if(outPipes[0].pFunc != (0))
 30730  003D94  51C2               	movf	(_outPipes+6)& (0+255),w,b	;volatile
 30731  003D96  11C3               	iorwf	(_outPipes+7)& (0+255),w,b	;volatile
 30732  003D98  B4D8               	btfsc	status,2,c
 30733  003D9A  D00B               	goto	i2u880_49
 30734                           
 30735                           ; BSR set to: 0
 30736                           ;usb_device.c: 2287: {
 30737                           ;usb_device.c: 2288: outPipes[0].pFunc();
 30738  003D9C  D801               	call	i2u880_48
 30739  003D9E  D009               	goto	i2u880_49
 30740  003DA0                     i2u880_48:
 30741  003DA0  0005               	push	
 30742  003DA2  6EFA               	movwf	pclath,c
 30743  003DA4  51C2               	movf	(_outPipes+6)& (0+255),w,b	;volatile
 30744  003DA6  6EFD               	movwf	tosl,c
 30745  003DA8  51C3               	movf	(_outPipes+7)& (0+255),w,b	;volatile
 30746  003DAA  6EFE               	movwf	tosh,c
 30747  003DAC  6AFF               	clrf	tosu,c
 30748  003DAE  50FA               	movf	pclath,w,c
 30749  003DB0  0012               	return		;indir
 30750  003DB2                     i2u880_49:
 30751                           
 30752                           ;usb_device.c: 2289: }
 30753                           ;usb_device.c: 2290: outPipes[0].info.bits.busy = 0;
 30754  003DB2  0100               	movlb	0	; () banked
 30755  003DB4  9FBF               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 30756  003DB6                     i2l2060:
 30757                           
 30758                           ; BSR set to: 0
 30759                           ;usb_device.c: 2291: }
 30760                           ;usb_device.c: 2293: controlTransferState = 0;
 30761                           
 30762                           ; BSR set to: 0
 30763  003DB6  0E00               	movlw	0
 30764  003DB8  6E4C               	movwf	_controlTransferState,c	;volatile
 30765  003DBA  0012               	return	
 30766  003DBC                     __end_of_USBCtrlTrfInHandler:
 30767                           	opt stack 0
 30768                           tosu	equ	0xFFF
 30769                           tosh	equ	0xFFE
 30770                           tosl	equ	0xFFD
 30771                           pclatu	equ	0xFFB
 30772                           pclath	equ	0xFFA
 30773                           tblptru	equ	0xFF8
 30774                           tblptrh	equ	0xFF7
 30775                           tblptrl	equ	0xFF6
 30776                           tablat	equ	0xFF5
 30777                           prodh	equ	0xFF4
 30778                           prodl	equ	0xFF3
 30779                           intcon	equ	0xFF2
 30780                           intcon2	equ	0xFF1
 30781                           intcon3	equ	0xFF0
 30782                           indf0	equ	0xFEF
 30783                           postinc0	equ	0xFEE
 30784                           fsr0h	equ	0xFEA
 30785                           fsr0l	equ	0xFE9
 30786                           wreg	equ	0xFE8
 30787                           indf1	equ	0xFE7
 30788                           postdec1	equ	0xFE5
 30789                           fsr1h	equ	0xFE2
 30790                           fsr1l	equ	0xFE1
 30791                           indf2	equ	0xFDF
 30792                           postinc2	equ	0xFDE
 30793                           postdec2	equ	0xFDD
 30794                           plusw2	equ	0xFDB
 30795                           fsr2h	equ	0xFDA
 30796                           fsr2l	equ	0xFD9
 30797                           status	equ	0xFD8
 30798                           
 30799 ;; *************** function _USBCtrlTrfTxService *****************
 30800 ;; Defined at:
 30801 ;;		line 1437 in file "../Includes/Usb/Framework/usb_device.c"
 30802 ;; Parameters:    Size  Location     Type
 30803 ;;		None
 30804 ;; Auto vars:     Size  Location     Type
 30805 ;;  byteToSend      1    0[COMRAM] unsigned char 
 30806 ;; Return value:  Size  Location     Type
 30807 ;;                  1    wreg      void 
 30808 ;; Registers used:
 30809 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 30810 ;; Tracked objects:
 30811 ;;		On entry : 0/0
 30812 ;;		On exit  : 0/0
 30813 ;;		Unchanged: 0/0
 30814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30815 ;;      Params:         0       0       0       0       0       0       0       0       0
 30816 ;;      Locals:         1       0       0       0       0       0       0       0       0
 30817 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30818 ;;      Totals:         1       0       0       0       0       0       0       0       0
 30819 ;;Total ram usage:        1 bytes
 30820 ;; Hardware stack levels used:    1
 30821 ;; This function calls:
 30822 ;;		Nothing
 30823 ;; This function is called by:
 30824 ;;		_USBCtrlEPAllowDataStage
 30825 ;;		_USBCtrlTrfInHandler
 30826 ;; This function uses a non-reentrant model
 30827 ;;
 30828                           
 30829                           	psect	text134
 30830  003E90                     __ptext134:
 30831                           	opt stack 0
 30832  003E90                     _USBCtrlTrfTxService:
 30833                           	opt stack 15
 30834                           
 30835                           ;usb_device.c: 1439: uint8_t byteToSend;
 30836                           ;usb_device.c: 1443: byteToSend = 8;
 30837                           
 30838                           ;incstack = 0
 30839  003E90  0E08               	movlw	8
 30840  003E92  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 30841                           
 30842                           ;usb_device.c: 1444: if(inPipes[0].wCount.Val < (uint8_t)8)
 30843  003E94  0100               	movlb	0	; () banked
 30844  003E96  51C9               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 30845  003E98  E110               	bnz	i2l8121
 30846  003E9A  0E08               	movlw	8
 30847  003E9C  5DC8               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 30848  003E9E  B0D8               	btfsc	status,0,c
 30849  003EA0  D00C               	goto	i2l1957
 30850                           
 30851                           ; BSR set to: 0
 30852                           ;usb_device.c: 1445: {
 30853                           ;usb_device.c: 1446: byteToSend = inPipes[0].wCount.Val;
 30854  003EA2  C0C8  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 30855                           
 30856                           ; BSR set to: 0
 30857                           ;usb_device.c: 1453: if(shortPacketStatus == 0)
 30858  003EA6  504D               	movf	_shortPacketStatus,w,c	;volatile
 30859  003EA8  A4D8               	btfss	status,2,c
 30860  003EAA  D002               	goto	i2l1955
 30861                           
 30862                           ; BSR set to: 0
 30863                           ;usb_device.c: 1454: {
 30864                           ;usb_device.c: 1455: shortPacketStatus = 1;
 30865  003EAC  0E01               	movlw	1
 30866  003EAE  D004               	goto	L35
 30867  003EB0                     i2l1955:
 30868                           
 30869                           ; BSR set to: 0
 30870                           ;usb_device.c: 1457: else if(shortPacketStatus == 1)
 30871                           
 30872                           ; BSR set to: 0
 30873  003EB0  044D               	decf	_shortPacketStatus,w,c	;volatile
 30874  003EB2  A4D8               	btfss	status,2,c
 30875  003EB4  D002               	goto	i2l1957
 30876                           
 30877                           ; BSR set to: 0
 30878                           ;usb_device.c: 1458: {
 30879                           ;usb_device.c: 1459: shortPacketStatus = 2;
 30880  003EB6  0E02               	movlw	2
 30881  003EB8                     L35:
 30882  003EB8  6E4D               	movwf	_shortPacketStatus,c	;volatile
 30883  003EBA                     i2l1957:
 30884  003EBA                     i2l8121:
 30885                           
 30886                           ; BSR set to: 0
 30887                           ;usb_device.c: 1460: }
 30888                           ;usb_device.c: 1461: }
 30889                           ;usb_device.c: 1465: inPipes[0].wCount.Val -= byteToSend;
 30890  003EBA  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30891  003EBC  5FC8               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 30892  003EBE  0E00               	movlw	0
 30893  003EC0  5BC9               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 30894                           
 30895                           ; BSR set to: 0
 30896                           ;usb_device.c: 1470: pBDTEntryIn[0]->CNT = byteToSend;
 30897  003EC2  EE20 F001          	lfsr	2,1
 30898  003EC6  51CA               	movf	_pBDTEntryIn& (0+255),w,b
 30899  003EC8  26D9               	addwf	fsr2l,f,c
 30900  003ECA  51CB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 30901  003ECC  22DA               	addwfc	fsr2h,f,c
 30902  003ECE  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 30903                           
 30904                           ; BSR set to: 0
 30905                           ;usb_device.c: 1474: pDst = (volatile uint8_t*)CtrlTrfData;
 30906  003ED2  0E38               	movlw	56
 30907  003ED4  0101               	movlb	1	; () banked
 30908  003ED6  6F54               	movwf	_pDst& (0+255),b
 30909  003ED8  0E04               	movlw	4
 30910  003EDA  6F55               	movwf	(_pDst+1)& (0+255),b
 30911                           
 30912                           ; BSR set to: 1
 30913                           ;usb_device.c: 1475: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 30914  003EDC  0100               	movlb	0	; () banked
 30915  003EDE  A1C7               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 30916  003EE0  D01D               	goto	i2l1959
 30917  003EE2  D03C               	goto	i2l1963
 30918  003EE4                     
 30919                           ;usb_device.c: 1478: {
 30920                           ;usb_device.c: 1479: *pDst++ = *inPipes[0].pSrc.bRom++;
 30921                           
 30922                           ; BSR set to: 0
 30923  003EE4  C0C4  FFF6         	movff	_inPipes,tblptrl	;volatile
 30924  003EE8  C0C5  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 30925  003EEC  6AF8               	clrf	tblptru,c
 30926  003EEE  C154  FFD9         	movff	_pDst,fsr2l
 30927  003EF2  C155  FFDA         	movff	_pDst+1,fsr2h
 30928  003EF6  0E07               	movlw	(high __ramtop+-1)
 30929  003EF8  64F7               	cpfsgt	tblptrh,c
 30930  003EFA  D003               	bra	i2u594_47
 30931  003EFC  0008               	tblrd		*
 30932  003EFE  50F5               	movf	tablat,w,c
 30933  003F00  D005               	bra	i2u594_40
 30934  003F02                     i2u594_47:
 30935  003F02  CFF6 FFE9          	movff	tblptrl,fsr0l
 30936  003F06  CFF7 FFEA          	movff	tblptrh,fsr0h
 30937  003F0A  50EF               	movf	indf0,w,c
 30938  003F0C                     i2u594_40:
 30939  003F0C  6EDF               	movwf	indf2,c
 30940  003F0E  0100               	movlb	0	; () banked
 30941  003F10  4BC4               	infsnz	_inPipes& (0+255),f,b	;volatile
 30942  003F12  2BC5               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 30943                           
 30944                           ; BSR set to: 0
 30945  003F14  0101               	movlb	1	; () banked
 30946  003F16  4B54               	infsnz	_pDst& (0+255),f,b
 30947  003F18  2B55               	incf	(_pDst+1)& (0+255),f,b
 30948                           
 30949                           ; BSR set to: 1
 30950                           ;usb_device.c: 1480: byteToSend--;
 30951  003F1A  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 30952  003F1C                     i2l1959:
 30953                           
 30954                           ; BSR set to: 1
 30955  003F1C  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30956  003F1E  B4D8               	btfsc	status,2,c
 30957  003F20  0012               	return	
 30958  003F22  D7E0               	goto	i2l1960
 30959  003F24                     
 30960                           ;usb_device.c: 1486: {
 30961                           ;usb_device.c: 1487: *pDst++ = *inPipes[0].pSrc.bRam++;
 30962  003F24  C0C4  FFF6         	movff	_inPipes,tblptrl	;volatile
 30963  003F28  C0C5  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 30964  003F2C  6AF8               	clrf	tblptru,c
 30965  003F2E  C154  FFD9         	movff	_pDst,fsr2l
 30966  003F32  C155  FFDA         	movff	_pDst+1,fsr2h
 30967  003F36  0E07               	movlw	(high __ramtop+-1)
 30968  003F38  64F7               	cpfsgt	tblptrh,c
 30969  003F3A  D003               	bra	i2u596_47
 30970  003F3C  0008               	tblrd		*
 30971  003F3E  50F5               	movf	tablat,w,c
 30972  003F40  D005               	bra	i2u596_40
 30973  003F42                     i2u596_47:
 30974  003F42  CFF6 FFE9          	movff	tblptrl,fsr0l
 30975  003F46  CFF7 FFEA          	movff	tblptrh,fsr0h
 30976  003F4A  50EF               	movf	indf0,w,c
 30977  003F4C                     i2u596_40:
 30978  003F4C  6EDF               	movwf	indf2,c
 30979  003F4E  0100               	movlb	0	; () banked
 30980  003F50  4BC4               	infsnz	_inPipes& (0+255),f,b	;volatile
 30981  003F52  2BC5               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 30982                           
 30983                           ; BSR set to: 0
 30984  003F54  0101               	movlb	1	; () banked
 30985  003F56  4B54               	infsnz	_pDst& (0+255),f,b
 30986  003F58  2B55               	incf	(_pDst+1)& (0+255),f,b
 30987                           
 30988                           ; BSR set to: 1
 30989                           ;usb_device.c: 1488: byteToSend--;
 30990  003F5A  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 30991  003F5C                     i2l1963:
 30992                           
 30993                           ; BSR set to: 1
 30994  003F5C  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30995  003F5E  B4D8               	btfsc	status,2,c
 30996  003F60  0012               	return	
 30997  003F62  D7E0               	goto	i2l1964
 30998  003F64                     __end_of_USBCtrlTrfTxService:
 30999                           	opt stack 0
 31000                           tosu	equ	0xFFF
 31001                           tosh	equ	0xFFE
 31002                           tosl	equ	0xFFD
 31003                           pclatu	equ	0xFFB
 31004                           pclath	equ	0xFFA
 31005                           tblptru	equ	0xFF8
 31006                           tblptrh	equ	0xFF7
 31007                           tblptrl	equ	0xFF6
 31008                           tablat	equ	0xFF5
 31009                           prodh	equ	0xFF4
 31010                           prodl	equ	0xFF3
 31011                           intcon	equ	0xFF2
 31012                           intcon2	equ	0xFF1
 31013                           intcon3	equ	0xFF0
 31014                           indf0	equ	0xFEF
 31015                           postinc0	equ	0xFEE
 31016                           fsr0h	equ	0xFEA
 31017                           fsr0l	equ	0xFE9
 31018                           wreg	equ	0xFE8
 31019                           indf1	equ	0xFE7
 31020                           postdec1	equ	0xFE5
 31021                           fsr1h	equ	0xFE2
 31022                           fsr1l	equ	0xFE1
 31023                           indf2	equ	0xFDF
 31024                           postinc2	equ	0xFDE
 31025                           postdec2	equ	0xFDD
 31026                           plusw2	equ	0xFDB
 31027                           fsr2h	equ	0xFDA
 31028                           fsr2l	equ	0xFD9
 31029                           status	equ	0xFD8
 31030                           
 31031 ;; *************** function _USART_mySetLineCodingHandler *****************
 31032 ;; Defined at:
 31033 ;;		line 273 in file "../Includes/Board/USBapp.c"
 31034 ;; Parameters:    Size  Location     Type
 31035 ;;		None
 31036 ;; Auto vars:     Size  Location     Type
 31037 ;;  dwBaud          4   13[COMRAM] unsigned long 
 31038 ;; Return value:  Size  Location     Type
 31039 ;;                  1    wreg      void 
 31040 ;; Registers used:
 31041 ;;		wreg, status,2, status,0, cstack
 31042 ;; Tracked objects:
 31043 ;;		On entry : 0/0
 31044 ;;		On exit  : 0/0
 31045 ;;		Unchanged: 0/0
 31046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31047 ;;      Params:         0       0       0       0       0       0       0       0       0
 31048 ;;      Locals:         4       0       0       0       0       0       0       0       0
 31049 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31050 ;;      Totals:         4       0       0       0       0       0       0       0       0
 31051 ;;Total ram usage:        4 bytes
 31052 ;; Hardware stack levels used:    1
 31053 ;; Hardware stack levels required when called:    1
 31054 ;; This function calls:
 31055 ;;		___lldiv
 31056 ;;		i2_EUSART_Initialize
 31057 ;; This function is called by:
 31058 ;;		_USBCheckCDCRequest
 31059 ;;		_USBCtrlTrfRxService
 31060 ;;		_USBCtrlTrfInHandler
 31061 ;; This function uses a non-reentrant model
 31062 ;;
 31063                           
 31064                           	psect	text135
 31065  0056B8                     __ptext135:
 31066                           	opt stack 0
 31067  0056B8                     _USART_mySetLineCodingHandler:
 31068                           	opt stack 15
 31069                           
 31070                           ;USBapp.c: 276: {line_coding.dwDTERate=cdc_notice.GetLineCoding.dwDTERate;};
 31071                           
 31072                           ;incstack = 0
 31073  0056B8  C1D5  F1E7         	movff	_cdc_notice,_line_coding
 31074  0056BC  C1D6  F1E8         	movff	_cdc_notice+1,_line_coding+1
 31075  0056C0  C1D7  F1E9         	movff	_cdc_notice+2,_line_coding+2
 31076  0056C4  C1D8  F1EA         	movff	_cdc_notice+3,_line_coding+3
 31077                           
 31078                           ;USBapp.c: 278: uint32_t dwBaud;
 31079                           ;USBapp.c: 279: dwBaud = ((48000000/4) / line_coding.dwDTERate) - 1;
 31080  0056C8  0E00               	movlw	0
 31081  0056CA  6E01               	movwf	___lldiv@dividend,c
 31082  0056CC  0E1B               	movlw	27
 31083  0056CE  6E02               	movwf	___lldiv@dividend+1,c
 31084  0056D0  0EB7               	movlw	183
 31085  0056D2  6E03               	movwf	___lldiv@dividend+2,c
 31086  0056D4  0E00               	movlw	0
 31087  0056D6  6E04               	movwf	___lldiv@dividend+3,c
 31088  0056D8  C1E7  F005         	movff	_line_coding,___lldiv@divisor
 31089  0056DC  C1E8  F006         	movff	_line_coding+1,___lldiv@divisor+1
 31090  0056E0  C1E9  F007         	movff	_line_coding+2,___lldiv@divisor+2
 31091  0056E4  C1EA  F008         	movff	_line_coding+3,___lldiv@divisor+3
 31092  0056E8  EC3D  F027         	call	___lldiv	;wreg free
 31093  0056EC  0EFF               	movlw	255
 31094  0056EE  2401               	addwf	?___lldiv,w,c
 31095  0056F0  6E0E               	movwf	USART_mySetLineCodingHandler@dwBaud,c
 31096  0056F2  0EFF               	movlw	255
 31097  0056F4  2002               	addwfc	?___lldiv+1,w,c
 31098  0056F6  6E0F               	movwf	USART_mySetLineCodingHandler@dwBaud+1,c
 31099  0056F8  0EFF               	movlw	255
 31100  0056FA  2003               	addwfc	?___lldiv+2,w,c
 31101  0056FC  6E10               	movwf	USART_mySetLineCodingHandler@dwBaud+2,c
 31102  0056FE  0EFF               	movlw	255
 31103  005700  2004               	addwfc	?___lldiv+3,w,c
 31104  005702  6E11               	movwf	USART_mySetLineCodingHandler@dwBaud+3,c
 31105                           
 31106                           ;USBapp.c: 280: SPBRG = (uint8_t) dwBaud;
 31107  005704  C00E  FFAF         	movff	USART_mySetLineCodingHandler@dwBaud,4015	;volatile
 31108                           
 31109                           ;USBapp.c: 281: SPBRGH = (uint8_t)((uint16_t) (dwBaud >> 8));
 31110  005708  C00F  FFB0         	movff	USART_mySetLineCodingHandler@dwBaud+1,4016	;volatile
 31111                           
 31112                           ;USBapp.c: 283: EUSART_Initialize();
 31113  00570C  ECA4  F02D         	call	i2_EUSART_Initialize	;wreg free
 31114  005710  0012               	return		;funcret
 31115  005712                     __end_of_USART_mySetLineCodingHandler:
 31116                           	opt stack 0
 31117                           tosu	equ	0xFFF
 31118                           tosh	equ	0xFFE
 31119                           tosl	equ	0xFFD
 31120                           pclatu	equ	0xFFB
 31121                           pclath	equ	0xFFA
 31122                           tblptru	equ	0xFF8
 31123                           tblptrh	equ	0xFF7
 31124                           tblptrl	equ	0xFF6
 31125                           tablat	equ	0xFF5
 31126                           prodh	equ	0xFF4
 31127                           prodl	equ	0xFF3
 31128                           intcon	equ	0xFF2
 31129                           intcon2	equ	0xFF1
 31130                           intcon3	equ	0xFF0
 31131                           indf0	equ	0xFEF
 31132                           postinc0	equ	0xFEE
 31133                           fsr0h	equ	0xFEA
 31134                           fsr0l	equ	0xFE9
 31135                           wreg	equ	0xFE8
 31136                           indf1	equ	0xFE7
 31137                           postdec1	equ	0xFE5
 31138                           fsr1h	equ	0xFE2
 31139                           fsr1l	equ	0xFE1
 31140                           indf2	equ	0xFDF
 31141                           postinc2	equ	0xFDE
 31142                           postdec2	equ	0xFDD
 31143                           plusw2	equ	0xFDB
 31144                           fsr2h	equ	0xFDA
 31145                           fsr2l	equ	0xFD9
 31146                           status	equ	0xFD8
 31147                           
 31148 ;; *************** function i2_EUSART_Initialize *****************
 31149 ;; Defined at:
 31150 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 31151 ;; Parameters:    Size  Location     Type
 31152 ;;		None
 31153 ;; Auto vars:     Size  Location     Type
 31154 ;;		None
 31155 ;; Return value:  Size  Location     Type
 31156 ;;                  1    wreg      void 
 31157 ;; Registers used:
 31158 ;;		wreg, status,2
 31159 ;; Tracked objects:
 31160 ;;		On entry : 0/0
 31161 ;;		On exit  : 0/0
 31162 ;;		Unchanged: 0/0
 31163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31164 ;;      Params:         0       0       0       0       0       0       0       0       0
 31165 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31166 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31167 ;;      Totals:         0       0       0       0       0       0       0       0       0
 31168 ;;Total ram usage:        0 bytes
 31169 ;; Hardware stack levels used:    1
 31170 ;; This function calls:
 31171 ;;		Nothing
 31172 ;; This function is called by:
 31173 ;;		_USBapp_CdcEmulatorInitialize
 31174 ;;		_USART_mySetLineCodingHandler
 31175 ;; This function uses a non-reentrant model
 31176 ;;
 31177                           
 31178                           	psect	text136
 31179  005B48                     __ptext136:
 31180                           	opt stack 0
 31181  005B48                     i2_EUSART_Initialize:
 31182                           	opt stack 17
 31183                           
 31184                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 31185                           
 31186                           ;incstack = 0
 31187  005B48  9A9D               	bcf	3997,5,c	;volatile
 31188                           
 31189                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 31190  005B4A  989D               	bcf	3997,4,c	;volatile
 31191                           
 31192                           ;eusart.c: 85: BAUDCON = 0x48;
 31193  005B4C  0E48               	movlw	72
 31194  005B4E  6EB8               	movwf	4024,c	;volatile
 31195                           
 31196                           ;eusart.c: 88: RCSTA = 0x90;
 31197  005B50  0E90               	movlw	144
 31198  005B52  6EAB               	movwf	4011,c	;volatile
 31199                           
 31200                           ;eusart.c: 91: TXSTA = 0x26;
 31201  005B54  0E26               	movlw	38
 31202  005B56  6EAC               	movwf	4012,c	;volatile
 31203                           
 31204                           ;eusart.c: 95: SPBRG = 0xD0;
 31205  005B58  0ED0               	movlw	208
 31206  005B5A  6EAF               	movwf	4015,c	;volatile
 31207                           
 31208                           ;eusart.c: 100: SPBRGH = 0x00;
 31209  005B5C  0E00               	movlw	0
 31210  005B5E  6EB0               	movwf	4016,c	;volatile
 31211                           
 31212                           ;eusart.c: 103: eusartTxHead = 0;
 31213  005B60  0E00               	movlw	0
 31214  005B62  0100               	movlb	0	; () banked
 31215  005B64  6FE2               	movwf	_eusartTxHead& (0+255),b
 31216                           
 31217                           ;eusart.c: 104: eusartTxTail = 0;
 31218  005B66  0E00               	movlw	0
 31219  005B68  6FE1               	movwf	_eusartTxTail& (0+255),b
 31220                           
 31221                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 31222  005B6A  0E40               	movlw	64
 31223  005B6C  6FE0               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
 31224                           
 31225                           ;eusart.c: 107: eusartRxHead = 0;
 31226  005B6E  0E00               	movlw	0
 31227  005B70  6FDF               	movwf	_eusartRxHead& (0+255),b
 31228                           
 31229                           ;eusart.c: 108: eusartRxTail = 0;
 31230  005B72  0E00               	movlw	0
 31231  005B74  6FDE               	movwf	_eusartRxTail& (0+255),b
 31232                           
 31233                           ;eusart.c: 109: eusartRxCount = 0;
 31234  005B76  0E00               	movlw	0
 31235  005B78  6FF5               	movwf	_eusartRxCount& (0+255),b	;volatile
 31236                           
 31237                           ; BSR set to: 0
 31238                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 31239  005B7A  8A9D               	bsf	3997,5,c	;volatile
 31240                           
 31241                           ; BSR set to: 0
 31242                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 31243  005B7C  88AB               	bsf	4011,4,c	;volatile
 31244                           
 31245                           ; BSR set to: 0
 31246  005B7E  0012               	return		;funcret
 31247  005B80                     __end_ofi2_EUSART_Initialize:
 31248                           	opt stack 0
 31249                           tosu	equ	0xFFF
 31250                           tosh	equ	0xFFE
 31251                           tosl	equ	0xFFD
 31252                           pclatu	equ	0xFFB
 31253                           pclath	equ	0xFFA
 31254                           tblptru	equ	0xFF8
 31255                           tblptrh	equ	0xFF7
 31256                           tblptrl	equ	0xFF6
 31257                           tablat	equ	0xFF5
 31258                           prodh	equ	0xFF4
 31259                           prodl	equ	0xFF3
 31260                           intcon	equ	0xFF2
 31261                           intcon2	equ	0xFF1
 31262                           intcon3	equ	0xFF0
 31263                           indf0	equ	0xFEF
 31264                           postinc0	equ	0xFEE
 31265                           fsr0h	equ	0xFEA
 31266                           fsr0l	equ	0xFE9
 31267                           wreg	equ	0xFE8
 31268                           indf1	equ	0xFE7
 31269                           postdec1	equ	0xFE5
 31270                           fsr1h	equ	0xFE2
 31271                           fsr1l	equ	0xFE1
 31272                           indf2	equ	0xFDF
 31273                           postinc2	equ	0xFDE
 31274                           postdec2	equ	0xFDD
 31275                           plusw2	equ	0xFDB
 31276                           fsr2h	equ	0xFDA
 31277                           fsr2l	equ	0xFD9
 31278                           status	equ	0xFD8
 31279                           
 31280 ;; *************** function ___lldiv *****************
 31281 ;; Defined at:
 31282 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 31283 ;; Parameters:    Size  Location     Type
 31284 ;;  dividend        4    0[COMRAM] unsigned long 
 31285 ;;  divisor         4    4[COMRAM] unsigned long 
 31286 ;; Auto vars:     Size  Location     Type
 31287 ;;  quotient        4    8[COMRAM] unsigned long 
 31288 ;;  counter         1   12[COMRAM] unsigned char 
 31289 ;; Return value:  Size  Location     Type
 31290 ;;                  4    0[COMRAM] unsigned long 
 31291 ;; Registers used:
 31292 ;;		wreg, status,2, status,0
 31293 ;; Tracked objects:
 31294 ;;		On entry : 0/0
 31295 ;;		On exit  : 0/0
 31296 ;;		Unchanged: 0/0
 31297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31298 ;;      Params:         8       0       0       0       0       0       0       0       0
 31299 ;;      Locals:         5       0       0       0       0       0       0       0       0
 31300 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31301 ;;      Totals:        13       0       0       0       0       0       0       0       0
 31302 ;;Total ram usage:       13 bytes
 31303 ;; Hardware stack levels used:    1
 31304 ;; This function calls:
 31305 ;;		Nothing
 31306 ;; This function is called by:
 31307 ;;		_USART_mySetLineCodingHandler
 31308 ;; This function uses a non-reentrant model
 31309 ;;
 31310                           
 31311                           	psect	text137
 31312  004E7A                     __ptext137:
 31313                           	opt stack 0
 31314  004E7A                     ___lldiv:
 31315                           	opt stack 15
 31316                           
 31317                           ; BSR set to: 0
 31318                           ;incstack = 0
 31319  004E7A  0E00               	movlw	0
 31320  004E7C  6E09               	movwf	___lldiv@quotient,c
 31321  004E7E  0E00               	movlw	0
 31322  004E80  6E0A               	movwf	___lldiv@quotient+1,c
 31323  004E82  0E00               	movlw	0
 31324  004E84  6E0B               	movwf	___lldiv@quotient+2,c
 31325  004E86  0E00               	movlw	0
 31326  004E88  6E0C               	movwf	___lldiv@quotient+3,c
 31327  004E8A  5005               	movf	___lldiv@divisor,w,c
 31328  004E8C  1006               	iorwf	___lldiv@divisor+1,w,c
 31329  004E8E  1007               	iorwf	___lldiv@divisor+2,w,c
 31330  004E90  1008               	iorwf	___lldiv@divisor+3,w,c
 31331  004E92  B4D8               	btfsc	status,2,c
 31332  004E94  D02A               	goto	i2l2602
 31333  004E96  0E01               	movlw	1
 31334  004E98  6E0D               	movwf	___lldiv@counter,c
 31335  004E9A  D006               	goto	i2l2597
 31336  004E9C  90D8               	bcf	status,0,c
 31337  004E9E  3605               	rlcf	___lldiv@divisor,f,c
 31338  004EA0  3606               	rlcf	___lldiv@divisor+1,f,c
 31339  004EA2  3607               	rlcf	___lldiv@divisor+2,f,c
 31340  004EA4  3608               	rlcf	___lldiv@divisor+3,f,c
 31341  004EA6  2A0D               	incf	___lldiv@counter,f,c
 31342  004EA8                     i2l2597:
 31343  004EA8  AE08               	btfss	___lldiv@divisor+3,7,c
 31344  004EAA  D7F8               	goto	i2l2598
 31345  004EAC                     i2u599_40:
 31346  004EAC  90D8               	bcf	status,0,c
 31347  004EAE  3609               	rlcf	___lldiv@quotient,f,c
 31348  004EB0  360A               	rlcf	___lldiv@quotient+1,f,c
 31349  004EB2  360B               	rlcf	___lldiv@quotient+2,f,c
 31350  004EB4  360C               	rlcf	___lldiv@quotient+3,f,c
 31351  004EB6  5005               	movf	___lldiv@divisor,w,c
 31352  004EB8  5C01               	subwf	___lldiv@dividend,w,c
 31353  004EBA  5006               	movf	___lldiv@divisor+1,w,c
 31354  004EBC  5802               	subwfb	___lldiv@dividend+1,w,c
 31355  004EBE  5007               	movf	___lldiv@divisor+2,w,c
 31356  004EC0  5803               	subwfb	___lldiv@dividend+2,w,c
 31357  004EC2  5008               	movf	___lldiv@divisor+3,w,c
 31358  004EC4  5804               	subwfb	___lldiv@dividend+3,w,c
 31359  004EC6  A0D8               	btfss	status,0,c
 31360  004EC8  D009               	goto	i2l2601
 31361  004ECA  5005               	movf	___lldiv@divisor,w,c
 31362  004ECC  5E01               	subwf	___lldiv@dividend,f,c
 31363  004ECE  5006               	movf	___lldiv@divisor+1,w,c
 31364  004ED0  5A02               	subwfb	___lldiv@dividend+1,f,c
 31365  004ED2  5007               	movf	___lldiv@divisor+2,w,c
 31366  004ED4  5A03               	subwfb	___lldiv@dividend+2,f,c
 31367  004ED6  5008               	movf	___lldiv@divisor+3,w,c
 31368  004ED8  5A04               	subwfb	___lldiv@dividend+3,f,c
 31369  004EDA  8009               	bsf	___lldiv@quotient,0,c
 31370  004EDC                     i2l2601:
 31371  004EDC  90D8               	bcf	status,0,c
 31372  004EDE  3208               	rrcf	___lldiv@divisor+3,f,c
 31373  004EE0  3207               	rrcf	___lldiv@divisor+2,f,c
 31374  004EE2  3206               	rrcf	___lldiv@divisor+1,f,c
 31375  004EE4  3205               	rrcf	___lldiv@divisor,f,c
 31376  004EE6  2E0D               	decfsz	___lldiv@counter,f,c
 31377  004EE8  D7E1               	goto	i2u599_40
 31378  004EEA                     i2l2602:
 31379  004EEA  C009  F001         	movff	___lldiv@quotient,?___lldiv
 31380  004EEE  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 31381  004EF2  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 31382  004EF6  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 31383  004EFA  0012               	return		;funcret
 31384  004EFC                     __end_of___lldiv:
 31385                           	opt stack 0
 31386                           tosu	equ	0xFFF
 31387                           tosh	equ	0xFFE
 31388                           tosl	equ	0xFFD
 31389                           pclatu	equ	0xFFB
 31390                           pclath	equ	0xFFA
 31391                           tblptru	equ	0xFF8
 31392                           tblptrh	equ	0xFF7
 31393                           tblptrl	equ	0xFF6
 31394                           tablat	equ	0xFF5
 31395                           prodh	equ	0xFF4
 31396                           prodl	equ	0xFF3
 31397                           intcon	equ	0xFF2
 31398                           intcon2	equ	0xFF1
 31399                           intcon3	equ	0xFF0
 31400                           indf0	equ	0xFEF
 31401                           postinc0	equ	0xFEE
 31402                           fsr0h	equ	0xFEA
 31403                           fsr0l	equ	0xFE9
 31404                           wreg	equ	0xFE8
 31405                           indf1	equ	0xFE7
 31406                           postdec1	equ	0xFE5
 31407                           fsr1h	equ	0xFE2
 31408                           fsr1l	equ	0xFE1
 31409                           indf2	equ	0xFDF
 31410                           postinc2	equ	0xFDE
 31411                           postdec2	equ	0xFDD
 31412                           plusw2	equ	0xFDB
 31413                           fsr2h	equ	0xFDA
 31414                           fsr2l	equ	0xFD9
 31415                           status	equ	0xFD8
 31416                           
 31417 ;; *************** function _TMRapp_Tick *****************
 31418 ;; Defined at:
 31419 ;;		line 45 in file "../Includes/Drivers/TMRapp.c"
 31420 ;; Parameters:    Size  Location     Type
 31421 ;;		None
 31422 ;; Auto vars:     Size  Location     Type
 31423 ;;		None
 31424 ;; Return value:  Size  Location     Type
 31425 ;;                  1    wreg      void 
 31426 ;; Registers used:
 31427 ;;		None
 31428 ;; Tracked objects:
 31429 ;;		On entry : 0/0
 31430 ;;		On exit  : 0/0
 31431 ;;		Unchanged: 0/0
 31432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31433 ;;      Params:         0       0       0       0       0       0       0       0       0
 31434 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31435 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31436 ;;      Totals:         0       0       0       0       0       0       0       0       0
 31437 ;;Total ram usage:        0 bytes
 31438 ;; Hardware stack levels used:    1
 31439 ;; This function calls:
 31440 ;;		Nothing
 31441 ;; This function is called by:
 31442 ;;		_INTERRUPT_InterruptManager
 31443 ;; This function uses a non-reentrant model
 31444 ;;
 31445                           
 31446                           	psect	text138
 31447  00622A                     __ptext138:
 31448                           	opt stack 0
 31449  00622A                     _TMRapp_Tick:
 31450                           	opt stack 20
 31451                           
 31452                           ;TMRapp.c: 48: appTimer.mSecTick = 1;
 31453                           
 31454                           ;incstack = 0
 31455  00622A  0100               	movlb	0	; () banked
 31456  00622C  81F8               	bsf	_appTimer& (0+255),0,b
 31457                           
 31458                           ; BSR set to: 0
 31459  00622E  0012               	return		;funcret
 31460  006230                     __end_of_TMRapp_Tick:
 31461                           	opt stack 0
 31462                           tosu	equ	0xFFF
 31463                           tosh	equ	0xFFE
 31464                           tosl	equ	0xFFD
 31465                           pclatu	equ	0xFFB
 31466                           pclath	equ	0xFFA
 31467                           tblptru	equ	0xFF8
 31468                           tblptrh	equ	0xFF7
 31469                           tblptrl	equ	0xFF6
 31470                           tablat	equ	0xFF5
 31471                           prodh	equ	0xFF4
 31472                           prodl	equ	0xFF3
 31473                           intcon	equ	0xFF2
 31474                           intcon2	equ	0xFF1
 31475                           intcon3	equ	0xFF0
 31476                           indf0	equ	0xFEF
 31477                           postinc0	equ	0xFEE
 31478                           fsr0h	equ	0xFEA
 31479                           fsr0l	equ	0xFE9
 31480                           wreg	equ	0xFE8
 31481                           indf1	equ	0xFE7
 31482                           postdec1	equ	0xFE5
 31483                           fsr1h	equ	0xFE2
 31484                           fsr1l	equ	0xFE1
 31485                           indf2	equ	0xFDF
 31486                           postinc2	equ	0xFDE
 31487                           postdec2	equ	0xFDD
 31488                           plusw2	equ	0xFDB
 31489                           fsr2h	equ	0xFDA
 31490                           fsr2l	equ	0xFD9
 31491                           status	equ	0xFD8
 31492                           
 31493 ;; *************** function _TMR3_ISR *****************
 31494 ;; Defined at:
 31495 ;;		line 161 in file "../Includes/MccGenerated/tmr3.c"
 31496 ;; Parameters:    Size  Location     Type
 31497 ;;		None
 31498 ;; Auto vars:     Size  Location     Type
 31499 ;;		None
 31500 ;; Return value:  Size  Location     Type
 31501 ;;                  1    wreg      void 
 31502 ;; Registers used:
 31503 ;;		wreg, status,2
 31504 ;; Tracked objects:
 31505 ;;		On entry : 0/0
 31506 ;;		On exit  : 0/0
 31507 ;;		Unchanged: 0/0
 31508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31509 ;;      Params:         0       0       0       0       0       0       0       0       0
 31510 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31511 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31512 ;;      Totals:         0       0       0       0       0       0       0       0       0
 31513 ;;Total ram usage:        0 bytes
 31514 ;; Hardware stack levels used:    1
 31515 ;; This function calls:
 31516 ;;		Nothing
 31517 ;; This function is called by:
 31518 ;;		_INTERRUPT_InterruptManager
 31519 ;; This function uses a non-reentrant model
 31520 ;;
 31521                           
 31522                           	psect	text139
 31523  005F8A                     __ptext139:
 31524                           	opt stack 0
 31525  005F8A                     _TMR3_ISR:
 31526                           	opt stack 20
 31527                           
 31528                           ;tmr3.c: 164: PIR2bits.TMR3IF = 0;
 31529                           
 31530                           ; BSR set to: 0
 31531                           ;incstack = 0
 31532  005F8A  92A1               	bcf	4001,1,c	;volatile
 31533                           
 31534                           ;tmr3.c: 167: if(LATEbits.LATE2 == 1)
 31535  005F8C  A48D               	btfss	3981,2,c	;volatile
 31536  005F8E  D006               	goto	i2l1684
 31537                           
 31538                           ;tmr3.c: 168: {
 31539                           ;tmr3.c: 169: LATEbits.LATE2 = 0;
 31540  005F90  948D               	bcf	3981,2,c	;volatile
 31541                           
 31542                           ;tmr3.c: 170: TMR3H = 0xD5;
 31543  005F92  0ED5               	movlw	213
 31544  005F94  6EB3               	movwf	4019,c	;volatile
 31545                           
 31546                           ;tmr3.c: 171: TMR3L = 0xD0;
 31547  005F96  0ED0               	movlw	208
 31548  005F98  6EB2               	movwf	4018,c	;volatile
 31549                           
 31550                           ;tmr3.c: 172: } else {
 31551  005F9A  0012               	return	
 31552  005F9C                     i2l1684:
 31553                           
 31554                           ;tmr3.c: 173: LATEbits.LATE2 = 1;
 31555  005F9C  848D               	bsf	3981,2,c	;volatile
 31556                           
 31557                           ;tmr3.c: 174: TMR3H = 0xFB;
 31558  005F9E  0EFB               	movlw	251
 31559  005FA0  6EB3               	movwf	4019,c	;volatile
 31560                           
 31561                           ;tmr3.c: 175: TMR3L = 0x50;
 31562  005FA2  0E50               	movlw	80
 31563  005FA4  6EB2               	movwf	4018,c	;volatile
 31564  005FA6  0012               	return	
 31565  005FA8                     __end_of_TMR3_ISR:
 31566                           	opt stack 0
 31567                           tosu	equ	0xFFF
 31568                           tosh	equ	0xFFE
 31569                           tosl	equ	0xFFD
 31570                           pclatu	equ	0xFFB
 31571                           pclath	equ	0xFFA
 31572                           tblptru	equ	0xFF8
 31573                           tblptrh	equ	0xFF7
 31574                           tblptrl	equ	0xFF6
 31575                           tablat	equ	0xFF5
 31576                           prodh	equ	0xFF4
 31577                           prodl	equ	0xFF3
 31578                           intcon	equ	0xFF2
 31579                           intcon2	equ	0xFF1
 31580                           intcon3	equ	0xFF0
 31581                           indf0	equ	0xFEF
 31582                           postinc0	equ	0xFEE
 31583                           fsr0h	equ	0xFEA
 31584                           fsr0l	equ	0xFE9
 31585                           wreg	equ	0xFE8
 31586                           indf1	equ	0xFE7
 31587                           postdec1	equ	0xFE5
 31588                           fsr1h	equ	0xFE2
 31589                           fsr1l	equ	0xFE1
 31590                           indf2	equ	0xFDF
 31591                           postinc2	equ	0xFDE
 31592                           postdec2	equ	0xFDD
 31593                           plusw2	equ	0xFDB
 31594                           fsr2h	equ	0xFDA
 31595                           fsr2l	equ	0xFD9
 31596                           status	equ	0xFD8
 31597                           
 31598 ;; *************** function _TMR1_ISR *****************
 31599 ;; Defined at:
 31600 ;;		line 152 in file "../Includes/MccGenerated/tmr1.c"
 31601 ;; Parameters:    Size  Location     Type
 31602 ;;		None
 31603 ;; Auto vars:     Size  Location     Type
 31604 ;;		None
 31605 ;; Return value:  Size  Location     Type
 31606 ;;                  1    wreg      void 
 31607 ;; Registers used:
 31608 ;;		wreg, status,2
 31609 ;; Tracked objects:
 31610 ;;		On entry : 0/0
 31611 ;;		On exit  : 0/0
 31612 ;;		Unchanged: 0/0
 31613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31614 ;;      Params:         0       0       0       0       0       0       0       0       0
 31615 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31616 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31617 ;;      Totals:         0       0       0       0       0       0       0       0       0
 31618 ;;Total ram usage:        0 bytes
 31619 ;; Hardware stack levels used:    1
 31620 ;; This function calls:
 31621 ;;		Nothing
 31622 ;; This function is called by:
 31623 ;;		_INTERRUPT_InterruptManager
 31624 ;; This function uses a non-reentrant model
 31625 ;;
 31626                           
 31627                           	psect	text140
 31628  0061A8                     __ptext140:
 31629                           	opt stack 0
 31630  0061A8                     _TMR1_ISR:
 31631                           	opt stack 20
 31632                           
 31633                           ;tmr1.c: 156: PIR1bits.TMR1IF = 0;
 31634                           
 31635                           ;incstack = 0
 31636  0061A8  909E               	bcf	3998,0,c	;volatile
 31637                           
 31638                           ;tmr1.c: 158: TMR1H = (timer1ReloadVal >> 8);
 31639  0061AA  503D               	movf	_timer1ReloadVal+1,w,c	;volatile
 31640  0061AC  6ECF               	movwf	4047,c	;volatile
 31641                           
 31642                           ;tmr1.c: 159: TMR1L = timer1ReloadVal;
 31643  0061AE  C03C  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 31644  0061B2  0012               	return		;funcret
 31645  0061B4                     __end_of_TMR1_ISR:
 31646                           	opt stack 0
 31647                           tosu	equ	0xFFF
 31648                           tosh	equ	0xFFE
 31649                           tosl	equ	0xFFD
 31650                           pclatu	equ	0xFFB
 31651                           pclath	equ	0xFFA
 31652                           tblptru	equ	0xFF8
 31653                           tblptrh	equ	0xFF7
 31654                           tblptrl	equ	0xFF6
 31655                           tablat	equ	0xFF5
 31656                           prodh	equ	0xFF4
 31657                           prodl	equ	0xFF3
 31658                           intcon	equ	0xFF2
 31659                           intcon2	equ	0xFF1
 31660                           intcon3	equ	0xFF0
 31661                           indf0	equ	0xFEF
 31662                           postinc0	equ	0xFEE
 31663                           fsr0h	equ	0xFEA
 31664                           fsr0l	equ	0xFE9
 31665                           wreg	equ	0xFE8
 31666                           indf1	equ	0xFE7
 31667                           postdec1	equ	0xFE5
 31668                           fsr1h	equ	0xFE2
 31669                           fsr1l	equ	0xFE1
 31670                           indf2	equ	0xFDF
 31671                           postinc2	equ	0xFDE
 31672                           postdec2	equ	0xFDD
 31673                           plusw2	equ	0xFDB
 31674                           fsr2h	equ	0xFDA
 31675                           fsr2l	equ	0xFD9
 31676                           status	equ	0xFD8
 31677                           
 31678 ;; *************** function _TMR0_ISR *****************
 31679 ;; Defined at:
 31680 ;;		line 129 in file "../Includes/MccGenerated/tmr0.c"
 31681 ;; Parameters:    Size  Location     Type
 31682 ;;		None
 31683 ;; Auto vars:     Size  Location     Type
 31684 ;;		None
 31685 ;; Return value:  Size  Location     Type
 31686 ;;                  1    wreg      void 
 31687 ;; Registers used:
 31688 ;;		None
 31689 ;; Tracked objects:
 31690 ;;		On entry : 0/0
 31691 ;;		On exit  : 0/0
 31692 ;;		Unchanged: 0/0
 31693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31694 ;;      Params:         0       0       0       0       0       0       0       0       0
 31695 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31696 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31697 ;;      Totals:         0       0       0       0       0       0       0       0       0
 31698 ;;Total ram usage:        0 bytes
 31699 ;; Hardware stack levels used:    1
 31700 ;; This function calls:
 31701 ;;		Nothing
 31702 ;; This function is called by:
 31703 ;;		_INTERRUPT_InterruptManager
 31704 ;; This function uses a non-reentrant model
 31705 ;;
 31706                           
 31707                           	psect	text141
 31708  006246                     __ptext141:
 31709                           	opt stack 0
 31710  006246                     _TMR0_ISR:
 31711                           	opt stack 20
 31712                           
 31713                           ;tmr0.c: 133: INTCONbits.TMR0IF = 0;
 31714                           
 31715                           ;incstack = 0
 31716  006246  94F2               	bcf	intcon,2,c	;volatile
 31717  006248  0012               	return		;funcret
 31718  00624A                     __end_of_TMR0_ISR:
 31719                           	opt stack 0
 31720                           tosu	equ	0xFFF
 31721                           tosh	equ	0xFFE
 31722                           tosl	equ	0xFFD
 31723                           pclatu	equ	0xFFB
 31724                           pclath	equ	0xFFA
 31725                           tblptru	equ	0xFF8
 31726                           tblptrh	equ	0xFF7
 31727                           tblptrl	equ	0xFF6
 31728                           tablat	equ	0xFF5
 31729                           prodh	equ	0xFF4
 31730                           prodl	equ	0xFF3
 31731                           intcon	equ	0xFF2
 31732                           intcon2	equ	0xFF1
 31733                           intcon3	equ	0xFF0
 31734                           indf0	equ	0xFEF
 31735                           postinc0	equ	0xFEE
 31736                           fsr0h	equ	0xFEA
 31737                           fsr0l	equ	0xFE9
 31738                           wreg	equ	0xFE8
 31739                           indf1	equ	0xFE7
 31740                           postdec1	equ	0xFE5
 31741                           fsr1h	equ	0xFE2
 31742                           fsr1l	equ	0xFE1
 31743                           indf2	equ	0xFDF
 31744                           postinc2	equ	0xFDE
 31745                           postdec2	equ	0xFDD
 31746                           plusw2	equ	0xFDB
 31747                           fsr2h	equ	0xFDA
 31748                           fsr2l	equ	0xFD9
 31749                           status	equ	0xFD8
 31750                           
 31751 ;; *************** function _InterruptTimerUART *****************
 31752 ;; Defined at:
 31753 ;;		line 118 in file "../Includes/Drivers/swUart.c"
 31754 ;; Parameters:    Size  Location     Type
 31755 ;;		None
 31756 ;; Auto vars:     Size  Location     Type
 31757 ;;  mask            1   32[COMRAM] unsigned char 
 31758 ;; Return value:  Size  Location     Type
 31759 ;;                  1    wreg      void 
 31760 ;; Registers used:
 31761 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31762 ;; Tracked objects:
 31763 ;;		On entry : 0/0
 31764 ;;		On exit  : 0/0
 31765 ;;		Unchanged: 0/0
 31766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31767 ;;      Params:         0       0       0       0       0       0       0       0       0
 31768 ;;      Locals:         1       0       0       0       0       0       0       0       0
 31769 ;;      Temps:          2       0       0       0       0       0       0       0       0
 31770 ;;      Totals:         3       0       0       0       0       0       0       0       0
 31771 ;;Total ram usage:        3 bytes
 31772 ;; Hardware stack levels used:    1
 31773 ;; Hardware stack levels required when called:    6
 31774 ;; This function calls:
 31775 ;;		_ReadyByteFrame
 31776 ;;		_TMR0_StopTimer
 31777 ;;		_clearInterruptTimerUART
 31778 ;;		_reloadTimer
 31779 ;;		i2_oled_clear
 31780 ;; This function is called by:
 31781 ;;		_INTERRUPT_InterruptManager
 31782 ;; This function uses a non-reentrant model
 31783 ;;
 31784                           
 31785                           	psect	text142
 31786  00369A                     __ptext142:
 31787                           	opt stack 0
 31788  00369A                     _InterruptTimerUART:
 31789                           	opt stack 14
 31790                           
 31791                           ;swUart.c: 120: uint8_t mask;
 31792                           ;swUart.c: 121: PORTAbits.RA7 = !PORTAbits.RA7;
 31793                           
 31794                           ;incstack = 0
 31795  00369A  BE80               	btfsc	3968,7,c	;volatile
 31796  00369C  D003               	goto	i2u1044_40
 31797  00369E  6A1F               	clrf	??_InterruptTimerUART& (0+255),c
 31798  0036A0  2A1F               	incf	??_InterruptTimerUART& (0+255),f,c
 31799  0036A2  D001               	goto	i2u1045_48
 31800  0036A4                     i2u1044_40:
 31801  0036A4  6A1F               	clrf	??_InterruptTimerUART& (0+255),c
 31802  0036A6                     i2u1045_48:
 31803  0036A6  321F               	rrcf	??_InterruptTimerUART,f,c
 31804  0036A8  321F               	rrcf	??_InterruptTimerUART,f,c
 31805  0036AA  5080               	movf	3968,w,c	;volatile
 31806  0036AC  181F               	xorwf	??_InterruptTimerUART,w,c
 31807  0036AE  0B7F               	andlw	-129
 31808  0036B0  181F               	xorwf	??_InterruptTimerUART,w,c
 31809  0036B2  6E80               	movwf	3968,c	;volatile
 31810                           
 31811                           ;swUart.c: 122: switch(status)
 31812  0036B4  D05A               	goto	i2l1144
 31813  0036B6                     
 31814                           ;swUart.c: 125: if(countBitsSilent == ( 22 - 1 ) )
 31815  0036B6  0E15               	movlw	21
 31816  0036B8  184E               	xorwf	_countBitsSilent,w,c
 31817  0036BA  A4D8               	btfss	status,2,c
 31818  0036BC  D00E               	goto	i2l1146
 31819                           
 31820                           ;swUart.c: 126: {
 31821                           ;swUart.c: 127: TMR0_StopTimer();
 31822  0036BE  EC27  F031         	call	_TMR0_StopTimer	;wreg free
 31823                           
 31824                           ;swUart.c: 128: oled_clear();
 31825  0036C2  EC0A  F030         	call	i2_oled_clear	;wreg free
 31826                           
 31827                           ;swUart.c: 129: ReadyByteFrame(buffer_rx, countRX);
 31828  0036C6  0E00               	movlw	low _buffer_rx
 31829  0036C8  6E1C               	movwf	ReadyByteFrame@buffer_rx,c
 31830  0036CA  0E03               	movlw	high _buffer_rx
 31831  0036CC  6E1D               	movwf	ReadyByteFrame@buffer_rx+1,c
 31832  0036CE  C04F  F01E         	movff	_countRX,ReadyByteFrame@numBytes
 31833  0036D2  EC17  F030         	call	_ReadyByteFrame	;wreg free
 31834                           
 31835                           ;swUart.c: 132: countRX = 0;
 31836  0036D6  0E00               	movlw	0
 31837  0036D8  6E4F               	movwf	_countRX,c
 31838  0036DA                     i2l1146:
 31839                           
 31840                           ;swUart.c: 133: }
 31841                           ;swUart.c: 134: if(countBitsSilent < 22)
 31842  0036DA  0E16               	movlw	22
 31843  0036DC  604E               	cpfslt	_countBitsSilent,c
 31844  0036DE  D053               	goto	i2l1148
 31845                           
 31846                           ;swUart.c: 135: {
 31847                           ;swUart.c: 136: countBitsSilent ++;
 31848  0036E0  2A4E               	incf	_countBitsSilent,f,c
 31849                           
 31850                           ;swUart.c: 137: reloadTimer(110);
 31851  0036E2  0E6E               	movlw	110
 31852  0036E4  ECF4  F030         	call	_reloadTimer
 31853                           
 31854                           ;swUart.c: 138: }
 31855                           ;swUart.c: 139: break;
 31856  0036E8  D04E               	goto	i2l1148
 31857  0036EA                     
 31858                           ;swUart.c: 151: mask = 0x01 << n_bit;
 31859  0036EA  C05C  F01F         	movff	_n_bit,??_InterruptTimerUART
 31860  0036EE  0E01               	movlw	1
 31861  0036F0  6E20               	movwf	(??_InterruptTimerUART+1)& (0+255),c
 31862  0036F2  2A1F               	incf	??_InterruptTimerUART,f,c
 31863  0036F4  D002               	goto	i2u1048_44
 31864  0036F6                     i2u1048_45:
 31865  0036F6  90D8               	bcf	status,0,c
 31866  0036F8  3620               	rlcf	??_InterruptTimerUART+1,f,c
 31867  0036FA                     i2u1048_44:
 31868  0036FA  2E1F               	decfsz	??_InterruptTimerUART,f,c
 31869  0036FC  D7FC               	goto	i2u1048_45
 31870  0036FE  5020               	movf	??_InterruptTimerUART+1,w,c
 31871  003700  6E21               	movwf	InterruptTimerUART@mask,c
 31872                           
 31873                           ;swUart.c: 153: if( PORTBbits.RB7 == 1 )
 31874  003702  AE81               	btfss	3969,7,c	;volatile
 31875  003704  D005               	goto	i2l1150
 31876                           
 31877                           ;swUart.c: 154: {
 31878                           ;swUart.c: 155: rx_data |= mask;
 31879  003706  5021               	movf	InterruptTimerUART@mask,w,c
 31880  003708  1250               	iorwf	_rx_data,f,c
 31881                           
 31882                           ;swUart.c: 156: cs ++;
 31883  00370A  0101               	movlb	1	; () banked
 31884  00370C  2B5E               	incf	_cs& (0+255),f,b
 31885                           
 31886                           ;swUart.c: 157: }
 31887  00370E  D003               	goto	i2l1151
 31888  003710                     i2l1150:
 31889                           
 31890                           ;swUart.c: 158: else
 31891                           ;swUart.c: 159: {
 31892                           ;swUart.c: 161: rx_data &= ~mask;
 31893                           
 31894                           ; BSR set to: 1
 31895  003710  5021               	movf	InterruptTimerUART@mask,w,c
 31896  003712  0AFF               	xorlw	255
 31897  003714  1650               	andwf	_rx_data,f,c
 31898  003716                     i2l1151:
 31899                           
 31900                           ;swUart.c: 162: }
 31901                           ;swUart.c: 163: n_bit ++;
 31902  003716  2A5C               	incf	_n_bit,f,c
 31903                           
 31904                           ;swUart.c: 164: if( n_bit == 8 )
 31905  003718  0E08               	movlw	8
 31906  00371A  185C               	xorwf	_n_bit,w,c
 31907  00371C  A4D8               	btfss	status,2,c
 31908  00371E  D002               	goto	i2l1152
 31909                           
 31910                           ;swUart.c: 165: {
 31911                           ;swUart.c: 166: status = PARITY;
 31912  003720  0E02               	movlw	2
 31913  003722  6E51               	movwf	_status,c
 31914  003724                     i2l1152:
 31915                           
 31916                           ;swUart.c: 167: }
 31917                           ;swUart.c: 168: reloadTimer(110);
 31918  003724  0E6E               	movlw	110
 31919  003726  ECF4  F030         	call	_reloadTimer
 31920                           
 31921                           ;swUart.c: 169: break;
 31922  00372A  D02D               	goto	i2l1148
 31923  00372C                     i2l1153:
 31924                           
 31925                           ;swUart.c: 173: if( PORTBbits.RB7 == 0 )
 31926  00372C  5081               	movf	3969,w,c	;volatile
 31927                           
 31928                           ;swUart.c: 177: status = STOP_UA;
 31929                           
 31930                           ;swUart.c: 175: else
 31931                           ;swUart.c: 176: {}
 31932                           
 31933                           ;swUart.c: 174: {}
 31934  00372E  0E03               	movlw	3
 31935  003730  6E51               	movwf	_status,c
 31936                           
 31937                           ;swUart.c: 178: reloadTimer(110);
 31938  003732  0E6E               	movlw	110
 31939  003734  ECF4  F030         	call	_reloadTimer
 31940                           
 31941                           ;swUart.c: 179: break;
 31942  003738  D026               	goto	i2l1148
 31943  00373A                     
 31944                           ;swUart.c: 181: buffer_rx[countRX] = rx_data;
 31945  00373A  504F               	movf	_countRX,w,c
 31946  00373C  0D01               	mullw	1
 31947  00373E  0E00               	movlw	low _buffer_rx
 31948  003740  24F3               	addwf	prodl,w,c
 31949  003742  6ED9               	movwf	fsr2l,c
 31950  003744  0E03               	movlw	high _buffer_rx
 31951  003746  20F4               	addwfc	prodh,w,c
 31952  003748  6EDA               	movwf	fsr2h,c
 31953  00374A  C050  FFDF         	movff	_rx_data,indf2
 31954                           
 31955                           ;swUart.c: 182: countRX ++;
 31956  00374E  2A4F               	incf	_countRX,f,c
 31957                           
 31958                           ;swUart.c: 183: status = SILENT;
 31959  003750  0E00               	movlw	0
 31960  003752  6E51               	movwf	_status,c
 31961                           
 31962                           ;swUart.c: 184: reloadTimer(110);
 31963  003754  0E6E               	movlw	110
 31964  003756  ECF4  F030         	call	_reloadTimer
 31965                           
 31966                           ;swUart.c: 185: break;
 31967  00375A  D015               	goto	i2l1148
 31968  00375C                     
 31969                           ;swUart.c: 187: countRX = 0;
 31970  00375C  0E00               	movlw	0
 31971  00375E  6E4F               	movwf	_countRX,c
 31972                           
 31973                           ;swUart.c: 188: status = SILENT;
 31974  003760  0E00               	movlw	0
 31975  003762  6E51               	movwf	_status,c
 31976                           
 31977                           ;swUart.c: 189: countBitsSilent = 22;
 31978  003764  0E16               	movlw	22
 31979  003766  6E4E               	movwf	_countBitsSilent,c
 31980                           
 31981                           ;swUart.c: 191: }
 31982                           
 31983                           ;swUart.c: 190: break;
 31984  003768  D00E               	goto	i2l1148
 31985  00376A                     i2l1144:
 31986  00376A  5051               	movf	_status,w,c
 31987                           
 31988                           ; Switch size 1, requested type "space"
 31989                           ; Number of cases is 4, Range of values is 0 to 3
 31990                           ; switch strategies available:
 31991                           ; Name         Instructions Cycles
 31992                           ; simple_byte           13     7 (average)
 31993                           ;	Chosen strategy is simple_byte
 31994  00376C  0A00               	xorlw	0	; case 0
 31995  00376E  B4D8               	btfsc	status,2,c
 31996  003770  D7A2               	goto	i2l1145
 31997  003772  0A01               	xorlw	1	; case 1
 31998  003774  B4D8               	btfsc	status,2,c
 31999  003776  D7B9               	goto	i2l1149
 32000  003778  0A03               	xorlw	3	; case 2
 32001  00377A  B4D8               	btfsc	status,2,c
 32002  00377C  D7D7               	goto	i2l1153
 32003  00377E  0A01               	xorlw	1	; case 3
 32004  003780  B4D8               	btfsc	status,2,c
 32005  003782  D7DB               	goto	i2l1156
 32006  003784  D7EB               	goto	i2l1157
 32007  003786                     i2l1148:
 32008                           
 32009                           ;swUart.c: 192: clearInterruptTimerUART();
 32010  003786  EC18  F031         	call	_clearInterruptTimerUART	;wreg free
 32011  00378A  0012               	return		;funcret
 32012  00378C                     __end_of_InterruptTimerUART:
 32013                           	opt stack 0
 32014                           tosu	equ	0xFFF
 32015                           tosh	equ	0xFFE
 32016                           tosl	equ	0xFFD
 32017                           pclatu	equ	0xFFB
 32018                           pclath	equ	0xFFA
 32019                           tblptru	equ	0xFF8
 32020                           tblptrh	equ	0xFF7
 32021                           tblptrl	equ	0xFF6
 32022                           tablat	equ	0xFF5
 32023                           prodh	equ	0xFF4
 32024                           prodl	equ	0xFF3
 32025                           intcon	equ	0xFF2
 32026                           intcon2	equ	0xFF1
 32027                           intcon3	equ	0xFF0
 32028                           indf0	equ	0xFEF
 32029                           postinc0	equ	0xFEE
 32030                           fsr0h	equ	0xFEA
 32031                           fsr0l	equ	0xFE9
 32032                           wreg	equ	0xFE8
 32033                           indf1	equ	0xFE7
 32034                           postdec1	equ	0xFE5
 32035                           fsr1h	equ	0xFE2
 32036                           fsr1l	equ	0xFE1
 32037                           indf2	equ	0xFDF
 32038                           postinc2	equ	0xFDE
 32039                           postdec2	equ	0xFDD
 32040                           plusw2	equ	0xFDB
 32041                           fsr2h	equ	0xFDA
 32042                           fsr2l	equ	0xFD9
 32043                           status	equ	0xFD8
 32044                           
 32045 ;; *************** function i2_oled_clear *****************
 32046 ;; Defined at:
 32047 ;;		line 348 in file "../Includes/Drivers/SSD1306oLED.c"
 32048 ;; Parameters:    Size  Location     Type
 32049 ;;		None
 32050 ;; Auto vars:     Size  Location     Type
 32051 ;;		None
 32052 ;; Return value:  Size  Location     Type
 32053 ;;                  1    wreg      void 
 32054 ;; Registers used:
 32055 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32056 ;; Tracked objects:
 32057 ;;		On entry : 0/0
 32058 ;;		On exit  : 0/0
 32059 ;;		Unchanged: 0/0
 32060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32061 ;;      Params:         0       0       0       0       0       0       0       0       0
 32062 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32063 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32064 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32065 ;;Total ram usage:        0 bytes
 32066 ;; Hardware stack levels used:    1
 32067 ;; Hardware stack levels required when called:    4
 32068 ;; This function calls:
 32069 ;;		i2_oled_clearRow
 32070 ;; This function is called by:
 32071 ;;		_InterruptTimerUART
 32072 ;; This function uses a non-reentrant model
 32073 ;;
 32074                           
 32075                           	psect	text143
 32076  006014                     __ptext143:
 32077                           	opt stack 0
 32078  006014                     i2_oled_clear:
 32079                           	opt stack 15
 32080                           
 32081                           ;SSD1306oLED.c: 350: oled_clearRow(0);
 32082                           
 32083                           ;incstack = 0
 32084  006014  0E00               	movlw	0
 32085  006016  ECB5  F02F         	call	i2_oled_clearRow
 32086                           
 32087                           ;SSD1306oLED.c: 351: oled_clearRow(1);
 32088  00601A  0E01               	movlw	1
 32089  00601C  ECB5  F02F         	call	i2_oled_clearRow
 32090                           
 32091                           ;SSD1306oLED.c: 352: oled_clearRow(2);
 32092  006020  0E02               	movlw	2
 32093  006022  ECB5  F02F         	call	i2_oled_clearRow
 32094                           
 32095                           ;SSD1306oLED.c: 353: oled_clearRow(3);
 32096  006026  0E03               	movlw	3
 32097  006028  ECB5  F02F         	call	i2_oled_clearRow
 32098  00602C  0012               	return		;funcret
 32099  00602E                     __end_ofi2_oled_clear:
 32100                           	opt stack 0
 32101                           tosu	equ	0xFFF
 32102                           tosh	equ	0xFFE
 32103                           tosl	equ	0xFFD
 32104                           pclatu	equ	0xFFB
 32105                           pclath	equ	0xFFA
 32106                           tblptru	equ	0xFF8
 32107                           tblptrh	equ	0xFF7
 32108                           tblptrl	equ	0xFF6
 32109                           tablat	equ	0xFF5
 32110                           prodh	equ	0xFF4
 32111                           prodl	equ	0xFF3
 32112                           intcon	equ	0xFF2
 32113                           intcon2	equ	0xFF1
 32114                           intcon3	equ	0xFF0
 32115                           indf0	equ	0xFEF
 32116                           postinc0	equ	0xFEE
 32117                           fsr0h	equ	0xFEA
 32118                           fsr0l	equ	0xFE9
 32119                           wreg	equ	0xFE8
 32120                           indf1	equ	0xFE7
 32121                           postdec1	equ	0xFE5
 32122                           fsr1h	equ	0xFE2
 32123                           fsr1l	equ	0xFE1
 32124                           indf2	equ	0xFDF
 32125                           postinc2	equ	0xFDE
 32126                           postdec2	equ	0xFDD
 32127                           plusw2	equ	0xFDB
 32128                           fsr2h	equ	0xFDA
 32129                           fsr2l	equ	0xFD9
 32130                           status	equ	0xFD8
 32131                           
 32132 ;; *************** function i2_oled_clearRow *****************
 32133 ;; Defined at:
 32134 ;;		line 356 in file "../Includes/Drivers/SSD1306oLED.c"
 32135 ;; Parameters:    Size  Location     Type
 32136 ;;  page            1    wreg     unsigned char 
 32137 ;; Auto vars:     Size  Location     Type
 32138 ;;  page            1   12[COMRAM] unsigned char 
 32139 ;;  oled_clearRo    1   13[COMRAM] unsigned char 
 32140 ;; Return value:  Size  Location     Type
 32141 ;;                  1    wreg      void 
 32142 ;; Registers used:
 32143 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32144 ;; Tracked objects:
 32145 ;;		On entry : 0/0
 32146 ;;		On exit  : 0/0
 32147 ;;		Unchanged: 0/0
 32148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32149 ;;      Params:         0       0       0       0       0       0       0       0       0
 32150 ;;      Locals:         2       0       0       0       0       0       0       0       0
 32151 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32152 ;;      Totals:         2       0       0       0       0       0       0       0       0
 32153 ;;Total ram usage:        2 bytes
 32154 ;; Hardware stack levels used:    1
 32155 ;; Hardware stack levels required when called:    3
 32156 ;; This function calls:
 32157 ;;		i2_oled_putChar
 32158 ;; This function is called by:
 32159 ;;		i2_oled_clear
 32160 ;; This function uses a non-reentrant model
 32161 ;;
 32162                           
 32163                           	psect	text144
 32164  005F6A                     __ptext144:
 32165                           	opt stack 0
 32166  005F6A                     i2_oled_clearRow:
 32167                           	opt stack 15
 32168                           
 32169                           ;incstack = 0
 32170                           ;i2oled_clearRow@page stored from wreg
 32171  005F6A  6E0D               	movwf	i2oled_clearRow@page,c
 32172                           
 32173                           ;SSD1306oLED.c: 358: uint8_t index;
 32174                           ;SSD1306oLED.c: 360: for(index = 0; index < 16; index++)
 32175  005F6C  0E00               	movlw	0
 32176  005F6E  6E0E               	movwf	i2oled_clearRow@index,c
 32177  005F70                     i2l10291:
 32178  005F70  0E0F               	movlw	15
 32179  005F72  640E               	cpfsgt	i2oled_clearRow@index,c
 32180  005F74  D001               	goto	i2l1055
 32181  005F76  0012               	return	
 32182  005F78                     i2l1055:
 32183                           
 32184                           ;SSD1306oLED.c: 361: {
 32185                           ;SSD1306oLED.c: 362: oled_putChar( ' ', index, page);
 32186  005F78  C00E  F003         	movff	i2oled_clearRow@index,i2oled_putChar@station_dot
 32187  005F7C  C00D  F004         	movff	i2oled_clearRow@page,i2oled_putChar@start_page
 32188  005F80  0E20               	movlw	32
 32189  005F82  ECFD  F027         	call	i2_oled_putChar
 32190  005F86  2A0E               	incf	i2oled_clearRow@index,f,c
 32191  005F88  D7F3               	goto	i2l10291
 32192  005F8A                     __end_ofi2_oled_clearRow:
 32193                           	opt stack 0
 32194                           tosu	equ	0xFFF
 32195                           tosh	equ	0xFFE
 32196                           tosl	equ	0xFFD
 32197                           pclatu	equ	0xFFB
 32198                           pclath	equ	0xFFA
 32199                           tblptru	equ	0xFF8
 32200                           tblptrh	equ	0xFF7
 32201                           tblptrl	equ	0xFF6
 32202                           tablat	equ	0xFF5
 32203                           prodh	equ	0xFF4
 32204                           prodl	equ	0xFF3
 32205                           intcon	equ	0xFF2
 32206                           intcon2	equ	0xFF1
 32207                           intcon3	equ	0xFF0
 32208                           indf0	equ	0xFEF
 32209                           postinc0	equ	0xFEE
 32210                           fsr0h	equ	0xFEA
 32211                           fsr0l	equ	0xFE9
 32212                           wreg	equ	0xFE8
 32213                           indf1	equ	0xFE7
 32214                           postdec1	equ	0xFE5
 32215                           fsr1h	equ	0xFE2
 32216                           fsr1l	equ	0xFE1
 32217                           indf2	equ	0xFDF
 32218                           postinc2	equ	0xFDE
 32219                           postdec2	equ	0xFDD
 32220                           plusw2	equ	0xFDB
 32221                           fsr2h	equ	0xFDA
 32222                           fsr2l	equ	0xFD9
 32223                           status	equ	0xFD8
 32224                           
 32225 ;; *************** function _clearInterruptTimerUART *****************
 32226 ;; Defined at:
 32227 ;;		line 195 in file "../Includes/Drivers/swUart.c"
 32228 ;; Parameters:    Size  Location     Type
 32229 ;;		None
 32230 ;; Auto vars:     Size  Location     Type
 32231 ;;		None
 32232 ;; Return value:  Size  Location     Type
 32233 ;;                  1    wreg      void 
 32234 ;; Registers used:
 32235 ;;		cstack
 32236 ;; Tracked objects:
 32237 ;;		On entry : 0/0
 32238 ;;		On exit  : 0/0
 32239 ;;		Unchanged: 0/0
 32240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32241 ;;      Params:         0       0       0       0       0       0       0       0       0
 32242 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32243 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32244 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32245 ;;Total ram usage:        0 bytes
 32246 ;; Hardware stack levels used:    1
 32247 ;; Hardware stack levels required when called:    1
 32248 ;; This function calls:
 32249 ;;		_TMR0_Clear
 32250 ;; This function is called by:
 32251 ;;		_InterruptTimerUART
 32252 ;; This function uses a non-reentrant model
 32253 ;;
 32254                           
 32255                           	psect	text145
 32256  006230                     __ptext145:
 32257                           	opt stack 0
 32258  006230                     _clearInterruptTimerUART:
 32259                           	opt stack 18
 32260                           
 32261                           ;swUart.c: 197: TMR0_Clear();
 32262                           
 32263                           ;incstack = 0
 32264  006230  EC25  F031         	call	_TMR0_Clear	;wreg free
 32265  006234  0012               	return		;funcret
 32266  006236                     __end_of_clearInterruptTimerUART:
 32267                           	opt stack 0
 32268                           tosu	equ	0xFFF
 32269                           tosh	equ	0xFFE
 32270                           tosl	equ	0xFFD
 32271                           pclatu	equ	0xFFB
 32272                           pclath	equ	0xFFA
 32273                           tblptru	equ	0xFF8
 32274                           tblptrh	equ	0xFF7
 32275                           tblptrl	equ	0xFF6
 32276                           tablat	equ	0xFF5
 32277                           prodh	equ	0xFF4
 32278                           prodl	equ	0xFF3
 32279                           intcon	equ	0xFF2
 32280                           intcon2	equ	0xFF1
 32281                           intcon3	equ	0xFF0
 32282                           indf0	equ	0xFEF
 32283                           postinc0	equ	0xFEE
 32284                           fsr0h	equ	0xFEA
 32285                           fsr0l	equ	0xFE9
 32286                           wreg	equ	0xFE8
 32287                           indf1	equ	0xFE7
 32288                           postdec1	equ	0xFE5
 32289                           fsr1h	equ	0xFE2
 32290                           fsr1l	equ	0xFE1
 32291                           indf2	equ	0xFDF
 32292                           postinc2	equ	0xFDE
 32293                           postdec2	equ	0xFDD
 32294                           plusw2	equ	0xFDB
 32295                           fsr2h	equ	0xFDA
 32296                           fsr2l	equ	0xFD9
 32297                           status	equ	0xFD8
 32298                           
 32299 ;; *************** function _TMR0_Clear *****************
 32300 ;; Defined at:
 32301 ;;		line 142 in file "../Includes/MccGenerated/tmr0.c"
 32302 ;; Parameters:    Size  Location     Type
 32303 ;;		None
 32304 ;; Auto vars:     Size  Location     Type
 32305 ;;		None
 32306 ;; Return value:  Size  Location     Type
 32307 ;;                  1    wreg      void 
 32308 ;; Registers used:
 32309 ;;		None
 32310 ;; Tracked objects:
 32311 ;;		On entry : 0/0
 32312 ;;		On exit  : 0/0
 32313 ;;		Unchanged: 0/0
 32314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32315 ;;      Params:         0       0       0       0       0       0       0       0       0
 32316 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32317 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32318 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32319 ;;Total ram usage:        0 bytes
 32320 ;; Hardware stack levels used:    1
 32321 ;; This function calls:
 32322 ;;		Nothing
 32323 ;; This function is called by:
 32324 ;;		_clearInterruptTimerUART
 32325 ;; This function uses a non-reentrant model
 32326 ;;
 32327                           
 32328                           	psect	text146
 32329  00624A                     __ptext146:
 32330                           	opt stack 0
 32331  00624A                     _TMR0_Clear:
 32332                           	opt stack 18
 32333                           
 32334                           ;tmr0.c: 145: INTCONbits.TMR0IF = 0;
 32335                           
 32336                           ;incstack = 0
 32337  00624A  94F2               	bcf	intcon,2,c	;volatile
 32338  00624C  0012               	return		;funcret
 32339  00624E                     __end_of_TMR0_Clear:
 32340                           	opt stack 0
 32341                           tosu	equ	0xFFF
 32342                           tosh	equ	0xFFE
 32343                           tosl	equ	0xFFD
 32344                           pclatu	equ	0xFFB
 32345                           pclath	equ	0xFFA
 32346                           tblptru	equ	0xFF8
 32347                           tblptrh	equ	0xFF7
 32348                           tblptrl	equ	0xFF6
 32349                           tablat	equ	0xFF5
 32350                           prodh	equ	0xFF4
 32351                           prodl	equ	0xFF3
 32352                           intcon	equ	0xFF2
 32353                           intcon2	equ	0xFF1
 32354                           intcon3	equ	0xFF0
 32355                           indf0	equ	0xFEF
 32356                           postinc0	equ	0xFEE
 32357                           fsr0h	equ	0xFEA
 32358                           fsr0l	equ	0xFE9
 32359                           wreg	equ	0xFE8
 32360                           indf1	equ	0xFE7
 32361                           postdec1	equ	0xFE5
 32362                           fsr1h	equ	0xFE2
 32363                           fsr1l	equ	0xFE1
 32364                           indf2	equ	0xFDF
 32365                           postinc2	equ	0xFDE
 32366                           postdec2	equ	0xFDD
 32367                           plusw2	equ	0xFDB
 32368                           fsr2h	equ	0xFDA
 32369                           fsr2l	equ	0xFD9
 32370                           status	equ	0xFD8
 32371                           
 32372 ;; *************** function _TMR0_StopTimer *****************
 32373 ;; Defined at:
 32374 ;;		line 95 in file "../Includes/MccGenerated/tmr0.c"
 32375 ;; Parameters:    Size  Location     Type
 32376 ;;		None
 32377 ;; Auto vars:     Size  Location     Type
 32378 ;;		None
 32379 ;; Return value:  Size  Location     Type
 32380 ;;                  1    wreg      void 
 32381 ;; Registers used:
 32382 ;;		None
 32383 ;; Tracked objects:
 32384 ;;		On entry : 0/0
 32385 ;;		On exit  : 0/0
 32386 ;;		Unchanged: 0/0
 32387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32388 ;;      Params:         0       0       0       0       0       0       0       0       0
 32389 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32390 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32391 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32392 ;;Total ram usage:        0 bytes
 32393 ;; Hardware stack levels used:    1
 32394 ;; This function calls:
 32395 ;;		Nothing
 32396 ;; This function is called by:
 32397 ;;		_InterruptTimerUART
 32398 ;; This function uses a non-reentrant model
 32399 ;;
 32400                           
 32401                           	psect	text147
 32402  00624E                     __ptext147:
 32403                           	opt stack 0
 32404  00624E                     _TMR0_StopTimer:
 32405                           	opt stack 19
 32406                           
 32407                           ;tmr0.c: 98: T0CONbits.TMR0ON = 0;
 32408                           
 32409                           ;incstack = 0
 32410  00624E  9ED5               	bcf	4053,7,c	;volatile
 32411  006250  0012               	return		;funcret
 32412  006252                     __end_of_TMR0_StopTimer:
 32413                           	opt stack 0
 32414                           tosu	equ	0xFFF
 32415                           tosh	equ	0xFFE
 32416                           tosl	equ	0xFFD
 32417                           pclatu	equ	0xFFB
 32418                           pclath	equ	0xFFA
 32419                           tblptru	equ	0xFF8
 32420                           tblptrh	equ	0xFF7
 32421                           tblptrl	equ	0xFF6
 32422                           tablat	equ	0xFF5
 32423                           prodh	equ	0xFF4
 32424                           prodl	equ	0xFF3
 32425                           intcon	equ	0xFF2
 32426                           intcon2	equ	0xFF1
 32427                           intcon3	equ	0xFF0
 32428                           indf0	equ	0xFEF
 32429                           postinc0	equ	0xFEE
 32430                           fsr0h	equ	0xFEA
 32431                           fsr0l	equ	0xFE9
 32432                           wreg	equ	0xFE8
 32433                           indf1	equ	0xFE7
 32434                           postdec1	equ	0xFE5
 32435                           fsr1h	equ	0xFE2
 32436                           fsr1l	equ	0xFE1
 32437                           indf2	equ	0xFDF
 32438                           postinc2	equ	0xFDE
 32439                           postdec2	equ	0xFDD
 32440                           plusw2	equ	0xFDB
 32441                           fsr2h	equ	0xFDA
 32442                           fsr2l	equ	0xFD9
 32443                           status	equ	0xFD8
 32444                           
 32445 ;; *************** function _ReadyByteFrame *****************
 32446 ;; Defined at:
 32447 ;;		line 1461 in file "../Includes/Board/MOTEapp.c"
 32448 ;; Parameters:    Size  Location     Type
 32449 ;;  buffer_rx       2   27[COMRAM] PTR char 
 32450 ;;		 -> buffer_rx(128), 
 32451 ;;  numBytes        1   29[COMRAM] unsigned char 
 32452 ;; Auto vars:     Size  Location     Type
 32453 ;;		None
 32454 ;; Return value:  Size  Location     Type
 32455 ;;                  1    wreg      void 
 32456 ;; Registers used:
 32457 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32458 ;; Tracked objects:
 32459 ;;		On entry : 0/0
 32460 ;;		On exit  : 0/0
 32461 ;;		Unchanged: 0/0
 32462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32463 ;;      Params:         3       0       0       0       0       0       0       0       0
 32464 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32465 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32466 ;;      Totals:         3       0       0       0       0       0       0       0       0
 32467 ;;Total ram usage:        3 bytes
 32468 ;; Hardware stack levels used:    1
 32469 ;; Hardware stack levels required when called:    5
 32470 ;; This function calls:
 32471 ;;		i2_oled_putUint8
 32472 ;; This function is called by:
 32473 ;;		_InterruptTimerUART
 32474 ;; This function uses a non-reentrant model
 32475 ;;
 32476                           
 32477                           	psect	text148
 32478  00602E                     __ptext148:
 32479                           	opt stack 0
 32480  00602E                     _ReadyByteFrame:
 32481                           	opt stack 14
 32482                           
 32483                           ;MOTEapp.c: 1463: oled_putUint8(buffer_rx[0],10,1);
 32484                           
 32485                           ;incstack = 0
 32486  00602E  0E0A               	movlw	10
 32487  006030  6E13               	movwf	i2oled_putUint8@station_dot,c
 32488  006032  0E01               	movlw	1
 32489  006034  6E14               	movwf	i2oled_putUint8@start_page,c
 32490  006036  C01C  FFD9         	movff	ReadyByteFrame@buffer_rx,fsr2l
 32491  00603A  C01D  FFDA         	movff	ReadyByteFrame@buffer_rx+1,fsr2h
 32492  00603E  50DF               	movf	indf2,w,c
 32493  006040  EC34  F026         	call	i2_oled_putUint8
 32494  006044  0012               	return		;funcret
 32495  006046                     __end_of_ReadyByteFrame:
 32496                           	opt stack 0
 32497                           tosu	equ	0xFFF
 32498                           tosh	equ	0xFFE
 32499                           tosl	equ	0xFFD
 32500                           pclatu	equ	0xFFB
 32501                           pclath	equ	0xFFA
 32502                           tblptru	equ	0xFF8
 32503                           tblptrh	equ	0xFF7
 32504                           tblptrl	equ	0xFF6
 32505                           tablat	equ	0xFF5
 32506                           prodh	equ	0xFF4
 32507                           prodl	equ	0xFF3
 32508                           intcon	equ	0xFF2
 32509                           intcon2	equ	0xFF1
 32510                           intcon3	equ	0xFF0
 32511                           indf0	equ	0xFEF
 32512                           postinc0	equ	0xFEE
 32513                           fsr0h	equ	0xFEA
 32514                           fsr0l	equ	0xFE9
 32515                           wreg	equ	0xFE8
 32516                           indf1	equ	0xFE7
 32517                           postdec1	equ	0xFE5
 32518                           fsr1h	equ	0xFE2
 32519                           fsr1l	equ	0xFE1
 32520                           indf2	equ	0xFDF
 32521                           postinc2	equ	0xFDE
 32522                           postdec2	equ	0xFDD
 32523                           plusw2	equ	0xFDB
 32524                           fsr2h	equ	0xFDA
 32525                           fsr2l	equ	0xFD9
 32526                           status	equ	0xFD8
 32527                           
 32528 ;; *************** function i2_oled_putUint8 *****************
 32529 ;; Defined at:
 32530 ;;		line 264 in file "../Includes/Drivers/SSD1306oLED.c"
 32531 ;; Parameters:    Size  Location     Type
 32532 ;;  number          1    wreg     unsigned char 
 32533 ;;  station_dot     1   18[COMRAM] unsigned char 
 32534 ;;  start_page      1   19[COMRAM] unsigned char 
 32535 ;; Auto vars:     Size  Location     Type
 32536 ;;  number          1   26[COMRAM] unsigned char 
 32537 ;;  oled_putUint    6   20[COMRAM] struct .
 32538 ;; Return value:  Size  Location     Type
 32539 ;;                  1    wreg      void 
 32540 ;; Registers used:
 32541 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32542 ;; Tracked objects:
 32543 ;;		On entry : 0/0
 32544 ;;		On exit  : 0/0
 32545 ;;		Unchanged: 0/0
 32546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32547 ;;      Params:         2       0       0       0       0       0       0       0       0
 32548 ;;      Locals:         7       0       0       0       0       0       0       0       0
 32549 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32550 ;;      Totals:         9       0       0       0       0       0       0       0       0
 32551 ;;Total ram usage:        9 bytes
 32552 ;; Hardware stack levels used:    1
 32553 ;; Hardware stack levels required when called:    4
 32554 ;; This function calls:
 32555 ;;		i2___awmod
 32556 ;;		i2___lbdiv
 32557 ;;		i2_oled_putString
 32558 ;; This function is called by:
 32559 ;;		_ReadyByteFrame
 32560 ;; This function uses a non-reentrant model
 32561 ;;
 32562                           
 32563                           	psect	text149
 32564  004C68                     __ptext149:
 32565                           	opt stack 0
 32566  004C68                     i2_oled_putUint8:
 32567                           	opt stack 14
 32568                           
 32569                           ;incstack = 0
 32570                           ;i2oled_putUint8@number stored from wreg
 32571  004C68  6E1B               	movwf	i2oled_putUint8@number,c
 32572                           
 32573                           ;SSD1306oLED.c: 266: display_data_t numData;
 32574                           ;SSD1306oLED.c: 267: numData.d2 = '0' + (number % 10);
 32575  004C6A  C01B  F001         	movff	i2oled_putUint8@number,i2___awmod@dividend
 32576  004C6E  6A02               	clrf	i2___awmod@dividend+1,c
 32577  004C70  0E00               	movlw	0
 32578  004C72  6E04               	movwf	i2___awmod@divisor+1,c
 32579  004C74  0E0A               	movlw	10
 32580  004C76  6E03               	movwf	i2___awmod@divisor,c
 32581  004C78  EC5B  F029         	call	i2___awmod	;wreg free
 32582  004C7C  5001               	movf	?i2___awmod,w,c
 32583  004C7E  0F30               	addlw	48
 32584  004C80  6E17               	movwf	i2oled_putUint8@numData+2,c
 32585                           
 32586                           ;SSD1306oLED.c: 268: number /= 10;
 32587  004C82  0E0A               	movlw	10
 32588  004C84  6E01               	movwf	i2___lbdiv@divisor,c
 32589  004C86  501B               	movf	i2oled_putUint8@number,w,c
 32590  004C88  EC6B  F02D         	call	i2___lbdiv
 32591  004C8C  6E1B               	movwf	i2oled_putUint8@number,c
 32592                           
 32593                           ;SSD1306oLED.c: 269: numData.d1 = '0' + (number % 10);
 32594  004C8E  C01B  F001         	movff	i2oled_putUint8@number,i2___awmod@dividend
 32595  004C92  6A02               	clrf	i2___awmod@dividend+1,c
 32596  004C94  0E00               	movlw	0
 32597  004C96  6E04               	movwf	i2___awmod@divisor+1,c
 32598  004C98  0E0A               	movlw	10
 32599  004C9A  6E03               	movwf	i2___awmod@divisor,c
 32600  004C9C  EC5B  F029         	call	i2___awmod	;wreg free
 32601  004CA0  5001               	movf	?i2___awmod,w,c
 32602  004CA2  0F30               	addlw	48
 32603  004CA4  6E16               	movwf	i2oled_putUint8@numData+1,c
 32604                           
 32605                           ;SSD1306oLED.c: 270: number /= 10;
 32606  004CA6  0E0A               	movlw	10
 32607  004CA8  6E01               	movwf	i2___lbdiv@divisor,c
 32608  004CAA  501B               	movf	i2oled_putUint8@number,w,c
 32609  004CAC  EC6B  F02D         	call	i2___lbdiv
 32610  004CB0  6E1B               	movwf	i2oled_putUint8@number,c
 32611                           
 32612                           ;SSD1306oLED.c: 271: numData.d0 = '0' + (number % 10);
 32613  004CB2  C01B  F001         	movff	i2oled_putUint8@number,i2___awmod@dividend
 32614  004CB6  6A02               	clrf	i2___awmod@dividend+1,c
 32615  004CB8  0E00               	movlw	0
 32616  004CBA  6E04               	movwf	i2___awmod@divisor+1,c
 32617  004CBC  0E0A               	movlw	10
 32618  004CBE  6E03               	movwf	i2___awmod@divisor,c
 32619  004CC0  EC5B  F029         	call	i2___awmod	;wreg free
 32620  004CC4  5001               	movf	?i2___awmod,w,c
 32621  004CC6  0F30               	addlw	48
 32622  004CC8  6E15               	movwf	i2oled_putUint8@numData,c
 32623                           
 32624                           ;SSD1306oLED.c: 273: numData.b[3]=0;
 32625  004CCA  0E00               	movlw	0
 32626  004CCC  6E18               	movwf	i2oled_putUint8@numData+3,c
 32627                           
 32628                           ;SSD1306oLED.c: 275: oled_putString(numData.b,station_dot,start_page);
 32629  004CCE  0E15               	movlw	low i2oled_putUint8@numData
 32630  004CD0  6E0D               	movwf	i2oled_putString@string,c
 32631  004CD2  0E00               	movlw	high i2oled_putUint8@numData
 32632  004CD4  6E0E               	movwf	i2oled_putString@string+1,c
 32633  004CD6  500D               	movf	i2oled_putString@string,w,c
 32634  004CD8  100E               	iorwf	i2oled_putString@string+1,w,c
 32635  004CDA  A4D8               	btfss	status,2,c
 32636  004CDC  0E20               	movlw	32
 32637  004CDE  6E0F               	movwf	i2oled_putString@string+2,c
 32638  004CE0  C013  F010         	movff	i2oled_putUint8@station_dot,i2oled_putString@station_dot
 32639  004CE4  C014  F011         	movff	i2oled_putUint8@start_page,i2oled_putString@start_page
 32640  004CE8  ECCA  F029         	call	i2_oled_putString	;wreg free
 32641  004CEC  0012               	return		;funcret
 32642  004CEE                     __end_ofi2_oled_putUint8:
 32643                           	opt stack 0
 32644                           tosu	equ	0xFFF
 32645                           tosh	equ	0xFFE
 32646                           tosl	equ	0xFFD
 32647                           pclatu	equ	0xFFB
 32648                           pclath	equ	0xFFA
 32649                           tblptru	equ	0xFF8
 32650                           tblptrh	equ	0xFF7
 32651                           tblptrl	equ	0xFF6
 32652                           tablat	equ	0xFF5
 32653                           prodh	equ	0xFF4
 32654                           prodl	equ	0xFF3
 32655                           intcon	equ	0xFF2
 32656                           intcon2	equ	0xFF1
 32657                           intcon3	equ	0xFF0
 32658                           indf0	equ	0xFEF
 32659                           postinc0	equ	0xFEE
 32660                           fsr0h	equ	0xFEA
 32661                           fsr0l	equ	0xFE9
 32662                           wreg	equ	0xFE8
 32663                           indf1	equ	0xFE7
 32664                           postdec1	equ	0xFE5
 32665                           fsr1h	equ	0xFE2
 32666                           fsr1l	equ	0xFE1
 32667                           indf2	equ	0xFDF
 32668                           postinc2	equ	0xFDE
 32669                           postdec2	equ	0xFDD
 32670                           plusw2	equ	0xFDB
 32671                           fsr2h	equ	0xFDA
 32672                           fsr2l	equ	0xFD9
 32673                           status	equ	0xFD8
 32674                           
 32675 ;; *************** function i2_oled_putString *****************
 32676 ;; Defined at:
 32677 ;;		line 331 in file "../Includes/Drivers/SSD1306oLED.c"
 32678 ;; Parameters:    Size  Location     Type
 32679 ;;  string          3   12[COMRAM] PTR const unsigned char 
 32680 ;;		 -> oled_putUint16@numData(6), oled_putint8@numData(6), oled_putUint8@numData(6), ROM(32767), 
 32681 ;;		 -> STR_189(12), STR_188(8), STR_187(9), storedLight(5), 
 32682 ;;		 -> STR_182(5), STR_181(8), STR_180(8), STR_179(9), 
 32683 ;;		 -> STR_162(16), STR_161(17), STR_160(17), STR_159(4), 
 32684 ;;		 -> STR_158(4), STR_157(4), STR_156(4), STR_155(4), 
 32685 ;;		 -> STR_154(4), STR_153(4), STR_152(16), STR_151(17), 
 32686 ;;		 -> STR_150(4), STR_149(4), STR_148(4), STR_147(4), 
 32687 ;;		 -> STR_146(4), STR_145(4), STR_144(4), STR_143(4), 
 32688 ;;		 -> STR_142(4), STR_141(4), STR_140(4), STR_139(4), 
 32689 ;;		 -> STR_138(4), STR_137(16), STR_136(12), STR_135(17), 
 32690 ;;		 -> STR_134(16), STR_133(16), STR_132(16), STR_131(15), 
 32691 ;;		 -> STR_130(15), STR_129(16), STR_128(4), STR_127(3), 
 32692 ;;		 -> STR_126(3), STR_125(3), STR_124(3), STR_123(2), 
 32693 ;;		 -> STR_122(5), STR_121(7), STR_120(17), STR_119(17), 
 32694 ;;		 -> STR_118(2), STR_117(7), STR_116(7), STR_115(16), 
 32695 ;;		 -> STR_114(16), STR_113(15), STR_112(15), STR_111(17), 
 32696 ;;		 -> STR_110(16), STR_109(17), STR_108(17), STR_107(7), 
 32697 ;;		 -> STR_106(10), STR_105(17), STR_104(16), STR_103(16), 
 32698 ;;		 -> STR_102(16), STR_101(16), STR_100(17), STR_99(17), 
 32699 ;;		 -> STR_98(16), STR_96(19), STR_94(17), STR_92(17), 
 32700 ;;		 -> STR_91(17), responseData(32), responsePortNum(3), STR_88(13), 
 32701 ;;		 -> STR_87(12), STR_86(12), STR_83(18), STR_82(13), 
 32702 ;;		 -> STR_81(17), STR_80(16), STR_79(17), STR_78(17), 
 32703 ;;		 -> STR_77(16), STR_76(17), STR_75(17), STR_73(13), 
 32704 ;;		 -> STR_72(12), STR_71(17), STR_65(7), STR_64(10), 
 32705 ;;		 -> STR_62(11), STR_61(11), STR_56(9), STR_55(11), 
 32706 ;;		 -> STR_51(11), STR_50(10), STR_47(9), STR_46(11), 
 32707 ;;		 -> STR_42(17), STR_40(17), STR_38(17), STR_37(17), 
 32708 ;;		 -> STR_36(17), STR_34(17), STR_33(17), STR_32(17), 
 32709 ;;		 -> moduleResonseBuffer(64), STR_29(17), STR_28(17), STR_27(17), 
 32710 ;;		 -> STR_26(17), STR_25(9), STR_24(10), STR_23(5), 
 32711 ;;		 -> STR_20(9), STR_19(8), STR_18(8), STR_17(9), 
 32712 ;;		 -> STR_16(10), STR_15(11), STR_14(13), STR_13(13), 
 32713 ;;		 -> STR_12(13), STR_11(12), STR_10(13), STR_9(9), 
 32714 ;;		 -> STR_8(12), STR_7(16), STR_6(2), STR_5(2), 
 32715 ;;		 -> STR_4(9), STR_3(15), STR_2(15), STR_1(15), 
 32716 ;;  station_dot     1   15[COMRAM] unsigned char 
 32717 ;;  start_page      1   16[COMRAM] unsigned char 
 32718 ;; Auto vars:     Size  Location     Type
 32719 ;;  oled_putStri    1   17[COMRAM] unsigned char 
 32720 ;; Return value:  Size  Location     Type
 32721 ;;                  1    wreg      void 
 32722 ;; Registers used:
 32723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32724 ;; Tracked objects:
 32725 ;;		On entry : 0/0
 32726 ;;		On exit  : 0/0
 32727 ;;		Unchanged: 0/0
 32728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32729 ;;      Params:         5       0       0       0       0       0       0       0       0
 32730 ;;      Locals:         1       0       0       0       0       0       0       0       0
 32731 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32732 ;;      Totals:         6       0       0       0       0       0       0       0       0
 32733 ;;Total ram usage:        6 bytes
 32734 ;; Hardware stack levels used:    1
 32735 ;; Hardware stack levels required when called:    3
 32736 ;; This function calls:
 32737 ;;		i2_oled_putChar
 32738 ;; This function is called by:
 32739 ;;		i2_oled_putUint8
 32740 ;; This function uses a non-reentrant model
 32741 ;;
 32742                           
 32743                           	psect	text150
 32744  005394                     __ptext150:
 32745                           	opt stack 0
 32746  005394                     i2_oled_putString:
 32747                           	opt stack 14
 32748                           
 32749                           ;SSD1306oLED.c: 333: uint8_t index;
 32750                           ;SSD1306oLED.c: 334: for(index = station_dot; index < 16; index++)
 32751                           
 32752                           ;incstack = 0
 32753  005394  C010  F012         	movff	i2oled_putString@station_dot,i2oled_putString@index
 32754  005398                     i2l9501:
 32755  005398  0E0F               	movlw	15
 32756  00539A  6412               	cpfsgt	i2oled_putString@index,c
 32757  00539C  D001               	goto	i2l1045
 32758  00539E  0012               	return	
 32759  0053A0                     i2l1045:
 32760                           
 32761                           ;SSD1306oLED.c: 335: {
 32762                           ;SSD1306oLED.c: 336: if (*string != 0)
 32763  0053A0  C00D  FFF6         	movff	i2oled_putString@string,tblptrl
 32764  0053A4  C00E  FFF7         	movff	i2oled_putString@string+1,tblptrh
 32765  0053A8  C00F  FFF8         	movff	i2oled_putString@string+2,tblptru
 32766  0053AC  BAF8               	btfsc	tblptru,5,c
 32767  0053AE  D003               	bra	i2u795_47
 32768  0053B0  0008               	tblrd		*
 32769  0053B2  50F5               	movf	tablat,w,c
 32770  0053B4  D005               	bra	i2u795_40
 32771  0053B6                     i2u795_47:
 32772  0053B6  CFF6 FFE9          	movff	tblptrl,fsr0l
 32773  0053BA  CFF7 FFEA          	movff	tblptrh,fsr0h
 32774  0053BE  50EF               	movf	indf0,w,c
 32775  0053C0                     i2u795_40:
 32776  0053C0  0900               	iorlw	0
 32777  0053C2  B4D8               	btfsc	status,2,c
 32778  0053C4  0012               	return	
 32779                           
 32780                           ;SSD1306oLED.c: 337: {
 32781                           ;SSD1306oLED.c: 338: oled_putChar(*string, index, start_page);
 32782  0053C6  C012  F003         	movff	i2oled_putString@index,i2oled_putChar@station_dot
 32783  0053CA  C011  F004         	movff	i2oled_putString@start_page,i2oled_putChar@start_page
 32784  0053CE  C00D  FFF6         	movff	i2oled_putString@string,tblptrl
 32785  0053D2  C00E  FFF7         	movff	i2oled_putString@string+1,tblptrh
 32786  0053D6  C00F  FFF8         	movff	i2oled_putString@string+2,tblptru
 32787  0053DA  BAF8               	btfsc	tblptru,5,c
 32788  0053DC  D003               	bra	i2u797_47
 32789  0053DE  0008               	tblrd		*
 32790  0053E0  50F5               	movf	tablat,w,c
 32791  0053E2  D005               	bra	i2u797_40
 32792  0053E4                     i2u797_47:
 32793  0053E4  CFF6 FFE9          	movff	tblptrl,fsr0l
 32794  0053E8  CFF7 FFEA          	movff	tblptrh,fsr0h
 32795  0053EC  50EF               	movf	indf0,w,c
 32796  0053EE                     i2u797_40:
 32797  0053EE  ECFD  F027         	call	i2_oled_putChar
 32798                           
 32799                           ;SSD1306oLED.c: 339: *string++;
 32800  0053F2  0E01               	movlw	1
 32801  0053F4  260D               	addwf	i2oled_putString@string,f,c
 32802  0053F6  0E00               	movlw	0
 32803  0053F8  220E               	addwfc	i2oled_putString@string+1,f,c
 32804  0053FA  0E00               	movlw	0
 32805  0053FC  220F               	addwfc	i2oled_putString@string+2,f,c
 32806                           
 32807                           ;SSD1306oLED.c: 341: else
 32808                           ;SSD1306oLED.c: 342: {
 32809                           ;SSD1306oLED.c: 343: break;
 32810                           
 32811                           ;SSD1306oLED.c: 340: }
 32812  0053FE  2A12               	incf	i2oled_putString@index,f,c
 32813  005400  D7CB               	goto	i2l9501
 32814  005402                     __end_ofi2_oled_putString:
 32815                           	opt stack 0
 32816                           tosu	equ	0xFFF
 32817                           tosh	equ	0xFFE
 32818                           tosl	equ	0xFFD
 32819                           pclatu	equ	0xFFB
 32820                           pclath	equ	0xFFA
 32821                           tblptru	equ	0xFF8
 32822                           tblptrh	equ	0xFF7
 32823                           tblptrl	equ	0xFF6
 32824                           tablat	equ	0xFF5
 32825                           prodh	equ	0xFF4
 32826                           prodl	equ	0xFF3
 32827                           intcon	equ	0xFF2
 32828                           intcon2	equ	0xFF1
 32829                           intcon3	equ	0xFF0
 32830                           indf0	equ	0xFEF
 32831                           postinc0	equ	0xFEE
 32832                           fsr0h	equ	0xFEA
 32833                           fsr0l	equ	0xFE9
 32834                           wreg	equ	0xFE8
 32835                           indf1	equ	0xFE7
 32836                           postdec1	equ	0xFE5
 32837                           fsr1h	equ	0xFE2
 32838                           fsr1l	equ	0xFE1
 32839                           indf2	equ	0xFDF
 32840                           postinc2	equ	0xFDE
 32841                           postdec2	equ	0xFDD
 32842                           plusw2	equ	0xFDB
 32843                           fsr2h	equ	0xFDA
 32844                           fsr2l	equ	0xFD9
 32845                           status	equ	0xFD8
 32846                           
 32847 ;; *************** function i2_oled_putChar *****************
 32848 ;; Defined at:
 32849 ;;		line 318 in file "../Includes/Drivers/SSD1306oLED.c"
 32850 ;; Parameters:    Size  Location     Type
 32851 ;;  k               1    wreg     unsigned char 
 32852 ;;  station_dot     1    2[COMRAM] unsigned char 
 32853 ;;  start_page      1    3[COMRAM] unsigned char 
 32854 ;; Auto vars:     Size  Location     Type
 32855 ;;  k               1   10[COMRAM] unsigned char 
 32856 ;;  oled_putChar    1   11[COMRAM] unsigned char 
 32857 ;; Return value:  Size  Location     Type
 32858 ;;                  1    wreg      void 
 32859 ;; Registers used:
 32860 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32861 ;; Tracked objects:
 32862 ;;		On entry : 0/0
 32863 ;;		On exit  : 0/0
 32864 ;;		Unchanged: 0/0
 32865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32866 ;;      Params:         2       0       0       0       0       0       0       0       0
 32867 ;;      Locals:         2       0       0       0       0       0       0       0       0
 32868 ;;      Temps:          6       0       0       0       0       0       0       0       0
 32869 ;;      Totals:        10       0       0       0       0       0       0       0       0
 32870 ;;Total ram usage:       10 bytes
 32871 ;; Hardware stack levels used:    1
 32872 ;; Hardware stack levels required when called:    2
 32873 ;; This function calls:
 32874 ;;		i2_Set_Column_Address
 32875 ;;		i2_Set_Page_Address
 32876 ;;		i2_oled_writeData
 32877 ;; This function is called by:
 32878 ;;		i2_oled_putString
 32879 ;;		i2_oled_clearRow
 32880 ;; This function uses a non-reentrant model
 32881 ;;
 32882                           
 32883                           	psect	text151
 32884  004FFA                     __ptext151:
 32885                           	opt stack 0
 32886  004FFA                     i2_oled_putChar:
 32887                           	opt stack 15
 32888                           
 32889                           ;incstack = 0
 32890                           ;i2oled_putChar@k stored from wreg
 32891  004FFA  6E0B               	movwf	i2oled_putChar@k,c
 32892                           
 32893                           ;SSD1306oLED.c: 320: uint8_t index;
 32894                           ;SSD1306oLED.c: 322: Set_Page_Address(start_page);
 32895  004FFC  5004               	movf	i2oled_putChar@start_page,w,c
 32896  004FFE  ECBF  F030         	call	i2_Set_Page_Address
 32897                           
 32898                           ;SSD1306oLED.c: 323: Set_Column_Address(0x00 + station_dot * 8 + 4);
 32899  005002  5003               	movf	i2oled_putChar@station_dot,w,c
 32900  005004  0D08               	mullw	8
 32901  005006  50F3               	movf	prodl,w,c
 32902  005008  0F04               	addlw	4
 32903  00500A  EC4F  F030         	call	i2_Set_Column_Address
 32904                           
 32905                           ;SSD1306oLED.c: 325: for(index = 0; index < 8; index++)
 32906  00500E  0E00               	movlw	0
 32907  005010  6E0C               	movwf	i2oled_putChar@index,c
 32908  005012                     i2l8559:
 32909  005012  0E07               	movlw	7
 32910  005014  640C               	cpfsgt	i2oled_putChar@index,c
 32911  005016  D001               	goto	i2l1040
 32912  005018  0012               	return	
 32913  00501A                     i2l1040:
 32914                           
 32915                           ;SSD1306oLED.c: 326: {
 32916                           ;SSD1306oLED.c: 327: oled_writeData(*(selectedFont + 8 * (k - 0x20) + index));
 32917  00501A  500C               	movf	i2oled_putChar@index,w,c
 32918  00501C  0D01               	mullw	1
 32919  00501E  0E00               	movlw	0
 32920  005020  6E05               	movwf	??i2_oled_putChar& (0+255),c
 32921  005022  0EFF               	movlw	255
 32922  005024  6E06               	movwf	(??i2_oled_putChar+1)& (0+255),c
 32923  005026  500B               	movf	i2oled_putChar@k,w,c
 32924  005028  6E07               	movwf	(??i2_oled_putChar+2)& (0+255),c
 32925  00502A  6A08               	clrf	(??i2_oled_putChar+3)& (0+255),c
 32926  00502C  90D8               	bcf	status,0,c
 32927  00502E  3607               	rlcf	??i2_oled_putChar+2,f,c
 32928  005030  3608               	rlcf	??i2_oled_putChar+3,f,c
 32929  005032  90D8               	bcf	status,0,c
 32930  005034  3607               	rlcf	??i2_oled_putChar+2,f,c
 32931  005036  3608               	rlcf	??i2_oled_putChar+3,f,c
 32932  005038  90D8               	bcf	status,0,c
 32933  00503A  3607               	rlcf	??i2_oled_putChar+2,f,c
 32934  00503C  3608               	rlcf	??i2_oled_putChar+3,f,c
 32935  00503E  5005               	movf	??i2_oled_putChar,w,c
 32936  005040  2607               	addwf	??i2_oled_putChar+2,f,c
 32937  005042  5006               	movf	??i2_oled_putChar+1,w,c
 32938  005044  2208               	addwfc	??i2_oled_putChar+3,f,c
 32939  005046  C1FB  F009         	movff	_selectedFont,??i2_oled_putChar+4
 32940  00504A  C1FC  F00A         	movff	_selectedFont+1,??i2_oled_putChar+5
 32941  00504E  5007               	movf	??i2_oled_putChar+2,w,c
 32942  005050  2609               	addwf	??i2_oled_putChar+4,f,c
 32943  005052  5008               	movf	??i2_oled_putChar+3,w,c
 32944  005054  220A               	addwfc	??i2_oled_putChar+5,f,c
 32945  005056  50F3               	movf	prodl,w,c
 32946  005058  2609               	addwf	??i2_oled_putChar+4,f,c
 32947  00505A  50F4               	movf	prodh,w,c
 32948  00505C  220A               	addwfc	??i2_oled_putChar+5,f,c
 32949  00505E  C009  FFF6         	movff	??i2_oled_putChar+4,tblptrl
 32950  005062  C00A  FFF7         	movff	??i2_oled_putChar+5,tblptrh
 32951  005066                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32952  005066  6AF8               	clrf	tblptru,c
 32953  005068                     	endif
 32954  005068                     	if	0	;tblptru may be non-zero
 32955  005068                     	endif
 32956  005068  0008               	tblrd		*
 32957  00506A  50F5               	movf	tablat,w,c
 32958  00506C  EC82  F030         	call	i2_oled_writeData
 32959  005070  2A0C               	incf	i2oled_putChar@index,f,c
 32960  005072  D7CF               	goto	i2l8559
 32961  005074                     __end_ofi2_oled_putChar:
 32962                           	opt stack 0
 32963                           tosu	equ	0xFFF
 32964                           tosh	equ	0xFFE
 32965                           tosl	equ	0xFFD
 32966                           pclatu	equ	0xFFB
 32967                           pclath	equ	0xFFA
 32968                           tblptru	equ	0xFF8
 32969                           tblptrh	equ	0xFF7
 32970                           tblptrl	equ	0xFF6
 32971                           tablat	equ	0xFF5
 32972                           prodh	equ	0xFF4
 32973                           prodl	equ	0xFF3
 32974                           intcon	equ	0xFF2
 32975                           intcon2	equ	0xFF1
 32976                           intcon3	equ	0xFF0
 32977                           indf0	equ	0xFEF
 32978                           postinc0	equ	0xFEE
 32979                           fsr0h	equ	0xFEA
 32980                           fsr0l	equ	0xFE9
 32981                           wreg	equ	0xFE8
 32982                           indf1	equ	0xFE7
 32983                           postdec1	equ	0xFE5
 32984                           fsr1h	equ	0xFE2
 32985                           fsr1l	equ	0xFE1
 32986                           indf2	equ	0xFDF
 32987                           postinc2	equ	0xFDE
 32988                           postdec2	equ	0xFDD
 32989                           plusw2	equ	0xFDB
 32990                           fsr2h	equ	0xFDA
 32991                           fsr2l	equ	0xFD9
 32992                           status	equ	0xFD8
 32993                           
 32994 ;; *************** function i2_oled_writeData *****************
 32995 ;; Defined at:
 32996 ;;		line 442 in file "../Includes/Drivers/SSD1306oLED.c"
 32997 ;; Parameters:    Size  Location     Type
 32998 ;;  data            1    wreg     unsigned char 
 32999 ;; Auto vars:     Size  Location     Type
 33000 ;;  data            1    0[COMRAM] unsigned char 
 33001 ;; Return value:  Size  Location     Type
 33002 ;;                  1    wreg      void 
 33003 ;; Registers used:
 33004 ;;		wreg
 33005 ;; Tracked objects:
 33006 ;;		On entry : 0/0
 33007 ;;		On exit  : 0/0
 33008 ;;		Unchanged: 0/0
 33009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33010 ;;      Params:         0       0       0       0       0       0       0       0       0
 33011 ;;      Locals:         1       0       0       0       0       0       0       0       0
 33012 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33013 ;;      Totals:         1       0       0       0       0       0       0       0       0
 33014 ;;Total ram usage:        1 bytes
 33015 ;; Hardware stack levels used:    1
 33016 ;; This function calls:
 33017 ;;		Nothing
 33018 ;; This function is called by:
 33019 ;;		i2_oled_putChar
 33020 ;; This function uses a non-reentrant model
 33021 ;;
 33022                           
 33023                           	psect	text152
 33024  006104                     __ptext152:
 33025                           	opt stack 0
 33026  006104                     i2_oled_writeData:
 33027                           	opt stack 16
 33028                           
 33029                           ;incstack = 0
 33030                           ;i2oled_writeData@data stored from wreg
 33031  006104  6E01               	movwf	i2oled_writeData@data,c
 33032                           
 33033                           ;SSD1306oLED.c: 444: LATBbits.LATB4=0;
 33034  006106  988A               	bcf	3978,4,c	;volatile
 33035                           
 33036                           ;SSD1306oLED.c: 445: LATCbits.LATC0=1;
 33037  006108  808B               	bsf	3979,0,c	;volatile
 33038                           
 33039                           ;SSD1306oLED.c: 446: LATD=data;
 33040  00610A  C001  FF8C         	movff	i2oled_writeData@data,3980	;volatile
 33041                           
 33042                           ;SSD1306oLED.c: 447: LATCbits.LATC1=0;
 33043  00610E  928B               	bcf	3979,1,c	;volatile
 33044                           
 33045                           ;SSD1306oLED.c: 448: __nop();
 33046  006110  F000               	nop	
 33047                           
 33048                           ;SSD1306oLED.c: 449: LATCbits.LATC1=1;
 33049  006112  828B               	bsf	3979,1,c	;volatile
 33050                           
 33051                           ;SSD1306oLED.c: 450: LATBbits.LATB4=1;
 33052  006114  888A               	bsf	3978,4,c	;volatile
 33053  006116  0012               	return	
 33054  006118                     __end_ofi2_oled_writeData:
 33055                           	opt stack 0
 33056                           tosu	equ	0xFFF
 33057                           tosh	equ	0xFFE
 33058                           tosl	equ	0xFFD
 33059                           pclatu	equ	0xFFB
 33060                           pclath	equ	0xFFA
 33061                           tblptru	equ	0xFF8
 33062                           tblptrh	equ	0xFF7
 33063                           tblptrl	equ	0xFF6
 33064                           tablat	equ	0xFF5
 33065                           prodh	equ	0xFF4
 33066                           prodl	equ	0xFF3
 33067                           intcon	equ	0xFF2
 33068                           intcon2	equ	0xFF1
 33069                           intcon3	equ	0xFF0
 33070                           indf0	equ	0xFEF
 33071                           postinc0	equ	0xFEE
 33072                           fsr0h	equ	0xFEA
 33073                           fsr0l	equ	0xFE9
 33074                           wreg	equ	0xFE8
 33075                           indf1	equ	0xFE7
 33076                           postdec1	equ	0xFE5
 33077                           fsr1h	equ	0xFE2
 33078                           fsr1l	equ	0xFE1
 33079                           indf2	equ	0xFDF
 33080                           postinc2	equ	0xFDE
 33081                           postdec2	equ	0xFDD
 33082                           plusw2	equ	0xFDB
 33083                           fsr2h	equ	0xFDA
 33084                           fsr2l	equ	0xFD9
 33085                           status	equ	0xFD8
 33086                           
 33087 ;; *************** function i2_Set_Page_Address *****************
 33088 ;; Defined at:
 33089 ;;		line 241 in file "../Includes/Drivers/SSD1306oLED.c"
 33090 ;; Parameters:    Size  Location     Type
 33091 ;;  address         1    wreg     unsigned char 
 33092 ;; Auto vars:     Size  Location     Type
 33093 ;;  address         1    1[COMRAM] unsigned char 
 33094 ;; Return value:  Size  Location     Type
 33095 ;;                  1    wreg      void 
 33096 ;; Registers used:
 33097 ;;		wreg, status,2, status,0, cstack
 33098 ;; Tracked objects:
 33099 ;;		On entry : 0/0
 33100 ;;		On exit  : 0/0
 33101 ;;		Unchanged: 0/0
 33102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33103 ;;      Params:         0       0       0       0       0       0       0       0       0
 33104 ;;      Locals:         1       0       0       0       0       0       0       0       0
 33105 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33106 ;;      Totals:         1       0       0       0       0       0       0       0       0
 33107 ;;Total ram usage:        1 bytes
 33108 ;; Hardware stack levels used:    1
 33109 ;; Hardware stack levels required when called:    1
 33110 ;; This function calls:
 33111 ;;		i2_oled_writeCommand
 33112 ;; This function is called by:
 33113 ;;		i2_oled_putChar
 33114 ;; This function uses a non-reentrant model
 33115 ;;
 33116                           
 33117                           	psect	text153
 33118  00617E                     __ptext153:
 33119                           	opt stack 0
 33120  00617E                     i2_Set_Page_Address:
 33121                           	opt stack 15
 33122                           
 33123                           ;incstack = 0
 33124                           ;i2Set_Page_Address@address stored from wreg
 33125  00617E  6E02               	movwf	i2Set_Page_Address@address,c
 33126                           
 33127                           ;SSD1306oLED.c: 243: address = 0xb0 | address;
 33128  006180  5002               	movf	i2Set_Page_Address@address,w,c
 33129  006182  09B0               	iorlw	176
 33130  006184  6E02               	movwf	i2Set_Page_Address@address,c
 33131                           
 33132                           ;SSD1306oLED.c: 244: oled_writeCommand(address);
 33133  006186  5002               	movf	i2Set_Page_Address@address,w,c
 33134  006188  EC8C  F030         	call	i2_oled_writeCommand
 33135  00618C  0012               	return	
 33136  00618E                     __end_ofi2_Set_Page_Address:
 33137                           	opt stack 0
 33138                           tosu	equ	0xFFF
 33139                           tosh	equ	0xFFE
 33140                           tosl	equ	0xFFD
 33141                           pclatu	equ	0xFFB
 33142                           pclath	equ	0xFFA
 33143                           tblptru	equ	0xFF8
 33144                           tblptrh	equ	0xFF7
 33145                           tblptrl	equ	0xFF6
 33146                           tablat	equ	0xFF5
 33147                           prodh	equ	0xFF4
 33148                           prodl	equ	0xFF3
 33149                           intcon	equ	0xFF2
 33150                           intcon2	equ	0xFF1
 33151                           intcon3	equ	0xFF0
 33152                           indf0	equ	0xFEF
 33153                           postinc0	equ	0xFEE
 33154                           fsr0h	equ	0xFEA
 33155                           fsr0l	equ	0xFE9
 33156                           wreg	equ	0xFE8
 33157                           indf1	equ	0xFE7
 33158                           postdec1	equ	0xFE5
 33159                           fsr1h	equ	0xFE2
 33160                           fsr1l	equ	0xFE1
 33161                           indf2	equ	0xFDF
 33162                           postinc2	equ	0xFDE
 33163                           postdec2	equ	0xFDD
 33164                           plusw2	equ	0xFDB
 33165                           fsr2h	equ	0xFDA
 33166                           fsr2l	equ	0xFD9
 33167                           status	equ	0xFD8
 33168                           
 33169 ;; *************** function i2_Set_Column_Address *****************
 33170 ;; Defined at:
 33171 ;;		line 249 in file "../Includes/Drivers/SSD1306oLED.c"
 33172 ;; Parameters:    Size  Location     Type
 33173 ;;  address         1    wreg     unsigned char 
 33174 ;; Auto vars:     Size  Location     Type
 33175 ;;  address         1    1[COMRAM] unsigned char 
 33176 ;; Return value:  Size  Location     Type
 33177 ;;                  1    wreg      void 
 33178 ;; Registers used:
 33179 ;;		wreg, status,2, status,0, cstack
 33180 ;; Tracked objects:
 33181 ;;		On entry : 0/0
 33182 ;;		On exit  : 0/0
 33183 ;;		Unchanged: 0/0
 33184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33185 ;;      Params:         0       0       0       0       0       0       0       0       0
 33186 ;;      Locals:         1       0       0       0       0       0       0       0       0
 33187 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33188 ;;      Totals:         1       0       0       0       0       0       0       0       0
 33189 ;;Total ram usage:        1 bytes
 33190 ;; Hardware stack levels used:    1
 33191 ;; Hardware stack levels required when called:    1
 33192 ;; This function calls:
 33193 ;;		i2_oled_writeCommand
 33194 ;; This function is called by:
 33195 ;;		i2_oled_putChar
 33196 ;; This function uses a non-reentrant model
 33197 ;;
 33198                           
 33199                           	psect	text154
 33200  00609E                     __ptext154:
 33201                           	opt stack 0
 33202  00609E                     i2_Set_Column_Address:
 33203                           	opt stack 15
 33204                           
 33205                           ;incstack = 0
 33206                           ;i2Set_Column_Address@address stored from wreg
 33207  00609E  6E02               	movwf	i2Set_Column_Address@address,c
 33208                           
 33209                           ;SSD1306oLED.c: 251: oled_writeCommand((0x10|(address>>4)));
 33210  0060A0  3802               	swapf	i2Set_Column_Address@address,w,c
 33211  0060A2  0B0F               	andlw	15
 33212  0060A4  0910               	iorlw	16
 33213  0060A6  EC8C  F030         	call	i2_oled_writeCommand
 33214                           
 33215                           ;SSD1306oLED.c: 252: oled_writeCommand((0x0f&address));
 33216  0060AA  5002               	movf	i2Set_Column_Address@address,w,c
 33217  0060AC  0B0F               	andlw	15
 33218  0060AE  EC8C  F030         	call	i2_oled_writeCommand
 33219  0060B2  0012               	return	
 33220  0060B4                     __end_ofi2_Set_Column_Address:
 33221                           	opt stack 0
 33222                           tosu	equ	0xFFF
 33223                           tosh	equ	0xFFE
 33224                           tosl	equ	0xFFD
 33225                           pclatu	equ	0xFFB
 33226                           pclath	equ	0xFFA
 33227                           tblptru	equ	0xFF8
 33228                           tblptrh	equ	0xFF7
 33229                           tblptrl	equ	0xFF6
 33230                           tablat	equ	0xFF5
 33231                           prodh	equ	0xFF4
 33232                           prodl	equ	0xFF3
 33233                           intcon	equ	0xFF2
 33234                           intcon2	equ	0xFF1
 33235                           intcon3	equ	0xFF0
 33236                           indf0	equ	0xFEF
 33237                           postinc0	equ	0xFEE
 33238                           fsr0h	equ	0xFEA
 33239                           fsr0l	equ	0xFE9
 33240                           wreg	equ	0xFE8
 33241                           indf1	equ	0xFE7
 33242                           postdec1	equ	0xFE5
 33243                           fsr1h	equ	0xFE2
 33244                           fsr1l	equ	0xFE1
 33245                           indf2	equ	0xFDF
 33246                           postinc2	equ	0xFDE
 33247                           postdec2	equ	0xFDD
 33248                           plusw2	equ	0xFDB
 33249                           fsr2h	equ	0xFDA
 33250                           fsr2l	equ	0xFD9
 33251                           status	equ	0xFD8
 33252                           
 33253 ;; *************** function i2_oled_writeCommand *****************
 33254 ;; Defined at:
 33255 ;;		line 430 in file "../Includes/Drivers/SSD1306oLED.c"
 33256 ;; Parameters:    Size  Location     Type
 33257 ;;  command         1    wreg     unsigned char 
 33258 ;; Auto vars:     Size  Location     Type
 33259 ;;  command         1    0[COMRAM] unsigned char 
 33260 ;; Return value:  Size  Location     Type
 33261 ;;                  1    wreg      void 
 33262 ;; Registers used:
 33263 ;;		wreg
 33264 ;; Tracked objects:
 33265 ;;		On entry : 0/0
 33266 ;;		On exit  : 0/0
 33267 ;;		Unchanged: 0/0
 33268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33269 ;;      Params:         0       0       0       0       0       0       0       0       0
 33270 ;;      Locals:         1       0       0       0       0       0       0       0       0
 33271 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33272 ;;      Totals:         1       0       0       0       0       0       0       0       0
 33273 ;;Total ram usage:        1 bytes
 33274 ;; Hardware stack levels used:    1
 33275 ;; This function calls:
 33276 ;;		Nothing
 33277 ;; This function is called by:
 33278 ;;		i2_Set_Page_Address
 33279 ;;		i2_Set_Column_Address
 33280 ;; This function uses a non-reentrant model
 33281 ;;
 33282                           
 33283                           	psect	text155
 33284  006118                     __ptext155:
 33285                           	opt stack 0
 33286  006118                     i2_oled_writeCommand:
 33287                           	opt stack 15
 33288                           
 33289                           ;incstack = 0
 33290                           ;i2oled_writeCommand@command stored from wreg
 33291  006118  6E01               	movwf	i2oled_writeCommand@command,c
 33292                           
 33293                           ;SSD1306oLED.c: 432: LATBbits.LATB4=0;
 33294  00611A  988A               	bcf	3978,4,c	;volatile
 33295                           
 33296                           ;SSD1306oLED.c: 433: LATCbits.LATC0=0;
 33297  00611C  908B               	bcf	3979,0,c	;volatile
 33298                           
 33299                           ;SSD1306oLED.c: 434: LATD=command;
 33300  00611E  C001  FF8C         	movff	i2oled_writeCommand@command,3980	;volatile
 33301                           
 33302                           ;SSD1306oLED.c: 435: LATCbits.LATC1=0;
 33303  006122  928B               	bcf	3979,1,c	;volatile
 33304                           
 33305                           ;SSD1306oLED.c: 436: __nop();
 33306  006124  F000               	nop	
 33307                           
 33308                           ;SSD1306oLED.c: 437: LATCbits.LATC1=1;
 33309  006126  828B               	bsf	3979,1,c	;volatile
 33310                           
 33311                           ;SSD1306oLED.c: 438: LATBbits.LATB4=1;
 33312  006128  888A               	bsf	3978,4,c	;volatile
 33313  00612A  0012               	return	
 33314  00612C                     __end_ofi2_oled_writeCommand:
 33315                           	opt stack 0
 33316                           tosu	equ	0xFFF
 33317                           tosh	equ	0xFFE
 33318                           tosl	equ	0xFFD
 33319                           pclatu	equ	0xFFB
 33320                           pclath	equ	0xFFA
 33321                           tblptru	equ	0xFF8
 33322                           tblptrh	equ	0xFF7
 33323                           tblptrl	equ	0xFF6
 33324                           tablat	equ	0xFF5
 33325                           prodh	equ	0xFF4
 33326                           prodl	equ	0xFF3
 33327                           intcon	equ	0xFF2
 33328                           intcon2	equ	0xFF1
 33329                           intcon3	equ	0xFF0
 33330                           indf0	equ	0xFEF
 33331                           postinc0	equ	0xFEE
 33332                           fsr0h	equ	0xFEA
 33333                           fsr0l	equ	0xFE9
 33334                           wreg	equ	0xFE8
 33335                           indf1	equ	0xFE7
 33336                           postdec1	equ	0xFE5
 33337                           fsr1h	equ	0xFE2
 33338                           fsr1l	equ	0xFE1
 33339                           indf2	equ	0xFDF
 33340                           postinc2	equ	0xFDE
 33341                           postdec2	equ	0xFDD
 33342                           plusw2	equ	0xFDB
 33343                           fsr2h	equ	0xFDA
 33344                           fsr2l	equ	0xFD9
 33345                           status	equ	0xFD8
 33346                           
 33347 ;; *************** function i2___lbdiv *****************
 33348 ;; Defined at:
 33349 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lbdiv.c"
 33350 ;; Parameters:    Size  Location     Type
 33351 ;;  dividend        1    wreg     unsigned char 
 33352 ;;  divisor         1    0[COMRAM] unsigned char 
 33353 ;; Auto vars:     Size  Location     Type
 33354 ;;  dividend        1    1[COMRAM] unsigned char 
 33355 ;;  __lbdiv         1    3[COMRAM] unsigned char 
 33356 ;;  __lbdiv         1    2[COMRAM] unsigned char 
 33357 ;; Return value:  Size  Location     Type
 33358 ;;                  1    wreg      unsigned char 
 33359 ;; Registers used:
 33360 ;;		wreg, status,2, status,0
 33361 ;; Tracked objects:
 33362 ;;		On entry : 0/0
 33363 ;;		On exit  : 0/0
 33364 ;;		Unchanged: 0/0
 33365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33366 ;;      Params:         1       0       0       0       0       0       0       0       0
 33367 ;;      Locals:         3       0       0       0       0       0       0       0       0
 33368 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33369 ;;      Totals:         4       0       0       0       0       0       0       0       0
 33370 ;;Total ram usage:        4 bytes
 33371 ;; Hardware stack levels used:    1
 33372 ;; This function calls:
 33373 ;;		Nothing
 33374 ;; This function is called by:
 33375 ;;		i2_oled_putUint8
 33376 ;; This function uses a non-reentrant model
 33377 ;;
 33378                           
 33379                           	psect	text156
 33380  005AD6                     __ptext156:
 33381                           	opt stack 0
 33382  005AD6                     i2___lbdiv:
 33383                           	opt stack 17
 33384                           
 33385                           ;incstack = 0
 33386                           ;i2___lbdiv@dividend stored from wreg
 33387  005AD6  6E02               	movwf	i2___lbdiv@dividend,c
 33388  005AD8  0E00               	movlw	0
 33389  005ADA  6E04               	movwf	i2___lbdiv@quotient,c
 33390  005ADC  5001               	movf	i2___lbdiv@divisor,w,c
 33391  005ADE  B4D8               	btfsc	status,2,c
 33392  005AE0  D015               	goto	i2l2581
 33393  005AE2  0E01               	movlw	1
 33394  005AE4  6E03               	movwf	i2___lbdiv@counter,c
 33395  005AE6  D003               	goto	i2l2576
 33396  005AE8  90D8               	bcf	status,0,c
 33397  005AEA  3601               	rlcf	i2___lbdiv@divisor,f,c
 33398  005AEC  2A03               	incf	i2___lbdiv@counter,f,c
 33399  005AEE                     i2l2576:
 33400  005AEE  AE01               	btfss	i2___lbdiv@divisor,7,c
 33401  005AF0  D7FB               	goto	i2l2577
 33402  005AF2                     i2u806_40:
 33403  005AF2  90D8               	bcf	status,0,c
 33404  005AF4  3604               	rlcf	i2___lbdiv@quotient,f,c
 33405  005AF6  5001               	movf	i2___lbdiv@divisor,w,c
 33406  005AF8  5C02               	subwf	i2___lbdiv@dividend,w,c
 33407  005AFA  A0D8               	btfss	status,0,c
 33408  005AFC  D003               	goto	i2l2580
 33409  005AFE  5001               	movf	i2___lbdiv@divisor,w,c
 33410  005B00  5E02               	subwf	i2___lbdiv@dividend,f,c
 33411  005B02  8004               	bsf	i2___lbdiv@quotient,0,c
 33412  005B04                     i2l2580:
 33413  005B04  90D8               	bcf	status,0,c
 33414  005B06  3201               	rrcf	i2___lbdiv@divisor,f,c
 33415  005B08  2E03               	decfsz	i2___lbdiv@counter,f,c
 33416  005B0A  D7F3               	goto	i2u806_40
 33417  005B0C                     i2l2581:
 33418  005B0C  5004               	movf	i2___lbdiv@quotient,w,c
 33419  005B0E  0012               	return	
 33420  005B10                     __end_ofi2___lbdiv:
 33421                           	opt stack 0
 33422                           tosu	equ	0xFFF
 33423                           tosh	equ	0xFFE
 33424                           tosl	equ	0xFFD
 33425                           pclatu	equ	0xFFB
 33426                           pclath	equ	0xFFA
 33427                           tblptru	equ	0xFF8
 33428                           tblptrh	equ	0xFF7
 33429                           tblptrl	equ	0xFF6
 33430                           tablat	equ	0xFF5
 33431                           prodh	equ	0xFF4
 33432                           prodl	equ	0xFF3
 33433                           intcon	equ	0xFF2
 33434                           intcon2	equ	0xFF1
 33435                           intcon3	equ	0xFF0
 33436                           indf0	equ	0xFEF
 33437                           postinc0	equ	0xFEE
 33438                           fsr0h	equ	0xFEA
 33439                           fsr0l	equ	0xFE9
 33440                           wreg	equ	0xFE8
 33441                           indf1	equ	0xFE7
 33442                           postdec1	equ	0xFE5
 33443                           fsr1h	equ	0xFE2
 33444                           fsr1l	equ	0xFE1
 33445                           indf2	equ	0xFDF
 33446                           postinc2	equ	0xFDE
 33447                           postdec2	equ	0xFDD
 33448                           plusw2	equ	0xFDB
 33449                           fsr2h	equ	0xFDA
 33450                           fsr2l	equ	0xFD9
 33451                           status	equ	0xFD8
 33452                           
 33453 ;; *************** function i2___awmod *****************
 33454 ;; Defined at:
 33455 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 33456 ;; Parameters:    Size  Location     Type
 33457 ;;  dividend        2    0[COMRAM] int 
 33458 ;;  divisor         2    2[COMRAM] int 
 33459 ;; Auto vars:     Size  Location     Type
 33460 ;;  __awmod         1    5[COMRAM] unsigned char 
 33461 ;;  __awmod         1    4[COMRAM] unsigned char 
 33462 ;; Return value:  Size  Location     Type
 33463 ;;                  2    0[COMRAM] int 
 33464 ;; Registers used:
 33465 ;;		wreg, status,2, status,0
 33466 ;; Tracked objects:
 33467 ;;		On entry : 0/0
 33468 ;;		On exit  : 0/0
 33469 ;;		Unchanged: 0/0
 33470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33471 ;;      Params:         4       0       0       0       0       0       0       0       0
 33472 ;;      Locals:         2       0       0       0       0       0       0       0       0
 33473 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33474 ;;      Totals:         6       0       0       0       0       0       0       0       0
 33475 ;;Total ram usage:        6 bytes
 33476 ;; Hardware stack levels used:    1
 33477 ;; This function calls:
 33478 ;;		Nothing
 33479 ;; This function is called by:
 33480 ;;		i2_oled_putUint8
 33481 ;; This function uses a non-reentrant model
 33482 ;;
 33483                           
 33484                           	psect	text157
 33485  0052B6                     __ptext157:
 33486                           	opt stack 0
 33487  0052B6                     i2___awmod:
 33488                           	opt stack 17
 33489                           
 33490                           ;incstack = 0
 33491  0052B6  0E00               	movlw	0
 33492  0052B8  6E06               	movwf	i2___awmod@sign,c
 33493  0052BA  AE02               	btfss	i2___awmod@dividend+1,7,c
 33494  0052BC  D006               	goto	i2l2427
 33495  0052BE  6C01               	negf	i2___awmod@dividend,c
 33496  0052C0  1E02               	comf	i2___awmod@dividend+1,f,c
 33497  0052C2  B0D8               	btfsc	status,0,c
 33498  0052C4  2A02               	incf	i2___awmod@dividend+1,f,c
 33499  0052C6  0E01               	movlw	1
 33500  0052C8  6E06               	movwf	i2___awmod@sign,c
 33501  0052CA                     i2l2427:
 33502  0052CA  AE04               	btfss	i2___awmod@divisor+1,7,c
 33503  0052CC  D004               	goto	i2l2428
 33504  0052CE  6C03               	negf	i2___awmod@divisor,c
 33505  0052D0  1E04               	comf	i2___awmod@divisor+1,f,c
 33506  0052D2  B0D8               	btfsc	status,0,c
 33507  0052D4  2A04               	incf	i2___awmod@divisor+1,f,c
 33508  0052D6                     i2l2428:
 33509  0052D6  5003               	movf	i2___awmod@divisor,w,c
 33510  0052D8  1004               	iorwf	i2___awmod@divisor+1,w,c
 33511  0052DA  B4D8               	btfsc	status,2,c
 33512  0052DC  D018               	goto	i2l2435
 33513  0052DE  0E01               	movlw	1
 33514  0052E0  6E05               	movwf	i2___awmod@counter,c
 33515  0052E2  D004               	goto	i2l2430
 33516  0052E4  90D8               	bcf	status,0,c
 33517  0052E6  3603               	rlcf	i2___awmod@divisor,f,c
 33518  0052E8  3604               	rlcf	i2___awmod@divisor+1,f,c
 33519  0052EA  2A05               	incf	i2___awmod@counter,f,c
 33520  0052EC                     i2l2430:
 33521  0052EC  AE04               	btfss	i2___awmod@divisor+1,7,c
 33522  0052EE  D7FA               	goto	i2l2431
 33523  0052F0                     i2u802_40:
 33524  0052F0  5003               	movf	i2___awmod@divisor,w,c
 33525  0052F2  5C01               	subwf	i2___awmod@dividend,w,c
 33526  0052F4  5004               	movf	i2___awmod@divisor+1,w,c
 33527  0052F6  5802               	subwfb	i2___awmod@dividend+1,w,c
 33528  0052F8  A0D8               	btfss	status,0,c
 33529  0052FA  D004               	goto	i2l2434
 33530  0052FC  5003               	movf	i2___awmod@divisor,w,c
 33531  0052FE  5E01               	subwf	i2___awmod@dividend,f,c
 33532  005300  5004               	movf	i2___awmod@divisor+1,w,c
 33533  005302  5A02               	subwfb	i2___awmod@dividend+1,f,c
 33534  005304                     i2l2434:
 33535  005304  90D8               	bcf	status,0,c
 33536  005306  3204               	rrcf	i2___awmod@divisor+1,f,c
 33537  005308  3203               	rrcf	i2___awmod@divisor,f,c
 33538  00530A  2E05               	decfsz	i2___awmod@counter,f,c
 33539  00530C  D7F1               	goto	i2u802_40
 33540  00530E                     i2l2435:
 33541  00530E  5006               	movf	i2___awmod@sign,w,c
 33542  005310  B4D8               	btfsc	status,2,c
 33543  005312  D004               	goto	i2l2436
 33544  005314  6C01               	negf	i2___awmod@dividend,c
 33545  005316  1E02               	comf	i2___awmod@dividend+1,f,c
 33546  005318  B0D8               	btfsc	status,0,c
 33547  00531A  2A02               	incf	i2___awmod@dividend+1,f,c
 33548  00531C                     i2l2436:
 33549  00531C  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 33550  005320  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 33551  005324  0012               	return	
 33552  005326                     __end_ofi2___awmod:
 33553                           	opt stack 0
 33554                           tosu	equ	0xFFF
 33555                           tosh	equ	0xFFE
 33556                           tosl	equ	0xFFD
 33557                           pclatu	equ	0xFFB
 33558                           pclath	equ	0xFFA
 33559                           tblptru	equ	0xFF8
 33560                           tblptrh	equ	0xFF7
 33561                           tblptrl	equ	0xFF6
 33562                           tablat	equ	0xFF5
 33563                           prodh	equ	0xFF4
 33564                           prodl	equ	0xFF3
 33565                           intcon	equ	0xFF2
 33566                           intcon2	equ	0xFF1
 33567                           intcon3	equ	0xFF0
 33568                           indf0	equ	0xFEF
 33569                           postinc0	equ	0xFEE
 33570                           fsr0h	equ	0xFEA
 33571                           fsr0l	equ	0xFE9
 33572                           wreg	equ	0xFE8
 33573                           indf1	equ	0xFE7
 33574                           postdec1	equ	0xFE5
 33575                           fsr1h	equ	0xFE2
 33576                           fsr1l	equ	0xFE1
 33577                           indf2	equ	0xFDF
 33578                           postinc2	equ	0xFDE
 33579                           postdec2	equ	0xFDD
 33580                           plusw2	equ	0xFDB
 33581                           fsr2h	equ	0xFDA
 33582                           fsr2l	equ	0xFD9
 33583                           status	equ	0xFD8
 33584                           
 33585 ;; *************** function _InterruptPinRX *****************
 33586 ;; Defined at:
 33587 ;;		line 93 in file "../Includes/Drivers/swUart.c"
 33588 ;; Parameters:    Size  Location     Type
 33589 ;;		None
 33590 ;; Auto vars:     Size  Location     Type
 33591 ;;		None
 33592 ;; Return value:  Size  Location     Type
 33593 ;;                  1    wreg      void 
 33594 ;; Registers used:
 33595 ;;		wreg, status,2, cstack
 33596 ;; Tracked objects:
 33597 ;;		On entry : 0/0
 33598 ;;		On exit  : 0/0
 33599 ;;		Unchanged: 0/0
 33600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33601 ;;      Params:         0       0       0       0       0       0       0       0       0
 33602 ;;      Locals:         0       0       0       0       0       0       0       0       0
 33603 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33604 ;;      Totals:         0       0       0       0       0       0       0       0       0
 33605 ;;Total ram usage:        0 bytes
 33606 ;; Hardware stack levels used:    1
 33607 ;; Hardware stack levels required when called:    1
 33608 ;; This function calls:
 33609 ;;		_clearInterruptPinRX
 33610 ;;		_reloadTimer
 33611 ;;		i2_TMR0_StartTimer
 33612 ;; This function is called by:
 33613 ;;		_INTERRUPT_InterruptManager
 33614 ;; This function uses a non-reentrant model
 33615 ;;
 33616                           
 33617                           	psect	text158
 33618  005D9C                     __ptext158:
 33619                           	opt stack 0
 33620  005D9C                     _InterruptPinRX:
 33621                           	opt stack 19
 33622                           
 33623                           ;swUart.c: 96: if(status == SILENT)
 33624                           
 33625                           ;incstack = 0
 33626  005D9C  5051               	movf	_status,w,c
 33627  005D9E  B4D8               	btfsc	status,2,c
 33628                           
 33629                           ;swUart.c: 97: {
 33630                           ;swUart.c: 98: if(PORTBbits.RB7 == 0)
 33631  005DA0  BE81               	btfsc	3969,7,c	;volatile
 33632  005DA2  D010               	goto	i2l1140
 33633                           
 33634                           ;swUart.c: 99: {
 33635                           ;swUart.c: 102: TMR0_StartTimer();
 33636  005DA4  EC29  F031         	call	i2_TMR0_StartTimer	;wreg free
 33637                           
 33638                           ;swUart.c: 103: reloadTimer(34);
 33639  005DA8  0E22               	movlw	34
 33640  005DAA  ECF4  F030         	call	_reloadTimer
 33641                           
 33642                           ;swUart.c: 107: countBitsSilent = 0;
 33643  005DAE  0E00               	movlw	0
 33644  005DB0  6E4E               	movwf	_countBitsSilent,c
 33645                           
 33646                           ;swUart.c: 108: n_bit = 0;
 33647  005DB2  0E00               	movlw	0
 33648  005DB4  6E5C               	movwf	_n_bit,c
 33649                           
 33650                           ;swUart.c: 109: cs = 0;
 33651  005DB6  0E00               	movlw	0
 33652  005DB8  0101               	movlb	1	; () banked
 33653  005DBA  6F5E               	movwf	_cs& (0+255),b
 33654                           
 33655                           ; BSR set to: 1
 33656                           ;swUart.c: 110: rx_data = 0;
 33657  005DBC  0E00               	movlw	0
 33658  005DBE  6E50               	movwf	_rx_data,c
 33659                           
 33660                           ; BSR set to: 1
 33661                           ;swUart.c: 111: status = N_BIT;
 33662  005DC0  0E01               	movlw	1
 33663  005DC2  6E51               	movwf	_status,c
 33664  005DC4                     i2l1140:
 33665                           
 33666                           ;swUart.c: 112: }
 33667                           ;swUart.c: 113: }
 33668                           ;swUart.c: 115: clearInterruptPinRX();
 33669                           
 33670                           ; BSR set to: 1
 33671                           
 33672                           ; BSR set to: 1
 33673  005DC4  ECDA  F030         	call	_clearInterruptPinRX	;wreg free
 33674  005DC8  0012               	return		;funcret
 33675  005DCA                     __end_of_InterruptPinRX:
 33676                           	opt stack 0
 33677                           tosu	equ	0xFFF
 33678                           tosh	equ	0xFFE
 33679                           tosl	equ	0xFFD
 33680                           pclatu	equ	0xFFB
 33681                           pclath	equ	0xFFA
 33682                           tblptru	equ	0xFF8
 33683                           tblptrh	equ	0xFF7
 33684                           tblptrl	equ	0xFF6
 33685                           tablat	equ	0xFF5
 33686                           prodh	equ	0xFF4
 33687                           prodl	equ	0xFF3
 33688                           intcon	equ	0xFF2
 33689                           intcon2	equ	0xFF1
 33690                           intcon3	equ	0xFF0
 33691                           indf0	equ	0xFEF
 33692                           postinc0	equ	0xFEE
 33693                           fsr0h	equ	0xFEA
 33694                           fsr0l	equ	0xFE9
 33695                           wreg	equ	0xFE8
 33696                           indf1	equ	0xFE7
 33697                           postdec1	equ	0xFE5
 33698                           fsr1h	equ	0xFE2
 33699                           fsr1l	equ	0xFE1
 33700                           indf2	equ	0xFDF
 33701                           postinc2	equ	0xFDE
 33702                           postdec2	equ	0xFDD
 33703                           plusw2	equ	0xFDB
 33704                           fsr2h	equ	0xFDA
 33705                           fsr2l	equ	0xFD9
 33706                           status	equ	0xFD8
 33707                           
 33708 ;; *************** function i2_TMR0_StartTimer *****************
 33709 ;; Defined at:
 33710 ;;		line 89 in file "../Includes/MccGenerated/tmr0.c"
 33711 ;; Parameters:    Size  Location     Type
 33712 ;;		None
 33713 ;; Auto vars:     Size  Location     Type
 33714 ;;		None
 33715 ;; Return value:  Size  Location     Type
 33716 ;;                  1    wreg      void 
 33717 ;; Registers used:
 33718 ;;		None
 33719 ;; Tracked objects:
 33720 ;;		On entry : 0/0
 33721 ;;		On exit  : 0/0
 33722 ;;		Unchanged: 0/0
 33723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33724 ;;      Params:         0       0       0       0       0       0       0       0       0
 33725 ;;      Locals:         0       0       0       0       0       0       0       0       0
 33726 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33727 ;;      Totals:         0       0       0       0       0       0       0       0       0
 33728 ;;Total ram usage:        0 bytes
 33729 ;; Hardware stack levels used:    1
 33730 ;; This function calls:
 33731 ;;		Nothing
 33732 ;; This function is called by:
 33733 ;;		_InterruptPinRX
 33734 ;; This function uses a non-reentrant model
 33735 ;;
 33736                           
 33737                           	psect	text159
 33738  006252                     __ptext159:
 33739                           	opt stack 0
 33740  006252                     i2_TMR0_StartTimer:
 33741                           	opt stack 19
 33742                           
 33743                           ;tmr0.c: 92: T0CONbits.TMR0ON = 1;
 33744                           
 33745                           ;incstack = 0
 33746  006252  8ED5               	bsf	4053,7,c	;volatile
 33747  006254  0012               	return		;funcret
 33748  006256                     __end_ofi2_TMR0_StartTimer:
 33749                           	opt stack 0
 33750                           tosu	equ	0xFFF
 33751                           tosh	equ	0xFFE
 33752                           tosl	equ	0xFFD
 33753                           pclatu	equ	0xFFB
 33754                           pclath	equ	0xFFA
 33755                           tblptru	equ	0xFF8
 33756                           tblptrh	equ	0xFF7
 33757                           tblptrl	equ	0xFF6
 33758                           tablat	equ	0xFF5
 33759                           prodh	equ	0xFF4
 33760                           prodl	equ	0xFF3
 33761                           intcon	equ	0xFF2
 33762                           intcon2	equ	0xFF1
 33763                           intcon3	equ	0xFF0
 33764                           indf0	equ	0xFEF
 33765                           postinc0	equ	0xFEE
 33766                           fsr0h	equ	0xFEA
 33767                           fsr0l	equ	0xFE9
 33768                           wreg	equ	0xFE8
 33769                           indf1	equ	0xFE7
 33770                           postdec1	equ	0xFE5
 33771                           fsr1h	equ	0xFE2
 33772                           fsr1l	equ	0xFE1
 33773                           indf2	equ	0xFDF
 33774                           postinc2	equ	0xFDE
 33775                           postdec2	equ	0xFDD
 33776                           plusw2	equ	0xFDB
 33777                           fsr2h	equ	0xFDA
 33778                           fsr2l	equ	0xFD9
 33779                           status	equ	0xFD8
 33780                           
 33781 ;; *************** function _reloadTimer *****************
 33782 ;; Defined at:
 33783 ;;		line 200 in file "../Includes/Drivers/swUart.c"
 33784 ;; Parameters:    Size  Location     Type
 33785 ;;  setTimerValu    1    wreg     unsigned char 
 33786 ;; Auto vars:     Size  Location     Type
 33787 ;;  setTimerValu    1    0[COMRAM] unsigned char 
 33788 ;; Return value:  Size  Location     Type
 33789 ;;                  1    wreg      void 
 33790 ;; Registers used:
 33791 ;;		wreg
 33792 ;; Tracked objects:
 33793 ;;		On entry : 0/0
 33794 ;;		On exit  : 0/0
 33795 ;;		Unchanged: 0/0
 33796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33797 ;;      Params:         0       0       0       0       0       0       0       0       0
 33798 ;;      Locals:         1       0       0       0       0       0       0       0       0
 33799 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33800 ;;      Totals:         1       0       0       0       0       0       0       0       0
 33801 ;;Total ram usage:        1 bytes
 33802 ;; Hardware stack levels used:    1
 33803 ;; This function calls:
 33804 ;;		Nothing
 33805 ;; This function is called by:
 33806 ;;		_InterruptPinRX
 33807 ;;		_InterruptTimerUART
 33808 ;; This function uses a non-reentrant model
 33809 ;;
 33810                           
 33811                           	psect	text160
 33812  0061E8                     __ptext160:
 33813                           	opt stack 0
 33814  0061E8                     _reloadTimer:
 33815                           	opt stack 19
 33816                           
 33817                           ;incstack = 0
 33818                           ;reloadTimer@setTimerValue stored from wreg
 33819  0061E8  6E01               	movwf	reloadTimer@setTimerValue,c
 33820                           
 33821                           ;swUart.c: 202: TMR0 = setTimerValue;
 33822  0061EA  C001  FFD6         	movff	reloadTimer@setTimerValue,4054	;volatile
 33823  0061EE  6AD7               	clrf	4055,c	;volatile
 33824  0061F0  0012               	return		;funcret
 33825  0061F2                     __end_of_reloadTimer:
 33826                           	opt stack 0
 33827                           tosu	equ	0xFFF
 33828                           tosh	equ	0xFFE
 33829                           tosl	equ	0xFFD
 33830                           pclatu	equ	0xFFB
 33831                           pclath	equ	0xFFA
 33832                           tblptru	equ	0xFF8
 33833                           tblptrh	equ	0xFF7
 33834                           tblptrl	equ	0xFF6
 33835                           tablat	equ	0xFF5
 33836                           prodh	equ	0xFF4
 33837                           prodl	equ	0xFF3
 33838                           intcon	equ	0xFF2
 33839                           intcon2	equ	0xFF1
 33840                           intcon3	equ	0xFF0
 33841                           indf0	equ	0xFEF
 33842                           postinc0	equ	0xFEE
 33843                           fsr0h	equ	0xFEA
 33844                           fsr0l	equ	0xFE9
 33845                           wreg	equ	0xFE8
 33846                           indf1	equ	0xFE7
 33847                           postdec1	equ	0xFE5
 33848                           fsr1h	equ	0xFE2
 33849                           fsr1l	equ	0xFE1
 33850                           indf2	equ	0xFDF
 33851                           postinc2	equ	0xFDE
 33852                           postdec2	equ	0xFDD
 33853                           plusw2	equ	0xFDB
 33854                           fsr2h	equ	0xFDA
 33855                           fsr2l	equ	0xFD9
 33856                           status	equ	0xFD8
 33857                           
 33858 ;; *************** function _clearInterruptPinRX *****************
 33859 ;; Defined at:
 33860 ;;		line 221 in file "../Includes/Drivers/swUart.c"
 33861 ;; Parameters:    Size  Location     Type
 33862 ;;		None
 33863 ;; Auto vars:     Size  Location     Type
 33864 ;;  tClearPin       1    0[COMRAM] unsigned char 
 33865 ;; Return value:  Size  Location     Type
 33866 ;;                  1    wreg      void 
 33867 ;; Registers used:
 33868 ;;		wreg
 33869 ;; Tracked objects:
 33870 ;;		On entry : 0/0
 33871 ;;		On exit  : 0/0
 33872 ;;		Unchanged: 0/0
 33873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33874 ;;      Params:         0       0       0       0       0       0       0       0       0
 33875 ;;      Locals:         1       0       0       0       0       0       0       0       0
 33876 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33877 ;;      Totals:         1       0       0       0       0       0       0       0       0
 33878 ;;Total ram usage:        1 bytes
 33879 ;; Hardware stack levels used:    1
 33880 ;; This function calls:
 33881 ;;		Nothing
 33882 ;; This function is called by:
 33883 ;;		_InterruptPinRX
 33884 ;; This function uses a non-reentrant model
 33885 ;;
 33886                           
 33887                           	psect	text161
 33888  0061B4                     __ptext161:
 33889                           	opt stack 0
 33890  0061B4                     _clearInterruptPinRX:
 33891                           	opt stack 19
 33892                           
 33893                           ;swUart.c: 223: bool tClearPin;
 33894                           ;swUart.c: 225: INTCONbits.IOCIF = 0;
 33895                           
 33896                           ;incstack = 0
 33897  0061B4  90F2               	bcf	intcon,0,c	;volatile
 33898                           
 33899                           ;swUart.c: 227: tClearPin = PORTBbits.RB7;
 33900  0061B6  0E00               	movlw	0
 33901  0061B8  BE81               	btfsc	3969,7,c	;volatile
 33902  0061BA  0E01               	movlw	1
 33903  0061BC  6E01               	movwf	clearInterruptPinRX@tClearPin,c
 33904  0061BE  0012               	return		;funcret
 33905  0061C0                     __end_of_clearInterruptPinRX:
 33906                           	opt stack 0
 33907                           tosu	equ	0xFFF
 33908                           tosh	equ	0xFFE
 33909                           tosl	equ	0xFFD
 33910                           pclatu	equ	0xFFB
 33911                           pclath	equ	0xFFA
 33912                           tblptru	equ	0xFF8
 33913                           tblptrh	equ	0xFF7
 33914                           tblptrl	equ	0xFF6
 33915                           tablat	equ	0xFF5
 33916                           prodh	equ	0xFF4
 33917                           prodl	equ	0xFF3
 33918                           intcon	equ	0xFF2
 33919                           intcon2	equ	0xFF1
 33920                           intcon3	equ	0xFF0
 33921                           indf0	equ	0xFEF
 33922                           postinc0	equ	0xFEE
 33923                           fsr0h	equ	0xFEA
 33924                           fsr0l	equ	0xFE9
 33925                           wreg	equ	0xFE8
 33926                           indf1	equ	0xFE7
 33927                           postdec1	equ	0xFE5
 33928                           fsr1h	equ	0xFE2
 33929                           fsr1l	equ	0xFE1
 33930                           indf2	equ	0xFDF
 33931                           postinc2	equ	0xFDE
 33932                           postdec2	equ	0xFDD
 33933                           plusw2	equ	0xFDB
 33934                           fsr2h	equ	0xFDA
 33935                           fsr2l	equ	0xFD9
 33936                           status	equ	0xFD8
 33937                           
 33938 ;; *************** function _EUSART_Transmit_ISR *****************
 33939 ;; Defined at:
 33940 ;;		line 162 in file "../Includes/MccGenerated/eusart.c"
 33941 ;; Parameters:    Size  Location     Type
 33942 ;;		None
 33943 ;; Auto vars:     Size  Location     Type
 33944 ;;		None
 33945 ;; Return value:  Size  Location     Type
 33946 ;;                  1    wreg      void 
 33947 ;; Registers used:
 33948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33949 ;; Tracked objects:
 33950 ;;		On entry : 0/0
 33951 ;;		On exit  : 0/0
 33952 ;;		Unchanged: 0/0
 33953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33954 ;;      Params:         0       0       0       0       0       0       0       0       0
 33955 ;;      Locals:         0       0       0       0       0       0       0       0       0
 33956 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33957 ;;      Totals:         0       0       0       0       0       0       0       0       0
 33958 ;;Total ram usage:        0 bytes
 33959 ;; Hardware stack levels used:    1
 33960 ;; This function calls:
 33961 ;;		Nothing
 33962 ;; This function is called by:
 33963 ;;		_INTERRUPT_InterruptManager
 33964 ;; This function uses a non-reentrant model
 33965 ;;
 33966                           
 33967                           	psect	text162
 33968  005D0E                     __ptext162:
 33969                           	opt stack 0
 33970  005D0E                     _EUSART_Transmit_ISR:
 33971                           	opt stack 20
 33972                           
 33973                           ;eusart.c: 166: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 33974                           
 33975                           ;incstack = 0
 33976  005D0E  0E40               	movlw	64
 33977  005D10  0100               	movlb	0	; () banked
 33978  005D12  61E0               	cpfslt	_eusartTxBufferRemaining& (0+255),b	;volatile
 33979  005D14  D012               	goto	i2l1231
 33980                           
 33981                           ; BSR set to: 0
 33982                           ;eusart.c: 167: {
 33983                           ;eusart.c: 168: TXREG = eusartTxBuffer[eusartTxTail++];
 33984  005D16  51E1               	movf	_eusartTxTail& (0+255),w,b
 33985  005D18  0D01               	mullw	1
 33986  005D1A  0E40               	movlw	low _eusartTxBuffer
 33987  005D1C  24F3               	addwf	prodl,w,c
 33988  005D1E  6ED9               	movwf	fsr2l,c
 33989  005D20  0E02               	movlw	high _eusartTxBuffer
 33990  005D22  20F4               	addwfc	prodh,w,c
 33991  005D24  6EDA               	movwf	fsr2h,c
 33992  005D26  50DF               	movf	indf2,w,c
 33993  005D28  6EAD               	movwf	4013,c	;volatile
 33994                           
 33995                           ; BSR set to: 0
 33996  005D2A  2BE1               	incf	_eusartTxTail& (0+255),f,b
 33997                           
 33998                           ; BSR set to: 0
 33999                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 34000  005D2C  0E3F               	movlw	63
 34001  005D2E  65E1               	cpfsgt	_eusartTxTail& (0+255),b
 34002  005D30  D002               	goto	i2l1232
 34003                           
 34004                           ; BSR set to: 0
 34005                           ;eusart.c: 170: {
 34006                           ;eusart.c: 171: eusartTxTail = 0;
 34007  005D32  0E00               	movlw	0
 34008  005D34  6FE1               	movwf	_eusartTxTail& (0+255),b
 34009  005D36                     i2l1232:
 34010                           
 34011                           ; BSR set to: 0
 34012                           ;eusart.c: 172: }
 34013                           ;eusart.c: 173: eusartTxBufferRemaining++;
 34014                           
 34015                           ; BSR set to: 0
 34016  005D36  2BE0               	incf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
 34017                           
 34018                           ;eusart.c: 174: }
 34019  005D38  0012               	return	
 34020  005D3A                     i2l1231:
 34021                           
 34022                           ; BSR set to: 0
 34023                           ;eusart.c: 175: else
 34024                           ;eusart.c: 176: {
 34025                           ;eusart.c: 177: PIE1bits.TXIE = 0;
 34026  005D3A  989D               	bcf	3997,4,c	;volatile
 34027  005D3C  0012               	return	
 34028  005D3E                     __end_of_EUSART_Transmit_ISR:
 34029                           	opt stack 0
 34030                           tosu	equ	0xFFF
 34031                           tosh	equ	0xFFE
 34032                           tosl	equ	0xFFD
 34033                           pclatu	equ	0xFFB
 34034                           pclath	equ	0xFFA
 34035                           tblptru	equ	0xFF8
 34036                           tblptrh	equ	0xFF7
 34037                           tblptrl	equ	0xFF6
 34038                           tablat	equ	0xFF5
 34039                           prodh	equ	0xFF4
 34040                           prodl	equ	0xFF3
 34041                           intcon	equ	0xFF2
 34042                           intcon2	equ	0xFF1
 34043                           intcon3	equ	0xFF0
 34044                           indf0	equ	0xFEF
 34045                           postinc0	equ	0xFEE
 34046                           fsr0h	equ	0xFEA
 34047                           fsr0l	equ	0xFE9
 34048                           wreg	equ	0xFE8
 34049                           indf1	equ	0xFE7
 34050                           postdec1	equ	0xFE5
 34051                           fsr1h	equ	0xFE2
 34052                           fsr1l	equ	0xFE1
 34053                           indf2	equ	0xFDF
 34054                           postinc2	equ	0xFDE
 34055                           postdec2	equ	0xFDD
 34056                           plusw2	equ	0xFDB
 34057                           fsr2h	equ	0xFDA
 34058                           fsr2l	equ	0xFD9
 34059                           status	equ	0xFD8
 34060                           
 34061 ;; *************** function _EUSART_Receive_ISR *****************
 34062 ;; Defined at:
 34063 ;;		line 181 in file "../Includes/MccGenerated/eusart.c"
 34064 ;; Parameters:    Size  Location     Type
 34065 ;;		None
 34066 ;; Auto vars:     Size  Location     Type
 34067 ;;		None
 34068 ;; Return value:  Size  Location     Type
 34069 ;;                  1    wreg      void 
 34070 ;; Registers used:
 34071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34072 ;; Tracked objects:
 34073 ;;		On entry : 0/0
 34074 ;;		On exit  : 0/0
 34075 ;;		Unchanged: 0/0
 34076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34077 ;;      Params:         0       0       0       0       0       0       0       0       0
 34078 ;;      Locals:         0       0       0       0       0       0       0       0       0
 34079 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34080 ;;      Totals:         0       0       0       0       0       0       0       0       0
 34081 ;;Total ram usage:        0 bytes
 34082 ;; Hardware stack levels used:    1
 34083 ;; This function calls:
 34084 ;;		Nothing
 34085 ;; This function is called by:
 34086 ;;		_INTERRUPT_InterruptManager
 34087 ;; This function uses a non-reentrant model
 34088 ;;
 34089                           
 34090                           	psect	text163
 34091  005D3E                     __ptext163:
 34092                           	opt stack 0
 34093  005D3E                     _EUSART_Receive_ISR:
 34094                           	opt stack 20
 34095                           
 34096                           ;eusart.c: 183: if(1 == RCSTAbits.OERR)
 34097                           
 34098                           ; BSR set to: 0
 34099                           ;incstack = 0
 34100  005D3E  A2AB               	btfss	4011,1,c	;volatile
 34101  005D40  D003               	goto	i2l1237
 34102                           
 34103                           ;eusart.c: 184: {
 34104                           ;eusart.c: 187: RCSTAbits.CREN = 0;
 34105  005D42  98AB               	bcf	4011,4,c	;volatile
 34106                           
 34107                           ;eusart.c: 188: RCSTAbits.CREN = 1;
 34108  005D44  88AB               	bsf	4011,4,c	;volatile
 34109                           
 34110                           ;eusart.c: 189: }
 34111  005D46  0012               	return	
 34112  005D48                     i2l1237:
 34113                           
 34114                           ;eusart.c: 190: else
 34115                           ;eusart.c: 191: {
 34116                           ;eusart.c: 193: eusartRxBuffer[eusartRxHead++] = RCREG;
 34117  005D48  0100               	movlb	0	; () banked
 34118  005D4A  51DF               	movf	_eusartRxHead& (0+255),w,b
 34119  005D4C  0D01               	mullw	1
 34120  005D4E  0E00               	movlw	low _eusartRxBuffer
 34121  005D50  24F3               	addwf	prodl,w,c
 34122  005D52  6ED9               	movwf	fsr2l,c
 34123  005D54  0E02               	movlw	high _eusartRxBuffer
 34124  005D56  20F4               	addwfc	prodh,w,c
 34125  005D58  6EDA               	movwf	fsr2h,c
 34126  005D5A  CFAE FFDF          	movff	4014,indf2	;volatile
 34127                           
 34128                           ; BSR set to: 0
 34129  005D5E  2BDF               	incf	_eusartRxHead& (0+255),f,b
 34130                           
 34131                           ; BSR set to: 0
 34132                           ;eusart.c: 194: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 34133  005D60  0E3F               	movlw	63
 34134  005D62  65DF               	cpfsgt	_eusartRxHead& (0+255),b
 34135  005D64  D002               	goto	i2l1239
 34136                           
 34137                           ; BSR set to: 0
 34138                           ;eusart.c: 195: {
 34139                           ;eusart.c: 196: eusartRxHead = 0;
 34140  005D66  0E00               	movlw	0
 34141  005D68  6FDF               	movwf	_eusartRxHead& (0+255),b
 34142  005D6A                     i2l1239:
 34143                           
 34144                           ; BSR set to: 0
 34145                           ;eusart.c: 197: }
 34146                           ;eusart.c: 198: eusartRxCount++;
 34147                           
 34148                           ; BSR set to: 0
 34149  005D6A  2BF5               	incf	_eusartRxCount& (0+255),f,b	;volatile
 34150  005D6C  0012               	return	
 34151  005D6E                     __end_of_EUSART_Receive_ISR:
 34152                           	opt stack 0
 34153                           tosu	equ	0xFFF
 34154                           tosh	equ	0xFFE
 34155                           tosl	equ	0xFFD
 34156                           pclatu	equ	0xFFB
 34157                           pclath	equ	0xFFA
 34158                           tblptru	equ	0xFF8
 34159                           tblptrh	equ	0xFF7
 34160                           tblptrl	equ	0xFF6
 34161                           tablat	equ	0xFF5
 34162                           prodh	equ	0xFF4
 34163                           prodl	equ	0xFF3
 34164                           intcon	equ	0xFF2
 34165                           intcon2	equ	0xFF1
 34166                           intcon3	equ	0xFF0
 34167                           indf0	equ	0xFEF
 34168                           postinc0	equ	0xFEE
 34169                           fsr0h	equ	0xFEA
 34170                           fsr0l	equ	0xFE9
 34171                           wreg	equ	0xFE8
 34172                           indf1	equ	0xFE7
 34173                           postdec1	equ	0xFE5
 34174                           fsr1h	equ	0xFE2
 34175                           fsr1l	equ	0xFE1
 34176                           indf2	equ	0xFDF
 34177                           postinc2	equ	0xFDE
 34178                           postdec2	equ	0xFDD
 34179                           plusw2	equ	0xFDB
 34180                           fsr2h	equ	0xFDA
 34181                           fsr2l	equ	0xFD9
 34182                           status	equ	0xFD8
 34183                           
 34184 ;; *************** function _CMP1_ISR *****************
 34185 ;; Defined at:
 34186 ;;		line 95 in file "../Includes/MccGenerated/cmp1.c"
 34187 ;; Parameters:    Size  Location     Type
 34188 ;;		None
 34189 ;; Auto vars:     Size  Location     Type
 34190 ;;		None
 34191 ;; Return value:  Size  Location     Type
 34192 ;;                  1    wreg      void 
 34193 ;; Registers used:
 34194 ;;		None
 34195 ;; Tracked objects:
 34196 ;;		On entry : 0/0
 34197 ;;		On exit  : 0/0
 34198 ;;		Unchanged: 0/0
 34199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34200 ;;      Params:         0       0       0       0       0       0       0       0       0
 34201 ;;      Locals:         0       0       0       0       0       0       0       0       0
 34202 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34203 ;;      Totals:         0       0       0       0       0       0       0       0       0
 34204 ;;Total ram usage:        0 bytes
 34205 ;; Hardware stack levels used:    1
 34206 ;; This function calls:
 34207 ;;		Nothing
 34208 ;; This function is called by:
 34209 ;;		_INTERRUPT_InterruptManager
 34210 ;; This function uses a non-reentrant model
 34211 ;;
 34212                           
 34213                           	psect	text164
 34214  006256                     __ptext164:
 34215                           	opt stack 0
 34216  006256                     _CMP1_ISR:
 34217                           	opt stack 20
 34218                           
 34219                           ;cmp1.c: 98: PIR2bits.C1IF = 0;
 34220                           
 34221                           ;incstack = 0
 34222  006256  9CA1               	bcf	4001,6,c	;volatile
 34223  006258  0012               	return		;funcret
 34224  00625A                     __end_of_CMP1_ISR:
 34225                           	opt stack 0
 34226                           tosu	equ	0xFFF
 34227                           tosh	equ	0xFFE
 34228                           tosl	equ	0xFFD
 34229                           pclatu	equ	0xFFB
 34230                           pclath	equ	0xFFA
 34231                           tblptru	equ	0xFF8
 34232                           tblptrh	equ	0xFF7
 34233                           tblptrl	equ	0xFF6
 34234                           tablat	equ	0xFF5
 34235                           prodh	equ	0xFF4
 34236                           prodl	equ	0xFF3
 34237                           intcon	equ	0xFF2
 34238                           intcon2	equ	0xFF1
 34239                           intcon3	equ	0xFF0
 34240                           indf0	equ	0xFEF
 34241                           postinc0	equ	0xFEE
 34242                           fsr0h	equ	0xFEA
 34243                           fsr0l	equ	0xFE9
 34244                           wreg	equ	0xFE8
 34245                           indf1	equ	0xFE7
 34246                           postdec1	equ	0xFE5
 34247                           fsr1h	equ	0xFE2
 34248                           fsr1l	equ	0xFE1
 34249                           indf2	equ	0xFDF
 34250                           postinc2	equ	0xFDE
 34251                           postdec2	equ	0xFDD
 34252                           plusw2	equ	0xFDB
 34253                           fsr2h	equ	0xFDA
 34254                           fsr2l	equ	0xFD9
 34255                           status	equ	0xFD8
 34256                           tosu	equ	0xFFF
 34257                           tosh	equ	0xFFE
 34258                           tosl	equ	0xFFD
 34259                           pclatu	equ	0xFFB
 34260                           pclath	equ	0xFFA
 34261                           tblptru	equ	0xFF8
 34262                           tblptrh	equ	0xFF7
 34263                           tblptrl	equ	0xFF6
 34264                           tablat	equ	0xFF5
 34265                           prodh	equ	0xFF4
 34266                           prodl	equ	0xFF3
 34267                           intcon	equ	0xFF2
 34268                           intcon2	equ	0xFF1
 34269                           intcon3	equ	0xFF0
 34270                           indf0	equ	0xFEF
 34271                           postinc0	equ	0xFEE
 34272                           fsr0h	equ	0xFEA
 34273                           fsr0l	equ	0xFE9
 34274                           wreg	equ	0xFE8
 34275                           indf1	equ	0xFE7
 34276                           postdec1	equ	0xFE5
 34277                           fsr1h	equ	0xFE2
 34278                           fsr1l	equ	0xFE1
 34279                           indf2	equ	0xFDF
 34280                           postinc2	equ	0xFDE
 34281                           postdec2	equ	0xFDD
 34282                           plusw2	equ	0xFDB
 34283                           fsr2h	equ	0xFDA
 34284                           fsr2l	equ	0xFD9
 34285                           status	equ	0xFD8
 34286                           
 34287                           	psect	text165
 34288  000000                     __ptext165:
 34289                           	opt stack 0
 34290                           tosu	equ	0xFFF
 34291                           tosh	equ	0xFFE
 34292                           tosl	equ	0xFFD
 34293                           pclatu	equ	0xFFB
 34294                           pclath	equ	0xFFA
 34295                           tblptru	equ	0xFF8
 34296                           tblptrh	equ	0xFF7
 34297                           tblptrl	equ	0xFF6
 34298                           tablat	equ	0xFF5
 34299                           prodh	equ	0xFF4
 34300                           prodl	equ	0xFF3
 34301                           intcon	equ	0xFF2
 34302                           intcon2	equ	0xFF1
 34303                           intcon3	equ	0xFF0
 34304                           indf0	equ	0xFEF
 34305                           postinc0	equ	0xFEE
 34306                           fsr0h	equ	0xFEA
 34307                           fsr0l	equ	0xFE9
 34308                           wreg	equ	0xFE8
 34309                           indf1	equ	0xFE7
 34310                           postdec1	equ	0xFE5
 34311                           fsr1h	equ	0xFE2
 34312                           fsr1l	equ	0xFE1
 34313                           indf2	equ	0xFDF
 34314                           postinc2	equ	0xFDE
 34315                           postdec2	equ	0xFDD
 34316                           plusw2	equ	0xFDB
 34317                           fsr2h	equ	0xFDA
 34318                           fsr2l	equ	0xFD9
 34319                           status	equ	0xFD8
 34320                           
 34321                           	psect	rparam
 34322  0000                     tosu	equ	0xFFF
 34323                           tosh	equ	0xFFE
 34324                           tosl	equ	0xFFD
 34325                           pclatu	equ	0xFFB
 34326                           pclath	equ	0xFFA
 34327                           tblptru	equ	0xFF8
 34328                           tblptrh	equ	0xFF7
 34329                           tblptrl	equ	0xFF6
 34330                           tablat	equ	0xFF5
 34331                           prodh	equ	0xFF4
 34332                           prodl	equ	0xFF3
 34333                           intcon	equ	0xFF2
 34334                           intcon2	equ	0xFF1
 34335                           intcon3	equ	0xFF0
 34336                           indf0	equ	0xFEF
 34337                           postinc0	equ	0xFEE
 34338                           fsr0h	equ	0xFEA
 34339                           fsr0l	equ	0xFE9
 34340                           wreg	equ	0xFE8
 34341                           indf1	equ	0xFE7
 34342                           postdec1	equ	0xFE5
 34343                           fsr1h	equ	0xFE2
 34344                           fsr1l	equ	0xFE1
 34345                           indf2	equ	0xFDF
 34346                           postinc2	equ	0xFDE
 34347                           postdec2	equ	0xFDD
 34348                           plusw2	equ	0xFDB
 34349                           fsr2h	equ	0xFDA
 34350                           fsr2l	equ	0xFD9
 34351                           status	equ	0xFD8
 34352                           
 34353                           	psect	temp
 34354  00005F                     btemp:
 34355                           	opt stack 0
 34356  00005F                     	ds	1
 34357  0000                     int$flags	set	btemp
 34358  0000                     wtemp6	set	btemp+1
 34359                           tosu	equ	0xFFF
 34360                           tosh	equ	0xFFE
 34361                           tosl	equ	0xFFD
 34362                           pclatu	equ	0xFFB
 34363                           pclath	equ	0xFFA
 34364                           tblptru	equ	0xFF8
 34365                           tblptrh	equ	0xFF7
 34366                           tblptrl	equ	0xFF6
 34367                           tablat	equ	0xFF5
 34368                           prodh	equ	0xFF4
 34369                           prodl	equ	0xFF3
 34370                           intcon	equ	0xFF2
 34371                           intcon2	equ	0xFF1
 34372                           intcon3	equ	0xFF0
 34373                           indf0	equ	0xFEF
 34374                           postinc0	equ	0xFEE
 34375                           fsr0h	equ	0xFEA
 34376                           fsr0l	equ	0xFE9
 34377                           wreg	equ	0xFE8
 34378                           indf1	equ	0xFE7
 34379                           postdec1	equ	0xFE5
 34380                           fsr1h	equ	0xFE2
 34381                           fsr1l	equ	0xFE1
 34382                           indf2	equ	0xFDF
 34383                           postinc2	equ	0xFDE
 34384                           postdec2	equ	0xFDD
 34385                           plusw2	equ	0xFDB
 34386                           fsr2h	equ	0xFDA
 34387                           fsr2l	equ	0xFD9
 34388                           status	equ	0xFD8


Data Sizes:
    Strings     1606
    Constant    969
    Data        11
    BSS         673
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     51      94
    BANK0           160     92     160
    BANK1           256      0     254
    BANK2           256      0     192
    BANK3           256      0     128
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_97(CODE[7]), STR_95(CODE[7]), STR_93(CODE[7]), STR_90(CODE[7]), 
		 -> STR_35(CODE[5]), STR_31(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_89(CODE[3]), STR_69(CODE[14]), STR_67(CODE[11]), STR_63(CODE[7]), 
		 -> STR_60(CODE[9]), STR_59(CODE[11]), STR_57(CODE[14]), STR_54(CODE[14]), 
		 -> STR_53(CODE[3]), STR_49(CODE[9]), STR_45(CODE[14]), STR_44(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> clearLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> clearLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK2[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK2[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S6260_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S6260_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S6260_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S6260_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S4623$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    S4613$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S4613$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4589$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4589$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4589$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4589$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    oled_putString@string	PTR const unsigned char  size(3) Largest target is 32767
		 -> oled_putUint16@numData(COMRAM[6]), oled_putint8@numData(BANK0[6]), oled_putUint8@numData(BANK0[6]), ROM(CODE[32767]), 
		 -> STR_189(CODE[12]), STR_188(CODE[8]), STR_187(CODE[9]), storedLight(BANK1[5]), 
		 -> STR_182(CODE[5]), STR_181(CODE[8]), STR_180(CODE[8]), STR_179(CODE[9]), 
		 -> STR_162(CODE[16]), STR_161(CODE[17]), STR_160(CODE[17]), STR_159(CODE[4]), 
		 -> STR_158(CODE[4]), STR_157(CODE[4]), STR_156(CODE[4]), STR_155(CODE[4]), 
		 -> STR_154(CODE[4]), STR_153(CODE[4]), STR_152(CODE[16]), STR_151(CODE[17]), 
		 -> STR_150(CODE[4]), STR_149(CODE[4]), STR_148(CODE[4]), STR_147(CODE[4]), 
		 -> STR_146(CODE[4]), STR_145(CODE[4]), STR_144(CODE[4]), STR_143(CODE[4]), 
		 -> STR_142(CODE[4]), STR_141(CODE[4]), STR_140(CODE[4]), STR_139(CODE[4]), 
		 -> STR_138(CODE[4]), STR_137(CODE[16]), STR_136(CODE[12]), STR_135(CODE[17]), 
		 -> STR_134(CODE[16]), STR_133(CODE[16]), STR_132(CODE[16]), STR_131(CODE[15]), 
		 -> STR_130(CODE[15]), STR_129(CODE[16]), STR_128(CODE[4]), STR_127(CODE[3]), 
		 -> STR_126(CODE[3]), STR_125(CODE[3]), STR_124(CODE[3]), STR_123(CODE[2]), 
		 -> STR_122(CODE[5]), STR_121(CODE[7]), STR_120(CODE[17]), STR_119(CODE[17]), 
		 -> STR_118(CODE[2]), STR_117(CODE[7]), STR_116(CODE[7]), STR_115(CODE[16]), 
		 -> STR_114(CODE[16]), STR_113(CODE[15]), STR_112(CODE[15]), STR_111(CODE[17]), 
		 -> STR_110(CODE[16]), STR_109(CODE[17]), STR_108(CODE[17]), STR_107(CODE[7]), 
		 -> STR_106(CODE[10]), STR_105(CODE[17]), STR_104(CODE[16]), STR_103(CODE[16]), 
		 -> STR_102(CODE[16]), STR_101(CODE[16]), STR_100(CODE[17]), STR_99(CODE[17]), 
		 -> STR_98(CODE[16]), STR_96(CODE[19]), STR_94(CODE[17]), STR_92(CODE[17]), 
		 -> STR_91(CODE[17]), responseData(BANK1[32]), responsePortNum(BANK1[3]), STR_88(CODE[13]), 
		 -> STR_87(CODE[12]), STR_86(CODE[12]), STR_83(CODE[18]), STR_82(CODE[13]), 
		 -> STR_81(CODE[17]), STR_80(CODE[16]), STR_79(CODE[17]), STR_78(CODE[17]), 
		 -> STR_77(CODE[16]), STR_76(CODE[17]), STR_75(CODE[17]), STR_73(CODE[13]), 
		 -> STR_72(CODE[12]), STR_71(CODE[17]), STR_65(CODE[7]), STR_64(CODE[10]), 
		 -> STR_62(CODE[11]), STR_61(CODE[11]), STR_56(CODE[9]), STR_55(CODE[11]), 
		 -> STR_51(CODE[11]), STR_50(CODE[10]), STR_47(CODE[9]), STR_46(CODE[11]), 
		 -> STR_42(CODE[17]), STR_40(CODE[17]), STR_38(CODE[17]), STR_37(CODE[17]), 
		 -> STR_36(CODE[17]), STR_34(CODE[17]), STR_33(CODE[17]), STR_32(CODE[17]), 
		 -> moduleResonseBuffer(BANK1[64]), STR_29(CODE[17]), STR_28(CODE[17]), STR_27(CODE[17]), 
		 -> STR_26(CODE[17]), STR_25(CODE[9]), STR_24(CODE[10]), STR_23(CODE[5]), 
		 -> STR_20(CODE[9]), STR_19(CODE[8]), STR_18(CODE[8]), STR_17(CODE[9]), 
		 -> STR_16(CODE[10]), STR_15(CODE[11]), STR_14(CODE[13]), STR_13(CODE[13]), 
		 -> STR_12(CODE[13]), STR_11(CODE[12]), STR_10(CODE[13]), STR_9(CODE[9]), 
		 -> STR_8(CODE[12]), STR_7(CODE[16]), STR_6(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[9]), STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    oled_setFont@font	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    selectedFont	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    ReadyByteFrame@buffer_rx	PTR char  size(2) Largest target is 128
		 -> buffer_rx(BANK3[128]), 

    moteApp_setLightString@lightString	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    sp__memcpy	PTR void  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    moteApp_convertSensorValue@string	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    moteApp_addToDataBuffer@string	PTR const unsigned char  size(2) Largest target is 64
		 -> storedLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    sendDataCommand@appData	PTR unsigned char  size(2) Largest target is 16
		 -> dataBuffer(BANK1[16]), 

    sendDataCommand@string	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_85(CODE[12]), STR_84(CODE[14]), STR_74(CODE[14]), 

    sendCommand@string	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_186(CODE[22]), STR_185(CODE[22]), STR_184(CODE[27]), STR_183(CODE[27]), 
		 -> STR_178(CODE[26]), STR_177(CODE[26]), STR_176(CODE[26]), STR_175(CODE[26]), 
		 -> STR_174(CODE[3]), STR_173(CODE[9]), STR_172(CODE[15]), STR_171(CODE[13]), 
		 -> STR_170(CODE[13]), STR_169(CODE[13]), STR_168(CODE[13]), STR_167(CODE[13]), 
		 -> STR_166(CODE[13]), STR_165(CODE[13]), STR_164(CODE[13]), STR_163(CODE[16]), 
		 -> STR_70(CODE[11]), STR_68(CODE[11]), STR_66(CODE[14]), STR_58(CODE[14]), 
		 -> STR_52(CODE[10]), STR_48(CODE[13]), STR_43(CODE[14]), STR_41(CODE[13]), 
		 -> STR_39(CODE[10]), STR_30(CODE[10]), STR_22(CODE[20]), STR_21(CODE[2]), 

    sp__moteApp_getLightString	PTR unsigned char  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    sp__moteApp_getTempValue	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    sp__moteApp_getLightValue	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_InterruptTimerUART
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBapp_CdcEmulatorInitialize
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USART_mySetLineCodingHandler
    _USBCtrlTrfInHandler->_USART_mySetLineCodingHandler
    _USART_mySetLineCodingHandler->___lldiv
    _InterruptTimerUART->_ReadyByteFrame
    i2_oled_clear->i2_oled_clearRow
    i2_oled_clearRow->i2_oled_putChar
    _ReadyByteFrame->i2_oled_putUint8
    i2_oled_putUint8->i2_oled_putString
    i2_oled_putString->i2_oled_putChar
    i2_oled_putChar->i2_Set_Column_Address
    i2_oled_putChar->i2_Set_Page_Address
    i2_Set_Page_Address->i2_oled_writeCommand
    i2_Set_Column_Address->i2_oled_writeCommand
    _InterruptPinRX->_clearInterruptPinRX
    _InterruptPinRX->_reloadTimer

Critical Paths under _main in BANK0

    _main->_moteHandler
    _test_powerup->_moteApp_testSensors
    _test_switch->_oled_putString
    _test_oled->_oled_putString
    _test_leds->_oled_putString
    _test_comms->_oled_putString
    _moteApp_toggleLeds->_sendCommand
    _moteApp_testSensors->_ADC_TempConversion
    _moteHandler->_moteRunningProcess
    _moteRunningProcess->_ADC_TempConversion
    _sendDataCommand->_EUSART_Write
    _sendDataCommand->_hexToStr
    _oled_putint8->_oled_putString
    _oled_putUint8->_oled_putString
    _moteApp_setSensorsInput->_moteApp_delayms
    _moteApp_getTempValue->_MOTEapp_getModuleResponse
    _moteApp_getTempValue->_sendCommand
    _moteApp_getLightValue->_moteApp_setLightString
    _moteApp_setLightString->_memcpy
    _moteApp_convertSensorValue->_moteApp_getLightValue
    _moteApp_addToDataBuffer->_moteApp_getLightValue
    _moteApp_add8bToDataBuffer->___awmod
    _oled_setDisplay->_oled_writeCommand
    _oled_devInit->_oled_initialDispayLine
    _oled_devInit->_oled_powerControl
    _oled_devInit->_oled_regulorResistorSelect
    _oled_devInit->_oled_setContrastControlRegister
    _oled_setContrastControlRegister->_oled_writeCommand
    _oled_regulorResistorSelect->_oled_writeCommand
    _oled_powerControl->_oled_writeCommand
    _oled_initialDispayLine->_oled_writeCommand
    _oled_displayOff->_oled_writeCommand
    _moduleSleep->_sendCommand
    _moduleResync->_moteApp_delayms
    _MOTEapp_getModuleResponse->_EUSART_Read
    _MOTEapp_SetDataRateSetting->_sendCommand
    _ADC_TempConversion->___fldiv
    ___flmul->___fladd
    ___fldiv->___flmul
    _moteJoiningProcess->_oled_putString
    _TMRapp_Handler->___almod
    _moteApp_clearCommand->_sendCommand
    _sendCommand->_EUSART_Write
    _EndLine->_EUSART_Write
    _USBapp_Handler->_oled_putString
    _oled_putString->_moteApp_getLightValue
    _oled_clear->_oled_clearRow
    _oled_clearRow->_oled_putChar
    _oled_putChar->_Set_Column_Address
    _oled_putChar->_Set_Page_Address
    _Set_Page_Address->_oled_writeCommand
    _Set_Column_Address->_oled_writeCommand
    _USBapp_DeviceCdcEmulatorHandler->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  731588
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
               _MOTEapp_handlerState
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _USBapp_Handler
                _USBapp_handlerState
                       _moduleResync
               _moteApp_clearCommand
                    _moteApp_delayms
                        _moteHandler
                         _oled_clear
                          _oled_init
                     _oled_putString
                       _test_powerup
 ---------------------------------------------------------------------------------
 (1) _test_powerup                                         0     0      0  285642
                 _EUSART_FlushBuffer
                    _moteApp_delayms
                _moteApp_testSensors
                         _oled_clear
                         _test_comms
                          _test_leds
                          _test_oled
                        _test_switch
 ---------------------------------------------------------------------------------
 (2) _test_switch                                          4     4      0   41857
                                             24 BANK0      4     4      0
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_oled                                            0     0      0   41765
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_leds                                            0     0      0   41432
                            _delayms
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_comms                                           0     0      0   44435
                            _delayms
                 _moteApp_toggleLeds
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_toggleLeds                                   2     2      0    3003
                                              3 BANK0      2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _delayms                                              5     3      2     758
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _moteApp_testSensors                                  3     3      0  113079
                                             76 BANK0      1     1      0
                 _ADC_TempConversion
         _moteApp_convertSensorValue
              _moteApp_getLightValue
               _moteApp_getTempValue
            _moteApp_setSensorsInput
                         _oled_clear
                       _oled_putChar
                     _oled_putString
                       _oled_putint8
 ---------------------------------------------------------------------------------
 (1) _moteHandler                                          6     6      0  345579
                                             86 BANK0      6     6      0
                 _ADC_TempConversion
             _MOTEapp_TimerBasedTask
          _MOTEapp_getModuleResponse
               _TMRapp_ClearBitFlags
                     _TMRapp_Handler
                     _USBapp_exitCDC
                _USBapp_exitCDCState
         _moteApp_convertSensorValue
              _moteApp_getLightValue
               _moteApp_getTempValue
                 _moteJoiningProcess
                 _moteRunningProcess
                         _oled_clear
                     _oled_putString
                       _oled_putint8
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _moteRunningProcess                                  10     7      3  183236
                                             76 BANK0     10     7      3
                 _ADC_TempConversion
         _MOTEapp_SetDataRateSetting
                     _TMR2_ReadTimer
                  _moteApp_GoToSleep
          _moteApp_add8bToDataBuffer
            _moteApp_addToDataBuffer
               _moteApp_clearBuffers
         _moteApp_convertSensorValue
                    _moteApp_delayms
             _moteApp_getLightString
              _moteApp_getLightValue
               _moteApp_getTempValue
            _moteApp_lightStringSize
            _moteApp_setSensorsInput
                         _oled_clear
                     _oled_putString
                      _oled_putUint8
                       _oled_putint8
                    _sendDataCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _sendDataCommand                                      8     3      5    1313
                                              1 BANK0      8     3      5
                       _EUSART_Write
                            _EndLine
                           _hexToStr
 ---------------------------------------------------------------------------------
 (4) _hexToStr                                             1     1      0     133
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putint8                                        10     8      2   44305
                                             24 BANK0     10     8      2
                            ___awmod
                            ___lbdiv
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _oled_putUint8                                        9     7      2   44367
                                             24 BANK0      9     7      2
                            ___awmod
                            ___lbdiv
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_setSensorsInput                              2     2      0    5080
                                              5 BANK0      2     2      0
          _MOTEapp_getModuleResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _moteApp_lightStringSize                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _moteApp_getTempValue                                 4     2      2    3142
                                              3 BANK0      4     2      2
          _MOTEapp_getModuleResponse
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _moteApp_getLightValue                                4     2      2    4020
                                             14 BANK0      4     2      2
          _MOTEapp_getModuleResponse
             _moteApp_setLightString
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _moteApp_setLightString                               3     1      2     878
                                             11 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     677
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _moteApp_getLightString                               2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _moteApp_convertSensorValue                           8     6      2    7101
                                             18 BANK0      8     6      2
                             ___wmul
              _moteApp_getLightValue (ARG)
               _moteApp_getTempValue (ARG)
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    6385
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_clearBuffers                                 4     4      0     272
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _moteApp_addToDataBuffer                              4     1      3     514
                                             18 BANK0      4     1      3
             _moteApp_getLightString (ARG)
              _moteApp_getLightValue (ARG)
 ---------------------------------------------------------------------------------
 (3) _moteApp_add8bToDataBuffer                            4     3      1    3128
                                              6 BANK0      4     3      1
                            ___awmod
                            ___lbdiv
            _moteApp_lightStringSize (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     696
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1898
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_GoToSleep                                    1     1      0   11563
                                             14 BANK0      1     1      0
                 _EUSART_FlushBuffer
             _PIN_MANAGER_Initialize
                       _moduleResync
                        _moduleSleep
                    _moteApp_delayms
                    _oled_displayOff
                          _oled_init
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            0     0      0    1467
                         _oled_clear
                       _oled_devInit
                    _oled_setDisplay
                       _oled_setFont
 ---------------------------------------------------------------------------------
 (2) _oled_setFont                                         2     0      2     133
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _oled_setDisplay                                      1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (2) _oled_devInit                                         1     1      0     199
                                              2 BANK0      1     1      0
             _oled_initialDispayLine
                  _oled_powerControl
         _oled_regulorResistorSelect
    _oled_setContrastControlRegister
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_setContrastControlRegister                      1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_regulorResistorSelect                           1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_powerControl                                    1     1      0      44
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_initialDispayLine                               1     1      0      45
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_displayOff                                      1     1      0      22
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _moduleSleep                                          1     1      0    2981
                                              3 BANK0      1     1      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _moduleResync                                         3     3      0    5082
                                              5 BANK0      3     3      0
          _MOTEapp_getModuleResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _MOTEapp_getModuleResponse                            2     2      0     138
                                              1 BANK0      2     2      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART_FlushBuffer                                   1     1      0      68
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_ReadTimer                                       1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_SetDataRateSetting                           2     2      0    3025
                                              3 BANK0      2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _ADC_TempConversion                                   6     6      0    6665
                                             70 BANK0      6     6      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     411
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     318
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    1974
                                             20 BANK0     25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    1405
                                             45 BANK0     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2466
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (2) _moteJoiningProcess                                   6     4      2   51314
                                             24 BANK0      6     4      2
                   _DATAEE_WriteByte
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                        _sendCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6    1736
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    2227
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _moteApp_delayms                                      5     3      2    1915
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     3     2      1     245
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDCState                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMRapp_Handler                                       0     0      0    3481
                            ___almod
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    3007
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     474
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (2) _TMRapp_ClearBitFlags                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MOTEapp_TimerBasedTask                               1     1      0     154
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _moteApp_clearCommand                                 0     0      0    2981
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _sendCommand                                          2     0      2    2981
                                              1 BANK0      2     0      2
                       _EUSART_Write
                            _EndLine
 ---------------------------------------------------------------------------------
 (5) _EndLine                                              0     0      0      44
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (1) _USBapp_handlerState                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_Handler                                       1     1      0   45714
                                             24 BANK0      1     1      0
    _USBapp_DeviceCdcEmulatorHandler
                         _oled_clear
                     _oled_putString
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _service_pushbutton                                   1     1      0      27
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putString                                       6     1      5   40674
                                             18 BANK0      6     1      5
             _moteApp_getLightString (ARG)
              _moteApp_getLightValue (ARG)
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (3) _oled_clear                                           0     0      0    1091
                      _oled_clearRow
 ---------------------------------------------------------------------------------
 (4) _oled_clearRow                                        2     2      0    1091
                                             12 BANK0      2     2      0
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (4) _oled_putChar                                        10     8      2    1001
                                              2 BANK0     10     8      2
                 _Set_Column_Address
                   _Set_Page_Address
                     _oled_writeData
 ---------------------------------------------------------------------------------
 (5) _oled_writeData                                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _Set_Page_Address                                     1     1      0      67
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (5) _Set_Column_Address                                   1     1      0      66
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (6) _oled_writeCommand                                    1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_DeviceCdcEmulatorHandler                      1     1      0    3898
                                             13 BANK0      1     1      0
                       _CDCTxService
                        _EUSART_Read
                       _EUSART_Write
           _MOTEapp_setResponseReady
               _USBapp_getrxByteFlag
                       _getsUSBUSART
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     222
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    1858
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBapp_getrxByteFlag                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_setResponseReady                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Read                                          1     1      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    1750
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1589
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CMP1_Initialize
                  _EUSART_Initialize
                         _InitSwUart
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0       0
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              0 BANK0      2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitSwUart                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOTEapp_handlerState                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                         18    18      0   32427
                                             33 COMRAM    18    18      0
                           _CMP1_ISR
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                     _InterruptPinRX
                 _InterruptTimerUART
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR3_ISR
                        _TMRapp_Tick
                     _USBDeviceTasks
               _USBapp_setrxByteFlag
 ---------------------------------------------------------------------------------
 (11) _USBapp_setrxByteFlag                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USBDeviceTasks                                      1     1      0   30063
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (12) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (12) _USBWakeFromSuspend                                  0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBSuspend                                          0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPService                                    3     3      0   17698
                                             27 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfSetupHandler                              0     0      0   16631
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (14) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (14) _USBCheckStdRequest                                  0     0      0   12636
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStdSetCfgHandler                                 1     1      0    4401
                                             21 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (15) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (15) _USBStdFeatureReqHandler                             6     6      0    4286
                                             21 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3903
                                             13 COMRAM     8     2      6
                 _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
 ---------------------------------------------------------------------------------
 (13) _USBapp_CdcEmulatorInitialize                        1     1      0    1211
                                             12 COMRAM     1     1      0
                          _CDCInitEP
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (13) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfOutHandler                                0     0      0     499
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfRxService                                 2     2      0     499
                                             17 COMRAM     2     2      0
       _USART_mySetLineCodingHandler *
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfInHandler                                 1     1      0     500
                                             17 COMRAM     1     1      0
       _USART_mySetLineCodingHandler *
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USART_mySetLineCodingHandler                        4     4      0     385
                                             13 COMRAM     4     4      0
                            ___lldiv
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (14) i2_EUSART_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) ___lldiv                                            13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (11) _TMRapp_Tick                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR3_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _InterruptTimerUART                                  3     3      0    2341
                                             30 COMRAM     3     3      0
                     _ReadyByteFrame
                     _TMR0_StopTimer
            _clearInterruptTimerUART
                        _reloadTimer
                       i2_oled_clear
 ---------------------------------------------------------------------------------
 (12) i2_oled_clear                                        0     0      0     483
                    i2_oled_clearRow
 ---------------------------------------------------------------------------------
 (13) i2_oled_clearRow                                     2     2      0     483
                                             12 COMRAM     2     2      0
                     i2_oled_putChar
 ---------------------------------------------------------------------------------
 (12) _clearInterruptTimerUART                             0     0      0       0
                         _TMR0_Clear
 ---------------------------------------------------------------------------------
 (13) _TMR0_Clear                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR0_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ReadyByteFrame                                      3     0      3    1791
                                             27 COMRAM     3     0      3
                    i2_oled_putUint8
 ---------------------------------------------------------------------------------
 (13) i2_oled_putUint8                                     9     7      2    1591
                                             18 COMRAM     9     7      2
                          i2___awmod
                          i2___lbdiv
                   i2_oled_putString
 ---------------------------------------------------------------------------------
 (14) i2_oled_putString                                    6     1      5     628
                                             12 COMRAM     6     1      5
                     i2_oled_putChar
 ---------------------------------------------------------------------------------
 (14) i2_oled_putChar                                     10     8      2     393
                                              2 COMRAM    10     8      2
               i2_Set_Column_Address
                 i2_Set_Page_Address
                   i2_oled_writeData
 ---------------------------------------------------------------------------------
 (15) i2_oled_writeData                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) i2_Set_Page_Address                                  1     1      0      67
                                              1 COMRAM     1     1      0
                i2_oled_writeCommand
 ---------------------------------------------------------------------------------
 (15) i2_Set_Column_Address                                1     1      0      66
                                              1 COMRAM     1     1      0
                i2_oled_writeCommand
 ---------------------------------------------------------------------------------
 (16) i2_oled_writeCommand                                 1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) i2___lbdiv                                           4     3      1     214
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (14) i2___awmod                                           6     2      4     452
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (11) _InterruptPinRX                                      0     0      0      23
                _clearInterruptPinRX
                        _reloadTimer
                  i2_TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (12) i2_TMR0_StartTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _reloadTimer                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _clearInterruptPinRX                                 1     1      0       1
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CMP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _MOTEapp_handlerState
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _EUSART_Initialize
     _InitSwUart
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
     _TMR3_Initialize
       _TMR3_StartTimer
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _USBapp_Handler
     _USBapp_DeviceCdcEmulatorHandler
       _CDCTxService
         _USBTransferOnePacket
       _EUSART_Read
       _EUSART_Write
       _MOTEapp_setResponseReady
       _USBapp_getrxByteFlag
       _getsUSBUSART
         _USBTransferOnePacket
       _putUSBUSART
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_putString
       _moteApp_getLightString (ARG)
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putChar (ARG)
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
     _service_pushbutton
   _USBapp_handlerState
   _moduleResync
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _moteApp_delayms
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_clearCommand
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_delayms
   _moteHandler
     _ADC_TempConversion
       ___fladd
       ___fldiv
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
     _MOTEapp_TimerBasedTask
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _TMRapp_ClearBitFlags
     _TMRapp_Handler
       ___almod
       ___lwmod
     _USBapp_exitCDC
     _USBapp_exitCDCState
     _moteApp_convertSensorValue
       ___wmul
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
     _moteApp_getLightValue
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _moteApp_setLightString
         _memcpy
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _moteApp_getTempValue
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _moteJoiningProcess
       _DATAEE_WriteByte
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
       _strcmp
       _strncmp
     _moteRunningProcess
       _ADC_TempConversion
         ___fladd
         ___fldiv
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _MOTEapp_SetDataRateSetting
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _TMR2_ReadTimer
       _moteApp_GoToSleep
         _EUSART_FlushBuffer
         _PIN_MANAGER_Initialize
         _moduleResync
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moduleSleep
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_delayms
         _oled_displayOff
           _oled_writeCommand
         _oled_init
           _oled_clear
             _oled_clearRow
               _oled_putChar
                 _Set_Column_Address
                   _oled_writeCommand
                 _Set_Page_Address
                   _oled_writeCommand
                 _oled_writeData
           _oled_devInit
             _oled_initialDispayLine
               _oled_writeCommand
             _oled_powerControl
               _oled_writeCommand
             _oled_regulorResistorSelect
               _oled_writeCommand
             _oled_setContrastControlRegister
               _oled_writeCommand
             _oled_writeCommand
           _oled_setDisplay
             _oled_writeCommand
           _oled_setFont
       _moteApp_add8bToDataBuffer
         ___awmod
         ___lbdiv
         _moteApp_lightStringSize (ARG)
       _moteApp_addToDataBuffer
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_clearBuffers
       _moteApp_convertSensorValue
         ___wmul
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_getTempValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_delayms
       _moteApp_getLightString
       _moteApp_getLightValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_lightStringSize
       _moteApp_setSensorsInput
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _oled_putUint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _sendDataCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
         _hexToStr
       _strcmp
       _strncmp
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_putString
       _moteApp_getLightString (ARG)
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putChar (ARG)
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
     _oled_putint8
       ___awmod
       ___lbdiv
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _service_pushbutton
   _oled_clear
     _oled_clearRow
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
   _oled_init
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_devInit
       _oled_initialDispayLine
         _oled_writeCommand
       _oled_powerControl
         _oled_writeCommand
       _oled_regulorResistorSelect
         _oled_writeCommand
       _oled_setContrastControlRegister
         _oled_writeCommand
       _oled_writeCommand
     _oled_setDisplay
       _oled_writeCommand
     _oled_setFont
   _oled_putString
     _moteApp_getLightString (ARG)
     _moteApp_getLightValue (ARG)
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _moteApp_setLightString
         _memcpy
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _oled_putChar (ARG)
       _Set_Column_Address
         _oled_writeCommand
       _Set_Page_Address
         _oled_writeCommand
       _oled_writeData
   _test_powerup
     _EUSART_FlushBuffer
     _moteApp_delayms
     _moteApp_testSensors
       _ADC_TempConversion
         ___fladd
         ___fldiv
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _moteApp_convertSensorValue
         ___wmul
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_getTempValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_getLightValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_setSensorsInput
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _oled_putint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_comms
       _delayms
       _moteApp_toggleLeds
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_leds
       _delayms
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_oled
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_switch
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData

 _INTERRUPT_InterruptManager (ROOT)
   _CMP1_ISR
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _InterruptPinRX
     _clearInterruptPinRX
     _reloadTimer
     i2_TMR0_StartTimer
   _InterruptTimerUART
     _ReadyByteFrame
       i2_oled_putUint8
         i2___awmod
         i2___lbdiv
         i2_oled_putString
           i2_oled_putChar
             i2_Set_Column_Address
               i2_oled_writeCommand
             i2_Set_Page_Address
               i2_oled_writeCommand
             i2_oled_writeData
     _TMR0_StopTimer
     _clearInterruptTimerUART
       _TMR0_Clear
     _reloadTimer
     i2_oled_clear
       i2_oled_clearRow
         i2_oled_putChar
           i2_Set_Column_Address
             i2_oled_writeCommand
           i2_Set_Page_Address
             i2_oled_writeCommand
           i2_oled_writeData
   _TMR0_ISR
   _TMR1_ISR
   _TMR3_ISR
   _TMRapp_Tick
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USART_mySetLineCodingHandler *
           ___lldiv
           i2_EUSART_Initialize
         _USBCtrlTrfTxService *
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USART_mySetLineCodingHandler *
             ___lldiv
             i2_EUSART_Initialize
           _USBCtrlEPAllowStatusStage *
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             _USBapp_CdcEmulatorInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               i2_EUSART_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           _USBapp_CdcEmulatorInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             i2_EUSART_Initialize
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         i2_EUSART_Initialize
     i2_USBDeviceInit
       i2_memset
   _USBapp_setrxByteFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      80      11       50.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C0       9       75.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FE       7       99.2%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5C      A0       5      100.0%
BITBANK5            80      0       0      15        0.0%
BANK5               80      0       0      16        0.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     33      5E       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     33C      14        0.0%
DATA                 0      0     33C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Mar 30 16:22:29 2018

                    __end_ofi2_oled_putUint8 4CEE                           _InterruptTimerUART 369A  
           __size_of_moteApp_lightStringSize 0006                                   _USB_SD_Ptr 75EF  
                               ___fldiv@aexp 00A5                                 ___fldiv@bexp 00A4  
                               ___fldiv@sign 0099                     __end_ofi2_oled_putString 5402  
                      ??_moteApp_testSensors 00AC                                           l60 2DAC  
                                         l65 2DAE                                           l57 2D2C  
                                         l66 2DC0                            ??_CMP1_Initialize 0060  
                                         l67 2DD6                                   _USB_Buffer 0280  
                  _MOTEapp_getModuleResponse 54D6                                           _cs 015E  
             moteJoiningProcess@selectButton 0079                                _USBDeviceInit 2F1A  
                        ___wmul@multiplicand 0062                      EUSART_FlushBuffer@index 0060  
                     __end_of_oled_writeData 605C                         ??_moteApp_toggleLeds 0063  
                         __size_of_CDCInitEP 0066                              _timer0ReloadVal 0156  
                   USBapp_handlerState@state 0060                                 __CFG_CP0$OFF 000000  
                               __CFG_CP1$OFF 000000                                 __CFG_CP2$OFF 000000  
                               __CFG_CP3$OFF 000000                          ?_InterruptTimerUART 0001  
             __end_of_moteApp_setLightString 54D6         USER_USB_CALLBACK_EVENT_HANDLER@event 000E  
       USER_USB_CALLBACK_EVENT_HANDLER@pdata 0010                                          l111 5C0C  
                                        l112 5BF4                                          l130 3484  
                                        l123 340E                                          l127 349C  
                                        l400 1452                                          l128 3430  
                                        l129 345A                                          l410 15AE  
                                        l402 14E4                                          l420 16C4  
                                        l412 1612                                          l404 1502  
                                        l340 4D42                                          l500 07DA  
                                        l405 1544                                          l341 4D52  
                __end_of_USBStdGetDscHandler 2CB2                                          l422 172A  
                                        l414 1622                                          l502 0822  
                                        l431 184C                                          l343 4D68  
                                        l424 1756                                          l416 168C  
                                        l408 1586                                          l600 283E  
                                        l512 0A3A                                          l504 0868  
                                        l441 18CE                                          l601 284E  
                                        l337 4D20                                          l434 186E  
                                        l418 169C                                          l530 0CD4  
                                        l522 0BE2                                          l370 232C  
                                        l443 18D8                                          l435 187C  
                                        l427 176C                                          l355 5EA8  
                                        l523 0D8C                                          l531 0CF6  
                                        l363 22DA                                          l348 5C3E  
                                        l524 0D3A                                          l532 0D18  
                                        l516 0AB2                                          l508 08F4  
                                        l460 0288                                          l605 5F3A  
                                        l349 5C26                                          l437 18B0  
                                        l429 17D8                                          l621 5514  
                                        l701 55B0                                          l541 0E5C  
                                        l525 0C6E                                          l517 0B4C  
                                        l509 0966                                          l381 2512  
                                        l373 23D0                                          l365 22E0  
                                        l390 191A                                          l550 0F54  
                                        l518 0B04                                          l462 0294  
                                        l382 23F0                                          l366 22F6  
                                        l439 18C4                                          l391 139A  
                                        l703 55E2                                          l711 4FC2  
                                        l543 0FBA                                          l551 0F76  
                                        l535 0DBC                                          l527 0D64  
                                        l519 0B24                                          l383 245E  
                                        l367 230E                                          l704 55F8  
                                        l720 508C                                          l560 1026  
                                        l552 0F98                                          l544 0ECE  
                                        l528 0C90                                          l480 046C  
                                        l472 02FC                                          l464 02F2  
                                        l376 24F6                                          l721 509E  
                                        l561 104C                                          l537 0DE2  
                                        l529 0CB2                                          l385 24E2  
                                        l377 23EE                                          l369 231E  
                                        l626 5538                                          l642 42A8  
                                        l466 1332                                          l562 1072  
                                        l554 0FFC                                          l546 0FEA  
                                        l490 087A                                          l482 0478  
                                        l395 1962                                          l731 5980  
                                        l643 4290                                          l563 1098  
                                        l547 0EEE                                          l491 0666  
                                        l483 053E                                          l467 02FA  
                                        l459 02DE                                          l636 5B9A  
                                        l396 139C                                          l708 4F92  
                                        l732 5992                                          l724 50C0  
                                        l572 1272                                          l580 122E  
                                        l556 10E0                                          l564 10BE  
                                        l548 0F10                                          l492 0790  
                                        l484 055C                                          l476 0376  
                                        l637 5B82                                          l397 13AC  
                                        l725 50D2                                          l661 5D98  
                                        l645 42CA                                          l581 1250  
                                        l573 1186                                          l565 110A  
                                        l557 1002                                          l549 0F32  
                                        l485 057C                                          l477 03E8  
                                        l398 13B6                                          l750 54B6  
                                        l582 12A2                                          l566 1160  
                                        l494 06F8                                          l591 285E  
                                        l647 4342                                          l495 0706  
                                        l592 27CE                                          l672 3E62  
                                        l648 4300                                          l584 12BA  
                                        l576 11A6                                          l568 1180  
                                        l593 2898                                          l585 12C0  
                                        l577 11C8                                          l569 117C  
                                        l497 0744                                          l489 063C  
                                        l850 4018                                          l594 27DE  
                                        l666 3DC2                                          l690 4BC4  
                                        l738 57D4                                          l658 5D86  
                                        l578 11EA                                          l498 0748  
                                        l851 3F68                                          l595 27EE  
                                        l739 57E6                                          l579 120C  
                                        l852 3FD2                                          l596 27FE  
                                        l684 4B58                                          _BDT 000400  
                                        l941 5362                                          l845 4000  
                                        l853 3FDA                                          l597 280E  
                                        l669 3E54                                          l942 535E  
                                        l846 3F66                                          l598 281E  
                                        l686 4B7C                                          l855 3FE0  
                                        l599 282E                                          l679 390A  
                                        _CKE 007E3E                                          l880 3B56  
                                        l688 4BA0                                          l882 3B84  
                                        l946 538A                                          l938 5368  
                                        l947 538C                                          l884 3BD4  
                                        l885 3BFC                                          _CKP 007E34  
                                        _GIE 007F97                                 __CFG_CPB$OFF 000000  
                    ?_oled_initialDispayLine 0001                                          _PR2 000FBB  
                               __CFG_CPD$OFF 000000                           _moteJoiningProcess 138E  
                                        _UIE 000F64                                          _UIR 000F65  
                            _timer1ReloadVal 003C                                          _log 02E8  
                                 _USBSuspend 5E20                                 ___awmod@sign 0065  
               __end_of_moteApp_clearBuffers 4BDC                 __end_of_moteApp_clearCommand 617E  
                   __end_ofi2_oled_writeData 6118                    i2oled_putChar@station_dot 0003  
                       USBStdSetCfgHandler@i 0016                              _TMR2_Initialize 60F0  
                                        prod 000FF3                                          tosl 000FFD  
                                        wreg 000FE8                               _USBDeviceTasks 2DE8  
                             _USBDeviceState 00EC                                 ___flmul@aexp 0085  
                               ___flmul@bexp 0086                                 ___flmul@sign 0080  
                               ___flmul@temp 008B                                 ___flmul@prod 0087  
                      moteApp_delayms@length 0060                 MOTEapp_SetDataRateSetting@dr 0064  
                      ??_USBCtrlTrfRxService 0012                     __size_ofi2_USBDeviceInit 012E  
                             ??_getsUSBUSART 006A                                 ?_EUSART_Read 0001  
                   USBEnableEndpoint@options 0009                                 __CFG_LVP$OFF 000000  
                        ?_moteJoiningProcess 0078                                 ___fltol@exp1 0069  
                                       l1040 4D9A                                         l1032 4648  
                                       l1033 46C2                                         l1045 50FA  
                                       l1215 5AA6                                         l1055 5ED2  
                                       l1216 5AA4                                         l1225 59FC  
                                       l1218 5ACE                                         l1226 5A20  
                                       l1066 5E8C                                         l2211 2A5C  
                                       l1227 5A1E                                         l1243 58F2  
                                       l2220 2AC8                                         l1333 607E  
                                       l2221 2ACC                                         l2213 2A66  
                                       l2231 2B52                                         l2223 2B0C  
                                       l2215 2A7E                                         l2232 2B56  
                                       l2224 2AEA                                         l2216 2A88  
                                       l2217 2AB6                                         l2209 2A72  
                                       l2322 480E                                         l2219 2B74  
                                       l2227 2B38                                         l2323 481C  
                                       l2315 47B4                              _timer3ReloadVal 003A  
                                       l2228 2B16                                         l2324 4832  
                                       l2316 47C8                                         l2181 44F4  
                                       l2318 47E6                                         l2430 527C  
                                       l2183 44FC                                         l2191 5F04  
                                       l2319 47DA                                         l1551 5A4C  
                                       l2431 5274                                         l2184 4528  
                                       l2185 4554                                         l2186 452E  
                                       l2434 5294                                         l2179 457A  
                                       l2435 529E                                         l2427 525A  
                                       l2700 1DEA                                         l2436 52AC  
                                       l2428 5266                   USBConfigureEndpoint@handle 0007  
                                       l2701 1DF8                                         l2710 1E58  
                                       l2702 1DFC                                         l2720 1F3C  
                                       l2713 1EF2                                         l2705 1E6A  
                                       l2801 1C86                                         l2730 1FAC  
                                       l2722 1F46                                         l2706 1E30  
                                       l2802 1CA4                                         l2715 1F02  
                                       l1916 5BDC                                         l2660 58B8  
                                       l2484 3CB2                                         l2476 3C22  
                                       l2580 59DA                                         l1917 5BDA  
                                       l2661 58B0                                         l2709 1E54  
                                       l2485 3CA6                                         l2581 59E2  
                                       l1854 2F60                                         l2806 5816  
                                       l2814 4C4C                                         l2734 1FD2  
                                       l2718 1F26                                         l2478 3C8E  
                                       l2830 299E                                         l2807 580C  
                                       l2815 4BDE                                         l2735 1FDA  
                                       l2727 1F66                                         l2751 20B0  
                                       l2487 3CCE                                         l2479 3C7E  
                                       l2831 2986                                         l2823 2920  
                                       l2680 5CCA                                         l1856 2F9A  
                                       l2664 58D0                                         l2816 4C44  
                                       l2736 1FDC                                         l2744 202A  
                                       l2824 2930                                         l2576 59C4  
                                       l2681 5CB8                                         l1857 2F88  
                                       l2665 58DA                                         l2761 21BA  
                                       l2753 20D8                                         l2745 2026  
                                       l2833 29D0                                         l2825 294E  
                                       l2577 59BE                                         l2770 2236  
                                       l2762 219C                                         l2754 2186  
                                       l2834 29C4                                         l2674 588C  
                                       l1859 2FC2                                         l2771 225A  
                                       l2755 2136                                         l2827 2960  
                                       l2675 586A                                         l2692 1D34  
                                       l2772 2284                                         l2756 215E  
                                       l2748 206A                                         l2780 19AA  
                                       l2828 2954                                         l2693 1D30  
                                       l2773 2290                                         l2749 2066  
                                       l1894 436A                                         l2774 2292  
                                       l2758 2184                                         l2790 1BAA  
                                       l2782 19DA                                         l2838 29EE  
                                       l2695 1D90                                         l2687 1CEC  
                                       l2783 19D6                                         l2839 2A20  
                                       l1896 4394                                         l2696 1D54  
                                       l2688 1CE8                                         l2768 21F2  
                                       l2784 19EA                                         l2785 1A08  
                                       l1898 43F0                                         l2778 199A  
                                       l2699 1E0C                                         l2779 1996  
                                       l2796 1C00                                         l2789 1BC8  
                                       l2798 1C44                                         l2799 1C62  
                                       l8251 586A                                         l8077 5ECA  
                                       l9205 2284                                         l8621 58EA  
                                       l7927 4D92                                         l7937 59EA  
                                       l9717 4BDE                                         l9821 55A8  
                                       l9673 4F8A                                         l9771 4B98  
                                       l9747 4B50                                         l8699 54AE  
                                       l9783 4BBC                                         l9759 4B74  
                                       l9871 42C2                                         STR_1 7D1E  
                                       STR_2 7D00                                         STR_3 7D0F  
                                       STR_4 7F3D                                         STR_5 7D8A  
                                       STR_6 7D97                                         STR_7 7CC3  
                                       STR_8 7E70                                         STR_9 7F46  
                            _lightStringSize 00ED                                         _LATD 000F8C  
            __size_of_MOTEapp_TimerBasedTask 0020                                         u7010 1E14  
                                       _PEIE 007F96                                         u7220 1FB8  
                                       u7140 1F4A                                         u7170 1F62  
                                       u6610 590A                                         u8130 57F0  
                                       u8300 4B94                                         u8230 4C0E  
                                       u7430 21EE                                         u8150 599C  
                      ??_USBCtrlTrfTxService 0001                                         u6560 511A  
                                       u8320 4BB8                                         u8410 55FC  
                                       u6580 5148                                         u8260 584C  
                                       u7460 2244                                         u7620 1BFC  
                                       u7470 2268                                         u8510 3E32  
                                       u7710 5280                                         u8190 4FF0  
                                       u6567 5110                                         u8095 5A5C  
                                       _UCFG 000F62                                         u8096 5A5E  
                                       u7560 19F6                                         u8280 4B70  
                                       u6680 54D2                                         u8360 50A8  
                                       u8440 42E6                                         u8530 44E8  
                                       u9090 5334                                         u7650 1C52  
                                       u7570 1B6C                                         u6587 513E  
                                       u7660 1C70                                         u7900 29DA  
                                       u7820 59C8                                         u8380 50DC  
                                       _UEP0 000F6A                                         _UEP1 000F6B  
                                       u7750 3C40                                         u7575 1B62  
                                       u6960 1DC0                                         u8538 44EC  
                                       u9370 18E0                                         u6970 1DD0  
                                       u9610 074C                                         u9530 058A  
                                       u9450 030A                                         u7755 3C36  
                                       _UEIE 000F66                                         u6980 1DD2  
                                       u9700 0A46                                         u8590 2A50  
                                       u7790 3CB8                                         u8680 2B40  
                                       u8840 47EA                                         u8930 33EC  
                                       u9660 0888                                         u8598 2A54  
                                       u8880 58BC                                         _UEIR 000F67  
                                       _UCON 000F60                                         u9780 0DF0  
                                       _TMR0 000FD6                                         _TMR2 000FBC  
                                       _TMR3 000FB2                              _CDCDataInHandle 0034  
     USBStdFeatureReqHandler@current_ep_data 0019                         ??_InterruptTimerUART 001F  
                                       _pDst 0154                                         _main 2CB2  
                   ??i2_USBTransferOnePacket 0005                              _TMR0_StartTimer 6242  
          __end_of_moteApp_add8bToDataBuffer 4636                                         fsr0h 000FEA  
                                       fsr1h 000FE2                                         indf0 000FEF  
                                       fsr2h 000FDA                                         fsr0l 000FE9  
                                       indf1 000FE7                                  _BaudRateGen 0146  
                                       indf2 000FDF                                         fsr1l 000FE1  
                                       fsr2l 000FD9                              _USBDeviceAttach 5BB4  
                                       btemp 005F                                __CFG_BORV$190 000000  
               moteApp_addToDataBuffer@index 0075                                         prodh 000FF4  
                                       prodl 000FF3                         _USBapp_setrxByteFlag 6202  
                                       start 00FE                                __CFG_IESO$OFF 000000  
                            ___fldiv@new_exp 009E                              __end_of_EndLine 619C  
                            _TMR3_Initialize 5F08                                  _storedLight 01F3  
                __end_of_USBapp_exitCDCState 61D4                             __end_of_CMP1_ISR 625A  
                            ?_oled_putString 0072                   __end_of_USBCheckStdRequest 3A40  
                     ??_USBCtrlTrfOutHandler 0014                  __size_of_moteRunningProcess 128C  
                           ?_oled_setDisplay 0001                      ReadyByteFrame@buffer_rx 001C  
                              __CFG_MCLRE$ON 000000                              ?i2_oled_putChar 0003  
                               ___param_bank 000000                    ??_USBStdFeatureReqHandler 0016  
                                _TMRapp_Tick 622A                         ??_moteJoiningProcess 007A  
                     moteApp_delayms@counter 0063                ?_USART_mySetLineCodingHandler 0001  
                     sendDataCommand@appData 0063                            sendCommand@string 0061  
                   ??_USBStdGetStatusHandler 0001                 __end_of_USBapp_getrxByteFlag 6224  
                  __size_of_DATAEE_WriteByte 003C                               ?_USBDeviceInit 0001  
                    __end_of_TMR0_Initialize 5F6A                       _moteApp_getLightString 619C  
                              ?_EUSART_Write 0001               __size_of_OSCILLATOR_Initialize 0016  
             __end_of_oled_initialDispayLine 616E                              ?_oled_writeData 0001  
              __end_of_OSCILLATOR_Initialize 6088                                        l10621 1726  
                                      l10605 1698                                        l10543 14E0  
                                      l10643 17D4                                        l11365 5CB8  
                                      l10671 18AC                                        l10655 1848  
                                      l11545 2F58                                        l11573 2FBA  
                                      l10589 161E                                        l10925 06FE  
                     ??i2_Set_Column_Address 0002                                ___fltol@sign1 0068  
                i2oled_putString@station_dot 0010                              __end_of___almod 4844  
                            __end_of___fladd 1FF8                                        ?_main 0001  
                            __end_of___fldiv 22AE                              __end_of___lbdiv 59E6  
                                      _EEADR 000FA9                                        STR_10 7DF4  
                                      STR_11 7E7C                                        STR_20 7F4F  
                                      STR_12 7E1B                                        STR_21 7FFC  
                                      STR_13 7E01                                        STR_30 7EFC  
                                      STR_14 7E0E                                        STR_22 7A82  
                                      STR_23 7AC7                                        STR_31 7FB8  
                                      STR_15 7EBF                                        STR_16 7F06  
                                      STR_24 7EDE                                        STR_32 7B43  
                                      STR_40 7ABB                                        STR_17 7F58  
                                      STR_25 7F34                                        STR_41 7DE7  
                                      STR_33 7B98                                        STR_18 7F69  
                                      STR_50 7ED4                                        STR_26 7BA9  
                                      STR_34 7AEE                                        STR_42 7ADD  
                                      STR_35 7FBD                                        STR_19 7F71  
                                      STR_51 7E9E                                        STR_43 7D3B  
                                      STR_27 7BFE                                        STR_36 7B43  
                                      STR_60 7F22                                        STR_44 7FF7  
                                      STR_52 7EF2                                        STR_28 7C0F  
                            __end_of___awmod 52B6                                        STR_37 7B98  
                                      STR_53 7FF7                                        STR_61 7E88  
                                      STR_45 7D57                                        STR_29 7B32  
                                      STR_38 7AEE                                        STR_62 7E9E  
                                      STR_70 7EA9                                        STR_54 7D57  
                                      STR_46 7EB4                                        STR_55 7EB4  
                                      STR_39 7EFC                                        STR_63 7F95  
                                      STR_47 7F19                                        STR_71 7C31  
                                      STR_80 7C83                                        STR_56 7F19  
                                      STR_48 7DE7                                        STR_64 7EE8  
                                      STR_72 7E34                                        STR_65 7F8E  
                                      STR_49 7F22                                        STR_73 7D72  
                                      STR_57 7D49                                        STR_81 7BDC  
                                      STR_66 7D3B                                        STR_58 7D3B  
                                      STR_90 7FAA                                        STR_82 7D65  
                                      STR_74 7D2D                                        STR_67 7E93  
                                      STR_59 7E93                                        STR_91 7B54  
                                      STR_75 7B21                                        STR_83 7AA9  
                                      STR_84 7D2D                                        STR_68 7EA9  
                                      STR_76 7B87                                        STR_92 7ACC  
                                      STR_69 7D49                                        STR_93 7FB1  
                                      STR_85 7E64                                        STR_77 7C83  
                                      STR_86 7E4C                                        STR_94 7BBA  
                                      STR_78 7B10                                        STR_95 7FA3  
                                      STR_87 7E40                                        STR_79 7AFF  
                                      STR_88 7D72                                        STR_96 7A96  
                            __end_of___flmul 1CBA                                        STR_89 7FF7  
                                      STR_97 7F9C                                        STR_98 7CB3  
                                      STR_99 7B21            __size_of_USBCtrlEPServiceComplete 00F2  
                            __end_of___fltol 3CE0                              _TMR1_StartTimer 623E  
                            __end_of___lldiv 4EFC                                        u10220 301E  
                                      u10190 2F7C                                        u11207 3494  
                                      u10280 4024                                        u11217 3882  
                                      u10370 2348                                        u11307 5BFC  
                                      u11227 3894            __size_of_MOTEapp_setResponseReady 0006  
                                      u11317 0870                                        u11237 38A6  
                                      u11407 28B2                                        u11327 4F0C  
                                      u11247 38CC                                        _T1CON 000FCD  
                                      u11417 28C4                                        u11337 4F20  
                                      u11257 38DE                       __end_of_USBDeviceTasks 2F1A  
                                      u11427 18E8                                        u11347 4F34  
                                      u11267 38F0                                        u11437 18FA  
                                      u11357 5EB4                                        u11277 3920  
                                      u11447 190C                                        u11367 279E  
                                      u11287 3932                                        _T2CON 000FBA  
                                      u11457 5C2E                                        u11377 27B0  
                                      u11297 3944                                        u11387 27C2  
                                      u11397 28A0                      __end_of_sendDataCommand 4350  
                                      _T3CON 000FB1                    ?_USBCtrlEPServiceComplete 0001  
                            __end_of___lwmod 58E4                    ?_MOTEapp_setResponseReady 0001  
                        oled_putUint8@number 007A                                        i2l923 5602  
                                      i2l917 560E                                        i2l925 5608  
                                      i2l870 5744                                        _UADDR 000F63  
                                      _RCREG 000FAE                                        _RCSTA 000FAB  
                                      _TMR1H 000FCF                                        _TMR3H 000FB3  
                                      _TMR1L 000FCE                                        _TMR3L 000FB2  
                                      _SPBRG 000FAF                                        _TRISD 000F95  
    moteApp_add8bToDataBuffer@bufferLocation 0066                                        _USTAT 000F61  
                                      _TXREG 000FAD                                        _TXSTA 000FAC  
                           ?i2_oled_clearRow 0001                                __CFG_WRT0$OFF 000000  
         __size_of_USBCtrlEPAllowStatusStage 00C4                              __end_of_delayms 5C1A  
                              __CFG_WRT1$OFF 000000                                __CFG_WRT2$OFF 000000  
                              __CFG_WRT3$OFF 000000                                  ?_TMR0_Clear 0001  
                             __CFG_EBTR0$OFF 000000                               __CFG_FCMEN$OFF 000000  
                             __CFG_EBTR1$OFF 000000                               __CFG_EBTR2$OFF 000000  
                             __CFG_EBTR3$OFF 000000              __end_of_USBCtrlEPAllowDataStage 498A  
                          oled_putChar@index 006B                             __end_of_TMR0_ISR 624A  
                           __end_of_TMR1_ISR 61B4                                        _sd000 79B4  
                                      _sd001 796E              service_pushbutton@Release_Timer 00E4  
                                      _sd002 793A                                __CFG_WRTB$OFF 000000  
                           __end_of_TMR3_ISR 5FA8                                __CFG_WRTC$OFF 000000  
                              __CFG_WRTD$OFF 000000                              _DATAEE_ReadByte 6088  
                             __CFG_EBTRB$OFF 000000                                   i2memset@p1 0001  
                                      _n_bit 005C                                        _light 015A  
                        _clearInterruptPinRX 61B4                                        _stops 015F  
                             __pbitbssCOMRAM 02E8                      __end_of_TMR1_Initialize 5C7E  
                               _runningState 00F3                                        pclath 000FFA  
                                      tablat 000FF5                                        plusw2 000FDB  
                          __end_of_CDCInitEP 55A2                   oled_setDisplay@displayType 0061  
                  i2Set_Page_Address@address 0002                                        status 000FD8  
                             __CFG_T3CMX$RC0 000000                                        wtemp6 0060  
                            _TMR2_StartTimer 623A                              __end_of_strncmp 4C68  
                            ___lbdiv@divisor 0060                               __CFG_ICPRT$OFF 000000  
                      ?_USBapp_setrxByteFlag 0001                        i2oled_putString@index 0012  
                           __end_ofi2_memset 5DF6                              ___lbdiv@counter 0062  
                         __size_ofi2___lbdiv 003A                           __size_ofi2___awmod 0070  
                               _m10SecTicker 0158                 __end_of_moteApp_getTempValue 59A8  
               __size_ofi2_oled_writeCommand 0014                              putUSBUSART@data 0060  
         USART_mySetLineCodingHandler@dwBaud 000E                 __size_of_USBStdSetCfgHandler 00E2  
                            __initialization 498A                        TMR2_ReadTimer@readVal 0060  
              __size_of_TMRapp_ClearBitFlags 0008                  __size_ofi2_Set_Page_Address 0010  
                                 _InitSwUart 5FC4                                 __end_of_main 2DE8  
                           ?i2_oled_putUint8 0013                        _control_signal_bitmap 015C  
                       ?_clearInterruptPinRX 0001                __size_of_MOTEapp_handlerState 000A  
                     _MOTEapp_TimerBasedTask 5F2A                               ??_EUSART_Write 0060  
                    __end_of_TMR2_Initialize 6104                                 ?_sendCommand 0061  
                ?_INTERRUPT_InterruptManager 0001                    __size_of_USBCtrlEPService 00CE  
                                     ??_main 00BC                                 ?_moduleSleep 0001  
                               ?_moteHandler 0001             __size_of_moteApp_addToDataBuffer 005E  
                            _TMR3_StartTimer 6236                                __activetblptr 000003  
                            ?_USBDeviceTasks 0001                          i2_EUSART_Initialize 5B48  
                  sendDataCommand@dataLength 0065                                  ?_USBSuspend 0001  
                                 _NextUSBOut 00E8                                 ?_reloadTimer 0001  
                             __CFG_SDOMX$RB3 000000                              __CFG_CCP2MX$RC1 000000  
                               _cdc_mem_type 0042             moteApp_convertSensorValue@string 0072  
                    __end_of_TMR0_StartTimer 6246                      __end_of_USBDeviceAttach 5BE8  
                                     _ADCON0 000FC2                                       _ADCON1 000FC1  
                                     _ADCON2 000FC0                             _CDCDataOutHandle 00D6  
                          _getsUSBUSART$6624 006B                                       _ACTCON 000FB5  
                                     STR_100 7B87                                       STR_101 7C83  
                                     STR_110 7C83                                       STR_102 7C63  
                                     STR_103 7C53                                       STR_111 7C20  
                                     STR_104 7C83                                       STR_112 7CD3  
                                     STR_120 7B65                                       STR_121 7F87  
                                     STR_113 7CE2                                       STR_105 7C42  
                                     STR_130 7CE2                                       STR_122 7FC2  
                                     STR_106 7ECA                                       STR_114 7C73  
                                     _ADRESH 000FC4                                       STR_131 7CD3  
                                     STR_115 7C63                                       STR_107 7E51  
                                     STR_123 7DCB                                       STR_132 7C63  
                                     STR_108 7B10                                       STR_124 7FE0  
                                     STR_140 7FCF                                       STR_116 7F80  
                                     STR_133 7C53                                       STR_109 7AFF  
                                     STR_125 7FEC                                       STR_141 7FD3  
                                     STR_117 7F79                                       STR_134 7C83  
                                     STR_126 7FE4                                       STR_150 7FEF  
                                     STR_118 7FFA                                       STR_142 7FD7  
                                     _ADRESL 000FC3                                       STR_127 7FE8  
                                     STR_143 7FDB                                       STR_135 7BED  
                                     STR_151 7BCB                                       STR_119 7B76  
                                     STR_160 7B21                                       STR_144 7FF3  
                                     STR_128 7FEF                                       STR_136 7E58  
                                     STR_152 7C93                                       STR_137 7C73  
                                     STR_129 7C73                                       STR_153 7FC7  
                                     STR_145 7FDB                                       STR_161 7B87  
                                     STR_162 7C83                                       STR_154 7FCB  
                                     STR_146 7FDF                                       STR_138 7FC7  
                                     STR_170 7DCD                                       STR_155 7FCF  
                                     STR_147 7FEB                                       STR_139 7FCB  
                                     STR_171 7DDA                                       STR_163 7CA3  
                                     STR_156 7FD3                                       STR_180 7F71  
                                     STR_148 7FE3                                       STR_164 7D7F  
                                     STR_172 7CF1                                       STR_157 7FD7  
                                     STR_181 7F69                                       STR_149 7FE7  
                                     STR_173 7F2B                                       STR_165 7D8C  
                                     _EEDATA 000FA8                                       STR_174 7A05  
                                     STR_182 7AC7                                       STR_158 7FDB  
                                     STR_166 7D99                                       STR_159 7FF3  
                                     STR_167 7DA6                                       STR_175 7A22  
                                     STR_183 79D3                                       STR_168 7DB3  
                                     STR_176 7A3C                                       STR_184 79B8  
                                     STR_169 7DC0                                       STR_185 7A56  
                                     STR_177 79EE                                       STR_186 7A6C  
                                     STR_178 7A08                                       STR_179 7F58  
                                     STR_187 7F10                                       STR_188 7F61  
                                     STR_189 7E28                                       _EECON2 000FA7  
                            getsUSBUSART@len 0069                                       _T1GCON 000FCC  
                       oled_putUint8@numData 007B                                       _T3GCON 000FB4  
                      __size_of_CDCTxService 0146                                       i2l1040 501A  
                                     i2l2010 4884                                       i2l2003 48C0  
                                     i2l1140 5DC4                                       i2l2100 274A  
                                     i2l2004 4850                      __end_of_TMR3_Initialize 5F2A  
                                     i2l1045 53A0                                       i2l1150 3710  
                                     i2l1231 5D3A                                       i2l1055 5F78  
                                     i2l1151 3716                                       i2l2103 2704  
                                     i2l2007 48D6                                       i2l2031 40F4  
                                     i2l1232 5D36                                       i2l1144 376A  
                                     i2l1152 3724                                       i2l2008 4860  
                                     i2l2032 40EE                                       i2l1153 372C  
                                     i2l1145 36B6                                       i2l2105 2756  
                                     i2l2009 4866                                       i2l2033 408E  
                                     i2l2017 5964                                       i2l2025 5D08  
                                     i2l1146 36DA                                       i2l2018 5962  
                                     i2l2026 5D06                                       i2l1148 3786  
                                     i2l1156 373A                                       i2l2060 3DB6  
                                     i2l2052 3D10                                       i2l2044 566A  
                                     i2l1237 5D48                                       i2l1157 375C  
                                     i2l1149 36EA                                       i2l2053 3D16  
                                     i2l2054 3D90                                       i2l2046 56B2  
                                     i2l2070 3978                                       i2l1239 5D6A  
                                     i2l2055 3D56                                       i2l2071 397E  
                                     i2l2160 4724                                       i2l2072 3984  
                                     i2l2057 3D76                                       i2l2161 4732  
                                     i2l2073 3998                                       i2l2162 4750  
                                     i2l2090 25EC                                       i2l2074 399E  
                                     i2l2163 4768                                       i2l2091 2604  
                                     i2l2067 39FC                                       i2l1291 0092  
                                     i2l2084 253C                                       i2l2076 39A4  
                                     i2l2068 396E                                       i2l1292 00A2  
                                     i2l1284 0060                                       i2l2157 4772  
                                     i2l2093 2684                                       i2l2085 2540  
                                     i2l2077 39C2                                       i2l1285 006C  
                                     i2l2430 52EC                                       i2l2158 470C  
                                     i2l2078 39DE                                       i2l1294 00AE  
                                     i2l2431 52E4                                       i2l2095 264E  
                                     i2l2087 25AA                                       i2l1295 00B2  
                                     i2l1287 007C                                       i2l2096 266A  
                                     i2l2601 4EDC                                       i2l2089 25EA  
                                     i2l1289 0088                                       i2l2434 5304  
                                     i2l2602 4EEA                                       i2l2098 26CA  
                                     i2l2435 530E                                       i2l2427 52CA  
                                     i2l2099 26D6                                       i2l2436 531C  
                                     i2l2428 52D6                                       i2l1930 493A  
                                     i2l2580 5B04                                       i2l1684 5F9C  
                                     i2l1924 4212                                       i2l1932 4956  
                                     i2l2581 5B0C                                       i2l1941 3620  
                                     i2l1942 35CA                                       i2l1854 308C  
                                     i2l1870 2E32                                       i2l2576 5AEE  
                                     i2l1960 3EE4                                       i2l1936 4B18  
                                     i2l2680 5DE4                                       i2l1856 30C8  
                                     i2l1872 2E56                                       i2l2577 5AE8  
                                     i2l2681 5DD4                                       i2l1857 30B4  
                                     i2l1865 2DFE                                       i2l1970 31C8  
                                     i2l1890 5A7E                                       i2l1946 3646  
                                     i2l1882 2ED6                                       i2l1874 2E66  
                                     i2l1866 2E0A                                       i2l1963 3F5C  
                                     i2l1955 3EB0                                       i2l1971 31A6  
                                     i2l1859 30EE                                       i2l1875 2E70  
                                     i2l1867 2E12                                       i2l1964 3F24  
                                     i2l1884 2EF6                                       i2l1876 2E94  
                                     i2l2597 4EA8                                       i2l1957 3EBA  
                                     i2l1973 323C                                       i2l1877 2EA0  
                                     i2l1869 2E26                                       i2l2598 4E9C  
                                     i2l1974 3222                                       i2l1894 4424  
                                     i2l1990 2C9A                                       i2l1982 3A8A  
                                     i2l1886 2F12                                       i2l1959 3F1C  
                                     i2l1991 2B8A                                       i2l1879 2EB0  
                                     i2l1896 444E                                       i2l1984 3AFE  
                                     i2l1889 5A70                                       i2l1993 2B9E  
                                     i2l1898 44AA                                       i2l1994 2C2C  
                                     i2l1996 2C34                                       i2l1997 2C8A  
                                     i2l1999 2C92                                       i2l8121 3EBA  
                                     _TABLAT 000FF5                                       i2l9501 5398  
                                     i2l8199 5DD4                        __size_ofi2_oled_clear 001A  
                                     i2l8379 3A82                                       i2l8559 5012  
                                     i2l7969 573C                                    ??_EndLine 0061  
                                     _OSCCON 000FD3                                CDCTxService@i 006A  
                                     _SPBRGH 000FB0                                       _SSPBUF 000FC9  
                           __end_of___xxtofl 2A32                     i2USBTransferOnePacket@ep 0005  
                          ??i2_USBDeviceInit 0009              __size_ofi2_USBTransferOnePacket 00BA  
                       ?i2_EUSART_Initialize 0001                         oled_displayOff@state 0001  
                              oled_putChar@k 006A               __size_of_moteApp_getLightValue 004E  
              __end_of_moteApp_getLightValue 580A                            _shortPacketStatus 004D  
             moteRunningProcess@changeStates 00B5                               __CFG_XINST$OFF 000000  
                       _moteApp_clearBuffers 4B4A                         _moteApp_clearCommand 616E  
                    _moteApp_lightStringSize 6212                 ??_MOTEapp_SetDataRateSetting 0063  
                            USBDeviceTasks@i 001F                   __end_of_Set_Column_Address 5FC4  
                USBStdFeatureReqHandler@pUEP 0017                             __end_of_hexToStr 5D9C  
                        __size_of_TMR0_Clear 0004                     USBTransferOnePacket@data 0061  
                 USBCtrlTrfInHandler@lastDTS 0012                              ??_USBDeviceInit 0068  
                  __size_of_Set_Page_Address 0014                      __end_of_TMR1_StartTimer 6242  
                               ?_putUSBUSART 0060                        ??_clearInterruptPinRX 0001  
                                  ??___almod 0068                                    ??___fladd 0068  
                                     ___wmul 5E4A                                    ??___fldiv 0095  
                                  ??___lbdiv 0061                               __CFG_STVREN$ON 000000  
                                  ??___awmod 0064                     ?_moteApp_setSensorsInput 0001  
                                  ??___flmul 007C                                    ??___fltol 0064  
                                  ??___lldiv 0009                                       _appKey 0100  
                       __end_of_getsUSBUSART 4580                                    ??___lwmod 0064  
                          _USBEnableEndpoint 5A60              __size_of_USBStdGetStatusHandler 00A8  
                        _EUSART_Transmit_ISR 5D0E                                       _memcpy 5858  
                           ?_TMR0_Initialize 0001                                       _memset 5CAE  
                                     clear_0 49E0                                       clear_1 49EC  
                                     clear_2 49F8                                       clear_3 4A04  
                                     clear_4 4A12                                       _parity 0160  
                            ___awmod@divisor 0062                                    ??_delayms 0062  
                            ___awmod@counter 0064                           ?_USBEnableEndpoint 0009  
             ??_USART_mySetLineCodingHandler 000E                                       _status 0051  
                    __end_of_DATAEE_ReadByte 609E                                       _strcmp 580A  
                 __end_of_ADC_TempConversion 3876                __size_of_USBTransferOnePacket 00BE  
                           ?_sendDataCommand 0061                              _moteApp_delayms 5C1A  
                __size_of_service_pushbutton 006E                                 __pdataCOMRAM 005E  
                          __end_ofi2___lbdiv 5B10                            __end_ofi2___awmod 5326  
                               _CDCTxService 2A32                                 i2_oled_clear 6014  
                               __mediumconst 75EE                                       tblptrh 000FF7  
                                     tblptrl 000FF6                                       tblptru 000FF8  
                        ??_USBEnableEndpoint 000A                      __size_of_ReadyByteFrame 0018  
                                  ?_CMP1_ISR 0001                               i2___awmod@sign 0006  
                    __end_of_TMR2_StartTimer 623E                                 _dataRateRead 0054  
                                _CtrlTrfData 000438                                    ??_strncmp 0066  
                           ___lbdiv@dividend 0061                                ?_oled_devInit 0001  
                       ?_EUSART_Transmit_ISR 0001                         _controlTransferState 004C  
                  USBapp_Handler@buttonPress 0078                         _USBapp_getrxByteFlag 621E  
                           ?_TMR1_Initialize 0001                         __CFG_LS48MHZ$SYS48X8 000000  
                 i2oled_putString@start_page 0011          __size_of_MOTEapp_SetDataRateSetting 0162  
                               ___xxtofl@arg 006A                         __size_of_EUSART_Read 003A  
                               ___xxtofl@exp 0069                            _SYSTEM_Initialize 5DF6  
                               ___xxtofl@val 0060                 __size_of_USBapp_handlerState 000A  
         moteApp_getLightValue@escapeCounter 0070                                   __accesstop 0060  
                    __end_of__initialization 4A18                       ??_USBapp_setrxByteFlag 0001  
                            __CFG_PBADEN$OFF 000000                                 ?_test_switch 0001  
                      ??i2_EUSART_Initialize 0001                              _CMP1_Initialize 612C  
                     i2oled_putString@string 000D                           ?_SYSTEM_Initialize 0001  
                         oled_writeData@data 0060                                ___rparam_used 000001  
                              ?_oled_setFont 0060                     __size_of_USBStallHandler 0042  
                                 ___fltol@f1 0060                                ?_oled_putChar 0062  
                      ?_moteApp_clearBuffers 0001                        ?_moteApp_clearCommand 0001  
                        __size_of_USBSuspend 002A                  __size_of_EUSART_FlushBuffer 0042  
                              ?_oled_putint8 0078                               __pcstackCOMRAM 0001  
                  __end_of_USBEnableEndpoint 5A9C                                  ?_InitSwUart 0001  
                           __CFG_nPWRTEN$OFF 000000                                __end_of_sd000 79B8  
                              __end_of_sd001 79A2                                __end_of_sd002 796E  
                               __pidataBANK0 620A                                 __pidataBANK1 625A  
                        ??_SYSTEM_Initialize 0062                      __end_of_TMR3_StartTimer 623A  
                                  ?_TMR0_ISR 0001                                    ?_TMR1_ISR 0001  
                                  ?_TMR3_ISR 0001             __size_of_USBCtrlEPAllowDataStage 009E  
                           _DATAEE_WriteByte 5A24                __size_of_USBConfigureEndpoint 0094  
    __end_of_oled_setContrastControlRegister 60DC     __size_of_oled_setContrastControlRegister 0014  
           ?_oled_setContrastControlRegister 0001            ??_oled_setContrastControlRegister 0061  
            _oled_setContrastControlRegister 60C8                            ?i2_oled_putString 000D  
                __end_of_USBCtrlTrfInHandler 3DBC                             ?_TMR2_Initialize 0001  
                       i2oled_clearRow@index 000E                             ___lbdiv@quotient 0063  
       moteApp_setSensorsInput@escapeCounter 0065                       i2_USBTransferOnePacket 440E  
                            __CFG_PCLKEN$OFF 000000                           ??i2_oled_putString 0012  
                   ?_clearInterruptTimerUART 0001                   i2oled_writeCommand@command 0001  
                             __CFG_nLPBOR$ON 000000                            __end_of_OledFont0 78F7  
                          _CDCTxService$6672 0068                                   _cdc_notice 01D5  
                                  ?i2_memset 0001                                   _cdc_rx_len 00DD  
                          ?i2_oled_writeData 0001                                   _cdc_tx_len 00DC  
                       _moteApp_getTempValue 5968                                   ??_CMP1_ISR 0001  
                            _responsePortNum 01F8                     ??_USBCtrlTrfSetupHandler 001C  
                                 _dataBuffer 01C5                             ?_TMR0_StartTimer 0001  
                         ??i2_oled_writeData 0001                               ??_oled_devInit 0062  
                           ?_USBDeviceAttach 0001                    __end_of_SYSTEM_Initialize 5E20  
                      ??_EUSART_Transmit_ISR 0001                       _USBStdGetStatusHandler 4844  
                              ?_moduleResync 0001                        ?_USBapp_getrxByteFlag 0001  
                       service_pushbutton@bs 0060                                   __pbssBANK0 00BC  
                                 __pbssBANK1 0100                                   __pbssBANK2 0200  
                                 __pbssBANK3 0300                         __end_of_EUSART_Write 5A24  
                    __size_of_TMR2_ReadTimer 000A                             ?_TMR3_Initialize 0001  
                           ??_oled_putString 0077                  oled_regulorResistorSelect@r 0061  
                    moduleResync@escapeEvent 0067                             ??i2_oled_putChar 0005  
                             ??_oled_setFont 0062                 ??_moteApp_convertSensorValue 0074  
                            _periodicUpValue 00FE                    ??_moteApp_lightStringSize 0060  
                __size_of_EUSART_Receive_ISR 0030                          oled_putString@index 0077  
                             ??_oled_putChar 0064                  __size_of_USBWakeFromSuspend 0030  
                                _pBDTEntryIn 00CA                       __size_of_oled_clearRow 0026  
                                 _clearLight 01EE                  __end_of_moteApp_testSensors 35A8  
                   sendDataCommand@byteCount 0067             __end_of_USBCtrlEPServiceComplete 369A  
           __end_of_MOTEapp_setResponseReady 622A                               ??_oled_putint8 007A  
                     oled_putChar@start_page 0063                  __size_of_USBCheckCDCRequest 00B0  
                          __CFG_PLLSEL$PLL3X 000000                           __size_of_oled_init 0030  
                    ?_moteApp_getLightString 0060                             ??_oled_writeData 0060  
                       USBCtrlTrfRxService@i 0012                                 ?_TMRapp_Tick 0001  
                    __size_of_TMR0_StopTimer 0004                                      ?___wmul 0060  
                           ?_TMR1_StartTimer 0001                                   ??_TMR0_ISR 0001  
                                 ??_TMR1_ISR 0001                                   ??_TMR3_ISR 0001  
                    __end_of_moteApp_delayms 5C4C                                      _CM1CON0 000F98  
                    __size_of_USBapp_Handler 00D2                      __size_of_TMRapp_Handler 010C  
                                    ?_memcpy 0060                                      _BAUDCON 000FB8  
                                    ?_memset 0060                                   _device_dsc 79A2  
                  Set_Column_Address@address 0061                     __size_of_oled_displayOff 0008  
                           _USBCtrlEPService 4036                      _moteApp_addToDataBuffer 55A2  
                __size_of_moteApp_toggleLeds 00E8                                   _ep_data_in 00D3  
                    __size_of_ADC_Initialize 001A                                      ?_strcmp 0060  
                           ?_DATAEE_ReadByte 0001                  __end_of_USBCtrlTrfRxService 32A6  
                       __size_of_sendCommand 0034                           _USBCheckStdRequest 395E  
                              _eusartRxCount 00F5                            _configDescriptor1 78F7  
                                    i2l10291 5F70                                      i2l11419 4086  
                                    i2l12413 5626                                      i2l12415 5656  
                                    i2l11459 3084                                      i2l11487 30E6  
                                    i2l11977 2EA8                                    ?___xxtofl 0060  
                                    _RS232cp 00E5                          i2_oled_writeCommand 6118  
                            __CFG_WDTEN$SWON 000000                        ?_moteApp_getTempValue 0063  
                         __size_of_test_leds 006A                                 ??_TMR0_Clear 0001  
                                 ??i2_memset 0007                           __size_of_test_oled 00C6  
                       __size_of_moduleSleep 0026                  __end_of_USBCtrlTrfTxService 3F64  
                       __size_of_moteHandler 026A                          _USBStdSetCfgHandler 3A40  
                                    _OSCCON2 000FD2                                      _TBLPTRH 000FF7  
                                    _TBLPTRL 000FF6                                      _TBLPTRU 000FF8  
                                    _OSCTUNE 000F9B                       __size_of_oled_putUint8 0094  
             USBapp_LEDUpdateStatus@ledCount 0040                              __CFG_WDTPS$8192 000000  
        __size_of_moteApp_convertSensorValue 007E                                      _SSP1ADD 000FC8  
                    __end_of_CMP1_Initialize 613E                               ??_moduleResync 0065  
                        ?_USBCheckStdRequest 0001                         __size_of_reloadTimer 000A  
                           ?_TMR2_StartTimer 0001                 __size_of_USBStdGetDscHandler 013A  
                        __size_of_InitSwUart 001C                                      _UIEbits 000F64  
                                  ?_hexToStr 0001                        ADC_TempConversion@val 00A8  
                                    _UIRbits 000F65                       test_switch@buttonCheck 007B  
            moteRunningProcess@bufferReadPos 00B4                                      _EndLine 618E  
                              _cdc_trf_state 00EB                         DATAEE_WriteByte@bAdd 0061  
                            _countBitsSilent 004E                      __size_of_USBapp_exitCDC 0006  
                __size_of_InterruptTimerUART 00F2                   __end_of_moteRunningProcess 138E  
                     ??_moteApp_clearBuffers 0060                       ??_moteApp_clearCommand 0063  
                 ?_moteApp_add8bToDataBuffer 0066                         ?i2_oled_writeCommand 0001  
                                    _pCDCDst 014E                                      _pCDCSrc 0151  
                      __size_of_getsUSBUSART 00B8               __end_of_moteApp_getLightString 61A8  
                     InterruptTimerUART@mask 0021           __end_of_MOTEapp_SetDataRateSetting 28DE  
                 _MOTEapp_SetDataRateSetting 277C                                      __Hparam 0000  
                       ?_USBStdSetCfgHandler 0001                                    _CDCInitEP 553C  
                    ?_MOTEapp_TimerBasedTask 0001                                      __Lparam 0000  
                 __size_of_USBEnableEndpoint 003C                  USBapp_exitCDCState@usbState 0060  
                        moteHandler@s2Button 00B9                             _Set_Page_Address 60DC  
                       ??_USBCheckStdRequest 001C                 moteRunningProcess@sleepEvent 00AE  
                                    ___almod 4796                           __end_of_TMR0_Clear 624E  
                                    ___fladd 1CBA                            _timerMinTickCount 003E  
              __size_of_USBCtrlTrfOutHandler 005C                  __size_of_moteJoiningProcess 05DA  
                                    ___fldiv 1FF8                                      ___lbdiv 59A8  
                        printfOled@lastValue 00E3                                      ___awmod 5244  
                                    ___flmul 1968                             ?_TMR3_StartTimer 0001  
                                    ___fltol 3C02                                      ___lldiv 4E7A  
                           ??_USBDeviceTasks 001F                              __size_of___wmul 0028  
                          ??_USBStallHandler 0001                                      ___lwmod 58A0  
                       oled_putint8@negative 007A           oled_setContrastControlRegister@mod 0061  
                       __size_of_putUSBUSART 0022                                      __pcinit 498A  
                         getsUSBUSART@buffer 0067                              __size_of_memcpy 0048  
               __size_of_USBapp_exitCDCState 000A                              __size_of_memset 0030  
                  __end_of_configDescriptor1 793A                                      __ramtop 0800  
                                    _delayms 5BE8                            hexToStr@character 0060  
                                    __ptext0 2CB2                                      __ptext1 5160  
                                    __ptext2 33B2                                      __ptext3 4104  
                                    __ptext4 5402                                      __ptext5 51D2  
                                    __ptext6 3876                                      __ptext7 5BE8  
                                    __ptext8 34B0                                      __ptext9 22AE  
                   __size_of_oled_setDisplay 0028                                      _inPipes 00C4  
                _USBDeferOUTDataStagePackets 0043                                    _T0CONbits 000FD5  
            __end_of_moteApp_lightStringSize 6218                              __size_of_strcmp 004E  
                  moteRunningProcess@counter 00B3                             oled_setFont@font 0060  
                                    _countRX 004F                                    _T1CONbits 000FCD  
                      _OSCILLATOR_Initialize 6072                                      _exitUSB 00F9  
                               ??_USBSuspend 0016                                _oled_clearRow 5EC0  
                                  _T2CONbits 000FBA                      __size_of_InterruptPinRX 002E  
              __size_ofi2_Set_Column_Address 0016              moteApp_add8bToDataBuffer@number 0069  
                                 ??___xxtofl 0064                                    _T3CONbits 000FB1  
                                 _oled_clear 5FE0                             ___awmod@dividend 0060  
                   ??_PIN_MANAGER_Initialize 0060                 __end_of_TMRapp_ClearBitFlags 6202  
                               _LastRS232Out 00E6                               _ReadyByteFrame 602E  
                            i2_USBDeviceInit 304A                             i2USBDeviceInit@i 0009  
                          __end_of_oled_init 5CAE                                      _rx_data 0050  
               __end_of_MOTEapp_handlerState 61E8                       ??_USBapp_getrxByteFlag 0060  
                         __end_of_USB_CD_Ptr 75F7                   moteRunningProcess@readByte 00B0  
                 __size_of_SYSTEM_Initialize 002A              __size_of_USBCtrlTrfSetupHandler 0084  
                                 ??_hexToStr 0060                                      _strncmp 4BDC  
                       end_of_initialization 4A18                                 _getsUSBUSART 44C8  
              sendDataCommand@byteCount_1627 0068                           __end_of_USB_SD_Ptr 75F5  
                                    memcpy@d 0066                                      memcpy@n 0064  
                                    memcpy@s 0068                     __size_ofi2_oled_clearRow 0020  
                        _pBDTEntryEP0OutNext 0036                                      memset@c 0062  
                                    memset@n 0064                                      memset@p 0066  
            _dummy_encapsulated_cmd_response 01DF                                    i2u1011_40 40D4  
                                  i2u1014_40 30A8     moteApp_convertSensorValue@convertedValue 0077  
                                  i2u1017_40 314A                                    i2u1044_40 36A4  
                                  i2u1045_48 36A6                     ?_USBStdFeatureReqHandler 0001  
                                  i2u1048_44 36FA                                    i2u1048_45 36F6  
                                  i2u1078_40 2F16                        ??i2_oled_writeCommand 0001  
             __end_of_MOTEapp_TimerBasedTask 5F4A                            _EUSART_Initialize 5B10  
                          _oled_powerControl 614E                                   _rxByteFlag 00E9  
                 __end_ofi2_Set_Page_Address 618E                        ??_USBStdSetCfgHandler 0016  
                            ___lldiv@divisor 0005                         __size_of_test_switch 00FE  
                                 ?_CDCInitEP 0001                              ___lldiv@counter 000D  
                          __end_of_test_leds 546C                            __end_of_test_oled 41CA  
             moteJoiningProcess@changeStates 0078                           ?_EUSART_Initialize 0001  
                         ?_oled_powerControl 0001                                _oled_putUint8 4A22  
                         __end_of_USBSuspend 5E4A               ??_USBapp_CdcEmulatorInitialize 000D  
                    _USBCtrlEPAllowDataStage 48EC                                    _RCSTAbits 000FAB  
                   ??_moteApp_setLightString 006D                           test_switch@timeout 0079  
                                    postdec1 000FE5                                      postdec2 000FDD  
                                    postinc0 000FEE                                      postinc2 000FDE  
                  ??_moteApp_addToDataBuffer 0075               moteApp_setLightString@stingPos 006D  
                       __end_of_oled_devInit 4F7C                     _USBCtrlEPServiceComplete 35A8  
                    moteApp_toggleLeds@state 0064                                   _responseId 0130  
                                 _retryCount 0052                             ?_moteApp_delayms 0060  
                              _randomPortNum 00F1                     _MOTEapp_setResponseReady 6224  
                                    strcmp@r 0065                   _USBStatusStageEnabledFlag1 0046  
                 _USBStatusStageEnabledFlag2 0045                                _dataRateValue 00FC  
                        _USBapp_handlerState 61D4                          ??_EUSART_Initialize 0060  
                        ??_oled_powerControl 0061                           USBEnableEndpoint@p 000A  
                                  _PORTAbits 000F80                                    _PORTBbits 000F81  
                                  _PORTCbits 000F82                      oled_putUint8@start_page 0079  
                             ?_oled_clearRow 0001                                   _test_comms 51D2  
                     ??_moteApp_getTempValue 0065                       __end_of_ReadyByteFrame 6046  
                   __size_ofi2_oled_putUint8 0086                         __end_of_oled_setFont 60C8  
                                ___fladd@grs 0073                           _Set_Column_Address 5FA8  
                       __end_of_oled_putChar 4DF6                                ___xxtofl@sign 0068  
                                  _TRISAbits 000F92                                    _TRISBbits 000F93  
                                  _TRISCbits 000F94                                    _TRISEbits 000F96  
                          ??_oled_displayOff 0061                        __size_of_EUSART_Write 003E  
                       __end_of_oled_putint8 46E6                           _BothEP0OutUOWNsSet 0049  
           __size_of_moteApp_setSensorsInput 0078                                ?_test_powerup 0001  
                                ___fldiv@grs 00A0                                  ___fldiv@rem 009A  
                                  i2___lbdiv 5AD6                             ?_CMP1_Initialize 0001  
                                  i2___awmod 52B6                    USBConfigureEndpoint@EPNum 0006  
                 ?_USBCtrlEPAllowStatusStage 0001                     __end_of_DATAEE_WriteByte 5A60  
                        ?_Set_Column_Address 0001          USER_USB_CALLBACK_EVENT_HANDLER@size 0012  
                             _TMR2_ReadTimer 61C0                                    _USTATcopy 005A  
                          __size_of_CMP1_ISR 0004                         ?_USBapp_handlerState 0001  
                         _ADC_TempConversion 378C                     oled_putString@start_page 0076  
                                _CM1CON0bits 000F98                                  ___flmul@grs 0081  
         __end_of_moteApp_convertSensorValue 4FFA                   _moteApp_convertSensorValue 4F7C  
                  __end_of_EUSART_Initialize 5B48                    __end_of_oled_powerControl 615E  
                    oled_putint8@station_dot 0078                 ??_oled_regulorResistorSelect 0061  
               __end_of_USBTransferOnePacket 440E                                  _CM2CON1bits 000F9A  
                                  _TXSTAbits 000FAC                  __end_of_clearInterruptPinRX 61C0  
                             ?_oled_putUint8 0078                            putUSBUSART@length 0062  
                        ?_ADC_TempConversion 0001                     ??_oled_initialDispayLine 0061  
                             _TMR0_StopTimer 624E                                 ??_InitSwUart 0060  
                      _moteApp_getLightValue 57BC                       _USBCtrlTrfSetupHandler 4DF6  
                       ??_Set_Column_Address 0061                      ?i2_USBTransferOnePacket 0001  
                       __end_of_moduleResync 4D72                        __end_of_USBDeviceInit 304A  
                             _TMRapp_Handler 32A6                               _USBapp_Handler 3F64  
                       __size_of_TMRapp_Tick 0006          MOTEapp_getModuleResponse@bufferByte 0062  
                             __end_of___wmul 5E72                                __pidataCOMRAM 625D  
                               _EUSART_Write 59E6                        sendDataCommand@string 0061  
                          __size_of_TMR0_ISR 0004                      __end_ofi2_USBDeviceInit 3178  
                          __size_of_TMR1_ISR 000C                   __end_of_service_pushbutton 5394  
                          __size_of_TMR3_ISR 001E                               _ADC_Initialize 5FFA  
                moteApp_clearBuffers@counter 0060                      moteApp_GoToSleep@status 006E  
                                  i2memset@c 0003                                    i2memset@n 0005  
                                  i2memset@p 0007                               __end_of_memcpy 58A0  
                     ?_OSCILLATOR_Initialize 0001                               __end_of_memset 5CDE  
                     ReadyByteFrame@numBytes 001E                            _USBBusIsSuspended 015D  
                   oled_writeCommand@command 0060                              ?_ReadyByteFrame 001C  
                             __end_of_strcmp 5858                                  ?_oled_clear 0001  
                        start_initialization 498A                         ??_ADC_TempConversion 00A6  
                    ?_USBStdGetStatusHandler 0001                USBCtrlTrfRxService@byteToRead 0013  
                             ??_test_powerup 00AD          __size_of_oled_regulorResistorSelect 0010  
                   __size_of_TMR0_Initialize 0020              __size_of_PIN_MANAGER_Initialize 0054  
                          ??_oled_setDisplay 0061                                ??_EUSART_Read 0060  
                     __end_of_TMR2_ReadTimer 61CA              __end_of_moteApp_addToDataBuffer 5600  
                                _cdc_data_rx 000540                                  _cdc_data_tx 000500  
                __end_ofi2_EUSART_Initialize 5B80                            __size_ofi2_memset 002C  
                                  _OledFont0 75F7                                   ?i2___lbdiv 0001  
                                 ?i2___awmod 0001                 __end_of_USBConfigureEndpoint 4B4A  
                  __size_ofi2_oled_putString 006E              __end_of_USBStdFeatureReqHandler 277C  
                   __size_of_sendDataCommand 00C2                           __end_of_InitSwUart 5FE0  
                      ??_USBapp_handlerState 0060              moteApp_convertSensorValue@index 0079  
          __end_of_USBCtrlEPAllowStatusStage 428E                                _periodicState 00FA  
           __size_of_clearInterruptTimerUART 0006                               _USBapp_exitCDC 6218  
                   __end_of_USBCtrlEPService 4104         __end_of_USART_mySetLineCodingHandler 5712  
      __size_of_USART_mySetLineCodingHandler 005A                 _USART_mySetLineCodingHandler 56B8  
                 __end_of_EUSART_FlushBuffer 5926                          DATAEE_ReadByte@bAdd 0060  
                         i2___lbdiv@dividend 0002                __size_of_USBapp_setrxByteFlag 0008  
                              _moteModeState 0055                    ??_USBCtrlEPAllowDataStage 0002  
                     __end_of_TMR0_StopTimer 6252                    __size_ofi2_oled_writeData 0014  
                                ??_CDCInitEP 000D                               USBDeviceInit@i 0068  
                         _periodicTimerValue 00FD                       _pBDTEntryEP0OutCurrent 0038  
                   __size_of_TMR1_Initialize 0032                            ??i2_oled_clearRow 000D  
                    USBTransferOnePacket@dir 0060                      USBTransferOnePacket@len 0063  
                     __end_of_USBapp_Handler 4036                       __end_of_TMRapp_Handler 33B2  
             __end_ofi2_USBTransferOnePacket 44C8                         _TMRapp_ClearBitFlags 61FA  
                                   ??___wmul 0064              __size_of_moteApp_setLightString 006A  
                        _USBStdGetDscHandler 2B78                         _MOTEapp_handlerState 61DE  
                     __end_of_ADC_Initialize 6014                                  __pdataBANK0 00F9  
                                __pdataBANK1 01FB                              i2oled_putChar@k 000B  
                                   ??_memcpy 0066                                     ??_memset 0066  
                            ??_oled_clearRow 006C              MOTEapp_TimerBasedTask@timerTask 0060  
                        _moduleResonseBuffer 0165                                     ??_strcmp 0064  
                                ?_test_comms 0001                    oled_putString@station_dot 0075  
                                  ___fladd@a 0064                                    ___fladd@b 0060  
                             _InterruptPinRX 5D9C                       _USBActiveConfiguration 005B  
             __end_of_USBStdGetStatusHandler 48EC                                    ___fldiv@a 0091  
                                  ___fldiv@b 008D                  __end_of_EUSART_Transmit_ISR 5D3E  
                                  ___flmul@a 0078                                    ___flmul@b 0074  
                                __pbssCOMRAM 0034                   service_pushbutton@PB_Timer 014A  
                              __pcstackBANK0 0060                 __size_of_USBCtrlTrfInHandler 00DC  
                         i2___lbdiv@quotient 0004                     __size_of_TMR2_Initialize 0014  
                   __end_of_Set_Page_Address 60F0                            __size_of___xxtofl 0154  
                            ?_TMR2_ReadTimer 0001                                  _activeState 00F4  
                       ?_USBStdGetDscHandler 0001                          i2oled_clearRow@page 000D  
                     __end_of_USBapp_exitCDC 621E                            ??i2_oled_putUint8 0015  
         __size_of_MOTEapp_getModuleResponse 0066                   ?_MOTEapp_getModuleResponse 0001  
                  ADC_TempConversion@tempRaw 00A6                   __end_of_EUSART_Receive_ISR 5D6E  
             moteRunningProcess@messageReady 00AD                                     ?_EndLine 0001  
                        _USBapp_exitCDCState 61CA                   __end_of_USBWakeFromSuspend 5D0E  
                 __size_of_EUSART_Initialize 0038                   __size_of_oled_powerControl 0010  
                          __size_of_hexToStr 002E                              _USBStallHandler 5926  
                               _pBDTEntryOut 0140                          __end_of_EUSART_Read 5AD6  
                       i2oled_writeData@data 0001                   __end_of_USBCheckCDCRequest 4796  
                            ??_oled_putUint8 007A                         oled_putString@string 0072  
                   __size_of_TMR0_StartTimer 0004                     __size_of_USBDeviceAttach 0034  
                                  _appDevEui 0120                              ?_TMR0_StopTimer 0001  
                ??_moteApp_add8bToDataBuffer 0067                            _oled_writeCommand 605C  
                      __size_of_oled_devInit 0080                      oled_putChar@station_dot 0062  
                ?_MOTEapp_SetDataRateSetting 0001                       _PIN_MANAGER_Initialize 5768  
                     ?_moteApp_getLightValue 006E                          __size_of_oled_clear 001A  
                      ?_TMRapp_ClearBitFlags 0001                              _messageReceived 0164  
                   __size_of_TMR3_Initialize 0022                         EUSART_Read@readValue 0060  
            __size_of_oled_initialDispayLine 0010                              ?_TMRapp_Handler 0001  
                            ?_USBapp_Handler 0001                                    __pintcode 0008  
                         ?_oled_writeCommand 0001                                __pmediumconst 75EE  
                                   ?___almod 0060                                     ?___fladd 0060  
                      ?_MOTEapp_handlerState 0001                                     ?___fldiv 008D  
                                  __ptext100 5FC4                                    __ptext101 5B10  
                                   ?___lbdiv 0060                                    __ptext110 5CDE  
                                  __ptext102 612C                                    __ptext111 5E20  
                                  __ptext103 5FFA                                    __ptext120 4844  
                                  __ptext112 5926                                    __ptext104 61DE  
                                  __ptext121 2B78                                    __ptext113 4036  
                                  __ptext105 6088                                    __ptext130 565C  
                                  __ptext122 2518                                    __ptext114 4DF6  
                                  __ptext131 3178                                    __ptext123 5600  
                                  __ptext115 35A8                                    __ptext107 6202  
                                  __ptext140 61A8                                    __ptext132 41CA  
                                  __ptext124 5712                                    __ptext116 48EC  
                                  __ptext108 2DE8                                    __ptext141 6246  
                                  __ptext133 3CE0                                    __ptext125 553C  
                                  __ptext117 395E                                    __ptext109 304A  
                                  __ptext150 5394                                    __ptext142 369A  
                                  __ptext134 3E90                                    __ptext126 440E  
                                  __ptext118 3A40                                    __ptext151 4FFA  
                                  __ptext143 6014                                    __ptext135 56B8  
                                  __ptext127 5A60                                    __ptext119 5DCA  
                                  __ptext160 61E8                                    __ptext152 6104  
                                  __ptext144 5F6A                                    __ptext136 5B48  
                                  __ptext128 4AB6                                    __ptext161 61B4  
                                  __ptext153 617E                                    __ptext145 6230  
                                  __ptext137 4E7A                                    __ptext129 46E6  
                                  __ptext162 5D0E                                    __ptext154 609E  
                                  __ptext146 624A                                    __ptext138 622A  
                                  __ptext163 5D3E                                    __ptext155 6118  
                                  __ptext147 624E                                    __ptext139 5F8A  
                                  __ptext164 6256                                    __ptext156 5AD6  
                                  __ptext148 602E                                    __ptext165 0000  
                                  __ptext157 52B6                                    __ptext149 4C68  
                                  __ptext158 5D9C                                    __ptext159 6252  
                                   ?___awmod 0060                                     ?___flmul 0074  
                                   ?___fltol 0060                   __end_of_moteApp_toggleLeds 395E  
                                   ?___lldiv 0001                                     ?___lwmod 0060  
                            ?_ADC_Initialize 0001                        __size_of_oled_setFont 0014  
                               _eusartRxHead 00DF                                ??_sendCommand 0063  
          moteApp_getTempValue@escapeCounter 0065                                 _eusartTxHead 00E2  
                               _eusartRxTail 00DE                 __size_of_moteApp_testSensors 00F8  
                               _eusartTxTail 00E1                         ?_USBapp_exitCDCState 0001  
                      __size_of_oled_putChar 0084                       __end_of_InterruptPinRX 5DCA  
                         _moteRunningProcess 0102                            _moduleBufferIndex 00F2  
                                   ?_delayms 0060                                    _buffer_rx 0300  
               ??_INTERRUPT_InterruptManager 0022                             ___almod@dividend 0060  
                           ?i2_USBDeviceInit 0001                       moteHandler@readMessage 00BB  
                        ??_oled_writeCommand 0060                                ??_moduleSleep 0063  
                              ??_moteHandler 00B6                        __size_of_oled_putint8 00B0  
                    _eusartTxBufferRemaining 00E0                         _USBTransferOnePacket 4350  
                                  _mainState 0057                     __size_of_TMR1_StartTimer 0004  
                              ??_reloadTimer 0001                      _moteApp_setSensorsInput 5074  
                     moteHandler@buttonPress 00BA                          ?_moteRunningProcess 00AC  
               __end_of_USBCtrlTrfOutHandler 56B8                                    _minTicker 0163  
                   reloadTimer@setTimerValue 0001                        ??_USBStdGetDscHandler 0001  
                                   _CMP1_ISR 6256                       _moteApp_setLightString 546C  
                                _ep_data_out 00D0                                  ??i2___lbdiv 0002  
                                ??i2___awmod 0005                   i2oled_putUint8@station_dot 0013  
               __size_of_USBCtrlTrfRxService 012E                                    _secTicker 00F0  
                            ?_USBapp_exitCDC 0001                USBConfigureEndpoint@direction 0001  
                   __size_of_DATAEE_ReadByte 0016                                     ?_strncmp 0060  
                 __end_of_InterruptTimerUART 378C                          oled_putint8@numData 007B  
                   ?_moteApp_lightStringSize 0001                                 _oled_devInit 4EFC  
         __end_of_oled_regulorResistorSelect 614E                   _oled_regulorResistorSelect 613E  
                             _eusartRxBuffer 0200                moteApp_addToDataBuffer@string 0072  
                          _dataRateSelection 01FD                             _timerMsTickCount 00D8  
                                  _oled_init 5C7E                 __size_of_USBCtrlTrfTxService 00D4  
                          ??_TMR0_Initialize 0060            __end_of_MOTEapp_getModuleResponse 553C  
                             _eusartTxBuffer 0240                     i2oled_putChar@start_page 0004  
                             ___wmul@product 0064                                     _IOCBbits 000F86  
                                   _LATAbits 000F89                                     _IOCCbits 000F87  
                  __end_of_oled_writeCommand 6072                                     _LATBbits 000F8A  
                                   _LATCbits 000F8B                                     _LATEbits 000F8D  
               __end_ofi2_Set_Column_Address 60B4                   ??_USBCtrlEPServiceComplete 0002  
                 ??_MOTEapp_setResponseReady 0060                                     _PIE1bits 000F9D  
                                   _IPR3bits 000FA5                                     _PIE2bits 000FA0  
                                   _PIE3bits 000FA3                          __size_of_test_comms 0072  
                   __size_of_TMR2_StartTimer 0004                                 _oled_setFont 60B4  
                                  _moteState 00FF                            ??_sendDataCommand 0066  
                              _operationType 00F7                            i2_TMR0_StartTimer 6252  
                      __size_of_moduleResync 0084                         ??_moteRunningProcess 00AF  
                 __end_of_moteJoiningProcess 1968          __size_of_INTERRUPT_InterruptManager 00F6  
                               _oled_putChar 4D72                                     _PIR1bits 000F9E  
                                   _PIR2bits 000FA1                __size_of_moteApp_clearBuffers 0092  
              __size_of_moteApp_clearCommand 0010                                     _PIR3bits 000FA4  
                                   i2u622_40 2BF6                                     i2u622_47 2BEC  
                                   i2u623_40 2C26                                     i2u623_47 2C1C  
                                   i2u625_40 2C7E                                     i2u625_47 2C74  
                                   i2u802_40 52F0                                     i2u618_40 3AB6  
                                   i2u581_40 575C                                     i2u806_40 5AF2  
                                   i2u647_40 26EA                    USBCtrlEPService@setup_cnt 001E  
                                   i2u594_40 3F0C                                     i2u594_47 3F02  
                                   i2u596_40 3F4C                                     i2u596_47 3F42  
                                   i2u684_48 3284                                     i2u684_49 3296  
                                   i2u599_40 4EAC                                     i2u880_48 3DA0  
                                   i2u880_49 3DB2                                     i2u795_40 53C0  
                                   i2u795_47 53B6                                     i2u797_40 53EE  
                                   i2u797_47 53E4                                     _RCONbits 000FD0  
                       __end_of_test_powerup 51D2                                 _oled_putint8 4636  
                              ??_putUSBUSART 0063                           ?i2_TMR0_StartTimer 0001  
                                   _UEP0bits 000F6A                   _USBDeferINDataStagePackets 0044  
                                   _SSP1CON1 000FC6                                     _TMR0_ISR 6246  
                __size_of_USBCheckStdRequest 00E2                                     _TMR1_ISR 61A8  
                    __size_of_oled_putString 0074                                     _TMR3_ISR 5F8A  
                                   _SSP1STAT 000FC7                                     _UCONbits 000F60  
                    __size_ofi2_oled_putChar 007A                              _oled_displayOff 61F2  
                                  _test_leds 5402                                     _VREFCON0 000F7D  
             moteRunningProcess@selectButton 00AC                         _USBConfigureEndpoint 4AB6  
                                  _test_oled 4104                        ??_USBapp_exitCDCState 0060  
                            ?_InterruptPinRX 0001             __size_of_USBStdFeatureReqHandler 0264  
                          ??_TMR1_Initialize 0060                                   _ADCON0bits 000FC2  
                    Set_Page_Address@address 0061                          ??i2_TMR0_StartTimer 0001  
                         i2_Set_Page_Address 617E                            ___wmul@multiplier 0060  
                      ?_USBTransferOnePacket 0060          moteRunningProcess@sizeOfUpdate_1497 00B2  
                     ADC_TempConversion@temp 00A7                       oled_putint8@start_page 0079  
                  _moteApp_add8bToDataBuffer 4580                      __size_of_oled_writeData 0016  
                              ?_CDCTxService 0001                     __size_of_TMR3_StartTimer 0004  
                   moteHandler@gotoNextState 00B8                                ?i2_oled_clear 0001  
                               _RemoteWakeup 004B                          __end_of_sendCommand 5BB4  
                                   i2_memset 5DCA                            __CFG_CFGPLLEN$OFF 000000  
                     _oled_initialDispayLine 615E                        DATAEE_WriteByte@bData 0060  
                         _RS232_Out_Data_Rdy 00E7                          ?i2_Set_Page_Address 0001  
          moteApp_setLightString@lightString 006B                      __end_of_USBStallHandler 5968  
                        __end_of_moduleSleep 5EC0                          __end_of_moteHandler 2518  
                                _EUSART_Read 5A9C                            _moteApp_GoToSleep 3DBC  
                     i2oled_putUint8@numData 0015                                  _INTCON2bits 000FF1  
                                _INTCON3bits 000FF0                                    copy_data0 49BC  
                           i2_oled_putString 5394                  __end_ofi2_oled_writeCommand 612C  
                    _clearInterruptTimerUART 6230                  ??_USBCtrlEPAllowStatusStage 0001  
      moteApp_addToDataBuffer@bufferLocation 0074                           i2___awmod@dividend 0001  
                               _moduleResync 4CEE                  __end_of_USBStdSetCfgHandler 3B22  
                          ?_DATAEE_WriteByte 0060                __size_of_USBapp_getrxByteFlag 0006  
                        __end_of_reloadTimer 61F2                           ?_moteApp_GoToSleep 0001  
                                 ?_oled_init 0001                            ??_TMR2_Initialize 0060  
                              ??_test_switch 0078  MOTEapp_getModuleResponse@terminatorReceived 0061  
                ?_moteApp_convertSensorValue 0072                 clearInterruptPinRX@tClearPin 0001  
                           __size_of_EndLine 000E                    __end_ofi2_TMR0_StartTimer 6256  
                         ??_DATAEE_WriteByte 0061                           __end_of_device_dsc 79B4  
                                 _EECON1bits 000FA6                      ?_USBCtrlTrfSetupHandler 0001  
              USBapp_CdcEmulatorInitialize@i 000D                       ??_TMRapp_ClearBitFlags 0060  
                           i2_oled_writeData 6104                      USBStdGetStatusHandler@p 0002  
                                   __Hrparam 0000                          ??_moteApp_GoToSleep 006E  
                          i2___lbdiv@divisor 0001                                    memcpy@tmp 006A  
                          i2___lbdiv@counter 0003                          i2oled_putChar@index 000C  
                                   __Lrparam 0000                       USBTransferOnePacket@ep 0064  
                     ??_MOTEapp_handlerState 0060                         ??i2_Set_Page_Address 0002  
                         __CFG_BOREN$SBORDIS 000000                                     _SetupPkt 000430  
                    ??_OSCILLATOR_Initialize 0060                        ?_USBConfigureEndpoint 0001  
                          ??_TMR0_StartTimer 0060                             ??_ReadyByteFrame 001F  
                           __size_of___almod 00AE                             __size_of___fladd 033E  
                          ??_USBDeviceAttach 0060                                   ?_test_leds 0001  
                           __size_of___fldiv 02B6                             __size_of___lbdiv 003E  
                                 ?_test_oled 0001                             __size_of___awmod 0072  
                i2Set_Column_Address@address 0002                             __size_of___flmul 0352  
                           __size_of___fltol 00DE                   oled_initialDispayLine@line 0061  
             moteJoiningProcess@readDataRate 007B                                 _selectedFont 01FB  
                           __size_of___lldiv 0082                              _oled_setDisplay 5E72  
           moteApp_clearBuffers@counter_1714 0061             moteApp_clearBuffers@counter_1715 0062  
           moteApp_clearBuffers@counter_1716 0063                             __size_of___lwmod 0044  
                  MOTEapp_handlerState@state 0060                            ??_TMR3_Initialize 0060  
                  ??_moteApp_setSensorsInput 0065                             __size_of_delayms 0032  
                                 _ANSELAbits 000F5B                          __end_of_putUSBUSART 5F08  
                                _line_coding 01E7                                   _ANSELCbits 000F5D  
                             ??_CDCTxService 0067                                _responseReady 0053  
                             ??i2_oled_clear 000F                                 ??_oled_clear 006E  
                                   ___xxtofl 28DE                                  _menuTimeout 00FB  
                   __size_of_moteApp_delayms 0032                    __end_of_moteApp_GoToSleep 3E90  
              __size_of_moteApp_getTempValue 0040                      __size_of_USBDeviceTasks 0132  
                                   _appTimer 00F8                                     _appState 0056  
                                   __ptext10 0102                                     __ptext11 428E  
                                   __ptext20 5858                                     __ptext12 5D6E  
                                   __ptext21 619C                                     __ptext13 4636  
                                 _T1GCONbits 000FCC                                     __ptext30 5C7E  
                                   __ptext22 4F7C                                     __ptext14 4A22  
                                   __ptext31 60B4                                     __ptext23 5E4A  
                                   __ptext15 5074                                     __ptext40 4CEE  
                                   __ptext32 5E72                                     __ptext24 4B4A  
                                   __ptext16 6212                                     __ptext41 54D6  
                                   __ptext33 4EFC                                     __ptext25 55A2  
                                   __ptext17 5968                                     __ptext50 1CBA  
                                   __ptext42 58E4                                     __ptext34 60C8  
                                   __ptext26 4580                                     __ptext18 57BC  
                                   __ptext51 138E                                     __ptext43 61C0  
                                   __ptext35 613E                                     __ptext27 59A8  
                                   __ptext19 546C                                     __ptext60 4796  
                                   __ptext52 4BDC                                     __ptext44 277C  
                                   __ptext36 614E                                     __ptext28 5244  
                                   __ptext61 61FA                                     __ptext53 580A  
                                   __ptext45 378C                                     __ptext37 615E  
                                   __ptext29 3DBC                                     __ptext70 5FE0  
                                   __ptext62 5F2A                                     __ptext54 5C1A  
                                   __ptext46 28DE                                     __ptext38 61F2  
                                   __ptext71 5EC0                                     __ptext63 616E  
                                   __ptext55 5A24                                     __ptext47 3C02  
                                   __ptext39 5E9A                                     __ptext80 621E  
                                   __ptext72 4D72                                     __ptext64 5B80  
                                   __ptext56 61CA                                     __ptext48 1968  
                                   __ptext81 6224                                     __ptext73 6046  
                                   __ptext65 618E                                     __ptext57 6218  
                                   __ptext49 1FF8                                     __ptext90 5F08  
                                   __ptext82 59E6                                     __ptext74 60DC  
                                   __ptext66 61D4                                     __ptext58 32A6  
                                   __ptext91 6236                                     __ptext83 5A9C  
                                   __ptext75 5FA8                                     __ptext67 3F64  
                                   __ptext59 58A0                                     __ptext92 60F0  
                                   __ptext84 2A32                                     __ptext76 605C  
                                   __ptext68 5326                                     __ptext93 623A  
                                   __ptext85 4350                                     __ptext77 3B22  
                                   __ptext69 50EC                                     __ptext94 5C4C  
                                   __ptext86 2F1A                                     __ptext78 5EE6  
                                   __ptext95 623E                                     __ptext87 5CAE  
                                   __ptext79 44C8                                     __ptext96 5F4A  
                                   __ptext88 5BB4                                     __ptext97 6242  
                                   __ptext89 5DF6                                     __ptext98 5768  
                                   __ptext99 6072         __end_of_USBapp_CdcEmulatorInitialize 5768  
      __size_of_USBapp_CdcEmulatorInitialize 0056                 _USBapp_CdcEmulatorInitialize 5712  
                               _SSP1CON1bits 000FC6                                     _dotCount 0162  
                                   _hexToStr 5D6E                           _service_pushbutton 5326  
                            ___almod@divisor 0064                            ??_TMR1_StartTimer 0060  
                            i2_oled_clearRow 5F6A                              ___almod@counter 0068  
                                 _T3GCONbits 000FB4                  DATAEE_WriteByte@GIEBitValue 0062  
                   ??_moteApp_getLightString 0062                                  _OSCCON2bits 000FD2  
                           __size_of_strncmp 008C                    i2oled_putUint8@start_page 0014  
             __end_of_USBCtrlTrfSetupHandler 4E7A                                __size_of_main 0136  
                          ?_USBCtrlEPService 0001                   __size_of_oled_writeCommand 0016  
                             _Contrast_level 005E                                     _rnModule 00EE  
                         oled_putint8@number 0081                                   strncmp@len 0064  
                        ?_service_pushbutton 0001                            ??_DATAEE_ReadByte 0060  
                   __size_of_CMP1_Initialize 0012                     ?_moteApp_addToDataBuffer 0072  
                    __end_of_oled_displayOff 61FA                           ??_USBCtrlEPService 001C  
                  moduleResync@escapeCounter 0065                                     delayms@i 0063  
                                   delayms@t 0060                          _USBCtrlTrfInHandler 3CE0  
                              ??_TMRapp_Tick 0001                             _dataRatePosition 0161  
                         __end_of_oled_clear 5FFA                          __end_of_test_switch 34B0  
                                   _outPipes 00BC                         _USBCtrlTrfOutHandler 565C  
                                   int$flags 005F                                     _usbState 00EA  
                  _USBCtrlEPAllowStatusStage 41CA                 __size_of_clearInterruptPinRX 000C  
                __size_of_Set_Column_Address 001C                            ??_TMR2_StartTimer 0060  
         __end_of_INTERRUPT_InterruptManager 00FE                   _INTERRUPT_InterruptManager 0008  
             moteRunningProcess@sizeOfUpdate 00B1                                 _SSP1STATbits 000FC7  
                                _sendCommand 5B80                       ??_USBTransferOnePacket 0064  
                         oled_clearRow@index 006D                           _EUSART_FlushBuffer 58E4  
                            i2_oled_putUint8 4C68                                 ??_test_comms 0078  
               __end_of_USBapp_setrxByteFlag 620A                                  _moduleSleep 5E9A  
                                _moteHandler 22AE                        i2oled_putUint8@number 001B  
                           ??_TMR2_ReadTimer 0060                            i2___awmod@divisor 0003  
                       ??_service_pushbutton 0060                    _USBDeferStatusStagePacket 0047  
                   CDCTxService@byte_to_send 006B                            i2___awmod@counter 0005  
                       i2_Set_Column_Address 609E                                   _INTCONbits 000FF2  
                __end_of_USBapp_handlerState 61DE                         ?_USBCtrlTrfInHandler 0001  
                        ?_EUSART_FlushBuffer 0001                                     memcpy@d1 0060  
                __size_of_ADC_TempConversion 00EA                                  _reloadTimer 61E8  
                                   memcpy@s1 0062                USBCtrlTrfTxService@byteToSend 0001  
                  ??_clearInterruptTimerUART 0001                                     memset@p1 0060  
                           ?_USBStallHandler 0001                     USBStdFeatureReqHandler@p 001A  
                          ?_Set_Page_Address 0001                     ??_MOTEapp_TimerBasedTask 0060  
                               _responseData 01A5                            ??_TMR3_StartTimer 0060  
              ?_USBapp_CdcEmulatorInitialize 0001                                     intlevel2 0000  
                           ??_TMR0_StopTimer 0001                          _moteApp_testSensors 34B0  
                                ??_oled_init 006E                  ??_MOTEapp_getModuleResponse 0061  
                         ??_Set_Page_Address 0061                       __size_of_USBDeviceInit 0130  
                       oled_powerControl@vol 0061      __end_of_USER_USB_CALLBACK_EVENT_HANDLER 565C  
   __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005C            ??_USER_USB_CALLBACK_EVENT_HANDLER 0014  
           ?_USER_USB_CALLBACK_EVENT_HANDLER 000E              _USER_USB_CALLBACK_EVENT_HANDLER 5600  
             moteJoiningProcess@messageReady 007D              __end_of_moteApp_setSensorsInput 50EC  
                           ___lwmod@dividend 0060                 i2USBTransferOnePacket@handle 0006  
                               _VREFCON0bits 000F7D                             ___lldiv@dividend 0001  
                    ?_PIN_MANAGER_Initialize 0001                   __size_ofi2_TMR0_StartTimer 0004  
                    ??_moteApp_getLightValue 0070                             ??_USBapp_Handler 0078  
                           ??_TMRapp_Handler 006A                        __size_of_test_powerup 0072  
                       moteHandler@gotoSleep 00B7                 __size_ofi2_EUSART_Initialize 0038  
                                  strncmp@s1 0060                                    strncmp@s2 0062  
                           ??_ADC_Initialize 0060                           __end_of_test_comms 5244  
                       ??_EUSART_FlushBuffer 0060                      __end_of_oled_setDisplay 5E9A  
                 i2USBTransferOnePacket@data 0002                                  _sleepTicker 00EF  
                     ??_USBConfigureEndpoint 0002                        ?_USBCtrlTrfOutHandler 0001  
                             _oled_putString 50EC                                  _putUSBUSART 5EE6  
                             i2_oled_putChar 4FFA                           _EUSART_Receive_ISR 5D3E  
                          oled_clearRow@page 006C                         __CFG_CPUDIV$NOCLKDIV 000000  
                        _USBCtrlTrfRxService 3178                           _USBWakeFromSuspend 5CDE  
                                ??_test_leds 0078                                _powerOnStatus 00F6  
                                ??_test_oled 0078                      _USBStdFeatureReqHandler 2518  
                       ?_moteApp_testSensors 0001      __end_of_USBapp_DeviceCdcEmulatorHandler 3C02  
   __size_of_USBapp_DeviceCdcEmulatorHandler 00E0             ?_USBapp_DeviceCdcEmulatorHandler 0001  
          ??_USBapp_DeviceCdcEmulatorHandler 006D              _USBapp_DeviceCdcEmulatorHandler 3B22  
                         _USBCheckCDCRequest 46E6                          _USBCtrlTrfTxService 3E90  
                        __end_of_TMRapp_Tick 6230                        __end_of_oled_clearRow 5EE6  
                                _temperature 00DA                          ?_EUSART_Receive_ISR 0001  
                             _oled_writeData 6046                        ?i2_Set_Column_Address 0001  
                        ?_USBWakeFromSuspend 0001                                     strcmp@s1 0060  
                                   strcmp@s2 0062                      ?_moteApp_setLightString 006B  
                           ___lldiv@quotient 0009                              ___lwmod@divisor 0062  
                           ??_USBapp_exitCDC 0060                              _TMR0_Initialize 5F4A  
                      ??_USBCtrlTrfInHandler 0012                      __end_ofi2_oled_clearRow 5F8A  
                      _USBAlternateInterface 0058                              ___lwmod@counter 0064  
                                 _TMR0_Clear 624A                          ?_USBCheckCDCRequest 0001  
                 __size_of_moteApp_GoToSleep 00D4                    i2USBTransferOnePacket@dir 0001  
                         _moteApp_toggleLeds 3876                    i2USBTransferOnePacket@len 0004  
                        USBEnableEndpoint@ep 000C                              _endpoint_number 004A  
                                 _WDTCONbits 000FD1                                 _test_powerup 5160  
                            _sendDataCommand 428E                         ?_USBCtrlTrfRxService 0001  
                              ___fladd@signs 0070                                ?_getsUSBUSART 0067  
                   oled_putUint8@station_dot 0078                           __CFG_FOSC$INTOSCIO 000000  
                         EUSART_Write@txData 0060                 __size_of_EUSART_Transmit_ISR 0030  
             __end_of_PIN_MANAGER_Initialize 57BC                     ?_USBCtrlEPAllowDataStage 0001  
         __size_of_moteApp_add8bToDataBuffer 00B6                                 ___almod@sign 0069  
                       ?_USBCtrlTrfTxService 0001                            ??_moteApp_delayms 0062  
            __size_of_moteApp_getLightString 000C                  ?_oled_regulorResistorSelect 0001  
                        ?_moteApp_toggleLeds 0001                                 ___fladd@aexp 0071  
                               ___fladd@bexp 0072                 _USBStatusStageTimeoutCounter 0048  
                                _test_switch 33B2                         ??_EUSART_Receive_ISR 0001  
                       ??_USBWakeFromSuspend 0016                   USBTransferOnePacket@handle 0065  
                       __end_of_CDCTxService 2B78                              _TMR1_Initialize 5C4C  
                       __end_ofi2_oled_clear 602E            moteJoiningProcess@joiningComplete 007C  
                           ?_oled_displayOff 0001                        __end_of_oled_putUint8 4AB6  
                     __end_of_oled_putString 5160                         ??_USBCheckCDCRequest 0001  
                                 _USB_CD_Ptr 75F5              __end_of_clearInterruptTimerUART 6236  
                     __end_ofi2_oled_putChar 5074                             ??_InterruptPinRX 0002  
