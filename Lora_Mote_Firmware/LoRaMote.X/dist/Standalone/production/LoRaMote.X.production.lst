

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Mar 28 09:22:52 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18LF45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1
   122                           	psect	text102,global,reloc=2,class=CODE,delta=1
   123                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=2,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1
   127                           	psect	text107,global,reloc=2,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1
   134                           	psect	text114,global,reloc=2,class=CODE,delta=1
   135                           	psect	text115,global,reloc=2,class=CODE,delta=1
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1
   137                           	psect	text117,global,reloc=2,class=CODE,delta=1
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1
   139                           	psect	text119,global,reloc=2,class=CODE,delta=1
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1
   141                           	psect	text121,global,reloc=2,class=CODE,delta=1
   142                           	psect	text122,global,reloc=2,class=CODE,delta=1
   143                           	psect	text123,global,reloc=2,class=CODE,delta=1
   144                           	psect	text124,global,reloc=2,class=CODE,delta=1
   145                           	psect	text125,global,reloc=2,class=CODE,delta=1
   146                           	psect	text126,global,reloc=2,class=CODE,delta=1
   147                           	psect	text127,global,reloc=2,class=CODE,delta=1
   148                           	psect	text128,global,reloc=2,class=CODE,delta=1
   149                           	psect	text129,global,reloc=2,class=CODE,delta=1
   150                           	psect	text130,global,reloc=2,class=CODE,delta=1
   151                           	psect	text131,global,reloc=2,class=CODE,delta=1
   152                           	psect	text132,global,reloc=2,class=CODE,delta=1
   153                           	psect	text133,global,reloc=2,class=CODE,delta=1
   154                           	psect	text134,global,reloc=2,class=CODE,delta=1,group=1
   155                           	psect	text135,global,reloc=2,class=CODE,delta=1
   156                           	psect	text136,global,reloc=2,class=CODE,delta=1
   157                           	psect	text137,global,reloc=2,class=CODE,delta=1
   158                           	psect	text138,global,reloc=2,class=CODE,delta=1
   159                           	psect	text139,global,reloc=2,class=CODE,delta=1
   160                           	psect	text140,global,reloc=2,class=CODE,delta=1
   161                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   164                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   165                           	dabs	1,0x400,48,_BDT
   166                           	dabs	1,0x500,64,_cdc_data_tx
   167                           	dabs	1,0x438,8,_CtrlTrfData
   168                           	dabs	1,0x430,8,_SetupPkt
   169                           	dabs	1,0x540,64,_cdc_data_rx
   170  0000                     
   171                           ; Version 1.41
   172                           ; Generated 25/01/2017 GMT
   173                           ; 
   174                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   175                           ; All rights reserved.
   176                           ; 
   177                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   178                           ; 
   179                           ; Redistribution and use in source and binary forms, with or without modification, are
   180                           ; permitted provided that the following conditions are met:
   181                           ; 
   182                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   183                           ;        conditions and the following disclaimer.
   184                           ; 
   185                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   186                           ;        of conditions and the following disclaimer in the documentation and/or other
   187                           ;        materials provided with the distribution.
   188                           ; 
   189                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   190                           ;        software without specific prior written permission.
   191                           ; 
   192                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   193                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   194                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   195                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   196                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   197                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   198                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   199                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   200                           ; 
   201                           ; 
   202                           ; Code-generator required, PIC18LF45K50 Definitions
   203                           ; 
   204                           ; SFR Addresses
   205  0000                     
   206                           	psect	idataBANK0
   207  0072BA                     __pidataBANK0:
   208                           	opt stack 0
   209                           
   210                           ;initializer for _Contrast_level
   211  0072BA  13                 	db	19
   212                           
   213                           ;initializer for _exitUSB
   214  0072BB  01                 	db	1
   215                           
   216                           ;initializer for _dataRateSelection
   217  0072BC  02                 	db	2
   218                           
   219                           ;initializer for _periodicState
   220  0072BD  03                 	db	3
   221                           
   222                           ;initializer for _menuTimeout
   223  0072BE  01                 	db	1
   224                           
   225                           ;initializer for _dataRateValue
   226  0072BF  02                 	db	2
   227                           
   228                           ;initializer for _periodicTimerValue
   229  0072C0  03                 	db	3
   230                           
   231                           ;initializer for _periodicUpValue
   232  0072C1  03                 	db	3
   233                           
   234                           ;initializer for _moteState
   235  0072C2  01                 	db	1
   236                           
   237                           	psect	idataBANK1
   238  00730E                     __pidataBANK1:
   239                           	opt stack 0
   240                           
   241                           ;initializer for _selectedFont
   242  00730E  F7                 	db	low _OledFont0
   243  00730F  75                 	db	high _OledFont0
   244                           
   245                           	psect	mediumconst
   246  0075EE                     __pmediumconst:
   247                           	opt stack 0
   248  0075EE  00                 	db	0
   249  0075EF                     _USB_SD_Ptr:
   250                           	opt stack 0
   251  0075EF  B4                 	db	low _sd000
   252  0075F0  79                 	db	high _sd000
   253  0075F1  6E                 	db	low _sd001
   254  0075F2  79                 	db	high _sd001
   255  0075F3  3A                 	db	low _sd002
   256  0075F4  79                 	db	high _sd002
   257  0075F5                     __end_of_USB_SD_Ptr:
   258                           	opt stack 0
   259  0075F5                     _USB_CD_Ptr:
   260                           	opt stack 0
   261  0075F5  F7                 	db	low _configDescriptor1
   262  0075F6  78                 	db	high _configDescriptor1
   263  0075F7                     __end_of_USB_CD_Ptr:
   264                           	opt stack 0
   265  0075F7                     _OledFont0:
   266                           	opt stack 0
   267  0075F7  00                 	db	0
   268  0075F8  00                 	db	0
   269  0075F9  00                 	db	0
   270  0075FA  00                 	db	0
   271  0075FB  00                 	db	0
   272  0075FC  00                 	db	0
   273  0075FD  00                 	db	0
   274  0075FE  00                 	db	0
   275  0075FF  00                 	db	0
   276  007600  00                 	db	0
   277  007601  00                 	db	0
   278  007602  5F                 	db	95
   279  007603  00                 	db	0
   280  007604  00                 	db	0
   281  007605  00                 	db	0
   282  007606  00                 	db	0
   283  007607  00                 	db	0
   284  007608  00                 	db	0
   285  007609  03                 	db	3
   286  00760A  00                 	db	0
   287  00760B  03                 	db	3
   288  00760C  00                 	db	0
   289  00760D  00                 	db	0
   290  00760E  00                 	db	0
   291  00760F  64                 	db	100
   292  007610  3C                 	db	60
   293  007611  26                 	db	38
   294  007612  64                 	db	100
   295  007613  3C                 	db	60
   296  007614  26                 	db	38
   297  007615  24                 	db	36
   298  007616  00                 	db	0
   299  007617  26                 	db	38
   300  007618  49                 	db	73
   301  007619  49                 	db	73
   302  00761A  7F                 	db	127
   303  00761B  49                 	db	73
   304  00761C  49                 	db	73
   305  00761D  32                 	db	50
   306  00761E  00                 	db	0
   307  00761F  42                 	db	66
   308  007620  25                 	db	37
   309  007621  12                 	db	18
   310  007622  08                 	db	8
   311  007623  24                 	db	36
   312  007624  52                 	db	82
   313  007625  21                 	db	33
   314  007626  00                 	db	0
   315  007627  20                 	db	32
   316  007628  50                 	db	80
   317  007629  4E                 	db	78
   318  00762A  55                 	db	85
   319  00762B  22                 	db	34
   320  00762C  58                 	db	88
   321  00762D  28                 	db	40
   322  00762E  00                 	db	0
   323  00762F  00                 	db	0
   324  007630  00                 	db	0
   325  007631  00                 	db	0
   326  007632  03                 	db	3
   327  007633  00                 	db	0
   328  007634  00                 	db	0
   329  007635  00                 	db	0
   330  007636  00                 	db	0
   331  007637  00                 	db	0
   332  007638  00                 	db	0
   333  007639  1C                 	db	28
   334  00763A  22                 	db	34
   335  00763B  41                 	db	65
   336  00763C  00                 	db	0
   337  00763D  00                 	db	0
   338  00763E  00                 	db	0
   339  00763F  00                 	db	0
   340  007640  00                 	db	0
   341  007641  00                 	db	0
   342  007642  41                 	db	65
   343  007643  22                 	db	34
   344  007644  1C                 	db	28
   345  007645  00                 	db	0
   346  007646  00                 	db	0
   347  007647  00                 	db	0
   348  007648  15                 	db	21
   349  007649  15                 	db	21
   350  00764A  0E                 	db	14
   351  00764B  0E                 	db	14
   352  00764C  15                 	db	21
   353  00764D  15                 	db	21
   354  00764E  00                 	db	0
   355  00764F  00                 	db	0
   356  007650  08                 	db	8
   357  007651  08                 	db	8
   358  007652  3E                 	db	62
   359  007653  08                 	db	8
   360  007654  08                 	db	8
   361  007655  00                 	db	0
   362  007656  00                 	db	0
   363  007657  00                 	db	0
   364  007658  00                 	db	0
   365  007659  00                 	db	0
   366  00765A  50                 	db	80
   367  00765B  30                 	db	48
   368  00765C  00                 	db	0
   369  00765D  00                 	db	0
   370  00765E  00                 	db	0
   371  00765F  00                 	db	0
   372  007660  08                 	db	8
   373  007661  08                 	db	8
   374  007662  08                 	db	8
   375  007663  08                 	db	8
   376  007664  08                 	db	8
   377  007665  00                 	db	0
   378  007666  00                 	db	0
   379  007667  00                 	db	0
   380  007668  00                 	db	0
   381  007669  00                 	db	0
   382  00766A  40                 	db	64
   383  00766B  00                 	db	0
   384  00766C  00                 	db	0
   385  00766D  00                 	db	0
   386  00766E  00                 	db	0
   387  00766F  40                 	db	64
   388  007670  20                 	db	32
   389  007671  10                 	db	16
   390  007672  08                 	db	8
   391  007673  04                 	db	4
   392  007674  02                 	db	2
   393  007675  01                 	db	1
   394  007676  00                 	db	0
   395  007677  00                 	db	0
   396  007678  3E                 	db	62
   397  007679  41                 	db	65
   398  00767A  41                 	db	65
   399  00767B  41                 	db	65
   400  00767C  3E                 	db	62
   401  00767D  00                 	db	0
   402  00767E  00                 	db	0
   403  00767F  00                 	db	0
   404  007680  00                 	db	0
   405  007681  41                 	db	65
   406  007682  7F                 	db	127
   407  007683  40                 	db	64
   408  007684  00                 	db	0
   409  007685  00                 	db	0
   410  007686  00                 	db	0
   411  007687  00                 	db	0
   412  007688  42                 	db	66
   413  007689  61                 	db	97
   414  00768A  51                 	db	81
   415  00768B  49                 	db	73
   416  00768C  6E                 	db	110
   417  00768D  00                 	db	0
   418  00768E  00                 	db	0
   419  00768F  00                 	db	0
   420  007690  22                 	db	34
   421  007691  41                 	db	65
   422  007692  49                 	db	73
   423  007693  49                 	db	73
   424  007694  36                 	db	54
   425  007695  00                 	db	0
   426  007696  00                 	db	0
   427  007697  00                 	db	0
   428  007698  18                 	db	24
   429  007699  14                 	db	20
   430  00769A  12                 	db	18
   431  00769B  7F                 	db	127
   432  00769C  10                 	db	16
   433  00769D  00                 	db	0
   434  00769E  00                 	db	0
   435  00769F  00                 	db	0
   436  0076A0  27                 	db	39
   437  0076A1  49                 	db	73
   438  0076A2  49                 	db	73
   439  0076A3  49                 	db	73
   440  0076A4  71                 	db	113
   441  0076A5  00                 	db	0
   442  0076A6  00                 	db	0
   443  0076A7  00                 	db	0
   444  0076A8  3C                 	db	60
   445  0076A9  4A                 	db	74
   446  0076AA  49                 	db	73
   447  0076AB  48                 	db	72
   448  0076AC  70                 	db	112
   449  0076AD  00                 	db	0
   450  0076AE  00                 	db	0
   451  0076AF  00                 	db	0
   452  0076B0  43                 	db	67
   453  0076B1  21                 	db	33
   454  0076B2  11                 	db	17
   455  0076B3  0D                 	db	13
   456  0076B4  03                 	db	3
   457  0076B5  00                 	db	0
   458  0076B6  00                 	db	0
   459  0076B7  00                 	db	0
   460  0076B8  36                 	db	54
   461  0076B9  49                 	db	73
   462  0076BA  49                 	db	73
   463  0076BB  49                 	db	73
   464  0076BC  36                 	db	54
   465  0076BD  00                 	db	0
   466  0076BE  00                 	db	0
   467  0076BF  00                 	db	0
   468  0076C0  06                 	db	6
   469  0076C1  09                 	db	9
   470  0076C2  49                 	db	73
   471  0076C3  29                 	db	41
   472  0076C4  1E                 	db	30
   473  0076C5  00                 	db	0
   474  0076C6  00                 	db	0
   475  0076C7  00                 	db	0
   476  0076C8  00                 	db	0
   477  0076C9  00                 	db	0
   478  0076CA  12                 	db	18
   479  0076CB  00                 	db	0
   480  0076CC  00                 	db	0
   481  0076CD  00                 	db	0
   482  0076CE  00                 	db	0
   483  0076CF  00                 	db	0
   484  0076D0  00                 	db	0
   485  0076D1  00                 	db	0
   486  0076D2  52                 	db	82
   487  0076D3  30                 	db	48
   488  0076D4  00                 	db	0
   489  0076D5  00                 	db	0
   490  0076D6  00                 	db	0
   491  0076D7  00                 	db	0
   492  0076D8  00                 	db	0
   493  0076D9  08                 	db	8
   494  0076DA  14                 	db	20
   495  0076DB  14                 	db	20
   496  0076DC  22                 	db	34
   497  0076DD  00                 	db	0
   498  0076DE  00                 	db	0
   499  0076DF  00                 	db	0
   500  0076E0  14                 	db	20
   501  0076E1  14                 	db	20
   502  0076E2  14                 	db	20
   503  0076E3  14                 	db	20
   504  0076E4  14                 	db	20
   505  0076E5  14                 	db	20
   506  0076E6  00                 	db	0
   507  0076E7  00                 	db	0
   508  0076E8  00                 	db	0
   509  0076E9  22                 	db	34
   510  0076EA  14                 	db	20
   511  0076EB  14                 	db	20
   512  0076EC  08                 	db	8
   513  0076ED  00                 	db	0
   514  0076EE  00                 	db	0
   515  0076EF  00                 	db	0
   516  0076F0  02                 	db	2
   517  0076F1  01                 	db	1
   518  0076F2  59                 	db	89
   519  0076F3  05                 	db	5
   520  0076F4  02                 	db	2
   521  0076F5  00                 	db	0
   522  0076F6  00                 	db	0
   523  0076F7  3E                 	db	62
   524  0076F8  41                 	db	65
   525  0076F9  5D                 	db	93
   526  0076FA  55                 	db	85
   527  0076FB  4D                 	db	77
   528  0076FC  51                 	db	81
   529  0076FD  2E                 	db	46
   530  0076FE  00                 	db	0
   531  0076FF  40                 	db	64
   532  007700  7C                 	db	124
   533  007701  4A                 	db	74
   534  007702  09                 	db	9
   535  007703  4A                 	db	74
   536  007704  7C                 	db	124
   537  007705  40                 	db	64
   538  007706  00                 	db	0
   539  007707  41                 	db	65
   540  007708  7F                 	db	127
   541  007709  49                 	db	73
   542  00770A  49                 	db	73
   543  00770B  49                 	db	73
   544  00770C  49                 	db	73
   545  00770D  36                 	db	54
   546  00770E  00                 	db	0
   547  00770F  1C                 	db	28
   548  007710  22                 	db	34
   549  007711  41                 	db	65
   550  007712  41                 	db	65
   551  007713  41                 	db	65
   552  007714  41                 	db	65
   553  007715  22                 	db	34
   554  007716  00                 	db	0
   555  007717  41                 	db	65
   556  007718  7F                 	db	127
   557  007719  41                 	db	65
   558  00771A  41                 	db	65
   559  00771B  41                 	db	65
   560  00771C  22                 	db	34
   561  00771D  1C                 	db	28
   562  00771E  00                 	db	0
   563  00771F  41                 	db	65
   564  007720  7F                 	db	127
   565  007721  49                 	db	73
   566  007722  49                 	db	73
   567  007723  5D                 	db	93
   568  007724  41                 	db	65
   569  007725  63                 	db	99
   570  007726  00                 	db	0
   571  007727  41                 	db	65
   572  007728  7F                 	db	127
   573  007729  49                 	db	73
   574  00772A  09                 	db	9
   575  00772B  1D                 	db	29
   576  00772C  01                 	db	1
   577  00772D  03                 	db	3
   578  00772E  00                 	db	0
   579  00772F  1C                 	db	28
   580  007730  22                 	db	34
   581  007731  41                 	db	65
   582  007732  49                 	db	73
   583  007733  49                 	db	73
   584  007734  3A                 	db	58
   585  007735  08                 	db	8
   586  007736  00                 	db	0
   587  007737  41                 	db	65
   588  007738  7F                 	db	127
   589  007739  08                 	db	8
   590  00773A  08                 	db	8
   591  00773B  08                 	db	8
   592  00773C  7F                 	db	127
   593  00773D  41                 	db	65
   594  00773E  00                 	db	0
   595  00773F  00                 	db	0
   596  007740  41                 	db	65
   597  007741  41                 	db	65
   598  007742  7F                 	db	127
   599  007743  41                 	db	65
   600  007744  41                 	db	65
   601  007745  00                 	db	0
   602  007746  00                 	db	0
   603  007747  30                 	db	48
   604  007748  40                 	db	64
   605  007749  41                 	db	65
   606  00774A  41                 	db	65
   607  00774B  3F                 	db	63
   608  00774C  01                 	db	1
   609  00774D  01                 	db	1
   610  00774E  00                 	db	0
   611  00774F  41                 	db	65
   612  007750  7F                 	db	127
   613  007751  08                 	db	8
   614  007752  0C                 	db	12
   615  007753  12                 	db	18
   616  007754  61                 	db	97
   617  007755  41                 	db	65
   618  007756  00                 	db	0
   619  007757  41                 	db	65
   620  007758  7F                 	db	127
   621  007759  41                 	db	65
   622  00775A  40                 	db	64
   623  00775B  40                 	db	64
   624  00775C  40                 	db	64
   625  00775D  60                 	db	96
   626  00775E  00                 	db	0
   627  00775F  41                 	db	65
   628  007760  7F                 	db	127
   629  007761  42                 	db	66
   630  007762  0C                 	db	12
   631  007763  42                 	db	66
   632  007764  7F                 	db	127
   633  007765  41                 	db	65
   634  007766  00                 	db	0
   635  007767  41                 	db	65
   636  007768  7F                 	db	127
   637  007769  42                 	db	66
   638  00776A  0C                 	db	12
   639  00776B  11                 	db	17
   640  00776C  7F                 	db	127
   641  00776D  01                 	db	1
   642  00776E  00                 	db	0
   643  00776F  1C                 	db	28
   644  007770  22                 	db	34
   645  007771  41                 	db	65
   646  007772  41                 	db	65
   647  007773  41                 	db	65
   648  007774  22                 	db	34
   649  007775  1C                 	db	28
   650  007776  00                 	db	0
   651  007777  41                 	db	65
   652  007778  7F                 	db	127
   653  007779  49                 	db	73
   654  00777A  09                 	db	9
   655  00777B  09                 	db	9
   656  00777C  09                 	db	9
   657  00777D  06                 	db	6
   658  00777E  00                 	db	0
   659  00777F  0C                 	db	12
   660  007780  12                 	db	18
   661  007781  21                 	db	33
   662  007782  21                 	db	33
   663  007783  61                 	db	97
   664  007784  52                 	db	82
   665  007785  4C                 	db	76
   666  007786  00                 	db	0
   667  007787  41                 	db	65
   668  007788  7F                 	db	127
   669  007789  09                 	db	9
   670  00778A  09                 	db	9
   671  00778B  19                 	db	25
   672  00778C  69                 	db	105
   673  00778D  46                 	db	70
   674  00778E  00                 	db	0
   675  00778F  66                 	db	102
   676  007790  49                 	db	73
   677  007791  49                 	db	73
   678  007792  49                 	db	73
   679  007793  49                 	db	73
   680  007794  49                 	db	73
   681  007795  33                 	db	51
   682  007796  00                 	db	0
   683  007797  03                 	db	3
   684  007798  01                 	db	1
   685  007799  41                 	db	65
   686  00779A  7F                 	db	127
   687  00779B  41                 	db	65
   688  00779C  01                 	db	1
   689  00779D  03                 	db	3
   690  00779E  00                 	db	0
   691  00779F  01                 	db	1
   692  0077A0  3F                 	db	63
   693  0077A1  41                 	db	65
   694  0077A2  40                 	db	64
   695  0077A3  41                 	db	65
   696  0077A4  3F                 	db	63
   697  0077A5  01                 	db	1
   698  0077A6  00                 	db	0
   699  0077A7  01                 	db	1
   700  0077A8  0F                 	db	15
   701  0077A9  31                 	db	49
   702  0077AA  40                 	db	64
   703  0077AB  31                 	db	49
   704  0077AC  0F                 	db	15
   705  0077AD  01                 	db	1
   706  0077AE  00                 	db	0
   707  0077AF  01                 	db	1
   708  0077B0  1F                 	db	31
   709  0077B1  61                 	db	97
   710  0077B2  14                 	db	20
   711  0077B3  61                 	db	97
   712  0077B4  1F                 	db	31
   713  0077B5  01                 	db	1
   714  0077B6  00                 	db	0
   715  0077B7  41                 	db	65
   716  0077B8  41                 	db	65
   717  0077B9  36                 	db	54
   718  0077BA  08                 	db	8
   719  0077BB  36                 	db	54
   720  0077BC  41                 	db	65
   721  0077BD  41                 	db	65
   722  0077BE  00                 	db	0
   723  0077BF  01                 	db	1
   724  0077C0  03                 	db	3
   725  0077C1  44                 	db	68
   726  0077C2  78                 	db	120
   727  0077C3  44                 	db	68
   728  0077C4  03                 	db	3
   729  0077C5  01                 	db	1
   730  0077C6  00                 	db	0
   731  0077C7  43                 	db	67
   732  0077C8  61                 	db	97
   733  0077C9  51                 	db	81
   734  0077CA  49                 	db	73
   735  0077CB  45                 	db	69
   736  0077CC  43                 	db	67
   737  0077CD  61                 	db	97
   738  0077CE  00                 	db	0
   739  0077CF  00                 	db	0
   740  0077D0  00                 	db	0
   741  0077D1  7F                 	db	127
   742  0077D2  41                 	db	65
   743  0077D3  41                 	db	65
   744  0077D4  00                 	db	0
   745  0077D5  00                 	db	0
   746  0077D6  00                 	db	0
   747  0077D7  01                 	db	1
   748  0077D8  02                 	db	2
   749  0077D9  04                 	db	4
   750  0077DA  08                 	db	8
   751  0077DB  10                 	db	16
   752  0077DC  20                 	db	32
   753  0077DD  40                 	db	64
   754  0077DE  00                 	db	0
   755  0077DF  00                 	db	0
   756  0077E0  00                 	db	0
   757  0077E1  41                 	db	65
   758  0077E2  41                 	db	65
   759  0077E3  7F                 	db	127
   760  0077E4  00                 	db	0
   761  0077E5  00                 	db	0
   762  0077E6  00                 	db	0
   763  0077E7  00                 	db	0
   764  0077E8  04                 	db	4
   765  0077E9  02                 	db	2
   766  0077EA  01                 	db	1
   767  0077EB  01                 	db	1
   768  0077EC  02                 	db	2
   769  0077ED  04                 	db	4
   770  0077EE  00                 	db	0
   771  0077EF  00                 	db	0
   772  0077F0  40                 	db	64
   773  0077F1  40                 	db	64
   774  0077F2  40                 	db	64
   775  0077F3  40                 	db	64
   776  0077F4  40                 	db	64
   777  0077F5  40                 	db	64
   778  0077F6  00                 	db	0
   779  0077F7  00                 	db	0
   780  0077F8  01                 	db	1
   781  0077F9  02                 	db	2
   782  0077FA  00                 	db	0
   783  0077FB  00                 	db	0
   784  0077FC  00                 	db	0
   785  0077FD  00                 	db	0
   786  0077FE  00                 	db	0
   787  0077FF  00                 	db	0
   788  007800  34                 	db	52
   789  007801  4A                 	db	74
   790  007802  4A                 	db	74
   791  007803  4A                 	db	74
   792  007804  3C                 	db	60
   793  007805  40                 	db	64
   794  007806  00                 	db	0
   795  007807  00                 	db	0
   796  007808  41                 	db	65
   797  007809  3F                 	db	63
   798  00780A  48                 	db	72
   799  00780B  48                 	db	72
   800  00780C  48                 	db	72
   801  00780D  30                 	db	48
   802  00780E  00                 	db	0
   803  00780F  00                 	db	0
   804  007810  3C                 	db	60
   805  007811  42                 	db	66
   806  007812  42                 	db	66
   807  007813  42                 	db	66
   808  007814  24                 	db	36
   809  007815  00                 	db	0
   810  007816  00                 	db	0
   811  007817  00                 	db	0
   812  007818  30                 	db	48
   813  007819  48                 	db	72
   814  00781A  48                 	db	72
   815  00781B  49                 	db	73
   816  00781C  3F                 	db	63
   817  00781D  40                 	db	64
   818  00781E  00                 	db	0
   819  00781F  00                 	db	0
   820  007820  3C                 	db	60
   821  007821  4A                 	db	74
   822  007822  4A                 	db	74
   823  007823  4A                 	db	74
   824  007824  2C                 	db	44
   825  007825  00                 	db	0
   826  007826  00                 	db	0
   827  007827  00                 	db	0
   828  007828  00                 	db	0
   829  007829  48                 	db	72
   830  00782A  7E                 	db	126
   831  00782B  49                 	db	73
   832  00782C  09                 	db	9
   833  00782D  00                 	db	0
   834  00782E  00                 	db	0
   835  00782F  00                 	db	0
   836  007830  26                 	db	38
   837  007831  49                 	db	73
   838  007832  49                 	db	73
   839  007833  49                 	db	73
   840  007834  3F                 	db	63
   841  007835  01                 	db	1
   842  007836  00                 	db	0
   843  007837  41                 	db	65
   844  007838  7F                 	db	127
   845  007839  48                 	db	72
   846  00783A  04                 	db	4
   847  00783B  44                 	db	68
   848  00783C  78                 	db	120
   849  00783D  40                 	db	64
   850  00783E  00                 	db	0
   851  00783F  00                 	db	0
   852  007840  00                 	db	0
   853  007841  44                 	db	68
   854  007842  7D                 	db	125
   855  007843  40                 	db	64
   856  007844  00                 	db	0
   857  007845  00                 	db	0
   858  007846  00                 	db	0
   859  007847  00                 	db	0
   860  007848  00                 	db	0
   861  007849  40                 	db	64
   862  00784A  44                 	db	68
   863  00784B  3D                 	db	61
   864  00784C  00                 	db	0
   865  00784D  00                 	db	0
   866  00784E  00                 	db	0
   867  00784F  41                 	db	65
   868  007850  7F                 	db	127
   869  007851  10                 	db	16
   870  007852  18                 	db	24
   871  007853  24                 	db	36
   872  007854  42                 	db	66
   873  007855  42                 	db	66
   874  007856  00                 	db	0
   875  007857  00                 	db	0
   876  007858  40                 	db	64
   877  007859  41                 	db	65
   878  00785A  7F                 	db	127
   879  00785B  40                 	db	64
   880  00785C  40                 	db	64
   881  00785D  00                 	db	0
   882  00785E  00                 	db	0
   883  00785F  42                 	db	66
   884  007860  7E                 	db	126
   885  007861  02                 	db	2
   886  007862  7C                 	db	124
   887  007863  02                 	db	2
   888  007864  7E                 	db	126
   889  007865  40                 	db	64
   890  007866  00                 	db	0
   891  007867  42                 	db	66
   892  007868  7E                 	db	126
   893  007869  44                 	db	68
   894  00786A  02                 	db	2
   895  00786B  42                 	db	66
   896  00786C  7C                 	db	124
   897  00786D  40                 	db	64
   898  00786E  00                 	db	0
   899  00786F  00                 	db	0
   900  007870  3C                 	db	60
   901  007871  42                 	db	66
   902  007872  42                 	db	66
   903  007873  42                 	db	66
   904  007874  3C                 	db	60
   905  007875  00                 	db	0
   906  007876  00                 	db	0
   907  007877  00                 	db	0
   908  007878  41                 	db	65
   909  007879  7F                 	db	127
   910  00787A  49                 	db	73
   911  00787B  09                 	db	9
   912  00787C  09                 	db	9
   913  00787D  06                 	db	6
   914  00787E  00                 	db	0
   915  00787F  00                 	db	0
   916  007880  06                 	db	6
   917  007881  09                 	db	9
   918  007882  09                 	db	9
   919  007883  49                 	db	73
   920  007884  7F                 	db	127
   921  007885  41                 	db	65
   922  007886  00                 	db	0
   923  007887  00                 	db	0
   924  007888  42                 	db	66
   925  007889  7E                 	db	126
   926  00788A  44                 	db	68
   927  00788B  02                 	db	2
   928  00788C  02                 	db	2
   929  00788D  04                 	db	4
   930  00788E  00                 	db	0
   931  00788F  00                 	db	0
   932  007890  64                 	db	100
   933  007891  4A                 	db	74
   934  007892  4A                 	db	74
   935  007893  4A                 	db	74
   936  007894  36                 	db	54
   937  007895  00                 	db	0
   938  007896  00                 	db	0
   939  007897  00                 	db	0
   940  007898  04                 	db	4
   941  007899  3F                 	db	63
   942  00789A  44                 	db	68
   943  00789B  44                 	db	68
   944  00789C  20                 	db	32
   945  00789D  00                 	db	0
   946  00789E  00                 	db	0
   947  00789F  00                 	db	0
   948  0078A0  02                 	db	2
   949  0078A1  3E                 	db	62
   950  0078A2  40                 	db	64
   951  0078A3  40                 	db	64
   952  0078A4  22                 	db	34
   953  0078A5  7E                 	db	126
   954  0078A6  40                 	db	64
   955  0078A7  02                 	db	2
   956  0078A8  0E                 	db	14
   957  0078A9  32                 	db	50
   958  0078AA  40                 	db	64
   959  0078AB  32                 	db	50
   960  0078AC  0E                 	db	14
   961  0078AD  02                 	db	2
   962  0078AE  00                 	db	0
   963  0078AF  02                 	db	2
   964  0078B0  1E                 	db	30
   965  0078B1  62                 	db	98
   966  0078B2  18                 	db	24
   967  0078B3  62                 	db	98
   968  0078B4  1E                 	db	30
   969  0078B5  02                 	db	2
   970  0078B6  00                 	db	0
   971  0078B7  42                 	db	66
   972  0078B8  62                 	db	98
   973  0078B9  14                 	db	20
   974  0078BA  08                 	db	8
   975  0078BB  14                 	db	20
   976  0078BC  62                 	db	98
   977  0078BD  42                 	db	66
   978  0078BE  00                 	db	0
   979  0078BF  01                 	db	1
   980  0078C0  43                 	db	67
   981  0078C1  45                 	db	69
   982  0078C2  38                 	db	56
   983  0078C3  05                 	db	5
   984  0078C4  03                 	db	3
   985  0078C5  01                 	db	1
   986  0078C6  00                 	db	0
   987  0078C7  00                 	db	0
   988  0078C8  46                 	db	70
   989  0078C9  62                 	db	98
   990  0078CA  52                 	db	82
   991  0078CB  4A                 	db	74
   992  0078CC  46                 	db	70
   993  0078CD  62                 	db	98
   994  0078CE  00                 	db	0
   995  0078CF  00                 	db	0
   996  0078D0  00                 	db	0
   997  0078D1  08                 	db	8
   998  0078D2  36                 	db	54
   999  0078D3  41                 	db	65
  1000  0078D4  00                 	db	0
  1001  0078D5  00                 	db	0
  1002  0078D6  00                 	db	0
  1003  0078D7  00                 	db	0
  1004  0078D8  00                 	db	0
  1005  0078D9  00                 	db	0
  1006  0078DA  7F                 	db	127
  1007  0078DB  00                 	db	0
  1008  0078DC  00                 	db	0
  1009  0078DD  00                 	db	0
  1010  0078DE  00                 	db	0
  1011  0078DF  00                 	db	0
  1012  0078E0  00                 	db	0
  1013  0078E1  00                 	db	0
  1014  0078E2  41                 	db	65
  1015  0078E3  36                 	db	54
  1016  0078E4  08                 	db	8
  1017  0078E5  00                 	db	0
  1018  0078E6  00                 	db	0
  1019  0078E7  00                 	db	0
  1020  0078E8  18                 	db	24
  1021  0078E9  08                 	db	8
  1022  0078EA  08                 	db	8
  1023  0078EB  10                 	db	16
  1024  0078EC  10                 	db	16
  1025  0078ED  18                 	db	24
  1026  0078EE  00                 	db	0
  1027  0078EF  AA                 	db	170
  1028  0078F0  55                 	db	85
  1029  0078F1  AA                 	db	170
  1030  0078F2  55                 	db	85
  1031  0078F3  AA                 	db	170
  1032  0078F4  55                 	db	85
  1033  0078F5  AA                 	db	170
  1034  0078F6  55                 	db	85
  1035  0078F7                     __end_of_OledFont0:
  1036                           	opt stack 0
  1037  0078F7                     _configDescriptor1:
  1038                           	opt stack 0
  1039  0078F7  09                 	db	9
  1040  0078F8  02                 	db	2
  1041  0078F9  43                 	db	67
  1042  0078FA  00                 	db	0
  1043  0078FB  02                 	db	2
  1044  0078FC  01                 	db	1
  1045  0078FD  00                 	db	0
  1046  0078FE  C0                 	db	192
  1047  0078FF  32                 	db	50
  1048  007900  09                 	db	9
  1049  007901  04                 	db	4
  1050  007902  00                 	db	0
  1051  007903  00                 	db	0
  1052  007904  01                 	db	1
  1053  007905  02                 	db	2
  1054  007906  02                 	db	2
  1055  007907  01                 	db	1
  1056  007908  00                 	db	0
  1057  007909  05                 	db	5
  1058  00790A  24                 	db	36
  1059  00790B  00                 	db	0
  1060  00790C  10                 	db	16
  1061  00790D  01                 	db	1
  1062  00790E  04                 	db	4
  1063  00790F  24                 	db	36
  1064  007910  02                 	db	2
  1065  007911  02                 	db	2
  1066  007912  05                 	db	5
  1067  007913  24                 	db	36
  1068  007914  06                 	db	6
  1069  007915  00                 	db	0
  1070  007916  01                 	db	1
  1071  007917  05                 	db	5
  1072  007918  24                 	db	36
  1073  007919  01                 	db	1
  1074  00791A  00                 	db	0
  1075  00791B  01                 	db	1
  1076  00791C  07                 	db	7
  1077  00791D  05                 	db	5
  1078  00791E  81                 	db	129
  1079  00791F  03                 	db	3
  1080  007920  08                 	db	8
  1081  007921  00                 	db	0
  1082  007922  02                 	db	2
  1083  007923  09                 	db	9
  1084  007924  04                 	db	4
  1085  007925  01                 	db	1
  1086  007926  00                 	db	0
  1087  007927  02                 	db	2
  1088  007928  0A                 	db	10
  1089  007929  00                 	db	0
  1090  00792A  00                 	db	0
  1091  00792B  00                 	db	0
  1092  00792C  07                 	db	7
  1093  00792D  05                 	db	5
  1094  00792E  02                 	db	2
  1095  00792F  02                 	db	2
  1096  007930  40                 	db	64
  1097  007931  00                 	db	0
  1098  007932  00                 	db	0
  1099  007933  07                 	db	7
  1100  007934  05                 	db	5
  1101  007935  82                 	db	130
  1102  007936  02                 	db	2
  1103  007937  40                 	db	64
  1104  007938  00                 	db	0
  1105  007939  00                 	db	0
  1106  00793A                     __end_of_configDescriptor1:
  1107                           	opt stack 0
  1108  00793A                     _sd002:
  1109                           	opt stack 0
  1110  00793A  34                 	db	52
  1111  00793B  03                 	db	3
  1112  00793C  0043               	dw	67
  1113  00793E  0044               	dw	68
  1114  007940  0043               	dw	67
  1115  007942  0020               	dw	32
  1116  007944  0052               	dw	82
  1117  007946  0053               	dw	83
  1118  007948  002D               	dw	45
  1119  00794A  0032               	dw	50
  1120  00794C  0033               	dw	51
  1121  00794E  0032               	dw	50
  1122  007950  0020               	dw	32
  1123  007952  0045               	dw	69
  1124  007954  006D               	dw	109
  1125  007956  0075               	dw	117
  1126  007958  006C               	dw	108
  1127  00795A  0061               	dw	97
  1128  00795C  0074               	dw	116
  1129  00795E  0069               	dw	105
  1130  007960  006F               	dw	111
  1131  007962  006E               	dw	110
  1132  007964  0020               	dw	32
  1133  007966  0044               	dw	68
  1134  007968  0065               	dw	101
  1135  00796A  006D               	dw	109
  1136  00796C  006F               	dw	111
  1137  00796E                     __end_of_sd002:
  1138                           	opt stack 0
  1139  00796E                     _sd001:
  1140                           	opt stack 0
  1141  00796E  34                 	db	52
  1142  00796F  03                 	db	3
  1143  007970  004D               	dw	77
  1144  007972  0069               	dw	105
  1145  007974  0063               	dw	99
  1146  007976  0072               	dw	114
  1147  007978  006F               	dw	111
  1148  00797A  0063               	dw	99
  1149  00797C  0068               	dw	104
  1150  00797E  0069               	dw	105
  1151  007980  0070               	dw	112
  1152  007982  0020               	dw	32
  1153  007984  0054               	dw	84
  1154  007986  0065               	dw	101
  1155  007988  0063               	dw	99
  1156  00798A  0068               	dw	104
  1157  00798C  006E               	dw	110
  1158  00798E  006F               	dw	111
  1159  007990  006C               	dw	108
  1160  007992  006F               	dw	111
  1161  007994  0067               	dw	103
  1162  007996  0079               	dw	121
  1163  007998  0020               	dw	32
  1164  00799A  0049               	dw	73
  1165  00799C  006E               	dw	110
  1166  00799E  0063               	dw	99
  1167  0079A0  002E               	dw	46
  1168  0079A2                     __end_of_sd001:
  1169                           	opt stack 0
  1170  0079A2                     _device_dsc:
  1171                           	opt stack 0
  1172  0079A2  12                 	db	18
  1173  0079A3  01                 	db	1
  1174  0079A4  0200               	dw	512
  1175  0079A6  02                 	db	2
  1176  0079A7  00                 	db	0
  1177  0079A8  00                 	db	0
  1178  0079A9  08                 	db	8
  1179  0079AA  04D8               	dw	1240
  1180  0079AC  000A               	dw	10
  1181  0079AE  0100               	dw	256
  1182  0079B0  01                 	db	1
  1183  0079B1  02                 	db	2
  1184  0079B2  00                 	db	0
  1185  0079B3  01                 	db	1
  1186  0079B4                     __end_of_device_dsc:
  1187                           	opt stack 0
  1188  0079B4                     _sd000:
  1189                           	opt stack 0
  1190  0079B4  04                 	db	4
  1191  0079B5  03                 	db	3
  1192  0079B6  0409               	dw	1033
  1193  0079B8                     __end_of_sd000:
  1194                           	opt stack 0
  1195  0000                     _ANSELCbits	set	3933
  1196  0000                     _ANSELAbits	set	3931
  1197  0000                     _TMR3	set	4018
  1198  0000                     _UEP0bits	set	3946
  1199  0000                     _IPR3bits	set	4005
  1200  0000                     _RCONbits	set	4048
  1201  0000                     _UCON	set	3936
  1202  0000                     _USTAT	set	3937
  1203  0000                     _PIR3bits	set	4004
  1204  0000                     _UIEbits	set	3940
  1205  0000                     _UIRbits	set	3941
  1206  0000                     _UADDR	set	3939
  1207  0000                     _UIE	set	3940
  1208  0000                     _UEIE	set	3942
  1209  0000                     _UCFG	set	3938
  1210  0000                     _UIR	set	3941
  1211  0000                     _UEIR	set	3943
  1212  0000                     _PIE3bits	set	4003
  1213  0000                     _T3GCONbits	set	4020
  1214  0000                     _T3CONbits	set	4017
  1215  0000                     _T3GCON	set	4020
  1216  0000                     _T3CON	set	4017
  1217  0000                     _T2CONbits	set	4026
  1218  0000                     _TMR2	set	4028
  1219  0000                     _PR2	set	4027
  1220  0000                     _T2CON	set	4026
  1221  0000                     _VREFCON0bits	set	3965
  1222  0000                     _CM1CON0bits	set	3992
  1223  0000                     _CM2CON1bits	set	3994
  1224  0000                     _CM1CON0	set	3992
  1225  0000                     _EEDATA	set	4008
  1226  0000                     _EEADR	set	4009
  1227  0000                     _EECON2	set	4007
  1228  0000                     _EECON1bits	set	4006
  1229  0000                     _TABLAT	set	4085
  1230  0000                     _TBLPTRL	set	4086
  1231  0000                     _TBLPTRH	set	4087
  1232  0000                     _TBLPTRU	set	4088
  1233  0000                     _TRISD	set	3989
  1234  0000                     _IOCBbits	set	3974
  1235  0000                     _INTCON2bits	set	4081
  1236  0000                     _TRISAbits	set	3986
  1237  0000                     _T1GCONbits	set	4044
  1238  0000                     _T1CONbits	set	4045
  1239  0000                     _TMR1L	set	4046
  1240  0000                     _TMR1H	set	4047
  1241  0000                     _T1GCON	set	4044
  1242  0000                     _T1CON	set	4045
  1243  0000                     _SSP1STATbits	set	4039
  1244  0000                     _SSPBUF	set	4041
  1245  0000                     _SSP1CON1bits	set	4038
  1246  0000                     _SSP1ADD	set	4040
  1247  0000                     _SSP1CON1	set	4038
  1248  0000                     _SSP1STAT	set	4039
  1249  0000                     _ADRESH	set	4036
  1250  0000                     _ADRESL	set	4035
  1251  0000                     _ADCON2	set	4032
  1252  0000                     _ADCON1	set	4033
  1253  0000                     _ADCON0	set	4034
  1254  0000                     _VREFCON0	set	3965
  1255  0000                     _ACTCON	set	4021
  1256  0000                     _OSCCON2bits	set	4050
  1257  0000                     _OSCCON2	set	4050
  1258  0000                     _OSCCON	set	4051
  1259  0000                     _OSCTUNE	set	3995
  1260  0000                     _PIR1bits	set	3998
  1261  0000                     _RCREG	set	4014
  1262  0000                     _RCSTAbits	set	4011
  1263  0000                     _TXSTA	set	4012
  1264  0000                     _RCSTA	set	4011
  1265  0000                     _BAUDCON	set	4024
  1266  0000                     _LATD	set	3980
  1267  0000                     _TRISCbits	set	3988
  1268  0000                     _TRISBbits	set	3987
  1269  0000                     _TRISEbits	set	3990
  1270  0000                     _SPBRGH	set	4016
  1271  0000                     _SPBRG	set	4015
  1272  0000                     _UCONbits	set	3936
  1273  0000                     _TMR3L	set	4018
  1274  0000                     _TMR3H	set	4019
  1275  0000                     _PIR2bits	set	4001
  1276  0000                     _WDTCONbits	set	4049
  1277  0000                     _PORTCbits	set	3970
  1278  0000                     _IOCCbits	set	3975
  1279  0000                     _INTCON3bits	set	4080
  1280  0000                     _PIE2bits	set	4000
  1281  0000                     _LATEbits	set	3981
  1282  0000                     _INTCONbits	set	4082
  1283  0000                     _ADCON0bits	set	4034
  1284  0000                     _PORTAbits	set	3968
  1285  0000                     _PIE1bits	set	3997
  1286  0000                     _TXREG	set	4013
  1287  0000                     _LATCbits	set	3979
  1288  0000                     _TXSTAbits	set	4012
  1289  0000                     _LATAbits	set	3977
  1290  0000                     _PORTBbits	set	3969
  1291  0000                     _LATBbits	set	3978
  1292  0000                     _UEP1	set	3947
  1293  0000                     _UEP0	set	3946
  1294  0000                     _CKE	set	32318
  1295  0000                     _CKP	set	32308
  1296  0000                     _GIE	set	32663
  1297  0000                     _PEIE	set	32662
  1298  0079B8                     STR_184:
  1299  0079B8  73                 	db	115	;'s'
  1300  0079B9  79                 	db	121	;'y'
  1301  0079BA  73                 	db	115	;'s'
  1302  0079BB  20                 	db	32
  1303  0079BC  73                 	db	115	;'s'
  1304  0079BD  65                 	db	101	;'e'
  1305  0079BE  74                 	db	116	;'t'
  1306  0079BF  20                 	db	32
  1307  0079C0  70                 	db	112	;'p'
  1308  0079C1  69                 	db	105	;'i'
  1309  0079C2  6E                 	db	110	;'n'
  1310  0079C3  6D                 	db	109	;'m'
  1311  0079C4  6F                 	db	111	;'o'
  1312  0079C5  64                 	db	100	;'d'
  1313  0079C6  65                 	db	101	;'e'
  1314  0079C7  20                 	db	32
  1315  0079C8  47                 	db	71	;'G'
  1316  0079C9  50                 	db	80	;'P'
  1317  0079CA  49                 	db	73	;'I'
  1318  0079CB  4F                 	db	79	;'O'
  1319  0079CC  31                 	db	49	;'1'
  1320  0079CD  32                 	db	50	;'2'
  1321  0079CE  20                 	db	32
  1322  0079CF  61                 	db	97	;'a'
  1323  0079D0  6E                 	db	110	;'n'
  1324  0079D1  61                 	db	97	;'a'
  1325  0079D2  00                 	db	0
  1326  0079D3                     STR_183:
  1327  0079D3  73                 	db	115	;'s'
  1328  0079D4  79                 	db	121	;'y'
  1329  0079D5  73                 	db	115	;'s'
  1330  0079D6  20                 	db	32
  1331  0079D7  73                 	db	115	;'s'
  1332  0079D8  65                 	db	101	;'e'
  1333  0079D9  74                 	db	116	;'t'
  1334  0079DA  20                 	db	32
  1335  0079DB  70                 	db	112	;'p'
  1336  0079DC  69                 	db	105	;'i'
  1337  0079DD  6E                 	db	110	;'n'
  1338  0079DE  6D                 	db	109	;'m'
  1339  0079DF  6F                 	db	111	;'o'
  1340  0079E0  64                 	db	100	;'d'
  1341  0079E1  65                 	db	101	;'e'
  1342  0079E2  20                 	db	32
  1343  0079E3  47                 	db	71	;'G'
  1344  0079E4  50                 	db	80	;'P'
  1345  0079E5  49                 	db	73	;'I'
  1346  0079E6  4F                 	db	79	;'O'
  1347  0079E7  31                 	db	49	;'1'
  1348  0079E8  33                 	db	51	;'3'
  1349  0079E9  20                 	db	32
  1350  0079EA  61                 	db	97	;'a'
  1351  0079EB  6E                 	db	110	;'n'
  1352  0079EC  61                 	db	97	;'a'
  1353  0079ED  00                 	db	0
  1354  0079EE                     STR_177:
  1355  0079EE  73                 	db	115	;'s'
  1356  0079EF  79                 	db	121	;'y'
  1357  0079F0  73                 	db	115	;'s'
  1358  0079F1  20                 	db	32
  1359  0079F2  73                 	db	115	;'s'
  1360  0079F3  65                 	db	101	;'e'
  1361  0079F4  74                 	db	116	;'t'
  1362  0079F5  20                 	db	32
  1363  0079F6  70                 	db	112	;'p'
  1364  0079F7  69                 	db	105	;'i'
  1365  0079F8  6E                 	db	110	;'n'
  1366  0079F9  64                 	db	100	;'d'
  1367  0079FA  69                 	db	105	;'i'
  1368  0079FB  67                 	db	103	;'g'
  1369  0079FC  20                 	db	32
  1370  0079FD  47                 	db	71	;'G'
  1371  0079FE  50                 	db	80	;'P'
  1372  0079FF  49                 	db	73	;'I'
  1373  007A00  4F                 	db	79	;'O'
  1374  007A01  31                 	db	49	;'1'
  1375  007A02  30                 	db	48	;'0'
  1376  007A03  20                 	db	32
  1377  007A04  30                 	db	48	;'0'
  1378  007A05  0D                 	db	13
  1379  007A06  0A                 	db	10
  1380  007A07  00                 	db	0
  1381  007A08                     STR_178:
  1382  007A08  73                 	db	115	;'s'
  1383  007A09  79                 	db	121	;'y'
  1384  007A0A  73                 	db	115	;'s'
  1385  007A0B  20                 	db	32
  1386  007A0C  73                 	db	115	;'s'
  1387  007A0D  65                 	db	101	;'e'
  1388  007A0E  74                 	db	116	;'t'
  1389  007A0F  20                 	db	32
  1390  007A10  70                 	db	112	;'p'
  1391  007A11  69                 	db	105	;'i'
  1392  007A12  6E                 	db	110	;'n'
  1393  007A13  64                 	db	100	;'d'
  1394  007A14  69                 	db	105	;'i'
  1395  007A15  67                 	db	103	;'g'
  1396  007A16  20                 	db	32
  1397  007A17  47                 	db	71	;'G'
  1398  007A18  50                 	db	80	;'P'
  1399  007A19  49                 	db	73	;'I'
  1400  007A1A  4F                 	db	79	;'O'
  1401  007A1B  31                 	db	49	;'1'
  1402  007A1C  31                 	db	49	;'1'
  1403  007A1D  20                 	db	32
  1404  007A1E  30                 	db	48	;'0'
  1405  007A1F  0D                 	db	13
  1406  007A20  0A                 	db	10
  1407  007A21  00                 	db	0
  1408  007A22                     STR_175:
  1409  007A22  73                 	db	115	;'s'
  1410  007A23  79                 	db	121	;'y'
  1411  007A24  73                 	db	115	;'s'
  1412  007A25  20                 	db	32
  1413  007A26  73                 	db	115	;'s'
  1414  007A27  65                 	db	101	;'e'
  1415  007A28  74                 	db	116	;'t'
  1416  007A29  20                 	db	32
  1417  007A2A  70                 	db	112	;'p'
  1418  007A2B  69                 	db	105	;'i'
  1419  007A2C  6E                 	db	110	;'n'
  1420  007A2D  64                 	db	100	;'d'
  1421  007A2E  69                 	db	105	;'i'
  1422  007A2F  67                 	db	103	;'g'
  1423  007A30  20                 	db	32
  1424  007A31  47                 	db	71	;'G'
  1425  007A32  50                 	db	80	;'P'
  1426  007A33  49                 	db	73	;'I'
  1427  007A34  4F                 	db	79	;'O'
  1428  007A35  31                 	db	49	;'1'
  1429  007A36  30                 	db	48	;'0'
  1430  007A37  20                 	db	32
  1431  007A38  31                 	db	49	;'1'
  1432  007A39  0D                 	db	13
  1433  007A3A  0A                 	db	10
  1434  007A3B  00                 	db	0
  1435  007A3C                     STR_176:
  1436  007A3C  73                 	db	115	;'s'
  1437  007A3D  79                 	db	121	;'y'
  1438  007A3E  73                 	db	115	;'s'
  1439  007A3F  20                 	db	32
  1440  007A40  73                 	db	115	;'s'
  1441  007A41  65                 	db	101	;'e'
  1442  007A42  74                 	db	116	;'t'
  1443  007A43  20                 	db	32
  1444  007A44  70                 	db	112	;'p'
  1445  007A45  69                 	db	105	;'i'
  1446  007A46  6E                 	db	110	;'n'
  1447  007A47  64                 	db	100	;'d'
  1448  007A48  69                 	db	105	;'i'
  1449  007A49  67                 	db	103	;'g'
  1450  007A4A  20                 	db	32
  1451  007A4B  47                 	db	71	;'G'
  1452  007A4C  50                 	db	80	;'P'
  1453  007A4D  49                 	db	73	;'I'
  1454  007A4E  4F                 	db	79	;'O'
  1455  007A4F  31                 	db	49	;'1'
  1456  007A50  31                 	db	49	;'1'
  1457  007A51  20                 	db	32
  1458  007A52  31                 	db	49	;'1'
  1459  007A53  0D                 	db	13
  1460  007A54  0A                 	db	10
  1461  007A55  00                 	db	0
  1462  007A56                     STR_185:
  1463  007A56  73                 	db	115	;'s'
  1464  007A57  79                 	db	121	;'y'
  1465  007A58  73                 	db	115	;'s'
  1466  007A59  20                 	db	32
  1467  007A5A  67                 	db	103	;'g'
  1468  007A5B  65                 	db	101	;'e'
  1469  007A5C  74                 	db	116	;'t'
  1470  007A5D  20                 	db	32
  1471  007A5E  70                 	db	112	;'p'
  1472  007A5F  69                 	db	105	;'i'
  1473  007A60  6E                 	db	110	;'n'
  1474  007A61  61                 	db	97	;'a'
  1475  007A62  6E                 	db	110	;'n'
  1476  007A63  61                 	db	97	;'a'
  1477  007A64  20                 	db	32
  1478  007A65  47                 	db	71	;'G'
  1479  007A66  50                 	db	80	;'P'
  1480  007A67  49                 	db	73	;'I'
  1481  007A68  4F                 	db	79	;'O'
  1482  007A69  31                 	db	49	;'1'
  1483  007A6A  32                 	db	50	;'2'
  1484  007A6B  00                 	db	0
  1485  007A6C                     STR_186:
  1486  007A6C  73                 	db	115	;'s'
  1487  007A6D  79                 	db	121	;'y'
  1488  007A6E  73                 	db	115	;'s'
  1489  007A6F  20                 	db	32
  1490  007A70  67                 	db	103	;'g'
  1491  007A71  65                 	db	101	;'e'
  1492  007A72  74                 	db	116	;'t'
  1493  007A73  20                 	db	32
  1494  007A74  70                 	db	112	;'p'
  1495  007A75  69                 	db	105	;'i'
  1496  007A76  6E                 	db	110	;'n'
  1497  007A77  61                 	db	97	;'a'
  1498  007A78  6E                 	db	110	;'n'
  1499  007A79  61                 	db	97	;'a'
  1500  007A7A  20                 	db	32
  1501  007A7B  47                 	db	71	;'G'
  1502  007A7C  50                 	db	80	;'P'
  1503  007A7D  49                 	db	73	;'I'
  1504  007A7E  4F                 	db	79	;'O'
  1505  007A7F  31                 	db	49	;'1'
  1506  007A80  33                 	db	51	;'3'
  1507  007A81  00                 	db	0
  1508  007A82                     STR_22:
  1509  007A82  73                 	db	115	;'s'
  1510  007A83  79                 	db	121	;'y'
  1511  007A84  73                 	db	115	;'s'
  1512  007A85  20                 	db	32
  1513  007A86  73                 	db	115	;'s'
  1514  007A87  6C                 	db	108	;'l'
  1515  007A88  65                 	db	101	;'e'
  1516  007A89  65                 	db	101	;'e'
  1517  007A8A  70                 	db	112	;'p'
  1518  007A8B  20                 	db	32
  1519  007A8C  39                 	db	57	;'9'
  1520  007A8D  39                 	db	57	;'9'
  1521  007A8E  39                 	db	57	;'9'
  1522  007A8F  39                 	db	57	;'9'
  1523  007A90  39                 	db	57	;'9'
  1524  007A91  39                 	db	57	;'9'
  1525  007A92  39                 	db	57	;'9'
  1526  007A93  39                 	db	57	;'9'
  1527  007A94  39                 	db	57	;'9'
  1528  007A95  00                 	db	0
  1529  007A96                     STR_96:
  1530  007A96  4D                 	db	77	;'M'
  1531  007A97  61                 	db	97	;'a'
  1532  007A98  63                 	db	99	;'c'
  1533  007A99  20                 	db	32
  1534  007A9A  45                 	db	69	;'E'
  1535  007A9B  72                 	db	114	;'r'
  1536  007A9C  72                 	db	114	;'r'
  1537  007A9D  6F                 	db	111	;'o'
  1538  007A9E  72                 	db	114	;'r'
  1539  007A9F  20                 	db	32
  1540  007AA0  4F                 	db	79	;'O'
  1541  007AA1  63                 	db	99	;'c'
  1542  007AA2  63                 	db	99	;'c'
  1543  007AA3  75                 	db	117	;'u'
  1544  007AA4  72                 	db	114	;'r'
  1545  007AA5  72                 	db	114	;'r'
  1546  007AA6  65                 	db	101	;'e'
  1547  007AA7  64                 	db	100	;'d'
  1548  007AA8  00                 	db	0
  1549  007AA9                     STR_83:
  1550  007AA9  28                 	db	40
  1551  007AAA  55                 	db	85	;'U'
  1552  007AAB  4E                 	db	78	;'N'
  1553  007AAC  43                 	db	67	;'C'
  1554  007AAD  4E                 	db	78	;'N'
  1555  007AAE  46                 	db	70	;'F'
  1556  007AAF  29                 	db	41
  1557  007AB0  20                 	db	32
  1558  007AB1  20                 	db	32
  1559  007AB2  20                 	db	32
  1560  007AB3  20                 	db	32
  1561  007AB4  28                 	db	40
  1562  007AB5  43                 	db	67	;'C'
  1563  007AB6  4E                 	db	78	;'N'
  1564  007AB7  46                 	db	70	;'F'
  1565  007AB8  29                 	db	41
  1566  007AB9  20                 	db	32
  1567  007ABA  00                 	db	0
  1568  007ABB                     STR_40:
  1569  007ABB  20                 	db	32
  1570  007ABC  20                 	db	32
  1571  007ABD  28                 	db	40
  1572  007ABE  53                 	db	83	;'S'
  1573  007ABF  32                 	db	50	;'2'
  1574  007AC0  29                 	db	41
  1575  007AC1  20                 	db	32
  1576  007AC2  20                 	db	32
  1577  007AC3  20                 	db	32
  1578  007AC4  20                 	db	32
  1579  007AC5  20                 	db	32
  1580  007AC6  20                 	db	32
  1581  007AC7  20                 	db	32
  1582  007AC8  20                 	db	32
  1583  007AC9  20                 	db	32
  1584  007ACA  20                 	db	32
  1585  007ACB  00                 	db	0
  1586  007ACC                     STR_92:
  1587  007ACC  20                 	db	32
  1588  007ACD  20                 	db	32
  1589  007ACE  20                 	db	32
  1590  007ACF  20                 	db	32
  1591  007AD0  52                 	db	82	;'R'
  1592  007AD1  65                 	db	101	;'e'
  1593  007AD2  63                 	db	99	;'c'
  1594  007AD3  65                 	db	101	;'e'
  1595  007AD4  69                 	db	105	;'i'
  1596  007AD5  76                 	db	118	;'v'
  1597  007AD6  65                 	db	101	;'e'
  1598  007AD7  64                 	db	100	;'d'
  1599  007AD8  20                 	db	32
  1600  007AD9  20                 	db	32
  1601  007ADA  20                 	db	32
  1602  007ADB  20                 	db	32
  1603  007ADC  00                 	db	0
  1604  007ADD                     STR_42:
  1605  007ADD  20                 	db	32
  1606  007ADE  20                 	db	32
  1607  007ADF  20                 	db	32
  1608  007AE0  20                 	db	32
  1609  007AE1  20                 	db	32
  1610  007AE2  20                 	db	32
  1611  007AE3  20                 	db	32
  1612  007AE4  20                 	db	32
  1613  007AE5  20                 	db	32
  1614  007AE6  28                 	db	40
  1615  007AE7  53                 	db	83	;'S'
  1616  007AE8  33                 	db	51	;'3'
  1617  007AE9  29                 	db	41
  1618  007AEA  20                 	db	32
  1619  007AEB  20                 	db	32
  1620  007AEC  20                 	db	32
  1621  007AED  00                 	db	0
  1622  007AEE                     STR_34:
  1623  007AEE  20                 	db	32
  1624  007AEF  20                 	db	32
  1625  007AF0  28                 	db	40
  1626  007AF1  53                 	db	83	;'S'
  1627  007AF2  32                 	db	50	;'2'
  1628  007AF3  29                 	db	41
  1629  007AF4  20                 	db	32
  1630  007AF5  20                 	db	32
  1631  007AF6  20                 	db	32
  1632  007AF7  28                 	db	40
  1633  007AF8  53                 	db	83	;'S'
  1634  007AF9  33                 	db	51	;'3'
  1635  007AFA  29                 	db	41
  1636  007AFB  20                 	db	32
  1637  007AFC  20                 	db	32
  1638  007AFD  20                 	db	32
  1639  007AFE  00                 	db	0
  1640  007AFF                     STR_79:
  1641  007AFF  20                 	db	32
  1642  007B00  20                 	db	32
  1643  007B01  4C                 	db	76	;'L'
  1644  007B02  61                 	db	97	;'a'
  1645  007B03  73                 	db	115	;'s'
  1646  007B04  74                 	db	116	;'t'
  1647  007B05  20                 	db	32
  1648  007B06  4D                 	db	77	;'M'
  1649  007B07  65                 	db	101	;'e'
  1650  007B08  73                 	db	115	;'s'
  1651  007B09  73                 	db	115	;'s'
  1652  007B0A  61                 	db	97	;'a'
  1653  007B0B  67                 	db	103	;'g'
  1654  007B0C  65                 	db	101	;'e'
  1655  007B0D  20                 	db	32
  1656  007B0E  20                 	db	32
  1657  007B0F  00                 	db	0
  1658  007B10                     STR_78:
  1659  007B10  20                 	db	32
  1660  007B11  56                 	db	86	;'V'
  1661  007B12  69                 	db	105	;'i'
  1662  007B13  65                 	db	101	;'e'
  1663  007B14  77                 	db	119	;'w'
  1664  007B15  20                 	db	32
  1665  007B16  44                 	db	68	;'D'
  1666  007B17  6F                 	db	111	;'o'
  1667  007B18  77                 	db	119	;'w'
  1668  007B19  6E                 	db	110	;'n'
  1669  007B1A  6C                 	db	108	;'l'
  1670  007B1B  69                 	db	105	;'i'
  1671  007B1C  6E                 	db	110	;'n'
  1672  007B1D  6B                 	db	107	;'k'
  1673  007B1E  20                 	db	32
  1674  007B1F  20                 	db	32
  1675  007B20  00                 	db	0
  1676  007B21                     STR_75:
  1677  007B21  20                 	db	32
  1678  007B22  20                 	db	32
  1679  007B23  49                 	db	73	;'I'
  1680  007B24  73                 	db	115	;'s'
  1681  007B25  73                 	db	115	;'s'
  1682  007B26  75                 	db	117	;'u'
  1683  007B27  65                 	db	101	;'e'
  1684  007B28  20                 	db	32
  1685  007B29  55                 	db	85	;'U'
  1686  007B2A  70                 	db	112	;'p'
  1687  007B2B  6C                 	db	108	;'l'
  1688  007B2C  69                 	db	105	;'i'
  1689  007B2D  6E                 	db	110	;'n'
  1690  007B2E  6B                 	db	107	;'k'
  1691  007B2F  20                 	db	32
  1692  007B30  20                 	db	32
  1693  007B31  00                 	db	0
  1694  007B32                     STR_29:
  1695  007B32  20                 	db	32
  1696  007B33  28                 	db	40
  1697  007B34  53                 	db	83	;'S'
  1698  007B35  32                 	db	50	;'2'
  1699  007B36  29                 	db	41
  1700  007B37  20                 	db	32
  1701  007B38  20                 	db	32
  1702  007B39  20                 	db	32
  1703  007B3A  20                 	db	32
  1704  007B3B  20                 	db	32
  1705  007B3C  20                 	db	32
  1706  007B3D  28                 	db	40
  1707  007B3E  53                 	db	83	;'S'
  1708  007B3F  33                 	db	51	;'3'
  1709  007B40  29                 	db	41
  1710  007B41  20                 	db	32
  1711  007B42  00                 	db	0
  1712  007B43                     STR_32:
  1713  007B43  20                 	db	32
  1714  007B44  4A                 	db	74	;'J'
  1715  007B45  6F                 	db	111	;'o'
  1716  007B46  69                 	db	105	;'i'
  1717  007B47  6E                 	db	110	;'n'
  1718  007B48  69                 	db	105	;'i'
  1719  007B49  6E                 	db	110	;'n'
  1720  007B4A  67                 	db	103	;'g'
  1721  007B4B  20                 	db	32
  1722  007B4C  4D                 	db	77	;'M'
  1723  007B4D  65                 	db	101	;'e'
  1724  007B4E  74                 	db	116	;'t'
  1725  007B4F  68                 	db	104	;'h'
  1726  007B50  6F                 	db	111	;'o'
  1727  007B51  64                 	db	100	;'d'
  1728  007B52  20                 	db	32
  1729  007B53  00                 	db	0
  1730  007B54                     STR_91:
  1731  007B54  53                 	db	83	;'S'
  1732  007B55  65                 	db	101	;'e'
  1733  007B56  72                 	db	114	;'r'
  1734  007B57  76                 	db	118	;'v'
  1735  007B58  65                 	db	101	;'e'
  1736  007B59  72                 	db	114	;'r'
  1737  007B5A  20                 	db	32
  1738  007B5B  52                 	db	82	;'R'
  1739  007B5C  65                 	db	101	;'e'
  1740  007B5D  73                 	db	115	;'s'
  1741  007B5E  70                 	db	112	;'p'
  1742  007B5F  6F                 	db	111	;'o'
  1743  007B60  6E                 	db	110	;'n'
  1744  007B61  73                 	db	115	;'s'
  1745  007B62  65                 	db	101	;'e'
  1746  007B63  20                 	db	32
  1747  007B64  00                 	db	0
  1748  007B65                     STR_120:
  1749  007B65  54                 	db	84	;'T'
  1750  007B66  78                 	db	120	;'x'
  1751  007B67  20                 	db	32
  1752  007B68  45                 	db	69	;'E'
  1753  007B69  76                 	db	118	;'v'
  1754  007B6A  65                 	db	101	;'e'
  1755  007B6B  6E                 	db	110	;'n'
  1756  007B6C  74                 	db	116	;'t'
  1757  007B6D  20                 	db	32
  1758  007B6E  54                 	db	84	;'T'
  1759  007B6F  69                 	db	105	;'i'
  1760  007B70  6D                 	db	109	;'m'
  1761  007B71  69                 	db	105	;'i'
  1762  007B72  6E                 	db	110	;'n'
  1763  007B73  67                 	db	103	;'g'
  1764  007B74  20                 	db	32
  1765  007B75  00                 	db	0
  1766  007B76                     STR_119:
  1767  007B76  50                 	db	80	;'P'
  1768  007B77  65                 	db	101	;'e'
  1769  007B78  72                 	db	114	;'r'
  1770  007B79  69                 	db	105	;'i'
  1771  007B7A  6F                 	db	111	;'o'
  1772  007B7B  64                 	db	100	;'d'
  1773  007B7C  69                 	db	105	;'i'
  1774  007B7D  63                 	db	99	;'c'
  1775  007B7E  20                 	db	32
  1776  007B7F  55                 	db	85	;'U'
  1777  007B80  70                 	db	112	;'p'
  1778  007B81  6C                 	db	108	;'l'
  1779  007B82  69                 	db	105	;'i'
  1780  007B83  6E                 	db	110	;'n'
  1781  007B84  6B                 	db	107	;'k'
  1782  007B85  20                 	db	32
  1783  007B86  00                 	db	0
  1784  007B87                     STR_76:
  1785  007B87  20                 	db	32
  1786  007B88  4C                 	db	76	;'L'
  1787  007B89  6F                 	db	111	;'o'
  1788  007B8A  52                 	db	82	;'R'
  1789  007B8B  61                 	db	97	;'a'
  1790  007B8C  57                 	db	87	;'W'
  1791  007B8D  41                 	db	65	;'A'
  1792  007B8E  4E                 	db	78	;'N'
  1793  007B8F  20                 	db	32
  1794  007B90  50                 	db	80	;'P'
  1795  007B91  61                 	db	97	;'a'
  1796  007B92  63                 	db	99	;'c'
  1797  007B93  6B                 	db	107	;'k'
  1798  007B94  65                 	db	101	;'e'
  1799  007B95  74                 	db	116	;'t'
  1800  007B96  20                 	db	32
  1801  007B97  00                 	db	0
  1802  007B98                     STR_33:
  1803  007B98  3C                 	db	60	;'<'
  1804  007B99  2D                 	db	45
  1805  007B9A  20                 	db	32
  1806  007B9B  41                 	db	65	;'A'
  1807  007B9C  42                 	db	66	;'B'
  1808  007B9D  50                 	db	80	;'P'
  1809  007B9E  20                 	db	32
  1810  007B9F  20                 	db	32
  1811  007BA0  20                 	db	32
  1812  007BA1  4F                 	db	79	;'O'
  1813  007BA2  54                 	db	84	;'T'
  1814  007BA3  41                 	db	65	;'A'
  1815  007BA4  41                 	db	65	;'A'
  1816  007BA5  20                 	db	32
  1817  007BA6  2D                 	db	45
  1818  007BA7  3E                 	db	62	;'>'
  1819  007BA8  00                 	db	0
  1820  007BA9                     STR_26:
  1821  007BA9  52                 	db	82	;'R'
  1822  007BAA  65                 	db	101	;'e'
  1823  007BAB  52                 	db	82	;'R'
  1824  007BAC  75                 	db	117	;'u'
  1825  007BAD  6E                 	db	110	;'n'
  1826  007BAE  20                 	db	32
  1827  007BAF  50                 	db	80	;'P'
  1828  007BB0  77                 	db	119	;'w'
  1829  007BB1  72                 	db	114	;'r'
  1830  007BB2  54                 	db	84	;'T'
  1831  007BB3  73                 	db	115	;'s'
  1832  007BB4  74                 	db	116	;'t'
  1833  007BB5  3C                 	db	60	;'<'
  1834  007BB6  53                 	db	83	;'S'
  1835  007BB7  32                 	db	50	;'2'
  1836  007BB8  3E                 	db	62	;'>'
  1837  007BB9  00                 	db	0
  1838  007BBA                     STR_94:
  1839  007BBA  44                 	db	68	;'D'
  1840  007BBB  61                 	db	97	;'a'
  1841  007BBC  74                 	db	116	;'t'
  1842  007BBD  61                 	db	97	;'a'
  1843  007BBE  20                 	db	32
  1844  007BBF  54                 	db	84	;'T'
  1845  007BC0  72                 	db	114	;'r'
  1846  007BC1  61                 	db	97	;'a'
  1847  007BC2  6E                 	db	110	;'n'
  1848  007BC3  73                 	db	115	;'s'
  1849  007BC4  6D                 	db	109	;'m'
  1850  007BC5  69                 	db	105	;'i'
  1851  007BC6  74                 	db	116	;'t'
  1852  007BC7  74                 	db	116	;'t'
  1853  007BC8  65                 	db	101	;'e'
  1854  007BC9  64                 	db	100	;'d'
  1855  007BCA  00                 	db	0
  1856  007BCB                     STR_151:
  1857  007BCB  45                 	db	69	;'E'
  1858  007BCC  6E                 	db	110	;'n'
  1859  007BCD  74                 	db	116	;'t'
  1860  007BCE  65                 	db	101	;'e'
  1861  007BCF  72                 	db	114	;'r'
  1862  007BD0  20                 	db	32
  1863  007BD1  53                 	db	83	;'S'
  1864  007BD2  6C                 	db	108	;'l'
  1865  007BD3  65                 	db	101	;'e'
  1866  007BD4  65                 	db	101	;'e'
  1867  007BD5  70                 	db	112	;'p'
  1868  007BD6  20                 	db	32
  1869  007BD7  4D                 	db	77	;'M'
  1870  007BD8  6F                 	db	111	;'o'
  1871  007BD9  64                 	db	100	;'d'
  1872  007BDA  65                 	db	101	;'e'
  1873  007BDB  00                 	db	0
  1874  007BDC                     STR_81:
  1875  007BDC  55                 	db	85	;'U'
  1876  007BDD  70                 	db	112	;'p'
  1877  007BDE  6C                 	db	108	;'l'
  1878  007BDF  69                 	db	105	;'i'
  1879  007BE0  6E                 	db	110	;'n'
  1880  007BE1  6B                 	db	107	;'k'
  1881  007BE2  20                 	db	32
  1882  007BE3  50                 	db	80	;'P'
  1883  007BE4  63                 	db	99	;'c'
  1884  007BE5  6B                 	db	107	;'k'
  1885  007BE6  74                 	db	116	;'t'
  1886  007BE7  20                 	db	32
  1887  007BE8  54                 	db	84	;'T'
  1888  007BE9  79                 	db	121	;'y'
  1889  007BEA  70                 	db	112	;'p'
  1890  007BEB  65                 	db	101	;'e'
  1891  007BEC  00                 	db	0
  1892  007BED                     STR_135:
  1893  007BED  53                 	db	83	;'S'
  1894  007BEE  65                 	db	101	;'e'
  1895  007BEF  6C                 	db	108	;'l'
  1896  007BF0  65                 	db	101	;'e'
  1897  007BF1  63                 	db	99	;'c'
  1898  007BF2  74                 	db	116	;'t'
  1899  007BF3  20                 	db	32
  1900  007BF4  44                 	db	68	;'D'
  1901  007BF5  61                 	db	97	;'a'
  1902  007BF6  74                 	db	116	;'t'
  1903  007BF7  61                 	db	97	;'a'
  1904  007BF8  20                 	db	32
  1905  007BF9  52                 	db	82	;'R'
  1906  007BFA  61                 	db	97	;'a'
  1907  007BFB  74                 	db	116	;'t'
  1908  007BFC  65                 	db	101	;'e'
  1909  007BFD  00                 	db	0
  1910  007BFE                     STR_27:
  1911  007BFE  4D                 	db	77	;'M'
  1912  007BFF  6F                 	db	111	;'o'
  1913  007C00  62                 	db	98	;'b'
  1914  007C01  69                 	db	105	;'i'
  1915  007C02  6C                 	db	108	;'l'
  1916  007C03  65                 	db	101	;'e'
  1917  007C04  20                 	db	32
  1918  007C05  4D                 	db	77	;'M'
  1919  007C06  6F                 	db	111	;'o'
  1920  007C07  74                 	db	116	;'t'
  1921  007C08  65                 	db	101	;'e'
  1922  007C09  20                 	db	32
  1923  007C0A  2D                 	db	45
  1924  007C0B  41                 	db	65	;'A'
  1925  007C0C  70                 	db	112	;'p'
  1926  007C0D  70                 	db	112	;'p'
  1927  007C0E  00                 	db	0
  1928  007C0F                     STR_28:
  1929  007C0F  4E                 	db	78	;'N'
  1930  007C10  61                 	db	97	;'a'
  1931  007C11  76                 	db	118	;'v'
  1932  007C12  69                 	db	105	;'i'
  1933  007C13  67                 	db	103	;'g'
  1934  007C14  61                 	db	97	;'a'
  1935  007C15  74                 	db	116	;'t'
  1936  007C16  65                 	db	101	;'e'
  1937  007C17  20                 	db	32
  1938  007C18  20                 	db	32
  1939  007C19  53                 	db	83	;'S'
  1940  007C1A  65                 	db	101	;'e'
  1941  007C1B  6C                 	db	108	;'l'
  1942  007C1C  65                 	db	101	;'e'
  1943  007C1D  63                 	db	99	;'c'
  1944  007C1E  74                 	db	116	;'t'
  1945  007C1F  00                 	db	0
  1946  007C20                     STR_111:
  1947  007C20  4D                 	db	77	;'M'
  1948  007C21  65                 	db	101	;'e'
  1949  007C22  6E                 	db	110	;'n'
  1950  007C23  75                 	db	117	;'u'
  1951  007C24  20                 	db	32
  1952  007C25  48                 	db	72	;'H'
  1953  007C26  61                 	db	97	;'a'
  1954  007C27  73                 	db	115	;'s'
  1955  007C28  20                 	db	32
  1956  007C29  54                 	db	84	;'T'
  1957  007C2A  69                 	db	105	;'i'
  1958  007C2B  6D                 	db	109	;'m'
  1959  007C2C  65                 	db	101	;'e'
  1960  007C2D  6F                 	db	111	;'o'
  1961  007C2E  75                 	db	117	;'u'
  1962  007C2F  74                 	db	116	;'t'
  1963  007C30  00                 	db	0
  1964  007C31                     STR_71:
  1965  007C31  53                 	db	83	;'S'
  1966  007C32  65                 	db	101	;'e'
  1967  007C33  6E                 	db	110	;'n'
  1968  007C34  64                 	db	100	;'d'
  1969  007C35  20                 	db	32
  1970  007C36  50                 	db	80	;'P'
  1971  007C37  65                 	db	101	;'e'
  1972  007C38  72                 	db	114	;'r'
  1973  007C39  69                 	db	105	;'i'
  1974  007C3A  6F                 	db	111	;'o'
  1975  007C3B  64                 	db	100	;'d'
  1976  007C3C  69                 	db	105	;'i'
  1977  007C3D  63                 	db	99	;'c'
  1978  007C3E  20                 	db	32
  1979  007C3F  54                 	db	84	;'T'
  1980  007C40  78                 	db	120	;'x'
  1981  007C41  00                 	db	0
  1982  007C42                     STR_105:
  1983  007C42  44                 	db	68	;'D'
  1984  007C43  6F                 	db	111	;'o'
  1985  007C44  77                 	db	119	;'w'
  1986  007C45  6E                 	db	110	;'n'
  1987  007C46  6C                 	db	108	;'l'
  1988  007C47  69                 	db	105	;'i'
  1989  007C48  6E                 	db	110	;'n'
  1990  007C49  6B                 	db	107	;'k'
  1991  007C4A  20                 	db	32
  1992  007C4B  44                 	db	68	;'D'
  1993  007C4C  69                 	db	105	;'i'
  1994  007C4D  73                 	db	115	;'s'
  1995  007C4E  70                 	db	112	;'p'
  1996  007C4F  6C                 	db	108	;'l'
  1997  007C50  61                 	db	97	;'a'
  1998  007C51  79                 	db	121	;'y'
  1999  007C52  00                 	db	0
  2000  007C53                     STR_103:
  2001  007C53  20                 	db	32
  2002  007C54  20                 	db	32
  2003  007C55  20                 	db	32
  2004  007C56  20                 	db	32
  2005  007C57  44                 	db	68	;'D'
  2006  007C58  69                 	db	105	;'i'
  2007  007C59  73                 	db	115	;'s'
  2008  007C5A  70                 	db	112	;'p'
  2009  007C5B  6C                 	db	108	;'l'
  2010  007C5C  61                 	db	97	;'a'
  2011  007C5D  79                 	db	121	;'y'
  2012  007C5E  20                 	db	32
  2013  007C5F  20                 	db	32
  2014  007C60  20                 	db	32
  2015  007C61  20                 	db	32
  2016  007C62  00                 	db	0
  2017  007C63                     STR_102:
  2018  007C63  20                 	db	32
  2019  007C64  20                 	db	32
  2020  007C65  53                 	db	83	;'S'
  2021  007C66  65                 	db	101	;'e'
  2022  007C67  6E                 	db	110	;'n'
  2023  007C68  73                 	db	115	;'s'
  2024  007C69  6F                 	db	111	;'o'
  2025  007C6A  72                 	db	114	;'r'
  2026  007C6B  20                 	db	32
  2027  007C6C  44                 	db	68	;'D'
  2028  007C6D  61                 	db	97	;'a'
  2029  007C6E  74                 	db	116	;'t'
  2030  007C6F  61                 	db	97	;'a'
  2031  007C70  20                 	db	32
  2032  007C71  20                 	db	32
  2033  007C72  00                 	db	0
  2034  007C73                     STR_114:
  2035  007C73  28                 	db	40
  2036  007C74  4E                 	db	78	;'N'
  2037  007C75  41                 	db	65	;'A'
  2038  007C76  56                 	db	86	;'V'
  2039  007C77  29                 	db	41
  2040  007C78  20                 	db	32
  2041  007C79  20                 	db	32
  2042  007C7A  20                 	db	32
  2043  007C7B  20                 	db	32
  2044  007C7C  28                 	db	40
  2045  007C7D  43                 	db	67	;'C'
  2046  007C7E  4E                 	db	78	;'N'
  2047  007C7F  47                 	db	71	;'G'
  2048  007C80  29                 	db	41
  2049  007C81  20                 	db	32
  2050  007C82  00                 	db	0
  2051  007C83                     STR_77:
  2052  007C83  28                 	db	40
  2053  007C84  4E                 	db	78	;'N'
  2054  007C85  41                 	db	65	;'A'
  2055  007C86  56                 	db	86	;'V'
  2056  007C87  29                 	db	41
  2057  007C88  20                 	db	32
  2058  007C89  20                 	db	32
  2059  007C8A  20                 	db	32
  2060  007C8B  20                 	db	32
  2061  007C8C  28                 	db	40
  2062  007C8D  53                 	db	83	;'S'
  2063  007C8E  45                 	db	69	;'E'
  2064  007C8F  4C                 	db	76	;'L'
  2065  007C90  29                 	db	41
  2066  007C91  20                 	db	32
  2067  007C92  00                 	db	0
  2068  007C93                     STR_152:
  2069  007C93  28                 	db	40
  2070  007C94  4E                 	db	78	;'N'
  2071  007C95  41                 	db	65	;'A'
  2072  007C96  56                 	db	86	;'V'
  2073  007C97  29                 	db	41
  2074  007C98  20                 	db	32
  2075  007C99  20                 	db	32
  2076  007C9A  20                 	db	32
  2077  007C9B  20                 	db	32
  2078  007C9C  28                 	db	40
  2079  007C9D  53                 	db	83	;'S'
  2080  007C9E  4C                 	db	76	;'L'
  2081  007C9F  50                 	db	80	;'P'
  2082  007CA0  29                 	db	41
  2083  007CA1  20                 	db	32
  2084  007CA2  00                 	db	0
  2085  007CA3                     STR_163:
  2086  007CA3  6D                 	db	109	;'m'
  2087  007CA4  61                 	db	97	;'a'
  2088  007CA5  63                 	db	99	;'c'
  2089  007CA6  20                 	db	32
  2090  007CA7  73                 	db	115	;'s'
  2091  007CA8  65                 	db	101	;'e'
  2092  007CA9  74                 	db	116	;'t'
  2093  007CAA  20                 	db	32
  2094  007CAB  61                 	db	97	;'a'
  2095  007CAC  64                 	db	100	;'d'
  2096  007CAD  72                 	db	114	;'r'
  2097  007CAE  20                 	db	32
  2098  007CAF  6F                 	db	111	;'o'
  2099  007CB0  66                 	db	102	;'f'
  2100  007CB1  66                 	db	102	;'f'
  2101  007CB2  00                 	db	0
  2102  007CB3                     STR_98:
  2103  007CB3  4E                 	db	78	;'N'
  2104  007CB4  6F                 	db	111	;'o'
  2105  007CB5  20                 	db	32
  2106  007CB6  46                 	db	70	;'F'
  2107  007CB7  72                 	db	114	;'r'
  2108  007CB8  65                 	db	101	;'e'
  2109  007CB9  65                 	db	101	;'e'
  2110  007CBA  20                 	db	32
  2111  007CBB  43                 	db	67	;'C'
  2112  007CBC  68                 	db	104	;'h'
  2113  007CBD  61                 	db	97	;'a'
  2114  007CBE  6E                 	db	110	;'n'
  2115  007CBF  6E                 	db	110	;'n'
  2116  007CC0  65                 	db	101	;'e'
  2117  007CC1  6C                 	db	108	;'l'
  2118  007CC2  00                 	db	0
  2119  007CC3                     STR_7:
  2120  007CC3  42                 	db	66	;'B'
  2121  007CC4  75                 	db	117	;'u'
  2122  007CC5  69                 	db	105	;'i'
  2123  007CC6  6C                 	db	108	;'l'
  2124  007CC7  64                 	db	100	;'d'
  2125  007CC8  20                 	db	32
  2126  007CC9  44                 	db	68	;'D'
  2127  007CCA  61                 	db	97	;'a'
  2128  007CCB  74                 	db	116	;'t'
  2129  007CCC  65                 	db	101	;'e'
  2130  007CCD  2F                 	db	47
  2131  007CCE  54                 	db	84	;'T'
  2132  007CCF  69                 	db	105	;'i'
  2133  007CD0  6D                 	db	109	;'m'
  2134  007CD1  65                 	db	101	;'e'
  2135  007CD2  00                 	db	0
  2136  007CD3                     STR_112:
  2137  007CD3  20                 	db	32
  2138  007CD4  20                 	db	32
  2139  007CD5  20                 	db	32
  2140  007CD6  20                 	db	32
  2141  007CD7  45                 	db	69	;'E'
  2142  007CD8  6E                 	db	110	;'n'
  2143  007CD9  61                 	db	97	;'a'
  2144  007CDA  62                 	db	98	;'b'
  2145  007CDB  6C                 	db	108	;'l'
  2146  007CDC  65                 	db	101	;'e'
  2147  007CDD  64                 	db	100	;'d'
  2148  007CDE  20                 	db	32
  2149  007CDF  20                 	db	32
  2150  007CE0  20                 	db	32
  2151  007CE1  00                 	db	0
  2152  007CE2                     STR_113:
  2153  007CE2  20                 	db	32
  2154  007CE3  20                 	db	32
  2155  007CE4  20                 	db	32
  2156  007CE5  20                 	db	32
  2157  007CE6  44                 	db	68	;'D'
  2158  007CE7  69                 	db	105	;'i'
  2159  007CE8  73                 	db	115	;'s'
  2160  007CE9  61                 	db	97	;'a'
  2161  007CEA  62                 	db	98	;'b'
  2162  007CEB  6C                 	db	108	;'l'
  2163  007CEC  65                 	db	101	;'e'
  2164  007CED  64                 	db	100	;'d'
  2165  007CEE  20                 	db	32
  2166  007CEF  20                 	db	32
  2167  007CF0  00                 	db	0
  2168  007CF1                     STR_172:
  2169  007CF1  6D                 	db	109	;'m'
  2170  007CF2  61                 	db	97	;'a'
  2171  007CF3  63                 	db	99	;'c'
  2172  007CF4  20                 	db	32
  2173  007CF5  73                 	db	115	;'s'
  2174  007CF6  65                 	db	101	;'e'
  2175  007CF7  74                 	db	116	;'t'
  2176  007CF8  20                 	db	32
  2177  007CF9  61                 	db	97	;'a'
  2178  007CFA  64                 	db	100	;'d'
  2179  007CFB  72                 	db	114	;'r'
  2180  007CFC  20                 	db	32
  2181  007CFD  6F                 	db	111	;'o'
  2182  007CFE  6E                 	db	110	;'n'
  2183  007CFF  00                 	db	0
  2184  007D00                     STR_2:
  2185  007D00  20                 	db	32
  2186  007D01  20                 	db	32
  2187  007D02  20                 	db	32
  2188  007D03  4C                 	db	76	;'L'
  2189  007D04  6F                 	db	111	;'o'
  2190  007D05  52                 	db	82	;'R'
  2191  007D06  61                 	db	97	;'a'
  2192  007D07  20                 	db	32
  2193  007D08  44                 	db	68	;'D'
  2194  007D09  65                 	db	101	;'e'
  2195  007D0A  6D                 	db	109	;'m'
  2196  007D0B  6F                 	db	111	;'o'
  2197  007D0C  20                 	db	32
  2198  007D0D  20                 	db	32
  2199  007D0E  00                 	db	0
  2200  007D0F                     STR_3:
  2201  007D0F  20                 	db	32
  2202  007D10  56                 	db	86	;'V'
  2203  007D11  20                 	db	32
  2204  007D12  31                 	db	49	;'1'
  2205  007D13  2E                 	db	46
  2206  007D14  30                 	db	48	;'0'
  2207  007D15  2E                 	db	46
  2208  007D16  31                 	db	49	;'1'
  2209  007D17  20                 	db	32
  2210  007D18  43                 	db	67	;'C'
  2211  007D19  6F                 	db	111	;'o'
  2212  007D1A  64                 	db	100	;'d'
  2213  007D1B  65                 	db	101	;'e'
  2214  007D1C  20                 	db	32
  2215  007D1D  00                 	db	0
  2216  007D1E                     STR_1:
  2217  007D1E  4D                 	db	77	;'M'
  2218  007D1F  69                 	db	105	;'i'
  2219  007D20  63                 	db	99	;'c'
  2220  007D21  72                 	db	114	;'r'
  2221  007D22  6F                 	db	111	;'o'
  2222  007D23  63                 	db	99	;'c'
  2223  007D24  68                 	db	104	;'h'
  2224  007D25  69                 	db	105	;'i'
  2225  007D26  70                 	db	112	;'p'
  2226  007D27  20                 	db	32
  2227  007D28  4D                 	db	77	;'M'
  2228  007D29  6F                 	db	111	;'o'
  2229  007D2A  74                 	db	116	;'t'
  2230  007D2B  65                 	db	101	;'e'
  2231  007D2C  00                 	db	0
  2232  007D2D                     STR_74:
  2233  007D2D  6D                 	db	109	;'m'
  2234  007D2E  61                 	db	97	;'a'
  2235  007D2F  63                 	db	99	;'c'
  2236  007D30  20                 	db	32
  2237  007D31  74                 	db	116	;'t'
  2238  007D32  78                 	db	120	;'x'
  2239  007D33  20                 	db	32
  2240  007D34  75                 	db	117	;'u'
  2241  007D35  6E                 	db	110	;'n'
  2242  007D36  63                 	db	99	;'c'
  2243  007D37  6E                 	db	110	;'n'
  2244  007D38  66                 	db	102	;'f'
  2245  007D39  20                 	db	32
  2246  007D3A  00                 	db	0
  2247  007D3B                     STR_43:
  2248  007D3B  6D                 	db	109	;'m'
  2249  007D3C  61                 	db	97	;'a'
  2250  007D3D  63                 	db	99	;'c'
  2251  007D3E  20                 	db	32
  2252  007D3F  6A                 	db	106	;'j'
  2253  007D40  6F                 	db	111	;'o'
  2254  007D41  69                 	db	105	;'i'
  2255  007D42  6E                 	db	110	;'n'
  2256  007D43  20                 	db	32
  2257  007D44  6F                 	db	111	;'o'
  2258  007D45  74                 	db	116	;'t'
  2259  007D46  61                 	db	97	;'a'
  2260  007D47  61                 	db	97	;'a'
  2261  007D48  00                 	db	0
  2262  007D49                     STR_57:
  2263  007D49  69                 	db	105	;'i'
  2264  007D4A  6E                 	db	110	;'n'
  2265  007D4B  76                 	db	118	;'v'
  2266  007D4C  61                 	db	97	;'a'
  2267  007D4D  6C                 	db	108	;'l'
  2268  007D4E  69                 	db	105	;'i'
  2269  007D4F  64                 	db	100	;'d'
  2270  007D50  5F                 	db	95	;'_'
  2271  007D51  70                 	db	112	;'p'
  2272  007D52  61                 	db	97	;'a'
  2273  007D53  72                 	db	114	;'r'
  2274  007D54  61                 	db	97	;'a'
  2275  007D55  6D                 	db	109	;'m'
  2276  007D56  00                 	db	0
  2277  007D57                     STR_45:
  2278  007D57  6B                 	db	107	;'k'
  2279  007D58  65                 	db	101	;'e'
  2280  007D59  79                 	db	121	;'y'
  2281  007D5A  73                 	db	115	;'s'
  2282  007D5B  5F                 	db	95	;'_'
  2283  007D5C  6E                 	db	110	;'n'
  2284  007D5D  6F                 	db	111	;'o'
  2285  007D5E  74                 	db	116	;'t'
  2286  007D5F  5F                 	db	95	;'_'
  2287  007D60  69                 	db	105	;'i'
  2288  007D61  6E                 	db	110	;'n'
  2289  007D62  69                 	db	105	;'i'
  2290  007D63  74                 	db	116	;'t'
  2291  007D64  00                 	db	0
  2292  007D65                     STR_82:
  2293  007D65  54                 	db	84	;'T'
  2294  007D66  68                 	db	104	;'h'
  2295  007D67  72                 	db	114	;'r'
  2296  007D68  6F                 	db	111	;'o'
  2297  007D69  75                 	db	117	;'u'
  2298  007D6A  20                 	db	32
  2299  007D6B  50                 	db	80	;'P'
  2300  007D6C  6F                 	db	111	;'o'
  2301  007D6D  72                 	db	114	;'r'
  2302  007D6E  74                 	db	116	;'t'
  2303  007D6F  23                 	db	35
  2304  007D70  20                 	db	32
  2305  007D71  00                 	db	0
  2306  007D72                     STR_73:
  2307  007D72  4C                 	db	76	;'L'
  2308  007D73  3A                 	db	58	;':'
  2309  007D74  20                 	db	32
  2310  007D75  20                 	db	32
  2311  007D76  20                 	db	32
  2312  007D77  20                 	db	32
  2313  007D78  20                 	db	32
  2314  007D79  20                 	db	32
  2315  007D7A  20                 	db	32
  2316  007D7B  54                 	db	84	;'T'
  2317  007D7C  3A                 	db	58	;':'
  2318  007D7D  20                 	db	32
  2319  007D7E  00                 	db	0
  2320  007D7F                     STR_164:
  2321  007D7F  6D                 	db	109	;'m'
  2322  007D80  61                 	db	97	;'a'
  2323  007D81  63                 	db	99	;'c'
  2324  007D82  20                 	db	32
  2325  007D83  73                 	db	115	;'s'
  2326  007D84  65                 	db	101	;'e'
  2327  007D85  74                 	db	116	;'t'
  2328  007D86  20                 	db	32
  2329  007D87  64                 	db	100	;'d'
  2330  007D88  72                 	db	114	;'r'
  2331  007D89  20                 	db	32
  2332  007D8A  30                 	db	48	;'0'
  2333  007D8B  00                 	db	0
  2334  007D8C                     STR_165:
  2335  007D8C  6D                 	db	109	;'m'
  2336  007D8D  61                 	db	97	;'a'
  2337  007D8E  63                 	db	99	;'c'
  2338  007D8F  20                 	db	32
  2339  007D90  73                 	db	115	;'s'
  2340  007D91  65                 	db	101	;'e'
  2341  007D92  74                 	db	116	;'t'
  2342  007D93  20                 	db	32
  2343  007D94  64                 	db	100	;'d'
  2344  007D95  72                 	db	114	;'r'
  2345  007D96  20                 	db	32
  2346  007D97  31                 	db	49	;'1'
  2347  007D98  00                 	db	0
  2348  007D99                     STR_166:
  2349  007D99  6D                 	db	109	;'m'
  2350  007D9A  61                 	db	97	;'a'
  2351  007D9B  63                 	db	99	;'c'
  2352  007D9C  20                 	db	32
  2353  007D9D  73                 	db	115	;'s'
  2354  007D9E  65                 	db	101	;'e'
  2355  007D9F  74                 	db	116	;'t'
  2356  007DA0  20                 	db	32
  2357  007DA1  64                 	db	100	;'d'
  2358  007DA2  72                 	db	114	;'r'
  2359  007DA3  20                 	db	32
  2360  007DA4  32                 	db	50	;'2'
  2361  007DA5  00                 	db	0
  2362  007DA6                     STR_167:
  2363  007DA6  6D                 	db	109	;'m'
  2364  007DA7  61                 	db	97	;'a'
  2365  007DA8  63                 	db	99	;'c'
  2366  007DA9  20                 	db	32
  2367  007DAA  73                 	db	115	;'s'
  2368  007DAB  65                 	db	101	;'e'
  2369  007DAC  74                 	db	116	;'t'
  2370  007DAD  20                 	db	32
  2371  007DAE  64                 	db	100	;'d'
  2372  007DAF  72                 	db	114	;'r'
  2373  007DB0  20                 	db	32
  2374  007DB1  33                 	db	51	;'3'
  2375  007DB2  00                 	db	0
  2376  007DB3                     STR_168:
  2377  007DB3  6D                 	db	109	;'m'
  2378  007DB4  61                 	db	97	;'a'
  2379  007DB5  63                 	db	99	;'c'
  2380  007DB6  20                 	db	32
  2381  007DB7  73                 	db	115	;'s'
  2382  007DB8  65                 	db	101	;'e'
  2383  007DB9  74                 	db	116	;'t'
  2384  007DBA  20                 	db	32
  2385  007DBB  64                 	db	100	;'d'
  2386  007DBC  72                 	db	114	;'r'
  2387  007DBD  20                 	db	32
  2388  007DBE  34                 	db	52	;'4'
  2389  007DBF  00                 	db	0
  2390  007DC0                     STR_169:
  2391  007DC0  6D                 	db	109	;'m'
  2392  007DC1  61                 	db	97	;'a'
  2393  007DC2  63                 	db	99	;'c'
  2394  007DC3  20                 	db	32
  2395  007DC4  73                 	db	115	;'s'
  2396  007DC5  65                 	db	101	;'e'
  2397  007DC6  74                 	db	116	;'t'
  2398  007DC7  20                 	db	32
  2399  007DC8  64                 	db	100	;'d'
  2400  007DC9  72                 	db	114	;'r'
  2401  007DCA  20                 	db	32
  2402  007DCB  35                 	db	53	;'5'
  2403  007DCC  00                 	db	0
  2404  007DCD                     STR_170:
  2405  007DCD  6D                 	db	109	;'m'
  2406  007DCE  61                 	db	97	;'a'
  2407  007DCF  63                 	db	99	;'c'
  2408  007DD0  20                 	db	32
  2409  007DD1  73                 	db	115	;'s'
  2410  007DD2  65                 	db	101	;'e'
  2411  007DD3  74                 	db	116	;'t'
  2412  007DD4  20                 	db	32
  2413  007DD5  64                 	db	100	;'d'
  2414  007DD6  72                 	db	114	;'r'
  2415  007DD7  20                 	db	32
  2416  007DD8  36                 	db	54	;'6'
  2417  007DD9  00                 	db	0
  2418  007DDA                     STR_171:
  2419  007DDA  6D                 	db	109	;'m'
  2420  007DDB  61                 	db	97	;'a'
  2421  007DDC  63                 	db	99	;'c'
  2422  007DDD  20                 	db	32
  2423  007DDE  73                 	db	115	;'s'
  2424  007DDF  65                 	db	101	;'e'
  2425  007DE0  74                 	db	116	;'t'
  2426  007DE1  20                 	db	32
  2427  007DE2  64                 	db	100	;'d'
  2428  007DE3  72                 	db	114	;'r'
  2429  007DE4  20                 	db	32
  2430  007DE5  37                 	db	55	;'7'
  2431  007DE6  00                 	db	0
  2432  007DE7                     STR_41:
  2433  007DE7  6D                 	db	109	;'m'
  2434  007DE8  61                 	db	97	;'a'
  2435  007DE9  63                 	db	99	;'c'
  2436  007DEA  20                 	db	32
  2437  007DEB  6A                 	db	106	;'j'
  2438  007DEC  6F                 	db	111	;'o'
  2439  007DED  69                 	db	105	;'i'
  2440  007DEE  6E                 	db	110	;'n'
  2441  007DEF  20                 	db	32
  2442  007DF0  61                 	db	97	;'a'
  2443  007DF1  62                 	db	98	;'b'
  2444  007DF2  70                 	db	112	;'p'
  2445  007DF3  00                 	db	0
  2446  007DF4                     STR_10:
  2447  007DF4  42                 	db	66	;'B'
  2448  007DF5  75                 	db	117	;'u'
  2449  007DF6  74                 	db	116	;'t'
  2450  007DF7  74                 	db	116	;'t'
  2451  007DF8  6F                 	db	111	;'o'
  2452  007DF9  6E                 	db	110	;'n'
  2453  007DFA  20                 	db	32
  2454  007DFB  54                 	db	84	;'T'
  2455  007DFC  65                 	db	101	;'e'
  2456  007DFD  73                 	db	115	;'s'
  2457  007DFE  74                 	db	116	;'t'
  2458  007DFF  3A                 	db	58	;':'
  2459  007E00  00                 	db	0
  2460  007E01                     STR_13:
  2461  007E01  42                 	db	66	;'B'
  2462  007E02  75                 	db	117	;'u'
  2463  007E03  74                 	db	116	;'t'
  2464  007E04  74                 	db	116	;'t'
  2465  007E05  6F                 	db	111	;'o'
  2466  007E06  6E                 	db	110	;'n'
  2467  007E07  31                 	db	49	;'1'
  2468  007E08  20                 	db	32
  2469  007E09  50                 	db	80	;'P'
  2470  007E0A  41                 	db	65	;'A'
  2471  007E0B  53                 	db	83	;'S'
  2472  007E0C  53                 	db	83	;'S'
  2473  007E0D  00                 	db	0
  2474  007E0E                     STR_14:
  2475  007E0E  42                 	db	66	;'B'
  2476  007E0F  75                 	db	117	;'u'
  2477  007E10  74                 	db	116	;'t'
  2478  007E11  74                 	db	116	;'t'
  2479  007E12  6F                 	db	111	;'o'
  2480  007E13  6E                 	db	110	;'n'
  2481  007E14  32                 	db	50	;'2'
  2482  007E15  20                 	db	32
  2483  007E16  50                 	db	80	;'P'
  2484  007E17  41                 	db	65	;'A'
  2485  007E18  53                 	db	83	;'S'
  2486  007E19  53                 	db	83	;'S'
  2487  007E1A  00                 	db	0
  2488  007E1B                     STR_12:
  2489  007E1B  50                 	db	80	;'P'
  2490  007E1C  72                 	db	114	;'r'
  2491  007E1D  65                 	db	101	;'e'
  2492  007E1E  73                 	db	115	;'s'
  2493  007E1F  73                 	db	115	;'s'
  2494  007E20  20                 	db	32
  2495  007E21  42                 	db	66	;'B'
  2496  007E22  75                 	db	117	;'u'
  2497  007E23  74                 	db	116	;'t'
  2498  007E24  74                 	db	116	;'t'
  2499  007E25  6F                 	db	111	;'o'
  2500  007E26  6E                 	db	110	;'n'
  2501  007E27  00                 	db	0
  2502  007E28                     STR_189:
  2503  007E28  55                 	db	85	;'U'
  2504  007E29  53                 	db	83	;'S'
  2505  007E2A  42                 	db	66	;'B'
  2506  007E2B  20                 	db	32
  2507  007E2C  48                 	db	72	;'H'
  2508  007E2D  61                 	db	97	;'a'
  2509  007E2E  6E                 	db	110	;'n'
  2510  007E2F  64                 	db	100	;'d'
  2511  007E30  6C                 	db	108	;'l'
  2512  007E31  65                 	db	101	;'e'
  2513  007E32  72                 	db	114	;'r'
  2514  007E33  00                 	db	0
  2515  007E34                     STR_72:
  2516  007E34  4F                 	db	79	;'O'
  2517  007E35  6E                 	db	110	;'n'
  2518  007E36  20                 	db	32
  2519  007E37  50                 	db	80	;'P'
  2520  007E38  6F                 	db	111	;'o'
  2521  007E39  72                 	db	114	;'r'
  2522  007E3A  74                 	db	116	;'t'
  2523  007E3B  20                 	db	32
  2524  007E3C  23                 	db	35
  2525  007E3D  3A                 	db	58	;':'
  2526  007E3E  20                 	db	32
  2527  007E3F  00                 	db	0
  2528  007E40                     STR_87:
  2529  007E40  54                 	db	84	;'T'
  2530  007E41  78                 	db	120	;'x'
  2531  007E42  20                 	db	32
  2532  007E43  50                 	db	80	;'P'
  2533  007E44  6F                 	db	111	;'o'
  2534  007E45  72                 	db	114	;'r'
  2535  007E46  74                 	db	116	;'t'
  2536  007E47  20                 	db	32
  2537  007E48  23                 	db	35
  2538  007E49  3A                 	db	58	;':'
  2539  007E4A  20                 	db	32
  2540  007E4B  00                 	db	0
  2541  007E4C                     STR_86:
  2542  007E4C  53                 	db	83	;'S'
  2543  007E4D  65                 	db	101	;'e'
  2544  007E4E  6E                 	db	110	;'n'
  2545  007E4F  74                 	db	116	;'t'
  2546  007E50  20                 	db	32
  2547  007E51  44                 	db	68	;'D'
  2548  007E52  61                 	db	97	;'a'
  2549  007E53  74                 	db	116	;'t'
  2550  007E54  61                 	db	97	;'a'
  2551  007E55  3A                 	db	58	;':'
  2552  007E56  20                 	db	32
  2553  007E57  00                 	db	0
  2554  007E58                     STR_136:
  2555  007E58  44                 	db	68	;'D'
  2556  007E59  61                 	db	97	;'a'
  2557  007E5A  74                 	db	116	;'t'
  2558  007E5B  61                 	db	97	;'a'
  2559  007E5C  20                 	db	32
  2560  007E5D  52                 	db	82	;'R'
  2561  007E5E  61                 	db	97	;'a'
  2562  007E5F  74                 	db	116	;'t'
  2563  007E60  65                 	db	101	;'e'
  2564  007E61  3A                 	db	58	;':'
  2565  007E62  20                 	db	32
  2566  007E63  00                 	db	0
  2567  007E64                     STR_85:
  2568  007E64  6D                 	db	109	;'m'
  2569  007E65  61                 	db	97	;'a'
  2570  007E66  63                 	db	99	;'c'
  2571  007E67  20                 	db	32
  2572  007E68  74                 	db	116	;'t'
  2573  007E69  78                 	db	120	;'x'
  2574  007E6A  20                 	db	32
  2575  007E6B  63                 	db	99	;'c'
  2576  007E6C  6E                 	db	110	;'n'
  2577  007E6D  66                 	db	102	;'f'
  2578  007E6E  20                 	db	32
  2579  007E6F  00                 	db	0
  2580  007E70                     STR_8:
  2581  007E70  4D                 	db	77	;'M'
  2582  007E71  61                 	db	97	;'a'
  2583  007E72  72                 	db	114	;'r'
  2584  007E73  20                 	db	32
  2585  007E74  32                 	db	50	;'2'
  2586  007E75  38                 	db	56	;'8'
  2587  007E76  20                 	db	32
  2588  007E77  32                 	db	50	;'2'
  2589  007E78  30                 	db	48	;'0'
  2590  007E79  31                 	db	49	;'1'
  2591  007E7A  38                 	db	56	;'8'
  2592  007E7B  00                 	db	0
  2593  007E7C                     STR_11:
  2594  007E7C  42                 	db	66	;'B'
  2595  007E7D  75                 	db	117	;'u'
  2596  007E7E  74                 	db	116	;'t'
  2597  007E7F  74                 	db	116	;'t'
  2598  007E80  6F                 	db	111	;'o'
  2599  007E81  6E                 	db	110	;'n'
  2600  007E82  20                 	db	32
  2601  007E83  46                 	db	70	;'F'
  2602  007E84  41                 	db	65	;'A'
  2603  007E85  49                 	db	73	;'I'
  2604  007E86  4C                 	db	76	;'L'
  2605  007E87  00                 	db	0
  2606  007E88                     STR_61:
  2607  007E88  4F                 	db	79	;'O'
  2608  007E89  54                 	db	84	;'T'
  2609  007E8A  41                 	db	65	;'A'
  2610  007E8B  41                 	db	65	;'A'
  2611  007E8C  20                 	db	32
  2612  007E8D  4A                 	db	74	;'J'
  2613  007E8E  6F                 	db	111	;'o'
  2614  007E8F  69                 	db	105	;'i'
  2615  007E90  6E                 	db	110	;'n'
  2616  007E91  20                 	db	32
  2617  007E92  00                 	db	0
  2618  007E93                     STR_59:
  2619  007E93  6E                 	db	110	;'n'
  2620  007E94  6F                 	db	111	;'o'
  2621  007E95  5F                 	db	95	;'_'
  2622  007E96  66                 	db	102	;'f'
  2623  007E97  72                 	db	114	;'r'
  2624  007E98  65                 	db	101	;'e'
  2625  007E99  65                 	db	101	;'e'
  2626  007E9A  5F                 	db	95	;'_'
  2627  007E9B  63                 	db	99	;'c'
  2628  007E9C  68                 	db	104	;'h'
  2629  007E9D  00                 	db	0
  2630  007E9E                     STR_51:
  2631  007E9E  53                 	db	83	;'S'
  2632  007E9F  75                 	db	117	;'u'
  2633  007EA0  63                 	db	99	;'c'
  2634  007EA1  63                 	db	99	;'c'
  2635  007EA2  65                 	db	101	;'e'
  2636  007EA3  73                 	db	115	;'s'
  2637  007EA4  73                 	db	115	;'s'
  2638  007EA5  66                 	db	102	;'f'
  2639  007EA6  75                 	db	117	;'u'
  2640  007EA7  6C                 	db	108	;'l'
  2641  007EA8  00                 	db	0
  2642  007EA9                     STR_68:
  2643  007EA9  6D                 	db	109	;'m'
  2644  007EAA  61                 	db	97	;'a'
  2645  007EAB  63                 	db	99	;'c'
  2646  007EAC  20                 	db	32
  2647  007EAD  67                 	db	103	;'g'
  2648  007EAE  65                 	db	101	;'e'
  2649  007EAF  74                 	db	116	;'t'
  2650  007EB0  20                 	db	32
  2651  007EB1  64                 	db	100	;'d'
  2652  007EB2  72                 	db	114	;'r'
  2653  007EB3  00                 	db	0
  2654  007EB4                     STR_46:
  2655  007EB4  56                 	db	86	;'V'
  2656  007EB5  61                 	db	97	;'a'
  2657  007EB6  6C                 	db	108	;'l'
  2658  007EB7  69                 	db	105	;'i'
  2659  007EB8  64                 	db	100	;'d'
  2660  007EB9  20                 	db	32
  2661  007EBA  4B                 	db	75	;'K'
  2662  007EBB  65                 	db	101	;'e'
  2663  007EBC  79                 	db	121	;'y'
  2664  007EBD  73                 	db	115	;'s'
  2665  007EBE  00                 	db	0
  2666  007EBF                     STR_15:
  2667  007EBF  43                 	db	67	;'C'
  2668  007EC0  6F                 	db	111	;'o'
  2669  007EC1  6D                 	db	109	;'m'
  2670  007EC2  6D                 	db	109	;'m'
  2671  007EC3  20                 	db	32
  2672  007EC4  54                 	db	84	;'T'
  2673  007EC5  65                 	db	101	;'e'
  2674  007EC6  73                 	db	115	;'s'
  2675  007EC7  74                 	db	116	;'t'
  2676  007EC8  3A                 	db	58	;':'
  2677  007EC9  00                 	db	0
  2678  007ECA                     STR_106:
  2679  007ECA  52                 	db	82	;'R'
  2680  007ECB  78                 	db	120	;'x'
  2681  007ECC  20                 	db	32
  2682  007ECD  50                 	db	80	;'P'
  2683  007ECE  6F                 	db	111	;'o'
  2684  007ECF  72                 	db	114	;'r'
  2685  007ED0  74                 	db	116	;'t'
  2686  007ED1  23                 	db	35
  2687  007ED2  20                 	db	32
  2688  007ED3  00                 	db	0
  2689  007ED4                     STR_50:
  2690  007ED4  41                 	db	65	;'A'
  2691  007ED5  42                 	db	66	;'B'
  2692  007ED6  50                 	db	80	;'P'
  2693  007ED7  20                 	db	32
  2694  007ED8  4A                 	db	74	;'J'
  2695  007ED9  6F                 	db	111	;'o'
  2696  007EDA  69                 	db	105	;'i'
  2697  007EDB  6E                 	db	110	;'n'
  2698  007EDC  20                 	db	32
  2699  007EDD  00                 	db	0
  2700  007EDE                     STR_24:
  2701  007EDE  4D                 	db	77	;'M'
  2702  007EDF  4F                 	db	79	;'O'
  2703  007EE0  54                 	db	84	;'T'
  2704  007EE1  45                 	db	69	;'E'
  2705  007EE2  20                 	db	32
  2706  007EE3  4D                 	db	77	;'M'
  2707  007EE4  6F                 	db	111	;'o'
  2708  007EE5  64                 	db	100	;'d'
  2709  007EE6  65                 	db	101	;'e'
  2710  007EE7  00                 	db	0
  2711  007EE8                     STR_64:
  2712  007EE8  4F                 	db	79	;'O'
  2713  007EE9  54                 	db	84	;'T'
  2714  007EEA  41                 	db	65	;'A'
  2715  007EEB  41                 	db	65	;'A'
  2716  007EEC  20                 	db	32
  2717  007EED  4A                 	db	74	;'J'
  2718  007EEE  6F                 	db	111	;'o'
  2719  007EEF  69                 	db	105	;'i'
  2720  007EF0  6E                 	db	110	;'n'
  2721  007EF1  00                 	db	0
  2722  007EF2                     STR_52:
  2723  007EF2  6D                 	db	109	;'m'
  2724  007EF3  61                 	db	97	;'a'
  2725  007EF4  63                 	db	99	;'c'
  2726  007EF5  20                 	db	32
  2727  007EF6  72                 	db	114	;'r'
  2728  007EF7  65                 	db	101	;'e'
  2729  007EF8  73                 	db	115	;'s'
  2730  007EF9  65                 	db	101	;'e'
  2731  007EFA  74                 	db	116	;'t'
  2732  007EFB  00                 	db	0
  2733  007EFC                     STR_30:
  2734  007EFC  73                 	db	115	;'s'
  2735  007EFD  79                 	db	121	;'y'
  2736  007EFE  73                 	db	115	;'s'
  2737  007EFF  20                 	db	32
  2738  007F00  72                 	db	114	;'r'
  2739  007F01  65                 	db	101	;'e'
  2740  007F02  73                 	db	115	;'s'
  2741  007F03  65                 	db	101	;'e'
  2742  007F04  74                 	db	116	;'t'
  2743  007F05  00                 	db	0
  2744  007F06                     STR_16:
  2745  007F06  4C                 	db	76	;'L'
  2746  007F07  45                 	db	69	;'E'
  2747  007F08  44                 	db	68	;'D'
  2748  007F09  20                 	db	32
  2749  007F0A  54                 	db	84	;'T'
  2750  007F0B  65                 	db	101	;'e'
  2751  007F0C  73                 	db	115	;'s'
  2752  007F0D  74                 	db	116	;'t'
  2753  007F0E  3A                 	db	58	;':'
  2754  007F0F  00                 	db	0
  2755  007F10                     STR_187:
  2756  007F10  43                 	db	67	;'C'
  2757  007F11  44                 	db	68	;'D'
  2758  007F12  43                 	db	67	;'C'
  2759  007F13  20                 	db	32
  2760  007F14  4D                 	db	77	;'M'
  2761  007F15  6F                 	db	111	;'o'
  2762  007F16  64                 	db	100	;'d'
  2763  007F17  65                 	db	101	;'e'
  2764  007F18  00                 	db	0
  2765  007F19                     STR_47:
  2766  007F19  52                 	db	82	;'R'
  2767  007F1A  65                 	db	101	;'e'
  2768  007F1B  71                 	db	113	;'q'
  2769  007F1C  75                 	db	117	;'u'
  2770  007F1D  69                 	db	105	;'i'
  2771  007F1E  72                 	db	114	;'r'
  2772  007F1F  65                 	db	101	;'e'
  2773  007F20  64                 	db	100	;'d'
  2774  007F21  00                 	db	0
  2775  007F22                     STR_49:
  2776  007F22  61                 	db	97	;'a'
  2777  007F23  63                 	db	99	;'c'
  2778  007F24  63                 	db	99	;'c'
  2779  007F25  65                 	db	101	;'e'
  2780  007F26  70                 	db	112	;'p'
  2781  007F27  74                 	db	116	;'t'
  2782  007F28  65                 	db	101	;'e'
  2783  007F29  64                 	db	100	;'d'
  2784  007F2A  00                 	db	0
  2785  007F2B                     STR_173:
  2786  007F2B  6D                 	db	109	;'m'
  2787  007F2C  61                 	db	97	;'a'
  2788  007F2D  63                 	db	99	;'c'
  2789  007F2E  20                 	db	32
  2790  007F2F  73                 	db	115	;'s'
  2791  007F30  61                 	db	97	;'a'
  2792  007F31  76                 	db	118	;'v'
  2793  007F32  65                 	db	101	;'e'
  2794  007F33  00                 	db	0
  2795  007F34                     STR_25:
  2796  007F34  53                 	db	83	;'S'
  2797  007F35  74                 	db	116	;'t'
  2798  007F36  61                 	db	97	;'a'
  2799  007F37  72                 	db	114	;'r'
  2800  007F38  74                 	db	116	;'t'
  2801  007F39  69                 	db	105	;'i'
  2802  007F3A  6E                 	db	110	;'n'
  2803  007F3B  67                 	db	103	;'g'
  2804  007F3C  00                 	db	0
  2805  007F3D                     STR_4:
  2806  007F3D  4D                 	db	77	;'M'
  2807  007F3E  6F                 	db	111	;'o'
  2808  007F3F  54                 	db	84	;'T'
  2809  007F40  65                 	db	101	;'e'
  2810  007F41  20                 	db	32
  2811  007F42  76                 	db	118	;'v'
  2812  007F43  20                 	db	32
  2813  007F44  2E                 	db	46
  2814  007F45  00                 	db	0
  2815  007F46                     STR_9:
  2816  007F46  30                 	db	48	;'0'
  2817  007F47  38                 	db	56	;'8'
  2818  007F48  3A                 	db	58	;':'
  2819  007F49  33                 	db	51	;'3'
  2820  007F4A  32                 	db	50	;'2'
  2821  007F4B  3A                 	db	58	;':'
  2822  007F4C  32                 	db	50	;'2'
  2823  007F4D  32                 	db	50	;'2'
  2824  007F4E  00                 	db	0
  2825  007F4F  52                 	db	82	;'R'
  2826  007F50  46                 	db	70	;'F'
  2827  007F51  20                 	db	32
  2828  007F52  54                 	db	84	;'T'
  2829  007F53  65                 	db	101	;'e'
  2830  007F54  73                 	db	115	;'s'
  2831  007F55  74                 	db	116	;'t'
  2832  007F56  3A                 	db	58	;':'
  2833  007F57  00                 	db	0
  2834  007F58                     STR_17:
  2835  007F58  41                 	db	65	;'A'
  2836  007F59  44                 	db	68	;'D'
  2837  007F5A  43                 	db	67	;'C'
  2838  007F5B  20                 	db	32
  2839  007F5C  54                 	db	84	;'T'
  2840  007F5D  65                 	db	101	;'e'
  2841  007F5E  73                 	db	115	;'s'
  2842  007F5F  74                 	db	116	;'t'
  2843  007F60  00                 	db	0
  2844  007F61                     STR_188:
  2845  007F61  43                 	db	67	;'C'
  2846  007F62  6F                 	db	111	;'o'
  2847  007F63  6D                 	db	109	;'m'
  2848  007F64  6D                 	db	109	;'m'
  2849  007F65  61                 	db	97	;'a'
  2850  007F66  6E                 	db	110	;'n'
  2851  007F67  64                 	db	100	;'d'
  2852  007F68  00                 	db	0
  2853  007F69                     STR_18:
  2854  007F69  54                 	db	84	;'T'
  2855  007F6A  65                 	db	101	;'e'
  2856  007F6B  6D                 	db	109	;'m'
  2857  007F6C  70                 	db	112	;'p'
  2858  007F6D  20                 	db	32
  2859  007F6E  20                 	db	32
  2860  007F6F  3D                 	db	61	;'='
  2861  007F70  00                 	db	0
  2862  007F71                     STR_19:
  2863  007F71  4C                 	db	76	;'L'
  2864  007F72  69                 	db	105	;'i'
  2865  007F73  67                 	db	103	;'g'
  2866  007F74  68                 	db	104	;'h'
  2867  007F75  74                 	db	116	;'t'
  2868  007F76  20                 	db	32
  2869  007F77  3D                 	db	61	;'='
  2870  007F78  00                 	db	0
  2871  007F79                     STR_117:
  2872  007F79  54                 	db	84	;'T'
  2873  007F7A  65                 	db	101	;'e'
  2874  007F7B  6D                 	db	109	;'m'
  2875  007F7C  70                 	db	112	;'p'
  2876  007F7D  20                 	db	32
  2877  007F7E  3A                 	db	58	;':'
  2878  007F7F  00                 	db	0
  2879  007F80                     STR_116:
  2880  007F80  4C                 	db	76	;'L'
  2881  007F81  69                 	db	105	;'i'
  2882  007F82  67                 	db	103	;'g'
  2883  007F83  68                 	db	104	;'h'
  2884  007F84  74                 	db	116	;'t'
  2885  007F85  3A                 	db	58	;':'
  2886  007F86  00                 	db	0
  2887  007F87                     STR_121:
  2888  007F87  45                 	db	69	;'E'
  2889  007F88  76                 	db	118	;'v'
  2890  007F89  65                 	db	101	;'e'
  2891  007F8A  72                 	db	114	;'r'
  2892  007F8B  79                 	db	121	;'y'
  2893  007F8C  3A                 	db	58	;':'
  2894  007F8D  00                 	db	0
  2895  007F8E                     STR_65:
  2896  007F8E  44                 	db	68	;'D'
  2897  007F8F  65                 	db	101	;'e'
  2898  007F90  6E                 	db	110	;'n'
  2899  007F91  69                 	db	105	;'i'
  2900  007F92  65                 	db	101	;'e'
  2901  007F93  64                 	db	100	;'d'
  2902  007F94  00                 	db	0
  2903  007F95                     STR_63:
  2904  007F95  64                 	db	100	;'d'
  2905  007F96  65                 	db	101	;'e'
  2906  007F97  6E                 	db	110	;'n'
  2907  007F98  69                 	db	105	;'i'
  2908  007F99  65                 	db	101	;'e'
  2909  007F9A  64                 	db	100	;'d'
  2910  007F9B  00                 	db	0
  2911  007F9C                     STR_97:
  2912  007F9C  6E                 	db	110	;'n'
  2913  007F9D  6F                 	db	111	;'o'
  2914  007F9E  5F                 	db	95	;'_'
  2915  007F9F  66                 	db	102	;'f'
  2916  007FA0  72                 	db	114	;'r'
  2917  007FA1  65                 	db	101	;'e'
  2918  007FA2  00                 	db	0
  2919  007FA3                     STR_95:
  2920  007FA3  6D                 	db	109	;'m'
  2921  007FA4  61                 	db	97	;'a'
  2922  007FA5  63                 	db	99	;'c'
  2923  007FA6  5F                 	db	95	;'_'
  2924  007FA7  65                 	db	101	;'e'
  2925  007FA8  72                 	db	114	;'r'
  2926  007FA9  00                 	db	0
  2927  007FAA                     STR_90:
  2928  007FAA  6D                 	db	109	;'m'
  2929  007FAB  61                 	db	97	;'a'
  2930  007FAC  63                 	db	99	;'c'
  2931  007FAD  5F                 	db	95	;'_'
  2932  007FAE  72                 	db	114	;'r'
  2933  007FAF  78                 	db	120	;'x'
  2934  007FB0  00                 	db	0
  2935  007FB1                     STR_93:
  2936  007FB1  6D                 	db	109	;'m'
  2937  007FB2  61                 	db	97	;'a'
  2938  007FB3  63                 	db	99	;'c'
  2939  007FB4  5F                 	db	95	;'_'
  2940  007FB5  74                 	db	116	;'t'
  2941  007FB6  78                 	db	120	;'x'
  2942  007FB7  00                 	db	0
  2943  007FB8                     STR_31:
  2944  007FB8  52                 	db	82	;'R'
  2945  007FB9  4E                 	db	78	;'N'
  2946  007FBA  32                 	db	50	;'2'
  2947  007FBB  34                 	db	52	;'4'
  2948  007FBC  00                 	db	0
  2949  007FBD                     STR_35:
  2950  007FBD  52                 	db	82	;'R'
  2951  007FBE  4E                 	db	78	;'N'
  2952  007FBF  32                 	db	50	;'2'
  2953  007FC0  39                 	db	57	;'9'
  2954  007FC1  00                 	db	0
  2955  007FC2                     STR_122:
  2956  007FC2  4D                 	db	77	;'M'
  2957  007FC3  69                 	db	105	;'i'
  2958  007FC4  6E                 	db	110	;'n'
  2959  007FC5  73                 	db	115	;'s'
  2960  007FC6  00                 	db	0
  2961  007FC7                     STR_138:
  2962  007FC7  20                 	db	32
  2963  007FC8  30                 	db	48	;'0'
  2964  007FC9  20                 	db	32
  2965  007FCA  00                 	db	0
  2966  007FCB                     STR_139:
  2967  007FCB  20                 	db	32
  2968  007FCC  31                 	db	49	;'1'
  2969  007FCD  20                 	db	32
  2970  007FCE  00                 	db	0
  2971  007FCF                     STR_140:
  2972  007FCF  20                 	db	32
  2973  007FD0  32                 	db	50	;'2'
  2974  007FD1  20                 	db	32
  2975  007FD2  00                 	db	0
  2976  007FD3                     STR_141:
  2977  007FD3  20                 	db	32
  2978  007FD4  33                 	db	51	;'3'
  2979  007FD5  20                 	db	32
  2980  007FD6  00                 	db	0
  2981  007FD7                     STR_142:
  2982  007FD7  20                 	db	32
  2983  007FD8  34                 	db	52	;'4'
  2984  007FD9  20                 	db	32
  2985  007FDA  00                 	db	0
  2986  007FDB                     STR_143:
  2987  007FDB  20                 	db	32
  2988  007FDC  35                 	db	53	;'5'
  2989  007FDD  20                 	db	32
  2990  007FDE  00                 	db	0
  2991  007FDF                     STR_146:
  2992  007FDF  20                 	db	32
  2993  007FE0  31                 	db	49	;'1'
  2994  007FE1  30                 	db	48	;'0'
  2995  007FE2  00                 	db	0
  2996  007FE3                     STR_148:
  2997  007FE3  20                 	db	32
  2998  007FE4  33                 	db	51	;'3'
  2999  007FE5  30                 	db	48	;'0'
  3000  007FE6  00                 	db	0
  3001  007FE7                     STR_149:
  3002  007FE7  20                 	db	32
  3003  007FE8  36                 	db	54	;'6'
  3004  007FE9  30                 	db	48	;'0'
  3005  007FEA  00                 	db	0
  3006  007FEB                     STR_147:
  3007  007FEB  20                 	db	32
  3008  007FEC  31                 	db	49	;'1'
  3009  007FED  35                 	db	53	;'5'
  3010  007FEE  00                 	db	0
  3011  007FEF                     STR_128:
  3012  007FEF  4F                 	db	79	;'O'
  3013  007FF0  46                 	db	70	;'F'
  3014  007FF1  46                 	db	70	;'F'
  3015  007FF2  00                 	db	0
  3016  007FF3                     STR_144:
  3017  007FF3  41                 	db	65	;'A'
  3018  007FF4  44                 	db	68	;'D'
  3019  007FF5  52                 	db	82	;'R'
  3020  007FF6  00                 	db	0
  3021  007FF7                     STR_44:
  3022  007FF7  6F                 	db	111	;'o'
  3023  007FF8  6B                 	db	107	;'k'
  3024  007FF9  00                 	db	0
  3025  007FFA                     STR_118:
  3026  007FFA  43                 	db	67	;'C'
  3027  007FFB  00                 	db	0
  3028  007FFC                     STR_21:
  3029  007FFC  7A                 	db	122	;'z'
  3030  007FFD  00                 	db	0
  3031  0000                     
  3032                           ; #config settings
  3033  007FFE  00                 	db	0	; dummy byte at the end
  3034  0000                     
  3035                           	psect	cinit
  3036  006222                     __pcinit:
  3037                           	opt stack 0
  3038  006222                     start_initialization:
  3039                           	opt stack 0
  3040  006222                     __initialization:
  3041                           	opt stack 0
  3042                           
  3043                           ; Initialize objects allocated to BANK1 (2 bytes)
  3044                           ; load TBLPTR registers with __pidataBANK1
  3045  006222  0E0E               	movlw	low __pidataBANK1
  3046  006224  6EF6               	movwf	tblptrl,c
  3047  006226  0E73               	movlw	high __pidataBANK1
  3048  006228  6EF7               	movwf	tblptrh,c
  3049  00622A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  3050  00622C  6EF8               	movwf	tblptru,c
  3051  00622E  0009               	tblrd		*+	;fetch initializer
  3052  006230  CFF5 F1F8          	movff	tablat,__pdataBANK1
  3053  006234  0009               	tblrd		*+	;fetch initializer
  3054  006236  CFF5 F1F9          	movff	tablat,__pdataBANK1+1
  3055                           
  3056                           ; Initialize objects allocated to BANK0 (9 bytes)
  3057                           ; load TBLPTR registers with __pidataBANK0
  3058  00623A  0EBA               	movlw	low __pidataBANK0
  3059  00623C  6EF6               	movwf	tblptrl,c
  3060  00623E  0E72               	movlw	high __pidataBANK0
  3061  006240  6EF7               	movwf	tblptrh,c
  3062  006242  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  3063  006244  6EF8               	movwf	tblptru,c
  3064  006246  EE00  F0F6         	lfsr	0,__pdataBANK0
  3065  00624A  EE10 F009          	lfsr	1,9
  3066  00624E                     copy_data0:
  3067  00624E  0009               	tblrd		*+
  3068  006250  CFF5 FFEE          	movff	tablat,postinc0
  3069  006254  50E5               	movf	postdec1,w,c
  3070  006256  50E1               	movf	fsr1l,w,c
  3071  006258  E1FA               	bnz	copy_data0
  3072                           
  3073                           ; Clear objects allocated to BANK3 (128 bytes)
  3074  00625A  EE03  F000         	lfsr	0,__pbssBANK3
  3075  00625E  0E80               	movlw	128
  3076  006260                     clear_0:
  3077  006260  6AEE               	clrf	postinc0,c
  3078  006262  06E8               	decf	wreg,f,c
  3079  006264  E1FD               	bnz	clear_0
  3080                           
  3081                           ; Clear objects allocated to BANK2 (192 bytes)
  3082  006266  EE02  F000         	lfsr	0,__pbssBANK2
  3083  00626A  0EC0               	movlw	192
  3084  00626C                     clear_1:
  3085  00626C  6AEE               	clrf	postinc0,c
  3086  00626E  06E8               	decf	wreg,f,c
  3087  006270  E1FD               	bnz	clear_1
  3088                           
  3089                           ; Clear objects allocated to BANK1 (243 bytes)
  3090  006272  EE01  F000         	lfsr	0,__pbssBANK1
  3091  006276  0EF3               	movlw	243
  3092  006278                     clear_2:
  3093  006278  6AEE               	clrf	postinc0,c
  3094  00627A  06E8               	decf	wreg,f,c
  3095  00627C  E1FD               	bnz	clear_2
  3096                           
  3097                           ; Clear objects allocated to BANK0 (63 bytes)
  3098  00627E  EE00  F0B7         	lfsr	0,__pbssBANK0
  3099  006282  0E3F               	movlw	63
  3100  006284                     clear_3:
  3101  006284  6AEE               	clrf	postinc0,c
  3102  006286  06E8               	decf	wreg,f,c
  3103  006288  E1FD               	bnz	clear_3
  3104                           
  3105                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  3106  00628A  6A5A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  3107                           
  3108                           ; Clear objects allocated to COMRAM (44 bytes)
  3109  00628C  EE00  F02E         	lfsr	0,__pbssCOMRAM
  3110  006290  0E2C               	movlw	44
  3111  006292                     clear_4:
  3112  006292  6AEE               	clrf	postinc0,c
  3113  006294  06E8               	decf	wreg,f,c
  3114  006296  E1FD               	bnz	clear_4
  3115  006298                     end_of_initialization:
  3116                           	opt stack 0
  3117  006298                     __end_of__initialization:
  3118                           	opt stack 0
  3119  006298  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3120  00629A  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3121  00629C  0E00               	movlw	low (__Lmediumconst shr (0+16))
  3122  00629E  6EF8               	movwf	tblptru,c
  3123  0062A0  0100               	movlb	0
  3124  0062A2  EFFD  F01E         	goto	_main	;jump to C main() function
  3125                           tblptru	equ	0xFF8
  3126                           tblptrh	equ	0xFF7
  3127                           tblptrl	equ	0xFF6
  3128                           tablat	equ	0xFF5
  3129                           postinc0	equ	0xFEE
  3130                           wreg	equ	0xFE8
  3131                           postdec1	equ	0xFE5
  3132                           fsr1l	equ	0xFE1
  3133                           
  3134                           	psect	bitbssCOMRAM
  3135  0002D0                     __pbitbssCOMRAM:
  3136                           	opt stack 0
  3137  0002D0                     _log:
  3138                           	opt stack 0
  3139  0002D0                     	ds	1
  3140                           tblptru	equ	0xFF8
  3141                           tblptrh	equ	0xFF7
  3142                           tblptrl	equ	0xFF6
  3143                           tablat	equ	0xFF5
  3144                           postinc0	equ	0xFEE
  3145                           wreg	equ	0xFE8
  3146                           postdec1	equ	0xFE5
  3147                           fsr1l	equ	0xFE1
  3148                           
  3149                           	psect	bssCOMRAM
  3150  00002E                     __pbssCOMRAM:
  3151                           	opt stack 0
  3152  00002E                     _outPipes:
  3153                           	opt stack 0
  3154  00002E                     	ds	8
  3155  000036                     _inPipes:
  3156                           	opt stack 0
  3157  000036                     	ds	6
  3158  00003C                     _pBDTEntryIn:
  3159                           	opt stack 0
  3160  00003C                     	ds	6
  3161  000042                     _pBDTEntryEP0OutNext:
  3162                           	opt stack 0
  3163  000042                     	ds	2
  3164  000044                     _pBDTEntryEP0OutCurrent:
  3165                           	opt stack 0
  3166  000044                     	ds	2
  3167  000046                     _timer1ReloadVal:
  3168                           	opt stack 0
  3169  000046                     	ds	2
  3170  000048                     USBapp_LEDUpdateStatus@ledCount:
  3171                           	opt stack 0
  3172  000048                     	ds	2
  3173  00004A                     _USBDeferStatusStagePacket:
  3174                           	opt stack 0
  3175  00004A                     	ds	1
  3176  00004B                     _USBStatusStageTimeoutCounter:
  3177                           	opt stack 0
  3178  00004B                     	ds	1
  3179  00004C                     _endpoint_number:
  3180                           	opt stack 0
  3181  00004C                     	ds	1
  3182  00004D                     _controlTransferState:
  3183                           	opt stack 0
  3184  00004D                     	ds	1
  3185  00004E                     _shortPacketStatus:
  3186                           	opt stack 0
  3187  00004E                     	ds	1
  3188  00004F                     _eusartTxBufferRemaining:
  3189                           	opt stack 0
  3190  00004F                     	ds	1
  3191  000050                     _RS232cp:
  3192                           	opt stack 0
  3193  000050                     	ds	1
  3194  000051                     _LastRS232Out:
  3195                           	opt stack 0
  3196  000051                     	ds	1
  3197  000052                     _RS232_Out_Data_Rdy:
  3198                           	opt stack 0
  3199  000052                     	ds	1
  3200  000053                     _NextUSBOut:
  3201                           	opt stack 0
  3202  000053                     	ds	1
  3203  000054                     _rxByteFlag:
  3204                           	opt stack 0
  3205  000054                     	ds	1
  3206  000055                     _cdc_trf_state:
  3207                           	opt stack 0
  3208  000055                     	ds	1
  3209  000056                     _moduleBufferIndex:
  3210                           	opt stack 0
  3211  000056                     	ds	1
  3212  000057                     _eusartRxCount:
  3213                           	opt stack 0
  3214  000057                     	ds	1
  3215  000058                     _USTATcopy:
  3216                           	opt stack 0
  3217  000058                     	ds	1
  3218  000059                     _USBActiveConfiguration:
  3219                           	opt stack 0
  3220  000059                     	ds	1
  3221                           tblptru	equ	0xFF8
  3222                           tblptrh	equ	0xFF7
  3223                           tblptrl	equ	0xFF6
  3224                           tablat	equ	0xFF5
  3225                           postinc0	equ	0xFEE
  3226                           wreg	equ	0xFE8
  3227                           postdec1	equ	0xFE5
  3228                           fsr1l	equ	0xFE1
  3229                           
  3230                           	psect	bssBANK0
  3231  0000B7                     __pbssBANK0:
  3232                           	opt stack 0
  3233  0000B7                     _ep_data_out:
  3234                           	opt stack 0
  3235  0000B7                     	ds	3
  3236  0000BA                     _ep_data_in:
  3237                           	opt stack 0
  3238  0000BA                     	ds	3
  3239  0000BD                     _CDCDataInHandle:
  3240                           	opt stack 0
  3241  0000BD                     	ds	2
  3242  0000BF                     _CDCDataOutHandle:
  3243                           	opt stack 0
  3244  0000BF                     	ds	2
  3245  0000C1                     _timer3ReloadVal:
  3246                           	opt stack 0
  3247  0000C1                     	ds	2
  3248  0000C3                     _timerMinTickCount:
  3249                           	opt stack 0
  3250  0000C3                     	ds	2
  3251  0000C5                     _timerMsTickCount:
  3252                           	opt stack 0
  3253  0000C5                     	ds	2
  3254  0000C7                     _temperature:
  3255                           	opt stack 0
  3256  0000C7                     	ds	2
  3257  0000C9                     _countBitsSilent:
  3258                           	opt stack 0
  3259  0000C9                     	ds	1
  3260  0000CA                     _countRX:
  3261                           	opt stack 0
  3262  0000CA                     	ds	1
  3263  0000CB                     _rx_data:
  3264                           	opt stack 0
  3265  0000CB                     	ds	1
  3266  0000CC                     _status:
  3267                           	opt stack 0
  3268  0000CC                     	ds	1
  3269  0000CD                     _control_signal_bitmap:
  3270                           	opt stack 0
  3271  0000CD                     	ds	1
  3272  0000CE                     _cdc_mem_type:
  3273                           	opt stack 0
  3274  0000CE                     	ds	1
  3275  0000CF                     _cdc_tx_len:
  3276                           	opt stack 0
  3277  0000CF                     	ds	1
  3278  0000D0                     _cdc_rx_len:
  3279                           	opt stack 0
  3280  0000D0                     	ds	1
  3281  0000D1                     _USBDeferOUTDataStagePackets:
  3282                           	opt stack 0
  3283  0000D1                     	ds	1
  3284  0000D2                     _USBDeferINDataStagePackets:
  3285                           	opt stack 0
  3286  0000D2                     	ds	1
  3287  0000D3                     _USBStatusStageEnabledFlag2:
  3288                           	opt stack 0
  3289  0000D3                     	ds	1
  3290  0000D4                     _USBStatusStageEnabledFlag1:
  3291                           	opt stack 0
  3292  0000D4                     	ds	1
  3293  0000D5                     _BothEP0OutUOWNsSet:
  3294                           	opt stack 0
  3295  0000D5                     	ds	1
  3296  0000D6                     _USBBusIsSuspended:
  3297                           	opt stack 0
  3298  0000D6                     	ds	1
  3299  0000D7                     _RemoteWakeup:
  3300                           	opt stack 0
  3301  0000D7                     	ds	1
  3302  0000D8                     _eusartRxTail:
  3303                           	opt stack 0
  3304  0000D8                     	ds	1
  3305  0000D9                     _eusartRxHead:
  3306                           	opt stack 0
  3307  0000D9                     	ds	1
  3308  0000DA                     _eusartTxTail:
  3309                           	opt stack 0
  3310  0000DA                     	ds	1
  3311  0000DB                     _eusartTxHead:
  3312                           	opt stack 0
  3313  0000DB                     	ds	1
  3314  0000DC                     service_pushbutton@Release_Timer:
  3315                           	opt stack 0
  3316  0000DC                     	ds	1
  3317  0000DD                     _usbState:
  3318                           	opt stack 0
  3319  0000DD                     	ds	1
  3320  0000DE                     _USBDeviceState:
  3321                           	opt stack 0
  3322  0000DE                     	ds	1
  3323  0000DF                     _lightStringSize:
  3324                           	opt stack 0
  3325  0000DF                     	ds	1
  3326  0000E0                     	ds	1
  3327  0000E1                     	ds	1
  3328  0000E2                     _rnModule:
  3329                           	opt stack 0
  3330  0000E2                     	ds	1
  3331  0000E3                     _sleepTicker:
  3332                           	opt stack 0
  3333  0000E3                     	ds	1
  3334  0000E4                     _minTicker:
  3335                           	opt stack 0
  3336  0000E4                     	ds	1
  3337  0000E5                     _secTicker:
  3338                           	opt stack 0
  3339  0000E5                     	ds	1
  3340  0000E6                     	ds	1
  3341  0000E7                     _randomPortNum:
  3342                           	opt stack 0
  3343  0000E7                     	ds	1
  3344  0000E8                     	ds	1
  3345  0000E9                     _runningState:
  3346                           	opt stack 0
  3347  0000E9                     	ds	1
  3348  0000EA                     _responseReady:
  3349                           	opt stack 0
  3350  0000EA                     	ds	1
  3351  0000EB                     _activeState:
  3352                           	opt stack 0
  3353  0000EB                     	ds	1
  3354  0000EC                     	ds	1
  3355  0000ED                     _powerOnStatus:
  3356                           	opt stack 0
  3357  0000ED                     	ds	1
  3358  0000EE                     _moteModeState:
  3359                           	opt stack 0
  3360  0000EE                     	ds	1
  3361  0000EF                     _appState:
  3362                           	opt stack 0
  3363  0000EF                     	ds	1
  3364  0000F0                     _mainState:
  3365                           	opt stack 0
  3366  0000F0                     	ds	1
  3367  0000F1                     _operationType:
  3368                           	opt stack 0
  3369  0000F1                     	ds	1
  3370  0000F2                     _appTimer:
  3371                           	opt stack 0
  3372  0000F2                     	ds	1
  3373  0000F3                     _USBAlternateInterface:
  3374                           	opt stack 0
  3375  0000F3                     	ds	2
  3376  0000F5                     _n_bit:
  3377                           	opt stack 0
  3378  0000F5                     	ds	1
  3379                           tblptru	equ	0xFF8
  3380                           tblptrh	equ	0xFF7
  3381                           tblptrl	equ	0xFF6
  3382                           tablat	equ	0xFF5
  3383                           postinc0	equ	0xFEE
  3384                           wreg	equ	0xFE8
  3385                           postdec1	equ	0xFE5
  3386                           fsr1l	equ	0xFE1
  3387                           
  3388                           	psect	dataBANK0
  3389  0000F6                     __pdataBANK0:
  3390                           	opt stack 0
  3391  0000F6                     _Contrast_level:
  3392                           	opt stack 0
  3393  0000F6                     	ds	1
  3394  0000F7                     _exitUSB:
  3395                           	opt stack 0
  3396  0000F7                     	ds	1
  3397  0000F8                     	ds	1
  3398  0000F9                     _periodicState:
  3399                           	opt stack 0
  3400  0000F9                     	ds	1
  3401  0000FA                     _menuTimeout:
  3402                           	opt stack 0
  3403  0000FA                     	ds	1
  3404  0000FB                     _dataRateValue:
  3405                           	opt stack 0
  3406  0000FB                     	ds	1
  3407  0000FC                     _periodicTimerValue:
  3408                           	opt stack 0
  3409  0000FC                     	ds	1
  3410  0000FD                     _periodicUpValue:
  3411                           	opt stack 0
  3412  0000FD                     	ds	1
  3413  0000FE                     _moteState:
  3414                           	opt stack 0
  3415  0000FE                     	ds	1
  3416                           tblptru	equ	0xFF8
  3417                           tblptrh	equ	0xFF7
  3418                           tblptrl	equ	0xFF6
  3419                           tablat	equ	0xFF5
  3420                           postinc0	equ	0xFEE
  3421                           wreg	equ	0xFE8
  3422                           postdec1	equ	0xFE5
  3423                           fsr1l	equ	0xFE1
  3424                           
  3425                           	psect	bssBANK1
  3426  000100                     __pbssBANK1:
  3427                           	opt stack 0
  3428  000100                     	ds	32
  3429  000120                     	ds	16
  3430  000130                     _responseId:
  3431                           	opt stack 0
  3432  000130                     	ds	16
  3433  000140                     _pBDTEntryOut:
  3434                           	opt stack 0
  3435  000140                     	ds	6
  3436  000146                     _BaudRateGen:
  3437                           	opt stack 0
  3438  000146                     	ds	4
  3439  00014A                     service_pushbutton@PB_Timer:
  3440                           	opt stack 0
  3441  00014A                     	ds	4
  3442  00014E                     _pCDCDst:
  3443                           	opt stack 0
  3444  00014E                     	ds	3
  3445  000151                     _pCDCSrc:
  3446                           	opt stack 0
  3447  000151                     	ds	3
  3448  000154                     _pDst:
  3449                           	opt stack 0
  3450  000154                     	ds	2
  3451  000156                     _m10SecTicker:
  3452                           	opt stack 0
  3453  000156                     	ds	2
  3454  000158                     _light:
  3455                           	opt stack 0
  3456  000158                     	ds	2
  3457  00015A                     _cs:
  3458                           	opt stack 0
  3459  00015A                     	ds	1
  3460  00015B                     _stops:
  3461                           	opt stack 0
  3462  00015B                     	ds	1
  3463  00015C                     _parity:
  3464                           	opt stack 0
  3465  00015C                     	ds	1
  3466  00015D                     _moduleResonseBuffer:
  3467                           	opt stack 0
  3468  00015D                     	ds	64
  3469  00019D                     _responseData:
  3470                           	opt stack 0
  3471  00019D                     	ds	32
  3472  0001BD                     _dataBuffer:
  3473                           	opt stack 0
  3474  0001BD                     	ds	16
  3475  0001CD                     _cdc_notice:
  3476                           	opt stack 0
  3477  0001CD                     	ds	10
  3478  0001D7                     _dummy_encapsulated_cmd_response:
  3479                           	opt stack 0
  3480  0001D7                     	ds	8
  3481  0001DF                     _line_coding:
  3482                           	opt stack 0
  3483  0001DF                     	ds	7
  3484  0001E6                     _clearLight:
  3485                           	opt stack 0
  3486  0001E6                     	ds	5
  3487  0001EB                     _storedLight:
  3488                           	opt stack 0
  3489  0001EB                     	ds	5
  3490  0001F0                     _responsePortNum:
  3491                           	opt stack 0
  3492  0001F0                     	ds	3
  3493                           tblptru	equ	0xFF8
  3494                           tblptrh	equ	0xFF7
  3495                           tblptrl	equ	0xFF6
  3496                           tablat	equ	0xFF5
  3497                           postinc0	equ	0xFEE
  3498                           wreg	equ	0xFE8
  3499                           postdec1	equ	0xFE5
  3500                           fsr1l	equ	0xFE1
  3501                           
  3502                           	psect	dataBANK1
  3503  0001F8                     __pdataBANK1:
  3504                           	opt stack 0
  3505  0001F8                     _selectedFont:
  3506                           	opt stack 0
  3507  0001F8                     	ds	2
  3508                           tblptru	equ	0xFF8
  3509                           tblptrh	equ	0xFF7
  3510                           tblptrl	equ	0xFF6
  3511                           tablat	equ	0xFF5
  3512                           postinc0	equ	0xFEE
  3513                           wreg	equ	0xFE8
  3514                           postdec1	equ	0xFE5
  3515                           fsr1l	equ	0xFE1
  3516                           
  3517                           	psect	bssBANK2
  3518  000200                     __pbssBANK2:
  3519                           	opt stack 0
  3520  000200                     _eusartRxBuffer:
  3521                           	opt stack 0
  3522  000200                     	ds	64
  3523  000240                     _eusartTxBuffer:
  3524                           	opt stack 0
  3525  000240                     	ds	64
  3526  000280                     _USB_Buffer:
  3527                           	opt stack 0
  3528  000280                     	ds	64
  3529                           tblptru	equ	0xFF8
  3530                           tblptrh	equ	0xFF7
  3531                           tblptrl	equ	0xFF6
  3532                           tablat	equ	0xFF5
  3533                           postinc0	equ	0xFEE
  3534                           wreg	equ	0xFE8
  3535                           postdec1	equ	0xFE5
  3536                           fsr1l	equ	0xFE1
  3537                           
  3538                           	psect	bssBANK3
  3539  000300                     __pbssBANK3:
  3540                           	opt stack 0
  3541  000300                     _buffer_rx:
  3542                           	opt stack 0
  3543  000300                     	ds	128
  3544                           tblptru	equ	0xFF8
  3545                           tblptrh	equ	0xFF7
  3546                           tblptrl	equ	0xFF6
  3547                           tablat	equ	0xFF5
  3548                           postinc0	equ	0xFEE
  3549                           wreg	equ	0xFE8
  3550                           postdec1	equ	0xFE5
  3551                           fsr1l	equ	0xFE1
  3552                           
  3553                           	psect	cstackBANK1
  3554  0001F3                     __pcstackBANK1:
  3555                           	opt stack 0
  3556  0001F3                     moteHandler@gotoSleep:
  3557                           	opt stack 0
  3558                           
  3559                           ; 1 bytes @ 0x0
  3560  0001F3                     	ds	1
  3561  0001F4                     moteHandler@gotoNextState:
  3562                           	opt stack 0
  3563                           
  3564                           ; 1 bytes @ 0x1
  3565  0001F4                     	ds	1
  3566  0001F5                     moteHandler@s2Button:
  3567                           	opt stack 0
  3568                           
  3569                           ; 1 bytes @ 0x2
  3570  0001F5                     	ds	1
  3571  0001F6                     moteHandler@buttonPress:
  3572                           	opt stack 0
  3573                           
  3574                           ; 1 bytes @ 0x3
  3575  0001F6                     	ds	1
  3576  0001F7                     moteHandler@readMessage:
  3577                           	opt stack 0
  3578                           
  3579                           ; 1 bytes @ 0x4
  3580  0001F7                     	ds	1
  3581                           tblptru	equ	0xFF8
  3582                           tblptrh	equ	0xFF7
  3583                           tblptrl	equ	0xFF6
  3584                           tablat	equ	0xFF5
  3585                           postinc0	equ	0xFEE
  3586                           wreg	equ	0xFE8
  3587                           postdec1	equ	0xFE5
  3588                           fsr1l	equ	0xFE1
  3589                           
  3590                           	psect	cstackBANK0
  3591  000060                     __pcstackBANK0:
  3592                           	opt stack 0
  3593  000060                     ??_TMR1_Initialize:
  3594  000060                     ?_strncmp:
  3595                           	opt stack 0
  3596  000060                     ?_strcmp:
  3597                           	opt stack 0
  3598  000060                     ?_moteApp_getLightString:
  3599                           	opt stack 0
  3600  000060                     ?_USBTransferOnePacket:
  3601                           	opt stack 0
  3602  000060                     ?___wmul:
  3603                           	opt stack 0
  3604  000060                     ?___awmod:
  3605                           	opt stack 0
  3606  000060                     ?___lwmod:
  3607                           	opt stack 0
  3608  000060                     ?___fladd:
  3609                           	opt stack 0
  3610  000060                     ?___almod:
  3611                           	opt stack 0
  3612  000060                     ?___fltol:
  3613                           	opt stack 0
  3614  000060                     ?___xxtofl:
  3615                           	opt stack 0
  3616  000060                     MOTEapp_handlerState@state:
  3617                           	opt stack 0
  3618  000060                     MOTEapp_TimerBasedTask@timerTask:
  3619                           	opt stack 0
  3620  000060                     hexToStr@character:
  3621                           	opt stack 0
  3622  000060                     moteApp_clearBuffers@counter:
  3623                           	opt stack 0
  3624  000060                     USBapp_handlerState@state:
  3625                           	opt stack 0
  3626  000060                     USBapp_exitCDCState@usbState:
  3627                           	opt stack 0
  3628  000060                     service_pushbutton@bs:
  3629                           	opt stack 0
  3630  000060                     oled_writeCommand@command:
  3631                           	opt stack 0
  3632  000060                     oled_writeData@data:
  3633                           	opt stack 0
  3634  000060                     EUSART_Read@readValue:
  3635                           	opt stack 0
  3636  000060                     EUSART_Write@txData:
  3637                           	opt stack 0
  3638  000060                     EUSART_FlushBuffer@index:
  3639                           	opt stack 0
  3640  000060                     DATAEE_WriteByte@bData:
  3641                           	opt stack 0
  3642  000060                     DATAEE_ReadByte@bAdd:
  3643                           	opt stack 0
  3644  000060                     TMR2_ReadTimer@readVal:
  3645                           	opt stack 0
  3646  000060                     USBTransferOnePacket@dir:
  3647                           	opt stack 0
  3648  000060                     ___lbdiv@divisor:
  3649                           	opt stack 0
  3650  000060                     delayms@t:
  3651                           	opt stack 0
  3652  000060                     moteApp_delayms@length:
  3653                           	opt stack 0
  3654  000060                     oled_setFont@font:
  3655                           	opt stack 0
  3656  000060                     putUSBUSART@data:
  3657                           	opt stack 0
  3658  000060                     ___wmul@multiplier:
  3659                           	opt stack 0
  3660  000060                     ___awmod@dividend:
  3661                           	opt stack 0
  3662  000060                     ___lwmod@dividend:
  3663                           	opt stack 0
  3664  000060                     memcpy@d1:
  3665                           	opt stack 0
  3666  000060                     memset@p1:
  3667                           	opt stack 0
  3668  000060                     strcmp@s1:
  3669                           	opt stack 0
  3670  000060                     strncmp@s1:
  3671                           	opt stack 0
  3672  000060                     ___almod@dividend:
  3673                           	opt stack 0
  3674  000060                     ___fltol@f1:
  3675                           	opt stack 0
  3676  000060                     ___fladd@b:
  3677                           	opt stack 0
  3678  000060                     ___xxtofl@val:
  3679                           	opt stack 0
  3680                           
  3681                           ; 4 bytes @ 0x0
  3682  000060                     	ds	1
  3683  000061                     MOTEapp_getModuleResponse@terminatorReceived:
  3684                           	opt stack 0
  3685  000061                     moteApp_clearBuffers@counter_1710:
  3686                           	opt stack 0
  3687  000061                     Set_Page_Address@address:
  3688                           	opt stack 0
  3689  000061                     Set_Column_Address@address:
  3690                           	opt stack 0
  3691  000061                     oled_setDisplay@displayType:
  3692                           	opt stack 0
  3693  000061                     oled_setContrastControlRegister@mod:
  3694                           	opt stack 0
  3695  000061                     oled_initialDispayLine@line:
  3696                           	opt stack 0
  3697  000061                     oled_powerControl@vol:
  3698                           	opt stack 0
  3699  000061                     oled_regulorResistorSelect@r:
  3700                           	opt stack 0
  3701  000061                     DATAEE_WriteByte@bAdd:
  3702                           	opt stack 0
  3703  000061                     ___lbdiv@dividend:
  3704                           	opt stack 0
  3705  000061                     sendCommand@string:
  3706                           	opt stack 0
  3707  000061                     sendDataCommand@string:
  3708                           	opt stack 0
  3709  000061                     USBTransferOnePacket@data:
  3710                           	opt stack 0
  3711                           
  3712                           ; 2 bytes @ 0x1
  3713  000061                     	ds	1
  3714  000062                     ??_moteApp_delayms:
  3715  000062                     ??_oled_devInit:
  3716  000062                     ??_delayms:
  3717  000062                     MOTEapp_getModuleResponse@bufferByte:
  3718                           	opt stack 0
  3719  000062                     moteApp_clearBuffers@counter_1711:
  3720                           	opt stack 0
  3721  000062                     oled_putChar@station_dot:
  3722                           	opt stack 0
  3723  000062                     DATAEE_WriteByte@GIEBitValue:
  3724                           	opt stack 0
  3725  000062                     putUSBUSART@length:
  3726                           	opt stack 0
  3727  000062                     ___lbdiv@counter:
  3728                           	opt stack 0
  3729  000062                     ___wmul@multiplicand:
  3730                           	opt stack 0
  3731  000062                     ___awmod@divisor:
  3732                           	opt stack 0
  3733  000062                     ___lwmod@divisor:
  3734                           	opt stack 0
  3735  000062                     memcpy@s1:
  3736                           	opt stack 0
  3737  000062                     memset@c:
  3738                           	opt stack 0
  3739  000062                     strcmp@s2:
  3740                           	opt stack 0
  3741  000062                     strncmp@s2:
  3742                           	opt stack 0
  3743                           
  3744                           ; 2 bytes @ 0x2
  3745  000062                     	ds	1
  3746  000063                     ??_moteApp_toggleLeds:
  3747  000063                     ??_MOTEapp_SetDataRateSetting:
  3748  000063                     ??_moduleSleep:
  3749  000063                     ?_moteApp_getTempValue:
  3750                           	opt stack 0
  3751  000063                     moteApp_clearBuffers@counter_1712:
  3752                           	opt stack 0
  3753  000063                     oled_putChar@start_page:
  3754                           	opt stack 0
  3755  000063                     USBTransferOnePacket@len:
  3756                           	opt stack 0
  3757  000063                     ___lbdiv@quotient:
  3758                           	opt stack 0
  3759  000063                     delayms@i:
  3760                           	opt stack 0
  3761  000063                     moteApp_delayms@counter:
  3762                           	opt stack 0
  3763  000063                     sendDataCommand@appData:
  3764                           	opt stack 0
  3765                           
  3766                           ; 2 bytes @ 0x3
  3767  000063                     	ds	1
  3768  000064                     ??_oled_putChar:
  3769  000064                     ??_strcmp:
  3770  000064                     ??___fltol:
  3771  000064                     ??___xxtofl:
  3772  000064                     MOTEapp_SetDataRateSetting@dr:
  3773                           	opt stack 0
  3774  000064                     moteApp_toggleLeds@state:
  3775                           	opt stack 0
  3776  000064                     USBTransferOnePacket@ep:
  3777                           	opt stack 0
  3778  000064                     ___awmod@counter:
  3779                           	opt stack 0
  3780  000064                     ___lwmod@counter:
  3781                           	opt stack 0
  3782  000064                     ___wmul@product:
  3783                           	opt stack 0
  3784  000064                     memcpy@n:
  3785                           	opt stack 0
  3786  000064                     memset@n:
  3787                           	opt stack 0
  3788  000064                     strncmp@len:
  3789                           	opt stack 0
  3790  000064                     ___almod@divisor:
  3791                           	opt stack 0
  3792  000064                     ___fladd@a:
  3793                           	opt stack 0
  3794                           
  3795                           ; 4 bytes @ 0x4
  3796  000064                     	ds	1
  3797  000065                     sendDataCommand@dataLength:
  3798                           	opt stack 0
  3799  000065                     ___awmod@sign:
  3800                           	opt stack 0
  3801  000065                     strcmp@r:
  3802                           	opt stack 0
  3803  000065                     moduleResync@escapeCounter:
  3804                           	opt stack 0
  3805  000065                     moteApp_setSensorsInput@escapeCounter:
  3806                           	opt stack 0
  3807  000065                     moteApp_getTempValue@escapeCounter:
  3808                           	opt stack 0
  3809  000065                     USBTransferOnePacket@handle:
  3810                           	opt stack 0
  3811                           
  3812                           ; 2 bytes @ 0x5
  3813  000065                     	ds	1
  3814  000066                     ??_strncmp:
  3815  000066                     ??_sendDataCommand:
  3816  000066                     moteApp_add8bToDataBuffer@bufferLocation:
  3817                           	opt stack 0
  3818  000066                     memcpy@d:
  3819                           	opt stack 0
  3820  000066                     memset@p:
  3821                           	opt stack 0
  3822                           
  3823                           ; 2 bytes @ 0x6
  3824  000066                     	ds	1
  3825  000067                     ??_moteApp_add8bToDataBuffer:
  3826  000067                     ??_CDCTxService:
  3827  000067                     moduleResync@escapeEvent:
  3828                           	opt stack 0
  3829  000067                     sendDataCommand@byteCount:
  3830                           	opt stack 0
  3831  000067                     getsUSBUSART@buffer:
  3832                           	opt stack 0
  3833                           
  3834                           ; 2 bytes @ 0x7
  3835  000067                     	ds	1
  3836  000068                     ??___fladd:
  3837  000068                     sendDataCommand@byteCount_1623:
  3838                           	opt stack 0
  3839  000068                     USBDeviceInit@i:
  3840                           	opt stack 0
  3841  000068                     ___almod@counter:
  3842                           	opt stack 0
  3843  000068                     ___fltol@sign1:
  3844                           	opt stack 0
  3845  000068                     ___xxtofl@sign:
  3846                           	opt stack 0
  3847  000068                     _CDCTxService$6060:
  3848                           	opt stack 0
  3849  000068                     memcpy@s:
  3850                           	opt stack 0
  3851                           
  3852                           ; 2 bytes @ 0x8
  3853  000068                     	ds	1
  3854  000069                     moteApp_add8bToDataBuffer@number:
  3855                           	opt stack 0
  3856  000069                     getsUSBUSART@len:
  3857                           	opt stack 0
  3858  000069                     ___almod@sign:
  3859                           	opt stack 0
  3860  000069                     ___fltol@exp1:
  3861                           	opt stack 0
  3862  000069                     ___xxtofl@exp:
  3863                           	opt stack 0
  3864                           
  3865                           ; 1 bytes @ 0x9
  3866  000069                     	ds	1
  3867  00006A                     ??_getsUSBUSART:
  3868  00006A                     oled_putChar@k:
  3869                           	opt stack 0
  3870  00006A                     CDCTxService@i:
  3871                           	opt stack 0
  3872  00006A                     moteApp_setLightString@lightString:
  3873                           	opt stack 0
  3874  00006A                     ___xxtofl@arg:
  3875                           	opt stack 0
  3876                           
  3877                           ; 4 bytes @ 0xA
  3878  00006A                     	ds	1
  3879  00006B                     oled_putChar@index:
  3880                           	opt stack 0
  3881  00006B                     CDCTxService@byte_to_send:
  3882                           	opt stack 0
  3883  00006B                     _getsUSBUSART$6012:
  3884                           	opt stack 0
  3885                           
  3886                           ; 2 bytes @ 0xB
  3887  00006B                     	ds	1
  3888  00006C                     moteApp_setLightString@stingPos:
  3889                           	opt stack 0
  3890  00006C                     oled_clearRow@page:
  3891                           	opt stack 0
  3892                           
  3893                           ; 1 bytes @ 0xC
  3894  00006C                     	ds	1
  3895  00006D                     ??_USBapp_DeviceCdcEmulatorHandler:
  3896  00006D                     ?_moteApp_getLightValue:
  3897                           	opt stack 0
  3898  00006D                     oled_clearRow@index:
  3899                           	opt stack 0
  3900                           
  3901                           ; 1 bytes @ 0xD
  3902  00006D                     	ds	1
  3903  00006E                     moteApp_GoToSleep@status:
  3904                           	opt stack 0
  3905                           
  3906                           ; 1 bytes @ 0xE
  3907  00006E                     	ds	1
  3908  00006F                     moteApp_getLightValue@escapeCounter:
  3909                           	opt stack 0
  3910                           
  3911                           ; 2 bytes @ 0xF
  3912  00006F                     	ds	1
  3913  000070                     ___fladd@signs:
  3914                           	opt stack 0
  3915                           
  3916                           ; 1 bytes @ 0x10
  3917  000070                     	ds	1
  3918  000071                     ?_moteApp_convertSensorValue:
  3919                           	opt stack 0
  3920  000071                     ___fladd@aexp:
  3921                           	opt stack 0
  3922  000071                     moteApp_addToDataBuffer@string:
  3923                           	opt stack 0
  3924  000071                     moteApp_convertSensorValue@string:
  3925                           	opt stack 0
  3926  000071                     oled_putString@string:
  3927                           	opt stack 0
  3928                           
  3929                           ; 2 bytes @ 0x11
  3930  000071                     	ds	1
  3931  000072                     ___fladd@bexp:
  3932                           	opt stack 0
  3933                           
  3934                           ; 1 bytes @ 0x12
  3935  000072                     	ds	1
  3936  000073                     ??_moteApp_convertSensorValue:
  3937  000073                     moteApp_addToDataBuffer@bufferLocation:
  3938                           	opt stack 0
  3939  000073                     oled_putString@station_dot:
  3940                           	opt stack 0
  3941  000073                     ___fladd@grs:
  3942                           	opt stack 0
  3943                           
  3944                           ; 1 bytes @ 0x13
  3945  000073                     	ds	1
  3946  000074                     ?___flmul:
  3947                           	opt stack 0
  3948  000074                     moteApp_addToDataBuffer@index:
  3949                           	opt stack 0
  3950  000074                     oled_putString@start_page:
  3951                           	opt stack 0
  3952  000074                     ___flmul@b:
  3953                           	opt stack 0
  3954                           
  3955                           ; 4 bytes @ 0x14
  3956  000074                     	ds	1
  3957  000075                     oled_putString@index:
  3958                           	opt stack 0
  3959                           
  3960                           ; 1 bytes @ 0x15
  3961  000075                     	ds	1
  3962  000076                     ??_test_switch:
  3963  000076                     moteJoiningProcess@changeStates:
  3964                           	opt stack 0
  3965  000076                     moteApp_convertSensorValue@index:
  3966                           	opt stack 0
  3967  000076                     USBapp_Handler@buttonPress:
  3968                           	opt stack 0
  3969  000076                     oled_putUint8@station_dot:
  3970                           	opt stack 0
  3971  000076                     oled_putint8@station_dot:
  3972                           	opt stack 0
  3973                           
  3974                           ; 1 bytes @ 0x16
  3975  000076                     	ds	1
  3976  000077                     moteJoiningProcess@selectButton:
  3977                           	opt stack 0
  3978  000077                     oled_putUint8@start_page:
  3979                           	opt stack 0
  3980  000077                     oled_putint8@start_page:
  3981                           	opt stack 0
  3982  000077                     test_switch@timeout:
  3983                           	opt stack 0
  3984  000077                     moteApp_convertSensorValue@convertedValue:
  3985                           	opt stack 0
  3986                           
  3987                           ; 2 bytes @ 0x17
  3988  000077                     	ds	1
  3989  000078                     ??_moteJoiningProcess:
  3990  000078                     oled_putUint8@number:
  3991                           	opt stack 0
  3992  000078                     oled_putint8@negative:
  3993                           	opt stack 0
  3994  000078                     ___flmul@a:
  3995                           	opt stack 0
  3996                           
  3997                           ; 4 bytes @ 0x18
  3998  000078                     	ds	1
  3999  000079                     test_switch@buttonCheck:
  4000                           	opt stack 0
  4001  000079                     moteJoiningProcess@readDataRate:
  4002                           	opt stack 0
  4003  000079                     oled_putUint8@numData:
  4004                           	opt stack 0
  4005  000079                     oled_putint8@numData:
  4006                           	opt stack 0
  4007                           
  4008                           ; 6 bytes @ 0x19
  4009  000079                     	ds	1
  4010  00007A                     moteJoiningProcess@joiningComplete:
  4011                           	opt stack 0
  4012                           
  4013                           ; 1 bytes @ 0x1A
  4014  00007A                     	ds	1
  4015  00007B                     moteJoiningProcess@messageReady:
  4016                           	opt stack 0
  4017                           
  4018                           ; 1 bytes @ 0x1B
  4019  00007B                     	ds	1
  4020  00007C                     ??___flmul:
  4021                           
  4022                           ; 1 bytes @ 0x1C
  4023  00007C                     	ds	3
  4024  00007F                     oled_putint8@number:
  4025                           	opt stack 0
  4026                           
  4027                           ; 1 bytes @ 0x1F
  4028  00007F                     	ds	1
  4029  000080                     ___flmul@sign:
  4030                           	opt stack 0
  4031                           
  4032                           ; 1 bytes @ 0x20
  4033  000080                     	ds	1
  4034  000081                     ___flmul@aexp:
  4035                           	opt stack 0
  4036                           
  4037                           ; 1 bytes @ 0x21
  4038  000081                     	ds	1
  4039  000082                     ___flmul@grs:
  4040                           	opt stack 0
  4041                           
  4042                           ; 4 bytes @ 0x22
  4043  000082                     	ds	4
  4044  000086                     ___flmul@bexp:
  4045                           	opt stack 0
  4046                           
  4047                           ; 1 bytes @ 0x26
  4048  000086                     	ds	1
  4049  000087                     ___flmul@prod:
  4050                           	opt stack 0
  4051                           
  4052                           ; 4 bytes @ 0x27
  4053  000087                     	ds	4
  4054  00008B                     ___flmul@temp:
  4055                           	opt stack 0
  4056                           
  4057                           ; 2 bytes @ 0x2B
  4058  00008B                     	ds	2
  4059  00008D                     ?___fldiv:
  4060                           	opt stack 0
  4061  00008D                     ___fldiv@b:
  4062                           	opt stack 0
  4063                           
  4064                           ; 4 bytes @ 0x2D
  4065  00008D                     	ds	4
  4066  000091                     ___fldiv@a:
  4067                           	opt stack 0
  4068                           
  4069                           ; 4 bytes @ 0x31
  4070  000091                     	ds	4
  4071  000095                     ??___fldiv:
  4072                           
  4073                           ; 1 bytes @ 0x35
  4074  000095                     	ds	4
  4075  000099                     ___fldiv@sign:
  4076                           	opt stack 0
  4077                           
  4078                           ; 1 bytes @ 0x39
  4079  000099                     	ds	1
  4080  00009A                     ___fldiv@rem:
  4081                           	opt stack 0
  4082                           
  4083                           ; 4 bytes @ 0x3A
  4084  00009A                     	ds	4
  4085  00009E                     ___fldiv@new_exp:
  4086                           	opt stack 0
  4087                           
  4088                           ; 2 bytes @ 0x3E
  4089  00009E                     	ds	2
  4090  0000A0                     ___fldiv@grs:
  4091                           	opt stack 0
  4092                           
  4093                           ; 4 bytes @ 0x40
  4094  0000A0                     	ds	4
  4095  0000A4                     ___fldiv@bexp:
  4096                           	opt stack 0
  4097                           
  4098                           ; 1 bytes @ 0x44
  4099  0000A4                     	ds	1
  4100  0000A5                     ___fldiv@aexp:
  4101                           	opt stack 0
  4102                           
  4103                           ; 1 bytes @ 0x45
  4104  0000A5                     	ds	1
  4105  0000A6                     ADC_TempConversion@tempRaw:
  4106                           	opt stack 0
  4107                           
  4108                           ; 1 bytes @ 0x46
  4109  0000A6                     	ds	1
  4110  0000A7                     ADC_TempConversion@temp:
  4111                           	opt stack 0
  4112                           
  4113                           ; 1 bytes @ 0x47
  4114  0000A7                     	ds	1
  4115  0000A8                     ADC_TempConversion@val:
  4116                           	opt stack 0
  4117                           
  4118                           ; 4 bytes @ 0x48
  4119  0000A8                     	ds	4
  4120  0000AC                     ??_moteApp_testSensors:
  4121  0000AC                     moteRunningProcess@selectButton:
  4122                           	opt stack 0
  4123                           
  4124                           ; 1 bytes @ 0x4C
  4125  0000AC                     	ds	1
  4126  0000AD                     moteRunningProcess@messageReady:
  4127                           	opt stack 0
  4128                           
  4129                           ; 1 bytes @ 0x4D
  4130  0000AD                     	ds	1
  4131  0000AE                     moteRunningProcess@sleepEvent:
  4132                           	opt stack 0
  4133                           
  4134                           ; 1 bytes @ 0x4E
  4135  0000AE                     	ds	1
  4136  0000AF                     ??_moteRunningProcess:
  4137                           
  4138                           ; 1 bytes @ 0x4F
  4139  0000AF                     	ds	1
  4140  0000B0                     moteRunningProcess@readByte:
  4141                           	opt stack 0
  4142                           
  4143                           ; 1 bytes @ 0x50
  4144  0000B0                     	ds	1
  4145  0000B1                     moteRunningProcess@sizeOfUpdate:
  4146                           	opt stack 0
  4147                           
  4148                           ; 1 bytes @ 0x51
  4149  0000B1                     	ds	1
  4150  0000B2                     moteRunningProcess@sizeOfUpdate_1493:
  4151                           	opt stack 0
  4152                           
  4153                           ; 1 bytes @ 0x52
  4154  0000B2                     	ds	1
  4155  0000B3                     moteRunningProcess@counter:
  4156                           	opt stack 0
  4157                           
  4158                           ; 1 bytes @ 0x53
  4159  0000B3                     	ds	1
  4160  0000B4                     moteRunningProcess@bufferReadPos:
  4161                           	opt stack 0
  4162                           
  4163                           ; 1 bytes @ 0x54
  4164  0000B4                     	ds	1
  4165  0000B5                     moteRunningProcess@changeStates:
  4166                           	opt stack 0
  4167                           
  4168                           ; 1 bytes @ 0x55
  4169  0000B5                     	ds	1
  4170  0000B6                     ??_moteHandler:
  4171                           
  4172                           ; 1 bytes @ 0x56
  4173  0000B6                     	ds	1
  4174  0000B7                     tblptru	equ	0xFF8
  4175                           tblptrh	equ	0xFF7
  4176                           tblptrl	equ	0xFF6
  4177                           tablat	equ	0xFF5
  4178                           postinc0	equ	0xFEE
  4179                           wreg	equ	0xFE8
  4180                           postdec1	equ	0xFE5
  4181                           fsr1l	equ	0xFE1
  4182                           
  4183                           ; 1 bytes @ 0x57
  4184                           
  4185                           	psect	cstackCOMRAM
  4186  000001                     __pcstackCOMRAM:
  4187                           	opt stack 0
  4188  000001                     ??_USBStdGetDscHandler:
  4189  000001                     ??_USBStdGetStatusHandler:
  4190  000001                     ?i2_USBTransferOnePacket:
  4191                           	opt stack 0
  4192  000001                     ?___lldiv:
  4193                           	opt stack 0
  4194  000001                     USBConfigureEndpoint@direction:
  4195                           	opt stack 0
  4196  000001                     USBCtrlTrfTxService@byteToSend:
  4197                           	opt stack 0
  4198  000001                     i2USBTransferOnePacket@dir:
  4199                           	opt stack 0
  4200  000001                     i2memset@p1:
  4201                           	opt stack 0
  4202  000001                     ___lldiv@dividend:
  4203                           	opt stack 0
  4204                           
  4205                           ; 4 bytes @ 0x0
  4206  000001                     	ds	1
  4207  000002                     ??_USBConfigureEndpoint:
  4208  000002                     USBStdGetStatusHandler@p:
  4209                           	opt stack 0
  4210  000002                     i2USBTransferOnePacket@data:
  4211                           	opt stack 0
  4212                           
  4213                           ; 2 bytes @ 0x1
  4214  000002                     	ds	1
  4215  000003                     i2memset@c:
  4216                           	opt stack 0
  4217                           
  4218                           ; 2 bytes @ 0x2
  4219  000003                     	ds	1
  4220  000004                     i2USBTransferOnePacket@len:
  4221                           	opt stack 0
  4222                           
  4223                           ; 1 bytes @ 0x3
  4224  000004                     	ds	1
  4225  000005                     i2USBTransferOnePacket@ep:
  4226                           	opt stack 0
  4227  000005                     i2memset@n:
  4228                           	opt stack 0
  4229  000005                     ___lldiv@divisor:
  4230                           	opt stack 0
  4231                           
  4232                           ; 4 bytes @ 0x4
  4233  000005                     	ds	1
  4234  000006                     USBConfigureEndpoint@EPNum:
  4235                           	opt stack 0
  4236  000006                     i2USBTransferOnePacket@handle:
  4237                           	opt stack 0
  4238                           
  4239                           ; 2 bytes @ 0x5
  4240  000006                     	ds	1
  4241  000007                     USBConfigureEndpoint@handle:
  4242                           	opt stack 0
  4243  000007                     i2memset@p:
  4244                           	opt stack 0
  4245                           
  4246                           ; 2 bytes @ 0x6
  4247  000007                     	ds	2
  4248  000009                     USBEnableEndpoint@options:
  4249                           	opt stack 0
  4250  000009                     i2USBDeviceInit@i:
  4251                           	opt stack 0
  4252  000009                     ___lldiv@quotient:
  4253                           	opt stack 0
  4254                           
  4255                           ; 4 bytes @ 0x8
  4256  000009                     	ds	1
  4257  00000A                     USBEnableEndpoint@p:
  4258                           	opt stack 0
  4259                           
  4260                           ; 2 bytes @ 0x9
  4261  00000A                     	ds	2
  4262  00000C                     USBEnableEndpoint@ep:
  4263                           	opt stack 0
  4264                           
  4265                           ; 1 bytes @ 0xB
  4266  00000C                     	ds	1
  4267  00000D                     USBapp_CdcEmulatorInitialize@i:
  4268                           	opt stack 0
  4269  00000D                     ___lldiv@counter:
  4270                           	opt stack 0
  4271                           
  4272                           ; 1 bytes @ 0xC
  4273  00000D                     	ds	1
  4274  00000E                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  4275                           	opt stack 0
  4276  00000E                     USART_mySetLineCodingHandler@dwBaud:
  4277                           	opt stack 0
  4278                           
  4279                           ; 4 bytes @ 0xD
  4280  00000E                     	ds	2
  4281  000010                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  4282                           	opt stack 0
  4283                           
  4284                           ; 2 bytes @ 0xF
  4285  000010                     	ds	2
  4286  000012                     USBCtrlTrfRxService@i:
  4287                           	opt stack 0
  4288  000012                     USBCtrlTrfInHandler@lastDTS:
  4289                           	opt stack 0
  4290  000012                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  4291                           	opt stack 0
  4292                           
  4293                           ; 2 bytes @ 0x11
  4294  000012                     	ds	1
  4295  000013                     USBCtrlTrfRxService@byteToRead:
  4296                           	opt stack 0
  4297                           
  4298                           ; 1 bytes @ 0x12
  4299  000013                     	ds	1
  4300  000014                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  4301                           
  4302                           ; 1 bytes @ 0x13
  4303  000014                     	ds	2
  4304  000016                     ??_USBStdFeatureReqHandler:
  4305  000016                     USBStdSetCfgHandler@i:
  4306                           	opt stack 0
  4307                           
  4308                           ; 1 bytes @ 0x15
  4309  000016                     	ds	1
  4310  000017                     USBStdFeatureReqHandler@pUEP:
  4311                           	opt stack 0
  4312                           
  4313                           ; 2 bytes @ 0x16
  4314  000017                     	ds	2
  4315  000019                     USBStdFeatureReqHandler@current_ep_data:
  4316                           	opt stack 0
  4317                           
  4318                           ; 1 bytes @ 0x18
  4319  000019                     	ds	1
  4320  00001A                     USBStdFeatureReqHandler@p:
  4321                           	opt stack 0
  4322                           
  4323                           ; 2 bytes @ 0x19
  4324  00001A                     	ds	2
  4325  00001C                     ??_USBCtrlEPService:
  4326  00001C                     
  4327                           ; 1 bytes @ 0x1B
  4328  00001C                     	ds	2
  4329  00001E                     USBCtrlEPService@setup_cnt:
  4330                           	opt stack 0
  4331                           
  4332                           ; 1 bytes @ 0x1D
  4333  00001E                     	ds	1
  4334  00001F                     USBDeviceTasks@i:
  4335                           	opt stack 0
  4336                           
  4337                           ; 1 bytes @ 0x1E
  4338  00001F                     	ds	1
  4339  000020                     ??_INTERRUPT_InterruptManager:
  4340                           
  4341                           ; 1 bytes @ 0x1F
  4342  000020                     	ds	14
  4343                           tblptru	equ	0xFF8
  4344                           tblptrh	equ	0xFF7
  4345                           tblptrl	equ	0xFF6
  4346                           tablat	equ	0xFF5
  4347                           postinc0	equ	0xFEE
  4348                           wreg	equ	0xFE8
  4349                           postdec1	equ	0xFE5
  4350                           fsr1l	equ	0xFE1
  4351                           
  4352 ;;
  4353 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4354 ;;
  4355 ;; *************** function _main *****************
  4356 ;; Defined at:
  4357 ;;		line 70 in file "main.c"
  4358 ;; Parameters:    Size  Location     Type
  4359 ;;		None
  4360 ;; Auto vars:     Size  Location     Type
  4361 ;;		None
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  1    wreg      void 
  4364 ;; Registers used:
  4365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4371 ;;      Params:         0       0       0       0       0       0       0       0       0
  4372 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4373 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4374 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4375 ;;Total ram usage:        0 bytes
  4376 ;; Hardware stack levels required when called:   20
  4377 ;; This function calls:
  4378 ;;		_DATAEE_ReadByte
  4379 ;;		_DATAEE_WriteByte
  4380 ;;		_MOTEapp_handlerState
  4381 ;;		_SYSTEM_Initialize
  4382 ;;		_USBDeviceAttach
  4383 ;;		_USBDeviceInit
  4384 ;;		_USBapp_Handler
  4385 ;;		_USBapp_handlerState
  4386 ;;		_moduleResync
  4387 ;;		_moteApp_clearCommand
  4388 ;;		_moteApp_delayms
  4389 ;;		_moteHandler
  4390 ;;		_oled_clear
  4391 ;;		_oled_init
  4392 ;;		_oled_putString
  4393 ;;		_test_powerup
  4394 ;; This function is called by:
  4395 ;;		Startup code after reset
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399                           	psect	text0
  4400  003DFA                     __ptext0:
  4401                           	opt stack 0
  4402  003DFA                     _main:
  4403                           	opt stack 11
  4404                           
  4405                           ;main.c: 73: SYSTEM_Initialize();
  4406                           
  4407                           ;incstack = 0
  4408  003DFA  EC57  F038         	call	_SYSTEM_Initialize	;wreg free
  4409                           
  4410                           ;main.c: 75: oled_init();
  4411  003DFE  ECD3  F037         	call	_oled_init	;wreg free
  4412                           
  4413                           ;main.c: 76: USBDeviceInit();
  4414  003E02  EC8F  F01B         	call	_USBDeviceInit	;wreg free
  4415                           
  4416                           ;main.c: 78: USBDeviceAttach();
  4417  003E06  EC2D  F036         	call	_USBDeviceAttach	;wreg free
  4418                           
  4419                           ;main.c: 80: LATBbits.LATB5 = 1;
  4420  003E0A  8A8A               	bsf	3978,5,c	;volatile
  4421                           
  4422                           ;main.c: 81: moteApp_delayms(50);
  4423  003E0C  0E00               	movlw	0
  4424  003E0E  0100               	movlb	0	; () banked
  4425  003E10  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4426  003E12  0E32               	movlw	50
  4427  003E14  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4428  003E16  EC90  F036         	call	_moteApp_delayms	;wreg free
  4429                           
  4430                           ;main.c: 82: LATBbits.LATB5 = 0;
  4431  003E1A  9A8A               	bcf	3978,5,c	;volatile
  4432                           
  4433                           ;main.c: 83: moteApp_delayms(500);
  4434  003E1C  0E01               	movlw	1
  4435  003E1E  0100               	movlb	0	; () banked
  4436  003E20  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4437  003E22  0EF4               	movlw	244
  4438  003E24  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4439  003E26  EC90  F036         	call	_moteApp_delayms	;wreg free
  4440                           
  4441                           ;main.c: 85: PEIE = 1;
  4442  003E2A  8CF2               	bsf	intcon,6,c	;volatile
  4443                           
  4444                           ;main.c: 86: GIE = 1;
  4445  003E2C  8EF2               	bsf	intcon,7,c	;volatile
  4446                           
  4447                           ;main.c: 88: moduleResync();
  4448  003E2E  ECB1  F02D         	call	_moduleResync	;wreg free
  4449                           
  4450                           ;main.c: 89: moteApp_delayms(20);
  4451  003E32  0E00               	movlw	0
  4452  003E34  0100               	movlb	0	; () banked
  4453  003E36  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4454  003E38  0E14               	movlw	20
  4455  003E3A  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4456  003E3C  EC90  F036         	call	_moteApp_delayms	;wreg free
  4457                           
  4458                           ;main.c: 90: moteApp_clearCommand();
  4459  003E40  EC21  F039         	call	_moteApp_clearCommand	;wreg free
  4460                           
  4461                           ;main.c: 91: moteApp_delayms(20);
  4462  003E44  0E00               	movlw	0
  4463  003E46  0100               	movlb	0	; () banked
  4464  003E48  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4465  003E4A  0E14               	movlw	20
  4466  003E4C  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4467  003E4E  EC90  F036         	call	_moteApp_delayms	;wreg free
  4468                           
  4469                           ;main.c: 93: powerOnStatus = DATAEE_ReadByte(0x00);
  4470  003E52  0E00               	movlw	0
  4471  003E54  ECE4  F038         	call	_DATAEE_ReadByte
  4472  003E58  0100               	movlb	0	; () banked
  4473  003E5A  6FED               	movwf	_powerOnStatus& (0+255),b
  4474                           
  4475                           ; BSR set to: 0
  4476                           ;main.c: 94: if ( powerOnStatus != 0x55)
  4477  003E5C  0E55               	movlw	85
  4478  003E5E  0100               	movlb	0	; () banked
  4479  003E60  19ED               	xorwf	_powerOnStatus& (0+255),w,b
  4480  003E62  B4D8               	btfsc	status,2,c
  4481  003E64  D009               	goto	l14837
  4482                           
  4483                           ; BSR set to: 0
  4484                           ;main.c: 95: {
  4485                           ;main.c: 96: test_powerup();
  4486  003E66  EC89  F032         	call	_test_powerup	;wreg free
  4487                           
  4488                           ;main.c: 97: DATAEE_WriteByte(0x00, 0x55);
  4489  003E6A  0E55               	movlw	85
  4490  003E6C  0100               	movlb	0	; () banked
  4491  003E6E  6F60               	movwf	DATAEE_WriteByte@bData& (0+255),b
  4492  003E70  0E00               	movlw	0
  4493  003E72  EC0C  F036         	call	_DATAEE_WriteByte
  4494  003E76  D000               	goto	l14837
  4495  003E78                     l14837:
  4496                           
  4497                           ;main.c: 98: }
  4498                           ;main.c: 101: operationType = USB;
  4499  003E78  0E00               	movlw	0
  4500  003E7A  0100               	movlb	0	; () banked
  4501  003E7C  6FF1               	movwf	_operationType& (0+255),b
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;main.c: 102: USBapp_handlerState(USB_STARTUP);
  4505  003E7E  0E00               	movlw	0
  4506  003E80  EC53  F039         	call	_USBapp_handlerState
  4507                           
  4508                           ;main.c: 104: oled_clear();
  4509  003E84  ECA5  F038         	call	_oled_clear	;wreg free
  4510                           
  4511                           ;main.c: 105: oled_putString("Microchip Mote",0,0);
  4512  003E88  0E1E               	movlw	low STR_1
  4513  003E8A  0100               	movlb	0	; () banked
  4514  003E8C  6F71               	movwf	oled_putString@string& (0+255),b
  4515  003E8E  0E7D               	movlw	high STR_1
  4516  003E90  0100               	movlb	0	; () banked
  4517  003E92  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4518  003E94  0E00               	movlw	0
  4519  003E96  0100               	movlb	0	; () banked
  4520  003E98  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4521  003E9A  0E00               	movlw	0
  4522  003E9C  0100               	movlb	0	; () banked
  4523  003E9E  6F74               	movwf	oled_putString@start_page& (0+255),b
  4524  003EA0  EC89  F030         	call	_oled_putString	;wreg free
  4525                           
  4526                           ;main.c: 106: oled_putString("   LoRa Demo  ",0,1);
  4527  003EA4  0E00               	movlw	low STR_2
  4528  003EA6  0100               	movlb	0	; () banked
  4529  003EA8  6F71               	movwf	oled_putString@string& (0+255),b
  4530  003EAA  0E7D               	movlw	high STR_2
  4531  003EAC  0100               	movlb	0	; () banked
  4532  003EAE  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4533  003EB0  0E00               	movlw	0
  4534  003EB2  0100               	movlb	0	; () banked
  4535  003EB4  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4536  003EB6  0E01               	movlw	1
  4537  003EB8  0100               	movlb	0	; () banked
  4538  003EBA  6F74               	movwf	oled_putString@start_page& (0+255),b
  4539  003EBC  EC89  F030         	call	_oled_putString	;wreg free
  4540                           
  4541                           ;main.c: 107: oled_putString(" V 1.0.1 Code ",0,3);
  4542  003EC0  0E0F               	movlw	low STR_3
  4543  003EC2  0100               	movlb	0	; () banked
  4544  003EC4  6F71               	movwf	oled_putString@string& (0+255),b
  4545  003EC6  0E7D               	movlw	high STR_3
  4546  003EC8  0100               	movlb	0	; () banked
  4547  003ECA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4548  003ECC  0E00               	movlw	0
  4549  003ECE  0100               	movlb	0	; () banked
  4550  003ED0  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4551  003ED2  0E03               	movlw	3
  4552  003ED4  0100               	movlb	0	; () banked
  4553  003ED6  6F74               	movwf	oled_putString@start_page& (0+255),b
  4554  003ED8  EC89  F030         	call	_oled_putString	;wreg free
  4555                           
  4556                           ;main.c: 108: moteApp_delayms(1000);
  4557  003EDC  0E03               	movlw	3
  4558  003EDE  0100               	movlb	0	; () banked
  4559  003EE0  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4560  003EE2  0EE8               	movlw	232
  4561  003EE4  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4562  003EE6  EC90  F036         	call	_moteApp_delayms	;wreg free
  4563                           
  4564                           ;main.c: 112: {
  4565                           ;main.c: 114: switch (operationType)
  4566                           
  4567                           ;main.c: 111: while(1)
  4568  003EEA  D017               	goto	l14865
  4569  003EEC                     l59:
  4570  003EEC  D7FF               	goto	l59
  4571                           
  4572                           ;main.c: 118: break;
  4573  003EEE  D015               	goto	l14865
  4574  003EF0                     l14851:
  4575                           
  4576                           ;main.c: 120: USBapp_Handler();
  4577  003EF0  EC62  F027         	call	_USBapp_Handler	;wreg free
  4578                           
  4579                           ;main.c: 122: operationType = MOTE;
  4580  003EF4  0E01               	movlw	1
  4581  003EF6  0100               	movlb	0	; () banked
  4582  003EF8  6FF1               	movwf	_operationType& (0+255),b
  4583                           
  4584                           ; BSR set to: 0
  4585                           ;main.c: 123: MOTEapp_handlerState(MOTE_STARTUP);
  4586  003EFA  0E01               	movlw	1
  4587  003EFC  EC58  F039         	call	_MOTEapp_handlerState
  4588                           
  4589                           ;main.c: 124: break;
  4590  003F00  D00C               	goto	l14865
  4591  003F02                     l14857:
  4592                           
  4593                           ;main.c: 126: if (moteHandler() == MOTE_SWAP)
  4594  003F02  ECB8  F016         	call	_moteHandler	;wreg free
  4595  003F06  0A04               	xorlw	4
  4596  003F08  A4D8               	btfss	status,2,c
  4597  003F0A  D007               	goto	l14865
  4598                           
  4599                           ;main.c: 127: {
  4600                           ;main.c: 129: operationType = USB;
  4601  003F0C  0E00               	movlw	0
  4602  003F0E  0100               	movlb	0	; () banked
  4603  003F10  6FF1               	movwf	_operationType& (0+255),b
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;main.c: 130: USBapp_handlerState(USB_STARTUP);
  4607  003F12  0E00               	movlw	0
  4608  003F14  EC53  F039         	call	_USBapp_handlerState
  4609                           
  4610                           ;main.c: 133: }
  4611                           
  4612                           ;main.c: 131: }
  4613                           ;main.c: 132: break;
  4614  003F18  D000               	goto	l14865
  4615  003F1A                     l14865:
  4616  003F1A  0100               	movlb	0	; () banked
  4617  003F1C  51F1               	movf	_operationType& (0+255),w,b
  4618                           
  4619                           ; Switch size 1, requested type "space"
  4620                           ; Number of cases is 2, Range of values is 0 to 1
  4621                           ; switch strategies available:
  4622                           ; Name         Instructions Cycles
  4623                           ; simple_byte            7     4 (average)
  4624                           ;	Chosen strategy is simple_byte
  4625  003F1E  0A00               	xorlw	0	; case 0
  4626  003F20  B4D8               	btfsc	status,2,c
  4627  003F22  D7E6               	goto	l14851
  4628  003F24  0A01               	xorlw	1	; case 1
  4629  003F26  B4D8               	btfsc	status,2,c
  4630  003F28  D7EC               	goto	l14857
  4631  003F2A  D7E0               	goto	l59
  4632                           
  4633                           ; BSR set to: 0
  4634                           
  4635                           ; BSR set to: 0
  4636  003F2C  D7F6               	goto	l14865
  4637                           
  4638                           ; BSR set to: 0
  4639                           
  4640                           ; BSR set to: 0
  4641  003F2E  EF93  F000         	goto	start
  4642  003F32                     __end_of_main:
  4643                           	opt stack 0
  4644                           tblptru	equ	0xFF8
  4645                           tblptrh	equ	0xFF7
  4646                           tblptrl	equ	0xFF6
  4647                           tablat	equ	0xFF5
  4648                           intcon	equ	0xFF2
  4649                           postinc0	equ	0xFEE
  4650                           wreg	equ	0xFE8
  4651                           postdec1	equ	0xFE5
  4652                           fsr1l	equ	0xFE1
  4653                           status	equ	0xFD8
  4654                           
  4655 ;; *************** function _test_powerup *****************
  4656 ;; Defined at:
  4657 ;;		line 62 in file "../Includes/Board/poweruptest.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;		None
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;		None
  4662 ;; Return value:  Size  Location     Type
  4663 ;;                  1    wreg      void 
  4664 ;; Registers used:
  4665 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4666 ;; Tracked objects:
  4667 ;;		On entry : 0/0
  4668 ;;		On exit  : 0/0
  4669 ;;		Unchanged: 0/0
  4670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4671 ;;      Params:         0       0       0       0       0       0       0       0       0
  4672 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4673 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4674 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4675 ;;Total ram usage:        0 bytes
  4676 ;; Hardware stack levels used:    1
  4677 ;; Hardware stack levels required when called:   17
  4678 ;; This function calls:
  4679 ;;		_EUSART_FlushBuffer
  4680 ;;		_moteApp_delayms
  4681 ;;		_moteApp_testSensors
  4682 ;;		_oled_clear
  4683 ;;		_test_comms
  4684 ;;		_test_leds
  4685 ;;		_test_oled
  4686 ;;		_test_switch
  4687 ;; This function is called by:
  4688 ;;		_main
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692                           	psect	text1
  4693  006512                     __ptext1:
  4694                           	opt stack 0
  4695  006512                     _test_powerup:
  4696                           	opt stack 13
  4697                           
  4698                           ;poweruptest.c: 65: test_oled();
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;incstack = 0
  4702  006512  EC5A  F02D         	call	_test_oled	;wreg free
  4703                           
  4704                           ;poweruptest.c: 66: moteApp_delayms(20);
  4705  006516  0E00               	movlw	0
  4706  006518  0100               	movlb	0	; () banked
  4707  00651A  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4708  00651C  0E14               	movlw	20
  4709  00651E  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4710  006520  EC90  F036         	call	_moteApp_delayms	;wreg free
  4711                           
  4712                           ;poweruptest.c: 68: test_switch();
  4713  006524  EC71  F022         	call	_test_switch	;wreg free
  4714                           
  4715                           ;poweruptest.c: 70: oled_clear();
  4716  006528  ECA5  F038         	call	_oled_clear	;wreg free
  4717                           
  4718                           ;poweruptest.c: 71: moteApp_delayms(20);
  4719  00652C  0E00               	movlw	0
  4720  00652E  0100               	movlb	0	; () banked
  4721  006530  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4722  006532  0E14               	movlw	20
  4723  006534  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4724  006536  EC90  F036         	call	_moteApp_delayms	;wreg free
  4725                           
  4726                           ;poweruptest.c: 72: test_comms();
  4727  00653A  ECC2  F032         	call	_test_comms	;wreg free
  4728                           
  4729                           ;poweruptest.c: 73: moteApp_delayms(20);
  4730  00653E  0E00               	movlw	0
  4731  006540  0100               	movlb	0	; () banked
  4732  006542  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4733  006544  0E14               	movlw	20
  4734  006546  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4735  006548  EC90  F036         	call	_moteApp_delayms	;wreg free
  4736                           
  4737                           ;poweruptest.c: 75: test_leds();
  4738  00654C  EC05  F034         	call	_test_leds	;wreg free
  4739                           
  4740                           ;poweruptest.c: 78: moteApp_delayms(20);
  4741  006550  0E00               	movlw	0
  4742  006552  0100               	movlb	0	; () banked
  4743  006554  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4744  006556  0E14               	movlw	20
  4745  006558  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4746  00655A  EC90  F036         	call	_moteApp_delayms	;wreg free
  4747                           
  4748                           ;poweruptest.c: 79: EUSART_FlushBuffer();
  4749  00655E  EC38  F034         	call	_EUSART_FlushBuffer	;wreg free
  4750                           
  4751                           ;poweruptest.c: 80: moteApp_delayms(20);
  4752  006562  0E00               	movlw	0
  4753  006564  0100               	movlb	0	; () banked
  4754  006566  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4755  006568  0E14               	movlw	20
  4756  00656A  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4757  00656C  EC90  F036         	call	_moteApp_delayms	;wreg free
  4758                           
  4759                           ;poweruptest.c: 81: moteApp_testSensors();
  4760  006570  ECCC  F028         	call	_moteApp_testSensors	;wreg free
  4761                           
  4762                           ;poweruptest.c: 82: moteApp_delayms(3000);
  4763  006574  0E0B               	movlw	11
  4764  006576  0100               	movlb	0	; () banked
  4765  006578  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4766  00657A  0EB8               	movlw	184
  4767  00657C  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4768  00657E  EC90  F036         	call	_moteApp_delayms	;wreg free
  4769  006582  0012               	return		;funcret
  4770  006584                     __end_of_test_powerup:
  4771                           	opt stack 0
  4772                           tblptru	equ	0xFF8
  4773                           tblptrh	equ	0xFF7
  4774                           tblptrl	equ	0xFF6
  4775                           tablat	equ	0xFF5
  4776                           intcon	equ	0xFF2
  4777                           postinc0	equ	0xFEE
  4778                           wreg	equ	0xFE8
  4779                           postdec1	equ	0xFE5
  4780                           fsr1l	equ	0xFE1
  4781                           status	equ	0xFD8
  4782                           
  4783 ;; *************** function _test_switch *****************
  4784 ;; Defined at:
  4785 ;;		line 99 in file "../Includes/Board/poweruptest.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;		None
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;  timeout         2   23[BANK0 ] unsigned int 
  4790 ;;  buttonCheck     1   25[BANK0 ] unsigned char 
  4791 ;; Return value:  Size  Location     Type
  4792 ;;                  1    wreg      void 
  4793 ;; Registers used:
  4794 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4795 ;; Tracked objects:
  4796 ;;		On entry : 0/0
  4797 ;;		On exit  : 0/0
  4798 ;;		Unchanged: 0/0
  4799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4800 ;;      Params:         0       0       0       0       0       0       0       0       0
  4801 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4802 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4803 ;;      Totals:         0       4       0       0       0       0       0       0       0
  4804 ;;Total ram usage:        4 bytes
  4805 ;; Hardware stack levels used:    1
  4806 ;; Hardware stack levels required when called:   16
  4807 ;; This function calls:
  4808 ;;		_oled_clear
  4809 ;;		_oled_putString
  4810 ;; This function is called by:
  4811 ;;		_test_powerup
  4812 ;; This function uses a non-reentrant model
  4813 ;;
  4814                           
  4815                           	psect	text2
  4816  0044E2                     __ptext2:
  4817                           	opt stack 0
  4818  0044E2                     _test_switch:
  4819                           	opt stack 13
  4820                           
  4821                           ;poweruptest.c: 101: uint16_t timeout = 500;
  4822                           
  4823                           ;incstack = 0
  4824  0044E2  0E01               	movlw	1
  4825  0044E4  0100               	movlb	0	; () banked
  4826  0044E6  6F78               	movwf	(test_switch@timeout+1)& (0+255),b
  4827  0044E8  0EF4               	movlw	244
  4828  0044EA  6F77               	movwf	test_switch@timeout& (0+255),b
  4829                           
  4830                           ;poweruptest.c: 102: uint8_t buttonCheck = 0x00;
  4831  0044EC  0E00               	movlw	0
  4832  0044EE  0100               	movlb	0	; () banked
  4833  0044F0  6F79               	movwf	test_switch@buttonCheck& (0+255),b
  4834                           
  4835                           ; BSR set to: 0
  4836                           ;poweruptest.c: 103: oled_clear();
  4837  0044F2  ECA5  F038         	call	_oled_clear	;wreg free
  4838                           
  4839                           ;poweruptest.c: 104: oled_putString("Button Test:",0,0);
  4840  0044F6  0EF4               	movlw	low STR_10
  4841  0044F8  0100               	movlb	0	; () banked
  4842  0044FA  6F71               	movwf	oled_putString@string& (0+255),b
  4843  0044FC  0E7D               	movlw	high STR_10
  4844  0044FE  0100               	movlb	0	; () banked
  4845  004500  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4846  004502  0E00               	movlw	0
  4847  004504  0100               	movlb	0	; () banked
  4848  004506  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4849  004508  0E00               	movlw	0
  4850  00450A  0100               	movlb	0	; () banked
  4851  00450C  6F74               	movwf	oled_putString@start_page& (0+255),b
  4852  00450E  EC89  F030         	call	_oled_putString	;wreg free
  4853                           
  4854                           ;poweruptest.c: 106: if( (PORTBbits.RB1 == 0) || (PORTBbits.RB0 == 0) )
  4855  004512  A281               	btfss	3969,1,c	;volatile
  4856  004514  D004               	goto	l13513
  4857  004516  A081               	btfss	3969,0,c	;volatile
  4858  004518  D002               	goto	l13513
  4859  00451A  D010               	goto	l13515
  4860  00451C  D000               	goto	l13513
  4861  00451E                     l13513:
  4862                           
  4863                           ;poweruptest.c: 107: {
  4864                           ;poweruptest.c: 108: oled_putString("Button FAIL",0,3);
  4865  00451E  0E7C               	movlw	low STR_11
  4866  004520  0100               	movlb	0	; () banked
  4867  004522  6F71               	movwf	oled_putString@string& (0+255),b
  4868  004524  0E7E               	movlw	high STR_11
  4869  004526  0100               	movlb	0	; () banked
  4870  004528  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4871  00452A  0E00               	movlw	0
  4872  00452C  0100               	movlb	0	; () banked
  4873  00452E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4874  004530  0E03               	movlw	3
  4875  004532  0100               	movlb	0	; () banked
  4876  004534  6F74               	movwf	oled_putString@start_page& (0+255),b
  4877  004536  EC89  F030         	call	_oled_putString	;wreg free
  4878                           
  4879                           ;poweruptest.c: 109: }
  4880  00453A  D04B               	goto	l13533
  4881  00453C                     l13515:
  4882                           
  4883                           ;poweruptest.c: 110: else
  4884                           ;poweruptest.c: 111: {
  4885                           ;poweruptest.c: 112: oled_putString("Press Button",0,1);
  4886  00453C  0E1B               	movlw	low STR_12
  4887  00453E  0100               	movlb	0	; () banked
  4888  004540  6F71               	movwf	oled_putString@string& (0+255),b
  4889  004542  0E7E               	movlw	high STR_12
  4890  004544  0100               	movlb	0	; () banked
  4891  004546  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4892  004548  0E00               	movlw	0
  4893  00454A  0100               	movlb	0	; () banked
  4894  00454C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4895  00454E  0E01               	movlw	1
  4896  004550  0100               	movlb	0	; () banked
  4897  004552  6F74               	movwf	oled_putString@start_page& (0+255),b
  4898  004554  EC89  F030         	call	_oled_putString	;wreg free
  4899                           
  4900                           ;poweruptest.c: 113: }
  4901                           ;poweruptest.c: 114: while(timeout--)
  4902  004558  D03C               	goto	l13533
  4903  00455A                     l126:
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;poweruptest.c: 115: {
  4907                           ;poweruptest.c: 116: if(PORTBbits.RB1 == 0)
  4908  00455A  B281               	btfsc	3969,1,c	;volatile
  4909  00455C  D014               	goto	l13521
  4910                           
  4911                           ; BSR set to: 0
  4912                           ;poweruptest.c: 117: {
  4913                           ;poweruptest.c: 118: oled_putString("Button1 PASS",0,2);
  4914  00455E  0E01               	movlw	low STR_13
  4915  004560  0100               	movlb	0	; () banked
  4916  004562  6F71               	movwf	oled_putString@string& (0+255),b
  4917  004564  0E7E               	movlw	high STR_13
  4918  004566  0100               	movlb	0	; () banked
  4919  004568  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4920  00456A  0E00               	movlw	0
  4921  00456C  0100               	movlb	0	; () banked
  4922  00456E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4923  004570  0E02               	movlw	2
  4924  004572  0100               	movlb	0	; () banked
  4925  004574  6F74               	movwf	oled_putString@start_page& (0+255),b
  4926  004576  EC89  F030         	call	_oled_putString	;wreg free
  4927                           
  4928                           ;poweruptest.c: 119: buttonCheck = buttonCheck + 0x08;
  4929  00457A  0100               	movlb	0	; () banked
  4930  00457C  5179               	movf	test_switch@buttonCheck& (0+255),w,b
  4931  00457E  0F08               	addlw	8
  4932  004580  0100               	movlb	0	; () banked
  4933  004582  6F79               	movwf	test_switch@buttonCheck& (0+255),b
  4934  004584  D000               	goto	l13521
  4935  004586                     l13521:
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;poweruptest.c: 120: }
  4939                           ;poweruptest.c: 121: if(PORTBbits.RB0 == 0)
  4940  004586  B081               	btfsc	3969,0,c	;volatile
  4941  004588  D014               	goto	l13527
  4942                           
  4943                           ; BSR set to: 0
  4944                           ;poweruptest.c: 122: {
  4945                           ;poweruptest.c: 123: oled_putString("Button2 PASS",0,3);
  4946  00458A  0E0E               	movlw	low STR_14
  4947  00458C  0100               	movlb	0	; () banked
  4948  00458E  6F71               	movwf	oled_putString@string& (0+255),b
  4949  004590  0E7E               	movlw	high STR_14
  4950  004592  0100               	movlb	0	; () banked
  4951  004594  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4952  004596  0E00               	movlw	0
  4953  004598  0100               	movlb	0	; () banked
  4954  00459A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4955  00459C  0E03               	movlw	3
  4956  00459E  0100               	movlb	0	; () banked
  4957  0045A0  6F74               	movwf	oled_putString@start_page& (0+255),b
  4958  0045A2  EC89  F030         	call	_oled_putString	;wreg free
  4959                           
  4960                           ;poweruptest.c: 124: buttonCheck = buttonCheck + 0x80;
  4961  0045A6  0100               	movlb	0	; () banked
  4962  0045A8  5179               	movf	test_switch@buttonCheck& (0+255),w,b
  4963  0045AA  0F80               	addlw	128
  4964  0045AC  0100               	movlb	0	; () banked
  4965  0045AE  6F79               	movwf	test_switch@buttonCheck& (0+255),b
  4966  0045B0  D000               	goto	l13527
  4967  0045B2                     l13527:
  4968                           
  4969                           ; BSR set to: 0
  4970                           ;poweruptest.c: 125: }
  4971                           ;poweruptest.c: 126: if (buttonCheck == 0x88)
  4972  0045B2  0E88               	movlw	136
  4973  0045B4  0100               	movlb	0	; () banked
  4974  0045B6  1979               	xorwf	test_switch@buttonCheck& (0+255),w,b
  4975  0045B8  B4D8               	btfsc	status,2,c
  4976  0045BA  0012               	return	
  4977  0045BC  D001               	goto	l13531
  4978                           
  4979                           ; BSR set to: 0
  4980                           ;poweruptest.c: 127: {
  4981                           ;poweruptest.c: 128: break;
  4982  0045BE  0012               	return	
  4983  0045C0                     l13531:
  4984                           
  4985                           ; BSR set to: 0
  4986                           ;poweruptest.c: 129: }
  4987                           ;poweruptest.c: 130: _delay((unsigned long)((10)*(48000000/4000.0)));
  4988  0045C0  0E9C               	movlw	156
  4989  0045C2  0100               	movlb	0	; () banked
  4990  0045C4  6F76               	movwf	??_test_switch& (0+255),b
  4991  0045C6  0ED7               	movlw	215
  4992  0045C8                     u14347:
  4993  0045C8  2EE8               	decfsz	wreg,f,c
  4994  0045CA  D7FE               	bra	u14347
  4995  0045CC  2F76               	decfsz	??_test_switch& (0+255),f,b
  4996  0045CE  D7FC               	bra	u14347
  4997  0045D0  D000               	goto	l13533
  4998  0045D2                     l13533:
  4999  0045D2  0100               	movlb	0	; () banked
  5000  0045D4  0777               	decf	test_switch@timeout& (0+255),f,b
  5001  0045D6  A0D8               	btfss	status,0,c
  5002  0045D8  0778               	decf	(test_switch@timeout+1)& (0+255),f,b
  5003  0045DA  0100               	movlb	0	; () banked
  5004  0045DC  2977               	incf	test_switch@timeout& (0+255),w,b
  5005  0045DE  E1BD               	bnz	l126
  5006  0045E0  0100               	movlb	0	; () banked
  5007  0045E2  2978               	incf	(test_switch@timeout+1)& (0+255),w,b
  5008  0045E4  B4D8               	btfsc	status,2,c
  5009  0045E6  0012               	return	
  5010  0045E8  D7B8               	goto	l126
  5011  0045EA  0012               	return	
  5012                           
  5013                           ; BSR set to: 0
  5014                           
  5015                           ; BSR set to: 0
  5016  0045EC  0012               	return		;funcret
  5017  0045EE                     __end_of_test_switch:
  5018                           	opt stack 0
  5019                           tblptru	equ	0xFF8
  5020                           tblptrh	equ	0xFF7
  5021                           tblptrl	equ	0xFF6
  5022                           tablat	equ	0xFF5
  5023                           intcon	equ	0xFF2
  5024                           postinc0	equ	0xFEE
  5025                           wreg	equ	0xFE8
  5026                           postdec1	equ	0xFE5
  5027                           fsr1l	equ	0xFE1
  5028                           status	equ	0xFD8
  5029                           
  5030 ;; *************** function _test_oled *****************
  5031 ;; Defined at:
  5032 ;;		line 86 in file "../Includes/Board/poweruptest.c"
  5033 ;; Parameters:    Size  Location     Type
  5034 ;;		None
  5035 ;; Auto vars:     Size  Location     Type
  5036 ;;		None
  5037 ;; Return value:  Size  Location     Type
  5038 ;;                  1    wreg      void 
  5039 ;; Registers used:
  5040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/0
  5043 ;;		On exit  : 0/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5046 ;;      Params:         0       0       0       0       0       0       0       0       0
  5047 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5048 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5049 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5050 ;;Total ram usage:        0 bytes
  5051 ;; Hardware stack levels used:    1
  5052 ;; Hardware stack levels required when called:   16
  5053 ;; This function calls:
  5054 ;;		_oled_clear
  5055 ;;		_oled_putString
  5056 ;; This function is called by:
  5057 ;;		_test_powerup
  5058 ;; This function uses a non-reentrant model
  5059 ;;
  5060                           
  5061                           	psect	text3
  5062  005AB4                     __ptext3:
  5063                           	opt stack 0
  5064  005AB4                     _test_oled:
  5065                           	opt stack 13
  5066                           
  5067                           ;poweruptest.c: 88: oled_clear();
  5068                           
  5069                           ; BSR set to: 0
  5070                           ;incstack = 0
  5071  005AB4  ECA5  F038         	call	_oled_clear	;wreg free
  5072                           
  5073                           ;poweruptest.c: 90: oled_putString("MoTe v .",0,0);
  5074  005AB8  0E3D               	movlw	low STR_4
  5075  005ABA  0100               	movlb	0	; () banked
  5076  005ABC  6F71               	movwf	oled_putString@string& (0+255),b
  5077  005ABE  0E7F               	movlw	high STR_4
  5078  005AC0  0100               	movlb	0	; () banked
  5079  005AC2  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5080  005AC4  0E00               	movlw	0
  5081  005AC6  0100               	movlb	0	; () banked
  5082  005AC8  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5083  005ACA  0E00               	movlw	0
  5084  005ACC  0100               	movlb	0	; () banked
  5085  005ACE  6F74               	movwf	oled_putString@start_page& (0+255),b
  5086  005AD0  EC89  F030         	call	_oled_putString	;wreg free
  5087                           
  5088                           ;poweruptest.c: 91: oled_putString("0",0,6);
  5089  005AD4  0E8A               	movlw	low (STR_164+11)
  5090  005AD6  0100               	movlb	0	; () banked
  5091  005AD8  6F71               	movwf	oled_putString@string& (0+255),b
  5092  005ADA  0E7D               	movlw	high (STR_164+11)
  5093  005ADC  0100               	movlb	0	; () banked
  5094  005ADE  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5095  005AE0  0E00               	movlw	0
  5096  005AE2  0100               	movlb	0	; () banked
  5097  005AE4  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5098  005AE6  0E06               	movlw	6
  5099  005AE8  0100               	movlb	0	; () banked
  5100  005AEA  6F74               	movwf	oled_putString@start_page& (0+255),b
  5101  005AEC  EC89  F030         	call	_oled_putString	;wreg free
  5102                           
  5103                           ;poweruptest.c: 92: oled_putString("1",0,8);
  5104  005AF0  0E97               	movlw	low (STR_165+11)
  5105  005AF2  0100               	movlb	0	; () banked
  5106  005AF4  6F71               	movwf	oled_putString@string& (0+255),b
  5107  005AF6  0E7D               	movlw	high (STR_165+11)
  5108  005AF8  0100               	movlb	0	; () banked
  5109  005AFA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5110  005AFC  0E00               	movlw	0
  5111  005AFE  0100               	movlb	0	; () banked
  5112  005B00  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5113  005B02  0E08               	movlw	8
  5114  005B04  0100               	movlb	0	; () banked
  5115  005B06  6F74               	movwf	oled_putString@start_page& (0+255),b
  5116  005B08  EC89  F030         	call	_oled_putString	;wreg free
  5117                           
  5118                           ;poweruptest.c: 93: oled_putString("Build Date/Time",0,1);
  5119  005B0C  0EC3               	movlw	low STR_7
  5120  005B0E  0100               	movlb	0	; () banked
  5121  005B10  6F71               	movwf	oled_putString@string& (0+255),b
  5122  005B12  0E7C               	movlw	high STR_7
  5123  005B14  0100               	movlb	0	; () banked
  5124  005B16  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5125  005B18  0E00               	movlw	0
  5126  005B1A  0100               	movlb	0	; () banked
  5127  005B1C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5128  005B1E  0E01               	movlw	1
  5129  005B20  0100               	movlb	0	; () banked
  5130  005B22  6F74               	movwf	oled_putString@start_page& (0+255),b
  5131  005B24  EC89  F030         	call	_oled_putString	;wreg free
  5132                           
  5133                           ;poweruptest.c: 94: oled_putString("Mar 28 2018",0,2);
  5134  005B28  0E70               	movlw	low STR_8
  5135  005B2A  0100               	movlb	0	; () banked
  5136  005B2C  6F71               	movwf	oled_putString@string& (0+255),b
  5137  005B2E  0E7E               	movlw	high STR_8
  5138  005B30  0100               	movlb	0	; () banked
  5139  005B32  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5140  005B34  0E00               	movlw	0
  5141  005B36  0100               	movlb	0	; () banked
  5142  005B38  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5143  005B3A  0E02               	movlw	2
  5144  005B3C  0100               	movlb	0	; () banked
  5145  005B3E  6F74               	movwf	oled_putString@start_page& (0+255),b
  5146  005B40  EC89  F030         	call	_oled_putString	;wreg free
  5147                           
  5148                           ;poweruptest.c: 95: oled_putString("08:32:22",0,3);
  5149  005B44  0E46               	movlw	low STR_9
  5150  005B46  0100               	movlb	0	; () banked
  5151  005B48  6F71               	movwf	oled_putString@string& (0+255),b
  5152  005B4A  0E7F               	movlw	high STR_9
  5153  005B4C  0100               	movlb	0	; () banked
  5154  005B4E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5155  005B50  0E00               	movlw	0
  5156  005B52  0100               	movlb	0	; () banked
  5157  005B54  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5158  005B56  0E03               	movlw	3
  5159  005B58  0100               	movlb	0	; () banked
  5160  005B5A  6F74               	movwf	oled_putString@start_page& (0+255),b
  5161  005B5C  EC89  F030         	call	_oled_putString	;wreg free
  5162  005B60  0012               	return		;funcret
  5163  005B62                     __end_of_test_oled:
  5164                           	opt stack 0
  5165                           tblptru	equ	0xFF8
  5166                           tblptrh	equ	0xFF7
  5167                           tblptrl	equ	0xFF6
  5168                           tablat	equ	0xFF5
  5169                           intcon	equ	0xFF2
  5170                           postinc0	equ	0xFEE
  5171                           wreg	equ	0xFE8
  5172                           postdec1	equ	0xFE5
  5173                           fsr1l	equ	0xFE1
  5174                           status	equ	0xFD8
  5175                           
  5176 ;; *************** function _test_leds *****************
  5177 ;; Defined at:
  5178 ;;		line 147 in file "../Includes/Board/poweruptest.c"
  5179 ;; Parameters:    Size  Location     Type
  5180 ;;		None
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;		None
  5183 ;; Return value:  Size  Location     Type
  5184 ;;                  1    wreg      void 
  5185 ;; Registers used:
  5186 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5187 ;; Tracked objects:
  5188 ;;		On entry : 0/0
  5189 ;;		On exit  : 0/0
  5190 ;;		Unchanged: 0/0
  5191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5192 ;;      Params:         0       0       0       0       0       0       0       0       0
  5193 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5194 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5195 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5196 ;;Total ram usage:        0 bytes
  5197 ;; Hardware stack levels used:    1
  5198 ;; Hardware stack levels required when called:   15
  5199 ;; This function calls:
  5200 ;;		_delayms
  5201 ;;		_oled_putString
  5202 ;; This function is called by:
  5203 ;;		_test_powerup
  5204 ;; This function uses a non-reentrant model
  5205 ;;
  5206                           
  5207                           	psect	text4
  5208  00680A                     __ptext4:
  5209                           	opt stack 0
  5210  00680A                     _test_leds:
  5211                           	opt stack 14
  5212                           
  5213                           ;poweruptest.c: 149: oled_putString("LED Test:",0,1);
  5214                           
  5215                           ;incstack = 0
  5216  00680A  0E06               	movlw	low STR_16
  5217  00680C  0100               	movlb	0	; () banked
  5218  00680E  6F71               	movwf	oled_putString@string& (0+255),b
  5219  006810  0E7F               	movlw	high STR_16
  5220  006812  0100               	movlb	0	; () banked
  5221  006814  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5222  006816  0E00               	movlw	0
  5223  006818  0100               	movlb	0	; () banked
  5224  00681A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5225  00681C  0E01               	movlw	1
  5226  00681E  0100               	movlb	0	; () banked
  5227  006820  6F74               	movwf	oled_putString@start_page& (0+255),b
  5228  006822  EC89  F030         	call	_oled_putString	;wreg free
  5229                           
  5230                           ;poweruptest.c: 151: LATAbits.LATA6 = 1;
  5231  006826  8C89               	bsf	3977,6,c	;volatile
  5232                           
  5233                           ;poweruptest.c: 152: LATAbits.LATA7 = 1;
  5234  006828  8E89               	bsf	3977,7,c	;volatile
  5235                           
  5236                           ;poweruptest.c: 153: delayms(500);
  5237  00682A  0E01               	movlw	1
  5238  00682C  0100               	movlb	0	; () banked
  5239  00682E  6F61               	movwf	(delayms@t+1)& (0+255),b
  5240  006830  0EF4               	movlw	244
  5241  006832  6F60               	movwf	delayms@t& (0+255),b
  5242  006834  ECB0  F036         	call	_delayms	;wreg free
  5243                           
  5244                           ;poweruptest.c: 154: LATAbits.LATA6 = 0;
  5245  006838  9C89               	bcf	3977,6,c	;volatile
  5246                           
  5247                           ;poweruptest.c: 155: LATAbits.LATA7 = 0;
  5248  00683A  9E89               	bcf	3977,7,c	;volatile
  5249                           
  5250                           ;poweruptest.c: 156: delayms(500);
  5251  00683C  0E01               	movlw	1
  5252  00683E  0100               	movlb	0	; () banked
  5253  006840  6F61               	movwf	(delayms@t+1)& (0+255),b
  5254  006842  0EF4               	movlw	244
  5255  006844  6F60               	movwf	delayms@t& (0+255),b
  5256  006846  ECB0  F036         	call	_delayms	;wreg free
  5257                           
  5258                           ;poweruptest.c: 157: LATAbits.LATA6 = 1;
  5259  00684A  8C89               	bsf	3977,6,c	;volatile
  5260                           
  5261                           ;poweruptest.c: 158: LATAbits.LATA7 = 1;
  5262  00684C  8E89               	bsf	3977,7,c	;volatile
  5263                           
  5264                           ;poweruptest.c: 159: delayms(500);
  5265  00684E  0E01               	movlw	1
  5266  006850  0100               	movlb	0	; () banked
  5267  006852  6F61               	movwf	(delayms@t+1)& (0+255),b
  5268  006854  0EF4               	movlw	244
  5269  006856  6F60               	movwf	delayms@t& (0+255),b
  5270  006858  ECB0  F036         	call	_delayms	;wreg free
  5271                           
  5272                           ;poweruptest.c: 160: LATAbits.LATA6 = 0;
  5273  00685C  9C89               	bcf	3977,6,c	;volatile
  5274                           
  5275                           ;poweruptest.c: 161: LATAbits.LATA7 = 0;
  5276  00685E  9E89               	bcf	3977,7,c	;volatile
  5277                           
  5278                           ;poweruptest.c: 162: delayms(500);
  5279  006860  0E01               	movlw	1
  5280  006862  0100               	movlb	0	; () banked
  5281  006864  6F61               	movwf	(delayms@t+1)& (0+255),b
  5282  006866  0EF4               	movlw	244
  5283  006868  6F60               	movwf	delayms@t& (0+255),b
  5284  00686A  ECB0  F036         	call	_delayms	;wreg free
  5285  00686E  0012               	return		;funcret
  5286  006870                     __end_of_test_leds:
  5287                           	opt stack 0
  5288                           tblptru	equ	0xFF8
  5289                           tblptrh	equ	0xFF7
  5290                           tblptrl	equ	0xFF6
  5291                           tablat	equ	0xFF5
  5292                           intcon	equ	0xFF2
  5293                           postinc0	equ	0xFEE
  5294                           wreg	equ	0xFE8
  5295                           postdec1	equ	0xFE5
  5296                           fsr1l	equ	0xFE1
  5297                           status	equ	0xFD8
  5298                           
  5299 ;; *************** function _test_comms *****************
  5300 ;; Defined at:
  5301 ;;		line 134 in file "../Includes/Board/poweruptest.c"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;		None
  5304 ;; Auto vars:     Size  Location     Type
  5305 ;;		None
  5306 ;; Return value:  Size  Location     Type
  5307 ;;                  1    wreg      void 
  5308 ;; Registers used:
  5309 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5310 ;; Tracked objects:
  5311 ;;		On entry : 0/0
  5312 ;;		On exit  : 0/0
  5313 ;;		Unchanged: 0/0
  5314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5315 ;;      Params:         0       0       0       0       0       0       0       0       0
  5316 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5317 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5318 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5319 ;;Total ram usage:        0 bytes
  5320 ;; Hardware stack levels used:    1
  5321 ;; Hardware stack levels required when called:   15
  5322 ;; This function calls:
  5323 ;;		_delayms
  5324 ;;		_moteApp_toggleLeds
  5325 ;;		_oled_putString
  5326 ;; This function is called by:
  5327 ;;		_test_powerup
  5328 ;; This function uses a non-reentrant model
  5329 ;;
  5330                           
  5331                           	psect	text5
  5332  006584                     __ptext5:
  5333                           	opt stack 0
  5334  006584                     _test_comms:
  5335                           	opt stack 14
  5336                           
  5337                           ;poweruptest.c: 136: oled_putString("Comm Test:",0,0);
  5338                           
  5339                           ;incstack = 0
  5340  006584  0EBF               	movlw	low STR_15
  5341  006586  0100               	movlb	0	; () banked
  5342  006588  6F71               	movwf	oled_putString@string& (0+255),b
  5343  00658A  0E7E               	movlw	high STR_15
  5344  00658C  0100               	movlb	0	; () banked
  5345  00658E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5346  006590  0E00               	movlw	0
  5347  006592  0100               	movlb	0	; () banked
  5348  006594  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5349  006596  0E00               	movlw	0
  5350  006598  0100               	movlb	0	; () banked
  5351  00659A  6F74               	movwf	oled_putString@start_page& (0+255),b
  5352  00659C  EC89  F030         	call	_oled_putString	;wreg free
  5353                           
  5354                           ;poweruptest.c: 137: moteApp_toggleLeds(1);
  5355  0065A0  0E01               	movlw	1
  5356  0065A2  ECF2  F025         	call	_moteApp_toggleLeds
  5357                           
  5358                           ;poweruptest.c: 138: delayms(500);
  5359  0065A6  0E01               	movlw	1
  5360  0065A8  0100               	movlb	0	; () banked
  5361  0065AA  6F61               	movwf	(delayms@t+1)& (0+255),b
  5362  0065AC  0EF4               	movlw	244
  5363  0065AE  6F60               	movwf	delayms@t& (0+255),b
  5364  0065B0  ECB0  F036         	call	_delayms	;wreg free
  5365                           
  5366                           ;poweruptest.c: 139: moteApp_toggleLeds(0);
  5367  0065B4  0E00               	movlw	0
  5368  0065B6  ECF2  F025         	call	_moteApp_toggleLeds
  5369                           
  5370                           ;poweruptest.c: 140: delayms(500);
  5371  0065BA  0E01               	movlw	1
  5372  0065BC  0100               	movlb	0	; () banked
  5373  0065BE  6F61               	movwf	(delayms@t+1)& (0+255),b
  5374  0065C0  0EF4               	movlw	244
  5375  0065C2  6F60               	movwf	delayms@t& (0+255),b
  5376  0065C4  ECB0  F036         	call	_delayms	;wreg free
  5377                           
  5378                           ;poweruptest.c: 141: moteApp_toggleLeds(1);
  5379  0065C8  0E01               	movlw	1
  5380  0065CA  ECF2  F025         	call	_moteApp_toggleLeds
  5381                           
  5382                           ;poweruptest.c: 142: delayms(500);
  5383  0065CE  0E01               	movlw	1
  5384  0065D0  0100               	movlb	0	; () banked
  5385  0065D2  6F61               	movwf	(delayms@t+1)& (0+255),b
  5386  0065D4  0EF4               	movlw	244
  5387  0065D6  6F60               	movwf	delayms@t& (0+255),b
  5388  0065D8  ECB0  F036         	call	_delayms	;wreg free
  5389                           
  5390                           ;poweruptest.c: 143: moteApp_toggleLeds(0);
  5391  0065DC  0E00               	movlw	0
  5392  0065DE  ECF2  F025         	call	_moteApp_toggleLeds
  5393                           
  5394                           ;poweruptest.c: 144: delayms(500);
  5395  0065E2  0E01               	movlw	1
  5396  0065E4  0100               	movlb	0	; () banked
  5397  0065E6  6F61               	movwf	(delayms@t+1)& (0+255),b
  5398  0065E8  0EF4               	movlw	244
  5399  0065EA  6F60               	movwf	delayms@t& (0+255),b
  5400  0065EC  ECB0  F036         	call	_delayms	;wreg free
  5401  0065F0  0012               	return		;funcret
  5402  0065F2                     __end_of_test_comms:
  5403                           	opt stack 0
  5404                           tblptru	equ	0xFF8
  5405                           tblptrh	equ	0xFF7
  5406                           tblptrl	equ	0xFF6
  5407                           tablat	equ	0xFF5
  5408                           intcon	equ	0xFF2
  5409                           postinc0	equ	0xFEE
  5410                           wreg	equ	0xFE8
  5411                           postdec1	equ	0xFE5
  5412                           fsr1l	equ	0xFE1
  5413                           status	equ	0xFD8
  5414                           
  5415 ;; *************** function _moteApp_toggleLeds *****************
  5416 ;; Defined at:
  5417 ;;		line 1262 in file "../Includes/Board/MOTEapp.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;  state           1    wreg     unsigned char 
  5420 ;; Auto vars:     Size  Location     Type
  5421 ;;  state           1    4[BANK0 ] unsigned char 
  5422 ;; Return value:  Size  Location     Type
  5423 ;;                  1    wreg      void 
  5424 ;; Registers used:
  5425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5426 ;; Tracked objects:
  5427 ;;		On entry : 0/0
  5428 ;;		On exit  : 0/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5431 ;;      Params:         0       0       0       0       0       0       0       0       0
  5432 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5433 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5434 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5435 ;;Total ram usage:        2 bytes
  5436 ;; Hardware stack levels used:    1
  5437 ;; Hardware stack levels required when called:   14
  5438 ;; This function calls:
  5439 ;;		_sendCommand
  5440 ;; This function is called by:
  5441 ;;		_test_comms
  5442 ;; This function uses a non-reentrant model
  5443 ;;
  5444                           
  5445                           	psect	text6
  5446  004BE4                     __ptext6:
  5447                           	opt stack 0
  5448  004BE4                     _moteApp_toggleLeds:
  5449                           	opt stack 14
  5450                           
  5451                           ;incstack = 0
  5452                           ;moteApp_toggleLeds@state stored from wreg
  5453  004BE4  0100               	movlb	0	; () banked
  5454  004BE6  6F64               	movwf	moteApp_toggleLeds@state& (0+255),b
  5455                           
  5456                           ;MOTEapp.c: 1264: _delay((unsigned long)((16)*(48000000/4000.0)));
  5457  004BE8  0EFA               	movlw	250
  5458  004BEA  0100               	movlb	0	; () banked
  5459  004BEC  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5460  004BEE  0E58               	movlw	88
  5461  004BF0                     u14357:
  5462  004BF0  2EE8               	decfsz	wreg,f,c
  5463  004BF2  D7FE               	bra	u14357
  5464  004BF4  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5465  004BF6  D7FC               	bra	u14357
  5466  004BF8  F000               	nop	
  5467                           
  5468                           ;MOTEapp.c: 1265: _delay((unsigned long)((16)*(48000000/4000.0)));
  5469  004BFA  0EFA               	movlw	250
  5470  004BFC  0100               	movlb	0	; () banked
  5471  004BFE  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5472  004C00  0E58               	movlw	88
  5473  004C02                     u14367:
  5474  004C02  2EE8               	decfsz	wreg,f,c
  5475  004C04  D7FE               	bra	u14367
  5476  004C06  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5477  004C08  D7FC               	bra	u14367
  5478  004C0A  F000               	nop	
  5479                           
  5480                           ;MOTEapp.c: 1266: _delay((unsigned long)((16)*(48000000/4000.0)));
  5481  004C0C  0EFA               	movlw	250
  5482  004C0E  0100               	movlb	0	; () banked
  5483  004C10  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5484  004C12  0E58               	movlw	88
  5485  004C14                     u14377:
  5486  004C14  2EE8               	decfsz	wreg,f,c
  5487  004C16  D7FE               	bra	u14377
  5488  004C18  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5489  004C1A  D7FC               	bra	u14377
  5490  004C1C  F000               	nop	
  5491                           
  5492                           ;MOTEapp.c: 1267: if (state)
  5493  004C1E  0100               	movlb	0	; () banked
  5494  004C20  5164               	movf	moteApp_toggleLeds@state& (0+255),w,b
  5495  004C22  0100               	movlb	0	; () banked
  5496  004C24  B4D8               	btfsc	status,2,c
  5497  004C26  D02C               	goto	l12911
  5498                           
  5499                           ; BSR set to: 0
  5500                           ;MOTEapp.c: 1268: {
  5501                           ;MOTEapp.c: 1269: sendCommand("sys set pindig GPIO10 1\r\n");
  5502  004C28  0E22               	movlw	low STR_175
  5503  004C2A  0100               	movlb	0	; () banked
  5504  004C2C  6F61               	movwf	sendCommand@string& (0+255),b
  5505  004C2E  0E7A               	movlw	high STR_175
  5506  004C30  0100               	movlb	0	; () banked
  5507  004C32  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5508  004C34  EC65  F037         	call	_sendCommand	;wreg free
  5509                           
  5510                           ;MOTEapp.c: 1270: _delay((unsigned long)((16)*(48000000/4000.0)));
  5511  004C38  0EFA               	movlw	250
  5512  004C3A  0100               	movlb	0	; () banked
  5513  004C3C  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5514  004C3E  0E58               	movlw	88
  5515  004C40                     u14387:
  5516  004C40  2EE8               	decfsz	wreg,f,c
  5517  004C42  D7FE               	bra	u14387
  5518  004C44  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5519  004C46  D7FC               	bra	u14387
  5520  004C48  F000               	nop	
  5521                           
  5522                           ;MOTEapp.c: 1271: _delay((unsigned long)((16)*(48000000/4000.0)));
  5523  004C4A  0EFA               	movlw	250
  5524  004C4C  0100               	movlb	0	; () banked
  5525  004C4E  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5526  004C50  0E58               	movlw	88
  5527  004C52                     u14397:
  5528  004C52  2EE8               	decfsz	wreg,f,c
  5529  004C54  D7FE               	bra	u14397
  5530  004C56  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5531  004C58  D7FC               	bra	u14397
  5532  004C5A  F000               	nop	
  5533                           
  5534                           ;MOTEapp.c: 1272: _delay((unsigned long)((16)*(48000000/4000.0)));
  5535  004C5C  0EFA               	movlw	250
  5536  004C5E  0100               	movlb	0	; () banked
  5537  004C60  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5538  004C62  0E58               	movlw	88
  5539  004C64                     u14407:
  5540  004C64  2EE8               	decfsz	wreg,f,c
  5541  004C66  D7FE               	bra	u14407
  5542  004C68  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5543  004C6A  D7FC               	bra	u14407
  5544  004C6C  F000               	nop	
  5545                           
  5546                           ;MOTEapp.c: 1273: sendCommand("sys set pindig GPIO11 1\r\n");
  5547  004C6E  0E3C               	movlw	low STR_176
  5548  004C70  0100               	movlb	0	; () banked
  5549  004C72  6F61               	movwf	sendCommand@string& (0+255),b
  5550  004C74  0E7A               	movlw	high STR_176
  5551  004C76  0100               	movlb	0	; () banked
  5552  004C78  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5553  004C7A  EC65  F037         	call	_sendCommand	;wreg free
  5554                           
  5555                           ;MOTEapp.c: 1274: }
  5556  004C7E  0012               	return	
  5557  004C80                     l12911:
  5558                           
  5559                           ;MOTEapp.c: 1275: else
  5560                           ;MOTEapp.c: 1276: {
  5561                           ;MOTEapp.c: 1277: sendCommand("sys set pindig GPIO10 0\r\n");
  5562  004C80  0EEE               	movlw	low STR_177
  5563  004C82  0100               	movlb	0	; () banked
  5564  004C84  6F61               	movwf	sendCommand@string& (0+255),b
  5565  004C86  0E79               	movlw	high STR_177
  5566  004C88  0100               	movlb	0	; () banked
  5567  004C8A  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5568  004C8C  EC65  F037         	call	_sendCommand	;wreg free
  5569                           
  5570                           ;MOTEapp.c: 1278: _delay((unsigned long)((16)*(48000000/4000.0)));
  5571  004C90  0EFA               	movlw	250
  5572  004C92  0100               	movlb	0	; () banked
  5573  004C94  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5574  004C96  0E58               	movlw	88
  5575  004C98                     u14417:
  5576  004C98  2EE8               	decfsz	wreg,f,c
  5577  004C9A  D7FE               	bra	u14417
  5578  004C9C  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5579  004C9E  D7FC               	bra	u14417
  5580  004CA0  F000               	nop	
  5581                           
  5582                           ;MOTEapp.c: 1279: _delay((unsigned long)((16)*(48000000/4000.0)));
  5583  004CA2  0EFA               	movlw	250
  5584  004CA4  0100               	movlb	0	; () banked
  5585  004CA6  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5586  004CA8  0E58               	movlw	88
  5587  004CAA                     u14427:
  5588  004CAA  2EE8               	decfsz	wreg,f,c
  5589  004CAC  D7FE               	bra	u14427
  5590  004CAE  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5591  004CB0  D7FC               	bra	u14427
  5592  004CB2  F000               	nop	
  5593                           
  5594                           ;MOTEapp.c: 1280: _delay((unsigned long)((16)*(48000000/4000.0)));
  5595  004CB4  0EFA               	movlw	250
  5596  004CB6  0100               	movlb	0	; () banked
  5597  004CB8  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5598  004CBA  0E58               	movlw	88
  5599  004CBC                     u14437:
  5600  004CBC  2EE8               	decfsz	wreg,f,c
  5601  004CBE  D7FE               	bra	u14437
  5602  004CC0  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5603  004CC2  D7FC               	bra	u14437
  5604  004CC4  F000               	nop	
  5605                           
  5606                           ;MOTEapp.c: 1281: sendCommand("sys set pindig GPIO11 0\r\n");
  5607  004CC6  0E08               	movlw	low STR_178
  5608  004CC8  0100               	movlb	0	; () banked
  5609  004CCA  6F61               	movwf	sendCommand@string& (0+255),b
  5610  004CCC  0E7A               	movlw	high STR_178
  5611  004CCE  0100               	movlb	0	; () banked
  5612  004CD0  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5613  004CD2  EC65  F037         	call	_sendCommand	;wreg free
  5614  004CD6  0012               	return	
  5615  004CD8  0012               	return		;funcret
  5616  004CDA                     __end_of_moteApp_toggleLeds:
  5617                           	opt stack 0
  5618                           tblptru	equ	0xFF8
  5619                           tblptrh	equ	0xFF7
  5620                           tblptrl	equ	0xFF6
  5621                           tablat	equ	0xFF5
  5622                           intcon	equ	0xFF2
  5623                           postinc0	equ	0xFEE
  5624                           wreg	equ	0xFE8
  5625                           postdec1	equ	0xFE5
  5626                           fsr1l	equ	0xFE1
  5627                           status	equ	0xFD8
  5628                           
  5629 ;; *************** function _delayms *****************
  5630 ;; Defined at:
  5631 ;;		line 54 in file "../Includes/Board/poweruptest.c"
  5632 ;; Parameters:    Size  Location     Type
  5633 ;;  t               2    0[BANK0 ] unsigned int 
  5634 ;; Auto vars:     Size  Location     Type
  5635 ;;  i               2    3[BANK0 ] unsigned int 
  5636 ;; Return value:  Size  Location     Type
  5637 ;;                  1    wreg      void 
  5638 ;; Registers used:
  5639 ;;		wreg, status,2, status,0
  5640 ;; Tracked objects:
  5641 ;;		On entry : 0/0
  5642 ;;		On exit  : 0/0
  5643 ;;		Unchanged: 0/0
  5644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5645 ;;      Params:         0       2       0       0       0       0       0       0       0
  5646 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5647 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5648 ;;      Totals:         0       5       0       0       0       0       0       0       0
  5649 ;;Total ram usage:        5 bytes
  5650 ;; Hardware stack levels used:    1
  5651 ;; Hardware stack levels required when called:   11
  5652 ;; This function calls:
  5653 ;;		Nothing
  5654 ;; This function is called by:
  5655 ;;		_test_comms
  5656 ;;		_test_leds
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660                           	psect	text7
  5661  006D60                     __ptext7:
  5662                           	opt stack 0
  5663  006D60                     _delayms:
  5664                           	opt stack 17
  5665                           
  5666                           ;poweruptest.c: 56: uint16_t i;
  5667                           ;poweruptest.c: 57: for(i = 0; i < t; i++)
  5668                           
  5669                           ;incstack = 0
  5670  006D60  0E00               	movlw	0
  5671  006D62  0100               	movlb	0	; () banked
  5672  006D64  6F64               	movwf	(delayms@i+1)& (0+255),b
  5673  006D66  0E00               	movlw	0
  5674  006D68  6F63               	movwf	delayms@i& (0+255),b
  5675  006D6A  D00C               	goto	l109
  5676  006D6C                     l12893:
  5677                           
  5678                           ; BSR set to: 0
  5679                           ;poweruptest.c: 58: {
  5680                           ;poweruptest.c: 59: _delay((unsigned long)((1)*(48000000/4000.0)));
  5681  006D6C  0E10               	movlw	16
  5682  006D6E  0100               	movlb	0	; () banked
  5683  006D70  6F62               	movwf	??_delayms& (0+255),b
  5684  006D72  0E94               	movlw	148
  5685  006D74                     u14447:
  5686  006D74  2EE8               	decfsz	wreg,f,c
  5687  006D76  D7FE               	bra	u14447
  5688  006D78  2F62               	decfsz	??_delayms& (0+255),f,b
  5689  006D7A  D7FC               	bra	u14447
  5690  006D7C  F000               	nop	
  5691  006D7E  0100               	movlb	0	; () banked
  5692  006D80  4B63               	infsnz	delayms@i& (0+255),f,b
  5693  006D82  2B64               	incf	(delayms@i+1)& (0+255),f,b
  5694  006D84                     l109:
  5695                           
  5696                           ; BSR set to: 0
  5697  006D84  0100               	movlb	0	; () banked
  5698  006D86  5160               	movf	delayms@t& (0+255),w,b
  5699  006D88  0100               	movlb	0	; () banked
  5700  006D8A  5D63               	subwf	delayms@i& (0+255),w,b
  5701  006D8C  0100               	movlb	0	; () banked
  5702  006D8E  5161               	movf	(delayms@t+1)& (0+255),w,b
  5703  006D90  0100               	movlb	0	; () banked
  5704  006D92  5964               	subwfb	(delayms@i+1)& (0+255),w,b
  5705  006D94  B0D8               	btfsc	status,0,c
  5706  006D96  0012               	return	
  5707  006D98  D7E9               	goto	l12893
  5708  006D9A  0012               	return	
  5709                           
  5710                           ; BSR set to: 0
  5711                           
  5712                           ; BSR set to: 0
  5713  006D9C  0012               	return		;funcret
  5714  006D9E                     __end_of_delayms:
  5715                           	opt stack 0
  5716                           tblptru	equ	0xFF8
  5717                           tblptrh	equ	0xFF7
  5718                           tblptrl	equ	0xFF6
  5719                           tablat	equ	0xFF5
  5720                           intcon	equ	0xFF2
  5721                           postinc0	equ	0xFEE
  5722                           wreg	equ	0xFE8
  5723                           postdec1	equ	0xFE5
  5724                           fsr1l	equ	0xFE1
  5725                           status	equ	0xFD8
  5726                           
  5727 ;; *************** function _moteApp_testSensors *****************
  5728 ;; Defined at:
  5729 ;;		line 1366 in file "../Includes/Board/MOTEapp.c"
  5730 ;; Parameters:    Size  Location     Type
  5731 ;;		None
  5732 ;; Auto vars:     Size  Location     Type
  5733 ;;  dummyValue      2    0        unsigned int 
  5734 ;; Return value:  Size  Location     Type
  5735 ;;                  1    wreg      void 
  5736 ;; Registers used:
  5737 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5738 ;; Tracked objects:
  5739 ;;		On entry : 0/0
  5740 ;;		On exit  : 0/0
  5741 ;;		Unchanged: 0/0
  5742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5743 ;;      Params:         0       0       0       0       0       0       0       0       0
  5744 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5745 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5746 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5747 ;;Total ram usage:        1 bytes
  5748 ;; Hardware stack levels used:    1
  5749 ;; Hardware stack levels required when called:   16
  5750 ;; This function calls:
  5751 ;;		_ADC_TempConversion
  5752 ;;		_moteApp_convertSensorValue
  5753 ;;		_moteApp_getLightValue
  5754 ;;		_moteApp_getTempValue
  5755 ;;		_moteApp_setSensorsInput
  5756 ;;		_oled_clear
  5757 ;;		_oled_putChar
  5758 ;;		_oled_putString
  5759 ;;		_oled_putint8
  5760 ;; This function is called by:
  5761 ;;		_test_powerup
  5762 ;; This function uses a non-reentrant model
  5763 ;;
  5764                           
  5765                           	psect	text8
  5766  005198                     __ptext8:
  5767                           	opt stack 0
  5768  005198                     _moteApp_testSensors:
  5769                           	opt stack 13
  5770                           
  5771                           ;MOTEapp.c: 1369: moteApp_setSensorsInput();
  5772                           
  5773                           ; BSR set to: 0
  5774                           ;incstack = 0
  5775  005198  EC5C  F02E         	call	_moteApp_setSensorsInput	;wreg free
  5776                           
  5777                           ;MOTEapp.c: 1371: uint16_t dummyValue;
  5778                           ;MOTEapp.c: 1372: oled_clear();
  5779  00519C  ECA5  F038         	call	_oled_clear	;wreg free
  5780                           
  5781                           ;MOTEapp.c: 1373: oled_putString("ADC Test",0,0);
  5782  0051A0  0E58               	movlw	low STR_17
  5783  0051A2  0100               	movlb	0	; () banked
  5784  0051A4  6F71               	movwf	oled_putString@string& (0+255),b
  5785  0051A6  0E7F               	movlw	high STR_17
  5786  0051A8  0100               	movlb	0	; () banked
  5787  0051AA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5788  0051AC  0E00               	movlw	0
  5789  0051AE  0100               	movlb	0	; () banked
  5790  0051B0  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5791  0051B2  0E00               	movlw	0
  5792  0051B4  0100               	movlb	0	; () banked
  5793  0051B6  6F74               	movwf	oled_putString@start_page& (0+255),b
  5794  0051B8  EC89  F030         	call	_oled_putString	;wreg free
  5795                           
  5796                           ;MOTEapp.c: 1374: oled_putString("Light =",0,1);
  5797  0051BC  0E71               	movlw	low STR_19
  5798  0051BE  0100               	movlb	0	; () banked
  5799  0051C0  6F71               	movwf	oled_putString@string& (0+255),b
  5800  0051C2  0E7F               	movlw	high STR_19
  5801  0051C4  0100               	movlb	0	; () banked
  5802  0051C6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5803  0051C8  0E00               	movlw	0
  5804  0051CA  0100               	movlb	0	; () banked
  5805  0051CC  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5806  0051CE  0E01               	movlw	1
  5807  0051D0  0100               	movlb	0	; () banked
  5808  0051D2  6F74               	movwf	oled_putString@start_page& (0+255),b
  5809  0051D4  EC89  F030         	call	_oled_putString	;wreg free
  5810                           
  5811                           ;MOTEapp.c: 1375: oled_putString("Temp  =",0,2);
  5812  0051D8  0E69               	movlw	low STR_18
  5813  0051DA  0100               	movlb	0	; () banked
  5814  0051DC  6F71               	movwf	oled_putString@string& (0+255),b
  5815  0051DE  0E7F               	movlw	high STR_18
  5816  0051E0  0100               	movlb	0	; () banked
  5817  0051E2  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5818  0051E4  0E00               	movlw	0
  5819  0051E6  0100               	movlb	0	; () banked
  5820  0051E8  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5821  0051EA  0E02               	movlw	2
  5822  0051EC  0100               	movlb	0	; () banked
  5823  0051EE  6F74               	movwf	oled_putString@start_page& (0+255),b
  5824  0051F0  EC89  F030         	call	_oled_putString	;wreg free
  5825                           
  5826                           ;MOTEapp.c: 1376: oled_putChar('C',14,2);
  5827  0051F4  0E0E               	movlw	14
  5828  0051F6  0100               	movlb	0	; () banked
  5829  0051F8  6F62               	movwf	oled_putChar@station_dot& (0+255),b
  5830  0051FA  0E02               	movlw	2
  5831  0051FC  0100               	movlb	0	; () banked
  5832  0051FE  6F63               	movwf	oled_putChar@start_page& (0+255),b
  5833  005200  0E43               	movlw	67
  5834  005202  ECA0  F02C         	call	_oled_putChar
  5835                           
  5836                           ;MOTEapp.c: 1377: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  5837  005206  EC98  F034         	call	_moteApp_getTempValue	;wreg free
  5838  00520A  C063  F071         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  5839  00520E  C064  F072         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  5840  005212  EC42  F02C         	call	_moteApp_convertSensorValue	;wreg free
  5841  005216  C071  F0C7         	movff	?_moteApp_convertSensorValue,_temperature
  5842  00521A  C072  F0C8         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  5843                           
  5844                           ;MOTEapp.c: 1378: temperature = ADC_TempConversion(temperature);
  5845  00521E  0100               	movlb	0	; () banked
  5846  005220  51C7               	movf	_temperature& (0+255),w,b
  5847  005222  ECE8  F026         	call	_ADC_TempConversion
  5848  005226  0100               	movlb	0	; () banked
  5849  005228  6FAC               	movwf	??_moteApp_testSensors& (0+255),b
  5850  00522A  0100               	movlb	0	; () banked
  5851  00522C  51AC               	movf	??_moteApp_testSensors& (0+255),w,b
  5852  00522E  0100               	movlb	0	; () banked
  5853  005230  6FC7               	movwf	_temperature& (0+255),b
  5854  005232  6BC8               	clrf	(_temperature+1)& (0+255),b
  5855                           
  5856                           ; BSR set to: 0
  5857                           ;MOTEapp.c: 1379: oled_putint8(temperature, 10, 2);
  5858  005234  0E0A               	movlw	10
  5859  005236  0100               	movlb	0	; () banked
  5860  005238  6F76               	movwf	oled_putint8@station_dot& (0+255),b
  5861  00523A  0E02               	movlw	2
  5862  00523C  0100               	movlb	0	; () banked
  5863  00523E  6F77               	movwf	oled_putint8@start_page& (0+255),b
  5864  005240  0100               	movlb	0	; () banked
  5865  005242  51C7               	movf	_temperature& (0+255),w,b
  5866  005244  EC96  F02A         	call	_oled_putint8
  5867                           
  5868                           ;MOTEapp.c: 1380: __nop();
  5869  005248  F000               	nop	
  5870                           
  5871                           ;MOTEapp.c: 1381: oled_putString("    ", 10, 1);
  5872  00524A  0EC7               	movlw	low (STR_40+12)
  5873  00524C  0100               	movlb	0	; () banked
  5874  00524E  6F71               	movwf	oled_putString@string& (0+255),b
  5875  005250  0E7A               	movlw	high (STR_40+12)
  5876  005252  0100               	movlb	0	; () banked
  5877  005254  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5878  005256  0E0A               	movlw	10
  5879  005258  0100               	movlb	0	; () banked
  5880  00525A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5881  00525C  0E01               	movlw	1
  5882  00525E  0100               	movlb	0	; () banked
  5883  005260  6F74               	movwf	oled_putString@start_page& (0+255),b
  5884  005262  EC89  F030         	call	_oled_putString	;wreg free
  5885                           
  5886                           ;MOTEapp.c: 1382: oled_putString(moteApp_getLightValue(), 10, 1);
  5887  005266  EC30  F033         	call	_moteApp_getLightValue	;wreg free
  5888  00526A  C06D  F071         	movff	?_moteApp_getLightValue,oled_putString@string
  5889  00526E  C06E  F072         	movff	?_moteApp_getLightValue+1,oled_putString@string+1
  5890  005272  0E0A               	movlw	10
  5891  005274  0100               	movlb	0	; () banked
  5892  005276  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5893  005278  0E01               	movlw	1
  5894  00527A  0100               	movlb	0	; () banked
  5895  00527C  6F74               	movwf	oled_putString@start_page& (0+255),b
  5896  00527E  EC89  F030         	call	_oled_putString	;wreg free
  5897  005282  0012               	return		;funcret
  5898  005284                     __end_of_moteApp_testSensors:
  5899                           	opt stack 0
  5900                           tblptru	equ	0xFF8
  5901                           tblptrh	equ	0xFF7
  5902                           tblptrl	equ	0xFF6
  5903                           tablat	equ	0xFF5
  5904                           intcon	equ	0xFF2
  5905                           postinc0	equ	0xFEE
  5906                           wreg	equ	0xFE8
  5907                           postdec1	equ	0xFE5
  5908                           fsr1l	equ	0xFE1
  5909                           status	equ	0xFD8
  5910                           
  5911 ;; *************** function _moteHandler *****************
  5912 ;; Defined at:
  5913 ;;		line 186 in file "../Includes/Board/MOTEapp.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;		None
  5916 ;; Auto vars:     Size  Location     Type
  5917 ;;  readMessage     1    4[BANK1 ] unsigned char 
  5918 ;;  buttonPress     1    3[BANK1 ] enum E5832
  5919 ;;  s2Button        1    2[BANK1 ] unsigned char 
  5920 ;;  gotoNextStat    1    1[BANK1 ] unsigned char 
  5921 ;;  gotoSleep       1    0[BANK1 ] unsigned char 
  5922 ;; Return value:  Size  Location     Type
  5923 ;;                  1    wreg      enum E6829
  5924 ;; Registers used:
  5925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5926 ;; Tracked objects:
  5927 ;;		On entry : 0/0
  5928 ;;		On exit  : 0/0
  5929 ;;		Unchanged: 0/0
  5930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5931 ;;      Params:         0       0       0       0       0       0       0       0       0
  5932 ;;      Locals:         0       0       5       0       0       0       0       0       0
  5933 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5934 ;;      Totals:         0       1       5       0       0       0       0       0       0
  5935 ;;Total ram usage:        6 bytes
  5936 ;; Hardware stack levels used:    1
  5937 ;; Hardware stack levels required when called:   19
  5938 ;; This function calls:
  5939 ;;		_ADC_TempConversion
  5940 ;;		_MOTEapp_TimerBasedTask
  5941 ;;		_MOTEapp_getModuleResponse
  5942 ;;		_TMRapp_ClearBitFlags
  5943 ;;		_TMRapp_Handler
  5944 ;;		_USBapp_exitCDC
  5945 ;;		_USBapp_exitCDCState
  5946 ;;		_moteApp_convertSensorValue
  5947 ;;		_moteApp_getLightValue
  5948 ;;		_moteApp_getTempValue
  5949 ;;		_moteJoiningProcess
  5950 ;;		_moteRunningProcess
  5951 ;;		_oled_clear
  5952 ;;		_oled_putString
  5953 ;;		_oled_putint8
  5954 ;;		_service_pushbutton
  5955 ;; This function is called by:
  5956 ;;		_main
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960                           	psect	text9
  5961  002D70                     __ptext9:
  5962                           	opt stack 0
  5963  002D70                     _moteHandler:
  5964                           	opt stack 11
  5965                           
  5966                           ;MOTEapp.c: 188: bool gotoSleep = 0;
  5967                           
  5968                           ;incstack = 0
  5969  002D70  0E00               	movlw	0
  5970  002D72  0101               	movlb	1	; () banked
  5971  002D74  6FF3               	movwf	moteHandler@gotoSleep& (0+255),b
  5972                           
  5973                           ;MOTEapp.c: 189: bool gotoNextState = 0;
  5974  002D76  0E00               	movlw	0
  5975  002D78  0101               	movlb	1	; () banked
  5976  002D7A  6FF4               	movwf	moteHandler@gotoNextState& (0+255),b
  5977                           
  5978                           ;MOTEapp.c: 190: bool s2Button = 0;
  5979  002D7C  0E00               	movlw	0
  5980  002D7E  0101               	movlb	1	; () banked
  5981  002D80  6FF5               	movwf	moteHandler@s2Button& (0+255),b
  5982                           
  5983                           ;MOTEapp.c: 191: bool readMessage = 0;
  5984  002D82  0E00               	movlw	0
  5985  002D84  0101               	movlb	1	; () banked
  5986  002D86  6FF7               	movwf	moteHandler@readMessage& (0+255),b
  5987                           
  5988                           ;MOTEapp.c: 192: buttonStates_t buttonPress = Released;
  5989  002D88  0E03               	movlw	3
  5990  002D8A  0101               	movlb	1	; () banked
  5991  002D8C  6FF6               	movwf	moteHandler@buttonPress& (0+255),b
  5992                           
  5993                           ; BSR set to: 1
  5994                           ;MOTEapp.c: 195: if (PORTAbits.RA0)
  5995  002D8E  A080               	btfss	3968,0,c	;volatile
  5996  002D90  D009               	goto	l14713
  5997                           
  5998                           ; BSR set to: 1
  5999                           ;MOTEapp.c: 196: {
  6000                           ;MOTEapp.c: 197: if (USBapp_exitCDC() == NO_USB)
  6001  002D92  EC6A  F039         	call	_USBapp_exitCDC	;wreg free
  6002  002D96  0900               	iorlw	0
  6003  002D98  A4D8               	btfss	status,2,c
  6004  002D9A  D008               	goto	l14715
  6005                           
  6006                           ;MOTEapp.c: 198: moteState = MOTE_SWAP;
  6007  002D9C  0E04               	movlw	4
  6008  002D9E  0100               	movlb	0	; () banked
  6009  002DA0  6FFE               	movwf	_moteState& (0+255),b
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;MOTEapp.c: 199: } else {
  6013  002DA2  D004               	goto	l14715
  6014  002DA4                     l14713:
  6015                           
  6016                           ;MOTEapp.c: 200: USBapp_exitCDCState(NO_USB);
  6017  002DA4  0E00               	movlw	0
  6018  002DA6  EC4E  F039         	call	_USBapp_exitCDCState
  6019  002DAA  D000               	goto	l14715
  6020  002DAC                     l14715:
  6021                           
  6022                           ;MOTEapp.c: 201: }
  6023                           ;MOTEapp.c: 204: if ( appTimer.mSecTick )
  6024  002DAC  0100               	movlb	0	; () banked
  6025  002DAE  A1F2               	btfss	_appTimer& (0+255),0,b
  6026  002DB0  D009               	goto	l14723
  6027                           
  6028                           ; BSR set to: 0
  6029                           ;MOTEapp.c: 205: {
  6030                           ;MOTEapp.c: 207: TMRapp_ClearBitFlags();
  6031  002DB2  EC6E  F039         	call	_TMRapp_ClearBitFlags	;wreg free
  6032                           
  6033                           ;MOTEapp.c: 209: TMRapp_Handler();
  6034  002DB6  EC4F  F01C         	call	_TMRapp_Handler	;wreg free
  6035                           
  6036                           ;MOTEapp.c: 210: MOTEapp_TimerBasedTask(appTimer);
  6037  002DBA  0100               	movlb	0	; () banked
  6038  002DBC  51F2               	movf	_appTimer& (0+255),w,b
  6039  002DBE  ECC4  F035         	call	_MOTEapp_TimerBasedTask
  6040  002DC2  D000               	goto	l14723
  6041  002DC4                     l14723:
  6042                           
  6043                           ;MOTEapp.c: 211: }
  6044                           ;MOTEapp.c: 214: buttonPress = service_pushbutton();
  6045  002DC4  ECB0  F02E         	call	_service_pushbutton	;wreg free
  6046  002DC8  0101               	movlb	1	; () banked
  6047  002DCA  6FF6               	movwf	moteHandler@buttonPress& (0+255),b
  6048                           
  6049                           ; BSR set to: 1
  6050                           ;MOTEapp.c: 215: if (buttonPress == ShortPress1)
  6051  002DCC  0101               	movlb	1	; () banked
  6052  002DCE  05F6               	decf	moteHandler@buttonPress& (0+255),w,b
  6053  002DD0  A4D8               	btfss	status,2,c
  6054  002DD2  D007               	goto	l14729
  6055                           
  6056                           ; BSR set to: 1
  6057                           ;MOTEapp.c: 216: {
  6058                           ;MOTEapp.c: 217: secTicker = 0;
  6059  002DD4  0E00               	movlw	0
  6060  002DD6  0100               	movlb	0	; () banked
  6061  002DD8  6FE5               	movwf	_secTicker& (0+255),b
  6062                           
  6063                           ;MOTEapp.c: 218: gotoNextState = 1;
  6064  002DDA  0E01               	movlw	1
  6065  002DDC  0101               	movlb	1	; () banked
  6066  002DDE  6FF4               	movwf	moteHandler@gotoNextState& (0+255),b
  6067                           
  6068                           ;MOTEapp.c: 219: }
  6069  002DE0  D00C               	goto	l14733
  6070  002DE2                     l14729:
  6071                           
  6072                           ; BSR set to: 1
  6073                           ;MOTEapp.c: 220: else if (buttonPress == ShortPress2)
  6074  002DE2  0E02               	movlw	2
  6075  002DE4  0101               	movlb	1	; () banked
  6076  002DE6  19F6               	xorwf	moteHandler@buttonPress& (0+255),w,b
  6077  002DE8  A4D8               	btfss	status,2,c
  6078  002DEA  D007               	goto	l14733
  6079                           
  6080                           ; BSR set to: 1
  6081                           ;MOTEapp.c: 221: {
  6082                           ;MOTEapp.c: 222: secTicker = 0;
  6083  002DEC  0E00               	movlw	0
  6084  002DEE  0100               	movlb	0	; () banked
  6085  002DF0  6FE5               	movwf	_secTicker& (0+255),b
  6086                           
  6087                           ;MOTEapp.c: 223: s2Button = 1;
  6088  002DF2  0E01               	movlw	1
  6089  002DF4  0101               	movlb	1	; () banked
  6090  002DF6  6FF5               	movwf	moteHandler@s2Button& (0+255),b
  6091                           
  6092                           ; BSR set to: 1
  6093  002DF8  D000               	goto	l14733
  6094  002DFA                     l14733:
  6095                           
  6096                           ; BSR set to: 1
  6097                           ;MOTEapp.c: 224: }
  6098                           ;MOTEapp.c: 227: if ( MOTEapp_getModuleResponse() )
  6099  002DFA  EC41  F030         	call	_MOTEapp_getModuleResponse	;wreg free
  6100  002DFE  0900               	iorlw	0
  6101  002E00  B4D8               	btfsc	status,2,c
  6102  002E02  D002               	goto	l14737
  6103                           
  6104                           ;MOTEapp.c: 228: readMessage = 1;
  6105  002E04  0E01               	movlw	1
  6106  002E06  D001               	goto	L1
  6107  002E08                     l14737:
  6108                           
  6109                           ;MOTEapp.c: 229: else
  6110                           ;MOTEapp.c: 230: readMessage = 0;
  6111  002E08  0E00               	movlw	0
  6112  002E0A                     L1:
  6113  002E0A  0101               	movlb	1	; () banked
  6114  002E0C  6FF7               	movwf	moteHandler@readMessage& (0+255),b
  6115  002E0E  D000               	goto	l14739
  6116  002E10                     l14739:
  6117                           
  6118                           ; BSR set to: 1
  6119                           ;MOTEapp.c: 233: if (runningState == runningSensorMenu)
  6120  002E10  0E02               	movlw	2
  6121  002E12  0100               	movlb	0	; () banked
  6122  002E14  19E9               	xorwf	_runningState& (0+255),w,b
  6123  002E16  A4D8               	btfss	status,2,c
  6124  002E18  D04C               	goto	l14757
  6125                           
  6126                           ; BSR set to: 0
  6127                           ;MOTEapp.c: 234: {
  6128                           ;MOTEapp.c: 236: if (m10SecTicker >= 100)
  6129  002E1A  0101               	movlb	1	; () banked
  6130  002E1C  5157               	movf	(_m10SecTicker+1)& (0+255),w,b
  6131  002E1E  E105               	bnz	u14230
  6132  002E20  0E64               	movlw	100
  6133  002E22  0101               	movlb	1	; () banked
  6134  002E24  5D56               	subwf	_m10SecTicker& (0+255),w,b
  6135  002E26  A0D8               	btfss	status,0,c
  6136  002E28  D044               	goto	l14757
  6137  002E2A                     u14230:
  6138                           
  6139                           ; BSR set to: 1
  6140                           ;MOTEapp.c: 237: {
  6141                           ;MOTEapp.c: 238: __nop();
  6142  002E2A  F000               	nop	
  6143                           
  6144                           ;MOTEapp.c: 239: oled_putString("    ", 6, 1);
  6145  002E2C  0EC7               	movlw	low (STR_40+12)
  6146  002E2E  0100               	movlb	0	; () banked
  6147  002E30  6F71               	movwf	oled_putString@string& (0+255),b
  6148  002E32  0E7A               	movlw	high (STR_40+12)
  6149  002E34  0100               	movlb	0	; () banked
  6150  002E36  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6151  002E38  0E06               	movlw	6
  6152  002E3A  0100               	movlb	0	; () banked
  6153  002E3C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6154  002E3E  0E01               	movlw	1
  6155  002E40  0100               	movlb	0	; () banked
  6156  002E42  6F74               	movwf	oled_putString@start_page& (0+255),b
  6157  002E44  EC89  F030         	call	_oled_putString	;wreg free
  6158                           
  6159                           ;MOTEapp.c: 240: oled_putString(moteApp_getLightValue(), 6, 1);
  6160  002E48  EC30  F033         	call	_moteApp_getLightValue	;wreg free
  6161  002E4C  C06D  F071         	movff	?_moteApp_getLightValue,oled_putString@string
  6162  002E50  C06E  F072         	movff	?_moteApp_getLightValue+1,oled_putString@string+1
  6163  002E54  0E06               	movlw	6
  6164  002E56  0100               	movlb	0	; () banked
  6165  002E58  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6166  002E5A  0E01               	movlw	1
  6167  002E5C  0100               	movlb	0	; () banked
  6168  002E5E  6F74               	movwf	oled_putString@start_page& (0+255),b
  6169  002E60  EC89  F030         	call	_oled_putString	;wreg free
  6170                           
  6171                           ;MOTEapp.c: 241: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  6172  002E64  EC98  F034         	call	_moteApp_getTempValue	;wreg free
  6173  002E68  C063  F071         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  6174  002E6C  C064  F072         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  6175  002E70  EC42  F02C         	call	_moteApp_convertSensorValue	;wreg free
  6176  002E74  C071  F0C7         	movff	?_moteApp_convertSensorValue,_temperature
  6177  002E78  C072  F0C8         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  6178                           
  6179                           ;MOTEapp.c: 242: temperature = ADC_TempConversion(temperature);
  6180  002E7C  0100               	movlb	0	; () banked
  6181  002E7E  51C7               	movf	_temperature& (0+255),w,b
  6182  002E80  ECE8  F026         	call	_ADC_TempConversion
  6183  002E84  0100               	movlb	0	; () banked
  6184  002E86  6FB6               	movwf	??_moteHandler& (0+255),b
  6185  002E88  0100               	movlb	0	; () banked
  6186  002E8A  51B6               	movf	??_moteHandler& (0+255),w,b
  6187  002E8C  0100               	movlb	0	; () banked
  6188  002E8E  6FC7               	movwf	_temperature& (0+255),b
  6189  002E90  6BC8               	clrf	(_temperature+1)& (0+255),b
  6190                           
  6191                           ; BSR set to: 0
  6192                           ;MOTEapp.c: 243: oled_putint8(temperature, 6, 2);
  6193  002E92  0E06               	movlw	6
  6194  002E94  0100               	movlb	0	; () banked
  6195  002E96  6F76               	movwf	oled_putint8@station_dot& (0+255),b
  6196  002E98  0E02               	movlw	2
  6197  002E9A  0100               	movlb	0	; () banked
  6198  002E9C  6F77               	movwf	oled_putint8@start_page& (0+255),b
  6199  002E9E  0100               	movlb	0	; () banked
  6200  002EA0  51C7               	movf	_temperature& (0+255),w,b
  6201  002EA2  EC96  F02A         	call	_oled_putint8
  6202                           
  6203                           ;MOTEapp.c: 244: m10SecTicker = 0;
  6204  002EA6  0E00               	movlw	0
  6205  002EA8  0101               	movlb	1	; () banked
  6206  002EAA  6F57               	movwf	(_m10SecTicker+1)& (0+255),b
  6207  002EAC  0E00               	movlw	0
  6208  002EAE  6F56               	movwf	_m10SecTicker& (0+255),b
  6209                           
  6210                           ; BSR set to: 1
  6211  002EB0  D000               	goto	l14757
  6212  002EB2                     l14757:
  6213                           
  6214                           ;MOTEapp.c: 245: }
  6215                           ;MOTEapp.c: 246: }
  6216                           ;MOTEapp.c: 248: if(secTicker)
  6217  002EB2  0100               	movlb	0	; () banked
  6218  002EB4  51E5               	movf	_secTicker& (0+255),w,b
  6219  002EB6  B4D8               	btfsc	status,2,c
  6220  002EB8  D08D               	goto	l14795
  6221                           
  6222                           ; BSR set to: 0
  6223                           ;MOTEapp.c: 249: {
  6224                           ;MOTEapp.c: 250: if ((secTicker >= 10) && (menuTimeout))
  6225  002EBA  0E09               	movlw	9
  6226  002EBC  0100               	movlb	0	; () banked
  6227  002EBE  65E5               	cpfsgt	_secTicker& (0+255),b
  6228  002EC0  D089               	goto	l14795
  6229  002EC2  D001               	goto	l14761
  6230  002EC4  D087               	goto	l14795
  6231  002EC6                     l14761:
  6232                           
  6233                           ; BSR set to: 0
  6234  002EC6  0100               	movlb	0	; () banked
  6235  002EC8  51FA               	movf	_menuTimeout& (0+255),w,b
  6236  002ECA  B4D8               	btfsc	status,2,c
  6237  002ECC  D083               	goto	l14795
  6238                           
  6239                           ; BSR set to: 0
  6240                           ;MOTEapp.c: 251: {
  6241                           ;MOTEapp.c: 252: gotoSleep = 1;
  6242  002ECE  0E01               	movlw	1
  6243  002ED0  0101               	movlb	1	; () banked
  6244  002ED2  6FF3               	movwf	moteHandler@gotoSleep& (0+255),b
  6245                           
  6246                           ;MOTEapp.c: 253: secTicker = 0;
  6247  002ED4  0E00               	movlw	0
  6248  002ED6  0100               	movlb	0	; () banked
  6249  002ED8  6FE5               	movwf	_secTicker& (0+255),b
  6250                           
  6251                           ; BSR set to: 0
  6252                           ;MOTEapp.c: 254: }
  6253                           ;MOTEapp.c: 255: }
  6254                           ;MOTEapp.c: 257: switch(moteState)
  6255                           
  6256                           ; BSR set to: 0
  6257  002EDA  D07C               	goto	l14795
  6258  002EDC                     l376:
  6259  002EDC  D7FF               	goto	l376
  6260                           
  6261                           ;MOTEapp.c: 261: break;
  6262  002EDE  D088               	goto	l14797
  6263  002EE0                     l14765:
  6264                           
  6265                           ;MOTEapp.c: 263: oled_clear();
  6266  002EE0  ECA5  F038         	call	_oled_clear	;wreg free
  6267                           
  6268                           ;MOTEapp.c: 264: oled_putString("MOTE Mode",1,0);
  6269  002EE4  0EDE               	movlw	low STR_24
  6270  002EE6  0100               	movlb	0	; () banked
  6271  002EE8  6F71               	movwf	oled_putString@string& (0+255),b
  6272  002EEA  0E7E               	movlw	high STR_24
  6273  002EEC  0100               	movlb	0	; () banked
  6274  002EEE  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6275  002EF0  0E01               	movlw	1
  6276  002EF2  0100               	movlb	0	; () banked
  6277  002EF4  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6278  002EF6  0E00               	movlw	0
  6279  002EF8  0100               	movlb	0	; () banked
  6280  002EFA  6F74               	movwf	oled_putString@start_page& (0+255),b
  6281  002EFC  EC89  F030         	call	_oled_putString	;wreg free
  6282                           
  6283                           ;MOTEapp.c: 265: oled_putString("Starting",2,1);
  6284  002F00  0E34               	movlw	low STR_25
  6285  002F02  0100               	movlb	0	; () banked
  6286  002F04  6F71               	movwf	oled_putString@string& (0+255),b
  6287  002F06  0E7F               	movlw	high STR_25
  6288  002F08  0100               	movlb	0	; () banked
  6289  002F0A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6290  002F0C  0E02               	movlw	2
  6291  002F0E  0100               	movlb	0	; () banked
  6292  002F10  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6293  002F12  0E01               	movlw	1
  6294  002F14  0100               	movlb	0	; () banked
  6295  002F16  6F74               	movwf	oled_putString@start_page& (0+255),b
  6296  002F18  EC89  F030         	call	_oled_putString	;wreg free
  6297                           
  6298                           ;MOTEapp.c: 266: oled_putString("ReRun PwrTst<S2>",0,3);
  6299  002F1C  0EA9               	movlw	low STR_26
  6300  002F1E  0100               	movlb	0	; () banked
  6301  002F20  6F71               	movwf	oled_putString@string& (0+255),b
  6302  002F22  0E7B               	movlw	high STR_26
  6303  002F24  0100               	movlb	0	; () banked
  6304  002F26  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6305  002F28  0E00               	movlw	0
  6306  002F2A  0100               	movlb	0	; () banked
  6307  002F2C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6308  002F2E  0E03               	movlw	3
  6309  002F30  0100               	movlb	0	; () banked
  6310  002F32  6F74               	movwf	oled_putString@start_page& (0+255),b
  6311  002F34  EC89  F030         	call	_oled_putString	;wreg free
  6312                           
  6313                           ;MOTEapp.c: 267: activeState = moteStartup;
  6314  002F38  0E00               	movlw	0
  6315  002F3A  0100               	movlb	0	; () banked
  6316  002F3C  6FEB               	movwf	_activeState& (0+255),b
  6317                           
  6318                           ; BSR set to: 0
  6319                           ;MOTEapp.c: 268: moteState = MOTE_JOINING;
  6320  002F3E  0E02               	movlw	2
  6321  002F40  D03B               	goto	L2
  6322  002F42                     l14777:
  6323                           
  6324                           ; BSR set to: 0
  6325                           ;MOTEapp.c: 271: if ( moteJoiningProcess(readMessage, gotoNextState, s2Button) )
  6326  002F42  C1F4  F076         	movff	moteHandler@gotoNextState,moteJoiningProcess@changeStates
  6327  002F46  C1F5  F077         	movff	moteHandler@s2Button,moteJoiningProcess@selectButton
  6328  002F4A  0101               	movlb	1	; () banked
  6329  002F4C  51F7               	movf	moteHandler@readMessage& (0+255),w,b
  6330  002F4E  ECF7  F009         	call	_moteJoiningProcess
  6331  002F52  0900               	iorlw	0
  6332  002F54  B4D8               	btfsc	status,2,c
  6333  002F56  D04C               	goto	l14797
  6334                           
  6335                           ;MOTEapp.c: 272: {
  6336                           ;MOTEapp.c: 273: oled_clear();
  6337  002F58  ECA5  F038         	call	_oled_clear	;wreg free
  6338                           
  6339                           ;MOTEapp.c: 274: oled_putString("Mobile Mote -App",0,0);
  6340  002F5C  0EFE               	movlw	low STR_27
  6341  002F5E  0100               	movlb	0	; () banked
  6342  002F60  6F71               	movwf	oled_putString@string& (0+255),b
  6343  002F62  0E7B               	movlw	high STR_27
  6344  002F64  0100               	movlb	0	; () banked
  6345  002F66  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6346  002F68  0E00               	movlw	0
  6347  002F6A  0100               	movlb	0	; () banked
  6348  002F6C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6349  002F6E  0E00               	movlw	0
  6350  002F70  0100               	movlb	0	; () banked
  6351  002F72  6F74               	movwf	oled_putString@start_page& (0+255),b
  6352  002F74  EC89  F030         	call	_oled_putString	;wreg free
  6353                           
  6354                           ;MOTEapp.c: 275: oled_putString("Navigate  Select", 0,2);
  6355  002F78  0E0F               	movlw	low STR_28
  6356  002F7A  0100               	movlb	0	; () banked
  6357  002F7C  6F71               	movwf	oled_putString@string& (0+255),b
  6358  002F7E  0E7C               	movlw	high STR_28
  6359  002F80  0100               	movlb	0	; () banked
  6360  002F82  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6361  002F84  0E00               	movlw	0
  6362  002F86  0100               	movlb	0	; () banked
  6363  002F88  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6364  002F8A  0E02               	movlw	2
  6365  002F8C  0100               	movlb	0	; () banked
  6366  002F8E  6F74               	movwf	oled_putString@start_page& (0+255),b
  6367  002F90  EC89  F030         	call	_oled_putString	;wreg free
  6368                           
  6369                           ;MOTEapp.c: 276: oled_putString(" (S2)      (S3) ", 0,3);
  6370  002F94  0E32               	movlw	low STR_29
  6371  002F96  0100               	movlb	0	; () banked
  6372  002F98  6F71               	movwf	oled_putString@string& (0+255),b
  6373  002F9A  0E7B               	movlw	high STR_29
  6374  002F9C  0100               	movlb	0	; () banked
  6375  002F9E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6376  002FA0  0E00               	movlw	0
  6377  002FA2  0100               	movlb	0	; () banked
  6378  002FA4  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6379  002FA6  0E03               	movlw	3
  6380  002FA8  0100               	movlb	0	; () banked
  6381  002FAA  6F74               	movwf	oled_putString@start_page& (0+255),b
  6382  002FAC  EC89  F030         	call	_oled_putString	;wreg free
  6383                           
  6384                           ;MOTEapp.c: 277: runningState = runningEnter;
  6385  002FB0  0E00               	movlw	0
  6386  002FB2  0100               	movlb	0	; () banked
  6387  002FB4  6FE9               	movwf	_runningState& (0+255),b
  6388                           
  6389                           ; BSR set to: 0
  6390                           ;MOTEapp.c: 278: moteState = MOTE_RUNNING;
  6391  002FB6  0E03               	movlw	3
  6392  002FB8                     L2:
  6393  002FB8  0100               	movlb	0	; () banked
  6394  002FBA  6FFE               	movwf	_moteState& (0+255),b
  6395                           
  6396                           ; BSR set to: 0
  6397                           ;MOTEapp.c: 279: }
  6398                           ;MOTEapp.c: 280: break;
  6399  002FBC  D019               	goto	l14797
  6400  002FBE                     l14791:
  6401                           
  6402                           ; BSR set to: 0
  6403                           ;MOTEapp.c: 282: moteRunningProcess(gotoNextState, s2Button, readMessage, gotoSleep);
  6404  002FBE  C1F5  F0AC         	movff	moteHandler@s2Button,moteRunningProcess@selectButton
  6405  002FC2  C1F7  F0AD         	movff	moteHandler@readMessage,moteRunningProcess@messageReady
  6406  002FC6  C1F3  F0AE         	movff	moteHandler@gotoSleep,moteRunningProcess@sleepEvent
  6407  002FCA  0101               	movlb	1	; () banked
  6408  002FCC  51F4               	movf	moteHandler@gotoNextState& (0+255),w,b
  6409  002FCE  EC95  F000         	call	_moteRunningProcess
  6410                           
  6411                           ;MOTEapp.c: 287: }
  6412                           
  6413                           ;MOTEapp.c: 286: break;
  6414                           
  6415                           ;MOTEapp.c: 284: case MOTE_SWAP:
  6416                           
  6417                           ;MOTEapp.c: 283: break;
  6418  002FD2  D00E               	goto	l14797
  6419  002FD4                     l14795:
  6420  002FD4  0100               	movlb	0	; () banked
  6421  002FD6  51FE               	movf	_moteState& (0+255),w,b
  6422                           
  6423                           ; Switch size 1, requested type "space"
  6424                           ; Number of cases is 4, Range of values is 1 to 4
  6425                           ; switch strategies available:
  6426                           ; Name         Instructions Cycles
  6427                           ; simple_byte           13     7 (average)
  6428                           ;	Chosen strategy is simple_byte
  6429  002FD8  0A01               	xorlw	1	; case 1
  6430  002FDA  B4D8               	btfsc	status,2,c
  6431  002FDC  D781               	goto	l14765
  6432  002FDE  0A03               	xorlw	3	; case 2
  6433  002FE0  B4D8               	btfsc	status,2,c
  6434  002FE2  D7AF               	goto	l14777
  6435  002FE4  0A01               	xorlw	1	; case 3
  6436  002FE6  B4D8               	btfsc	status,2,c
  6437  002FE8  D7EA               	goto	l14791
  6438  002FEA  0A07               	xorlw	7	; case 4
  6439  002FEC  A4D8               	btfss	status,2,c
  6440  002FEE  D776               	goto	l376
  6441  002FF0                     l14797:
  6442                           
  6443                           ;MOTEapp.c: 288: return moteState;
  6444  002FF0  0100               	movlb	0	; () banked
  6445  002FF2  51FE               	movf	_moteState& (0+255),w,b
  6446  002FF4  0012               	return	
  6447                           
  6448                           ; BSR set to: 0
  6449                           
  6450                           ; BSR set to: 0
  6451  002FF6  0012               	return		;funcret
  6452  002FF8                     __end_of_moteHandler:
  6453                           	opt stack 0
  6454                           tblptru	equ	0xFF8
  6455                           tblptrh	equ	0xFF7
  6456                           tblptrl	equ	0xFF6
  6457                           tablat	equ	0xFF5
  6458                           intcon	equ	0xFF2
  6459                           postinc0	equ	0xFEE
  6460                           wreg	equ	0xFE8
  6461                           postdec1	equ	0xFE5
  6462                           fsr1l	equ	0xFE1
  6463                           status	equ	0xFD8
  6464                           
  6465 ;; *************** function _moteRunningProcess *****************
  6466 ;; Defined at:
  6467 ;;		line 487 in file "../Includes/Board/MOTEapp.c"
  6468 ;; Parameters:    Size  Location     Type
  6469 ;;  changeStates    1    wreg     unsigned char 
  6470 ;;  selectButton    1   76[BANK0 ] unsigned char 
  6471 ;;  messageReady    1   77[BANK0 ] unsigned char 
  6472 ;;  sleepEvent      1   78[BANK0 ] unsigned char 
  6473 ;; Auto vars:     Size  Location     Type
  6474 ;;  changeStates    1   85[BANK0 ] unsigned char 
  6475 ;;  counter         1   83[BANK0 ] unsigned char 
  6476 ;;  bufferReadPo    1   84[BANK0 ] unsigned char 
  6477 ;;  sizeOfUpdate    1   82[BANK0 ] unsigned char 
  6478 ;;  sizeOfUpdate    1   81[BANK0 ] unsigned char 
  6479 ;;  readByte        1   80[BANK0 ] unsigned char 
  6480 ;; Return value:  Size  Location     Type
  6481 ;;                  1    wreg      enum E6078
  6482 ;; Registers used:
  6483 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6484 ;; Tracked objects:
  6485 ;;		On entry : 0/0
  6486 ;;		On exit  : 0/0
  6487 ;;		Unchanged: 0/0
  6488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6489 ;;      Params:         0       3       0       0       0       0       0       0       0
  6490 ;;      Locals:         0       6       0       0       0       0       0       0       0
  6491 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6492 ;;      Totals:         0      10       0       0       0       0       0       0       0
  6493 ;;Total ram usage:       10 bytes
  6494 ;; Hardware stack levels used:    1
  6495 ;; Hardware stack levels required when called:   18
  6496 ;; This function calls:
  6497 ;;		_ADC_TempConversion
  6498 ;;		_MOTEapp_SetDataRateSetting
  6499 ;;		_TMR2_ReadTimer
  6500 ;;		_moteApp_GoToSleep
  6501 ;;		_moteApp_add8bToDataBuffer
  6502 ;;		_moteApp_addToDataBuffer
  6503 ;;		_moteApp_clearBuffers
  6504 ;;		_moteApp_convertSensorValue
  6505 ;;		_moteApp_delayms
  6506 ;;		_moteApp_getLightString
  6507 ;;		_moteApp_getLightValue
  6508 ;;		_moteApp_getTempValue
  6509 ;;		_moteApp_lightStringSize
  6510 ;;		_moteApp_setSensorsInput
  6511 ;;		_oled_clear
  6512 ;;		_oled_putString
  6513 ;;		_oled_putUint8
  6514 ;;		_oled_putint8
  6515 ;;		_sendDataCommand
  6516 ;;		_strcmp
  6517 ;;		_strncmp
  6518 ;; This function is called by:
  6519 ;;		_moteHandler
  6520 ;; This function uses a non-reentrant model
  6521 ;;
  6522                           
  6523                           	psect	text10
  6524  00012A                     __ptext10:
  6525                           	opt stack 0
  6526  00012A                     _moteRunningProcess:
  6527                           	opt stack 11
  6528                           
  6529                           ; BSR set to: 0
  6530                           ;incstack = 0
  6531                           ;moteRunningProcess@changeStates stored from wreg
  6532  00012A  0100               	movlb	0	; () banked
  6533  00012C  6FB5               	movwf	moteRunningProcess@changeStates& (0+255),b
  6534                           
  6535                           ;MOTEapp.c: 489: uint8_t readByte = 0;
  6536  00012E  0E00               	movlw	0
  6537  000130  0100               	movlb	0	; () banked
  6538  000132  6FB0               	movwf	moteRunningProcess@readByte& (0+255),b
  6539                           
  6540                           ; BSR set to: 0
  6541                           ;MOTEapp.c: 491: if ((sleepEvent) && (periodicState))
  6542  000134  0100               	movlb	0	; () banked
  6543  000136  51AE               	movf	moteRunningProcess@sleepEvent& (0+255),w,b
  6544  000138  0100               	movlb	0	; () banked
  6545  00013A  B4D8               	btfsc	status,2,c
  6546  00013C  EFC7  F009         	goto	l14413
  6547                           
  6548                           ; BSR set to: 0
  6549  000140  0100               	movlb	0	; () banked
  6550  000142  51F9               	movf	_periodicState& (0+255),w,b
  6551  000144  B4D8               	btfsc	status,2,c
  6552  000146  EFC7  F009         	goto	l14413
  6553                           
  6554                           ; BSR set to: 0
  6555                           ;MOTEapp.c: 492: {
  6556                           ;MOTEapp.c: 493: if (sleepTicker >= periodicTimerValue)
  6557  00014A  0100               	movlb	0	; () banked
  6558  00014C  51FC               	movf	_periodicTimerValue& (0+255),w,b
  6559  00014E  0100               	movlb	0	; () banked
  6560  000150  5DE3               	subwf	_sleepTicker& (0+255),w,b
  6561  000152  A0D8               	btfss	status,0,c
  6562  000154  D0E5               	goto	l13945
  6563                           
  6564                           ; BSR set to: 0
  6565                           ;MOTEapp.c: 494: {
  6566                           ;MOTEapp.c: 496: moteApp_clearBuffers();
  6567  000156  EC75  F025         	call	_moteApp_clearBuffers	;wreg free
  6568                           
  6569                           ;MOTEapp.c: 499: light = 0;
  6570  00015A  0E00               	movlw	0
  6571  00015C  0101               	movlb	1	; () banked
  6572  00015E  6F59               	movwf	(_light+1)& (0+255),b
  6573  000160  0E00               	movlw	0
  6574  000162  6F58               	movwf	_light& (0+255),b
  6575                           
  6576                           ; BSR set to: 1
  6577                           ;MOTEapp.c: 500: temperature = 0;
  6578  000164  0E00               	movlw	0
  6579  000166  0100               	movlb	0	; () banked
  6580  000168  6FC8               	movwf	(_temperature+1)& (0+255),b
  6581  00016A  0E00               	movlw	0
  6582  00016C  6FC7               	movwf	_temperature& (0+255),b
  6583                           
  6584                           ; BSR set to: 0
  6585                           ;MOTEapp.c: 501: __nop();
  6586  00016E  F000               	nop	
  6587                           
  6588                           ;MOTEapp.c: 503: moteApp_setSensorsInput();
  6589  000170  EC5C  F02E         	call	_moteApp_setSensorsInput	;wreg free
  6590                           
  6591                           ;MOTEapp.c: 504: uint8_t sizeOfUpdate = 0;
  6592  000174  0E00               	movlw	0
  6593  000176  0100               	movlb	0	; () banked
  6594  000178  6FB1               	movwf	moteRunningProcess@sizeOfUpdate& (0+255),b
  6595                           
  6596                           ; BSR set to: 0
  6597                           ;MOTEapp.c: 505: light = moteApp_convertSensorValue(moteApp_getLightValue());
  6598  00017A  EC30  F033         	call	_moteApp_getLightValue	;wreg free
  6599  00017E  C06D  F071         	movff	?_moteApp_getLightValue,moteApp_convertSensorValue@string
  6600  000182  C06E  F072         	movff	?_moteApp_getLightValue+1,moteApp_convertSensorValue@string+1
  6601  000186  EC42  F02C         	call	_moteApp_convertSensorValue	;wreg free
  6602  00018A  C071  F158         	movff	?_moteApp_convertSensorValue,_light
  6603  00018E  C072  F159         	movff	?_moteApp_convertSensorValue+1,_light+1
  6604                           
  6605                           ;MOTEapp.c: 506: oled_putString(moteApp_getLightString(), 6, 1);
  6606  000192  EC33  F039         	call	_moteApp_getLightString	;wreg free
  6607  000196  C060  F071         	movff	?_moteApp_getLightString,oled_putString@string
  6608  00019A  C061  F072         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  6609  00019E  0E06               	movlw	6
  6610  0001A0  0100               	movlb	0	; () banked
  6611  0001A2  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6612  0001A4  0E01               	movlw	1
  6613  0001A6  0100               	movlb	0	; () banked
  6614  0001A8  6F74               	movwf	oled_putString@start_page& (0+255),b
  6615  0001AA  EC89  F030         	call	_oled_putString	;wreg free
  6616                           
  6617                           ;MOTEapp.c: 507: sizeOfUpdate = moteApp_addToDataBuffer(moteApp_getLightString(), 4);
  6618  0001AE  EC33  F039         	call	_moteApp_getLightString	;wreg free
  6619  0001B2  C060  F071         	movff	?_moteApp_getLightString,moteApp_addToDataBuffer@string
  6620  0001B6  C061  F072         	movff	?_moteApp_getLightString+1,moteApp_addToDataBuffer@string+1
  6621  0001BA  0E04               	movlw	4
  6622  0001BC  0100               	movlb	0	; () banked
  6623  0001BE  6F73               	movwf	moteApp_addToDataBuffer@bufferLocation& (0+255),b
  6624  0001C0  EC53  F031         	call	_moteApp_addToDataBuffer	;wreg free
  6625  0001C4  0100               	movlb	0	; () banked
  6626  0001C6  6FB1               	movwf	moteRunningProcess@sizeOfUpdate& (0+255),b
  6627                           
  6628                           ; BSR set to: 0
  6629                           ;MOTEapp.c: 509: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  6630  0001C8  EC98  F034         	call	_moteApp_getTempValue	;wreg free
  6631  0001CC  C063  F071         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  6632  0001D0  C064  F072         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  6633  0001D4  EC42  F02C         	call	_moteApp_convertSensorValue	;wreg free
  6634  0001D8  C071  F0C7         	movff	?_moteApp_convertSensorValue,_temperature
  6635  0001DC  C072  F0C8         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  6636                           
  6637                           ;MOTEapp.c: 510: temperature = ADC_TempConversion(temperature);
  6638  0001E0  0100               	movlb	0	; () banked
  6639  0001E2  51C7               	movf	_temperature& (0+255),w,b
  6640  0001E4  ECE8  F026         	call	_ADC_TempConversion
  6641  0001E8  0100               	movlb	0	; () banked
  6642  0001EA  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  6643  0001EC  0100               	movlb	0	; () banked
  6644  0001EE  51AF               	movf	??_moteRunningProcess& (0+255),w,b
  6645  0001F0  0100               	movlb	0	; () banked
  6646  0001F2  6FC7               	movwf	_temperature& (0+255),b
  6647  0001F4  6BC8               	clrf	(_temperature+1)& (0+255),b
  6648                           
  6649                           ; BSR set to: 0
  6650                           ;MOTEapp.c: 511: moteApp_add8bToDataBuffer(temperature, 4 + moteApp_lightStringSize() + 
      +                          1);
  6651  0001F6  EC62  F039         	call	_moteApp_lightStringSize	;wreg free
  6652  0001FA  0F05               	addlw	5
  6653  0001FC  0100               	movlb	0	; () banked
  6654  0001FE  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6655  000200  0100               	movlb	0	; () banked
  6656  000202  51C7               	movf	_temperature& (0+255),w,b
  6657  000204  EC05  F02B         	call	_moteApp_add8bToDataBuffer
  6658                           
  6659                           ;MOTEapp.c: 514: sleepTicker = 0;
  6660  000208  0E00               	movlw	0
  6661  00020A  0100               	movlb	0	; () banked
  6662  00020C  6FE3               	movwf	_sleepTicker& (0+255),b
  6663                           
  6664                           ; BSR set to: 0
  6665                           ;MOTEapp.c: 515: oled_clear();
  6666  00020E  ECA5  F038         	call	_oled_clear	;wreg free
  6667                           
  6668                           ;MOTEapp.c: 516: oled_putString("Send Periodic Tx",0,0);
  6669  000212  0E31               	movlw	low STR_71
  6670  000214  0100               	movlb	0	; () banked
  6671  000216  6F71               	movwf	oled_putString@string& (0+255),b
  6672  000218  0E7C               	movlw	high STR_71
  6673  00021A  0100               	movlb	0	; () banked
  6674  00021C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6675  00021E  0E00               	movlw	0
  6676  000220  0100               	movlb	0	; () banked
  6677  000222  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6678  000224  0E00               	movlw	0
  6679  000226  0100               	movlb	0	; () banked
  6680  000228  6F74               	movwf	oled_putString@start_page& (0+255),b
  6681  00022A  EC89  F030         	call	_oled_putString	;wreg free
  6682                           
  6683                           ;MOTEapp.c: 517: oled_putString("On Port #: ",0,1);
  6684  00022E  0E34               	movlw	low STR_72
  6685  000230  0100               	movlb	0	; () banked
  6686  000232  6F71               	movwf	oled_putString@string& (0+255),b
  6687  000234  0E7E               	movlw	high STR_72
  6688  000236  0100               	movlb	0	; () banked
  6689  000238  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6690  00023A  0E00               	movlw	0
  6691  00023C  0100               	movlb	0	; () banked
  6692  00023E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6693  000240  0E01               	movlw	1
  6694  000242  0100               	movlb	0	; () banked
  6695  000244  6F74               	movwf	oled_putString@start_page& (0+255),b
  6696  000246  EC89  F030         	call	_oled_putString	;wreg free
  6697                           
  6698                           ;MOTEapp.c: 518: oled_putString("L:       T: ",0,2);
  6699  00024A  0E72               	movlw	low STR_73
  6700  00024C  0100               	movlb	0	; () banked
  6701  00024E  6F71               	movwf	oled_putString@string& (0+255),b
  6702  000250  0E7D               	movlw	high STR_73
  6703  000252  0100               	movlb	0	; () banked
  6704  000254  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6705  000256  0E00               	movlw	0
  6706  000258  0100               	movlb	0	; () banked
  6707  00025A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6708  00025C  0E02               	movlw	2
  6709  00025E  0100               	movlb	0	; () banked
  6710  000260  6F74               	movwf	oled_putString@start_page& (0+255),b
  6711  000262  EC89  F030         	call	_oled_putString	;wreg free
  6712                           
  6713                           ;MOTEapp.c: 519: oled_putString(moteApp_getLightString(), 3, 2);
  6714  000266  EC33  F039         	call	_moteApp_getLightString	;wreg free
  6715  00026A  C060  F071         	movff	?_moteApp_getLightString,oled_putString@string
  6716  00026E  C061  F072         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  6717  000272  0E03               	movlw	3
  6718  000274  0100               	movlb	0	; () banked
  6719  000276  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6720  000278  0E02               	movlw	2
  6721  00027A  0100               	movlb	0	; () banked
  6722  00027C  6F74               	movwf	oled_putString@start_page& (0+255),b
  6723  00027E  EC89  F030         	call	_oled_putString	;wreg free
  6724                           
  6725                           ;MOTEapp.c: 520: oled_putint8(temperature,11,2);
  6726  000282  0E0B               	movlw	11
  6727  000284  0100               	movlb	0	; () banked
  6728  000286  6F76               	movwf	oled_putint8@station_dot& (0+255),b
  6729  000288  0E02               	movlw	2
  6730  00028A  0100               	movlb	0	; () banked
  6731  00028C  6F77               	movwf	oled_putint8@start_page& (0+255),b
  6732  00028E  0100               	movlb	0	; () banked
  6733  000290  51C7               	movf	_temperature& (0+255),w,b
  6734  000292  EC96  F02A         	call	_oled_putint8
  6735                           
  6736                           ;MOTEapp.c: 522: randomPortNum = TMR2_ReadTimer();
  6737  000296  EC42  F039         	call	_TMR2_ReadTimer	;wreg free
  6738  00029A  0100               	movlb	0	; () banked
  6739  00029C  6FE7               	movwf	_randomPortNum& (0+255),b
  6740                           
  6741                           ; BSR set to: 0
  6742                           ;MOTEapp.c: 524: if (!randomPortNum)
  6743  00029E  0100               	movlb	0	; () banked
  6744  0002A0  51E7               	movf	_randomPortNum& (0+255),w,b
  6745  0002A2  0100               	movlb	0	; () banked
  6746  0002A4  A4D8               	btfss	status,2,c
  6747  0002A6  D002               	goto	l13927
  6748                           
  6749                           ; BSR set to: 0
  6750                           ;MOTEapp.c: 525: randomPortNum = 5;
  6751  0002A8  0E05               	movlw	5
  6752  0002AA  D009               	goto	L3
  6753  0002AC                     l13927:
  6754                           
  6755                           ; BSR set to: 0
  6756                           ;MOTEapp.c: 526: else if (randomPortNum > 223)
  6757  0002AC  0EDF               	movlw	223
  6758  0002AE  0100               	movlb	0	; () banked
  6759  0002B0  65E7               	cpfsgt	_randomPortNum& (0+255),b
  6760  0002B2  D008               	goto	l13931
  6761  0002B4  D001               	goto	l13929
  6762  0002B6  D006               	goto	l13931
  6763  0002B8                     l13929:
  6764                           
  6765                           ; BSR set to: 0
  6766                           ;MOTEapp.c: 527: randomPortNum = randomPortNum - 50;
  6767  0002B8  0100               	movlb	0	; () banked
  6768  0002BA  51E7               	movf	_randomPortNum& (0+255),w,b
  6769  0002BC  0FCE               	addlw	206
  6770  0002BE                     L3:
  6771  0002BE  0100               	movlb	0	; () banked
  6772  0002C0  6FE7               	movwf	_randomPortNum& (0+255),b
  6773                           
  6774                           ; BSR set to: 0
  6775  0002C2  D000               	goto	l13931
  6776  0002C4                     l13931:
  6777                           
  6778                           ; BSR set to: 0
  6779                           ;MOTEapp.c: 529: oled_putUint8(randomPortNum,10,1);
  6780  0002C4  0E0A               	movlw	10
  6781  0002C6  0100               	movlb	0	; () banked
  6782  0002C8  6F76               	movwf	oled_putUint8@station_dot& (0+255),b
  6783  0002CA  0E01               	movlw	1
  6784  0002CC  0100               	movlb	0	; () banked
  6785  0002CE  6F77               	movwf	oled_putUint8@start_page& (0+255),b
  6786  0002D0  0100               	movlb	0	; () banked
  6787  0002D2  51E7               	movf	_randomPortNum& (0+255),w,b
  6788  0002D4  EC08  F02E         	call	_oled_putUint8
  6789                           
  6790                           ;MOTEapp.c: 531: moteApp_add8bToDataBuffer(randomPortNum, 0);
  6791  0002D8  0E00               	movlw	0
  6792  0002DA  0100               	movlb	0	; () banked
  6793  0002DC  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6794  0002DE  0100               	movlb	0	; () banked
  6795  0002E0  51E7               	movf	_randomPortNum& (0+255),w,b
  6796  0002E2  EC05  F02B         	call	_moteApp_add8bToDataBuffer
  6797                           
  6798                           ;MOTEapp.c: 532: dataBuffer[3] = 0x20;
  6799  0002E6  0E20               	movlw	32
  6800  0002E8  0101               	movlb	1	; () banked
  6801  0002EA  6FC0               	movwf	(_dataBuffer+3)& (0+255),b
  6802                           
  6803                           ; BSR set to: 1
  6804                           ;MOTEapp.c: 533: __nop();
  6805  0002EC  F000               	nop	
  6806                           
  6807                           ;MOTEapp.c: 534: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  6808  0002EE  0E2D               	movlw	low STR_74
  6809  0002F0  0100               	movlb	0	; () banked
  6810  0002F2  6F61               	movwf	sendDataCommand@string& (0+255),b
  6811  0002F4  0E7D               	movlw	high STR_74
  6812  0002F6  0100               	movlb	0	; () banked
  6813  0002F8  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  6814  0002FA  0EBD               	movlw	low _dataBuffer
  6815  0002FC  0100               	movlb	0	; () banked
  6816  0002FE  6F63               	movwf	sendDataCommand@appData& (0+255),b
  6817  000300  0E01               	movlw	high _dataBuffer
  6818  000302  0100               	movlb	0	; () banked
  6819  000304  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  6820  000306  0E0C               	movlw	12
  6821  000308  0100               	movlb	0	; () banked
  6822  00030A  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  6823  00030C  ECFB  F023         	call	_sendDataCommand	;wreg free
  6824                           
  6825                           ;MOTEapp.c: 535: secTicker = 10 - (10 / 3);
  6826  000310  0E07               	movlw	7
  6827  000312  0100               	movlb	0	; () banked
  6828  000314  6FE5               	movwf	_secTicker& (0+255),b
  6829                           
  6830                           ; BSR set to: 0
  6831                           ;MOTEapp.c: 536: runningState = runningUplinkTransmit;
  6832  000316  0E08               	movlw	8
  6833  000318  0100               	movlb	0	; () banked
  6834  00031A  6FE9               	movwf	_runningState& (0+255),b
  6835                           
  6836                           ;MOTEapp.c: 537: }
  6837  00031C  EFC7  F009         	goto	l14413
  6838  000320                     l13945:
  6839                           
  6840                           ; BSR set to: 0
  6841                           ;MOTEapp.c: 538: else
  6842                           ;MOTEapp.c: 539: {
  6843                           ;MOTEapp.c: 540: if (menuTimeout)
  6844  000320  0100               	movlb	0	; () banked
  6845  000322  51FA               	movf	_menuTimeout& (0+255),w,b
  6846  000324  B4D8               	btfsc	status,2,c
  6847  000326  D00A               	goto	l13953
  6848                           
  6849                           ; BSR set to: 0
  6850                           ;MOTEapp.c: 541: {
  6851                           ;MOTEapp.c: 542: sleepTicker++;
  6852  000328  0100               	movlb	0	; () banked
  6853  00032A  2BE3               	incf	_sleepTicker& (0+255),f,b
  6854                           
  6855                           ; BSR set to: 0
  6856                           ;MOTEapp.c: 543: runningState = runningSleep;
  6857  00032C  0E0F               	movlw	15
  6858  00032E  0100               	movlb	0	; () banked
  6859  000330  6FE9               	movwf	_runningState& (0+255),b
  6860                           
  6861                           ; BSR set to: 0
  6862                           ;MOTEapp.c: 544: selectButton = 1;
  6863  000332  0E01               	movlw	1
  6864  000334  0100               	movlb	0	; () banked
  6865  000336  6FAC               	movwf	moteRunningProcess@selectButton& (0+255),b
  6866                           
  6867                           ;MOTEapp.c: 545: } else {
  6868  000338  EFC7  F009         	goto	l14413
  6869  00033C                     l13953:
  6870                           
  6871                           ; BSR set to: 0
  6872                           ;MOTEapp.c: 546: sleepTicker = 0;
  6873  00033C  0E00               	movlw	0
  6874  00033E  0100               	movlb	0	; () banked
  6875  000340  6FE3               	movwf	_sleepTicker& (0+255),b
  6876                           
  6877                           ; BSR set to: 0
  6878                           ;MOTEapp.c: 547: }
  6879                           ;MOTEapp.c: 548: }
  6880                           ;MOTEapp.c: 549: }
  6881                           ;MOTEapp.c: 552: switch(runningState)
  6882                           
  6883                           ; BSR set to: 0
  6884                           
  6885                           ; BSR set to: 0
  6886  000342  EFC7  F009         	goto	l14413
  6887  000346                     l466:
  6888  000346  D7FF               	goto	l466
  6889                           
  6890                           ;MOTEapp.c: 556: break;
  6891  000348  0012               	return	
  6892  00034A                     l13955:
  6893                           
  6894                           ;MOTEapp.c: 558: if ( (changeStates) || (selectButton) )
  6895  00034A  0100               	movlb	0	; () banked
  6896  00034C  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6897  00034E  0100               	movlb	0	; () banked
  6898  000350  A4D8               	btfss	status,2,c
  6899  000352  D007               	goto	l13959
  6900                           
  6901                           ; BSR set to: 0
  6902  000354  0100               	movlb	0	; () banked
  6903  000356  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6904  000358  0100               	movlb	0	; () banked
  6905  00035A  A4D8               	btfss	status,2,c
  6906  00035C  D002               	goto	l13959
  6907  00035E  0012               	return	
  6908  000360  D000               	goto	l13959
  6909  000362                     l13959:
  6910                           
  6911                           ; BSR set to: 0
  6912                           ;MOTEapp.c: 559: {
  6913                           ;MOTEapp.c: 560: oled_clear();
  6914  000362  ECA5  F038         	call	_oled_clear	;wreg free
  6915                           
  6916                           ;MOTEapp.c: 561: oled_putString("  Issue Uplink  ",0,0);
  6917  000366  0E21               	movlw	low STR_75
  6918  000368  0100               	movlb	0	; () banked
  6919  00036A  6F71               	movwf	oled_putString@string& (0+255),b
  6920  00036C  0E7B               	movlw	high STR_75
  6921  00036E  0100               	movlb	0	; () banked
  6922  000370  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6923  000372  0E00               	movlw	0
  6924  000374  0100               	movlb	0	; () banked
  6925  000376  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6926  000378  0E00               	movlw	0
  6927  00037A  0100               	movlb	0	; () banked
  6928  00037C  6F74               	movwf	oled_putString@start_page& (0+255),b
  6929  00037E  EC89  F030         	call	_oled_putString	;wreg free
  6930                           
  6931                           ;MOTEapp.c: 562: oled_putString(" LoRaWAN Packet ",0,1);
  6932  000382  0E87               	movlw	low STR_76
  6933  000384  0100               	movlb	0	; () banked
  6934  000386  6F71               	movwf	oled_putString@string& (0+255),b
  6935  000388  0E7B               	movlw	high STR_76
  6936  00038A  0100               	movlb	0	; () banked
  6937  00038C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6938  00038E  0E00               	movlw	0
  6939  000390  0100               	movlb	0	; () banked
  6940  000392  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6941  000394  0E01               	movlw	1
  6942  000396  0100               	movlb	0	; () banked
  6943  000398  6F74               	movwf	oled_putString@start_page& (0+255),b
  6944  00039A  EC89  F030         	call	_oled_putString	;wreg free
  6945                           
  6946                           ;MOTEapp.c: 563: oled_putString("(NAV)    (SEL) ",0,3);
  6947  00039E  0E83               	movlw	low STR_77
  6948  0003A0  0100               	movlb	0	; () banked
  6949  0003A2  6F71               	movwf	oled_putString@string& (0+255),b
  6950  0003A4  0E7C               	movlw	high STR_77
  6951  0003A6  0100               	movlb	0	; () banked
  6952  0003A8  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6953  0003AA  0E00               	movlw	0
  6954  0003AC  0100               	movlb	0	; () banked
  6955  0003AE  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6956  0003B0  0E03               	movlw	3
  6957  0003B2  0100               	movlb	0	; () banked
  6958  0003B4  6F74               	movwf	oled_putString@start_page& (0+255),b
  6959  0003B6  EC89  F030         	call	_oled_putString	;wreg free
  6960                           
  6961                           ;MOTEapp.c: 564: runningState = runningUplink;
  6962  0003BA  0E06               	movlw	6
  6963  0003BC  0100               	movlb	0	; () banked
  6964  0003BE  6FE9               	movwf	_runningState& (0+255),b
  6965                           
  6966                           ; BSR set to: 0
  6967                           ;MOTEapp.c: 565: }
  6968                           ;MOTEapp.c: 566: break;
  6969  0003C0  0012               	return	
  6970  0003C2                     l13969:
  6971                           
  6972                           ; BSR set to: 0
  6973                           ;MOTEapp.c: 568: if (changeStates)
  6974  0003C2  0100               	movlb	0	; () banked
  6975  0003C4  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6976  0003C6  0100               	movlb	0	; () banked
  6977  0003C8  B4D8               	btfsc	status,2,c
  6978  0003CA  D030               	goto	l13981
  6979                           
  6980                           ; BSR set to: 0
  6981                           ;MOTEapp.c: 569: {
  6982                           ;MOTEapp.c: 570: oled_clear();
  6983  0003CC  ECA5  F038         	call	_oled_clear	;wreg free
  6984                           
  6985                           ;MOTEapp.c: 571: oled_putString(" View Downlink  ",0,0);
  6986  0003D0  0E10               	movlw	low STR_78
  6987  0003D2  0100               	movlb	0	; () banked
  6988  0003D4  6F71               	movwf	oled_putString@string& (0+255),b
  6989  0003D6  0E7B               	movlw	high STR_78
  6990  0003D8  0100               	movlb	0	; () banked
  6991  0003DA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6992  0003DC  0E00               	movlw	0
  6993  0003DE  0100               	movlb	0	; () banked
  6994  0003E0  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6995  0003E2  0E00               	movlw	0
  6996  0003E4  0100               	movlb	0	; () banked
  6997  0003E6  6F74               	movwf	oled_putString@start_page& (0+255),b
  6998  0003E8  EC89  F030         	call	_oled_putString	;wreg free
  6999                           
  7000                           ;MOTEapp.c: 572: oled_putString("  Last Message  ",0,1);
  7001  0003EC  0EFF               	movlw	low STR_79
  7002  0003EE  0100               	movlb	0	; () banked
  7003  0003F0  6F71               	movwf	oled_putString@string& (0+255),b
  7004  0003F2  0E7A               	movlw	high STR_79
  7005  0003F4  0100               	movlb	0	; () banked
  7006  0003F6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7007  0003F8  0E00               	movlw	0
  7008  0003FA  0100               	movlb	0	; () banked
  7009  0003FC  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7010  0003FE  0E01               	movlw	1
  7011  000400  0100               	movlb	0	; () banked
  7012  000402  6F74               	movwf	oled_putString@start_page& (0+255),b
  7013  000404  EC89  F030         	call	_oled_putString	;wreg free
  7014                           
  7015                           ;MOTEapp.c: 573: oled_putString("(NAV)    (SEL) ",0,3);
  7016  000408  0E83               	movlw	low STR_77
  7017  00040A  0100               	movlb	0	; () banked
  7018  00040C  6F71               	movwf	oled_putString@string& (0+255),b
  7019  00040E  0E7C               	movlw	high STR_77
  7020  000410  0100               	movlb	0	; () banked
  7021  000412  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7022  000414  0E00               	movlw	0
  7023  000416  0100               	movlb	0	; () banked
  7024  000418  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7025  00041A  0E03               	movlw	3
  7026  00041C  0100               	movlb	0	; () banked
  7027  00041E  6F74               	movwf	oled_putString@start_page& (0+255),b
  7028  000420  EC89  F030         	call	_oled_putString	;wreg free
  7029                           
  7030                           ;MOTEapp.c: 574: runningState = runningDownlink;
  7031  000424  0E0A               	movlw	10
  7032  000426  0100               	movlb	0	; () banked
  7033  000428  6FE9               	movwf	_runningState& (0+255),b
  7034                           
  7035                           ;MOTEapp.c: 575: }
  7036  00042A  0012               	return	
  7037  00042C                     l13981:
  7038                           
  7039                           ; BSR set to: 0
  7040                           ;MOTEapp.c: 576: else if (selectButton)
  7041  00042C  0100               	movlb	0	; () banked
  7042  00042E  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7043  000430  0100               	movlb	0	; () banked
  7044  000432  B4D8               	btfsc	status,2,c
  7045  000434  0012               	return	
  7046                           
  7047                           ; BSR set to: 0
  7048                           ;MOTEapp.c: 577: {
  7049                           ;MOTEapp.c: 578: sleepTicker = 0;
  7050  000436  0E00               	movlw	0
  7051  000438  0100               	movlb	0	; () banked
  7052  00043A  6FE3               	movwf	_sleepTicker& (0+255),b
  7053                           
  7054                           ; BSR set to: 0
  7055                           ;MOTEapp.c: 580: oled_clear();
  7056  00043C  ECA5  F038         	call	_oled_clear	;wreg free
  7057                           
  7058                           ;MOTEapp.c: 581: oled_putString("Uplink Pckt Type",0,0);
  7059  000440  0EDC               	movlw	low STR_81
  7060  000442  0100               	movlb	0	; () banked
  7061  000444  6F71               	movwf	oled_putString@string& (0+255),b
  7062  000446  0E7B               	movlw	high STR_81
  7063  000448  0100               	movlb	0	; () banked
  7064  00044A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7065  00044C  0E00               	movlw	0
  7066  00044E  0100               	movlb	0	; () banked
  7067  000450  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7068  000452  0E00               	movlw	0
  7069  000454  0100               	movlb	0	; () banked
  7070  000456  6F74               	movwf	oled_putString@start_page& (0+255),b
  7071  000458  EC89  F030         	call	_oled_putString	;wreg free
  7072                           
  7073                           ;MOTEapp.c: 582: oled_putString("Throu Port# ",0,1);
  7074  00045C  0E65               	movlw	low STR_82
  7075  00045E  0100               	movlb	0	; () banked
  7076  000460  6F71               	movwf	oled_putString@string& (0+255),b
  7077  000462  0E7D               	movlw	high STR_82
  7078  000464  0100               	movlb	0	; () banked
  7079  000466  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7080  000468  0E00               	movlw	0
  7081  00046A  0100               	movlb	0	; () banked
  7082  00046C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7083  00046E  0E01               	movlw	1
  7084  000470  0100               	movlb	0	; () banked
  7085  000472  6F74               	movwf	oled_putString@start_page& (0+255),b
  7086  000474  EC89  F030         	call	_oled_putString	;wreg free
  7087                           
  7088                           ;MOTEapp.c: 584: oled_putString("(UNCNF)    (CNF) ",0,3);
  7089  000478  0EA9               	movlw	low STR_83
  7090  00047A  0100               	movlb	0	; () banked
  7091  00047C  6F71               	movwf	oled_putString@string& (0+255),b
  7092  00047E  0E7A               	movlw	high STR_83
  7093  000480  0100               	movlb	0	; () banked
  7094  000482  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7095  000484  0E00               	movlw	0
  7096  000486  0100               	movlb	0	; () banked
  7097  000488  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7098  00048A  0E03               	movlw	3
  7099  00048C  0100               	movlb	0	; () banked
  7100  00048E  6F74               	movwf	oled_putString@start_page& (0+255),b
  7101  000490  EC89  F030         	call	_oled_putString	;wreg free
  7102                           
  7103                           ;MOTEapp.c: 586: moteApp_clearBuffers();
  7104  000494  EC75  F025         	call	_moteApp_clearBuffers	;wreg free
  7105                           
  7106                           ;MOTEapp.c: 587: randomPortNum = TMR2_ReadTimer();
  7107  000498  EC42  F039         	call	_TMR2_ReadTimer	;wreg free
  7108  00049C  0100               	movlb	0	; () banked
  7109  00049E  6FE7               	movwf	_randomPortNum& (0+255),b
  7110                           
  7111                           ; BSR set to: 0
  7112                           ;MOTEapp.c: 589: if (!randomPortNum)
  7113  0004A0  0100               	movlb	0	; () banked
  7114  0004A2  51E7               	movf	_randomPortNum& (0+255),w,b
  7115  0004A4  0100               	movlb	0	; () banked
  7116  0004A6  A4D8               	btfss	status,2,c
  7117  0004A8  D002               	goto	l14001
  7118                           
  7119                           ; BSR set to: 0
  7120                           ;MOTEapp.c: 590: randomPortNum = 5;
  7121  0004AA  0E05               	movlw	5
  7122  0004AC  D009               	goto	L4
  7123  0004AE                     l14001:
  7124                           
  7125                           ; BSR set to: 0
  7126                           ;MOTEapp.c: 591: else if (randomPortNum > 223)
  7127  0004AE  0EDF               	movlw	223
  7128  0004B0  0100               	movlb	0	; () banked
  7129  0004B2  65E7               	cpfsgt	_randomPortNum& (0+255),b
  7130  0004B4  D008               	goto	l14005
  7131  0004B6  D001               	goto	l14003
  7132  0004B8  D006               	goto	l14005
  7133  0004BA                     l14003:
  7134                           
  7135                           ; BSR set to: 0
  7136                           ;MOTEapp.c: 592: randomPortNum = randomPortNum - 50;
  7137  0004BA  0100               	movlb	0	; () banked
  7138  0004BC  51E7               	movf	_randomPortNum& (0+255),w,b
  7139  0004BE  0FCE               	addlw	206
  7140  0004C0                     L4:
  7141  0004C0  0100               	movlb	0	; () banked
  7142  0004C2  6FE7               	movwf	_randomPortNum& (0+255),b
  7143                           
  7144                           ; BSR set to: 0
  7145  0004C4  D000               	goto	l14005
  7146  0004C6                     l14005:
  7147                           
  7148                           ; BSR set to: 0
  7149                           ;MOTEapp.c: 593: oled_putUint8(randomPortNum,12,1);
  7150  0004C6  0E0C               	movlw	12
  7151  0004C8  0100               	movlb	0	; () banked
  7152  0004CA  6F76               	movwf	oled_putUint8@station_dot& (0+255),b
  7153  0004CC  0E01               	movlw	1
  7154  0004CE  0100               	movlb	0	; () banked
  7155  0004D0  6F77               	movwf	oled_putUint8@start_page& (0+255),b
  7156  0004D2  0100               	movlb	0	; () banked
  7157  0004D4  51E7               	movf	_randomPortNum& (0+255),w,b
  7158  0004D6  EC08  F02E         	call	_oled_putUint8
  7159                           
  7160                           ;MOTEapp.c: 594: moteApp_add8bToDataBuffer(randomPortNum, 0);
  7161  0004DA  0E00               	movlw	0
  7162  0004DC  0100               	movlb	0	; () banked
  7163  0004DE  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7164  0004E0  0100               	movlb	0	; () banked
  7165  0004E2  51E7               	movf	_randomPortNum& (0+255),w,b
  7166  0004E4  EC05  F02B         	call	_moteApp_add8bToDataBuffer
  7167                           
  7168                           ;MOTEapp.c: 595: dataBuffer[3] = 0x20;
  7169  0004E8  0E20               	movlw	32
  7170  0004EA  0101               	movlb	1	; () banked
  7171  0004EC  6FC0               	movwf	(_dataBuffer+3)& (0+255),b
  7172                           
  7173                           ; BSR set to: 1
  7174                           ;MOTEapp.c: 597: light = 0;
  7175  0004EE  0E00               	movlw	0
  7176  0004F0  0101               	movlb	1	; () banked
  7177  0004F2  6F59               	movwf	(_light+1)& (0+255),b
  7178  0004F4  0E00               	movlw	0
  7179  0004F6  6F58               	movwf	_light& (0+255),b
  7180                           
  7181                           ; BSR set to: 1
  7182                           ;MOTEapp.c: 598: temperature = 0;
  7183  0004F8  0E00               	movlw	0
  7184  0004FA  0100               	movlb	0	; () banked
  7185  0004FC  6FC8               	movwf	(_temperature+1)& (0+255),b
  7186  0004FE  0E00               	movlw	0
  7187  000500  6FC7               	movwf	_temperature& (0+255),b
  7188                           
  7189                           ; BSR set to: 0
  7190                           ;MOTEapp.c: 599: __nop();
  7191  000502  F000               	nop	
  7192                           
  7193                           ;MOTEapp.c: 600: moteApp_setSensorsInput();
  7194  000504  EC5C  F02E         	call	_moteApp_setSensorsInput	;wreg free
  7195                           
  7196                           ;MOTEapp.c: 601: moteApp_delayms(500);
  7197  000508  0E01               	movlw	1
  7198  00050A  0100               	movlb	0	; () banked
  7199  00050C  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  7200  00050E  0EF4               	movlw	244
  7201  000510  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7202  000512  EC90  F036         	call	_moteApp_delayms	;wreg free
  7203                           
  7204                           ;MOTEapp.c: 602: uint8_t sizeOfUpdate = 0;
  7205  000516  0E00               	movlw	0
  7206  000518  0100               	movlb	0	; () banked
  7207  00051A  6FB2               	movwf	moteRunningProcess@sizeOfUpdate_1493& (0+255),b
  7208                           
  7209                           ; BSR set to: 0
  7210                           ;MOTEapp.c: 603: light = moteApp_convertSensorValue(moteApp_getLightValue());
  7211  00051C  EC30  F033         	call	_moteApp_getLightValue	;wreg free
  7212  000520  C06D  F071         	movff	?_moteApp_getLightValue,moteApp_convertSensorValue@string
  7213  000524  C06E  F072         	movff	?_moteApp_getLightValue+1,moteApp_convertSensorValue@string+1
  7214  000528  EC42  F02C         	call	_moteApp_convertSensorValue	;wreg free
  7215  00052C  C071  F158         	movff	?_moteApp_convertSensorValue,_light
  7216  000530  C072  F159         	movff	?_moteApp_convertSensorValue+1,_light+1
  7217                           
  7218                           ;MOTEapp.c: 604: sizeOfUpdate = moteApp_addToDataBuffer(moteApp_getLightValue(), 4);
  7219  000534  EC30  F033         	call	_moteApp_getLightValue	;wreg free
  7220  000538  C06D  F071         	movff	?_moteApp_getLightValue,moteApp_addToDataBuffer@string
  7221  00053C  C06E  F072         	movff	?_moteApp_getLightValue+1,moteApp_addToDataBuffer@string+1
  7222  000540  0E04               	movlw	4
  7223  000542  0100               	movlb	0	; () banked
  7224  000544  6F73               	movwf	moteApp_addToDataBuffer@bufferLocation& (0+255),b
  7225  000546  EC53  F031         	call	_moteApp_addToDataBuffer	;wreg free
  7226  00054A  0100               	movlb	0	; () banked
  7227  00054C  6FB2               	movwf	moteRunningProcess@sizeOfUpdate_1493& (0+255),b
  7228                           
  7229                           ; BSR set to: 0
  7230                           ;MOTEapp.c: 605: __nop();
  7231  00054E  F000               	nop	
  7232                           
  7233                           ;MOTEapp.c: 606: __nop();
  7234  000550  F000               	nop	
  7235                           
  7236                           ;MOTEapp.c: 607: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  7237  000552  EC98  F034         	call	_moteApp_getTempValue	;wreg free
  7238  000556  C063  F071         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  7239  00055A  C064  F072         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  7240  00055E  EC42  F02C         	call	_moteApp_convertSensorValue	;wreg free
  7241  000562  C071  F0C7         	movff	?_moteApp_convertSensorValue,_temperature
  7242  000566  C072  F0C8         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  7243                           
  7244                           ;MOTEapp.c: 608: temperature = ADC_TempConversion(temperature);
  7245  00056A  0100               	movlb	0	; () banked
  7246  00056C  51C7               	movf	_temperature& (0+255),w,b
  7247  00056E  ECE8  F026         	call	_ADC_TempConversion
  7248  000572  0100               	movlb	0	; () banked
  7249  000574  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  7250  000576  0100               	movlb	0	; () banked
  7251  000578  51AF               	movf	??_moteRunningProcess& (0+255),w,b
  7252  00057A  0100               	movlb	0	; () banked
  7253  00057C  6FC7               	movwf	_temperature& (0+255),b
  7254  00057E  6BC8               	clrf	(_temperature+1)& (0+255),b
  7255                           
  7256                           ; BSR set to: 0
  7257                           ;MOTEapp.c: 609: moteApp_add8bToDataBuffer(temperature, 4 + moteApp_lightStringSize() + 
      +                          1);
  7258  000580  EC62  F039         	call	_moteApp_lightStringSize	;wreg free
  7259  000584  0F05               	addlw	5
  7260  000586  0100               	movlb	0	; () banked
  7261  000588  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7262  00058A  0100               	movlb	0	; () banked
  7263  00058C  51C7               	movf	_temperature& (0+255),w,b
  7264  00058E  EC05  F02B         	call	_moteApp_add8bToDataBuffer
  7265                           
  7266                           ;MOTEapp.c: 610: __nop();
  7267  000592  F000               	nop	
  7268                           
  7269                           ;MOTEapp.c: 612: runningState = runningUplinkSelect;
  7270  000594  0E07               	movlw	7
  7271  000596  0100               	movlb	0	; () banked
  7272  000598  6FE9               	movwf	_runningState& (0+255),b
  7273                           
  7274                           ; BSR set to: 0
  7275                           ;MOTEapp.c: 613: }
  7276                           ;MOTEapp.c: 614: break;
  7277                           
  7278                           ; BSR set to: 0
  7279  00059A  0012               	return	
  7280  00059C                     l14041:
  7281                           
  7282                           ; BSR set to: 0
  7283                           ;MOTEapp.c: 616: if (changeStates)
  7284  00059C  0100               	movlb	0	; () banked
  7285  00059E  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7286  0005A0  0100               	movlb	0	; () banked
  7287  0005A2  B4D8               	btfsc	status,2,c
  7288  0005A4  D012               	goto	l14045
  7289                           
  7290                           ; BSR set to: 0
  7291                           ;MOTEapp.c: 617: {
  7292                           ;MOTEapp.c: 618: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  7293  0005A6  0E2D               	movlw	low STR_74
  7294  0005A8  0100               	movlb	0	; () banked
  7295  0005AA  6F61               	movwf	sendDataCommand@string& (0+255),b
  7296  0005AC  0E7D               	movlw	high STR_74
  7297  0005AE  0100               	movlb	0	; () banked
  7298  0005B0  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  7299  0005B2  0EBD               	movlw	low _dataBuffer
  7300  0005B4  0100               	movlb	0	; () banked
  7301  0005B6  6F63               	movwf	sendDataCommand@appData& (0+255),b
  7302  0005B8  0E01               	movlw	high _dataBuffer
  7303  0005BA  0100               	movlb	0	; () banked
  7304  0005BC  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  7305  0005BE  0E0C               	movlw	12
  7306  0005C0  0100               	movlb	0	; () banked
  7307  0005C2  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  7308  0005C4  ECFB  F023         	call	_sendDataCommand	;wreg free
  7309  0005C8  D000               	goto	l14045
  7310  0005CA                     l14045:
  7311                           
  7312                           ;MOTEapp.c: 620: }
  7313                           ;MOTEapp.c: 621: if (selectButton)
  7314  0005CA  0100               	movlb	0	; () banked
  7315  0005CC  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7316  0005CE  0100               	movlb	0	; () banked
  7317  0005D0  B4D8               	btfsc	status,2,c
  7318  0005D2  D012               	goto	l14049
  7319                           
  7320                           ; BSR set to: 0
  7321                           ;MOTEapp.c: 622: {
  7322                           ;MOTEapp.c: 623: sendDataCommand("mac tx cnf ", dataBuffer, 12);
  7323  0005D4  0E64               	movlw	low STR_85
  7324  0005D6  0100               	movlb	0	; () banked
  7325  0005D8  6F61               	movwf	sendDataCommand@string& (0+255),b
  7326  0005DA  0E7E               	movlw	high STR_85
  7327  0005DC  0100               	movlb	0	; () banked
  7328  0005DE  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  7329  0005E0  0EBD               	movlw	low _dataBuffer
  7330  0005E2  0100               	movlb	0	; () banked
  7331  0005E4  6F63               	movwf	sendDataCommand@appData& (0+255),b
  7332  0005E6  0E01               	movlw	high _dataBuffer
  7333  0005E8  0100               	movlb	0	; () banked
  7334  0005EA  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  7335  0005EC  0E0C               	movlw	12
  7336  0005EE  0100               	movlb	0	; () banked
  7337  0005F0  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  7338  0005F2  ECFB  F023         	call	_sendDataCommand	;wreg free
  7339  0005F6  D000               	goto	l14049
  7340  0005F8                     l14049:
  7341                           
  7342                           ;MOTEapp.c: 624: }
  7343                           ;MOTEapp.c: 626: if ( (changeStates) || (selectButton) )
  7344  0005F8  0100               	movlb	0	; () banked
  7345  0005FA  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7346  0005FC  0100               	movlb	0	; () banked
  7347  0005FE  A4D8               	btfss	status,2,c
  7348  000600  D007               	goto	l14053
  7349                           
  7350                           ; BSR set to: 0
  7351  000602  0100               	movlb	0	; () banked
  7352  000604  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7353  000606  0100               	movlb	0	; () banked
  7354  000608  A4D8               	btfss	status,2,c
  7355  00060A  D002               	goto	l14053
  7356  00060C  0012               	return	
  7357  00060E  D000               	goto	l14053
  7358  000610                     l14053:
  7359                           
  7360                           ; BSR set to: 0
  7361                           ;MOTEapp.c: 627: {
  7362                           ;MOTEapp.c: 628: oled_clear();
  7363  000610  ECA5  F038         	call	_oled_clear	;wreg free
  7364                           
  7365                           ;MOTEapp.c: 629: oled_putString("Sent Data: ",0,0);
  7366  000614  0E4C               	movlw	low STR_86
  7367  000616  0100               	movlb	0	; () banked
  7368  000618  6F71               	movwf	oled_putString@string& (0+255),b
  7369  00061A  0E7E               	movlw	high STR_86
  7370  00061C  0100               	movlb	0	; () banked
  7371  00061E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7372  000620  0E00               	movlw	0
  7373  000622  0100               	movlb	0	; () banked
  7374  000624  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7375  000626  0E00               	movlw	0
  7376  000628  0100               	movlb	0	; () banked
  7377  00062A  6F74               	movwf	oled_putString@start_page& (0+255),b
  7378  00062C  EC89  F030         	call	_oled_putString	;wreg free
  7379                           
  7380                           ;MOTEapp.c: 630: oled_putString("Tx Port #: ",0,1);
  7381  000630  0E40               	movlw	low STR_87
  7382  000632  0100               	movlb	0	; () banked
  7383  000634  6F71               	movwf	oled_putString@string& (0+255),b
  7384  000636  0E7E               	movlw	high STR_87
  7385  000638  0100               	movlb	0	; () banked
  7386  00063A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7387  00063C  0E00               	movlw	0
  7388  00063E  0100               	movlb	0	; () banked
  7389  000640  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7390  000642  0E01               	movlw	1
  7391  000644  0100               	movlb	0	; () banked
  7392  000646  6F74               	movwf	oled_putString@start_page& (0+255),b
  7393  000648  EC89  F030         	call	_oled_putString	;wreg free
  7394                           
  7395                           ;MOTEapp.c: 631: oled_putUint8(randomPortNum,12,1);
  7396  00064C  0E0C               	movlw	12
  7397  00064E  0100               	movlb	0	; () banked
  7398  000650  6F76               	movwf	oled_putUint8@station_dot& (0+255),b
  7399  000652  0E01               	movlw	1
  7400  000654  0100               	movlb	0	; () banked
  7401  000656  6F77               	movwf	oled_putUint8@start_page& (0+255),b
  7402  000658  0100               	movlb	0	; () banked
  7403  00065A  51E7               	movf	_randomPortNum& (0+255),w,b
  7404  00065C  EC08  F02E         	call	_oled_putUint8
  7405                           
  7406                           ;MOTEapp.c: 632: oled_putString("L:       T: ",0,2);
  7407  000660  0E72               	movlw	low STR_73
  7408  000662  0100               	movlb	0	; () banked
  7409  000664  6F71               	movwf	oled_putString@string& (0+255),b
  7410  000666  0E7D               	movlw	high STR_73
  7411  000668  0100               	movlb	0	; () banked
  7412  00066A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7413  00066C  0E00               	movlw	0
  7414  00066E  0100               	movlb	0	; () banked
  7415  000670  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7416  000672  0E02               	movlw	2
  7417  000674  0100               	movlb	0	; () banked
  7418  000676  6F74               	movwf	oled_putString@start_page& (0+255),b
  7419  000678  EC89  F030         	call	_oled_putString	;wreg free
  7420                           
  7421                           ;MOTEapp.c: 633: oled_putString(moteApp_getLightString(), 3, 2);
  7422  00067C  EC33  F039         	call	_moteApp_getLightString	;wreg free
  7423  000680  C060  F071         	movff	?_moteApp_getLightString,oled_putString@string
  7424  000684  C061  F072         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  7425  000688  0E03               	movlw	3
  7426  00068A  0100               	movlb	0	; () banked
  7427  00068C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7428  00068E  0E02               	movlw	2
  7429  000690  0100               	movlb	0	; () banked
  7430  000692  6F74               	movwf	oled_putString@start_page& (0+255),b
  7431  000694  EC89  F030         	call	_oled_putString	;wreg free
  7432                           
  7433                           ;MOTEapp.c: 634: oled_putint8(temperature,11,2);
  7434  000698  0E0B               	movlw	11
  7435  00069A  0100               	movlb	0	; () banked
  7436  00069C  6F76               	movwf	oled_putint8@station_dot& (0+255),b
  7437  00069E  0E02               	movlw	2
  7438  0006A0  0100               	movlb	0	; () banked
  7439  0006A2  6F77               	movwf	oled_putint8@start_page& (0+255),b
  7440  0006A4  0100               	movlb	0	; () banked
  7441  0006A6  51C7               	movf	_temperature& (0+255),w,b
  7442  0006A8  EC96  F02A         	call	_oled_putint8
  7443                           
  7444                           ;MOTEapp.c: 635: LATAbits.LATA6 = 0;
  7445  0006AC  9C89               	bcf	3977,6,c	;volatile
  7446                           
  7447                           ;MOTEapp.c: 636: runningState = runningUplinkTransmit;
  7448  0006AE  0E08               	movlw	8
  7449  0006B0  0100               	movlb	0	; () banked
  7450  0006B2  6FE9               	movwf	_runningState& (0+255),b
  7451                           
  7452                           ; BSR set to: 0
  7453                           ;MOTEapp.c: 637: }
  7454                           ;MOTEapp.c: 638: break;
  7455  0006B4  0012               	return	
  7456  0006B6                     l14071:
  7457                           
  7458                           ; BSR set to: 0
  7459                           ;MOTEapp.c: 640: if ( messageReady )
  7460  0006B6  0100               	movlb	0	; () banked
  7461  0006B8  51AD               	movf	moteRunningProcess@messageReady& (0+255),w,b
  7462  0006BA  0100               	movlb	0	; () banked
  7463  0006BC  B4D8               	btfsc	status,2,c
  7464  0006BE  D143               	goto	l14137
  7465                           
  7466                           ; BSR set to: 0
  7467                           ;MOTEapp.c: 641: {
  7468                           ;MOTEapp.c: 642: if(strcmp(moduleResonseBuffer, "ok") == 0)
  7469  0006C0  0E5D               	movlw	low _moduleResonseBuffer
  7470  0006C2  0100               	movlb	0	; () banked
  7471  0006C4  6F60               	movwf	strcmp@s1& (0+255),b
  7472  0006C6  0E01               	movlw	high _moduleResonseBuffer
  7473  0006C8  0100               	movlb	0	; () banked
  7474  0006CA  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7475  0006CC  0EF7               	movlw	low STR_44
  7476  0006CE  0100               	movlb	0	; () banked
  7477  0006D0  6F62               	movwf	strcmp@s2& (0+255),b
  7478  0006D2  0E7F               	movlw	high STR_44
  7479  0006D4  0100               	movlb	0	; () banked
  7480  0006D6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7481  0006D8  ECD1  F033         	call	_strcmp	;wreg free
  7482  0006DC  0100               	movlb	0	; () banked
  7483  0006DE  5160               	movf	?_strcmp& (0+255),w,b
  7484  0006E0  0100               	movlb	0	; () banked
  7485  0006E2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7486  0006E4  A4D8               	btfss	status,2,c
  7487  0006E6  D005               	goto	l14079
  7488                           
  7489                           ; BSR set to: 0
  7490                           ;MOTEapp.c: 643: {
  7491                           ;MOTEapp.c: 644: LATAbits.LATA6 = 1;
  7492  0006E8  8C89               	bsf	3977,6,c	;volatile
  7493                           
  7494                           ; BSR set to: 0
  7495                           ;MOTEapp.c: 645: runningState = runningUplinkTransmit;
  7496  0006EA  0E08               	movlw	8
  7497  0006EC  0100               	movlb	0	; () banked
  7498  0006EE  6FE9               	movwf	_runningState& (0+255),b
  7499  0006F0  D000               	goto	l14079
  7500  0006F2                     l14079:
  7501                           
  7502                           ; BSR set to: 0
  7503                           ;MOTEapp.c: 646: }
  7504                           ;MOTEapp.c: 647: if(strncmp(moduleResonseBuffer, "mac_rx", 6) == 0)
  7505  0006F2  0E5D               	movlw	low _moduleResonseBuffer
  7506  0006F4  0100               	movlb	0	; () banked
  7507  0006F6  6F60               	movwf	strncmp@s1& (0+255),b
  7508  0006F8  0E01               	movlw	high _moduleResonseBuffer
  7509  0006FA  0100               	movlb	0	; () banked
  7510  0006FC  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7511  0006FE  0EAA               	movlw	low STR_90
  7512  000700  0100               	movlb	0	; () banked
  7513  000702  6F62               	movwf	strncmp@s2& (0+255),b
  7514  000704  0E7F               	movlw	high STR_90
  7515  000706  0100               	movlb	0	; () banked
  7516  000708  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7517  00070A  0E00               	movlw	0
  7518  00070C  0100               	movlb	0	; () banked
  7519  00070E  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7520  000710  0E06               	movlw	6
  7521  000712  6F64               	movwf	strncmp@len& (0+255),b
  7522  000714  ECFE  F02C         	call	_strncmp	;wreg free
  7523  000718  0100               	movlb	0	; () banked
  7524  00071A  5160               	movf	?_strncmp& (0+255),w,b
  7525  00071C  0100               	movlb	0	; () banked
  7526  00071E  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7527  000720  A4D8               	btfss	status,2,c
  7528  000722  D08E               	goto	l14121
  7529                           
  7530                           ; BSR set to: 0
  7531                           ;MOTEapp.c: 648: {
  7532                           ;MOTEapp.c: 649: uint8_t bufferReadPos = 7;
  7533  000724  0E07               	movlw	7
  7534  000726  0100               	movlb	0	; () banked
  7535  000728  6FB4               	movwf	moteRunningProcess@bufferReadPos& (0+255),b
  7536                           
  7537                           ; BSR set to: 0
  7538                           ;MOTEapp.c: 653: responsePortNum[0] = moduleResonseBuffer[bufferReadPos++];
  7539  00072A  0100               	movlb	0	; () banked
  7540  00072C  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7541  00072E  0D01               	mullw	1
  7542  000730  0E5D               	movlw	low _moduleResonseBuffer
  7543  000732  24F3               	addwf	prodl,w,c
  7544  000734  6ED9               	movwf	fsr2l,c
  7545  000736  0E01               	movlw	high _moduleResonseBuffer
  7546  000738  20F4               	addwfc	prodh,w,c
  7547  00073A  6EDA               	movwf	fsr2h,c
  7548  00073C  50DF               	movf	indf2,w,c
  7549  00073E  0101               	movlb	1	; () banked
  7550  000740  6FF0               	movwf	_responsePortNum& (0+255),b
  7551                           
  7552                           ; BSR set to: 1
  7553  000742  0100               	movlb	0	; () banked
  7554  000744  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7555                           
  7556                           ; BSR set to: 0
  7557                           ;MOTEapp.c: 654: responsePortNum[1] = moduleResonseBuffer[bufferReadPos++];
  7558  000746  0100               	movlb	0	; () banked
  7559  000748  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7560  00074A  0D01               	mullw	1
  7561  00074C  0E5D               	movlw	low _moduleResonseBuffer
  7562  00074E  24F3               	addwf	prodl,w,c
  7563  000750  6ED9               	movwf	fsr2l,c
  7564  000752  0E01               	movlw	high _moduleResonseBuffer
  7565  000754  20F4               	addwfc	prodh,w,c
  7566  000756  6EDA               	movwf	fsr2h,c
  7567  000758  50DF               	movf	indf2,w,c
  7568  00075A  0101               	movlb	1	; () banked
  7569  00075C  6FF1               	movwf	(_responsePortNum+1)& (0+255),b
  7570                           
  7571                           ; BSR set to: 1
  7572  00075E  0100               	movlb	0	; () banked
  7573  000760  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7574                           
  7575                           ; BSR set to: 0
  7576                           ;MOTEapp.c: 655: if (responsePortNum[1] != ' ')
  7577  000762  0E20               	movlw	32
  7578  000764  0101               	movlb	1	; () banked
  7579  000766  19F1               	xorwf	(_responsePortNum+1)& (0+255),w,b
  7580  000768  B4D8               	btfsc	status,2,c
  7581  00076A  D016               	goto	l14101
  7582                           
  7583                           ; BSR set to: 1
  7584                           ;MOTEapp.c: 656: {
  7585                           ;MOTEapp.c: 657: responsePortNum[2] = moduleResonseBuffer[bufferReadPos++];
  7586  00076C  0100               	movlb	0	; () banked
  7587  00076E  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7588  000770  0D01               	mullw	1
  7589  000772  0E5D               	movlw	low _moduleResonseBuffer
  7590  000774  24F3               	addwf	prodl,w,c
  7591  000776  6ED9               	movwf	fsr2l,c
  7592  000778  0E01               	movlw	high _moduleResonseBuffer
  7593  00077A  20F4               	addwfc	prodh,w,c
  7594  00077C  6EDA               	movwf	fsr2h,c
  7595  00077E  50DF               	movf	indf2,w,c
  7596  000780  0101               	movlb	1	; () banked
  7597  000782  6FF2               	movwf	(_responsePortNum+2)& (0+255),b
  7598                           
  7599                           ; BSR set to: 1
  7600  000784  0100               	movlb	0	; () banked
  7601  000786  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7602                           
  7603                           ; BSR set to: 0
  7604                           ;MOTEapp.c: 658: if (responsePortNum[2] != ' ')
  7605  000788  0E20               	movlw	32
  7606  00078A  0101               	movlb	1	; () banked
  7607  00078C  19F2               	xorwf	(_responsePortNum+2)& (0+255),w,b
  7608  00078E  B4D8               	btfsc	status,2,c
  7609  000790  D003               	goto	l14101
  7610                           
  7611                           ; BSR set to: 1
  7612                           ;MOTEapp.c: 659: {
  7613                           ;MOTEapp.c: 660: bufferReadPos++;
  7614  000792  0100               	movlb	0	; () banked
  7615  000794  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7616                           
  7617                           ; BSR set to: 0
  7618  000796  D000               	goto	l14101
  7619  000798                     l14101:
  7620                           
  7621                           ;MOTEapp.c: 661: }
  7622                           ;MOTEapp.c: 662: }
  7623                           ;MOTEapp.c: 664: for (uint8_t counter = 0; counter < sizeof(moduleResonseBuffer); counte
      +                          r++)
  7624  000798  0E00               	movlw	0
  7625  00079A  0100               	movlb	0	; () banked
  7626  00079C  6FB3               	movwf	moteRunningProcess@counter& (0+255),b
  7627  00079E                     l14103:
  7628                           
  7629                           ; BSR set to: 0
  7630  00079E  0E3F               	movlw	63
  7631  0007A0  0100               	movlb	0	; () banked
  7632  0007A2  65B3               	cpfsgt	moteRunningProcess@counter& (0+255),b
  7633  0007A4  D003               	goto	l14107
  7634  0007A6  D02D               	goto	l494
  7635  0007A8  D001               	goto	l14107
  7636                           
  7637                           ; BSR set to: 0
  7638  0007AA  D02B               	goto	l494
  7639  0007AC                     l14107:
  7640                           
  7641                           ; BSR set to: 0
  7642                           ;MOTEapp.c: 665: {
  7643                           ;MOTEapp.c: 666: responseData[counter] = moduleResonseBuffer[bufferReadPos];
  7644  0007AC  0100               	movlb	0	; () banked
  7645  0007AE  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7646  0007B0  0D01               	mullw	1
  7647  0007B2  0E5D               	movlw	low _moduleResonseBuffer
  7648  0007B4  24F3               	addwf	prodl,w,c
  7649  0007B6  6ED9               	movwf	fsr2l,c
  7650  0007B8  0E01               	movlw	high _moduleResonseBuffer
  7651  0007BA  20F4               	addwfc	prodh,w,c
  7652  0007BC  6EDA               	movwf	fsr2h,c
  7653  0007BE  0100               	movlb	0	; () banked
  7654  0007C0  51B3               	movf	moteRunningProcess@counter& (0+255),w,b
  7655  0007C2  0D01               	mullw	1
  7656  0007C4  0E9D               	movlw	low _responseData
  7657  0007C6  24F3               	addwf	prodl,w,c
  7658  0007C8  6EE1               	movwf	fsr1l,c
  7659  0007CA  0E01               	movlw	high _responseData
  7660  0007CC  20F4               	addwfc	prodh,w,c
  7661  0007CE  6EE2               	movwf	fsr1h,c
  7662  0007D0  CFDF FFE7          	movff	indf2,indf1
  7663                           
  7664                           ; BSR set to: 0
  7665                           ;MOTEapp.c: 668: if (responseData[counter] != 0x00)
  7666  0007D4  0100               	movlb	0	; () banked
  7667  0007D6  51B3               	movf	moteRunningProcess@counter& (0+255),w,b
  7668  0007D8  0D01               	mullw	1
  7669  0007DA  0E9D               	movlw	low _responseData
  7670  0007DC  24F3               	addwf	prodl,w,c
  7671  0007DE  6ED9               	movwf	fsr2l,c
  7672  0007E0  0E01               	movlw	high _responseData
  7673  0007E2  20F4               	addwfc	prodh,w,c
  7674  0007E4  6EDA               	movwf	fsr2h,c
  7675  0007E6  50DF               	movf	indf2,w,c
  7676  0007E8  B4D8               	btfsc	status,2,c
  7677  0007EA  D003               	goto	l14113
  7678                           
  7679                           ; BSR set to: 0
  7680                           ;MOTEapp.c: 669: {
  7681                           ;MOTEapp.c: 670: bufferReadPos++;
  7682  0007EC  0100               	movlb	0	; () banked
  7683  0007EE  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7684                           
  7685                           ;MOTEapp.c: 671: } else {
  7686  0007F0  D004               	goto	l14115
  7687  0007F2                     l14113:
  7688                           
  7689                           ; BSR set to: 0
  7690                           ;MOTEapp.c: 672: counter = sizeof(moduleResonseBuffer);
  7691  0007F2  0E40               	movlw	64
  7692  0007F4  0100               	movlb	0	; () banked
  7693  0007F6  6FB3               	movwf	moteRunningProcess@counter& (0+255),b
  7694  0007F8  D000               	goto	l14115
  7695  0007FA                     l14115:
  7696                           
  7697                           ; BSR set to: 0
  7698  0007FA  0100               	movlb	0	; () banked
  7699  0007FC  2BB3               	incf	moteRunningProcess@counter& (0+255),f,b
  7700  0007FE  D7CF               	goto	l14103
  7701                           
  7702                           ; BSR set to: 0
  7703  000800  D7D5               	goto	l14107
  7704  000802                     l494:
  7705                           
  7706                           ; BSR set to: 0
  7707                           ;MOTEapp.c: 673: }
  7708                           ;MOTEapp.c: 674: }
  7709                           ;MOTEapp.c: 676: LATAbits.LATA7 = 1;
  7710  000802  8E89               	bsf	3977,7,c	;volatile
  7711                           
  7712                           ;MOTEapp.c: 677: LATAbits.LATA6 = 0;
  7713  000804  9C89               	bcf	3977,6,c	;volatile
  7714                           
  7715                           ; BSR set to: 0
  7716                           ;MOTEapp.c: 679: oled_putString("Server Response ",0,2);
  7717  000806  0E54               	movlw	low STR_91
  7718  000808  0100               	movlb	0	; () banked
  7719  00080A  6F71               	movwf	oled_putString@string& (0+255),b
  7720  00080C  0E7B               	movlw	high STR_91
  7721  00080E  0100               	movlb	0	; () banked
  7722  000810  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7723  000812  0E00               	movlw	0
  7724  000814  0100               	movlb	0	; () banked
  7725  000816  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7726  000818  0E02               	movlw	2
  7727  00081A  0100               	movlb	0	; () banked
  7728  00081C  6F74               	movwf	oled_putString@start_page& (0+255),b
  7729  00081E  EC89  F030         	call	_oled_putString	;wreg free
  7730                           
  7731                           ;MOTEapp.c: 680: oled_putString("    Received    ",0,3);
  7732  000822  0ECC               	movlw	low STR_92
  7733  000824  0100               	movlb	0	; () banked
  7734  000826  6F71               	movwf	oled_putString@string& (0+255),b
  7735  000828  0E7A               	movlw	high STR_92
  7736  00082A  0100               	movlb	0	; () banked
  7737  00082C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7738  00082E  0E00               	movlw	0
  7739  000830  0100               	movlb	0	; () banked
  7740  000832  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7741  000834  0E03               	movlw	3
  7742  000836  0100               	movlb	0	; () banked
  7743  000838  6F74               	movwf	oled_putString@start_page& (0+255),b
  7744  00083A  EC89  F030         	call	_oled_putString	;wreg free
  7745                           
  7746                           ;MOTEapp.c: 681: }
  7747  00083E  D079               	goto	l14135
  7748  000840                     l14121:
  7749                           
  7750                           ;MOTEapp.c: 682: else if(strncmp(moduleResonseBuffer, "mac_tx", 6) == 0)
  7751  000840  0E5D               	movlw	low _moduleResonseBuffer
  7752  000842  0100               	movlb	0	; () banked
  7753  000844  6F60               	movwf	strncmp@s1& (0+255),b
  7754  000846  0E01               	movlw	high _moduleResonseBuffer
  7755  000848  0100               	movlb	0	; () banked
  7756  00084A  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7757  00084C  0EB1               	movlw	low STR_93
  7758  00084E  0100               	movlb	0	; () banked
  7759  000850  6F62               	movwf	strncmp@s2& (0+255),b
  7760  000852  0E7F               	movlw	high STR_93
  7761  000854  0100               	movlb	0	; () banked
  7762  000856  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7763  000858  0E00               	movlw	0
  7764  00085A  0100               	movlb	0	; () banked
  7765  00085C  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7766  00085E  0E06               	movlw	6
  7767  000860  6F64               	movwf	strncmp@len& (0+255),b
  7768  000862  ECFE  F02C         	call	_strncmp	;wreg free
  7769  000866  0100               	movlb	0	; () banked
  7770  000868  5160               	movf	?_strncmp& (0+255),w,b
  7771  00086A  0100               	movlb	0	; () banked
  7772  00086C  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7773  00086E  A4D8               	btfss	status,2,c
  7774  000870  D010               	goto	l14127
  7775                           
  7776                           ; BSR set to: 0
  7777                           ;MOTEapp.c: 683: {
  7778                           ;MOTEapp.c: 684: LATAbits.LATA6 = 0;
  7779  000872  9C89               	bcf	3977,6,c	;volatile
  7780                           
  7781                           ; BSR set to: 0
  7782                           ;MOTEapp.c: 685: oled_putString("Data Transmitted",0,3);
  7783  000874  0EBA               	movlw	low STR_94
  7784  000876  0100               	movlb	0	; () banked
  7785  000878  6F71               	movwf	oled_putString@string& (0+255),b
  7786  00087A  0E7B               	movlw	high STR_94
  7787  00087C  0100               	movlb	0	; () banked
  7788  00087E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7789  000880  0E00               	movlw	0
  7790  000882  0100               	movlb	0	; () banked
  7791  000884  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7792  000886  0E03               	movlw	3
  7793  000888  0100               	movlb	0	; () banked
  7794  00088A  6F74               	movwf	oled_putString@start_page& (0+255),b
  7795  00088C  EC89  F030         	call	_oled_putString	;wreg free
  7796                           
  7797                           ;MOTEapp.c: 686: }
  7798  000890  D050               	goto	l14135
  7799  000892                     l14127:
  7800                           
  7801                           ;MOTEapp.c: 687: else if(strncmp(moduleResonseBuffer, "mac_er", 6) == 0)
  7802  000892  0E5D               	movlw	low _moduleResonseBuffer
  7803  000894  0100               	movlb	0	; () banked
  7804  000896  6F60               	movwf	strncmp@s1& (0+255),b
  7805  000898  0E01               	movlw	high _moduleResonseBuffer
  7806  00089A  0100               	movlb	0	; () banked
  7807  00089C  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7808  00089E  0EA3               	movlw	low STR_95
  7809  0008A0  0100               	movlb	0	; () banked
  7810  0008A2  6F62               	movwf	strncmp@s2& (0+255),b
  7811  0008A4  0E7F               	movlw	high STR_95
  7812  0008A6  0100               	movlb	0	; () banked
  7813  0008A8  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7814  0008AA  0E00               	movlw	0
  7815  0008AC  0100               	movlb	0	; () banked
  7816  0008AE  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7817  0008B0  0E06               	movlw	6
  7818  0008B2  6F64               	movwf	strncmp@len& (0+255),b
  7819  0008B4  ECFE  F02C         	call	_strncmp	;wreg free
  7820  0008B8  0100               	movlb	0	; () banked
  7821  0008BA  5160               	movf	?_strncmp& (0+255),w,b
  7822  0008BC  0100               	movlb	0	; () banked
  7823  0008BE  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7824  0008C0  A4D8               	btfss	status,2,c
  7825  0008C2  D00F               	goto	l14131
  7826                           
  7827                           ; BSR set to: 0
  7828                           ;MOTEapp.c: 688: {
  7829                           ;MOTEapp.c: 689: oled_putString("Mac Error Occurred",0,3);
  7830  0008C4  0E96               	movlw	low STR_96
  7831  0008C6  0100               	movlb	0	; () banked
  7832  0008C8  6F71               	movwf	oled_putString@string& (0+255),b
  7833  0008CA  0E7A               	movlw	high STR_96
  7834  0008CC  0100               	movlb	0	; () banked
  7835  0008CE  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7836  0008D0  0E00               	movlw	0
  7837  0008D2  0100               	movlb	0	; () banked
  7838  0008D4  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7839  0008D6  0E03               	movlw	3
  7840  0008D8  0100               	movlb	0	; () banked
  7841  0008DA  6F74               	movwf	oled_putString@start_page& (0+255),b
  7842  0008DC  EC89  F030         	call	_oled_putString	;wreg free
  7843                           
  7844                           ;MOTEapp.c: 690: }
  7845  0008E0  D028               	goto	l14135
  7846  0008E2                     l14131:
  7847                           
  7848                           ;MOTEapp.c: 691: else if(strncmp(moduleResonseBuffer, "no_fre", 6) == 0)
  7849  0008E2  0E5D               	movlw	low _moduleResonseBuffer
  7850  0008E4  0100               	movlb	0	; () banked
  7851  0008E6  6F60               	movwf	strncmp@s1& (0+255),b
  7852  0008E8  0E01               	movlw	high _moduleResonseBuffer
  7853  0008EA  0100               	movlb	0	; () banked
  7854  0008EC  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7855  0008EE  0E9C               	movlw	low STR_97
  7856  0008F0  0100               	movlb	0	; () banked
  7857  0008F2  6F62               	movwf	strncmp@s2& (0+255),b
  7858  0008F4  0E7F               	movlw	high STR_97
  7859  0008F6  0100               	movlb	0	; () banked
  7860  0008F8  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7861  0008FA  0E00               	movlw	0
  7862  0008FC  0100               	movlb	0	; () banked
  7863  0008FE  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7864  000900  0E06               	movlw	6
  7865  000902  6F64               	movwf	strncmp@len& (0+255),b
  7866  000904  ECFE  F02C         	call	_strncmp	;wreg free
  7867  000908  0100               	movlb	0	; () banked
  7868  00090A  5160               	movf	?_strncmp& (0+255),w,b
  7869  00090C  0100               	movlb	0	; () banked
  7870  00090E  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7871  000910  A4D8               	btfss	status,2,c
  7872  000912  D00F               	goto	l14135
  7873                           
  7874                           ; BSR set to: 0
  7875                           ;MOTEapp.c: 692: {
  7876                           ;MOTEapp.c: 693: oled_putString("No Free Channel",0,3);
  7877  000914  0EB3               	movlw	low STR_98
  7878  000916  0100               	movlb	0	; () banked
  7879  000918  6F71               	movwf	oled_putString@string& (0+255),b
  7880  00091A  0E7C               	movlw	high STR_98
  7881  00091C  0100               	movlb	0	; () banked
  7882  00091E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7883  000920  0E00               	movlw	0
  7884  000922  0100               	movlb	0	; () banked
  7885  000924  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7886  000926  0E03               	movlw	3
  7887  000928  0100               	movlb	0	; () banked
  7888  00092A  6F74               	movwf	oled_putString@start_page& (0+255),b
  7889  00092C  EC89  F030         	call	_oled_putString	;wreg free
  7890  000930  D000               	goto	l14135
  7891  000932                     l14135:
  7892                           
  7893                           ;MOTEapp.c: 694: }
  7894                           ;MOTEapp.c: 695: _delay((unsigned long)((16)*(48000000/4000.0)));
  7895  000932  0EFA               	movlw	250
  7896  000934  0100               	movlb	0	; () banked
  7897  000936  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  7898  000938  0E58               	movlw	88
  7899  00093A                     u14457:
  7900  00093A  2EE8               	decfsz	wreg,f,c
  7901  00093C  D7FE               	bra	u14457
  7902  00093E  2FAF               	decfsz	??_moteRunningProcess& (0+255),f,b
  7903  000940  D7FC               	bra	u14457
  7904  000942  F000               	nop	
  7905  000944  D000               	goto	l14137
  7906  000946                     l14137:
  7907                           
  7908                           ;MOTEapp.c: 696: }
  7909                           ;MOTEapp.c: 697: if ( (changeStates) || (selectButton) )
  7910  000946  0100               	movlb	0	; () banked
  7911  000948  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7912  00094A  0100               	movlb	0	; () banked
  7913  00094C  A4D8               	btfss	status,2,c
  7914  00094E  D007               	goto	l14141
  7915                           
  7916                           ; BSR set to: 0
  7917  000950  0100               	movlb	0	; () banked
  7918  000952  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7919  000954  0100               	movlb	0	; () banked
  7920  000956  A4D8               	btfss	status,2,c
  7921  000958  D002               	goto	l14141
  7922  00095A  0012               	return	
  7923  00095C  D000               	goto	l14141
  7924  00095E                     l14141:
  7925                           
  7926                           ; BSR set to: 0
  7927                           ;MOTEapp.c: 698: {
  7928                           ;MOTEapp.c: 699: oled_clear();
  7929  00095E  ECA5  F038         	call	_oled_clear	;wreg free
  7930                           
  7931                           ;MOTEapp.c: 700: oled_putString("  Issue Uplink  ",0,0);
  7932  000962  0E21               	movlw	low STR_75
  7933  000964  0100               	movlb	0	; () banked
  7934  000966  6F71               	movwf	oled_putString@string& (0+255),b
  7935  000968  0E7B               	movlw	high STR_75
  7936  00096A  0100               	movlb	0	; () banked
  7937  00096C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7938  00096E  0E00               	movlw	0
  7939  000970  0100               	movlb	0	; () banked
  7940  000972  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7941  000974  0E00               	movlw	0
  7942  000976  0100               	movlb	0	; () banked
  7943  000978  6F74               	movwf	oled_putString@start_page& (0+255),b
  7944  00097A  EC89  F030         	call	_oled_putString	;wreg free
  7945                           
  7946                           ;MOTEapp.c: 701: oled_putString(" LoRaWAN Packet ",0,1);
  7947  00097E  0E87               	movlw	low STR_76
  7948  000980  0100               	movlb	0	; () banked
  7949  000982  6F71               	movwf	oled_putString@string& (0+255),b
  7950  000984  0E7B               	movlw	high STR_76
  7951  000986  0100               	movlb	0	; () banked
  7952  000988  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7953  00098A  0E00               	movlw	0
  7954  00098C  0100               	movlb	0	; () banked
  7955  00098E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7956  000990  0E01               	movlw	1
  7957  000992  0100               	movlb	0	; () banked
  7958  000994  6F74               	movwf	oled_putString@start_page& (0+255),b
  7959  000996  EC89  F030         	call	_oled_putString	;wreg free
  7960                           
  7961                           ;MOTEapp.c: 702: oled_putString("(NAV)    (SEL) ",0,3);
  7962  00099A  0E83               	movlw	low STR_77
  7963  00099C  0100               	movlb	0	; () banked
  7964  00099E  6F71               	movwf	oled_putString@string& (0+255),b
  7965  0009A0  0E7C               	movlw	high STR_77
  7966  0009A2  0100               	movlb	0	; () banked
  7967  0009A4  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7968  0009A6  0E00               	movlw	0
  7969  0009A8  0100               	movlb	0	; () banked
  7970  0009AA  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7971  0009AC  0E03               	movlw	3
  7972  0009AE  0100               	movlb	0	; () banked
  7973  0009B0  6F74               	movwf	oled_putString@start_page& (0+255),b
  7974  0009B2  EC89  F030         	call	_oled_putString	;wreg free
  7975                           
  7976                           ;MOTEapp.c: 703: runningState = runningUplink;
  7977  0009B6  0E06               	movlw	6
  7978  0009B8  0100               	movlb	0	; () banked
  7979  0009BA  6FE9               	movwf	_runningState& (0+255),b
  7980                           
  7981                           ; BSR set to: 0
  7982                           ;MOTEapp.c: 704: }
  7983                           ;MOTEapp.c: 705: break;
  7984  0009BC  0012               	return	
  7985  0009BE                     l14151:
  7986                           
  7987                           ; BSR set to: 0
  7988                           ;MOTEapp.c: 707: if (changeStates)
  7989  0009BE  0100               	movlb	0	; () banked
  7990  0009C0  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7991  0009C2  0100               	movlb	0	; () banked
  7992  0009C4  B4D8               	btfsc	status,2,c
  7993  0009C6  D030               	goto	l14163
  7994                           
  7995                           ; BSR set to: 0
  7996                           ;MOTEapp.c: 708: {
  7997                           ;MOTEapp.c: 709: oled_clear();
  7998  0009C8  ECA5  F038         	call	_oled_clear	;wreg free
  7999                           
  8000                           ;MOTEapp.c: 710: oled_putString("  Sensor Data  ",0,0);
  8001  0009CC  0E63               	movlw	low STR_102
  8002  0009CE  0100               	movlb	0	; () banked
  8003  0009D0  6F71               	movwf	oled_putString@string& (0+255),b
  8004  0009D2  0E7C               	movlw	high STR_102
  8005  0009D4  0100               	movlb	0	; () banked
  8006  0009D6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8007  0009D8  0E00               	movlw	0
  8008  0009DA  0100               	movlb	0	; () banked
  8009  0009DC  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8010  0009DE  0E00               	movlw	0
  8011  0009E0  0100               	movlb	0	; () banked
  8012  0009E2  6F74               	movwf	oled_putString@start_page& (0+255),b
  8013  0009E4  EC89  F030         	call	_oled_putString	;wreg free
  8014                           
  8015                           ;MOTEapp.c: 711: oled_putString("    Display    ",0,1);
  8016  0009E8  0E53               	movlw	low STR_103
  8017  0009EA  0100               	movlb	0	; () banked
  8018  0009EC  6F71               	movwf	oled_putString@string& (0+255),b
  8019  0009EE  0E7C               	movlw	high STR_103
  8020  0009F0  0100               	movlb	0	; () banked
  8021  0009F2  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8022  0009F4  0E00               	movlw	0
  8023  0009F6  0100               	movlb	0	; () banked
  8024  0009F8  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8025  0009FA  0E01               	movlw	1
  8026  0009FC  0100               	movlb	0	; () banked
  8027  0009FE  6F74               	movwf	oled_putString@start_page& (0+255),b
  8028  000A00  EC89  F030         	call	_oled_putString	;wreg free
  8029                           
  8030                           ;MOTEapp.c: 712: oled_putString("(NAV)    (SEL) ",0,3);
  8031  000A04  0E83               	movlw	low STR_77
  8032  000A06  0100               	movlb	0	; () banked
  8033  000A08  6F71               	movwf	oled_putString@string& (0+255),b
  8034  000A0A  0E7C               	movlw	high STR_77
  8035  000A0C  0100               	movlb	0	; () banked
  8036  000A0E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8037  000A10  0E00               	movlw	0
  8038  000A12  0100               	movlb	0	; () banked
  8039  000A14  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8040  000A16  0E03               	movlw	3
  8041  000A18  0100               	movlb	0	; () banked
  8042  000A1A  6F74               	movwf	oled_putString@start_page& (0+255),b
  8043  000A1C  EC89  F030         	call	_oled_putString	;wreg free
  8044                           
  8045                           ;MOTEapp.c: 713: runningState = runningSensor;
  8046  000A20  0E01               	movlw	1
  8047  000A22  0100               	movlb	0	; () banked
  8048  000A24  6FE9               	movwf	_runningState& (0+255),b
  8049                           
  8050                           ;MOTEapp.c: 714: }
  8051  000A26  0012               	return	
  8052  000A28                     l14163:
  8053                           
  8054                           ; BSR set to: 0
  8055                           ;MOTEapp.c: 715: else if (selectButton)
  8056  000A28  0100               	movlb	0	; () banked
  8057  000A2A  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8058  000A2C  0100               	movlb	0	; () banked
  8059  000A2E  B4D8               	btfsc	status,2,c
  8060  000A30  0012               	return	
  8061                           
  8062                           ; BSR set to: 0
  8063                           ;MOTEapp.c: 716: {
  8064                           ;MOTEapp.c: 718: oled_clear();
  8065  000A32  ECA5  F038         	call	_oled_clear	;wreg free
  8066                           
  8067                           ;MOTEapp.c: 720: LATAbits.LATA7 = 0;
  8068  000A36  9E89               	bcf	3977,7,c	;volatile
  8069                           
  8070                           ;MOTEapp.c: 722: oled_putString("Downlink Display",0,0);
  8071  000A38  0E42               	movlw	low STR_105
  8072  000A3A  0100               	movlb	0	; () banked
  8073  000A3C  6F71               	movwf	oled_putString@string& (0+255),b
  8074  000A3E  0E7C               	movlw	high STR_105
  8075  000A40  0100               	movlb	0	; () banked
  8076  000A42  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8077  000A44  0E00               	movlw	0
  8078  000A46  0100               	movlb	0	; () banked
  8079  000A48  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8080  000A4A  0E00               	movlw	0
  8081  000A4C  0100               	movlb	0	; () banked
  8082  000A4E  6F74               	movwf	oled_putString@start_page& (0+255),b
  8083  000A50  EC89  F030         	call	_oled_putString	;wreg free
  8084                           
  8085                           ;MOTEapp.c: 724: oled_putString("Rx Port# ",0,1);
  8086  000A54  0ECA               	movlw	low STR_106
  8087  000A56  0100               	movlb	0	; () banked
  8088  000A58  6F71               	movwf	oled_putString@string& (0+255),b
  8089  000A5A  0E7E               	movlw	high STR_106
  8090  000A5C  0100               	movlb	0	; () banked
  8091  000A5E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8092  000A60  0E00               	movlw	0
  8093  000A62  0100               	movlb	0	; () banked
  8094  000A64  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8095  000A66  0E01               	movlw	1
  8096  000A68  0100               	movlb	0	; () banked
  8097  000A6A  6F74               	movwf	oled_putString@start_page& (0+255),b
  8098  000A6C  EC89  F030         	call	_oled_putString	;wreg free
  8099                           
  8100                           ;MOTEapp.c: 725: oled_putString(&responsePortNum,9,1);
  8101  000A70  0EF0               	movlw	low _responsePortNum
  8102  000A72  0100               	movlb	0	; () banked
  8103  000A74  6F71               	movwf	oled_putString@string& (0+255),b
  8104  000A76  0E01               	movlw	high _responsePortNum
  8105  000A78  0100               	movlb	0	; () banked
  8106  000A7A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8107  000A7C  0E09               	movlw	9
  8108  000A7E  0100               	movlb	0	; () banked
  8109  000A80  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8110  000A82  0E01               	movlw	1
  8111  000A84  0100               	movlb	0	; () banked
  8112  000A86  6F74               	movwf	oled_putString@start_page& (0+255),b
  8113  000A88  EC89  F030         	call	_oled_putString	;wreg free
  8114                           
  8115                           ;MOTEapp.c: 727: oled_putString("Data: ",0,2);
  8116  000A8C  0E51               	movlw	low (STR_86+5)
  8117  000A8E  0100               	movlb	0	; () banked
  8118  000A90  6F71               	movwf	oled_putString@string& (0+255),b
  8119  000A92  0E7E               	movlw	high (STR_86+5)
  8120  000A94  0100               	movlb	0	; () banked
  8121  000A96  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8122  000A98  0E00               	movlw	0
  8123  000A9A  0100               	movlb	0	; () banked
  8124  000A9C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8125  000A9E  0E02               	movlw	2
  8126  000AA0  0100               	movlb	0	; () banked
  8127  000AA2  6F74               	movwf	oled_putString@start_page& (0+255),b
  8128  000AA4  EC89  F030         	call	_oled_putString	;wreg free
  8129                           
  8130                           ;MOTEapp.c: 728: oled_putString(&responseData[0],6,2);
  8131  000AA8  0E9D               	movlw	low _responseData
  8132  000AAA  0100               	movlb	0	; () banked
  8133  000AAC  6F71               	movwf	oled_putString@string& (0+255),b
  8134  000AAE  0E01               	movlw	high _responseData
  8135  000AB0  0100               	movlb	0	; () banked
  8136  000AB2  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8137  000AB4  0E06               	movlw	6
  8138  000AB6  0100               	movlb	0	; () banked
  8139  000AB8  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8140  000ABA  0E02               	movlw	2
  8141  000ABC  0100               	movlb	0	; () banked
  8142  000ABE  6F74               	movwf	oled_putString@start_page& (0+255),b
  8143  000AC0  EC89  F030         	call	_oled_putString	;wreg free
  8144                           
  8145                           ;MOTEapp.c: 730: oled_putString(&responseData[10],0,3);
  8146  000AC4  0EA7               	movlw	low (_responseData+10)
  8147  000AC6  0100               	movlb	0	; () banked
  8148  000AC8  6F71               	movwf	oled_putString@string& (0+255),b
  8149  000ACA  0E01               	movlw	high (_responseData+10)
  8150  000ACC  0100               	movlb	0	; () banked
  8151  000ACE  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8152  000AD0  0E00               	movlw	0
  8153  000AD2  0100               	movlb	0	; () banked
  8154  000AD4  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8155  000AD6  0E03               	movlw	3
  8156  000AD8  0100               	movlb	0	; () banked
  8157  000ADA  6F74               	movwf	oled_putString@start_page& (0+255),b
  8158  000ADC  EC89  F030         	call	_oled_putString	;wreg free
  8159                           
  8160                           ;MOTEapp.c: 732: runningState = runningDownlinkDisplay;
  8161  000AE0  0E0B               	movlw	11
  8162  000AE2  0100               	movlb	0	; () banked
  8163  000AE4  6FE9               	movwf	_runningState& (0+255),b
  8164                           
  8165                           ; BSR set to: 0
  8166                           ;MOTEapp.c: 733: }
  8167                           ;MOTEapp.c: 734: break;
  8168                           
  8169                           ; BSR set to: 0
  8170  000AE6  0012               	return	
  8171  000AE8                     l14183:
  8172                           
  8173                           ; BSR set to: 0
  8174                           ;MOTEapp.c: 736: if ( (changeStates) || (selectButton) )
  8175  000AE8  0100               	movlb	0	; () banked
  8176  000AEA  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8177  000AEC  0100               	movlb	0	; () banked
  8178  000AEE  A4D8               	btfss	status,2,c
  8179  000AF0  D007               	goto	l14187
  8180                           
  8181                           ; BSR set to: 0
  8182  000AF2  0100               	movlb	0	; () banked
  8183  000AF4  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8184  000AF6  0100               	movlb	0	; () banked
  8185  000AF8  A4D8               	btfss	status,2,c
  8186  000AFA  D002               	goto	l14187
  8187  000AFC  0012               	return	
  8188  000AFE  D000               	goto	l14187
  8189  000B00                     l14187:
  8190                           
  8191                           ; BSR set to: 0
  8192                           ;MOTEapp.c: 737: {
  8193                           ;MOTEapp.c: 738: oled_clear();
  8194  000B00  ECA5  F038         	call	_oled_clear	;wreg free
  8195                           
  8196                           ;MOTEapp.c: 739: oled_putString(" View Downlink  ",0,0);
  8197  000B04  0E10               	movlw	low STR_78
  8198  000B06  0100               	movlb	0	; () banked
  8199  000B08  6F71               	movwf	oled_putString@string& (0+255),b
  8200  000B0A  0E7B               	movlw	high STR_78
  8201  000B0C  0100               	movlb	0	; () banked
  8202  000B0E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8203  000B10  0E00               	movlw	0
  8204  000B12  0100               	movlb	0	; () banked
  8205  000B14  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8206  000B16  0E00               	movlw	0
  8207  000B18  0100               	movlb	0	; () banked
  8208  000B1A  6F74               	movwf	oled_putString@start_page& (0+255),b
  8209  000B1C  EC89  F030         	call	_oled_putString	;wreg free
  8210                           
  8211                           ;MOTEapp.c: 740: oled_putString("  Last Message  ",0,1);
  8212  000B20  0EFF               	movlw	low STR_79
  8213  000B22  0100               	movlb	0	; () banked
  8214  000B24  6F71               	movwf	oled_putString@string& (0+255),b
  8215  000B26  0E7A               	movlw	high STR_79
  8216  000B28  0100               	movlb	0	; () banked
  8217  000B2A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8218  000B2C  0E00               	movlw	0
  8219  000B2E  0100               	movlb	0	; () banked
  8220  000B30  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8221  000B32  0E01               	movlw	1
  8222  000B34  0100               	movlb	0	; () banked
  8223  000B36  6F74               	movwf	oled_putString@start_page& (0+255),b
  8224  000B38  EC89  F030         	call	_oled_putString	;wreg free
  8225                           
  8226                           ;MOTEapp.c: 741: oled_putString("(NAV)    (SEL) ",0,3);
  8227  000B3C  0E83               	movlw	low STR_77
  8228  000B3E  0100               	movlb	0	; () banked
  8229  000B40  6F71               	movwf	oled_putString@string& (0+255),b
  8230  000B42  0E7C               	movlw	high STR_77
  8231  000B44  0100               	movlb	0	; () banked
  8232  000B46  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8233  000B48  0E00               	movlw	0
  8234  000B4A  0100               	movlb	0	; () banked
  8235  000B4C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8236  000B4E  0E03               	movlw	3
  8237  000B50  0100               	movlb	0	; () banked
  8238  000B52  6F74               	movwf	oled_putString@start_page& (0+255),b
  8239  000B54  EC89  F030         	call	_oled_putString	;wreg free
  8240                           
  8241                           ;MOTEapp.c: 742: runningState = runningDownlink;
  8242  000B58  0E0A               	movlw	10
  8243  000B5A  0100               	movlb	0	; () banked
  8244  000B5C  6FE9               	movwf	_runningState& (0+255),b
  8245                           
  8246                           ; BSR set to: 0
  8247                           ;MOTEapp.c: 743: }
  8248                           ;MOTEapp.c: 744: break;
  8249  000B5E  0012               	return	
  8250  000B60                     l14197:
  8251                           
  8252                           ; BSR set to: 0
  8253                           ;MOTEapp.c: 746: if (changeStates)
  8254  000B60  0100               	movlb	0	; () banked
  8255  000B62  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8256  000B64  0100               	movlb	0	; () banked
  8257  000B66  B4D8               	btfsc	status,2,c
  8258  000B68  D043               	goto	l14211
  8259                           
  8260                           ; BSR set to: 0
  8261                           ;MOTEapp.c: 747: {
  8262                           ;MOTEapp.c: 748: oled_clear();
  8263  000B6A  ECA5  F038         	call	_oled_clear	;wreg free
  8264                           
  8265                           ;MOTEapp.c: 749: oled_putString("Menu Has Timeout",0,0);
  8266  000B6E  0E20               	movlw	low STR_111
  8267  000B70  0100               	movlb	0	; () banked
  8268  000B72  6F71               	movwf	oled_putString@string& (0+255),b
  8269  000B74  0E7C               	movlw	high STR_111
  8270  000B76  0100               	movlb	0	; () banked
  8271  000B78  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8272  000B7A  0E00               	movlw	0
  8273  000B7C  0100               	movlb	0	; () banked
  8274  000B7E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8275  000B80  0E00               	movlw	0
  8276  000B82  0100               	movlb	0	; () banked
  8277  000B84  6F74               	movwf	oled_putString@start_page& (0+255),b
  8278  000B86  EC89  F030         	call	_oled_putString	;wreg free
  8279                           
  8280                           ;MOTEapp.c: 750: if (menuTimeout)
  8281  000B8A  0100               	movlb	0	; () banked
  8282  000B8C  51FA               	movf	_menuTimeout& (0+255),w,b
  8283  000B8E  B4D8               	btfsc	status,2,c
  8284  000B90  D00F               	goto	l14207
  8285                           
  8286                           ; BSR set to: 0
  8287                           ;MOTEapp.c: 751: oled_putString("    Enabled   ", 0,2);
  8288  000B92  0ED3               	movlw	low STR_112
  8289  000B94  0100               	movlb	0	; () banked
  8290  000B96  6F71               	movwf	oled_putString@string& (0+255),b
  8291  000B98  0E7C               	movlw	high STR_112
  8292  000B9A  0100               	movlb	0	; () banked
  8293  000B9C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8294  000B9E  0E00               	movlw	0
  8295  000BA0  0100               	movlb	0	; () banked
  8296  000BA2  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8297  000BA4  0E02               	movlw	2
  8298  000BA6  0100               	movlb	0	; () banked
  8299  000BA8  6F74               	movwf	oled_putString@start_page& (0+255),b
  8300  000BAA  EC89  F030         	call	_oled_putString	;wreg free
  8301  000BAE  D00E               	goto	l517
  8302  000BB0                     l14207:
  8303                           
  8304                           ;MOTEapp.c: 752: else
  8305                           ;MOTEapp.c: 753: oled_putString("    Disabled  ", 0,2);
  8306  000BB0  0EE2               	movlw	low STR_113
  8307  000BB2  0100               	movlb	0	; () banked
  8308  000BB4  6F71               	movwf	oled_putString@string& (0+255),b
  8309  000BB6  0E7C               	movlw	high STR_113
  8310  000BB8  0100               	movlb	0	; () banked
  8311  000BBA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8312  000BBC  0E00               	movlw	0
  8313  000BBE  0100               	movlb	0	; () banked
  8314  000BC0  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8315  000BC2  0E02               	movlw	2
  8316  000BC4  0100               	movlb	0	; () banked
  8317  000BC6  6F74               	movwf	oled_putString@start_page& (0+255),b
  8318  000BC8  EC89  F030         	call	_oled_putString	;wreg free
  8319  000BCC                     l517:
  8320                           
  8321                           ;MOTEapp.c: 754: oled_putString("(NAV)    (CNG) ",0,3);
  8322  000BCC  0E73               	movlw	low STR_114
  8323  000BCE  0100               	movlb	0	; () banked
  8324  000BD0  6F71               	movwf	oled_putString@string& (0+255),b
  8325  000BD2  0E7C               	movlw	high STR_114
  8326  000BD4  0100               	movlb	0	; () banked
  8327  000BD6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8328  000BD8  0E00               	movlw	0
  8329  000BDA  0100               	movlb	0	; () banked
  8330  000BDC  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8331  000BDE  0E03               	movlw	3
  8332  000BE0  0100               	movlb	0	; () banked
  8333  000BE2  6F74               	movwf	oled_putString@start_page& (0+255),b
  8334  000BE4  EC89  F030         	call	_oled_putString	;wreg free
  8335                           
  8336                           ;MOTEapp.c: 755: runningState = runningMenuTimeout;
  8337  000BE8  0E0C               	movlw	12
  8338  000BEA  0100               	movlb	0	; () banked
  8339  000BEC  6FE9               	movwf	_runningState& (0+255),b
  8340                           
  8341                           ;MOTEapp.c: 756: }
  8342  000BEE  0012               	return	
  8343  000BF0                     l14211:
  8344                           
  8345                           ; BSR set to: 0
  8346                           ;MOTEapp.c: 757: else if (selectButton)
  8347  000BF0  0100               	movlb	0	; () banked
  8348  000BF2  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8349  000BF4  0100               	movlb	0	; () banked
  8350  000BF6  B4D8               	btfsc	status,2,c
  8351  000BF8  0012               	return	
  8352                           
  8353                           ; BSR set to: 0
  8354                           ;MOTEapp.c: 758: {
  8355                           ;MOTEapp.c: 759: oled_clear();
  8356  000BFA  ECA5  F038         	call	_oled_clear	;wreg free
  8357                           
  8358                           ;MOTEapp.c: 760: oled_putString("  Sensor Data  ",0,0);
  8359  000BFE  0E63               	movlw	low STR_102
  8360  000C00  0100               	movlb	0	; () banked
  8361  000C02  6F71               	movwf	oled_putString@string& (0+255),b
  8362  000C04  0E7C               	movlw	high STR_102
  8363  000C06  0100               	movlb	0	; () banked
  8364  000C08  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8365  000C0A  0E00               	movlw	0
  8366  000C0C  0100               	movlb	0	; () banked
  8367  000C0E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8368  000C10  0E00               	movlw	0
  8369  000C12  0100               	movlb	0	; () banked
  8370  000C14  6F74               	movwf	oled_putString@start_page& (0+255),b
  8371  000C16  EC89  F030         	call	_oled_putString	;wreg free
  8372                           
  8373                           ;MOTEapp.c: 761: oled_putString("Light:",0,1);
  8374  000C1A  0E80               	movlw	low STR_116
  8375  000C1C  0100               	movlb	0	; () banked
  8376  000C1E  6F71               	movwf	oled_putString@string& (0+255),b
  8377  000C20  0E7F               	movlw	high STR_116
  8378  000C22  0100               	movlb	0	; () banked
  8379  000C24  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8380  000C26  0E00               	movlw	0
  8381  000C28  0100               	movlb	0	; () banked
  8382  000C2A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8383  000C2C  0E01               	movlw	1
  8384  000C2E  0100               	movlb	0	; () banked
  8385  000C30  6F74               	movwf	oled_putString@start_page& (0+255),b
  8386  000C32  EC89  F030         	call	_oled_putString	;wreg free
  8387                           
  8388                           ;MOTEapp.c: 762: oled_putString("Temp :",0,2);
  8389  000C36  0E79               	movlw	low STR_117
  8390  000C38  0100               	movlb	0	; () banked
  8391  000C3A  6F71               	movwf	oled_putString@string& (0+255),b
  8392  000C3C  0E7F               	movlw	high STR_117
  8393  000C3E  0100               	movlb	0	; () banked
  8394  000C40  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8395  000C42  0E00               	movlw	0
  8396  000C44  0100               	movlb	0	; () banked
  8397  000C46  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8398  000C48  0E02               	movlw	2
  8399  000C4A  0100               	movlb	0	; () banked
  8400  000C4C  6F74               	movwf	oled_putString@start_page& (0+255),b
  8401  000C4E  EC89  F030         	call	_oled_putString	;wreg free
  8402                           
  8403                           ;MOTEapp.c: 763: oled_putString("C",10,2);
  8404  000C52  0EFA               	movlw	low STR_118
  8405  000C54  0100               	movlb	0	; () banked
  8406  000C56  6F71               	movwf	oled_putString@string& (0+255),b
  8407  000C58  0E7F               	movlw	high STR_118
  8408  000C5A  0100               	movlb	0	; () banked
  8409  000C5C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8410  000C5E  0E0A               	movlw	10
  8411  000C60  0100               	movlb	0	; () banked
  8412  000C62  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8413  000C64  0E02               	movlw	2
  8414  000C66  0100               	movlb	0	; () banked
  8415  000C68  6F74               	movwf	oled_putString@start_page& (0+255),b
  8416  000C6A  EC89  F030         	call	_oled_putString	;wreg free
  8417                           
  8418                           ;MOTEapp.c: 765: moteApp_setSensorsInput();
  8419  000C6E  EC5C  F02E         	call	_moteApp_setSensorsInput	;wreg free
  8420                           
  8421                           ;MOTEapp.c: 766: runningState = runningSensorMenu;
  8422  000C72  0E02               	movlw	2
  8423  000C74  0100               	movlb	0	; () banked
  8424  000C76  6FE9               	movwf	_runningState& (0+255),b
  8425                           
  8426                           ; BSR set to: 0
  8427                           ;MOTEapp.c: 767: }
  8428                           ;MOTEapp.c: 768: break;
  8429                           
  8430                           ; BSR set to: 0
  8431  000C78  0012               	return	
  8432  000C7A                     l14227:
  8433                           
  8434                           ; BSR set to: 0
  8435                           ;MOTEapp.c: 770: if (changeStates)
  8436  000C7A  0100               	movlb	0	; () banked
  8437  000C7C  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8438  000C7E  0100               	movlb	0	; () banked
  8439  000C80  B4D8               	btfsc	status,2,c
  8440  000C82  D0BD               	goto	l14259
  8441                           
  8442                           ; BSR set to: 0
  8443                           ;MOTEapp.c: 771: {
  8444                           ;MOTEapp.c: 772: oled_clear();
  8445  000C84  ECA5  F038         	call	_oled_clear	;wreg free
  8446                           
  8447                           ;MOTEapp.c: 773: oled_putString("Periodic Uplink ",0,0);
  8448  000C88  0E76               	movlw	low STR_119
  8449  000C8A  0100               	movlb	0	; () banked
  8450  000C8C  6F71               	movwf	oled_putString@string& (0+255),b
  8451  000C8E  0E7B               	movlw	high STR_119
  8452  000C90  0100               	movlb	0	; () banked
  8453  000C92  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8454  000C94  0E00               	movlw	0
  8455  000C96  0100               	movlb	0	; () banked
  8456  000C98  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8457  000C9A  0E00               	movlw	0
  8458  000C9C  0100               	movlb	0	; () banked
  8459  000C9E  6F74               	movwf	oled_putString@start_page& (0+255),b
  8460  000CA0  EC89  F030         	call	_oled_putString	;wreg free
  8461                           
  8462                           ;MOTEapp.c: 774: oled_putString("Tx Event Timing ",0,1);
  8463  000CA4  0E65               	movlw	low STR_120
  8464  000CA6  0100               	movlb	0	; () banked
  8465  000CA8  6F71               	movwf	oled_putString@string& (0+255),b
  8466  000CAA  0E7B               	movlw	high STR_120
  8467  000CAC  0100               	movlb	0	; () banked
  8468  000CAE  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8469  000CB0  0E00               	movlw	0
  8470  000CB2  0100               	movlb	0	; () banked
  8471  000CB4  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8472  000CB6  0E01               	movlw	1
  8473  000CB8  0100               	movlb	0	; () banked
  8474  000CBA  6F74               	movwf	oled_putString@start_page& (0+255),b
  8475  000CBC  EC89  F030         	call	_oled_putString	;wreg free
  8476                           
  8477                           ;MOTEapp.c: 775: oled_putString("Every:",0,2);
  8478  000CC0  0E87               	movlw	low STR_121
  8479  000CC2  0100               	movlb	0	; () banked
  8480  000CC4  6F71               	movwf	oled_putString@string& (0+255),b
  8481  000CC6  0E7F               	movlw	high STR_121
  8482  000CC8  0100               	movlb	0	; () banked
  8483  000CCA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8484  000CCC  0E00               	movlw	0
  8485  000CCE  0100               	movlb	0	; () banked
  8486  000CD0  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8487  000CD2  0E02               	movlw	2
  8488  000CD4  0100               	movlb	0	; () banked
  8489  000CD6  6F74               	movwf	oled_putString@start_page& (0+255),b
  8490  000CD8  EC89  F030         	call	_oled_putString	;wreg free
  8491                           
  8492                           ;MOTEapp.c: 776: oled_putString("Mins",12,2);
  8493  000CDC  0EC2               	movlw	low STR_122
  8494  000CDE  0100               	movlb	0	; () banked
  8495  000CE0  6F71               	movwf	oled_putString@string& (0+255),b
  8496  000CE2  0E7F               	movlw	high STR_122
  8497  000CE4  0100               	movlb	0	; () banked
  8498  000CE6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8499  000CE8  0E0C               	movlw	12
  8500  000CEA  0100               	movlb	0	; () banked
  8501  000CEC  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8502  000CEE  0E02               	movlw	2
  8503  000CF0  0100               	movlb	0	; () banked
  8504  000CF2  6F74               	movwf	oled_putString@start_page& (0+255),b
  8505  000CF4  EC89  F030         	call	_oled_putString	;wreg free
  8506                           
  8507                           ;MOTEapp.c: 778: switch (periodicUpValue)
  8508  000CF8  D05B               	goto	l14253
  8509                           
  8510                           ;MOTEapp.c: 779: {
  8511                           ;MOTEapp.c: 780: default:
  8512  000CFA  D000               	goto	l14239
  8513  000CFC                     l14239:
  8514                           
  8515                           ;MOTEapp.c: 782: oled_putString("5",7,2);
  8516  000CFC  0ECB               	movlw	low (STR_169+11)
  8517  000CFE  0100               	movlb	0	; () banked
  8518  000D00  6F71               	movwf	oled_putString@string& (0+255),b
  8519  000D02  0E7D               	movlw	high (STR_169+11)
  8520  000D04  0100               	movlb	0	; () banked
  8521  000D06  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8522  000D08  0E07               	movlw	7
  8523  000D0A  0100               	movlb	0	; () banked
  8524  000D0C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8525  000D0E  0E02               	movlw	2
  8526  000D10  0100               	movlb	0	; () banked
  8527  000D12  6F74               	movwf	oled_putString@start_page& (0+255),b
  8528  000D14  EC89  F030         	call	_oled_putString	;wreg free
  8529                           
  8530                           ;MOTEapp.c: 783: break;
  8531  000D18  D060               	goto	l14255
  8532  000D1A                     l14241:
  8533                           
  8534                           ;MOTEapp.c: 785: oled_putString("10",7,2);
  8535  000D1A  0EE0               	movlw	low (STR_146+1)
  8536  000D1C  0100               	movlb	0	; () banked
  8537  000D1E  6F71               	movwf	oled_putString@string& (0+255),b
  8538  000D20  0E7F               	movlw	high (STR_146+1)
  8539  000D22  0100               	movlb	0	; () banked
  8540  000D24  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8541  000D26  0E07               	movlw	7
  8542  000D28  0100               	movlb	0	; () banked
  8543  000D2A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8544  000D2C  0E02               	movlw	2
  8545  000D2E  0100               	movlb	0	; () banked
  8546  000D30  6F74               	movwf	oled_putString@start_page& (0+255),b
  8547  000D32  EC89  F030         	call	_oled_putString	;wreg free
  8548                           
  8549                           ;MOTEapp.c: 786: break;
  8550  000D36  D051               	goto	l14255
  8551  000D38                     l14243:
  8552                           
  8553                           ;MOTEapp.c: 788: oled_putString("15",7,2);
  8554  000D38  0EEC               	movlw	low (STR_147+1)
  8555  000D3A  0100               	movlb	0	; () banked
  8556  000D3C  6F71               	movwf	oled_putString@string& (0+255),b
  8557  000D3E  0E7F               	movlw	high (STR_147+1)
  8558  000D40  0100               	movlb	0	; () banked
  8559  000D42  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8560  000D44  0E07               	movlw	7
  8561  000D46  0100               	movlb	0	; () banked
  8562  000D48  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8563  000D4A  0E02               	movlw	2
  8564  000D4C  0100               	movlb	0	; () banked
  8565  000D4E  6F74               	movwf	oled_putString@start_page& (0+255),b
  8566  000D50  EC89  F030         	call	_oled_putString	;wreg free
  8567                           
  8568                           ;MOTEapp.c: 789: break;
  8569  000D54  D042               	goto	l14255
  8570  000D56                     l14245:
  8571                           
  8572                           ;MOTEapp.c: 791: oled_putString("30",7,2);
  8573  000D56  0EE4               	movlw	low (STR_148+1)
  8574  000D58  0100               	movlb	0	; () banked
  8575  000D5A  6F71               	movwf	oled_putString@string& (0+255),b
  8576  000D5C  0E7F               	movlw	high (STR_148+1)
  8577  000D5E  0100               	movlb	0	; () banked
  8578  000D60  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8579  000D62  0E07               	movlw	7
  8580  000D64  0100               	movlb	0	; () banked
  8581  000D66  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8582  000D68  0E02               	movlw	2
  8583  000D6A  0100               	movlb	0	; () banked
  8584  000D6C  6F74               	movwf	oled_putString@start_page& (0+255),b
  8585  000D6E  EC89  F030         	call	_oled_putString	;wreg free
  8586                           
  8587                           ;MOTEapp.c: 792: break;
  8588  000D72  D033               	goto	l14255
  8589  000D74                     l14247:
  8590                           
  8591                           ;MOTEapp.c: 794: oled_putString("60",7,2);
  8592  000D74  0EE8               	movlw	low (STR_149+1)
  8593  000D76  0100               	movlb	0	; () banked
  8594  000D78  6F71               	movwf	oled_putString@string& (0+255),b
  8595  000D7A  0E7F               	movlw	high (STR_149+1)
  8596  000D7C  0100               	movlb	0	; () banked
  8597  000D7E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8598  000D80  0E07               	movlw	7
  8599  000D82  0100               	movlb	0	; () banked
  8600  000D84  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8601  000D86  0E02               	movlw	2
  8602  000D88  0100               	movlb	0	; () banked
  8603  000D8A  6F74               	movwf	oled_putString@start_page& (0+255),b
  8604  000D8C  EC89  F030         	call	_oled_putString	;wreg free
  8605                           
  8606                           ;MOTEapp.c: 795: break;
  8607  000D90  D024               	goto	l14255
  8608  000D92                     l14249:
  8609                           
  8610                           ;MOTEapp.c: 797: oled_putString("OFF",7,2);
  8611  000D92  0EEF               	movlw	low STR_128
  8612  000D94  0100               	movlb	0	; () banked
  8613  000D96  6F71               	movwf	oled_putString@string& (0+255),b
  8614  000D98  0E7F               	movlw	high STR_128
  8615  000D9A  0100               	movlb	0	; () banked
  8616  000D9C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8617  000D9E  0E07               	movlw	7
  8618  000DA0  0100               	movlb	0	; () banked
  8619  000DA2  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8620  000DA4  0E02               	movlw	2
  8621  000DA6  0100               	movlb	0	; () banked
  8622  000DA8  6F74               	movwf	oled_putString@start_page& (0+255),b
  8623  000DAA  EC89  F030         	call	_oled_putString	;wreg free
  8624                           
  8625                           ;MOTEapp.c: 799: }
  8626                           
  8627                           ;MOTEapp.c: 798: break;
  8628  000DAE  D015               	goto	l14255
  8629  000DB0                     l14253:
  8630  000DB0  0100               	movlb	0	; () banked
  8631  000DB2  51FD               	movf	_periodicUpValue& (0+255),w,b
  8632                           
  8633                           ; Switch size 1, requested type "space"
  8634                           ; Number of cases is 6, Range of values is 0 to 5
  8635                           ; switch strategies available:
  8636                           ; Name         Instructions Cycles
  8637                           ; simple_byte           19    10 (average)
  8638                           ;	Chosen strategy is simple_byte
  8639  000DB4  0A00               	xorlw	0	; case 0
  8640  000DB6  B4D8               	btfsc	status,2,c
  8641  000DB8  D7A1               	goto	l14239
  8642  000DBA  0A01               	xorlw	1	; case 1
  8643  000DBC  B4D8               	btfsc	status,2,c
  8644  000DBE  D7AD               	goto	l14241
  8645  000DC0  0A03               	xorlw	3	; case 2
  8646  000DC2  B4D8               	btfsc	status,2,c
  8647  000DC4  D7B9               	goto	l14243
  8648  000DC6  0A01               	xorlw	1	; case 3
  8649  000DC8  B4D8               	btfsc	status,2,c
  8650  000DCA  D7C5               	goto	l14245
  8651  000DCC  0A07               	xorlw	7	; case 4
  8652  000DCE  B4D8               	btfsc	status,2,c
  8653  000DD0  D7D1               	goto	l14247
  8654  000DD2  0A01               	xorlw	1	; case 5
  8655  000DD4  B4D8               	btfsc	status,2,c
  8656  000DD6  D7DD               	goto	l14249
  8657  000DD8  D791               	goto	l14239
  8658  000DDA                     l14255:
  8659                           
  8660                           ;MOTEapp.c: 800: oled_putString("(NAV)    (CNG) ",0,3);
  8661  000DDA  0E73               	movlw	low STR_114
  8662  000DDC  0100               	movlb	0	; () banked
  8663  000DDE  6F71               	movwf	oled_putString@string& (0+255),b
  8664  000DE0  0E7C               	movlw	high STR_114
  8665  000DE2  0100               	movlb	0	; () banked
  8666  000DE4  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8667  000DE6  0E00               	movlw	0
  8668  000DE8  0100               	movlb	0	; () banked
  8669  000DEA  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8670  000DEC  0E03               	movlw	3
  8671  000DEE  0100               	movlb	0	; () banked
  8672  000DF0  6F74               	movwf	oled_putString@start_page& (0+255),b
  8673  000DF2  EC89  F030         	call	_oled_putString	;wreg free
  8674                           
  8675                           ;MOTEapp.c: 801: runningState = runningPeriodicWakeUpLength;
  8676  000DF6  0E0D               	movlw	13
  8677  000DF8  0100               	movlb	0	; () banked
  8678  000DFA  6FE9               	movwf	_runningState& (0+255),b
  8679                           
  8680                           ;MOTEapp.c: 802: }
  8681  000DFC  0012               	return	
  8682  000DFE                     l14259:
  8683                           
  8684                           ; BSR set to: 0
  8685                           ;MOTEapp.c: 803: else if (selectButton)
  8686  000DFE  0100               	movlb	0	; () banked
  8687  000E00  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8688  000E02  0100               	movlb	0	; () banked
  8689  000E04  B4D8               	btfsc	status,2,c
  8690  000E06  0012               	return	
  8691                           
  8692                           ; BSR set to: 0
  8693                           ;MOTEapp.c: 804: {
  8694                           ;MOTEapp.c: 805: if (menuTimeout)
  8695  000E08  0100               	movlb	0	; () banked
  8696  000E0A  51FA               	movf	_menuTimeout& (0+255),w,b
  8697  000E0C  B4D8               	btfsc	status,2,c
  8698  000E0E  D012               	goto	l14267
  8699                           
  8700                           ; BSR set to: 0
  8701                           ;MOTEapp.c: 806: {
  8702                           ;MOTEapp.c: 807: menuTimeout = 0;
  8703  000E10  0E00               	movlw	0
  8704  000E12  0100               	movlb	0	; () banked
  8705  000E14  6FFA               	movwf	_menuTimeout& (0+255),b
  8706                           
  8707                           ; BSR set to: 0
  8708                           ;MOTEapp.c: 808: oled_putString("    Disabled  ", 0,2);
  8709  000E16  0EE2               	movlw	low STR_113
  8710  000E18  0100               	movlb	0	; () banked
  8711  000E1A  6F71               	movwf	oled_putString@string& (0+255),b
  8712  000E1C  0E7C               	movlw	high STR_113
  8713  000E1E  0100               	movlb	0	; () banked
  8714  000E20  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8715  000E22  0E00               	movlw	0
  8716  000E24  0100               	movlb	0	; () banked
  8717  000E26  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8718  000E28  0E02               	movlw	2
  8719  000E2A  0100               	movlb	0	; () banked
  8720  000E2C  6F74               	movwf	oled_putString@start_page& (0+255),b
  8721  000E2E  EC89  F030         	call	_oled_putString	;wreg free
  8722                           
  8723                           ;MOTEapp.c: 809: }
  8724  000E32  0012               	return	
  8725  000E34                     l14267:
  8726                           
  8727                           ;MOTEapp.c: 810: else
  8728                           ;MOTEapp.c: 811: {
  8729                           ;MOTEapp.c: 812: menuTimeout = 1;
  8730  000E34  0E01               	movlw	1
  8731  000E36  0100               	movlb	0	; () banked
  8732  000E38  6FFA               	movwf	_menuTimeout& (0+255),b
  8733                           
  8734                           ; BSR set to: 0
  8735                           ;MOTEapp.c: 813: oled_putString("    Enabled   ", 0,2);
  8736  000E3A  0ED3               	movlw	low STR_112
  8737  000E3C  0100               	movlb	0	; () banked
  8738  000E3E  6F71               	movwf	oled_putString@string& (0+255),b
  8739  000E40  0E7C               	movlw	high STR_112
  8740  000E42  0100               	movlb	0	; () banked
  8741  000E44  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8742  000E46  0E00               	movlw	0
  8743  000E48  0100               	movlb	0	; () banked
  8744  000E4A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8745  000E4C  0E02               	movlw	2
  8746  000E4E  0100               	movlb	0	; () banked
  8747  000E50  6F74               	movwf	oled_putString@start_page& (0+255),b
  8748  000E52  EC89  F030         	call	_oled_putString	;wreg free
  8749                           
  8750                           ;MOTEapp.c: 814: }
  8751                           ;MOTEapp.c: 815: }
  8752                           ;MOTEapp.c: 816: break;
  8753  000E56  0012               	return	
  8754  000E58                     l14271:
  8755                           
  8756                           ;MOTEapp.c: 819: if ( (changeStates) || (selectButton) )
  8757  000E58  0100               	movlb	0	; () banked
  8758  000E5A  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8759  000E5C  0100               	movlb	0	; () banked
  8760  000E5E  A4D8               	btfss	status,2,c
  8761  000E60  D007               	goto	l14275
  8762                           
  8763                           ; BSR set to: 0
  8764  000E62  0100               	movlb	0	; () banked
  8765  000E64  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8766  000E66  0100               	movlb	0	; () banked
  8767  000E68  A4D8               	btfss	status,2,c
  8768  000E6A  D002               	goto	l14275
  8769  000E6C  0012               	return	
  8770  000E6E  D000               	goto	l14275
  8771  000E70                     l14275:
  8772                           
  8773                           ; BSR set to: 0
  8774                           ;MOTEapp.c: 820: {
  8775                           ;MOTEapp.c: 821: oled_clear();
  8776  000E70  ECA5  F038         	call	_oled_clear	;wreg free
  8777                           
  8778                           ;MOTEapp.c: 822: oled_putString("  Sensor Data  ",0,0);
  8779  000E74  0E63               	movlw	low STR_102
  8780  000E76  0100               	movlb	0	; () banked
  8781  000E78  6F71               	movwf	oled_putString@string& (0+255),b
  8782  000E7A  0E7C               	movlw	high STR_102
  8783  000E7C  0100               	movlb	0	; () banked
  8784  000E7E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8785  000E80  0E00               	movlw	0
  8786  000E82  0100               	movlb	0	; () banked
  8787  000E84  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8788  000E86  0E00               	movlw	0
  8789  000E88  0100               	movlb	0	; () banked
  8790  000E8A  6F74               	movwf	oled_putString@start_page& (0+255),b
  8791  000E8C  EC89  F030         	call	_oled_putString	;wreg free
  8792                           
  8793                           ;MOTEapp.c: 823: oled_putString("    Display    ",0,1);
  8794  000E90  0E53               	movlw	low STR_103
  8795  000E92  0100               	movlb	0	; () banked
  8796  000E94  6F71               	movwf	oled_putString@string& (0+255),b
  8797  000E96  0E7C               	movlw	high STR_103
  8798  000E98  0100               	movlb	0	; () banked
  8799  000E9A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8800  000E9C  0E00               	movlw	0
  8801  000E9E  0100               	movlb	0	; () banked
  8802  000EA0  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8803  000EA2  0E01               	movlw	1
  8804  000EA4  0100               	movlb	0	; () banked
  8805  000EA6  6F74               	movwf	oled_putString@start_page& (0+255),b
  8806  000EA8  EC89  F030         	call	_oled_putString	;wreg free
  8807                           
  8808                           ;MOTEapp.c: 824: oled_putString("(NAV)    (SEL) ",0,3);
  8809  000EAC  0E83               	movlw	low STR_77
  8810  000EAE  0100               	movlb	0	; () banked
  8811  000EB0  6F71               	movwf	oled_putString@string& (0+255),b
  8812  000EB2  0E7C               	movlw	high STR_77
  8813  000EB4  0100               	movlb	0	; () banked
  8814  000EB6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8815  000EB8  0E00               	movlw	0
  8816  000EBA  0100               	movlb	0	; () banked
  8817  000EBC  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8818  000EBE  0E03               	movlw	3
  8819  000EC0  0100               	movlb	0	; () banked
  8820  000EC2  6F74               	movwf	oled_putString@start_page& (0+255),b
  8821  000EC4  EC89  F030         	call	_oled_putString	;wreg free
  8822                           
  8823                           ;MOTEapp.c: 825: runningState = runningSensor;
  8824  000EC8  0E01               	movlw	1
  8825  000ECA  0100               	movlb	0	; () banked
  8826  000ECC  6FE9               	movwf	_runningState& (0+255),b
  8827                           
  8828                           ; BSR set to: 0
  8829                           ;MOTEapp.c: 826: }
  8830                           ;MOTEapp.c: 827: break;
  8831  000ECE  0012               	return	
  8832  000ED0                     l14285:
  8833                           
  8834                           ; BSR set to: 0
  8835                           ;MOTEapp.c: 829: if (changeStates)
  8836  000ED0  0100               	movlb	0	; () banked
  8837  000ED2  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8838  000ED4  0100               	movlb	0	; () banked
  8839  000ED6  B4D8               	btfsc	status,2,c
  8840  000ED8  D0B3               	goto	l14315
  8841                           
  8842                           ; BSR set to: 0
  8843                           ;MOTEapp.c: 830: {
  8844                           ;MOTEapp.c: 831: oled_clear();
  8845  000EDA  ECA5  F038         	call	_oled_clear	;wreg free
  8846                           
  8847                           ;MOTEapp.c: 832: oled_putString("Select Data Rate",0,0);
  8848  000EDE  0EED               	movlw	low STR_135
  8849  000EE0  0100               	movlb	0	; () banked
  8850  000EE2  6F71               	movwf	oled_putString@string& (0+255),b
  8851  000EE4  0E7B               	movlw	high STR_135
  8852  000EE6  0100               	movlb	0	; () banked
  8853  000EE8  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8854  000EEA  0E00               	movlw	0
  8855  000EEC  0100               	movlb	0	; () banked
  8856  000EEE  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8857  000EF0  0E00               	movlw	0
  8858  000EF2  0100               	movlb	0	; () banked
  8859  000EF4  6F74               	movwf	oled_putString@start_page& (0+255),b
  8860  000EF6  EC89  F030         	call	_oled_putString	;wreg free
  8861                           
  8862                           ;MOTEapp.c: 833: oled_putString("Data Rate: ",0,2);
  8863  000EFA  0E58               	movlw	low STR_136
  8864  000EFC  0100               	movlb	0	; () banked
  8865  000EFE  6F71               	movwf	oled_putString@string& (0+255),b
  8866  000F00  0E7E               	movlw	high STR_136
  8867  000F02  0100               	movlb	0	; () banked
  8868  000F04  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8869  000F06  0E00               	movlw	0
  8870  000F08  0100               	movlb	0	; () banked
  8871  000F0A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8872  000F0C  0E02               	movlw	2
  8873  000F0E  0100               	movlb	0	; () banked
  8874  000F10  6F74               	movwf	oled_putString@start_page& (0+255),b
  8875  000F12  EC89  F030         	call	_oled_putString	;wreg free
  8876                           
  8877                           ;MOTEapp.c: 834: oled_putString("(NAV)    (CNG) ",0,3);
  8878  000F16  0E73               	movlw	low STR_114
  8879  000F18  0100               	movlb	0	; () banked
  8880  000F1A  6F71               	movwf	oled_putString@string& (0+255),b
  8881  000F1C  0E7C               	movlw	high STR_114
  8882  000F1E  0100               	movlb	0	; () banked
  8883  000F20  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8884  000F22  0E00               	movlw	0
  8885  000F24  0100               	movlb	0	; () banked
  8886  000F26  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8887  000F28  0E03               	movlw	3
  8888  000F2A  0100               	movlb	0	; () banked
  8889  000F2C  6F74               	movwf	oled_putString@start_page& (0+255),b
  8890  000F2E  EC89  F030         	call	_oled_putString	;wreg free
  8891                           
  8892                           ;MOTEapp.c: 835: runningState = runningDataRateDisplay;
  8893  000F32  0E03               	movlw	3
  8894  000F34  0100               	movlb	0	; () banked
  8895  000F36  6FE9               	movwf	_runningState& (0+255),b
  8896                           
  8897                           ;MOTEapp.c: 838: switch (dataRateValue)
  8898  000F38  D06A               	goto	l14313
  8899                           
  8900                           ; BSR set to: 0
  8901                           
  8902                           ;MOTEapp.c: 839: {
  8903                           ;MOTEapp.c: 840: default:
  8904  000F3A  D000               	goto	l14297
  8905  000F3C                     l14297:
  8906                           
  8907                           ; BSR set to: 0
  8908                           ;MOTEapp.c: 842: oled_putString(" 0 ",10,2);
  8909  000F3C  0EC7               	movlw	low STR_138
  8910  000F3E  0100               	movlb	0	; () banked
  8911  000F40  6F71               	movwf	oled_putString@string& (0+255),b
  8912  000F42  0E7F               	movlw	high STR_138
  8913  000F44  0100               	movlb	0	; () banked
  8914  000F46  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8915  000F48  0E0A               	movlw	10
  8916  000F4A  0100               	movlb	0	; () banked
  8917  000F4C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8918  000F4E  0E02               	movlw	2
  8919  000F50  0100               	movlb	0	; () banked
  8920  000F52  6F74               	movwf	oled_putString@start_page& (0+255),b
  8921  000F54  EC89  F030         	call	_oled_putString	;wreg free
  8922                           
  8923                           ;MOTEapp.c: 843: break;
  8924  000F58  D073               	goto	l14315
  8925  000F5A                     l14299:
  8926                           
  8927                           ;MOTEapp.c: 845: oled_putString(" 1 ",10,2);
  8928  000F5A  0ECB               	movlw	low STR_139
  8929  000F5C  0100               	movlb	0	; () banked
  8930  000F5E  6F71               	movwf	oled_putString@string& (0+255),b
  8931  000F60  0E7F               	movlw	high STR_139
  8932  000F62  0100               	movlb	0	; () banked
  8933  000F64  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8934  000F66  0E0A               	movlw	10
  8935  000F68  0100               	movlb	0	; () banked
  8936  000F6A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8937  000F6C  0E02               	movlw	2
  8938  000F6E  0100               	movlb	0	; () banked
  8939  000F70  6F74               	movwf	oled_putString@start_page& (0+255),b
  8940  000F72  EC89  F030         	call	_oled_putString	;wreg free
  8941                           
  8942                           ;MOTEapp.c: 846: break;
  8943  000F76  D064               	goto	l14315
  8944  000F78                     l14301:
  8945                           
  8946                           ;MOTEapp.c: 848: oled_putString(" 2 ",10,2);
  8947  000F78  0ECF               	movlw	low STR_140
  8948  000F7A  0100               	movlb	0	; () banked
  8949  000F7C  6F71               	movwf	oled_putString@string& (0+255),b
  8950  000F7E  0E7F               	movlw	high STR_140
  8951  000F80  0100               	movlb	0	; () banked
  8952  000F82  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8953  000F84  0E0A               	movlw	10
  8954  000F86  0100               	movlb	0	; () banked
  8955  000F88  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8956  000F8A  0E02               	movlw	2
  8957  000F8C  0100               	movlb	0	; () banked
  8958  000F8E  6F74               	movwf	oled_putString@start_page& (0+255),b
  8959  000F90  EC89  F030         	call	_oled_putString	;wreg free
  8960                           
  8961                           ;MOTEapp.c: 849: break;
  8962  000F94  D055               	goto	l14315
  8963  000F96                     l14303:
  8964                           
  8965                           ;MOTEapp.c: 851: oled_putString(" 3 ",10,2);
  8966  000F96  0ED3               	movlw	low STR_141
  8967  000F98  0100               	movlb	0	; () banked
  8968  000F9A  6F71               	movwf	oled_putString@string& (0+255),b
  8969  000F9C  0E7F               	movlw	high STR_141
  8970  000F9E  0100               	movlb	0	; () banked
  8971  000FA0  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8972  000FA2  0E0A               	movlw	10
  8973  000FA4  0100               	movlb	0	; () banked
  8974  000FA6  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8975  000FA8  0E02               	movlw	2
  8976  000FAA  0100               	movlb	0	; () banked
  8977  000FAC  6F74               	movwf	oled_putString@start_page& (0+255),b
  8978  000FAE  EC89  F030         	call	_oled_putString	;wreg free
  8979                           
  8980                           ;MOTEapp.c: 852: break;
  8981  000FB2  D046               	goto	l14315
  8982  000FB4                     l14305:
  8983                           
  8984                           ;MOTEapp.c: 854: oled_putString(" 4 ",10,2);
  8985  000FB4  0ED7               	movlw	low STR_142
  8986  000FB6  0100               	movlb	0	; () banked
  8987  000FB8  6F71               	movwf	oled_putString@string& (0+255),b
  8988  000FBA  0E7F               	movlw	high STR_142
  8989  000FBC  0100               	movlb	0	; () banked
  8990  000FBE  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8991  000FC0  0E0A               	movlw	10
  8992  000FC2  0100               	movlb	0	; () banked
  8993  000FC4  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8994  000FC6  0E02               	movlw	2
  8995  000FC8  0100               	movlb	0	; () banked
  8996  000FCA  6F74               	movwf	oled_putString@start_page& (0+255),b
  8997  000FCC  EC89  F030         	call	_oled_putString	;wreg free
  8998                           
  8999                           ;MOTEapp.c: 855: break;
  9000  000FD0  D037               	goto	l14315
  9001  000FD2                     l14307:
  9002                           
  9003                           ;MOTEapp.c: 857: oled_putString(" 5 ",10,2);
  9004  000FD2  0EDB               	movlw	low STR_143
  9005  000FD4  0100               	movlb	0	; () banked
  9006  000FD6  6F71               	movwf	oled_putString@string& (0+255),b
  9007  000FD8  0E7F               	movlw	high STR_143
  9008  000FDA  0100               	movlb	0	; () banked
  9009  000FDC  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9010  000FDE  0E0A               	movlw	10
  9011  000FE0  0100               	movlb	0	; () banked
  9012  000FE2  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9013  000FE4  0E02               	movlw	2
  9014  000FE6  0100               	movlb	0	; () banked
  9015  000FE8  6F74               	movwf	oled_putString@start_page& (0+255),b
  9016  000FEA  EC89  F030         	call	_oled_putString	;wreg free
  9017                           
  9018                           ;MOTEapp.c: 858: break;
  9019  000FEE  D028               	goto	l14315
  9020  000FF0                     l14309:
  9021                           
  9022                           ;MOTEapp.c: 860: oled_putString("ADR",10,2);
  9023  000FF0  0EF3               	movlw	low STR_144
  9024  000FF2  0100               	movlb	0	; () banked
  9025  000FF4  6F71               	movwf	oled_putString@string& (0+255),b
  9026  000FF6  0E7F               	movlw	high STR_144
  9027  000FF8  0100               	movlb	0	; () banked
  9028  000FFA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9029  000FFC  0E0A               	movlw	10
  9030  000FFE  0100               	movlb	0	; () banked
  9031  001000  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9032  001002  0E02               	movlw	2
  9033  001004  0100               	movlb	0	; () banked
  9034  001006  6F74               	movwf	oled_putString@start_page& (0+255),b
  9035  001008  EC89  F030         	call	_oled_putString	;wreg free
  9036                           
  9037                           ;MOTEapp.c: 862: }
  9038                           
  9039                           ;MOTEapp.c: 861: break;
  9040  00100C  D019               	goto	l14315
  9041  00100E                     l14313:
  9042  00100E  0100               	movlb	0	; () banked
  9043  001010  51FB               	movf	_dataRateValue& (0+255),w,b
  9044                           
  9045                           ; Switch size 1, requested type "space"
  9046                           ; Number of cases is 7, Range of values is 0 to 6
  9047                           ; switch strategies available:
  9048                           ; Name         Instructions Cycles
  9049                           ; simple_byte           22    12 (average)
  9050                           ;	Chosen strategy is simple_byte
  9051  001012  0A00               	xorlw	0	; case 0
  9052  001014  B4D8               	btfsc	status,2,c
  9053  001016  D792               	goto	l14297
  9054  001018  0A01               	xorlw	1	; case 1
  9055  00101A  B4D8               	btfsc	status,2,c
  9056  00101C  D79E               	goto	l14299
  9057  00101E  0A03               	xorlw	3	; case 2
  9058  001020  B4D8               	btfsc	status,2,c
  9059  001022  D7AA               	goto	l14301
  9060  001024  0A01               	xorlw	1	; case 3
  9061  001026  B4D8               	btfsc	status,2,c
  9062  001028  D7B6               	goto	l14303
  9063  00102A  0A07               	xorlw	7	; case 4
  9064  00102C  B4D8               	btfsc	status,2,c
  9065  00102E  D7C2               	goto	l14305
  9066  001030  0A01               	xorlw	1	; case 5
  9067  001032  B4D8               	btfsc	status,2,c
  9068  001034  D7CE               	goto	l14307
  9069  001036  0A03               	xorlw	3	; case 6
  9070  001038  B4D8               	btfsc	status,2,c
  9071  00103A  D7DA               	goto	l14309
  9072  00103C  D77F               	goto	l14297
  9073                           
  9074                           ; BSR set to: 0
  9075  00103E  D000               	goto	l14315
  9076  001040                     l14315:
  9077                           
  9078                           ;MOTEapp.c: 863: }
  9079                           ;MOTEapp.c: 864: if (selectButton)
  9080  001040  0100               	movlb	0	; () banked
  9081  001042  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9082  001044  0100               	movlb	0	; () banked
  9083  001046  B4D8               	btfsc	status,2,c
  9084  001048  0012               	return	
  9085                           
  9086                           ; BSR set to: 0
  9087                           ;MOTEapp.c: 865: {
  9088                           ;MOTEapp.c: 866: if (periodicUpValue < 5)
  9089  00104A  0E05               	movlw	5
  9090  00104C  0100               	movlb	0	; () banked
  9091  00104E  61FD               	cpfslt	_periodicUpValue& (0+255),b
  9092  001050  D005               	goto	l14321
  9093  001052  D001               	goto	l14319
  9094  001054  D003               	goto	l14321
  9095  001056                     l14319:
  9096                           
  9097                           ; BSR set to: 0
  9098                           ;MOTEapp.c: 867: {
  9099                           ;MOTEapp.c: 868: periodicUpValue++;
  9100  001056  0100               	movlb	0	; () banked
  9101  001058  2BFD               	incf	_periodicUpValue& (0+255),f,b
  9102                           
  9103                           ;MOTEapp.c: 869: } else {
  9104  00105A  D070               	goto	l14347
  9105  00105C                     l14321:
  9106                           
  9107                           ; BSR set to: 0
  9108                           ;MOTEapp.c: 870: periodicUpValue = 0;
  9109  00105C  0E00               	movlw	0
  9110  00105E  0100               	movlb	0	; () banked
  9111  001060  6FFD               	movwf	_periodicUpValue& (0+255),b
  9112                           
  9113                           ; BSR set to: 0
  9114                           ;MOTEapp.c: 871: }
  9115                           ;MOTEapp.c: 873: switch (periodicUpValue)
  9116  001062  D06C               	goto	l14347
  9117                           
  9118                           ; BSR set to: 0
  9119                           
  9120                           ;MOTEapp.c: 874: {
  9121                           ;MOTEapp.c: 875: default:
  9122  001064  D000               	goto	l14323
  9123  001066                     l14323:
  9124                           
  9125                           ; BSR set to: 0
  9126                           ;MOTEapp.c: 877: periodicTimerValue = 9;
  9127  001066  0E09               	movlw	9
  9128  001068  0100               	movlb	0	; () banked
  9129  00106A  6FFC               	movwf	_periodicTimerValue& (0+255),b
  9130                           
  9131                           ; BSR set to: 0
  9132                           ;MOTEapp.c: 878: oled_putString(" 5 ",7,2);
  9133  00106C  0EDB               	movlw	low STR_143
  9134  00106E  0100               	movlb	0	; () banked
  9135  001070  6F71               	movwf	oled_putString@string& (0+255),b
  9136  001072  0E7F               	movlw	high STR_143
  9137  001074  0100               	movlb	0	; () banked
  9138  001076  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9139  001078  0E07               	movlw	7
  9140  00107A  0100               	movlb	0	; () banked
  9141  00107C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9142  00107E  0E02               	movlw	2
  9143  001080  0100               	movlb	0	; () banked
  9144  001082  6F74               	movwf	oled_putString@start_page& (0+255),b
  9145  001084  EC89  F030         	call	_oled_putString	;wreg free
  9146                           
  9147                           ;MOTEapp.c: 879: break;
  9148  001088  0012               	return	
  9149  00108A                     l14327:
  9150                           
  9151                           ;MOTEapp.c: 881: periodicTimerValue = 18;
  9152  00108A  0E12               	movlw	18
  9153  00108C  0100               	movlb	0	; () banked
  9154  00108E  6FFC               	movwf	_periodicTimerValue& (0+255),b
  9155                           
  9156                           ; BSR set to: 0
  9157                           ;MOTEapp.c: 882: oled_putString(" 10",7,2);
  9158  001090  0EDF               	movlw	low STR_146
  9159  001092  0100               	movlb	0	; () banked
  9160  001094  6F71               	movwf	oled_putString@string& (0+255),b
  9161  001096  0E7F               	movlw	high STR_146
  9162  001098  0100               	movlb	0	; () banked
  9163  00109A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9164  00109C  0E07               	movlw	7
  9165  00109E  0100               	movlb	0	; () banked
  9166  0010A0  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9167  0010A2  0E02               	movlw	2
  9168  0010A4  0100               	movlb	0	; () banked
  9169  0010A6  6F74               	movwf	oled_putString@start_page& (0+255),b
  9170  0010A8  EC89  F030         	call	_oled_putString	;wreg free
  9171                           
  9172                           ;MOTEapp.c: 883: break;
  9173  0010AC  0012               	return	
  9174  0010AE                     l14331:
  9175                           
  9176                           ;MOTEapp.c: 885: periodicTimerValue = 27;
  9177  0010AE  0E1B               	movlw	27
  9178  0010B0  0100               	movlb	0	; () banked
  9179  0010B2  6FFC               	movwf	_periodicTimerValue& (0+255),b
  9180                           
  9181                           ; BSR set to: 0
  9182                           ;MOTEapp.c: 886: oled_putString(" 15",7,2);
  9183  0010B4  0EEB               	movlw	low STR_147
  9184  0010B6  0100               	movlb	0	; () banked
  9185  0010B8  6F71               	movwf	oled_putString@string& (0+255),b
  9186  0010BA  0E7F               	movlw	high STR_147
  9187  0010BC  0100               	movlb	0	; () banked
  9188  0010BE  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9189  0010C0  0E07               	movlw	7
  9190  0010C2  0100               	movlb	0	; () banked
  9191  0010C4  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9192  0010C6  0E02               	movlw	2
  9193  0010C8  0100               	movlb	0	; () banked
  9194  0010CA  6F74               	movwf	oled_putString@start_page& (0+255),b
  9195  0010CC  EC89  F030         	call	_oled_putString	;wreg free
  9196                           
  9197                           ;MOTEapp.c: 887: break;
  9198  0010D0  0012               	return	
  9199  0010D2                     l14335:
  9200                           
  9201                           ;MOTEapp.c: 889: periodicTimerValue = 54;
  9202  0010D2  0E36               	movlw	54
  9203  0010D4  0100               	movlb	0	; () banked
  9204  0010D6  6FFC               	movwf	_periodicTimerValue& (0+255),b
  9205                           
  9206                           ; BSR set to: 0
  9207                           ;MOTEapp.c: 890: oled_putString(" 30",7,2);
  9208  0010D8  0EE3               	movlw	low STR_148
  9209  0010DA  0100               	movlb	0	; () banked
  9210  0010DC  6F71               	movwf	oled_putString@string& (0+255),b
  9211  0010DE  0E7F               	movlw	high STR_148
  9212  0010E0  0100               	movlb	0	; () banked
  9213  0010E2  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9214  0010E4  0E07               	movlw	7
  9215  0010E6  0100               	movlb	0	; () banked
  9216  0010E8  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9217  0010EA  0E02               	movlw	2
  9218  0010EC  0100               	movlb	0	; () banked
  9219  0010EE  6F74               	movwf	oled_putString@start_page& (0+255),b
  9220  0010F0  EC89  F030         	call	_oled_putString	;wreg free
  9221                           
  9222                           ;MOTEapp.c: 891: break;
  9223  0010F4  0012               	return	
  9224  0010F6                     l14339:
  9225                           
  9226                           ;MOTEapp.c: 893: periodicTimerValue = 108;
  9227  0010F6  0E6C               	movlw	108
  9228  0010F8  0100               	movlb	0	; () banked
  9229  0010FA  6FFC               	movwf	_periodicTimerValue& (0+255),b
  9230                           
  9231                           ; BSR set to: 0
  9232                           ;MOTEapp.c: 894: oled_putString(" 60",7,2);
  9233  0010FC  0EE7               	movlw	low STR_149
  9234  0010FE  0100               	movlb	0	; () banked
  9235  001100  6F71               	movwf	oled_putString@string& (0+255),b
  9236  001102  0E7F               	movlw	high STR_149
  9237  001104  0100               	movlb	0	; () banked
  9238  001106  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9239  001108  0E07               	movlw	7
  9240  00110A  0100               	movlb	0	; () banked
  9241  00110C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9242  00110E  0E02               	movlw	2
  9243  001110  0100               	movlb	0	; () banked
  9244  001112  6F74               	movwf	oled_putString@start_page& (0+255),b
  9245  001114  EC89  F030         	call	_oled_putString	;wreg free
  9246                           
  9247                           ;MOTEapp.c: 895: break;
  9248  001118  0012               	return	
  9249  00111A                     l562:
  9250                           
  9251                           ; BSR set to: 0
  9252                           ;MOTEapp.c: 897: periodicTimerValue = 255;
  9253  00111A  0100               	movlb	0	; () banked
  9254  00111C  69FC               	setf	_periodicTimerValue& (0+255),b
  9255                           
  9256                           ; BSR set to: 0
  9257                           ;MOTEapp.c: 898: oled_putString("OFF",7,2);
  9258  00111E  0EEF               	movlw	low STR_128
  9259  001120  0100               	movlb	0	; () banked
  9260  001122  6F71               	movwf	oled_putString@string& (0+255),b
  9261  001124  0E7F               	movlw	high STR_128
  9262  001126  0100               	movlb	0	; () banked
  9263  001128  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9264  00112A  0E07               	movlw	7
  9265  00112C  0100               	movlb	0	; () banked
  9266  00112E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9267  001130  0E02               	movlw	2
  9268  001132  0100               	movlb	0	; () banked
  9269  001134  6F74               	movwf	oled_putString@start_page& (0+255),b
  9270  001136  EC89  F030         	call	_oled_putString	;wreg free
  9271                           
  9272                           ;MOTEapp.c: 900: }
  9273                           
  9274                           ;MOTEapp.c: 899: break;
  9275  00113A  0012               	return	
  9276  00113C                     l14347:
  9277  00113C  0100               	movlb	0	; () banked
  9278  00113E  51FD               	movf	_periodicUpValue& (0+255),w,b
  9279                           
  9280                           ; Switch size 1, requested type "space"
  9281                           ; Number of cases is 6, Range of values is 0 to 5
  9282                           ; switch strategies available:
  9283                           ; Name         Instructions Cycles
  9284                           ; simple_byte           19    10 (average)
  9285                           ;	Chosen strategy is simple_byte
  9286  001140  0A00               	xorlw	0	; case 0
  9287  001142  B4D8               	btfsc	status,2,c
  9288  001144  D790               	goto	l14323
  9289  001146  0A01               	xorlw	1	; case 1
  9290  001148  B4D8               	btfsc	status,2,c
  9291  00114A  D79F               	goto	l14327
  9292  00114C  0A03               	xorlw	3	; case 2
  9293  00114E  B4D8               	btfsc	status,2,c
  9294  001150  D7AE               	goto	l14331
  9295  001152  0A01               	xorlw	1	; case 3
  9296  001154  B4D8               	btfsc	status,2,c
  9297  001156  D7BD               	goto	l14335
  9298  001158  0A07               	xorlw	7	; case 4
  9299  00115A  B4D8               	btfsc	status,2,c
  9300  00115C  D7CC               	goto	l14339
  9301  00115E  0A01               	xorlw	1	; case 5
  9302  001160  B4D8               	btfsc	status,2,c
  9303  001162  D7DB               	goto	l562
  9304  001164  D780               	goto	l14323
  9305                           
  9306                           ; BSR set to: 0
  9307                           ;MOTEapp.c: 901: }
  9308                           ;MOTEapp.c: 902: break;
  9309                           
  9310                           ; BSR set to: 0
  9311  001166  0012               	return	
  9312  001168                     l14349:
  9313                           
  9314                           ; BSR set to: 0
  9315                           ;MOTEapp.c: 904: if (changeStates)
  9316  001168  0100               	movlb	0	; () banked
  9317  00116A  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  9318  00116C  0100               	movlb	0	; () banked
  9319  00116E  B4D8               	btfsc	status,2,c
  9320  001170  D026               	goto	l14361
  9321                           
  9322                           ; BSR set to: 0
  9323                           ;MOTEapp.c: 905: {
  9324                           ;MOTEapp.c: 907: MOTEapp_SetDataRateSetting(dataRateValue);
  9325  001172  0100               	movlb	0	; () banked
  9326  001174  51FB               	movf	_dataRateValue& (0+255),w,b
  9327  001176  ECCD  F01A         	call	_MOTEapp_SetDataRateSetting
  9328                           
  9329                           ;MOTEapp.c: 909: oled_clear();
  9330  00117A  ECA5  F038         	call	_oled_clear	;wreg free
  9331                           
  9332                           ;MOTEapp.c: 910: oled_putString("Enter Sleep Mode",0,0);
  9333  00117E  0ECB               	movlw	low STR_151
  9334  001180  0100               	movlb	0	; () banked
  9335  001182  6F71               	movwf	oled_putString@string& (0+255),b
  9336  001184  0E7B               	movlw	high STR_151
  9337  001186  0100               	movlb	0	; () banked
  9338  001188  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9339  00118A  0E00               	movlw	0
  9340  00118C  0100               	movlb	0	; () banked
  9341  00118E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9342  001190  0E00               	movlw	0
  9343  001192  0100               	movlb	0	; () banked
  9344  001194  6F74               	movwf	oled_putString@start_page& (0+255),b
  9345  001196  EC89  F030         	call	_oled_putString	;wreg free
  9346                           
  9347                           ;MOTEapp.c: 911: oled_putString("(NAV)    (SLP) ",0,3);
  9348  00119A  0E93               	movlw	low STR_152
  9349  00119C  0100               	movlb	0	; () banked
  9350  00119E  6F71               	movwf	oled_putString@string& (0+255),b
  9351  0011A0  0E7C               	movlw	high STR_152
  9352  0011A2  0100               	movlb	0	; () banked
  9353  0011A4  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9354  0011A6  0E00               	movlw	0
  9355  0011A8  0100               	movlb	0	; () banked
  9356  0011AA  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9357  0011AC  0E03               	movlw	3
  9358  0011AE  0100               	movlb	0	; () banked
  9359  0011B0  6F74               	movwf	oled_putString@start_page& (0+255),b
  9360  0011B2  EC89  F030         	call	_oled_putString	;wreg free
  9361                           
  9362                           ;MOTEapp.c: 912: runningState = runningSleep;
  9363  0011B6  0E0F               	movlw	15
  9364  0011B8  0100               	movlb	0	; () banked
  9365  0011BA  6FE9               	movwf	_runningState& (0+255),b
  9366  0011BC  D000               	goto	l14361
  9367  0011BE                     l14361:
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;MOTEapp.c: 913: }
  9371                           ;MOTEapp.c: 914: if (selectButton)
  9372  0011BE  0100               	movlb	0	; () banked
  9373  0011C0  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9374  0011C2  0100               	movlb	0	; () banked
  9375  0011C4  B4D8               	btfsc	status,2,c
  9376  0011C6  0012               	return	
  9377                           
  9378                           ; BSR set to: 0
  9379                           ;MOTEapp.c: 915: {
  9380                           ;MOTEapp.c: 916: if (dataRateValue < 6)
  9381  0011C8  0E06               	movlw	6
  9382  0011CA  0100               	movlb	0	; () banked
  9383  0011CC  61FB               	cpfslt	_dataRateValue& (0+255),b
  9384  0011CE  D011               	goto	l14373
  9385  0011D0  D001               	goto	l14365
  9386  0011D2  D00F               	goto	l14373
  9387  0011D4                     l14365:
  9388                           
  9389                           ; BSR set to: 0
  9390                           ;MOTEapp.c: 917: {
  9391                           ;MOTEapp.c: 918: if ((rnModule == rn2903) && (dataRateValue > 3))
  9392  0011D4  0100               	movlb	0	; () banked
  9393  0011D6  05E2               	decf	_rnModule& (0+255),w,b
  9394  0011D8  A4D8               	btfss	status,2,c
  9395  0011DA  D008               	goto	l14371
  9396                           
  9397                           ; BSR set to: 0
  9398  0011DC  0E03               	movlw	3
  9399  0011DE  0100               	movlb	0	; () banked
  9400  0011E0  65FB               	cpfsgt	_dataRateValue& (0+255),b
  9401  0011E2  D004               	goto	l14371
  9402  0011E4  D001               	goto	l14369
  9403  0011E6  D002               	goto	l14371
  9404  0011E8                     l14369:
  9405                           
  9406                           ; BSR set to: 0
  9407                           ;MOTEapp.c: 919: dataRateValue = 6;
  9408  0011E8  0E06               	movlw	6
  9409  0011EA  D004               	goto	L5
  9410  0011EC                     l14371:
  9411                           
  9412                           ; BSR set to: 0
  9413                           ;MOTEapp.c: 920: else
  9414                           ;MOTEapp.c: 921: dataRateValue++;
  9415  0011EC  0100               	movlb	0	; () banked
  9416  0011EE  2BFB               	incf	_dataRateValue& (0+255),f,b
  9417                           
  9418                           ; BSR set to: 0
  9419                           ;MOTEapp.c: 922: }
  9420  0011F0  D06E               	goto	l14391
  9421  0011F2                     l14373:
  9422                           
  9423                           ; BSR set to: 0
  9424                           ;MOTEapp.c: 923: else {
  9425                           ;MOTEapp.c: 924: dataRateValue = 0;
  9426  0011F2  0E00               	movlw	0
  9427  0011F4                     L5:
  9428  0011F4  0100               	movlb	0	; () banked
  9429  0011F6  6FFB               	movwf	_dataRateValue& (0+255),b
  9430                           
  9431                           ; BSR set to: 0
  9432                           ;MOTEapp.c: 925: }
  9433                           ;MOTEapp.c: 927: switch (dataRateValue)
  9434  0011F8  D06A               	goto	l14391
  9435                           
  9436                           ; BSR set to: 0
  9437                           
  9438                           ;MOTEapp.c: 928: {
  9439                           ;MOTEapp.c: 929: default:
  9440  0011FA  D000               	goto	l14375
  9441  0011FC                     l14375:
  9442                           
  9443                           ; BSR set to: 0
  9444                           ;MOTEapp.c: 931: oled_putString(" 0 ",10,2);
  9445  0011FC  0EC7               	movlw	low STR_138
  9446  0011FE  0100               	movlb	0	; () banked
  9447  001200  6F71               	movwf	oled_putString@string& (0+255),b
  9448  001202  0E7F               	movlw	high STR_138
  9449  001204  0100               	movlb	0	; () banked
  9450  001206  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9451  001208  0E0A               	movlw	10
  9452  00120A  0100               	movlb	0	; () banked
  9453  00120C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9454  00120E  0E02               	movlw	2
  9455  001210  0100               	movlb	0	; () banked
  9456  001212  6F74               	movwf	oled_putString@start_page& (0+255),b
  9457  001214  EC89  F030         	call	_oled_putString	;wreg free
  9458                           
  9459                           ;MOTEapp.c: 932: break;
  9460  001218  0012               	return	
  9461  00121A                     l14377:
  9462                           
  9463                           ;MOTEapp.c: 934: oled_putString(" 1 ",10,2);
  9464  00121A  0ECB               	movlw	low STR_139
  9465  00121C  0100               	movlb	0	; () banked
  9466  00121E  6F71               	movwf	oled_putString@string& (0+255),b
  9467  001220  0E7F               	movlw	high STR_139
  9468  001222  0100               	movlb	0	; () banked
  9469  001224  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9470  001226  0E0A               	movlw	10
  9471  001228  0100               	movlb	0	; () banked
  9472  00122A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9473  00122C  0E02               	movlw	2
  9474  00122E  0100               	movlb	0	; () banked
  9475  001230  6F74               	movwf	oled_putString@start_page& (0+255),b
  9476  001232  EC89  F030         	call	_oled_putString	;wreg free
  9477                           
  9478                           ;MOTEapp.c: 935: break;
  9479  001236  0012               	return	
  9480  001238                     l14379:
  9481                           
  9482                           ;MOTEapp.c: 937: oled_putString(" 2 ",10,2);
  9483  001238  0ECF               	movlw	low STR_140
  9484  00123A  0100               	movlb	0	; () banked
  9485  00123C  6F71               	movwf	oled_putString@string& (0+255),b
  9486  00123E  0E7F               	movlw	high STR_140
  9487  001240  0100               	movlb	0	; () banked
  9488  001242  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9489  001244  0E0A               	movlw	10
  9490  001246  0100               	movlb	0	; () banked
  9491  001248  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9492  00124A  0E02               	movlw	2
  9493  00124C  0100               	movlb	0	; () banked
  9494  00124E  6F74               	movwf	oled_putString@start_page& (0+255),b
  9495  001250  EC89  F030         	call	_oled_putString	;wreg free
  9496                           
  9497                           ;MOTEapp.c: 938: break;
  9498  001254  0012               	return	
  9499  001256                     l14381:
  9500                           
  9501                           ;MOTEapp.c: 940: oled_putString(" 3 ",10,2);
  9502  001256  0ED3               	movlw	low STR_141
  9503  001258  0100               	movlb	0	; () banked
  9504  00125A  6F71               	movwf	oled_putString@string& (0+255),b
  9505  00125C  0E7F               	movlw	high STR_141
  9506  00125E  0100               	movlb	0	; () banked
  9507  001260  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9508  001262  0E0A               	movlw	10
  9509  001264  0100               	movlb	0	; () banked
  9510  001266  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9511  001268  0E02               	movlw	2
  9512  00126A  0100               	movlb	0	; () banked
  9513  00126C  6F74               	movwf	oled_putString@start_page& (0+255),b
  9514  00126E  EC89  F030         	call	_oled_putString	;wreg free
  9515                           
  9516                           ;MOTEapp.c: 941: break;
  9517  001272  0012               	return	
  9518  001274                     l14383:
  9519                           
  9520                           ;MOTEapp.c: 943: oled_putString(" 4 ",10,2);
  9521  001274  0ED7               	movlw	low STR_142
  9522  001276  0100               	movlb	0	; () banked
  9523  001278  6F71               	movwf	oled_putString@string& (0+255),b
  9524  00127A  0E7F               	movlw	high STR_142
  9525  00127C  0100               	movlb	0	; () banked
  9526  00127E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9527  001280  0E0A               	movlw	10
  9528  001282  0100               	movlb	0	; () banked
  9529  001284  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9530  001286  0E02               	movlw	2
  9531  001288  0100               	movlb	0	; () banked
  9532  00128A  6F74               	movwf	oled_putString@start_page& (0+255),b
  9533  00128C  EC89  F030         	call	_oled_putString	;wreg free
  9534                           
  9535                           ;MOTEapp.c: 944: break;
  9536  001290  0012               	return	
  9537  001292                     l14385:
  9538                           
  9539                           ;MOTEapp.c: 946: oled_putString(" 5 ",10,2);
  9540  001292  0EDB               	movlw	low STR_143
  9541  001294  0100               	movlb	0	; () banked
  9542  001296  6F71               	movwf	oled_putString@string& (0+255),b
  9543  001298  0E7F               	movlw	high STR_143
  9544  00129A  0100               	movlb	0	; () banked
  9545  00129C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9546  00129E  0E0A               	movlw	10
  9547  0012A0  0100               	movlb	0	; () banked
  9548  0012A2  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9549  0012A4  0E02               	movlw	2
  9550  0012A6  0100               	movlb	0	; () banked
  9551  0012A8  6F74               	movwf	oled_putString@start_page& (0+255),b
  9552  0012AA  EC89  F030         	call	_oled_putString	;wreg free
  9553                           
  9554                           ;MOTEapp.c: 947: break;
  9555  0012AE  0012               	return	
  9556  0012B0                     l14387:
  9557                           
  9558                           ;MOTEapp.c: 949: oled_putString("ADR",10,2);
  9559  0012B0  0EF3               	movlw	low STR_144
  9560  0012B2  0100               	movlb	0	; () banked
  9561  0012B4  6F71               	movwf	oled_putString@string& (0+255),b
  9562  0012B6  0E7F               	movlw	high STR_144
  9563  0012B8  0100               	movlb	0	; () banked
  9564  0012BA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9565  0012BC  0E0A               	movlw	10
  9566  0012BE  0100               	movlb	0	; () banked
  9567  0012C0  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9568  0012C2  0E02               	movlw	2
  9569  0012C4  0100               	movlb	0	; () banked
  9570  0012C6  6F74               	movwf	oled_putString@start_page& (0+255),b
  9571  0012C8  EC89  F030         	call	_oled_putString	;wreg free
  9572                           
  9573                           ;MOTEapp.c: 951: }
  9574                           
  9575                           ;MOTEapp.c: 950: break;
  9576  0012CC  0012               	return	
  9577  0012CE                     l14391:
  9578  0012CE  0100               	movlb	0	; () banked
  9579  0012D0  51FB               	movf	_dataRateValue& (0+255),w,b
  9580                           
  9581                           ; Switch size 1, requested type "space"
  9582                           ; Number of cases is 7, Range of values is 0 to 6
  9583                           ; switch strategies available:
  9584                           ; Name         Instructions Cycles
  9585                           ; simple_byte           22    12 (average)
  9586                           ;	Chosen strategy is simple_byte
  9587  0012D2  0A00               	xorlw	0	; case 0
  9588  0012D4  B4D8               	btfsc	status,2,c
  9589  0012D6  D792               	goto	l14375
  9590  0012D8  0A01               	xorlw	1	; case 1
  9591  0012DA  B4D8               	btfsc	status,2,c
  9592  0012DC  D79E               	goto	l14377
  9593  0012DE  0A03               	xorlw	3	; case 2
  9594  0012E0  B4D8               	btfsc	status,2,c
  9595  0012E2  D7AA               	goto	l14379
  9596  0012E4  0A01               	xorlw	1	; case 3
  9597  0012E6  B4D8               	btfsc	status,2,c
  9598  0012E8  D7B6               	goto	l14381
  9599  0012EA  0A07               	xorlw	7	; case 4
  9600  0012EC  B4D8               	btfsc	status,2,c
  9601  0012EE  D7C2               	goto	l14383
  9602  0012F0  0A01               	xorlw	1	; case 5
  9603  0012F2  B4D8               	btfsc	status,2,c
  9604  0012F4  D7CE               	goto	l14385
  9605  0012F6  0A03               	xorlw	3	; case 6
  9606  0012F8  B4D8               	btfsc	status,2,c
  9607  0012FA  D7DA               	goto	l14387
  9608  0012FC  D77F               	goto	l14375
  9609                           
  9610                           ; BSR set to: 0
  9611                           ;MOTEapp.c: 952: }
  9612                           ;MOTEapp.c: 953: break;
  9613                           
  9614                           ; BSR set to: 0
  9615  0012FE  0012               	return	
  9616  001300                     l14393:
  9617                           
  9618                           ; BSR set to: 0
  9619                           ;MOTEapp.c: 955: if (selectButton)
  9620  001300  0100               	movlb	0	; () banked
  9621  001302  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9622  001304  0100               	movlb	0	; () banked
  9623  001306  B4D8               	btfsc	status,2,c
  9624  001308  D00D               	goto	l581
  9625                           
  9626                           ; BSR set to: 0
  9627                           ;MOTEapp.c: 956: {
  9628                           ;MOTEapp.c: 957: if( moteApp_GoToSleep() )
  9629  00130A  EC79  F024         	call	_moteApp_GoToSleep	;wreg free
  9630  00130E  0900               	iorlw	0
  9631  001310  B4D8               	btfsc	status,2,c
  9632  001312  D004               	goto	l14399
  9633                           
  9634                           ;MOTEapp.c: 958: {
  9635                           ;MOTEapp.c: 959: changeStates = 1;
  9636  001314  0E01               	movlw	1
  9637  001316  0100               	movlb	0	; () banked
  9638  001318  6FB5               	movwf	moteRunningProcess@changeStates& (0+255),b
  9639                           
  9640                           ;MOTEapp.c: 960: }
  9641  00131A  D004               	goto	l581
  9642  00131C                     l14399:
  9643                           
  9644                           ;MOTEapp.c: 961: else
  9645                           ;MOTEapp.c: 962: {
  9646                           ;MOTEapp.c: 963: secTicker = 10 - 1;
  9647  00131C  0E09               	movlw	9
  9648  00131E  0100               	movlb	0	; () banked
  9649  001320  6FE5               	movwf	_secTicker& (0+255),b
  9650  001322  D000               	goto	l581
  9651  001324                     l581:
  9652                           
  9653                           ; BSR set to: 0
  9654                           ;MOTEapp.c: 964: }
  9655                           ;MOTEapp.c: 965: }
  9656                           ;MOTEapp.c: 966: if (changeStates)
  9657  001324  0100               	movlb	0	; () banked
  9658  001326  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  9659  001328  0100               	movlb	0	; () banked
  9660  00132A  B4D8               	btfsc	status,2,c
  9661  00132C  0012               	return	
  9662                           
  9663                           ; BSR set to: 0
  9664                           ;MOTEapp.c: 967: {
  9665                           ;MOTEapp.c: 968: oled_clear();
  9666  00132E  ECA5  F038         	call	_oled_clear	;wreg free
  9667                           
  9668                           ;MOTEapp.c: 969: oled_putString("  Issue Uplink  ",0,0);
  9669  001332  0E21               	movlw	low STR_75
  9670  001334  0100               	movlb	0	; () banked
  9671  001336  6F71               	movwf	oled_putString@string& (0+255),b
  9672  001338  0E7B               	movlw	high STR_75
  9673  00133A  0100               	movlb	0	; () banked
  9674  00133C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9675  00133E  0E00               	movlw	0
  9676  001340  0100               	movlb	0	; () banked
  9677  001342  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9678  001344  0E00               	movlw	0
  9679  001346  0100               	movlb	0	; () banked
  9680  001348  6F74               	movwf	oled_putString@start_page& (0+255),b
  9681  00134A  EC89  F030         	call	_oled_putString	;wreg free
  9682                           
  9683                           ;MOTEapp.c: 970: oled_putString(" LoRaWAN Packet ",0,1);
  9684  00134E  0E87               	movlw	low STR_76
  9685  001350  0100               	movlb	0	; () banked
  9686  001352  6F71               	movwf	oled_putString@string& (0+255),b
  9687  001354  0E7B               	movlw	high STR_76
  9688  001356  0100               	movlb	0	; () banked
  9689  001358  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9690  00135A  0E00               	movlw	0
  9691  00135C  0100               	movlb	0	; () banked
  9692  00135E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9693  001360  0E01               	movlw	1
  9694  001362  0100               	movlb	0	; () banked
  9695  001364  6F74               	movwf	oled_putString@start_page& (0+255),b
  9696  001366  EC89  F030         	call	_oled_putString	;wreg free
  9697                           
  9698                           ;MOTEapp.c: 971: oled_putString("(NAV)    (SEL) ",0,3);
  9699  00136A  0E83               	movlw	low STR_77
  9700  00136C  0100               	movlb	0	; () banked
  9701  00136E  6F71               	movwf	oled_putString@string& (0+255),b
  9702  001370  0E7C               	movlw	high STR_77
  9703  001372  0100               	movlb	0	; () banked
  9704  001374  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9705  001376  0E00               	movlw	0
  9706  001378  0100               	movlb	0	; () banked
  9707  00137A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9708  00137C  0E03               	movlw	3
  9709  00137E  0100               	movlb	0	; () banked
  9710  001380  6F74               	movwf	oled_putString@start_page& (0+255),b
  9711  001382  EC89  F030         	call	_oled_putString	;wreg free
  9712                           
  9713                           ;MOTEapp.c: 972: runningState = runningUplink;
  9714  001386  0E06               	movlw	6
  9715  001388  0100               	movlb	0	; () banked
  9716  00138A  6FE9               	movwf	_runningState& (0+255),b
  9717                           
  9718                           ; BSR set to: 0
  9719                           ;MOTEapp.c: 975: }
  9720                           
  9721                           ; BSR set to: 0
  9722                           ;MOTEapp.c: 973: }
  9723                           ;MOTEapp.c: 974: break;
  9724  00138C  0012               	return	
  9725  00138E                     l14413:
  9726                           
  9727                           ; BSR set to: 0
  9728  00138E  0100               	movlb	0	; () banked
  9729  001390  51E9               	movf	_runningState& (0+255),w,b
  9730                           
  9731                           ; Switch size 1, requested type "space"
  9732                           ; Number of cases is 12, Range of values is 0 to 15
  9733                           ; switch strategies available:
  9734                           ; Name         Instructions Cycles
  9735                           ; simple_byte           37    19 (average)
  9736                           ;	Chosen strategy is simple_byte
  9737  001392  0A00               	xorlw	0	; case 0
  9738  001394  B4D8               	btfsc	status,2,c
  9739  001396  EFA5  F001         	goto	l13955
  9740  00139A  0A01               	xorlw	1	; case 1
  9741  00139C  B4D8               	btfsc	status,2,c
  9742  00139E  EFB0  F005         	goto	l14197
  9743  0013A2  0A03               	xorlw	3	; case 2
  9744  0013A4  B4D8               	btfsc	status,2,c
  9745  0013A6  D558               	goto	l14271
  9746  0013A8  0A01               	xorlw	1	; case 3
  9747  0013AA  B4D8               	btfsc	status,2,c
  9748  0013AC  D6DD               	goto	l14349
  9749  0013AE  0A05               	xorlw	5	; case 6
  9750  0013B0  B4D8               	btfsc	status,2,c
  9751  0013B2  EFE1  F001         	goto	l13969
  9752  0013B6  0A01               	xorlw	1	; case 7
  9753  0013B8  B4D8               	btfsc	status,2,c
  9754  0013BA  EFCE  F002         	goto	l14041
  9755  0013BE  0A0F               	xorlw	15	; case 8
  9756  0013C0  B4D8               	btfsc	status,2,c
  9757  0013C2  EF5B  F003         	goto	l14071
  9758  0013C6  0A02               	xorlw	2	; case 10
  9759  0013C8  B4D8               	btfsc	status,2,c
  9760  0013CA  EFDF  F004         	goto	l14151
  9761  0013CE  0A01               	xorlw	1	; case 11
  9762  0013D0  B4D8               	btfsc	status,2,c
  9763  0013D2  EF74  F005         	goto	l14183
  9764  0013D6  0A07               	xorlw	7	; case 12
  9765  0013D8  B4D8               	btfsc	status,2,c
  9766  0013DA  D44F               	goto	l14227
  9767  0013DC  0A01               	xorlw	1	; case 13
  9768  0013DE  B4D8               	btfsc	status,2,c
  9769  0013E0  D577               	goto	l14285
  9770  0013E2  0A02               	xorlw	2	; case 15
  9771  0013E4  B4D8               	btfsc	status,2,c
  9772  0013E6  D78C               	goto	l14393
  9773  0013E8  EFA3  F001         	goto	l467
  9774                           
  9775                           ; BSR set to: 0
  9776                           ;MOTEapp.c: 976: return runningState;
  9777                           ;	Return value of _moteRunningProcess is never used
  9778  0013EC  0012               	return		;funcret
  9779  0013EE                     __end_of_moteRunningProcess:
  9780                           	opt stack 0
  9781                           tblptru	equ	0xFF8
  9782                           tblptrh	equ	0xFF7
  9783                           tblptrl	equ	0xFF6
  9784                           tablat	equ	0xFF5
  9785                           prodh	equ	0xFF4
  9786                           prodl	equ	0xFF3
  9787                           intcon	equ	0xFF2
  9788                           postinc0	equ	0xFEE
  9789                           wreg	equ	0xFE8
  9790                           indf1	equ	0xFE7
  9791                           postdec1	equ	0xFE5
  9792                           fsr1h	equ	0xFE2
  9793                           fsr1l	equ	0xFE1
  9794                           indf2	equ	0xFDF
  9795                           fsr2h	equ	0xFDA
  9796                           fsr2l	equ	0xFD9
  9797                           status	equ	0xFD8
  9798                           
  9799 ;; *************** function _sendDataCommand *****************
  9800 ;; Defined at:
  9801 ;;		line 1122 in file "../Includes/Board/MOTEapp.c"
  9802 ;; Parameters:    Size  Location     Type
  9803 ;;  string          2    1[BANK0 ] PTR const unsigned char 
  9804 ;;		 -> STR_85(12), STR_84(14), STR_74(14), 
  9805 ;;  appData         2    3[BANK0 ] PTR unsigned char 
  9806 ;;		 -> dataBuffer(16), 
  9807 ;;  dataLength      1    5[BANK0 ] unsigned char 
  9808 ;; Auto vars:     Size  Location     Type
  9809 ;;  byteCount       1    8[BANK0 ] unsigned char 
  9810 ;;  byteCount       1    7[BANK0 ] unsigned char 
  9811 ;; Return value:  Size  Location     Type
  9812 ;;                  1    wreg      void 
  9813 ;; Registers used:
  9814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9815 ;; Tracked objects:
  9816 ;;		On entry : 0/0
  9817 ;;		On exit  : 0/0
  9818 ;;		Unchanged: 0/0
  9819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9820 ;;      Params:         0       5       0       0       0       0       0       0       0
  9821 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9822 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9823 ;;      Totals:         0       8       0       0       0       0       0       0       0
  9824 ;;Total ram usage:        8 bytes
  9825 ;; Hardware stack levels used:    1
  9826 ;; Hardware stack levels required when called:   13
  9827 ;; This function calls:
  9828 ;;		_EUSART_Write
  9829 ;;		_EndLine
  9830 ;;		_hexToStr
  9831 ;; This function is called by:
  9832 ;;		_moteRunningProcess
  9833 ;; This function uses a non-reentrant model
  9834 ;;
  9835                           
  9836                           	psect	text11
  9837  0047F6                     __ptext11:
  9838                           	opt stack 0
  9839  0047F6                     _sendDataCommand:
  9840                           	opt stack 15
  9841                           
  9842                           ;MOTEapp.c: 1125: while (*string)
  9843                           
  9844                           ;incstack = 0
  9845  0047F6  D00C               	goto	l13161
  9846  0047F8                     l13157:
  9847                           
  9848                           ;MOTEapp.c: 1126: {
  9849                           ;MOTEapp.c: 1127: EUSART_Write(*string++);
  9850  0047F8  C061  FFF6         	movff	sendDataCommand@string,tblptrl
  9851  0047FC  C062  FFF7         	movff	sendDataCommand@string+1,tblptrh
  9852  004800                     	if	0	;tblptru may be non-zero
  9853  004800                     	endif
  9854  004800                     	if	0	;tblptru may be non-zero
  9855  004800                     	endif
  9856  004800  0008               	tblrd		*
  9857  004802  50F5               	movf	tablat,w,c
  9858  004804  ECF3  F034         	call	_EUSART_Write
  9859  004808  0100               	movlb	0	; () banked
  9860  00480A  4B61               	infsnz	sendDataCommand@string& (0+255),f,b
  9861  00480C  2B62               	incf	(sendDataCommand@string+1)& (0+255),f,b
  9862  00480E  D000               	goto	l13161
  9863  004810                     l13161:
  9864  004810  C061  FFF6         	movff	sendDataCommand@string,tblptrl
  9865  004814  C062  FFF7         	movff	sendDataCommand@string+1,tblptrh
  9866  004818                     	if	0	;tblptru may be non-zero
  9867  004818                     	endif
  9868  004818                     	if	0	;tblptru may be non-zero
  9869  004818                     	endif
  9870  004818  0008               	tblrd		*
  9871  00481A  50F5               	movf	tablat,w,c
  9872  00481C  0900               	iorlw	0
  9873  00481E  A4D8               	btfss	status,2,c
  9874  004820  D001               	goto	u12541
  9875  004822  D001               	goto	u12540
  9876  004824                     u12541:
  9877  004824  D7E9               	goto	l13157
  9878  004826                     u12540:
  9879  004826  D000               	goto	l13163
  9880  004828                     l13163:
  9881                           
  9882                           ;MOTEapp.c: 1128: }
  9883                           ;MOTEapp.c: 1130: for (uint8_t byteCount = 0; byteCount < 3; byteCount++)
  9884  004828  0E00               	movlw	0
  9885  00482A  0100               	movlb	0	; () banked
  9886  00482C  6F67               	movwf	sendDataCommand@byteCount& (0+255),b
  9887                           
  9888                           ; BSR set to: 0
  9889  00482E  0E02               	movlw	2
  9890  004830  0100               	movlb	0	; () banked
  9891  004832  6567               	cpfsgt	sendDataCommand@byteCount& (0+255),b
  9892  004834  D001               	goto	u12551
  9893  004836  D001               	goto	u12550
  9894  004838                     u12551:
  9895  004838  D002               	goto	l13169
  9896  00483A                     u12550:
  9897  00483A  D018               	goto	l13175
  9898                           
  9899                           ; BSR set to: 0
  9900  00483C  D017               	goto	l13175
  9901  00483E                     l13169:
  9902                           
  9903                           ; BSR set to: 0
  9904                           ;MOTEapp.c: 1131: {
  9905                           ;MOTEapp.c: 1132: EUSART_Write(appData[byteCount]);
  9906  00483E  0100               	movlb	0	; () banked
  9907  004840  5167               	movf	sendDataCommand@byteCount& (0+255),w,b
  9908  004842  0D01               	mullw	1
  9909  004844  50F3               	movf	prodl,w,c
  9910  004846  0100               	movlb	0	; () banked
  9911  004848  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  9912  00484A  6ED9               	movwf	fsr2l,c
  9913  00484C  50F4               	movf	prodh,w,c
  9914  00484E  0100               	movlb	0	; () banked
  9915  004850  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  9916  004852  6EDA               	movwf	fsr2h,c
  9917  004854  50DF               	movf	indf2,w,c
  9918  004856  ECF3  F034         	call	_EUSART_Write
  9919  00485A  0100               	movlb	0	; () banked
  9920  00485C  2B67               	incf	sendDataCommand@byteCount& (0+255),f,b
  9921                           
  9922                           ; BSR set to: 0
  9923  00485E  0E02               	movlw	2
  9924  004860  0100               	movlb	0	; () banked
  9925  004862  6567               	cpfsgt	sendDataCommand@byteCount& (0+255),b
  9926  004864  D001               	goto	u12561
  9927  004866  D001               	goto	u12560
  9928  004868                     u12561:
  9929  004868  D7EA               	goto	l13169
  9930  00486A                     u12560:
  9931  00486A  D000               	goto	l13175
  9932  00486C                     l13175:
  9933                           
  9934                           ; BSR set to: 0
  9935                           ;MOTEapp.c: 1133: }
  9936                           ;MOTEapp.c: 1135: EUSART_Write(appData[3]);
  9937  00486C  0100               	movlb	0	; () banked
  9938  00486E  EE20 F003          	lfsr	2,3
  9939  004872  5163               	movf	sendDataCommand@appData& (0+255),w,b
  9940  004874  26D9               	addwf	fsr2l,f,c
  9941  004876  5164               	movf	(sendDataCommand@appData+1)& (0+255),w,b
  9942  004878  22DA               	addwfc	fsr2h,f,c
  9943  00487A  50DF               	movf	indf2,w,c
  9944  00487C  ECF3  F034         	call	_EUSART_Write
  9945                           
  9946                           ;MOTEapp.c: 1137: for (uint8_t byteCount = 4; byteCount < dataLength; byteCount++)
  9947  004880  0E04               	movlw	4
  9948  004882  0100               	movlb	0	; () banked
  9949  004884  6F68               	movwf	sendDataCommand@byteCount_1623& (0+255),b
  9950  004886  D029               	goto	l13183
  9951  004888                     l13179:
  9952                           
  9953                           ; BSR set to: 0
  9954                           ;MOTEapp.c: 1138: {
  9955                           ;MOTEapp.c: 1139: EUSART_Write(hexToStr(appData[byteCount] >> 4));
  9956  004888  0100               	movlb	0	; () banked
  9957  00488A  5168               	movf	sendDataCommand@byteCount_1623& (0+255),w,b
  9958  00488C  0D01               	mullw	1
  9959  00488E  50F3               	movf	prodl,w,c
  9960  004890  0100               	movlb	0	; () banked
  9961  004892  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  9962  004894  6ED9               	movwf	fsr2l,c
  9963  004896  50F4               	movf	prodh,w,c
  9964  004898  0100               	movlb	0	; () banked
  9965  00489A  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  9966  00489C  6EDA               	movwf	fsr2h,c
  9967  00489E  50DF               	movf	indf2,w,c
  9968  0048A0  0100               	movlb	0	; () banked
  9969  0048A2  6F66               	movwf	??_sendDataCommand& (0+255),b
  9970  0048A4  0100               	movlb	0	; () banked
  9971  0048A6  3966               	swapf	??_sendDataCommand& (0+255),w,b
  9972  0048A8  0B0F               	andlw	15
  9973  0048AA  EC1F  F035         	call	_hexToStr
  9974  0048AE  ECF3  F034         	call	_EUSART_Write
  9975                           
  9976                           ;MOTEapp.c: 1140: EUSART_Write(hexToStr(appData[byteCount] & 0x0F));
  9977  0048B2  0100               	movlb	0	; () banked
  9978  0048B4  5168               	movf	sendDataCommand@byteCount_1623& (0+255),w,b
  9979  0048B6  0D01               	mullw	1
  9980  0048B8  50F3               	movf	prodl,w,c
  9981  0048BA  0100               	movlb	0	; () banked
  9982  0048BC  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  9983  0048BE  6ED9               	movwf	fsr2l,c
  9984  0048C0  50F4               	movf	prodh,w,c
  9985  0048C2  0100               	movlb	0	; () banked
  9986  0048C4  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  9987  0048C6  6EDA               	movwf	fsr2h,c
  9988  0048C8  50DF               	movf	indf2,w,c
  9989  0048CA  0B0F               	andlw	15
  9990  0048CC  EC1F  F035         	call	_hexToStr
  9991  0048D0  ECF3  F034         	call	_EUSART_Write
  9992  0048D4  0100               	movlb	0	; () banked
  9993  0048D6  2B68               	incf	sendDataCommand@byteCount_1623& (0+255),f,b
  9994  0048D8  D000               	goto	l13183
  9995  0048DA                     l13183:
  9996                           
  9997                           ; BSR set to: 0
  9998  0048DA  0100               	movlb	0	; () banked
  9999  0048DC  5165               	movf	sendDataCommand@dataLength& (0+255),w,b
 10000  0048DE  0100               	movlb	0	; () banked
 10001  0048E0  5D68               	subwf	sendDataCommand@byteCount_1623& (0+255),w,b
 10002  0048E2  A0D8               	btfss	status,0,c
 10003  0048E4  D001               	goto	u12571
 10004  0048E6  D001               	goto	u12570
 10005  0048E8                     u12571:
 10006  0048E8  D7CF               	goto	l13179
 10007  0048EA                     u12570:
 10008  0048EA  D000               	goto	l13185
 10009  0048EC                     l13185:
 10010                           
 10011                           ; BSR set to: 0
 10012                           ;MOTEapp.c: 1141: }
 10013                           ;MOTEapp.c: 1142: EndLine();
 10014  0048EC  EC3B  F039         	call	_EndLine	;wreg free
 10015  0048F0  0012               	return		;funcret
 10016  0048F2                     __end_of_sendDataCommand:
 10017                           	opt stack 0
 10018                           tblptru	equ	0xFF8
 10019                           tblptrh	equ	0xFF7
 10020                           tblptrl	equ	0xFF6
 10021                           tablat	equ	0xFF5
 10022                           prodh	equ	0xFF4
 10023                           prodl	equ	0xFF3
 10024                           intcon	equ	0xFF2
 10025                           postinc0	equ	0xFEE
 10026                           wreg	equ	0xFE8
 10027                           indf1	equ	0xFE7
 10028                           postdec1	equ	0xFE5
 10029                           fsr1h	equ	0xFE2
 10030                           fsr1l	equ	0xFE1
 10031                           indf2	equ	0xFDF
 10032                           fsr2h	equ	0xFDA
 10033                           fsr2l	equ	0xFD9
 10034                           status	equ	0xFD8
 10035                           
 10036 ;; *************** function _hexToStr *****************
 10037 ;; Defined at:
 10038 ;;		line 1154 in file "../Includes/Board/MOTEapp.c"
 10039 ;; Parameters:    Size  Location     Type
 10040 ;;  character       1    wreg     unsigned char 
 10041 ;; Auto vars:     Size  Location     Type
 10042 ;;  character       1    0[BANK0 ] unsigned char 
 10043 ;; Return value:  Size  Location     Type
 10044 ;;                  1    wreg      unsigned char 
 10045 ;; Registers used:
 10046 ;;		wreg, status,2, status,0
 10047 ;; Tracked objects:
 10048 ;;		On entry : 0/0
 10049 ;;		On exit  : 0/0
 10050 ;;		Unchanged: 0/0
 10051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10052 ;;      Params:         0       0       0       0       0       0       0       0       0
 10053 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10054 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10055 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10056 ;;Total ram usage:        1 bytes
 10057 ;; Hardware stack levels used:    1
 10058 ;; Hardware stack levels required when called:   11
 10059 ;; This function calls:
 10060 ;;		Nothing
 10061 ;; This function is called by:
 10062 ;;		_sendDataCommand
 10063 ;; This function uses a non-reentrant model
 10064 ;;
 10065                           
 10066                           	psect	text12
 10067  006A3E                     __ptext12:
 10068                           	opt stack 0
 10069  006A3E                     _hexToStr:
 10070                           	opt stack 16
 10071                           
 10072                           ;incstack = 0
 10073                           ;hexToStr@character stored from wreg
 10074  006A3E  0100               	movlb	0	; () banked
 10075  006A40  6F60               	movwf	hexToStr@character& (0+255),b
 10076                           
 10077                           ;MOTEapp.c: 1157: character = character & 0x0F;
 10078  006A42  0100               	movlb	0	; () banked
 10079  006A44  5160               	movf	hexToStr@character& (0+255),w,b
 10080  006A46  0B0F               	andlw	15
 10081  006A48  0100               	movlb	0	; () banked
 10082  006A4A  6F60               	movwf	hexToStr@character& (0+255),b
 10083                           
 10084                           ;MOTEapp.c: 1159: if (character < 0x0A)
 10085  006A4C  0E0A               	movlw	10
 10086  006A4E  0100               	movlb	0	; () banked
 10087  006A50  6160               	cpfslt	hexToStr@character& (0+255),b
 10088  006A52  D001               	goto	u11041
 10089  006A54  D001               	goto	u11040
 10090  006A56                     u11041:
 10091  006A56  D006               	goto	l12155
 10092  006A58                     u11040:
 10093                           
 10094                           ; BSR set to: 0
 10095                           ;MOTEapp.c: 1160: {
 10096                           ;MOTEapp.c: 1161: return character + '0';
 10097  006A58  0100               	movlb	0	; () banked
 10098  006A5A  5160               	movf	hexToStr@character& (0+255),w,b
 10099  006A5C  0F30               	addlw	48
 10100  006A5E  D018               	goto	l657
 10101                           
 10102                           ; BSR set to: 0
 10103  006A60  D017               	goto	l657
 10104                           
 10105                           ; BSR set to: 0
 10106                           ;MOTEapp.c: 1162: }
 10107  006A62  D016               	goto	l657
 10108  006A64                     l12155:
 10109                           
 10110                           ; BSR set to: 0
 10111                           ;MOTEapp.c: 1163: else if ( (character >= 0x0A) && (character <= 0x0F) )
 10112  006A64  0E09               	movlw	9
 10113  006A66  0100               	movlb	0	; () banked
 10114  006A68  6560               	cpfsgt	hexToStr@character& (0+255),b
 10115  006A6A  D001               	goto	u11051
 10116  006A6C  D001               	goto	u11050
 10117  006A6E                     u11051:
 10118  006A6E  D00C               	goto	l12165
 10119  006A70                     u11050:
 10120                           
 10121                           ; BSR set to: 0
 10122  006A70  0E10               	movlw	16
 10123  006A72  0100               	movlb	0	; () banked
 10124  006A74  6160               	cpfslt	hexToStr@character& (0+255),b
 10125  006A76  D001               	goto	u11061
 10126  006A78  D001               	goto	u11060
 10127  006A7A                     u11061:
 10128  006A7A  D006               	goto	l12165
 10129  006A7C                     u11060:
 10130                           
 10131                           ; BSR set to: 0
 10132                           ;MOTEapp.c: 1164: {
 10133                           ;MOTEapp.c: 1165: return character + '0' + 7;
 10134  006A7C  0100               	movlb	0	; () banked
 10135  006A7E  5160               	movf	hexToStr@character& (0+255),w,b
 10136  006A80  0F37               	addlw	55
 10137  006A82  D006               	goto	l657
 10138                           
 10139                           ; BSR set to: 0
 10140  006A84  D005               	goto	l657
 10141                           
 10142                           ; BSR set to: 0
 10143                           ;MOTEapp.c: 1166: }
 10144  006A86  D004               	goto	l657
 10145  006A88                     l12165:
 10146                           
 10147                           ; BSR set to: 0
 10148                           ;MOTEapp.c: 1167: else
 10149                           ;MOTEapp.c: 1168: {
 10150                           ;MOTEapp.c: 1169: return 0;
 10151  006A88  0E00               	movlw	0
 10152  006A8A  D002               	goto	l657
 10153                           
 10154                           ; BSR set to: 0
 10155  006A8C  D001               	goto	l657
 10156                           
 10157                           ; BSR set to: 0
 10158  006A8E  D000               	goto	l657
 10159  006A90                     l657:
 10160                           
 10161                           ; BSR set to: 0
 10162  006A90  0012               	return		;funcret
 10163  006A92                     __end_of_hexToStr:
 10164                           	opt stack 0
 10165                           tblptru	equ	0xFF8
 10166                           tblptrh	equ	0xFF7
 10167                           tblptrl	equ	0xFF6
 10168                           tablat	equ	0xFF5
 10169                           prodh	equ	0xFF4
 10170                           prodl	equ	0xFF3
 10171                           intcon	equ	0xFF2
 10172                           postinc0	equ	0xFEE
 10173                           wreg	equ	0xFE8
 10174                           indf1	equ	0xFE7
 10175                           postdec1	equ	0xFE5
 10176                           fsr1h	equ	0xFE2
 10177                           fsr1l	equ	0xFE1
 10178                           indf2	equ	0xFDF
 10179                           fsr2h	equ	0xFDA
 10180                           fsr2l	equ	0xFD9
 10181                           status	equ	0xFD8
 10182                           
 10183 ;; *************** function _oled_putint8 *****************
 10184 ;; Defined at:
 10185 ;;		line 278 in file "../Includes/Drivers/SSD1306oLED.c"
 10186 ;; Parameters:    Size  Location     Type
 10187 ;;  number          1    wreg     unsigned char 
 10188 ;;  station_dot     1   22[BANK0 ] unsigned char 
 10189 ;;  start_page      1   23[BANK0 ] unsigned char 
 10190 ;; Auto vars:     Size  Location     Type
 10191 ;;  number          1   31[BANK0 ] unsigned char 
 10192 ;;  numData         6   25[BANK0 ] struct .
 10193 ;;  negative        1   24[BANK0 ] unsigned char 
 10194 ;; Return value:  Size  Location     Type
 10195 ;;                  1    wreg      void 
 10196 ;; Registers used:
 10197 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10198 ;; Tracked objects:
 10199 ;;		On entry : 0/0
 10200 ;;		On exit  : 0/0
 10201 ;;		Unchanged: 0/0
 10202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10203 ;;      Params:         0       2       0       0       0       0       0       0       0
 10204 ;;      Locals:         0       8       0       0       0       0       0       0       0
 10205 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10206 ;;      Totals:         0      10       0       0       0       0       0       0       0
 10207 ;;Total ram usage:       10 bytes
 10208 ;; Hardware stack levels used:    1
 10209 ;; Hardware stack levels required when called:   15
 10210 ;; This function calls:
 10211 ;;		___awmod
 10212 ;;		___lbdiv
 10213 ;;		_oled_putString
 10214 ;; This function is called by:
 10215 ;;		_moteHandler
 10216 ;;		_moteRunningProcess
 10217 ;;		_moteApp_testSensors
 10218 ;; This function uses a non-reentrant model
 10219 ;;
 10220                           
 10221                           	psect	text13
 10222  00552C                     __ptext13:
 10223                           	opt stack 0
 10224  00552C                     _oled_putint8:
 10225                           	opt stack 13
 10226                           
 10227                           ; BSR set to: 0
 10228                           ;incstack = 0
 10229                           ;oled_putint8@number stored from wreg
 10230  00552C  0100               	movlb	0	; () banked
 10231  00552E  6F7F               	movwf	oled_putint8@number& (0+255),b
 10232                           
 10233                           ;SSD1306oLED.c: 280: display_data_t numData;
 10234                           ;SSD1306oLED.c: 281: bool negative = 0;
 10235  005530  0E00               	movlw	0
 10236  005532  0100               	movlb	0	; () banked
 10237  005534  6F78               	movwf	oled_putint8@negative& (0+255),b
 10238                           
 10239                           ; BSR set to: 0
 10240                           ;SSD1306oLED.c: 283: if(number & 0x80)
 10241  005536  0100               	movlb	0	; () banked
 10242  005538  AF7F               	btfss	oled_putint8@number& (0+255),7,b
 10243  00553A  D001               	goto	u12321
 10244  00553C  D001               	goto	u12320
 10245  00553E                     u12321:
 10246  00553E  D004               	goto	l12991
 10247  005540                     u12320:
 10248                           
 10249                           ; BSR set to: 0
 10250                           ;SSD1306oLED.c: 284: negative = 1;
 10251  005540  0E01               	movlw	1
 10252  005542  0100               	movlb	0	; () banked
 10253  005544  6F78               	movwf	oled_putint8@negative& (0+255),b
 10254  005546  D000               	goto	l12991
 10255  005548                     l12991:
 10256                           
 10257                           ; BSR set to: 0
 10258                           ;SSD1306oLED.c: 285: number = (number & 0x7F);
 10259  005548  0100               	movlb	0	; () banked
 10260  00554A  517F               	movf	oled_putint8@number& (0+255),w,b
 10261  00554C  0B7F               	andlw	127
 10262  00554E  0100               	movlb	0	; () banked
 10263  005550  6F7F               	movwf	oled_putint8@number& (0+255),b
 10264                           
 10265                           ; BSR set to: 0
 10266                           ;SSD1306oLED.c: 287: numData.d2 = '0' + (number % 10);
 10267  005552  C07F  F060         	movff	oled_putint8@number,___awmod@dividend
 10268  005556  0100               	movlb	0	; () banked
 10269  005558  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10270  00555A  0E00               	movlw	0
 10271  00555C  0100               	movlb	0	; () banked
 10272  00555E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10273  005560  0E0A               	movlw	10
 10274  005562  6F62               	movwf	___awmod@divisor& (0+255),b
 10275  005564  EC74  F02B         	call	___awmod	;wreg free
 10276  005568  0100               	movlb	0	; () banked
 10277  00556A  5160               	movf	?___awmod& (0+255),w,b
 10278  00556C  0F30               	addlw	48
 10279  00556E  0100               	movlb	0	; () banked
 10280  005570  6F7B               	movwf	(oled_putint8@numData+2)& (0+255),b
 10281                           
 10282                           ; BSR set to: 0
 10283                           ;SSD1306oLED.c: 288: number /= 10;
 10284  005572  0E0A               	movlw	10
 10285  005574  0100               	movlb	0	; () banked
 10286  005576  6F60               	movwf	___lbdiv@divisor& (0+255),b
 10287  005578  0100               	movlb	0	; () banked
 10288  00557A  517F               	movf	oled_putint8@number& (0+255),w,b
 10289  00557C  EC4E  F032         	call	___lbdiv
 10290  005580  0100               	movlb	0	; () banked
 10291  005582  6F7F               	movwf	oled_putint8@number& (0+255),b
 10292                           
 10293                           ; BSR set to: 0
 10294                           ;SSD1306oLED.c: 289: numData.d1 = '0' + (number % 10);
 10295  005584  C07F  F060         	movff	oled_putint8@number,___awmod@dividend
 10296  005588  0100               	movlb	0	; () banked
 10297  00558A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10298  00558C  0E00               	movlw	0
 10299  00558E  0100               	movlb	0	; () banked
 10300  005590  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10301  005592  0E0A               	movlw	10
 10302  005594  6F62               	movwf	___awmod@divisor& (0+255),b
 10303  005596  EC74  F02B         	call	___awmod	;wreg free
 10304  00559A  0100               	movlb	0	; () banked
 10305  00559C  5160               	movf	?___awmod& (0+255),w,b
 10306  00559E  0F30               	addlw	48
 10307  0055A0  0100               	movlb	0	; () banked
 10308  0055A2  6F7A               	movwf	(oled_putint8@numData+1)& (0+255),b
 10309                           
 10310                           ; BSR set to: 0
 10311                           ;SSD1306oLED.c: 290: number /= 10;
 10312  0055A4  0E0A               	movlw	10
 10313  0055A6  0100               	movlb	0	; () banked
 10314  0055A8  6F60               	movwf	___lbdiv@divisor& (0+255),b
 10315  0055AA  0100               	movlb	0	; () banked
 10316  0055AC  517F               	movf	oled_putint8@number& (0+255),w,b
 10317  0055AE  EC4E  F032         	call	___lbdiv
 10318  0055B2  0100               	movlb	0	; () banked
 10319  0055B4  6F7F               	movwf	oled_putint8@number& (0+255),b
 10320                           
 10321                           ; BSR set to: 0
 10322                           ;SSD1306oLED.c: 291: numData.d0 = '0' + (number % 10);
 10323  0055B6  C07F  F060         	movff	oled_putint8@number,___awmod@dividend
 10324  0055BA  0100               	movlb	0	; () banked
 10325  0055BC  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10326  0055BE  0E00               	movlw	0
 10327  0055C0  0100               	movlb	0	; () banked
 10328  0055C2  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10329  0055C4  0E0A               	movlw	10
 10330  0055C6  6F62               	movwf	___awmod@divisor& (0+255),b
 10331  0055C8  EC74  F02B         	call	___awmod	;wreg free
 10332  0055CC  0100               	movlb	0	; () banked
 10333  0055CE  5160               	movf	?___awmod& (0+255),w,b
 10334  0055D0  0F30               	addlw	48
 10335  0055D2  0100               	movlb	0	; () banked
 10336  0055D4  6F79               	movwf	oled_putint8@numData& (0+255),b
 10337                           
 10338                           ; BSR set to: 0
 10339                           ;SSD1306oLED.c: 292: if(negative)
 10340  0055D6  0100               	movlb	0	; () banked
 10341  0055D8  5178               	movf	oled_putint8@negative& (0+255),w,b
 10342  0055DA  0100               	movlb	0	; () banked
 10343  0055DC  B4D8               	btfsc	status,2,c
 10344  0055DE  D001               	goto	u12331
 10345  0055E0  D001               	goto	u12330
 10346  0055E2                     u12331:
 10347  0055E2  D003               	goto	l1028
 10348  0055E4                     u12330:
 10349                           
 10350                           ; BSR set to: 0
 10351                           ;SSD1306oLED.c: 293: numData.d0 = '-';
 10352  0055E4  0E2D               	movlw	45
 10353  0055E6  0100               	movlb	0	; () banked
 10354  0055E8  6F79               	movwf	oled_putint8@numData& (0+255),b
 10355  0055EA                     l1028:
 10356                           
 10357                           ; BSR set to: 0
 10358                           ;SSD1306oLED.c: 295: numData.b[3]=0;
 10359  0055EA  0E00               	movlw	0
 10360  0055EC  0100               	movlb	0	; () banked
 10361  0055EE  6F7C               	movwf	(oled_putint8@numData+3)& (0+255),b
 10362                           
 10363                           ; BSR set to: 0
 10364                           ;SSD1306oLED.c: 297: oled_putString(numData.b,station_dot,start_page);
 10365  0055F0  0E79               	movlw	low oled_putint8@numData
 10366  0055F2  0100               	movlb	0	; () banked
 10367  0055F4  6F71               	movwf	oled_putString@string& (0+255),b
 10368  0055F6  0E00               	movlw	high oled_putint8@numData
 10369  0055F8  0100               	movlb	0	; () banked
 10370  0055FA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 10371  0055FC  C076  F073         	movff	oled_putint8@station_dot,oled_putString@station_dot
 10372  005600  C077  F074         	movff	oled_putint8@start_page,oled_putString@start_page
 10373  005604  EC89  F030         	call	_oled_putString	;wreg free
 10374  005608  0012               	return		;funcret
 10375  00560A                     __end_of_oled_putint8:
 10376                           	opt stack 0
 10377                           tblptru	equ	0xFF8
 10378                           tblptrh	equ	0xFF7
 10379                           tblptrl	equ	0xFF6
 10380                           tablat	equ	0xFF5
 10381                           prodh	equ	0xFF4
 10382                           prodl	equ	0xFF3
 10383                           intcon	equ	0xFF2
 10384                           postinc0	equ	0xFEE
 10385                           wreg	equ	0xFE8
 10386                           indf1	equ	0xFE7
 10387                           postdec1	equ	0xFE5
 10388                           fsr1h	equ	0xFE2
 10389                           fsr1l	equ	0xFE1
 10390                           indf2	equ	0xFDF
 10391                           fsr2h	equ	0xFDA
 10392                           fsr2l	equ	0xFD9
 10393                           status	equ	0xFD8
 10394                           
 10395 ;; *************** function _oled_putUint8 *****************
 10396 ;; Defined at:
 10397 ;;		line 264 in file "../Includes/Drivers/SSD1306oLED.c"
 10398 ;; Parameters:    Size  Location     Type
 10399 ;;  number          1    wreg     unsigned char 
 10400 ;;  station_dot     1   22[BANK0 ] unsigned char 
 10401 ;;  start_page      1   23[BANK0 ] unsigned char 
 10402 ;; Auto vars:     Size  Location     Type
 10403 ;;  number          1   24[BANK0 ] unsigned char 
 10404 ;;  numData         6   25[BANK0 ] struct .
 10405 ;; Return value:  Size  Location     Type
 10406 ;;                  1    wreg      void 
 10407 ;; Registers used:
 10408 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10409 ;; Tracked objects:
 10410 ;;		On entry : 0/0
 10411 ;;		On exit  : 0/0
 10412 ;;		Unchanged: 0/0
 10413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10414 ;;      Params:         0       2       0       0       0       0       0       0       0
 10415 ;;      Locals:         0       7       0       0       0       0       0       0       0
 10416 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10417 ;;      Totals:         0       9       0       0       0       0       0       0       0
 10418 ;;Total ram usage:        9 bytes
 10419 ;; Hardware stack levels used:    1
 10420 ;; Hardware stack levels required when called:   15
 10421 ;; This function calls:
 10422 ;;		___awmod
 10423 ;;		___lbdiv
 10424 ;;		_oled_putString
 10425 ;; This function is called by:
 10426 ;;		_moteRunningProcess
 10427 ;;		_test_adc
 10428 ;; This function uses a non-reentrant model
 10429 ;;
 10430                           
 10431                           	psect	text14
 10432  005C10                     __ptext14:
 10433                           	opt stack 0
 10434  005C10                     _oled_putUint8:
 10435                           	opt stack 13
 10436                           
 10437                           ;incstack = 0
 10438                           ;oled_putUint8@number stored from wreg
 10439  005C10  0100               	movlb	0	; () banked
 10440  005C12  6F78               	movwf	oled_putUint8@number& (0+255),b
 10441                           
 10442                           ;SSD1306oLED.c: 266: display_data_t numData;
 10443                           ;SSD1306oLED.c: 267: numData.d2 = '0' + (number % 10);
 10444  005C14  C078  F060         	movff	oled_putUint8@number,___awmod@dividend
 10445  005C18  0100               	movlb	0	; () banked
 10446  005C1A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10447  005C1C  0E00               	movlw	0
 10448  005C1E  0100               	movlb	0	; () banked
 10449  005C20  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10450  005C22  0E0A               	movlw	10
 10451  005C24  6F62               	movwf	___awmod@divisor& (0+255),b
 10452  005C26  EC74  F02B         	call	___awmod	;wreg free
 10453  005C2A  0100               	movlb	0	; () banked
 10454  005C2C  5160               	movf	?___awmod& (0+255),w,b
 10455  005C2E  0F30               	addlw	48
 10456  005C30  0100               	movlb	0	; () banked
 10457  005C32  6F7B               	movwf	(oled_putUint8@numData+2)& (0+255),b
 10458                           
 10459                           ;SSD1306oLED.c: 268: number /= 10;
 10460  005C34  0E0A               	movlw	10
 10461  005C36  0100               	movlb	0	; () banked
 10462  005C38  6F60               	movwf	___lbdiv@divisor& (0+255),b
 10463  005C3A  0100               	movlb	0	; () banked
 10464  005C3C  5178               	movf	oled_putUint8@number& (0+255),w,b
 10465  005C3E  EC4E  F032         	call	___lbdiv
 10466  005C42  0100               	movlb	0	; () banked
 10467  005C44  6F78               	movwf	oled_putUint8@number& (0+255),b
 10468                           
 10469                           ;SSD1306oLED.c: 269: numData.d1 = '0' + (number % 10);
 10470  005C46  C078  F060         	movff	oled_putUint8@number,___awmod@dividend
 10471  005C4A  0100               	movlb	0	; () banked
 10472  005C4C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10473  005C4E  0E00               	movlw	0
 10474  005C50  0100               	movlb	0	; () banked
 10475  005C52  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10476  005C54  0E0A               	movlw	10
 10477  005C56  6F62               	movwf	___awmod@divisor& (0+255),b
 10478  005C58  EC74  F02B         	call	___awmod	;wreg free
 10479  005C5C  0100               	movlb	0	; () banked
 10480  005C5E  5160               	movf	?___awmod& (0+255),w,b
 10481  005C60  0F30               	addlw	48
 10482  005C62  0100               	movlb	0	; () banked
 10483  005C64  6F7A               	movwf	(oled_putUint8@numData+1)& (0+255),b
 10484                           
 10485                           ;SSD1306oLED.c: 270: number /= 10;
 10486  005C66  0E0A               	movlw	10
 10487  005C68  0100               	movlb	0	; () banked
 10488  005C6A  6F60               	movwf	___lbdiv@divisor& (0+255),b
 10489  005C6C  0100               	movlb	0	; () banked
 10490  005C6E  5178               	movf	oled_putUint8@number& (0+255),w,b
 10491  005C70  EC4E  F032         	call	___lbdiv
 10492  005C74  0100               	movlb	0	; () banked
 10493  005C76  6F78               	movwf	oled_putUint8@number& (0+255),b
 10494                           
 10495                           ;SSD1306oLED.c: 271: numData.d0 = '0' + (number % 10);
 10496  005C78  C078  F060         	movff	oled_putUint8@number,___awmod@dividend
 10497  005C7C  0100               	movlb	0	; () banked
 10498  005C7E  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10499  005C80  0E00               	movlw	0
 10500  005C82  0100               	movlb	0	; () banked
 10501  005C84  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10502  005C86  0E0A               	movlw	10
 10503  005C88  6F62               	movwf	___awmod@divisor& (0+255),b
 10504  005C8A  EC74  F02B         	call	___awmod	;wreg free
 10505  005C8E  0100               	movlb	0	; () banked
 10506  005C90  5160               	movf	?___awmod& (0+255),w,b
 10507  005C92  0F30               	addlw	48
 10508  005C94  0100               	movlb	0	; () banked
 10509  005C96  6F79               	movwf	oled_putUint8@numData& (0+255),b
 10510                           
 10511                           ; BSR set to: 0
 10512                           ;SSD1306oLED.c: 273: numData.b[3]=0;
 10513  005C98  0E00               	movlw	0
 10514  005C9A  0100               	movlb	0	; () banked
 10515  005C9C  6F7C               	movwf	(oled_putUint8@numData+3)& (0+255),b
 10516                           
 10517                           ; BSR set to: 0
 10518                           ;SSD1306oLED.c: 275: oled_putString(numData.b,station_dot,start_page);
 10519  005C9E  0E79               	movlw	low oled_putUint8@numData
 10520  005CA0  0100               	movlb	0	; () banked
 10521  005CA2  6F71               	movwf	oled_putString@string& (0+255),b
 10522  005CA4  0E00               	movlw	high oled_putUint8@numData
 10523  005CA6  0100               	movlb	0	; () banked
 10524  005CA8  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 10525  005CAA  C076  F073         	movff	oled_putUint8@station_dot,oled_putString@station_dot
 10526  005CAE  C077  F074         	movff	oled_putUint8@start_page,oled_putString@start_page
 10527  005CB2  EC89  F030         	call	_oled_putString	;wreg free
 10528  005CB6  0012               	return		;funcret
 10529  005CB8                     __end_of_oled_putUint8:
 10530                           	opt stack 0
 10531                           tblptru	equ	0xFF8
 10532                           tblptrh	equ	0xFF7
 10533                           tblptrl	equ	0xFF6
 10534                           tablat	equ	0xFF5
 10535                           prodh	equ	0xFF4
 10536                           prodl	equ	0xFF3
 10537                           intcon	equ	0xFF2
 10538                           postinc0	equ	0xFEE
 10539                           wreg	equ	0xFE8
 10540                           indf1	equ	0xFE7
 10541                           postdec1	equ	0xFE5
 10542                           fsr1h	equ	0xFE2
 10543                           fsr1l	equ	0xFE1
 10544                           indf2	equ	0xFDF
 10545                           fsr2h	equ	0xFDA
 10546                           fsr2l	equ	0xFD9
 10547                           status	equ	0xFD8
 10548                           
 10549 ;; *************** function _moteApp_setSensorsInput *****************
 10550 ;; Defined at:
 10551 ;;		line 1385 in file "../Includes/Board/MOTEapp.c"
 10552 ;; Parameters:    Size  Location     Type
 10553 ;;		None
 10554 ;; Auto vars:     Size  Location     Type
 10555 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 10556 ;; Return value:  Size  Location     Type
 10557 ;;                  1    wreg      void 
 10558 ;; Registers used:
 10559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10560 ;; Tracked objects:
 10561 ;;		On entry : 0/0
 10562 ;;		On exit  : 0/0
 10563 ;;		Unchanged: 0/0
 10564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10565 ;;      Params:         0       0       0       0       0       0       0       0       0
 10566 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10567 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10568 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10569 ;;Total ram usage:        2 bytes
 10570 ;; Hardware stack levels used:    1
 10571 ;; Hardware stack levels required when called:   14
 10572 ;; This function calls:
 10573 ;;		_MOTEapp_getModuleResponse
 10574 ;;		_moteApp_delayms
 10575 ;;		_sendCommand
 10576 ;; This function is called by:
 10577 ;;		_moteRunningProcess
 10578 ;;		_moteApp_testSensors
 10579 ;; This function uses a non-reentrant model
 10580 ;;
 10581                           
 10582                           	psect	text15
 10583  005CB8                     __ptext15:
 10584                           	opt stack 0
 10585  005CB8                     _moteApp_setSensorsInput:
 10586                           	opt stack 14
 10587                           
 10588                           ;MOTEapp.c: 1387: uint16_t escapeCounter = 0;
 10589                           
 10590                           ;incstack = 0
 10591  005CB8  0E00               	movlw	0
 10592  005CBA  0100               	movlb	0	; () banked
 10593  005CBC  6F66               	movwf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),b
 10594  005CBE  0E00               	movlw	0
 10595  005CC0  6F65               	movwf	moteApp_setSensorsInput@escapeCounter& (0+255),b
 10596                           
 10597                           ; BSR set to: 0
 10598                           ;MOTEapp.c: 1388: sendCommand("sys set pinmode GPIO13 ana");
 10599  005CC2  0ED3               	movlw	low STR_183
 10600  005CC4  0100               	movlb	0	; () banked
 10601  005CC6  6F61               	movwf	sendCommand@string& (0+255),b
 10602  005CC8  0E79               	movlw	high STR_183
 10603  005CCA  0100               	movlb	0	; () banked
 10604  005CCC  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10605  005CCE  EC65  F037         	call	_sendCommand	;wreg free
 10606                           
 10607                           ;MOTEapp.c: 1389: while ( !MOTEapp_getModuleResponse() )
 10608  005CD2  D010               	goto	l13095
 10609  005CD4                     l13091:
 10610                           
 10611                           ;MOTEapp.c: 1390: {
 10612                           ;MOTEapp.c: 1391: if (++escapeCounter > 50000)
 10613  005CD4  0100               	movlb	0	; () banked
 10614  005CD6  4B65               	infsnz	moteApp_setSensorsInput@escapeCounter& (0+255),f,b
 10615  005CD8  2B66               	incf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),f,b
 10616  005CDA  0E51               	movlw	81
 10617  005CDC  0100               	movlb	0	; () banked
 10618  005CDE  5D65               	subwf	moteApp_setSensorsInput@escapeCounter& (0+255),w,b
 10619  005CE0  0EC3               	movlw	195
 10620  005CE2  0100               	movlb	0	; () banked
 10621  005CE4  5966               	subwfb	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),w,b
 10622  005CE6  A0D8               	btfss	status,0,c
 10623  005CE8  D001               	goto	u12471
 10624  005CEA  D001               	goto	u12470
 10625  005CEC                     u12471:
 10626  005CEC  D003               	goto	l13095
 10627  005CEE                     u12470:
 10628  005CEE  D00A               	goto	l13097
 10629                           
 10630                           ; BSR set to: 0
 10631                           ;MOTEapp.c: 1392: break;
 10632  005CF0  D009               	goto	l13097
 10633                           
 10634                           ; BSR set to: 0
 10635  005CF2  D000               	goto	l13095
 10636  005CF4                     l13095:
 10637  005CF4  EC41  F030         	call	_MOTEapp_getModuleResponse	;wreg free
 10638  005CF8  0900               	iorlw	0
 10639  005CFA  B4D8               	btfsc	status,2,c
 10640  005CFC  D001               	goto	u12481
 10641  005CFE  D001               	goto	u12480
 10642  005D00                     u12481:
 10643  005D00  D7E9               	goto	l13091
 10644  005D02                     u12480:
 10645  005D02  D000               	goto	l13097
 10646  005D04                     l13097:
 10647                           
 10648                           ;MOTEapp.c: 1393: }
 10649                           ;MOTEapp.c: 1394: escapeCounter = 0;
 10650  005D04  0E00               	movlw	0
 10651  005D06  0100               	movlb	0	; () banked
 10652  005D08  6F66               	movwf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),b
 10653  005D0A  0E00               	movlw	0
 10654  005D0C  6F65               	movwf	moteApp_setSensorsInput@escapeCounter& (0+255),b
 10655                           
 10656                           ; BSR set to: 0
 10657                           ;MOTEapp.c: 1395: sendCommand("sys set pinmode GPIO12 ana");
 10658  005D0E  0EB8               	movlw	low STR_184
 10659  005D10  0100               	movlb	0	; () banked
 10660  005D12  6F61               	movwf	sendCommand@string& (0+255),b
 10661  005D14  0E79               	movlw	high STR_184
 10662  005D16  0100               	movlb	0	; () banked
 10663  005D18  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10664  005D1A  EC65  F037         	call	_sendCommand	;wreg free
 10665                           
 10666                           ;MOTEapp.c: 1396: while ( !MOTEapp_getModuleResponse() )
 10667  005D1E  D010               	goto	l13105
 10668  005D20                     l13101:
 10669                           
 10670                           ;MOTEapp.c: 1397: {
 10671                           ;MOTEapp.c: 1398: if (++escapeCounter > 50000)
 10672  005D20  0100               	movlb	0	; () banked
 10673  005D22  4B65               	infsnz	moteApp_setSensorsInput@escapeCounter& (0+255),f,b
 10674  005D24  2B66               	incf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),f,b
 10675  005D26  0E51               	movlw	81
 10676  005D28  0100               	movlb	0	; () banked
 10677  005D2A  5D65               	subwf	moteApp_setSensorsInput@escapeCounter& (0+255),w,b
 10678  005D2C  0EC3               	movlw	195
 10679  005D2E  0100               	movlb	0	; () banked
 10680  005D30  5966               	subwfb	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),w,b
 10681  005D32  A0D8               	btfss	status,0,c
 10682  005D34  D001               	goto	u12491
 10683  005D36  D001               	goto	u12490
 10684  005D38                     u12491:
 10685  005D38  D003               	goto	l13105
 10686  005D3A                     u12490:
 10687  005D3A  D00A               	goto	l13107
 10688                           
 10689                           ; BSR set to: 0
 10690                           ;MOTEapp.c: 1399: break;
 10691  005D3C  D009               	goto	l13107
 10692                           
 10693                           ; BSR set to: 0
 10694  005D3E  D000               	goto	l13105
 10695  005D40                     l13105:
 10696  005D40  EC41  F030         	call	_MOTEapp_getModuleResponse	;wreg free
 10697  005D44  0900               	iorlw	0
 10698  005D46  B4D8               	btfsc	status,2,c
 10699  005D48  D001               	goto	u12501
 10700  005D4A  D001               	goto	u12500
 10701  005D4C                     u12501:
 10702  005D4C  D7E9               	goto	l13101
 10703  005D4E                     u12500:
 10704  005D4E  D000               	goto	l13107
 10705  005D50                     l13107:
 10706                           
 10707                           ;MOTEapp.c: 1400: }
 10708                           ;MOTEapp.c: 1401: moteApp_delayms(100);
 10709  005D50  0E00               	movlw	0
 10710  005D52  0100               	movlb	0	; () banked
 10711  005D54  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 10712  005D56  0E64               	movlw	100
 10713  005D58  6F60               	movwf	moteApp_delayms@length& (0+255),b
 10714  005D5A  EC90  F036         	call	_moteApp_delayms	;wreg free
 10715  005D5E  0012               	return		;funcret
 10716  005D60                     __end_of_moteApp_setSensorsInput:
 10717                           	opt stack 0
 10718                           tblptru	equ	0xFF8
 10719                           tblptrh	equ	0xFF7
 10720                           tblptrl	equ	0xFF6
 10721                           tablat	equ	0xFF5
 10722                           prodh	equ	0xFF4
 10723                           prodl	equ	0xFF3
 10724                           intcon	equ	0xFF2
 10725                           postinc0	equ	0xFEE
 10726                           wreg	equ	0xFE8
 10727                           indf1	equ	0xFE7
 10728                           postdec1	equ	0xFE5
 10729                           fsr1h	equ	0xFE2
 10730                           fsr1l	equ	0xFE1
 10731                           indf2	equ	0xFDF
 10732                           fsr2h	equ	0xFDA
 10733                           fsr2l	equ	0xFD9
 10734                           status	equ	0xFD8
 10735                           
 10736 ;; *************** function _moteApp_lightStringSize *****************
 10737 ;; Defined at:
 10738 ;;		line 1450 in file "../Includes/Board/MOTEapp.c"
 10739 ;; Parameters:    Size  Location     Type
 10740 ;;		None
 10741 ;; Auto vars:     Size  Location     Type
 10742 ;;		None
 10743 ;; Return value:  Size  Location     Type
 10744 ;;                  1    wreg      unsigned char 
 10745 ;; Registers used:
 10746 ;;		wreg, status,2
 10747 ;; Tracked objects:
 10748 ;;		On entry : 0/0
 10749 ;;		On exit  : 0/0
 10750 ;;		Unchanged: 0/0
 10751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10752 ;;      Params:         0       0       0       0       0       0       0       0       0
 10753 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10754 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10755 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10756 ;;Total ram usage:        0 bytes
 10757 ;; Hardware stack levels used:    1
 10758 ;; Hardware stack levels required when called:   11
 10759 ;; This function calls:
 10760 ;;		Nothing
 10761 ;; This function is called by:
 10762 ;;		_moteRunningProcess
 10763 ;; This function uses a non-reentrant model
 10764 ;;
 10765                           
 10766                           	psect	text16
 10767  0072C4                     __ptext16:
 10768                           	opt stack 0
 10769  0072C4                     _moteApp_lightStringSize:
 10770                           	opt stack 17
 10771                           
 10772                           ;MOTEapp.c: 1452: return lightStringSize;
 10773                           
 10774                           ;incstack = 0
 10775  0072C4  0100               	movlb	0	; () banked
 10776  0072C6  51DF               	movf	_lightStringSize& (0+255),w,b
 10777  0072C8  D000               	goto	l754
 10778  0072CA                     l754:
 10779                           
 10780                           ; BSR set to: 0
 10781  0072CA  0012               	return		;funcret
 10782  0072CC                     __end_of_moteApp_lightStringSize:
 10783                           	opt stack 0
 10784                           tblptru	equ	0xFF8
 10785                           tblptrh	equ	0xFF7
 10786                           tblptrl	equ	0xFF6
 10787                           tablat	equ	0xFF5
 10788                           prodh	equ	0xFF4
 10789                           prodl	equ	0xFF3
 10790                           intcon	equ	0xFF2
 10791                           postinc0	equ	0xFEE
 10792                           wreg	equ	0xFE8
 10793                           indf1	equ	0xFE7
 10794                           postdec1	equ	0xFE5
 10795                           fsr1h	equ	0xFE2
 10796                           fsr1l	equ	0xFE1
 10797                           indf2	equ	0xFDF
 10798                           fsr2h	equ	0xFDA
 10799                           fsr2l	equ	0xFD9
 10800                           status	equ	0xFD8
 10801                           
 10802 ;; *************** function _moteApp_getTempValue *****************
 10803 ;; Defined at:
 10804 ;;		line 1403 in file "../Includes/Board/MOTEapp.c"
 10805 ;; Parameters:    Size  Location     Type
 10806 ;;		None
 10807 ;; Auto vars:     Size  Location     Type
 10808 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 10809 ;; Return value:  Size  Location     Type
 10810 ;;                  2    3[BANK0 ] PTR unsigned char 
 10811 ;; Registers used:
 10812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10813 ;; Tracked objects:
 10814 ;;		On entry : 0/0
 10815 ;;		On exit  : 0/0
 10816 ;;		Unchanged: 0/0
 10817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10818 ;;      Params:         0       2       0       0       0       0       0       0       0
 10819 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10820 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10821 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10822 ;;Total ram usage:        4 bytes
 10823 ;; Hardware stack levels used:    1
 10824 ;; Hardware stack levels required when called:   14
 10825 ;; This function calls:
 10826 ;;		_MOTEapp_getModuleResponse
 10827 ;;		_sendCommand
 10828 ;; This function is called by:
 10829 ;;		_moteHandler
 10830 ;;		_moteRunningProcess
 10831 ;;		_moteApp_testSensors
 10832 ;; This function uses a non-reentrant model
 10833 ;;
 10834                           
 10835                           	psect	text17
 10836  006930                     __ptext17:
 10837                           	opt stack 0
 10838  006930                     _moteApp_getTempValue:
 10839                           	opt stack 14
 10840                           
 10841                           ;MOTEapp.c: 1405: uint16_t escapeCounter = 0;
 10842                           
 10843                           ; BSR set to: 0
 10844                           ;incstack = 0
 10845  006930  0E00               	movlw	0
 10846  006932  0100               	movlb	0	; () banked
 10847  006934  6F66               	movwf	(moteApp_getTempValue@escapeCounter+1)& (0+255),b
 10848  006936  0E00               	movlw	0
 10849  006938  6F65               	movwf	moteApp_getTempValue@escapeCounter& (0+255),b
 10850                           
 10851                           ; BSR set to: 0
 10852                           ;MOTEapp.c: 1407: sendCommand("sys get pinana GPIO12");
 10853  00693A  0E56               	movlw	low STR_185
 10854  00693C  0100               	movlb	0	; () banked
 10855  00693E  6F61               	movwf	sendCommand@string& (0+255),b
 10856  006940  0E7A               	movlw	high STR_185
 10857  006942  0100               	movlb	0	; () banked
 10858  006944  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10859  006946  EC65  F037         	call	_sendCommand	;wreg free
 10860                           
 10861                           ;MOTEapp.c: 1408: while ( !MOTEapp_getModuleResponse() )
 10862  00694A  D010               	goto	l12959
 10863  00694C                     l12955:
 10864                           
 10865                           ;MOTEapp.c: 1409: {
 10866                           ;MOTEapp.c: 1410: if (++escapeCounter > 50000)
 10867  00694C  0100               	movlb	0	; () banked
 10868  00694E  4B65               	infsnz	moteApp_getTempValue@escapeCounter& (0+255),f,b
 10869  006950  2B66               	incf	(moteApp_getTempValue@escapeCounter+1)& (0+255),f,b
 10870  006952  0E51               	movlw	81
 10871  006954  0100               	movlb	0	; () banked
 10872  006956  5D65               	subwf	moteApp_getTempValue@escapeCounter& (0+255),w,b
 10873  006958  0EC3               	movlw	195
 10874  00695A  0100               	movlb	0	; () banked
 10875  00695C  5966               	subwfb	(moteApp_getTempValue@escapeCounter+1)& (0+255),w,b
 10876  00695E  A0D8               	btfss	status,0,c
 10877  006960  D001               	goto	u12261
 10878  006962  D001               	goto	u12260
 10879  006964                     u12261:
 10880  006964  D003               	goto	l12959
 10881  006966                     u12260:
 10882  006966  D00A               	goto	l12961
 10883                           
 10884                           ; BSR set to: 0
 10885                           ;MOTEapp.c: 1411: break;
 10886  006968  D009               	goto	l12961
 10887                           
 10888                           ; BSR set to: 0
 10889  00696A  D000               	goto	l12959
 10890  00696C                     l12959:
 10891  00696C  EC41  F030         	call	_MOTEapp_getModuleResponse	;wreg free
 10892  006970  0900               	iorlw	0
 10893  006972  B4D8               	btfsc	status,2,c
 10894  006974  D001               	goto	u12271
 10895  006976  D001               	goto	u12270
 10896  006978                     u12271:
 10897  006978  D7E9               	goto	l12955
 10898  00697A                     u12270:
 10899  00697A  D000               	goto	l12961
 10900  00697C                     l12961:
 10901                           
 10902                           ;MOTEapp.c: 1412: }
 10903                           ;MOTEapp.c: 1414: return &moduleResonseBuffer;
 10904  00697C  0E5D               	movlw	low _moduleResonseBuffer
 10905  00697E  0100               	movlb	0	; () banked
 10906  006980  6F63               	movwf	?_moteApp_getTempValue& (0+255),b
 10907  006982  0E01               	movlw	high _moduleResonseBuffer
 10908  006984  0100               	movlb	0	; () banked
 10909  006986  6F64               	movwf	(?_moteApp_getTempValue+1)& (0+255),b
 10910  006988  D000               	goto	l732
 10911  00698A                     l732:
 10912                           
 10913                           ; BSR set to: 0
 10914  00698A  0012               	return		;funcret
 10915  00698C                     __end_of_moteApp_getTempValue:
 10916                           	opt stack 0
 10917                           tblptru	equ	0xFF8
 10918                           tblptrh	equ	0xFF7
 10919                           tblptrl	equ	0xFF6
 10920                           tablat	equ	0xFF5
 10921                           prodh	equ	0xFF4
 10922                           prodl	equ	0xFF3
 10923                           intcon	equ	0xFF2
 10924                           postinc0	equ	0xFEE
 10925                           wreg	equ	0xFE8
 10926                           indf1	equ	0xFE7
 10927                           postdec1	equ	0xFE5
 10928                           fsr1h	equ	0xFE2
 10929                           fsr1l	equ	0xFE1
 10930                           indf2	equ	0xFDF
 10931                           fsr2h	equ	0xFDA
 10932                           fsr2l	equ	0xFD9
 10933                           status	equ	0xFD8
 10934                           
 10935 ;; *************** function _moteApp_getLightValue *****************
 10936 ;; Defined at:
 10937 ;;		line 1417 in file "../Includes/Board/MOTEapp.c"
 10938 ;; Parameters:    Size  Location     Type
 10939 ;;		None
 10940 ;; Auto vars:     Size  Location     Type
 10941 ;;  escapeCounte    2   15[BANK0 ] unsigned int 
 10942 ;; Return value:  Size  Location     Type
 10943 ;;                  2   13[BANK0 ] PTR unsigned char 
 10944 ;; Registers used:
 10945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10946 ;; Tracked objects:
 10947 ;;		On entry : 0/0
 10948 ;;		On exit  : 0/0
 10949 ;;		Unchanged: 0/0
 10950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10951 ;;      Params:         0       2       0       0       0       0       0       0       0
 10952 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10953 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10954 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10955 ;;Total ram usage:        4 bytes
 10956 ;; Hardware stack levels used:    1
 10957 ;; Hardware stack levels required when called:   14
 10958 ;; This function calls:
 10959 ;;		_MOTEapp_getModuleResponse
 10960 ;;		_moteApp_setLightString
 10961 ;;		_sendCommand
 10962 ;; This function is called by:
 10963 ;;		_moteHandler
 10964 ;;		_moteRunningProcess
 10965 ;;		_moteApp_testSensors
 10966 ;; This function uses a non-reentrant model
 10967 ;;
 10968                           
 10969                           	psect	text18
 10970  006660                     __ptext18:
 10971                           	opt stack 0
 10972  006660                     _moteApp_getLightValue:
 10973                           	opt stack 14
 10974                           
 10975                           ;MOTEapp.c: 1419: uint16_t escapeCounter = 0;
 10976                           
 10977                           ; BSR set to: 0
 10978                           ;incstack = 0
 10979  006660  0E00               	movlw	0
 10980  006662  0100               	movlb	0	; () banked
 10981  006664  6F70               	movwf	(moteApp_getLightValue@escapeCounter+1)& (0+255),b
 10982  006666  0E00               	movlw	0
 10983  006668  6F6F               	movwf	moteApp_getLightValue@escapeCounter& (0+255),b
 10984                           
 10985                           ; BSR set to: 0
 10986                           ;MOTEapp.c: 1421: sendCommand("sys get pinana GPIO13");
 10987  00666A  0E6C               	movlw	low STR_186
 10988  00666C  0100               	movlb	0	; () banked
 10989  00666E  6F61               	movwf	sendCommand@string& (0+255),b
 10990  006670  0E7A               	movlw	high STR_186
 10991  006672  0100               	movlb	0	; () banked
 10992  006674  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10993  006676  EC65  F037         	call	_sendCommand	;wreg free
 10994                           
 10995                           ;MOTEapp.c: 1422: while ( !MOTEapp_getModuleResponse() )
 10996  00667A  D010               	goto	l12943
 10997  00667C                     l12939:
 10998                           
 10999                           ;MOTEapp.c: 1423: {
 11000                           ;MOTEapp.c: 1424: if (++escapeCounter > 50000)
 11001  00667C  0100               	movlb	0	; () banked
 11002  00667E  4B6F               	infsnz	moteApp_getLightValue@escapeCounter& (0+255),f,b
 11003  006680  2B70               	incf	(moteApp_getLightValue@escapeCounter+1)& (0+255),f,b
 11004  006682  0E51               	movlw	81
 11005  006684  0100               	movlb	0	; () banked
 11006  006686  5D6F               	subwf	moteApp_getLightValue@escapeCounter& (0+255),w,b
 11007  006688  0EC3               	movlw	195
 11008  00668A  0100               	movlb	0	; () banked
 11009  00668C  5970               	subwfb	(moteApp_getLightValue@escapeCounter+1)& (0+255),w,b
 11010  00668E  A0D8               	btfss	status,0,c
 11011  006690  D001               	goto	u12241
 11012  006692  D001               	goto	u12240
 11013  006694                     u12241:
 11014  006694  D003               	goto	l12943
 11015  006696                     u12240:
 11016  006696  D00A               	goto	l12945
 11017                           
 11018                           ; BSR set to: 0
 11019                           ;MOTEapp.c: 1425: break;
 11020  006698  D009               	goto	l12945
 11021                           
 11022                           ; BSR set to: 0
 11023  00669A  D000               	goto	l12943
 11024  00669C                     l12943:
 11025  00669C  EC41  F030         	call	_MOTEapp_getModuleResponse	;wreg free
 11026  0066A0  0900               	iorlw	0
 11027  0066A2  B4D8               	btfsc	status,2,c
 11028  0066A4  D001               	goto	u12251
 11029  0066A6  D001               	goto	u12250
 11030  0066A8                     u12251:
 11031  0066A8  D7E9               	goto	l12939
 11032  0066AA                     u12250:
 11033  0066AA  D000               	goto	l12945
 11034  0066AC                     l12945:
 11035                           
 11036                           ;MOTEapp.c: 1426: }
 11037                           ;MOTEapp.c: 1427: moteApp_setLightString(moduleResonseBuffer);
 11038  0066AC  0E5D               	movlw	low _moduleResonseBuffer
 11039  0066AE  0100               	movlb	0	; () banked
 11040  0066B0  6F6A               	movwf	moteApp_setLightString@lightString& (0+255),b
 11041  0066B2  0E01               	movlw	high _moduleResonseBuffer
 11042  0066B4  0100               	movlb	0	; () banked
 11043  0066B6  6F6B               	movwf	(moteApp_setLightString@lightString+1)& (0+255),b
 11044  0066B8  ECF7  F02F         	call	_moteApp_setLightString	;wreg free
 11045                           
 11046                           ;MOTEapp.c: 1428: return &moduleResonseBuffer;
 11047  0066BC  0E5D               	movlw	low _moduleResonseBuffer
 11048  0066BE  0100               	movlb	0	; () banked
 11049  0066C0  6F6D               	movwf	?_moteApp_getLightValue& (0+255),b
 11050  0066C2  0E01               	movlw	high _moduleResonseBuffer
 11051  0066C4  0100               	movlb	0	; () banked
 11052  0066C6  6F6E               	movwf	(?_moteApp_getLightValue+1)& (0+255),b
 11053  0066C8  D000               	goto	l739
 11054  0066CA                     l739:
 11055                           
 11056                           ; BSR set to: 0
 11057  0066CA  0012               	return		;funcret
 11058  0066CC                     __end_of_moteApp_getLightValue:
 11059                           	opt stack 0
 11060                           tblptru	equ	0xFF8
 11061                           tblptrh	equ	0xFF7
 11062                           tblptrl	equ	0xFF6
 11063                           tablat	equ	0xFF5
 11064                           prodh	equ	0xFF4
 11065                           prodl	equ	0xFF3
 11066                           intcon	equ	0xFF2
 11067                           postinc0	equ	0xFEE
 11068                           wreg	equ	0xFE8
 11069                           indf1	equ	0xFE7
 11070                           postdec1	equ	0xFE5
 11071                           fsr1h	equ	0xFE2
 11072                           fsr1l	equ	0xFE1
 11073                           indf2	equ	0xFDF
 11074                           fsr2h	equ	0xFDA
 11075                           fsr2l	equ	0xFD9
 11076                           status	equ	0xFD8
 11077                           
 11078 ;; *************** function _moteApp_setLightString *****************
 11079 ;; Defined at:
 11080 ;;		line 1435 in file "../Includes/Board/MOTEapp.c"
 11081 ;; Parameters:    Size  Location     Type
 11082 ;;  lightString     2   10[BANK0 ] PTR unsigned char 
 11083 ;;		 -> moduleResonseBuffer(64), 
 11084 ;; Auto vars:     Size  Location     Type
 11085 ;;  stingPos        1   12[BANK0 ] unsigned char 
 11086 ;; Return value:  Size  Location     Type
 11087 ;;                  1    wreg      void 
 11088 ;; Registers used:
 11089 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11090 ;; Tracked objects:
 11091 ;;		On entry : 0/0
 11092 ;;		On exit  : 0/0
 11093 ;;		Unchanged: 0/0
 11094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11095 ;;      Params:         0       2       0       0       0       0       0       0       0
 11096 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11097 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11098 ;;      Totals:         0       3       0       0       0       0       0       0       0
 11099 ;;Total ram usage:        3 bytes
 11100 ;; Hardware stack levels used:    1
 11101 ;; Hardware stack levels required when called:   12
 11102 ;; This function calls:
 11103 ;;		_memcpy
 11104 ;; This function is called by:
 11105 ;;		_moteApp_getLightValue
 11106 ;; This function uses a non-reentrant model
 11107 ;;
 11108                           
 11109                           	psect	text19
 11110  005FEE                     __ptext19:
 11111                           	opt stack 0
 11112  005FEE                     _moteApp_setLightString:
 11113                           	opt stack 15
 11114                           
 11115                           ;MOTEapp.c: 1437: memcpy(storedLight, clearLight, sizeof(storedLight));
 11116                           
 11117                           ; BSR set to: 0
 11118                           ;incstack = 0
 11119  005FEE  0EEB               	movlw	low _storedLight
 11120  005FF0  0100               	movlb	0	; () banked
 11121  005FF2  6F60               	movwf	memcpy@d1& (0+255),b
 11122  005FF4  0E01               	movlw	high _storedLight
 11123  005FF6  0100               	movlb	0	; () banked
 11124  005FF8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11125  005FFA  0EE6               	movlw	low _clearLight
 11126  005FFC  0100               	movlb	0	; () banked
 11127  005FFE  6F62               	movwf	memcpy@s1& (0+255),b
 11128  006000  0E01               	movlw	high _clearLight
 11129  006002  0100               	movlb	0	; () banked
 11130  006004  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 11131  006006  0E00               	movlw	0
 11132  006008  0100               	movlb	0	; () banked
 11133  00600A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 11134  00600C  0E05               	movlw	5
 11135  00600E  6F64               	movwf	memcpy@n& (0+255),b
 11136  006010  EC73  F035         	call	_memcpy	;wreg free
 11137                           
 11138                           ;MOTEapp.c: 1438: memcpy(storedLight, lightString, sizeof(storedLight));
 11139  006014  0EEB               	movlw	low _storedLight
 11140  006016  0100               	movlb	0	; () banked
 11141  006018  6F60               	movwf	memcpy@d1& (0+255),b
 11142  00601A  0E01               	movlw	high _storedLight
 11143  00601C  0100               	movlb	0	; () banked
 11144  00601E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11145  006020  C06A  F062         	movff	moteApp_setLightString@lightString,memcpy@s1
 11146  006024  C06B  F063         	movff	moteApp_setLightString@lightString+1,memcpy@s1+1
 11147  006028  0E00               	movlw	0
 11148  00602A  0100               	movlb	0	; () banked
 11149  00602C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 11150  00602E  0E05               	movlw	5
 11151  006030  6F64               	movwf	memcpy@n& (0+255),b
 11152  006032  EC73  F035         	call	_memcpy	;wreg free
 11153                           
 11154                           ;MOTEapp.c: 1440: for (uint8_t stingPos = 0; stingPos < sizeof(storedLight); stingPos++)
 11155  006036  0E00               	movlw	0
 11156  006038  0100               	movlb	0	; () banked
 11157  00603A  6F6C               	movwf	moteApp_setLightString@stingPos& (0+255),b
 11158                           
 11159                           ; BSR set to: 0
 11160  00603C  0E04               	movlw	4
 11161  00603E  0100               	movlb	0	; () banked
 11162  006040  656C               	cpfsgt	moteApp_setLightString@stingPos& (0+255),b
 11163  006042  D001               	goto	u11071
 11164  006044  D001               	goto	u11070
 11165  006046                     u11071:
 11166  006046  D002               	goto	l12211
 11167  006048                     u11070:
 11168  006048  D01A               	goto	l749
 11169                           
 11170                           ; BSR set to: 0
 11171  00604A  D019               	goto	l749
 11172  00604C                     l12211:
 11173                           
 11174                           ; BSR set to: 0
 11175                           ;MOTEapp.c: 1441: {
 11176                           ;MOTEapp.c: 1442: if (storedLight[stingPos] == 0x00)
 11177  00604C  0100               	movlb	0	; () banked
 11178  00604E  516C               	movf	moteApp_setLightString@stingPos& (0+255),w,b
 11179  006050  0D01               	mullw	1
 11180  006052  0EEB               	movlw	low _storedLight
 11181  006054  24F3               	addwf	prodl,w,c
 11182  006056  6ED9               	movwf	fsr2l,c
 11183  006058  0E01               	movlw	high _storedLight
 11184  00605A  20F4               	addwfc	prodh,w,c
 11185  00605C  6EDA               	movwf	fsr2h,c
 11186  00605E  50DF               	movf	indf2,w,c
 11187  006060  A4D8               	btfss	status,2,c
 11188  006062  D001               	goto	u11081
 11189  006064  D001               	goto	u11080
 11190  006066                     u11081:
 11191  006066  D003               	goto	l12215
 11192  006068                     u11080:
 11193                           
 11194                           ; BSR set to: 0
 11195                           ;MOTEapp.c: 1443: {
 11196                           ;MOTEapp.c: 1444: lightStringSize = stingPos;
 11197  006068  C06C  F0DF         	movff	moteApp_setLightString@stingPos,_lightStringSize
 11198  00606C  D000               	goto	l12215
 11199  00606E                     l12215:
 11200                           
 11201                           ; BSR set to: 0
 11202  00606E  0100               	movlb	0	; () banked
 11203  006070  2B6C               	incf	moteApp_setLightString@stingPos& (0+255),f,b
 11204                           
 11205                           ; BSR set to: 0
 11206  006072  0E04               	movlw	4
 11207  006074  0100               	movlb	0	; () banked
 11208  006076  656C               	cpfsgt	moteApp_setLightString@stingPos& (0+255),b
 11209  006078  D001               	goto	u11091
 11210  00607A  D001               	goto	u11090
 11211  00607C                     u11091:
 11212  00607C  D7E7               	goto	l12211
 11213  00607E                     u11090:
 11214  00607E                     l749:
 11215                           
 11216                           ; BSR set to: 0
 11217                           ;MOTEapp.c: 1445: }
 11218                           ;MOTEapp.c: 1446: }
 11219                           ;MOTEapp.c: 1447: __nop();
 11220  00607E  F000               	nop	
 11221  006080  0012               	return		;funcret
 11222  006082                     __end_of_moteApp_setLightString:
 11223                           	opt stack 0
 11224                           tblptru	equ	0xFF8
 11225                           tblptrh	equ	0xFF7
 11226                           tblptrl	equ	0xFF6
 11227                           tablat	equ	0xFF5
 11228                           prodh	equ	0xFF4
 11229                           prodl	equ	0xFF3
 11230                           intcon	equ	0xFF2
 11231                           postinc0	equ	0xFEE
 11232                           wreg	equ	0xFE8
 11233                           indf1	equ	0xFE7
 11234                           postdec1	equ	0xFE5
 11235                           fsr1h	equ	0xFE2
 11236                           fsr1l	equ	0xFE1
 11237                           indf2	equ	0xFDF
 11238                           fsr2h	equ	0xFDA
 11239                           fsr2l	equ	0xFD9
 11240                           status	equ	0xFD8
 11241                           
 11242 ;; *************** function _memcpy *****************
 11243 ;; Defined at:
 11244 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memcpy.c"
 11245 ;; Parameters:    Size  Location     Type
 11246 ;;  d1              2    0[BANK0 ] PTR void 
 11247 ;;		 -> storedLight(5), 
 11248 ;;  s1              2    2[BANK0 ] PTR const void 
 11249 ;;		 -> clearLight(5), moduleResonseBuffer(64), 
 11250 ;;  n               2    4[BANK0 ] unsigned int 
 11251 ;; Auto vars:     Size  Location     Type
 11252 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 11253 ;;		 -> clearLight(5), moduleResonseBuffer(64), 
 11254 ;;  d               2    6[BANK0 ] PTR unsigned char 
 11255 ;;		 -> storedLight(5), 
 11256 ;; Return value:  Size  Location     Type
 11257 ;;                  2    0[BANK0 ] PTR void 
 11258 ;; Registers used:
 11259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11260 ;; Tracked objects:
 11261 ;;		On entry : 0/0
 11262 ;;		On exit  : 0/0
 11263 ;;		Unchanged: 0/0
 11264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11265 ;;      Params:         0       6       0       0       0       0       0       0       0
 11266 ;;      Locals:         0       4       0       0       0       0       0       0       0
 11267 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11268 ;;      Totals:         0      10       0       0       0       0       0       0       0
 11269 ;;Total ram usage:       10 bytes
 11270 ;; Hardware stack levels used:    1
 11271 ;; Hardware stack levels required when called:   11
 11272 ;; This function calls:
 11273 ;;		Nothing
 11274 ;; This function is called by:
 11275 ;;		_moteApp_setLightString
 11276 ;; This function uses a non-reentrant model
 11277 ;;
 11278                           
 11279                           	psect	text20
 11280  006AE6                     __ptext20:
 11281                           	opt stack 0
 11282  006AE6                     _memcpy:
 11283                           	opt stack 15
 11284                           
 11285                           ;incstack = 0
 11286  006AE6  C062  F068         	movff	memcpy@s1,memcpy@s
 11287  006AEA  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 11288  006AEE  C060  F066         	movff	memcpy@d1,memcpy@d
 11289  006AF2  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 11290  006AF6  D011               	goto	l12031
 11291  006AF8                     l12025:
 11292  006AF8  C068  FFD9         	movff	memcpy@s,fsr2l
 11293  006AFC  C069  FFDA         	movff	memcpy@s+1,fsr2h
 11294  006B00  C066  FFE1         	movff	memcpy@d,fsr1l
 11295  006B04  C067  FFE2         	movff	memcpy@d+1,fsr1h
 11296  006B08  CFDF FFE7          	movff	indf2,indf1
 11297  006B0C  0100               	movlb	0	; () banked
 11298  006B0E  4B68               	infsnz	memcpy@s& (0+255),f,b
 11299  006B10  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 11300                           
 11301                           ; BSR set to: 0
 11302  006B12  0100               	movlb	0	; () banked
 11303  006B14  4B66               	infsnz	memcpy@d& (0+255),f,b
 11304  006B16  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 11305  006B18  D000               	goto	l12031
 11306  006B1A                     l12031:
 11307  006B1A  0100               	movlb	0	; () banked
 11308  006B1C  0764               	decf	memcpy@n& (0+255),f,b
 11309  006B1E  A0D8               	btfss	status,0,c
 11310  006B20  0765               	decf	(memcpy@n+1)& (0+255),f,b
 11311  006B22  0100               	movlb	0	; () banked
 11312  006B24  2964               	incf	memcpy@n& (0+255),w,b
 11313  006B26  E105               	bnz	u10891
 11314  006B28  0100               	movlb	0	; () banked
 11315  006B2A  2965               	incf	(memcpy@n+1)& (0+255),w,b
 11316  006B2C  A4D8               	btfss	status,2,c
 11317  006B2E  D001               	goto	u10891
 11318  006B30  D001               	goto	u10890
 11319  006B32                     u10891:
 11320  006B32  D7E2               	goto	l12025
 11321  006B34                     u10890:
 11322  006B34  D000               	goto	l2607
 11323  006B36                     l2607:
 11324                           
 11325                           ; BSR set to: 0
 11326  006B36  0012               	return		;funcret
 11327  006B38                     __end_of_memcpy:
 11328                           	opt stack 0
 11329                           tblptru	equ	0xFF8
 11330                           tblptrh	equ	0xFF7
 11331                           tblptrl	equ	0xFF6
 11332                           tablat	equ	0xFF5
 11333                           prodh	equ	0xFF4
 11334                           prodl	equ	0xFF3
 11335                           intcon	equ	0xFF2
 11336                           postinc0	equ	0xFEE
 11337                           wreg	equ	0xFE8
 11338                           indf1	equ	0xFE7
 11339                           postdec1	equ	0xFE5
 11340                           fsr1h	equ	0xFE2
 11341                           fsr1l	equ	0xFE1
 11342                           indf2	equ	0xFDF
 11343                           fsr2h	equ	0xFDA
 11344                           fsr2l	equ	0xFD9
 11345                           status	equ	0xFD8
 11346                           
 11347 ;; *************** function _moteApp_getLightString *****************
 11348 ;; Defined at:
 11349 ;;		line 1454 in file "../Includes/Board/MOTEapp.c"
 11350 ;; Parameters:    Size  Location     Type
 11351 ;;		None
 11352 ;; Auto vars:     Size  Location     Type
 11353 ;;		None
 11354 ;; Return value:  Size  Location     Type
 11355 ;;                  2    0[BANK0 ] PTR unsigned char 
 11356 ;; Registers used:
 11357 ;;		wreg, status,2, status,0
 11358 ;; Tracked objects:
 11359 ;;		On entry : 0/0
 11360 ;;		On exit  : 0/0
 11361 ;;		Unchanged: 0/0
 11362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11363 ;;      Params:         0       2       0       0       0       0       0       0       0
 11364 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11365 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11366 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11367 ;;Total ram usage:        2 bytes
 11368 ;; Hardware stack levels used:    1
 11369 ;; Hardware stack levels required when called:   11
 11370 ;; This function calls:
 11371 ;;		Nothing
 11372 ;; This function is called by:
 11373 ;;		_moteRunningProcess
 11374 ;; This function uses a non-reentrant model
 11375 ;;
 11376                           
 11377                           	psect	text21
 11378  007266                     __ptext21:
 11379                           	opt stack 0
 11380  007266                     _moteApp_getLightString:
 11381                           	opt stack 17
 11382                           
 11383                           ;MOTEapp.c: 1456: return &storedLight;
 11384                           
 11385                           ; BSR set to: 0
 11386                           ;incstack = 0
 11387  007266  0EEB               	movlw	low _storedLight
 11388  007268  0100               	movlb	0	; () banked
 11389  00726A  6F60               	movwf	?_moteApp_getLightString& (0+255),b
 11390  00726C  0E01               	movlw	high _storedLight
 11391  00726E  0100               	movlb	0	; () banked
 11392  007270  6F61               	movwf	(?_moteApp_getLightString+1)& (0+255),b
 11393  007272  D000               	goto	l757
 11394  007274                     l757:
 11395                           
 11396                           ; BSR set to: 0
 11397  007274  0012               	return		;funcret
 11398  007276                     __end_of_moteApp_getLightString:
 11399                           	opt stack 0
 11400                           tblptru	equ	0xFF8
 11401                           tblptrh	equ	0xFF7
 11402                           tblptrl	equ	0xFF6
 11403                           tablat	equ	0xFF5
 11404                           prodh	equ	0xFF4
 11405                           prodl	equ	0xFF3
 11406                           intcon	equ	0xFF2
 11407                           postinc0	equ	0xFEE
 11408                           wreg	equ	0xFE8
 11409                           indf1	equ	0xFE7
 11410                           postdec1	equ	0xFE5
 11411                           fsr1h	equ	0xFE2
 11412                           fsr1l	equ	0xFE1
 11413                           indf2	equ	0xFDF
 11414                           fsr2h	equ	0xFDA
 11415                           fsr2l	equ	0xFD9
 11416                           status	equ	0xFD8
 11417                           
 11418 ;; *************** function _moteApp_convertSensorValue *****************
 11419 ;; Defined at:
 11420 ;;		line 1345 in file "../Includes/Board/MOTEapp.c"
 11421 ;; Parameters:    Size  Location     Type
 11422 ;;  string          2   17[BANK0 ] PTR const unsigned char 
 11423 ;;		 -> moduleResonseBuffer(64), 
 11424 ;; Auto vars:     Size  Location     Type
 11425 ;;  convertedVal    2   23[BANK0 ] unsigned int 
 11426 ;;  index           1   22[BANK0 ] unsigned char 
 11427 ;; Return value:  Size  Location     Type
 11428 ;;                  2   17[BANK0 ] unsigned int 
 11429 ;; Registers used:
 11430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11431 ;; Tracked objects:
 11432 ;;		On entry : 0/0
 11433 ;;		On exit  : 0/0
 11434 ;;		Unchanged: 0/0
 11435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11436 ;;      Params:         0       2       0       0       0       0       0       0       0
 11437 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11438 ;;      Temps:          0       3       0       0       0       0       0       0       0
 11439 ;;      Totals:         0       8       0       0       0       0       0       0       0
 11440 ;;Total ram usage:        8 bytes
 11441 ;; Hardware stack levels used:    1
 11442 ;; Hardware stack levels required when called:   12
 11443 ;; This function calls:
 11444 ;;		___wmul
 11445 ;; This function is called by:
 11446 ;;		_moteHandler
 11447 ;;		_moteRunningProcess
 11448 ;;		_moteApp_testSensors
 11449 ;; This function uses a non-reentrant model
 11450 ;;
 11451                           
 11452                           	psect	text22
 11453  005884                     __ptext22:
 11454                           	opt stack 0
 11455  005884                     _moteApp_convertSensorValue:
 11456                           	opt stack 16
 11457                           
 11458                           ;MOTEapp.c: 1347: uint8_t index;
 11459                           ;MOTEapp.c: 1348: uint16_t convertedValue = 0;
 11460                           
 11461                           ; BSR set to: 0
 11462                           ;incstack = 0
 11463  005884  0E00               	movlw	0
 11464  005886  0100               	movlb	0	; () banked
 11465  005888  6F78               	movwf	(moteApp_convertSensorValue@convertedValue+1)& (0+255),b
 11466  00588A  0E00               	movlw	0
 11467  00588C  6F77               	movwf	moteApp_convertSensorValue@convertedValue& (0+255),b
 11468                           
 11469                           ;MOTEapp.c: 1349: for(index = 0; index < 4; index++)
 11470  00588E  0E00               	movlw	0
 11471  005890  0100               	movlb	0	; () banked
 11472  005892  6F76               	movwf	moteApp_convertSensorValue@index& (0+255),b
 11473                           
 11474                           ; BSR set to: 0
 11475  005894  0E03               	movlw	3
 11476  005896  0100               	movlb	0	; () banked
 11477  005898  6576               	cpfsgt	moteApp_convertSensorValue@index& (0+255),b
 11478  00589A  D001               	goto	u12281
 11479  00589C  D001               	goto	u12280
 11480  00589E                     u12281:
 11481  00589E  D002               	goto	l12971
 11482  0058A0                     u12280:
 11483  0058A0  D04A               	goto	l707
 11484                           
 11485                           ; BSR set to: 0
 11486  0058A2  D049               	goto	l707
 11487  0058A4                     l12971:
 11488                           
 11489                           ; BSR set to: 0
 11490                           ;MOTEapp.c: 1350: {
 11491                           ;MOTEapp.c: 1351: if (*string != 0)
 11492  0058A4  C071  FFD9         	movff	moteApp_convertSensorValue@string,fsr2l
 11493  0058A8  C072  FFDA         	movff	moteApp_convertSensorValue@string+1,fsr2h
 11494  0058AC  50DF               	movf	indf2,w,c
 11495  0058AE  B4D8               	btfsc	status,2,c
 11496  0058B0  D001               	goto	u12291
 11497  0058B2  D001               	goto	u12290
 11498  0058B4                     u12291:
 11499  0058B4  D040               	goto	l707
 11500  0058B6                     u12290:
 11501                           
 11502                           ; BSR set to: 0
 11503                           ;MOTEapp.c: 1352: {
 11504                           ;MOTEapp.c: 1353: if (index != 0)
 11505  0058B6  0100               	movlb	0	; () banked
 11506  0058B8  5176               	movf	moteApp_convertSensorValue@index& (0+255),w,b
 11507  0058BA  0100               	movlb	0	; () banked
 11508  0058BC  B4D8               	btfsc	status,2,c
 11509  0058BE  D001               	goto	u12301
 11510  0058C0  D001               	goto	u12300
 11511  0058C2                     u12301:
 11512  0058C2  D010               	goto	l12977
 11513  0058C4                     u12300:
 11514                           
 11515                           ; BSR set to: 0
 11516                           ;MOTEapp.c: 1354: convertedValue = convertedValue * 10;
 11517  0058C4  C077  F060         	movff	moteApp_convertSensorValue@convertedValue,___wmul@multiplier
 11518  0058C8  C078  F061         	movff	moteApp_convertSensorValue@convertedValue+1,___wmul@multiplier+1
 11519  0058CC  0E00               	movlw	0
 11520  0058CE  0100               	movlb	0	; () banked
 11521  0058D0  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11522  0058D2  0E0A               	movlw	10
 11523  0058D4  6F62               	movwf	___wmul@multiplicand& (0+255),b
 11524  0058D6  EC49  F037         	call	___wmul	;wreg free
 11525  0058DA  C060  F077         	movff	?___wmul,moteApp_convertSensorValue@convertedValue
 11526  0058DE  C061  F078         	movff	?___wmul+1,moteApp_convertSensorValue@convertedValue+1
 11527  0058E2  D000               	goto	l12977
 11528  0058E4                     l12977:
 11529                           
 11530                           ;MOTEapp.c: 1356: convertedValue = (*string++ - '0') + convertedValue;
 11531  0058E4  C071  FFD9         	movff	moteApp_convertSensorValue@string,fsr2l
 11532  0058E8  C072  FFDA         	movff	moteApp_convertSensorValue@string+1,fsr2h
 11533  0058EC  50DF               	movf	indf2,w,c
 11534  0058EE  0100               	movlb	0	; () banked
 11535  0058F0  6F73               	movwf	??_moteApp_convertSensorValue& (0+255),b
 11536  0058F2  0100               	movlb	0	; () banked
 11537  0058F4  5173               	movf	??_moteApp_convertSensorValue& (0+255),w,b
 11538  0058F6  0100               	movlb	0	; () banked
 11539  0058F8  2577               	addwf	moteApp_convertSensorValue@convertedValue& (0+255),w,b
 11540  0058FA  0100               	movlb	0	; () banked
 11541  0058FC  6F74               	movwf	(??_moteApp_convertSensorValue+1)& (0+255),b
 11542  0058FE  0E00               	movlw	0
 11543  005900  0100               	movlb	0	; () banked
 11544  005902  2178               	addwfc	(moteApp_convertSensorValue@convertedValue+1)& (0+255),w,b
 11545  005904  0100               	movlb	0	; () banked
 11546  005906  6F75               	movwf	(??_moteApp_convertSensorValue+2)& (0+255),b
 11547  005908  0ED0               	movlw	208
 11548  00590A  0100               	movlb	0	; () banked
 11549  00590C  2574               	addwf	(??_moteApp_convertSensorValue+1)& (0+255),w,b
 11550  00590E  0100               	movlb	0	; () banked
 11551  005910  6F77               	movwf	moteApp_convertSensorValue@convertedValue& (0+255),b
 11552  005912  0EFF               	movlw	255
 11553  005914  0100               	movlb	0	; () banked
 11554  005916  2175               	addwfc	(??_moteApp_convertSensorValue+2)& (0+255),w,b
 11555  005918  0100               	movlb	0	; () banked
 11556  00591A  6F78               	movwf	(moteApp_convertSensorValue@convertedValue+1)& (0+255),b
 11557                           
 11558                           ; BSR set to: 0
 11559  00591C  0100               	movlb	0	; () banked
 11560  00591E  4B71               	infsnz	moteApp_convertSensorValue@string& (0+255),f,b
 11561  005920  2B72               	incf	(moteApp_convertSensorValue@string+1)& (0+255),f,b
 11562                           
 11563                           ;MOTEapp.c: 1357: }
 11564  005922  D001               	goto	l12981
 11565                           
 11566                           ; BSR set to: 0
 11567                           ;MOTEapp.c: 1358: else
 11568                           ;MOTEapp.c: 1359: {
 11569                           ;MOTEapp.c: 1360: break;
 11570  005924  D008               	goto	l707
 11571  005926                     l12981:
 11572                           
 11573                           ; BSR set to: 0
 11574  005926  0100               	movlb	0	; () banked
 11575  005928  2B76               	incf	moteApp_convertSensorValue@index& (0+255),f,b
 11576                           
 11577                           ; BSR set to: 0
 11578  00592A  0E03               	movlw	3
 11579  00592C  0100               	movlb	0	; () banked
 11580  00592E  6576               	cpfsgt	moteApp_convertSensorValue@index& (0+255),b
 11581  005930  D001               	goto	u12311
 11582  005932  D001               	goto	u12310
 11583  005934                     u12311:
 11584  005934  D7B7               	goto	l12971
 11585  005936                     u12310:
 11586  005936                     l707:
 11587                           
 11588                           ; BSR set to: 0
 11589                           ;MOTEapp.c: 1361: }
 11590                           ;MOTEapp.c: 1362: }
 11591                           ;MOTEapp.c: 1363: return convertedValue;
 11592  005936  C077  F071         	movff	moteApp_convertSensorValue@convertedValue,?_moteApp_convertSensorValue
 11593  00593A  C078  F072         	movff	moteApp_convertSensorValue@convertedValue+1,?_moteApp_convertSensorValue+1
 11594                           
 11595                           ; BSR set to: 0
 11596  00593E  0012               	return		;funcret
 11597  005940                     __end_of_moteApp_convertSensorValue:
 11598                           	opt stack 0
 11599                           tblptru	equ	0xFF8
 11600                           tblptrh	equ	0xFF7
 11601                           tblptrl	equ	0xFF6
 11602                           tablat	equ	0xFF5
 11603                           prodh	equ	0xFF4
 11604                           prodl	equ	0xFF3
 11605                           intcon	equ	0xFF2
 11606                           postinc0	equ	0xFEE
 11607                           wreg	equ	0xFE8
 11608                           indf1	equ	0xFE7
 11609                           postdec1	equ	0xFE5
 11610                           fsr1h	equ	0xFE2
 11611                           fsr1l	equ	0xFE1
 11612                           indf2	equ	0xFDF
 11613                           fsr2h	equ	0xFDA
 11614                           fsr2l	equ	0xFD9
 11615                           status	equ	0xFD8
 11616                           
 11617 ;; *************** function ___wmul *****************
 11618 ;; Defined at:
 11619 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
 11620 ;; Parameters:    Size  Location     Type
 11621 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11622 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11623 ;; Auto vars:     Size  Location     Type
 11624 ;;  product         2    4[BANK0 ] unsigned int 
 11625 ;; Return value:  Size  Location     Type
 11626 ;;                  2    0[BANK0 ] unsigned int 
 11627 ;; Registers used:
 11628 ;;		wreg, status,2, status,0, prodl, prodh
 11629 ;; Tracked objects:
 11630 ;;		On entry : 0/0
 11631 ;;		On exit  : 0/0
 11632 ;;		Unchanged: 0/0
 11633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11634 ;;      Params:         0       4       0       0       0       0       0       0       0
 11635 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11636 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11637 ;;      Totals:         0       6       0       0       0       0       0       0       0
 11638 ;;Total ram usage:        6 bytes
 11639 ;; Hardware stack levels used:    1
 11640 ;; Hardware stack levels required when called:   11
 11641 ;; This function calls:
 11642 ;;		Nothing
 11643 ;; This function is called by:
 11644 ;;		_moteApp_convertSensorValue
 11645 ;; This function uses a non-reentrant model
 11646 ;;
 11647                           
 11648                           	psect	text23
 11649  006E92                     __ptext23:
 11650                           	opt stack 0
 11651  006E92                     ___wmul:
 11652                           	opt stack 16
 11653                           
 11654                           ; BSR set to: 0
 11655                           ;incstack = 0
 11656  006E92  0100               	movlb	0	; () banked
 11657  006E94  5160               	movf	___wmul@multiplier& (0+255),w,b
 11658  006E96  0100               	movlb	0	; () banked
 11659  006E98  0362               	mulwf	___wmul@multiplicand& (0+255),b
 11660  006E9A  CFF3 F064          	movff	prodl,___wmul@product
 11661  006E9E  CFF4 F065          	movff	prodh,___wmul@product+1
 11662  006EA2  0100               	movlb	0	; () banked
 11663  006EA4  5160               	movf	___wmul@multiplier& (0+255),w,b
 11664  006EA6  0100               	movlb	0	; () banked
 11665  006EA8  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11666  006EAA  50F3               	movf	prodl,w,c
 11667  006EAC  0100               	movlb	0	; () banked
 11668  006EAE  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 11669  006EB0  0100               	movlb	0	; () banked
 11670  006EB2  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11671  006EB4  0100               	movlb	0	; () banked
 11672  006EB6  0362               	mulwf	___wmul@multiplicand& (0+255),b
 11673  006EB8  50F3               	movf	prodl,w,c
 11674  006EBA  0100               	movlb	0	; () banked
 11675  006EBC  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 11676                           
 11677                           ; BSR set to: 0
 11678  006EBE  C064  F060         	movff	___wmul@product,?___wmul
 11679  006EC2  C065  F061         	movff	___wmul@product+1,?___wmul+1
 11680  006EC6  D000               	goto	l2179
 11681  006EC8                     l2179:
 11682                           
 11683                           ; BSR set to: 0
 11684  006EC8  0012               	return		;funcret
 11685  006ECA                     __end_of___wmul:
 11686                           	opt stack 0
 11687                           tblptru	equ	0xFF8
 11688                           tblptrh	equ	0xFF7
 11689                           tblptrl	equ	0xFF6
 11690                           tablat	equ	0xFF5
 11691                           prodh	equ	0xFF4
 11692                           prodl	equ	0xFF3
 11693                           intcon	equ	0xFF2
 11694                           postinc0	equ	0xFEE
 11695                           wreg	equ	0xFE8
 11696                           indf1	equ	0xFE7
 11697                           postdec1	equ	0xFE5
 11698                           fsr1h	equ	0xFE2
 11699                           fsr1l	equ	0xFE1
 11700                           indf2	equ	0xFDF
 11701                           fsr2h	equ	0xFDA
 11702                           fsr2l	equ	0xFD9
 11703                           status	equ	0xFD8
 11704                           
 11705 ;; *************** function _moteApp_clearBuffers *****************
 11706 ;; Defined at:
 11707 ;;		line 1285 in file "../Includes/Board/MOTEapp.c"
 11708 ;; Parameters:    Size  Location     Type
 11709 ;;		None
 11710 ;; Auto vars:     Size  Location     Type
 11711 ;;  counter         1    3[BANK0 ] unsigned char 
 11712 ;;  counter         1    2[BANK0 ] unsigned char 
 11713 ;;  counter         1    1[BANK0 ] unsigned char 
 11714 ;;  counter         1    0[BANK0 ] unsigned char 
 11715 ;; Return value:  Size  Location     Type
 11716 ;;                  1    wreg      void 
 11717 ;; Registers used:
 11718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11719 ;; Tracked objects:
 11720 ;;		On entry : 0/0
 11721 ;;		On exit  : 0/0
 11722 ;;		Unchanged: 0/0
 11723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11724 ;;      Params:         0       0       0       0       0       0       0       0       0
 11725 ;;      Locals:         0       4       0       0       0       0       0       0       0
 11726 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11727 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11728 ;;Total ram usage:        4 bytes
 11729 ;; Hardware stack levels used:    1
 11730 ;; Hardware stack levels required when called:   11
 11731 ;; This function calls:
 11732 ;;		Nothing
 11733 ;; This function is called by:
 11734 ;;		_moteRunningProcess
 11735 ;; This function uses a non-reentrant model
 11736 ;;
 11737                           
 11738                           	psect	text24
 11739  004AEA                     __ptext24:
 11740                           	opt stack 0
 11741  004AEA                     _moteApp_clearBuffers:
 11742                           	opt stack 17
 11743                           
 11744                           ;MOTEapp.c: 1287: for (uint8_t counter = 0; counter < 3; counter++)
 11745                           
 11746                           ; BSR set to: 0
 11747                           ;incstack = 0
 11748  004AEA  0E00               	movlw	0
 11749  004AEC  0100               	movlb	0	; () banked
 11750  004AEE  6F60               	movwf	moteApp_clearBuffers@counter& (0+255),b
 11751                           
 11752                           ; BSR set to: 0
 11753  004AF0  0E02               	movlw	2
 11754  004AF2  0100               	movlb	0	; () banked
 11755  004AF4  6560               	cpfsgt	moteApp_clearBuffers@counter& (0+255),b
 11756  004AF6  D001               	goto	u12391
 11757  004AF8  D001               	goto	u12390
 11758  004AFA                     u12391:
 11759  004AFA  D002               	goto	l13045
 11760  004AFC                     u12390:
 11761  004AFC  D015               	goto	l13051
 11762                           
 11763                           ; BSR set to: 0
 11764  004AFE  D014               	goto	l13051
 11765  004B00                     l13045:
 11766                           
 11767                           ; BSR set to: 0
 11768                           ;MOTEapp.c: 1288: {
 11769                           ;MOTEapp.c: 1289: responsePortNum[counter] = 0;
 11770  004B00  0100               	movlb	0	; () banked
 11771  004B02  5160               	movf	moteApp_clearBuffers@counter& (0+255),w,b
 11772  004B04  0D01               	mullw	1
 11773  004B06  0EF0               	movlw	low _responsePortNum
 11774  004B08  24F3               	addwf	prodl,w,c
 11775  004B0A  6ED9               	movwf	fsr2l,c
 11776  004B0C  0E01               	movlw	high _responsePortNum
 11777  004B0E  20F4               	addwfc	prodh,w,c
 11778  004B10  6EDA               	movwf	fsr2h,c
 11779  004B12  0E00               	movlw	0
 11780  004B14  6EDF               	movwf	indf2,c
 11781                           
 11782                           ; BSR set to: 0
 11783  004B16  0100               	movlb	0	; () banked
 11784  004B18  2B60               	incf	moteApp_clearBuffers@counter& (0+255),f,b
 11785                           
 11786                           ; BSR set to: 0
 11787  004B1A  0E02               	movlw	2
 11788  004B1C  0100               	movlb	0	; () banked
 11789  004B1E  6560               	cpfsgt	moteApp_clearBuffers@counter& (0+255),b
 11790  004B20  D001               	goto	u12401
 11791  004B22  D001               	goto	u12400
 11792  004B24                     u12401:
 11793  004B24  D7ED               	goto	l13045
 11794  004B26                     u12400:
 11795  004B26  D000               	goto	l13051
 11796  004B28                     l13051:
 11797                           
 11798                           ; BSR set to: 0
 11799                           ;MOTEapp.c: 1290: }
 11800                           ;MOTEapp.c: 1291: for (uint8_t counter = 0; counter < 34; counter++)
 11801  004B28  0E00               	movlw	0
 11802  004B2A  0100               	movlb	0	; () banked
 11803  004B2C  6F61               	movwf	moteApp_clearBuffers@counter_1710& (0+255),b
 11804                           
 11805                           ; BSR set to: 0
 11806  004B2E  0E21               	movlw	33
 11807  004B30  0100               	movlb	0	; () banked
 11808  004B32  6561               	cpfsgt	moteApp_clearBuffers@counter_1710& (0+255),b
 11809  004B34  D001               	goto	u12411
 11810  004B36  D001               	goto	u12410
 11811  004B38                     u12411:
 11812  004B38  D002               	goto	l13057
 11813  004B3A                     u12410:
 11814  004B3A  D015               	goto	l13063
 11815                           
 11816                           ; BSR set to: 0
 11817  004B3C  D014               	goto	l13063
 11818  004B3E                     l13057:
 11819                           
 11820                           ; BSR set to: 0
 11821                           ;MOTEapp.c: 1292: {
 11822                           ;MOTEapp.c: 1293: responseId[counter] = 0;
 11823  004B3E  0100               	movlb	0	; () banked
 11824  004B40  5161               	movf	moteApp_clearBuffers@counter_1710& (0+255),w,b
 11825  004B42  0D01               	mullw	1
 11826  004B44  0E30               	movlw	low _responseId
 11827  004B46  24F3               	addwf	prodl,w,c
 11828  004B48  6ED9               	movwf	fsr2l,c
 11829  004B4A  0E01               	movlw	high _responseId
 11830  004B4C  20F4               	addwfc	prodh,w,c
 11831  004B4E  6EDA               	movwf	fsr2h,c
 11832  004B50  0E00               	movlw	0
 11833  004B52  6EDF               	movwf	indf2,c
 11834                           
 11835                           ; BSR set to: 0
 11836  004B54  0100               	movlb	0	; () banked
 11837  004B56  2B61               	incf	moteApp_clearBuffers@counter_1710& (0+255),f,b
 11838                           
 11839                           ; BSR set to: 0
 11840  004B58  0E21               	movlw	33
 11841  004B5A  0100               	movlb	0	; () banked
 11842  004B5C  6561               	cpfsgt	moteApp_clearBuffers@counter_1710& (0+255),b
 11843  004B5E  D001               	goto	u12421
 11844  004B60  D001               	goto	u12420
 11845  004B62                     u12421:
 11846  004B62  D7ED               	goto	l13057
 11847  004B64                     u12420:
 11848  004B64  D000               	goto	l13063
 11849  004B66                     l13063:
 11850                           
 11851                           ; BSR set to: 0
 11852                           ;MOTEapp.c: 1294: }
 11853                           ;MOTEapp.c: 1295: for (uint8_t counter = 0; counter < 32; counter++)
 11854  004B66  0E00               	movlw	0
 11855  004B68  0100               	movlb	0	; () banked
 11856  004B6A  6F62               	movwf	moteApp_clearBuffers@counter_1711& (0+255),b
 11857                           
 11858                           ; BSR set to: 0
 11859  004B6C  0E1F               	movlw	31
 11860  004B6E  0100               	movlb	0	; () banked
 11861  004B70  6562               	cpfsgt	moteApp_clearBuffers@counter_1711& (0+255),b
 11862  004B72  D001               	goto	u12431
 11863  004B74  D001               	goto	u12430
 11864  004B76                     u12431:
 11865  004B76  D002               	goto	l13069
 11866  004B78                     u12430:
 11867  004B78  D015               	goto	l13075
 11868                           
 11869                           ; BSR set to: 0
 11870  004B7A  D014               	goto	l13075
 11871  004B7C                     l13069:
 11872                           
 11873                           ; BSR set to: 0
 11874                           ;MOTEapp.c: 1296: {
 11875                           ;MOTEapp.c: 1297: responseData[counter] = 0;
 11876  004B7C  0100               	movlb	0	; () banked
 11877  004B7E  5162               	movf	moteApp_clearBuffers@counter_1711& (0+255),w,b
 11878  004B80  0D01               	mullw	1
 11879  004B82  0E9D               	movlw	low _responseData
 11880  004B84  24F3               	addwf	prodl,w,c
 11881  004B86  6ED9               	movwf	fsr2l,c
 11882  004B88  0E01               	movlw	high _responseData
 11883  004B8A  20F4               	addwfc	prodh,w,c
 11884  004B8C  6EDA               	movwf	fsr2h,c
 11885  004B8E  0E00               	movlw	0
 11886  004B90  6EDF               	movwf	indf2,c
 11887                           
 11888                           ; BSR set to: 0
 11889  004B92  0100               	movlb	0	; () banked
 11890  004B94  2B62               	incf	moteApp_clearBuffers@counter_1711& (0+255),f,b
 11891                           
 11892                           ; BSR set to: 0
 11893  004B96  0E1F               	movlw	31
 11894  004B98  0100               	movlb	0	; () banked
 11895  004B9A  6562               	cpfsgt	moteApp_clearBuffers@counter_1711& (0+255),b
 11896  004B9C  D001               	goto	u12441
 11897  004B9E  D001               	goto	u12440
 11898  004BA0                     u12441:
 11899  004BA0  D7ED               	goto	l13069
 11900  004BA2                     u12440:
 11901  004BA2  D000               	goto	l13075
 11902  004BA4                     l13075:
 11903                           
 11904                           ; BSR set to: 0
 11905                           ;MOTEapp.c: 1298: }
 11906                           ;MOTEapp.c: 1299: for (uint8_t counter = 0; counter < sizeof(dataBuffer); counter++)
 11907  004BA4  0E00               	movlw	0
 11908  004BA6  0100               	movlb	0	; () banked
 11909  004BA8  6F63               	movwf	moteApp_clearBuffers@counter_1712& (0+255),b
 11910                           
 11911                           ; BSR set to: 0
 11912  004BAA  0E0F               	movlw	15
 11913  004BAC  0100               	movlb	0	; () banked
 11914  004BAE  6563               	cpfsgt	moteApp_clearBuffers@counter_1712& (0+255),b
 11915  004BB0  D001               	goto	u12451
 11916  004BB2  D001               	goto	u12450
 11917  004BB4                     u12451:
 11918  004BB4  D002               	goto	l13081
 11919  004BB6                     u12450:
 11920  004BB6  D015               	goto	l690
 11921                           
 11922                           ; BSR set to: 0
 11923  004BB8  D014               	goto	l690
 11924  004BBA                     l13081:
 11925                           
 11926                           ; BSR set to: 0
 11927                           ;MOTEapp.c: 1300: {
 11928                           ;MOTEapp.c: 1301: dataBuffer[counter] = 0;
 11929  004BBA  0100               	movlb	0	; () banked
 11930  004BBC  5163               	movf	moteApp_clearBuffers@counter_1712& (0+255),w,b
 11931  004BBE  0D01               	mullw	1
 11932  004BC0  0EBD               	movlw	low _dataBuffer
 11933  004BC2  24F3               	addwf	prodl,w,c
 11934  004BC4  6ED9               	movwf	fsr2l,c
 11935  004BC6  0E01               	movlw	high _dataBuffer
 11936  004BC8  20F4               	addwfc	prodh,w,c
 11937  004BCA  6EDA               	movwf	fsr2h,c
 11938  004BCC  0E00               	movlw	0
 11939  004BCE  6EDF               	movwf	indf2,c
 11940                           
 11941                           ; BSR set to: 0
 11942  004BD0  0100               	movlb	0	; () banked
 11943  004BD2  2B63               	incf	moteApp_clearBuffers@counter_1712& (0+255),f,b
 11944                           
 11945                           ; BSR set to: 0
 11946  004BD4  0E0F               	movlw	15
 11947  004BD6  0100               	movlb	0	; () banked
 11948  004BD8  6563               	cpfsgt	moteApp_clearBuffers@counter_1712& (0+255),b
 11949  004BDA  D001               	goto	u12461
 11950  004BDC  D001               	goto	u12460
 11951  004BDE                     u12461:
 11952  004BDE  D7ED               	goto	l13081
 11953  004BE0                     u12460:
 11954  004BE0  D000               	goto	l690
 11955  004BE2                     l690:
 11956                           
 11957                           ; BSR set to: 0
 11958  004BE2  0012               	return		;funcret
 11959  004BE4                     __end_of_moteApp_clearBuffers:
 11960                           	opt stack 0
 11961                           tblptru	equ	0xFF8
 11962                           tblptrh	equ	0xFF7
 11963                           tblptrl	equ	0xFF6
 11964                           tablat	equ	0xFF5
 11965                           prodh	equ	0xFF4
 11966                           prodl	equ	0xFF3
 11967                           intcon	equ	0xFF2
 11968                           postinc0	equ	0xFEE
 11969                           wreg	equ	0xFE8
 11970                           indf1	equ	0xFE7
 11971                           postdec1	equ	0xFE5
 11972                           fsr1h	equ	0xFE2
 11973                           fsr1l	equ	0xFE1
 11974                           indf2	equ	0xFDF
 11975                           fsr2h	equ	0xFDA
 11976                           fsr2l	equ	0xFD9
 11977                           status	equ	0xFD8
 11978                           
 11979 ;; *************** function _moteApp_addToDataBuffer *****************
 11980 ;; Defined at:
 11981 ;;		line 1327 in file "../Includes/Board/MOTEapp.c"
 11982 ;; Parameters:    Size  Location     Type
 11983 ;;  string          2   17[BANK0 ] PTR const unsigned char 
 11984 ;;		 -> storedLight(5), moduleResonseBuffer(64), 
 11985 ;;  bufferLocati    1   19[BANK0 ] unsigned char 
 11986 ;; Auto vars:     Size  Location     Type
 11987 ;;  index           1   20[BANK0 ] unsigned char 
 11988 ;; Return value:  Size  Location     Type
 11989 ;;                  1    wreg      unsigned char 
 11990 ;; Registers used:
 11991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11992 ;; Tracked objects:
 11993 ;;		On entry : 0/0
 11994 ;;		On exit  : 0/0
 11995 ;;		Unchanged: 0/0
 11996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11997 ;;      Params:         0       3       0       0       0       0       0       0       0
 11998 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11999 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12000 ;;      Totals:         0       4       0       0       0       0       0       0       0
 12001 ;;Total ram usage:        4 bytes
 12002 ;; Hardware stack levels used:    1
 12003 ;; Hardware stack levels required when called:   11
 12004 ;; This function calls:
 12005 ;;		Nothing
 12006 ;; This function is called by:
 12007 ;;		_moteRunningProcess
 12008 ;; This function uses a non-reentrant model
 12009 ;;
 12010                           
 12011                           	psect	text25
 12012  0062A6                     __ptext25:
 12013                           	opt stack 0
 12014  0062A6                     _moteApp_addToDataBuffer:
 12015                           	opt stack 17
 12016                           
 12017                           ;MOTEapp.c: 1329: uint8_t index;
 12018                           ;MOTEapp.c: 1330: for(index = 0; index < 6; index++)
 12019                           
 12020                           ; BSR set to: 0
 12021                           ;incstack = 0
 12022  0062A6  0E00               	movlw	0
 12023  0062A8  0100               	movlb	0	; () banked
 12024  0062AA  6F74               	movwf	moteApp_addToDataBuffer@index& (0+255),b
 12025                           
 12026                           ; BSR set to: 0
 12027  0062AC  0E05               	movlw	5
 12028  0062AE  0100               	movlb	0	; () banked
 12029  0062B0  6574               	cpfsgt	moteApp_addToDataBuffer@index& (0+255),b
 12030  0062B2  D001               	goto	u12511
 12031  0062B4  D001               	goto	u12510
 12032  0062B6                     u12511:
 12033  0062B6  D002               	goto	l13119
 12034  0062B8                     u12510:
 12035  0062B8  D034               	goto	l13133
 12036                           
 12037                           ; BSR set to: 0
 12038  0062BA  D033               	goto	l13133
 12039  0062BC                     l13119:
 12040                           
 12041                           ; BSR set to: 0
 12042                           ;MOTEapp.c: 1331: {
 12043                           ;MOTEapp.c: 1332: if (*string != 0)
 12044  0062BC  C071  FFD9         	movff	moteApp_addToDataBuffer@string,fsr2l
 12045  0062C0  C072  FFDA         	movff	moteApp_addToDataBuffer@string+1,fsr2h
 12046  0062C4  50DF               	movf	indf2,w,c
 12047  0062C6  B4D8               	btfsc	status,2,c
 12048  0062C8  D001               	goto	u12521
 12049  0062CA  D001               	goto	u12520
 12050  0062CC                     u12521:
 12051  0062CC  D015               	goto	l13127
 12052  0062CE                     u12520:
 12053                           
 12054                           ; BSR set to: 0
 12055                           ;MOTEapp.c: 1333: {
 12056                           ;MOTEapp.c: 1334: dataBuffer[bufferLocation++] = *string++;
 12057  0062CE  C071  FFD9         	movff	moteApp_addToDataBuffer@string,fsr2l
 12058  0062D2  C072  FFDA         	movff	moteApp_addToDataBuffer@string+1,fsr2h
 12059  0062D6  0100               	movlb	0	; () banked
 12060  0062D8  5173               	movf	moteApp_addToDataBuffer@bufferLocation& (0+255),w,b
 12061  0062DA  0D01               	mullw	1
 12062  0062DC  0EBD               	movlw	low _dataBuffer
 12063  0062DE  24F3               	addwf	prodl,w,c
 12064  0062E0  6EE1               	movwf	fsr1l,c
 12065  0062E2  0E01               	movlw	high _dataBuffer
 12066  0062E4  20F4               	addwfc	prodh,w,c
 12067  0062E6  6EE2               	movwf	fsr1h,c
 12068  0062E8  CFDF FFE7          	movff	indf2,indf1
 12069                           
 12070                           ; BSR set to: 0
 12071  0062EC  0100               	movlb	0	; () banked
 12072  0062EE  4B71               	infsnz	moteApp_addToDataBuffer@string& (0+255),f,b
 12073  0062F0  2B72               	incf	(moteApp_addToDataBuffer@string+1)& (0+255),f,b
 12074                           
 12075                           ; BSR set to: 0
 12076  0062F2  0100               	movlb	0	; () banked
 12077  0062F4  2B73               	incf	moteApp_addToDataBuffer@bufferLocation& (0+255),f,b
 12078                           
 12079                           ;MOTEapp.c: 1335: }
 12080  0062F6  D00C               	goto	l13129
 12081  0062F8                     l13127:
 12082                           
 12083                           ; BSR set to: 0
 12084                           ;MOTEapp.c: 1336: else
 12085                           ;MOTEapp.c: 1337: {
 12086                           ;MOTEapp.c: 1338: dataBuffer[bufferLocation] = 0x20;
 12087  0062F8  0100               	movlb	0	; () banked
 12088  0062FA  5173               	movf	moteApp_addToDataBuffer@bufferLocation& (0+255),w,b
 12089  0062FC  0D01               	mullw	1
 12090  0062FE  0EBD               	movlw	low _dataBuffer
 12091  006300  24F3               	addwf	prodl,w,c
 12092  006302  6ED9               	movwf	fsr2l,c
 12093  006304  0E01               	movlw	high _dataBuffer
 12094  006306  20F4               	addwfc	prodh,w,c
 12095  006308  6EDA               	movwf	fsr2h,c
 12096  00630A  0E20               	movlw	32
 12097  00630C  6EDF               	movwf	indf2,c
 12098                           
 12099                           ;MOTEapp.c: 1339: break;
 12100  00630E  D009               	goto	l13133
 12101  006310                     l13129:
 12102                           
 12103                           ; BSR set to: 0
 12104  006310  0100               	movlb	0	; () banked
 12105  006312  2B74               	incf	moteApp_addToDataBuffer@index& (0+255),f,b
 12106                           
 12107                           ; BSR set to: 0
 12108  006314  0E05               	movlw	5
 12109  006316  0100               	movlb	0	; () banked
 12110  006318  6574               	cpfsgt	moteApp_addToDataBuffer@index& (0+255),b
 12111  00631A  D001               	goto	u12531
 12112  00631C  D001               	goto	u12530
 12113  00631E                     u12531:
 12114  00631E  D7CE               	goto	l13119
 12115  006320                     u12530:
 12116  006320  D000               	goto	l13133
 12117  006322                     l13133:
 12118                           
 12119                           ; BSR set to: 0
 12120                           ;MOTEapp.c: 1340: }
 12121                           ;MOTEapp.c: 1341: }
 12122                           ;MOTEapp.c: 1342: return index;
 12123  006322  0100               	movlb	0	; () banked
 12124  006324  5174               	movf	moteApp_addToDataBuffer@index& (0+255),w,b
 12125  006326  D000               	goto	l703
 12126  006328                     l703:
 12127                           
 12128                           ; BSR set to: 0
 12129  006328  0012               	return		;funcret
 12130  00632A                     __end_of_moteApp_addToDataBuffer:
 12131                           	opt stack 0
 12132                           tblptru	equ	0xFF8
 12133                           tblptrh	equ	0xFF7
 12134                           tblptrl	equ	0xFF6
 12135                           tablat	equ	0xFF5
 12136                           prodh	equ	0xFF4
 12137                           prodl	equ	0xFF3
 12138                           intcon	equ	0xFF2
 12139                           postinc0	equ	0xFEE
 12140                           wreg	equ	0xFE8
 12141                           indf1	equ	0xFE7
 12142                           postdec1	equ	0xFE5
 12143                           fsr1h	equ	0xFE2
 12144                           fsr1l	equ	0xFE1
 12145                           indf2	equ	0xFDF
 12146                           fsr2h	equ	0xFDA
 12147                           fsr2l	equ	0xFD9
 12148                           status	equ	0xFD8
 12149                           
 12150 ;; *************** function _moteApp_add8bToDataBuffer *****************
 12151 ;; Defined at:
 12152 ;;		line 1305 in file "../Includes/Board/MOTEapp.c"
 12153 ;; Parameters:    Size  Location     Type
 12154 ;;  number          1    wreg     unsigned char 
 12155 ;;  bufferLocati    1    6[BANK0 ] unsigned char 
 12156 ;; Auto vars:     Size  Location     Type
 12157 ;;  number          1    9[BANK0 ] unsigned char 
 12158 ;; Return value:  Size  Location     Type
 12159 ;;                  1    wreg      void 
 12160 ;; Registers used:
 12161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12162 ;; Tracked objects:
 12163 ;;		On entry : 0/0
 12164 ;;		On exit  : 0/0
 12165 ;;		Unchanged: 0/0
 12166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12167 ;;      Params:         0       1       0       0       0       0       0       0       0
 12168 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12169 ;;      Temps:          0       2       0       0       0       0       0       0       0
 12170 ;;      Totals:         0       4       0       0       0       0       0       0       0
 12171 ;;Total ram usage:        4 bytes
 12172 ;; Hardware stack levels used:    1
 12173 ;; Hardware stack levels required when called:   12
 12174 ;; This function calls:
 12175 ;;		___awmod
 12176 ;;		___lbdiv
 12177 ;; This function is called by:
 12178 ;;		_moteRunningProcess
 12179 ;; This function uses a non-reentrant model
 12180 ;;
 12181                           
 12182                           	psect	text26
 12183  00560A                     __ptext26:
 12184                           	opt stack 0
 12185  00560A                     _moteApp_add8bToDataBuffer:
 12186                           	opt stack 16
 12187                           
 12188                           ; BSR set to: 0
 12189                           ;incstack = 0
 12190                           ;moteApp_add8bToDataBuffer@number stored from wreg
 12191  00560A  0100               	movlb	0	; () banked
 12192  00560C  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 12193                           
 12194                           ;MOTEapp.c: 1307: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
 12195  00560E  0100               	movlb	0	; () banked
 12196  005610  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 12197  005612  0100               	movlb	0	; () banked
 12198  005614  6F67               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
 12199  005616  6B68               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
 12200  005618  0E02               	movlw	2
 12201  00561A  0100               	movlb	0	; () banked
 12202  00561C  2767               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
 12203  00561E  0E00               	movlw	0
 12204  005620  2368               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
 12205  005622  0EBD               	movlw	low _dataBuffer
 12206  005624  0100               	movlb	0	; () banked
 12207  005626  2567               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
 12208  005628  6ED9               	movwf	fsr2l,c
 12209  00562A  0E01               	movlw	high _dataBuffer
 12210  00562C  0100               	movlb	0	; () banked
 12211  00562E  2168               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
 12212  005630  6EDA               	movwf	fsr2h,c
 12213  005632  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 12214  005636  0100               	movlb	0	; () banked
 12215  005638  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12216  00563A  0E00               	movlw	0
 12217  00563C  0100               	movlb	0	; () banked
 12218  00563E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12219  005640  0E0A               	movlw	10
 12220  005642  6F62               	movwf	___awmod@divisor& (0+255),b
 12221  005644  EC74  F02B         	call	___awmod	;wreg free
 12222  005648  0100               	movlb	0	; () banked
 12223  00564A  5160               	movf	?___awmod& (0+255),w,b
 12224  00564C  0F30               	addlw	48
 12225  00564E  6EDF               	movwf	indf2,c
 12226                           
 12227                           ; BSR set to: 0
 12228                           ;MOTEapp.c: 1308: number /= 10;
 12229  005650  0E0A               	movlw	10
 12230  005652  0100               	movlb	0	; () banked
 12231  005654  6F60               	movwf	___lbdiv@divisor& (0+255),b
 12232  005656  0100               	movlb	0	; () banked
 12233  005658  5169               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
 12234  00565A  EC4E  F032         	call	___lbdiv
 12235  00565E  0100               	movlb	0	; () banked
 12236  005660  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 12237                           
 12238                           ; BSR set to: 0
 12239                           ;MOTEapp.c: 1309: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
 12240  005662  0100               	movlb	0	; () banked
 12241  005664  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 12242  005666  0100               	movlb	0	; () banked
 12243  005668  6F67               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
 12244  00566A  6B68               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
 12245  00566C  0E01               	movlw	1
 12246  00566E  0100               	movlb	0	; () banked
 12247  005670  2767               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
 12248  005672  0E00               	movlw	0
 12249  005674  2368               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
 12250  005676  0EBD               	movlw	low _dataBuffer
 12251  005678  0100               	movlb	0	; () banked
 12252  00567A  2567               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
 12253  00567C  6ED9               	movwf	fsr2l,c
 12254  00567E  0E01               	movlw	high _dataBuffer
 12255  005680  0100               	movlb	0	; () banked
 12256  005682  2168               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
 12257  005684  6EDA               	movwf	fsr2h,c
 12258  005686  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 12259  00568A  0100               	movlb	0	; () banked
 12260  00568C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12261  00568E  0E00               	movlw	0
 12262  005690  0100               	movlb	0	; () banked
 12263  005692  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12264  005694  0E0A               	movlw	10
 12265  005696  6F62               	movwf	___awmod@divisor& (0+255),b
 12266  005698  EC74  F02B         	call	___awmod	;wreg free
 12267  00569C  0100               	movlb	0	; () banked
 12268  00569E  5160               	movf	?___awmod& (0+255),w,b
 12269  0056A0  0F30               	addlw	48
 12270  0056A2  6EDF               	movwf	indf2,c
 12271                           
 12272                           ;MOTEapp.c: 1310: number /= 10;
 12273  0056A4  0E0A               	movlw	10
 12274  0056A6  0100               	movlb	0	; () banked
 12275  0056A8  6F60               	movwf	___lbdiv@divisor& (0+255),b
 12276  0056AA  0100               	movlb	0	; () banked
 12277  0056AC  5169               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
 12278  0056AE  EC4E  F032         	call	___lbdiv
 12279  0056B2  0100               	movlb	0	; () banked
 12280  0056B4  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 12281                           
 12282                           ; BSR set to: 0
 12283                           ;MOTEapp.c: 1311: dataBuffer[bufferLocation] = '0' + (number % 10);
 12284  0056B6  0100               	movlb	0	; () banked
 12285  0056B8  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 12286  0056BA  0D01               	mullw	1
 12287  0056BC  0EBD               	movlw	low _dataBuffer
 12288  0056BE  24F3               	addwf	prodl,w,c
 12289  0056C0  6ED9               	movwf	fsr2l,c
 12290  0056C2  0E01               	movlw	high _dataBuffer
 12291  0056C4  20F4               	addwfc	prodh,w,c
 12292  0056C6  6EDA               	movwf	fsr2h,c
 12293  0056C8  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 12294  0056CC  0100               	movlb	0	; () banked
 12295  0056CE  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12296  0056D0  0E00               	movlw	0
 12297  0056D2  0100               	movlb	0	; () banked
 12298  0056D4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12299  0056D6  0E0A               	movlw	10
 12300  0056D8  6F62               	movwf	___awmod@divisor& (0+255),b
 12301  0056DA  EC74  F02B         	call	___awmod	;wreg free
 12302  0056DE  0100               	movlb	0	; () banked
 12303  0056E0  5160               	movf	?___awmod& (0+255),w,b
 12304  0056E2  0F30               	addlw	48
 12305  0056E4  6EDF               	movwf	indf2,c
 12306                           
 12307                           ; BSR set to: 0
 12308  0056E6  0012               	return		;funcret
 12309  0056E8                     __end_of_moteApp_add8bToDataBuffer:
 12310                           	opt stack 0
 12311                           tblptru	equ	0xFF8
 12312                           tblptrh	equ	0xFF7
 12313                           tblptrl	equ	0xFF6
 12314                           tablat	equ	0xFF5
 12315                           prodh	equ	0xFF4
 12316                           prodl	equ	0xFF3
 12317                           intcon	equ	0xFF2
 12318                           postinc0	equ	0xFEE
 12319                           wreg	equ	0xFE8
 12320                           indf1	equ	0xFE7
 12321                           postdec1	equ	0xFE5
 12322                           fsr1h	equ	0xFE2
 12323                           fsr1l	equ	0xFE1
 12324                           indf2	equ	0xFDF
 12325                           fsr2h	equ	0xFDA
 12326                           fsr2l	equ	0xFD9
 12327                           status	equ	0xFD8
 12328                           
 12329 ;; *************** function ___lbdiv *****************
 12330 ;; Defined at:
 12331 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lbdiv.c"
 12332 ;; Parameters:    Size  Location     Type
 12333 ;;  dividend        1    wreg     unsigned char 
 12334 ;;  divisor         1    0[BANK0 ] unsigned char 
 12335 ;; Auto vars:     Size  Location     Type
 12336 ;;  dividend        1    1[BANK0 ] unsigned char 
 12337 ;;  quotient        1    3[BANK0 ] unsigned char 
 12338 ;;  counter         1    2[BANK0 ] unsigned char 
 12339 ;; Return value:  Size  Location     Type
 12340 ;;                  1    wreg      unsigned char 
 12341 ;; Registers used:
 12342 ;;		wreg, status,2, status,0
 12343 ;; Tracked objects:
 12344 ;;		On entry : 0/0
 12345 ;;		On exit  : 0/0
 12346 ;;		Unchanged: 0/0
 12347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12348 ;;      Params:         0       1       0       0       0       0       0       0       0
 12349 ;;      Locals:         0       3       0       0       0       0       0       0       0
 12350 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12351 ;;      Totals:         0       4       0       0       0       0       0       0       0
 12352 ;;Total ram usage:        4 bytes
 12353 ;; Hardware stack levels used:    1
 12354 ;; Hardware stack levels required when called:   11
 12355 ;; This function calls:
 12356 ;;		Nothing
 12357 ;; This function is called by:
 12358 ;;		_moteApp_add8bToDataBuffer
 12359 ;;		_oled_putUint8
 12360 ;;		_oled_putint8
 12361 ;; This function uses a non-reentrant model
 12362 ;;
 12363                           
 12364                           	psect	text27
 12365  00649C                     __ptext27:
 12366                           	opt stack 0
 12367  00649C                     ___lbdiv:
 12368                           	opt stack 16
 12369                           
 12370                           ; BSR set to: 0
 12371                           ;incstack = 0
 12372                           ;___lbdiv@dividend stored from wreg
 12373  00649C  0100               	movlb	0	; () banked
 12374  00649E  6F61               	movwf	___lbdiv@dividend& (0+255),b
 12375  0064A0  0E00               	movlw	0
 12376  0064A2  0100               	movlb	0	; () banked
 12377  0064A4  6F63               	movwf	___lbdiv@quotient& (0+255),b
 12378                           
 12379                           ; BSR set to: 0
 12380  0064A6  0100               	movlb	0	; () banked
 12381  0064A8  5160               	movf	___lbdiv@divisor& (0+255),w,b
 12382  0064AA  0100               	movlb	0	; () banked
 12383  0064AC  B4D8               	btfsc	status,2,c
 12384  0064AE  D001               	goto	u12071
 12385  0064B0  D001               	goto	u12070
 12386  0064B2                     u12071:
 12387  0064B2  D02B               	goto	l12825
 12388  0064B4                     u12070:
 12389                           
 12390                           ; BSR set to: 0
 12391  0064B4  0E01               	movlw	1
 12392  0064B6  0100               	movlb	0	; () banked
 12393  0064B8  6F62               	movwf	___lbdiv@counter& (0+255),b
 12394  0064BA  D006               	goto	l12813
 12395  0064BC                     l12809:
 12396                           
 12397                           ; BSR set to: 0
 12398  0064BC  0100               	movlb	0	; () banked
 12399  0064BE  90D8               	bcf	status,0,c
 12400  0064C0  3760               	rlcf	___lbdiv@divisor& (0+255),f,b
 12401                           
 12402                           ; BSR set to: 0
 12403  0064C2  0100               	movlb	0	; () banked
 12404  0064C4  2B62               	incf	___lbdiv@counter& (0+255),f,b
 12405  0064C6  D000               	goto	l12813
 12406  0064C8                     l12813:
 12407                           
 12408                           ; BSR set to: 0
 12409  0064C8  0100               	movlb	0	; () banked
 12410  0064CA  AF60               	btfss	___lbdiv@divisor& (0+255),7,b
 12411  0064CC  D001               	goto	u12081
 12412  0064CE  D001               	goto	u12080
 12413  0064D0                     u12081:
 12414  0064D0  D7F5               	goto	l12809
 12415  0064D2                     u12080:
 12416  0064D2  D001               	goto	l12815
 12417                           
 12418                           ; BSR set to: 0
 12419  0064D4  D000               	goto	l12815
 12420  0064D6                     l12815:
 12421                           
 12422                           ; BSR set to: 0
 12423  0064D6  0100               	movlb	0	; () banked
 12424  0064D8  90D8               	bcf	status,0,c
 12425  0064DA  3763               	rlcf	___lbdiv@quotient& (0+255),f,b
 12426  0064DC  0100               	movlb	0	; () banked
 12427  0064DE  5160               	movf	___lbdiv@divisor& (0+255),w,b
 12428  0064E0  0100               	movlb	0	; () banked
 12429  0064E2  5D61               	subwf	___lbdiv@dividend& (0+255),w,b
 12430  0064E4  A0D8               	btfss	status,0,c
 12431  0064E6  D001               	goto	u12091
 12432  0064E8  D001               	goto	u12090
 12433  0064EA                     u12091:
 12434  0064EA  D007               	goto	l12821
 12435  0064EC                     u12090:
 12436                           
 12437                           ; BSR set to: 0
 12438  0064EC  0100               	movlb	0	; () banked
 12439  0064EE  5160               	movf	___lbdiv@divisor& (0+255),w,b
 12440  0064F0  0100               	movlb	0	; () banked
 12441  0064F2  5F61               	subwf	___lbdiv@dividend& (0+255),f,b
 12442                           
 12443                           ; BSR set to: 0
 12444  0064F4  0100               	movlb	0	; () banked
 12445  0064F6  8163               	bsf	___lbdiv@quotient& (0+255),0,b
 12446  0064F8  D000               	goto	l12821
 12447  0064FA                     l12821:
 12448                           
 12449                           ; BSR set to: 0
 12450  0064FA  0100               	movlb	0	; () banked
 12451  0064FC  90D8               	bcf	status,0,c
 12452  0064FE  3360               	rrcf	___lbdiv@divisor& (0+255),f,b
 12453                           
 12454                           ; BSR set to: 0
 12455  006500  0100               	movlb	0	; () banked
 12456  006502  2F62               	decfsz	___lbdiv@counter& (0+255),f,b
 12457  006504  D7E8               	goto	l12815
 12458  006506  D001               	goto	l12825
 12459                           
 12460                           ; BSR set to: 0
 12461  006508  D000               	goto	l12825
 12462  00650A                     l12825:
 12463                           
 12464                           ; BSR set to: 0
 12465  00650A  0100               	movlb	0	; () banked
 12466  00650C  5163               	movf	___lbdiv@quotient& (0+255),w,b
 12467  00650E  D000               	goto	l2512
 12468  006510                     l2512:
 12469                           
 12470                           ; BSR set to: 0
 12471  006510  0012               	return		;funcret
 12472  006512                     __end_of___lbdiv:
 12473                           	opt stack 0
 12474                           tblptru	equ	0xFF8
 12475                           tblptrh	equ	0xFF7
 12476                           tblptrl	equ	0xFF6
 12477                           tablat	equ	0xFF5
 12478                           prodh	equ	0xFF4
 12479                           prodl	equ	0xFF3
 12480                           intcon	equ	0xFF2
 12481                           postinc0	equ	0xFEE
 12482                           wreg	equ	0xFE8
 12483                           indf1	equ	0xFE7
 12484                           postdec1	equ	0xFE5
 12485                           fsr1h	equ	0xFE2
 12486                           fsr1l	equ	0xFE1
 12487                           indf2	equ	0xFDF
 12488                           fsr2h	equ	0xFDA
 12489                           fsr2l	equ	0xFD9
 12490                           status	equ	0xFD8
 12491                           
 12492 ;; *************** function ___awmod *****************
 12493 ;; Defined at:
 12494 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
 12495 ;; Parameters:    Size  Location     Type
 12496 ;;  dividend        2    0[BANK0 ] int 
 12497 ;;  divisor         2    2[BANK0 ] int 
 12498 ;; Auto vars:     Size  Location     Type
 12499 ;;  sign            1    5[BANK0 ] unsigned char 
 12500 ;;  counter         1    4[BANK0 ] unsigned char 
 12501 ;; Return value:  Size  Location     Type
 12502 ;;                  2    0[BANK0 ] int 
 12503 ;; Registers used:
 12504 ;;		wreg, status,2, status,0
 12505 ;; Tracked objects:
 12506 ;;		On entry : 0/0
 12507 ;;		On exit  : 0/0
 12508 ;;		Unchanged: 0/0
 12509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12510 ;;      Params:         0       4       0       0       0       0       0       0       0
 12511 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12512 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12513 ;;      Totals:         0       6       0       0       0       0       0       0       0
 12514 ;;Total ram usage:        6 bytes
 12515 ;; Hardware stack levels used:    1
 12516 ;; Hardware stack levels required when called:   11
 12517 ;; This function calls:
 12518 ;;		Nothing
 12519 ;; This function is called by:
 12520 ;;		_moteApp_add8bToDataBuffer
 12521 ;;		_oled_putUint8
 12522 ;;		_oled_putint8
 12523 ;; This function uses a non-reentrant model
 12524 ;;
 12525                           
 12526                           	psect	text28
 12527  0056E8                     __ptext28:
 12528                           	opt stack 0
 12529  0056E8                     ___awmod:
 12530                           	opt stack 16
 12531                           
 12532                           ; BSR set to: 0
 12533                           ;incstack = 0
 12534  0056E8  0E00               	movlw	0
 12535  0056EA  0100               	movlb	0	; () banked
 12536  0056EC  6F65               	movwf	___awmod@sign& (0+255),b
 12537                           
 12538                           ; BSR set to: 0
 12539  0056EE  0100               	movlb	0	; () banked
 12540  0056F0  BF61               	btfsc	(___awmod@dividend+1)& (0+255),7,b
 12541  0056F2  D002               	goto	u11940
 12542  0056F4  D000               	goto	u11941
 12543  0056F6                     u11941:
 12544  0056F6  D009               	goto	l12731
 12545  0056F8                     u11940:
 12546                           
 12547                           ; BSR set to: 0
 12548  0056F8  0100               	movlb	0	; () banked
 12549  0056FA  6D60               	negf	___awmod@dividend& (0+255),b
 12550  0056FC  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 12551  0056FE  B0D8               	btfsc	status,0,c
 12552  005700  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 12553                           
 12554                           ; BSR set to: 0
 12555  005702  0E01               	movlw	1
 12556  005704  0100               	movlb	0	; () banked
 12557  005706  6F65               	movwf	___awmod@sign& (0+255),b
 12558  005708  D000               	goto	l12731
 12559  00570A                     l12731:
 12560                           
 12561                           ; BSR set to: 0
 12562  00570A  0100               	movlb	0	; () banked
 12563  00570C  BF63               	btfsc	(___awmod@divisor+1)& (0+255),7,b
 12564  00570E  D002               	goto	u11950
 12565  005710  D000               	goto	u11951
 12566  005712                     u11951:
 12567  005712  D006               	goto	l12735
 12568  005714                     u11950:
 12569                           
 12570                           ; BSR set to: 0
 12571  005714  0100               	movlb	0	; () banked
 12572  005716  6D62               	negf	___awmod@divisor& (0+255),b
 12573  005718  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 12574  00571A  B0D8               	btfsc	status,0,c
 12575  00571C  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 12576  00571E  D000               	goto	l12735
 12577  005720                     l12735:
 12578                           
 12579                           ; BSR set to: 0
 12580  005720  0100               	movlb	0	; () banked
 12581  005722  5162               	movf	___awmod@divisor& (0+255),w,b
 12582  005724  0100               	movlb	0	; () banked
 12583  005726  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 12584  005728  B4D8               	btfsc	status,2,c
 12585  00572A  D001               	goto	u11961
 12586  00572C  D001               	goto	u11960
 12587  00572E                     u11961:
 12588  00572E  D030               	goto	l12751
 12589  005730                     u11960:
 12590                           
 12591                           ; BSR set to: 0
 12592  005730  0E01               	movlw	1
 12593  005732  0100               	movlb	0	; () banked
 12594  005734  6F64               	movwf	___awmod@counter& (0+255),b
 12595  005736  D007               	goto	l12741
 12596  005738                     l12739:
 12597                           
 12598                           ; BSR set to: 0
 12599  005738  0100               	movlb	0	; () banked
 12600  00573A  90D8               	bcf	status,0,c
 12601  00573C  3762               	rlcf	___awmod@divisor& (0+255),f,b
 12602  00573E  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 12603  005740  0100               	movlb	0	; () banked
 12604  005742  2B64               	incf	___awmod@counter& (0+255),f,b
 12605  005744  D000               	goto	l12741
 12606  005746                     l12741:
 12607                           
 12608                           ; BSR set to: 0
 12609  005746  0100               	movlb	0	; () banked
 12610  005748  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12611  00574A  D001               	goto	u11971
 12612  00574C  D001               	goto	u11970
 12613  00574E                     u11971:
 12614  00574E  D7F4               	goto	l12739
 12615  005750                     u11970:
 12616  005750  D001               	goto	l12743
 12617                           
 12618                           ; BSR set to: 0
 12619  005752  D000               	goto	l12743
 12620  005754                     l12743:
 12621                           
 12622                           ; BSR set to: 0
 12623  005754  0100               	movlb	0	; () banked
 12624  005756  5162               	movf	___awmod@divisor& (0+255),w,b
 12625  005758  0100               	movlb	0	; () banked
 12626  00575A  5D60               	subwf	___awmod@dividend& (0+255),w,b
 12627  00575C  0100               	movlb	0	; () banked
 12628  00575E  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 12629  005760  0100               	movlb	0	; () banked
 12630  005762  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 12631  005764  A0D8               	btfss	status,0,c
 12632  005766  D001               	goto	u11981
 12633  005768  D001               	goto	u11980
 12634  00576A                     u11981:
 12635  00576A  D009               	goto	l12747
 12636  00576C                     u11980:
 12637                           
 12638                           ; BSR set to: 0
 12639  00576C  0100               	movlb	0	; () banked
 12640  00576E  5162               	movf	___awmod@divisor& (0+255),w,b
 12641  005770  0100               	movlb	0	; () banked
 12642  005772  5F60               	subwf	___awmod@dividend& (0+255),f,b
 12643  005774  0100               	movlb	0	; () banked
 12644  005776  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 12645  005778  0100               	movlb	0	; () banked
 12646  00577A  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 12647  00577C  D000               	goto	l12747
 12648  00577E                     l12747:
 12649                           
 12650                           ; BSR set to: 0
 12651  00577E  0100               	movlb	0	; () banked
 12652  005780  90D8               	bcf	status,0,c
 12653  005782  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 12654  005784  3362               	rrcf	___awmod@divisor& (0+255),f,b
 12655                           
 12656                           ; BSR set to: 0
 12657  005786  0100               	movlb	0	; () banked
 12658  005788  2F64               	decfsz	___awmod@counter& (0+255),f,b
 12659  00578A  D7E4               	goto	l12743
 12660  00578C  D001               	goto	l12751
 12661                           
 12662                           ; BSR set to: 0
 12663  00578E  D000               	goto	l12751
 12664  005790                     l12751:
 12665                           
 12666                           ; BSR set to: 0
 12667  005790  0100               	movlb	0	; () banked
 12668  005792  5165               	movf	___awmod@sign& (0+255),w,b
 12669  005794  0100               	movlb	0	; () banked
 12670  005796  B4D8               	btfsc	status,2,c
 12671  005798  D001               	goto	u11991
 12672  00579A  D001               	goto	u11990
 12673  00579C                     u11991:
 12674  00579C  D006               	goto	l12755
 12675  00579E                     u11990:
 12676                           
 12677                           ; BSR set to: 0
 12678  00579E  0100               	movlb	0	; () banked
 12679  0057A0  6D60               	negf	___awmod@dividend& (0+255),b
 12680  0057A2  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 12681  0057A4  B0D8               	btfsc	status,0,c
 12682  0057A6  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 12683  0057A8  D000               	goto	l12755
 12684  0057AA                     l12755:
 12685                           
 12686                           ; BSR set to: 0
 12687  0057AA  C060  F060         	movff	___awmod@dividend,?___awmod
 12688  0057AE  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 12689  0057B2  D000               	goto	l2367
 12690  0057B4                     l2367:
 12691                           
 12692                           ; BSR set to: 0
 12693  0057B4  0012               	return		;funcret
 12694  0057B6                     __end_of___awmod:
 12695                           	opt stack 0
 12696                           tblptru	equ	0xFF8
 12697                           tblptrh	equ	0xFF7
 12698                           tblptrl	equ	0xFF6
 12699                           tablat	equ	0xFF5
 12700                           prodh	equ	0xFF4
 12701                           prodl	equ	0xFF3
 12702                           intcon	equ	0xFF2
 12703                           postinc0	equ	0xFEE
 12704                           wreg	equ	0xFE8
 12705                           indf1	equ	0xFE7
 12706                           postdec1	equ	0xFE5
 12707                           fsr1h	equ	0xFE2
 12708                           fsr1l	equ	0xFE1
 12709                           indf2	equ	0xFDF
 12710                           fsr2h	equ	0xFDA
 12711                           fsr2l	equ	0xFD9
 12712                           status	equ	0xFD8
 12713                           
 12714 ;; *************** function _moteApp_GoToSleep *****************
 12715 ;; Defined at:
 12716 ;;		line 1173 in file "../Includes/Board/MOTEapp.c"
 12717 ;; Parameters:    Size  Location     Type
 12718 ;;		None
 12719 ;; Auto vars:     Size  Location     Type
 12720 ;;  status          1   14[BANK0 ] unsigned char 
 12721 ;; Return value:  Size  Location     Type
 12722 ;;                  1    wreg      unsigned char 
 12723 ;; Registers used:
 12724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12725 ;; Tracked objects:
 12726 ;;		On entry : 0/0
 12727 ;;		On exit  : 0/0
 12728 ;;		Unchanged: 0/0
 12729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12730 ;;      Params:         0       0       0       0       0       0       0       0       0
 12731 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12732 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12733 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12734 ;;Total ram usage:        1 bytes
 12735 ;; Hardware stack levels used:    1
 12736 ;; Hardware stack levels required when called:   17
 12737 ;; This function calls:
 12738 ;;		_EUSART_FlushBuffer
 12739 ;;		_PIN_MANAGER_Initialize
 12740 ;;		_moduleResync
 12741 ;;		_moduleSleep
 12742 ;;		_moteApp_delayms
 12743 ;;		_oled_displayOff
 12744 ;;		_oled_init
 12745 ;; This function is called by:
 12746 ;;		_moteRunningProcess
 12747 ;; This function uses a non-reentrant model
 12748 ;;
 12749                           
 12750                           	psect	text29
 12751  0048F2                     __ptext29:
 12752                           	opt stack 0
 12753  0048F2                     _moteApp_GoToSleep:
 12754                           	opt stack 11
 12755                           
 12756                           ;MOTEapp.c: 1175: uint8_t status = 0;
 12757                           
 12758                           ; BSR set to: 0
 12759                           ;incstack = 0
 12760  0048F2  0E00               	movlw	0
 12761  0048F4  0100               	movlb	0	; () banked
 12762  0048F6  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12763                           
 12764                           ;MOTEapp.c: 1176: while (PORTBbits.RB0 == 0);
 12765  0048F8  D000               	goto	l663
 12766  0048FA                     l663:
 12767  0048FA  A081               	btfss	3969,0,c	;volatile
 12768  0048FC  D001               	goto	u12591
 12769  0048FE  D001               	goto	u12590
 12770  004900                     u12591:
 12771  004900  D7FC               	goto	l663
 12772  004902                     u12590:
 12773  004902  D000               	goto	l13225
 12774  004904                     l13225:
 12775                           
 12776                           ;MOTEapp.c: 1177: moduleSleep();
 12777  004904  EC04  F038         	call	_moduleSleep	;wreg free
 12778                           
 12779                           ;MOTEapp.c: 1178: oled_displayOff(1);
 12780  004908  0E01               	movlw	1
 12781  00490A  EC66  F039         	call	_oled_displayOff
 12782                           
 12783                           ;MOTEapp.c: 1179: ADCON0bits.ADON = 0;
 12784  00490E  90C2               	bcf	4034,0,c	;volatile
 12785                           
 12786                           ;MOTEapp.c: 1180: INTCONbits.GIE = 0;
 12787  004910  9EF2               	bcf	intcon,7,c	;volatile
 12788                           
 12789                           ;MOTEapp.c: 1181: GIE = 0;
 12790  004912  9EF2               	bcf	intcon,7,c	;volatile
 12791                           
 12792                           ;MOTEapp.c: 1182: PEIE = 0;
 12793  004914  9CF2               	bcf	intcon,6,c	;volatile
 12794                           
 12795                           ;MOTEapp.c: 1184: LATEbits.LATE2 = 0;
 12796  004916  948D               	bcf	3981,2,c	;volatile
 12797                           
 12798                           ;MOTEapp.c: 1185: PIE2bits.TMR3IE = 0;
 12799  004918  92A0               	bcf	4000,1,c	;volatile
 12800                           
 12801                           ;MOTEapp.c: 1187: ANSELAbits.ANSA0 = 1;
 12802  00491A  010F               	movlb	15	; () banked
 12803  00491C  815B               	bsf	91,0,b	;volatile
 12804                           
 12805                           ; BSR set to: 15
 12806                           ;MOTEapp.c: 1189: PIE2bits.C1IE = 1;
 12807  00491E  8CA0               	bsf	4000,6,c	;volatile
 12808                           
 12809                           ; BSR set to: 15
 12810                           ;MOTEapp.c: 1190: INTCON3bits.INT1IE = 1;
 12811  004920  86F0               	bsf	intcon3,3,c	;volatile
 12812                           
 12813                           ; BSR set to: 15
 12814                           ;MOTEapp.c: 1191: INTCONbits.INT0IE = 1;
 12815  004922  88F2               	bsf	intcon,4,c	;volatile
 12816                           
 12817                           ; BSR set to: 15
 12818                           ;MOTEapp.c: 1192: IOCCbits.IOCC2 = 1;
 12819  004924  8487               	bsf	3975,2,c	;volatile
 12820                           
 12821                           ; BSR set to: 15
 12822                           ;MOTEapp.c: 1195: status = PORTBbits.RB1;
 12823  004926  0E00               	movlw	0
 12824  004928  B281               	btfsc	3969,1,c	;volatile
 12825  00492A  0E01               	movlw	1
 12826  00492C  0100               	movlb	0	; () banked
 12827  00492E  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12828                           
 12829                           ; BSR set to: 0
 12830                           ;MOTEapp.c: 1196: status = PORTBbits.RB0;
 12831  004930  0E00               	movlw	0
 12832  004932  B081               	btfsc	3969,0,c	;volatile
 12833  004934  0E01               	movlw	1
 12834  004936  0100               	movlb	0	; () banked
 12835  004938  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12836                           
 12837                           ; BSR set to: 0
 12838                           ;MOTEapp.c: 1197: status = PORTCbits.RC2;
 12839  00493A  0E00               	movlw	0
 12840  00493C  B482               	btfsc	3970,2,c	;volatile
 12841  00493E  0E01               	movlw	1
 12842  004940  0100               	movlb	0	; () banked
 12843  004942  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12844                           
 12845                           ; BSR set to: 0
 12846                           ;MOTEapp.c: 1199: if (periodicState)
 12847  004944  0100               	movlb	0	; () banked
 12848  004946  51F9               	movf	_periodicState& (0+255),w,b
 12849  004948  B4D8               	btfsc	status,2,c
 12850  00494A  D001               	goto	u12601
 12851  00494C  D001               	goto	u12600
 12852  00494E                     u12601:
 12853  00494E  D001               	goto	l666
 12854  004950                     u12600:
 12855                           
 12856                           ; BSR set to: 0
 12857                           ;MOTEapp.c: 1200: {
 12858                           ;MOTEapp.c: 1201: WDTCONbits.SWDTEN = 1;
 12859  004950  80D1               	bsf	4049,0,c	;volatile
 12860  004952                     l666:
 12861                           
 12862                           ; BSR set to: 0
 12863                           ;MOTEapp.c: 1202: }
 12864                           ;MOTEapp.c: 1205: INTCONbits.INT0IF = 0;
 12865  004952  92F2               	bcf	intcon,1,c	;volatile
 12866                           
 12867                           ;MOTEapp.c: 1206: INTCON3bits.INT1IF = 0;
 12868  004954  90F0               	bcf	intcon3,0,c	;volatile
 12869                           
 12870                           ;MOTEapp.c: 1207: PIR2bits.C1IF = 0;
 12871  004956  9CA1               	bcf	4001,6,c	;volatile
 12872                           
 12873                           ;MOTEapp.c: 1208: __nop();
 12874  004958  F000               	nop	
 12875  00495A  0003               	sleep		;# 
 12876                           
 12877                           ;MOTEapp.c: 1210: __nop();
 12878  00495C  F000               	nop	
 12879                           
 12880                           ;MOTEapp.c: 1212: WDTCONbits.SWDTEN = 0;
 12881  00495E  90D1               	bcf	4049,0,c	;volatile
 12882                           
 12883                           ;MOTEapp.c: 1213: EUSART_FlushBuffer();
 12884  004960  EC38  F034         	call	_EUSART_FlushBuffer	;wreg free
 12885                           
 12886                           ;MOTEapp.c: 1216: INTCON3bits.INT1IE = 0;
 12887  004964  96F0               	bcf	intcon3,3,c	;volatile
 12888                           
 12889                           ;MOTEapp.c: 1217: INTCONbits.INT0IE = 0;
 12890  004966  98F2               	bcf	intcon,4,c	;volatile
 12891                           
 12892                           ;MOTEapp.c: 1218: IOCCbits.IOCC2 = 0;
 12893  004968  9487               	bcf	3975,2,c	;volatile
 12894                           
 12895                           ;MOTEapp.c: 1219: PIE2bits.C1IE = 0;
 12896  00496A  9CA0               	bcf	4000,6,c	;volatile
 12897                           
 12898                           ;MOTEapp.c: 1220: GIE = 1;
 12899  00496C  8EF2               	bsf	intcon,7,c	;volatile
 12900                           
 12901                           ;MOTEapp.c: 1222: PIN_MANAGER_Initialize();
 12902  00496E  EC69  F034         	call	_PIN_MANAGER_Initialize	;wreg free
 12903                           
 12904                           ;MOTEapp.c: 1224: if ( (INTCONbits.INT0IF)||(INTCON3bits.INT1IF)||(PIR2bits.C1IF))
 12905  004972  B2F2               	btfsc	intcon,1,c	;volatile
 12906  004974  D001               	goto	u12611
 12907  004976  D001               	goto	u12610
 12908  004978                     u12611:
 12909  004978  D008               	goto	l669
 12910  00497A                     u12610:
 12911  00497A  B0F0               	btfsc	intcon3,0,c	;volatile
 12912  00497C  D001               	goto	u12621
 12913  00497E  D001               	goto	u12620
 12914  004980                     u12621:
 12915  004980  D004               	goto	l669
 12916  004982                     u12620:
 12917  004982  ACA1               	btfss	4001,6,c	;volatile
 12918  004984  D001               	goto	u12631
 12919  004986  D001               	goto	u12630
 12920  004988                     u12631:
 12921  004988  D011               	goto	l13295
 12922  00498A                     u12630:
 12923  00498A                     l669:
 12924                           
 12925                           ;MOTEapp.c: 1225: {
 12926                           ;MOTEapp.c: 1227: INTCONbits.INT0IF = 0;
 12927  00498A  92F2               	bcf	intcon,1,c	;volatile
 12928                           
 12929                           ;MOTEapp.c: 1228: INTCON3bits.INT1IF = 0;
 12930  00498C  90F0               	bcf	intcon3,0,c	;volatile
 12931                           
 12932                           ;MOTEapp.c: 1229: status = 1;
 12933  00498E  0E01               	movlw	1
 12934  004990  0100               	movlb	0	; () banked
 12935  004992  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12936                           
 12937                           ; BSR set to: 0
 12938                           ;MOTEapp.c: 1232: oled_displayOff(0);
 12939  004994  0E00               	movlw	0
 12940  004996  EC66  F039         	call	_oled_displayOff
 12941                           
 12942                           ;MOTEapp.c: 1233: oled_init();
 12943  00499A  ECD3  F037         	call	_oled_init	;wreg free
 12944                           
 12945                           ;MOTEapp.c: 1235: LATEbits.LATE2 = 1;
 12946  00499E  848D               	bsf	3981,2,c	;volatile
 12947                           
 12948                           ;MOTEapp.c: 1236: TMR3H = 0xFB;
 12949  0049A0  0EFB               	movlw	251
 12950  0049A2  6EB3               	movwf	4019,c	;volatile
 12951                           
 12952                           ;MOTEapp.c: 1237: TMR3L = 0x50;
 12953  0049A4  0E50               	movlw	80
 12954  0049A6  6EB2               	movwf	4018,c	;volatile
 12955                           
 12956                           ;MOTEapp.c: 1238: PIE2bits.TMR3IE = 1;
 12957  0049A8  82A0               	bsf	4000,1,c	;volatile
 12958                           
 12959                           ;MOTEapp.c: 1239: }
 12960  0049AA  D009               	goto	l13301
 12961  0049AC                     l13295:
 12962                           
 12963                           ;MOTEapp.c: 1240: else
 12964                           ;MOTEapp.c: 1241: {
 12965                           ;MOTEapp.c: 1242: secTicker = 10;
 12966  0049AC  0E0A               	movlw	10
 12967  0049AE  0100               	movlb	0	; () banked
 12968  0049B0  6FE5               	movwf	_secTicker& (0+255),b
 12969                           
 12970                           ;MOTEapp.c: 1243: status = 0;
 12971  0049B2  0E00               	movlw	0
 12972  0049B4  0100               	movlb	0	; () banked
 12973  0049B6  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12974                           
 12975                           ; BSR set to: 0
 12976                           ;MOTEapp.c: 1245: LATEbits.LATE2 = 0;
 12977  0049B8  948D               	bcf	3981,2,c	;volatile
 12978                           
 12979                           ; BSR set to: 0
 12980                           ;MOTEapp.c: 1246: PIE2bits.TMR3IE = 0;
 12981  0049BA  92A0               	bcf	4000,1,c	;volatile
 12982  0049BC  D000               	goto	l13301
 12983  0049BE                     l13301:
 12984                           
 12985                           ;MOTEapp.c: 1247: }
 12986                           ;MOTEapp.c: 1248: ANSELAbits.ANSA0 = 0;
 12987  0049BE  010F               	movlb	15	; () banked
 12988  0049C0  915B               	bcf	91,0,b	;volatile
 12989                           
 12990                           ; BSR set to: 15
 12991                           ;MOTEapp.c: 1250: moduleResync();
 12992  0049C2  ECB1  F02D         	call	_moduleResync	;wreg free
 12993                           
 12994                           ;MOTEapp.c: 1251: moteApp_delayms(40);
 12995  0049C6  0E00               	movlw	0
 12996  0049C8  0100               	movlb	0	; () banked
 12997  0049CA  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12998  0049CC  0E28               	movlw	40
 12999  0049CE  6F60               	movwf	moteApp_delayms@length& (0+255),b
 13000  0049D0  EC90  F036         	call	_moteApp_delayms	;wreg free
 13001                           
 13002                           ;MOTEapp.c: 1252: moduleResync();
 13003  0049D4  ECB1  F02D         	call	_moduleResync	;wreg free
 13004                           
 13005                           ;MOTEapp.c: 1253: moteApp_delayms(40);
 13006  0049D8  0E00               	movlw	0
 13007  0049DA  0100               	movlb	0	; () banked
 13008  0049DC  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 13009  0049DE  0E28               	movlw	40
 13010  0049E0  6F60               	movwf	moteApp_delayms@length& (0+255),b
 13011  0049E2  EC90  F036         	call	_moteApp_delayms	;wreg free
 13012                           
 13013                           ;MOTEapp.c: 1254: return status;
 13014  0049E6  0100               	movlb	0	; () banked
 13015  0049E8  516E               	movf	moteApp_GoToSleep@status& (0+255),w,b
 13016  0049EA  D000               	goto	l671
 13017  0049EC                     l671:
 13018                           
 13019                           ; BSR set to: 0
 13020  0049EC  0012               	return		;funcret
 13021  0049EE                     __end_of_moteApp_GoToSleep:
 13022                           	opt stack 0
 13023                           tblptru	equ	0xFF8
 13024                           tblptrh	equ	0xFF7
 13025                           tblptrl	equ	0xFF6
 13026                           tablat	equ	0xFF5
 13027                           prodh	equ	0xFF4
 13028                           prodl	equ	0xFF3
 13029                           intcon	equ	0xFF2
 13030                           intcon3	equ	0xFF0
 13031                           postinc0	equ	0xFEE
 13032                           wreg	equ	0xFE8
 13033                           indf1	equ	0xFE7
 13034                           postdec1	equ	0xFE5
 13035                           fsr1h	equ	0xFE2
 13036                           fsr1l	equ	0xFE1
 13037                           indf2	equ	0xFDF
 13038                           fsr2h	equ	0xFDA
 13039                           fsr2l	equ	0xFD9
 13040                           status	equ	0xFD8
 13041                           
 13042 ;; *************** function _oled_init *****************
 13043 ;; Defined at:
 13044 ;;		line 366 in file "../Includes/Drivers/SSD1306oLED.c"
 13045 ;; Parameters:    Size  Location     Type
 13046 ;;		None
 13047 ;; Auto vars:     Size  Location     Type
 13048 ;;		None
 13049 ;; Return value:  Size  Location     Type
 13050 ;;                  1    wreg      void 
 13051 ;; Registers used:
 13052 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13053 ;; Tracked objects:
 13054 ;;		On entry : 0/0
 13055 ;;		On exit  : 0/0
 13056 ;;		Unchanged: 0/0
 13057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13058 ;;      Params:         0       0       0       0       0       0       0       0       0
 13059 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13060 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13061 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13062 ;;Total ram usage:        0 bytes
 13063 ;; Hardware stack levels used:    1
 13064 ;; Hardware stack levels required when called:   16
 13065 ;; This function calls:
 13066 ;;		_oled_clear
 13067 ;;		_oled_devInit
 13068 ;;		_oled_setDisplay
 13069 ;;		_oled_setFont
 13070 ;; This function is called by:
 13071 ;;		_main
 13072 ;;		_moteApp_GoToSleep
 13073 ;; This function uses a non-reentrant model
 13074 ;;
 13075                           
 13076                           	psect	text30
 13077  006FA6                     __ptext30:
 13078                           	opt stack 0
 13079  006FA6                     _oled_init:
 13080                           	opt stack 14
 13081                           
 13082                           ;SSD1306oLED.c: 369: TRISEbits.TRISE2 = 0;
 13083                           
 13084                           ; BSR set to: 0
 13085                           ;incstack = 0
 13086  006FA6  9496               	bcf	3990,2,c	;volatile
 13087                           
 13088                           ;SSD1306oLED.c: 370: LATEbits.LATE2 = 1;
 13089  006FA8  848D               	bsf	3981,2,c	;volatile
 13090                           
 13091                           ;SSD1306oLED.c: 371: TRISBbits.TRISB2 = 0;
 13092  006FAA  9493               	bcf	3987,2,c	;volatile
 13093                           
 13094                           ;SSD1306oLED.c: 372: TRISBbits.TRISB3 = 0;
 13095  006FAC  9693               	bcf	3987,3,c	;volatile
 13096                           
 13097                           ;SSD1306oLED.c: 373: TRISBbits.TRISB4 = 0;
 13098  006FAE  9893               	bcf	3987,4,c	;volatile
 13099                           
 13100                           ;SSD1306oLED.c: 374: TRISCbits.TRISC0 = 0;
 13101  006FB0  9094               	bcf	3988,0,c	;volatile
 13102                           
 13103                           ;SSD1306oLED.c: 375: TRISCbits.TRISC1 = 0;
 13104  006FB2  9294               	bcf	3988,1,c	;volatile
 13105                           
 13106                           ;SSD1306oLED.c: 377: LATBbits.LATB3 = 1;
 13107  006FB4  868A               	bsf	3978,3,c	;volatile
 13108                           
 13109                           ;SSD1306oLED.c: 379: LATBbits.LATB4 = 0;
 13110  006FB6  988A               	bcf	3978,4,c	;volatile
 13111                           
 13112                           ;SSD1306oLED.c: 381: oled_devInit();
 13113  006FB8  EC95  F031         	call	_oled_devInit	;wreg free
 13114                           
 13115                           ;SSD1306oLED.c: 383: oled_setDisplay(Inverse);
 13116  006FBC  0E01               	movlw	1
 13117  006FBE  ECEC  F037         	call	_oled_setDisplay
 13118                           
 13119                           ;SSD1306oLED.c: 384: oled_setFont(OledFont0);
 13120  006FC2  0EF7               	movlw	low _OledFont0
 13121  006FC4  0100               	movlb	0	; () banked
 13122  006FC6  6F60               	movwf	oled_setFont@font& (0+255),b
 13123  006FC8  0E75               	movlw	high _OledFont0
 13124  006FCA  0100               	movlb	0	; () banked
 13125  006FCC  6F61               	movwf	(oled_setFont@font+1)& (0+255),b
 13126  006FCE  EC97  F038         	call	_oled_setFont	;wreg free
 13127                           
 13128                           ;SSD1306oLED.c: 385: oled_clear();
 13129  006FD2  ECA5  F038         	call	_oled_clear	;wreg free
 13130  006FD6  0012               	return		;funcret
 13131  006FD8                     __end_of_oled_init:
 13132                           	opt stack 0
 13133                           tblptru	equ	0xFF8
 13134                           tblptrh	equ	0xFF7
 13135                           tblptrl	equ	0xFF6
 13136                           tablat	equ	0xFF5
 13137                           prodh	equ	0xFF4
 13138                           prodl	equ	0xFF3
 13139                           intcon	equ	0xFF2
 13140                           intcon3	equ	0xFF0
 13141                           postinc0	equ	0xFEE
 13142                           wreg	equ	0xFE8
 13143                           indf1	equ	0xFE7
 13144                           postdec1	equ	0xFE5
 13145                           fsr1h	equ	0xFE2
 13146                           fsr1l	equ	0xFE1
 13147                           indf2	equ	0xFDF
 13148                           fsr2h	equ	0xFDA
 13149                           fsr2l	equ	0xFD9
 13150                           status	equ	0xFD8
 13151                           
 13152 ;; *************** function _oled_setFont *****************
 13153 ;; Defined at:
 13154 ;;		line 256 in file "../Includes/Drivers/SSD1306oLED.c"
 13155 ;; Parameters:    Size  Location     Type
 13156 ;;  font            2    0[BANK0 ] PTR const unsigned char 
 13157 ;;		 -> OledFont0(768), 
 13158 ;; Auto vars:     Size  Location     Type
 13159 ;;		None
 13160 ;; Return value:  Size  Location     Type
 13161 ;;                  1    wreg      void 
 13162 ;; Registers used:
 13163 ;;		wreg, status,2, status,0
 13164 ;; Tracked objects:
 13165 ;;		On entry : 0/0
 13166 ;;		On exit  : 0/0
 13167 ;;		Unchanged: 0/0
 13168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13169 ;;      Params:         0       2       0       0       0       0       0       0       0
 13170 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13171 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13172 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13173 ;;Total ram usage:        2 bytes
 13174 ;; Hardware stack levels used:    1
 13175 ;; Hardware stack levels required when called:   11
 13176 ;; This function calls:
 13177 ;;		Nothing
 13178 ;; This function is called by:
 13179 ;;		_oled_init
 13180 ;; This function uses a non-reentrant model
 13181 ;;
 13182                           
 13183                           	psect	text31
 13184  00712E                     __ptext31:
 13185                           	opt stack 0
 13186  00712E                     _oled_setFont:
 13187                           	opt stack 18
 13188                           
 13189                           ;SSD1306oLED.c: 258: if(font!=0)
 13190                           
 13191                           ;incstack = 0
 13192  00712E  0100               	movlb	0	; () banked
 13193  007130  5160               	movf	oled_setFont@font& (0+255),w,b
 13194  007132  0100               	movlb	0	; () banked
 13195  007134  1161               	iorwf	(oled_setFont@font+1)& (0+255),w,b
 13196  007136  B4D8               	btfsc	status,2,c
 13197  007138  D001               	goto	u10901
 13198  00713A  D001               	goto	u10900
 13199  00713C                     u10901:
 13200  00713C  D005               	goto	l1021
 13201  00713E                     u10900:
 13202                           
 13203                           ; BSR set to: 0
 13204                           ;SSD1306oLED.c: 259: {
 13205                           ;SSD1306oLED.c: 260: selectedFont=font;
 13206  00713E  C060  F1F8         	movff	oled_setFont@font,_selectedFont
 13207  007142  C061  F1F9         	movff	oled_setFont@font+1,_selectedFont+1
 13208  007146  D000               	goto	l1021
 13209  007148                     l1021:
 13210                           
 13211                           ; BSR set to: 0
 13212  007148  0012               	return		;funcret
 13213  00714A                     __end_of_oled_setFont:
 13214                           	opt stack 0
 13215                           tblptru	equ	0xFF8
 13216                           tblptrh	equ	0xFF7
 13217                           tblptrl	equ	0xFF6
 13218                           tablat	equ	0xFF5
 13219                           prodh	equ	0xFF4
 13220                           prodl	equ	0xFF3
 13221                           intcon	equ	0xFF2
 13222                           intcon3	equ	0xFF0
 13223                           postinc0	equ	0xFEE
 13224                           wreg	equ	0xFE8
 13225                           indf1	equ	0xFE7
 13226                           postdec1	equ	0xFE5
 13227                           fsr1h	equ	0xFE2
 13228                           fsr1l	equ	0xFE1
 13229                           indf2	equ	0xFDF
 13230                           fsr2h	equ	0xFDA
 13231                           fsr2l	equ	0xFD9
 13232                           status	equ	0xFD8
 13233                           
 13234 ;; *************** function _oled_setDisplay *****************
 13235 ;; Defined at:
 13236 ;;		line 411 in file "../Includes/Drivers/SSD1306oLED.c"
 13237 ;; Parameters:    Size  Location     Type
 13238 ;;  displayType     1    wreg     enum E5864
 13239 ;; Auto vars:     Size  Location     Type
 13240 ;;  displayType     1    1[BANK0 ] enum E5864
 13241 ;; Return value:  Size  Location     Type
 13242 ;;                  1    wreg      void 
 13243 ;; Registers used:
 13244 ;;		wreg, status,2, cstack
 13245 ;; Tracked objects:
 13246 ;;		On entry : 0/0
 13247 ;;		On exit  : 0/0
 13248 ;;		Unchanged: 0/0
 13249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13250 ;;      Params:         0       0       0       0       0       0       0       0       0
 13251 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13252 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13253 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13254 ;;Total ram usage:        1 bytes
 13255 ;; Hardware stack levels used:    1
 13256 ;; Hardware stack levels required when called:   12
 13257 ;; This function calls:
 13258 ;;		_oled_writeCommand
 13259 ;; This function is called by:
 13260 ;;		_oled_init
 13261 ;; This function uses a non-reentrant model
 13262 ;;
 13263                           
 13264                           	psect	text32
 13265  006FD8                     __ptext32:
 13266                           	opt stack 0
 13267  006FD8                     _oled_setDisplay:
 13268                           	opt stack 17
 13269                           
 13270                           ; BSR set to: 0
 13271                           ;incstack = 0
 13272                           ;oled_setDisplay@displayType stored from wreg
 13273  006FD8  0100               	movlb	0	; () banked
 13274  006FDA  6F61               	movwf	oled_setDisplay@displayType& (0+255),b
 13275                           
 13276                           ;SSD1306oLED.c: 413: if (displayType == Normal)
 13277  006FDC  0100               	movlb	0	; () banked
 13278  006FDE  5161               	movf	oled_setDisplay@displayType& (0+255),w,b
 13279  006FE0  0100               	movlb	0	; () banked
 13280  006FE2  A4D8               	btfss	status,2,c
 13281  006FE4  D001               	goto	u10911
 13282  006FE6  D001               	goto	u10910
 13283  006FE8                     u10911:
 13284  006FE8  D007               	goto	l12075
 13285  006FEA                     u10910:
 13286                           
 13287                           ; BSR set to: 0
 13288                           ;SSD1306oLED.c: 414: {
 13289                           ;SSD1306oLED.c: 415: oled_writeCommand(0xa0);
 13290  006FEA  0EA0               	movlw	160
 13291  006FEC  ECD8  F038         	call	_oled_writeCommand
 13292                           
 13293                           ;SSD1306oLED.c: 416: oled_writeCommand(0xc8);
 13294  006FF0  0EC8               	movlw	200
 13295  006FF2  ECD8  F038         	call	_oled_writeCommand
 13296                           
 13297                           ;SSD1306oLED.c: 417: }
 13298  006FF6  D007               	goto	l1063
 13299  006FF8                     l12075:
 13300                           
 13301                           ;SSD1306oLED.c: 418: else
 13302                           ;SSD1306oLED.c: 419: {
 13303                           ;SSD1306oLED.c: 420: oled_writeCommand(0xa1);
 13304  006FF8  0EA1               	movlw	161
 13305  006FFA  ECD8  F038         	call	_oled_writeCommand
 13306                           
 13307                           ;SSD1306oLED.c: 421: oled_writeCommand(0xc0);
 13308  006FFE  0EC0               	movlw	192
 13309  007000  ECD8  F038         	call	_oled_writeCommand
 13310  007004  D000               	goto	l1063
 13311  007006                     l1063:
 13312  007006  0012               	return		;funcret
 13313  007008                     __end_of_oled_setDisplay:
 13314                           	opt stack 0
 13315                           tblptru	equ	0xFF8
 13316                           tblptrh	equ	0xFF7
 13317                           tblptrl	equ	0xFF6
 13318                           tablat	equ	0xFF5
 13319                           prodh	equ	0xFF4
 13320                           prodl	equ	0xFF3
 13321                           intcon	equ	0xFF2
 13322                           intcon3	equ	0xFF0
 13323                           postinc0	equ	0xFEE
 13324                           wreg	equ	0xFE8
 13325                           indf1	equ	0xFE7
 13326                           postdec1	equ	0xFE5
 13327                           fsr1h	equ	0xFE2
 13328                           fsr1l	equ	0xFE1
 13329                           indf2	equ	0xFDF
 13330                           fsr2h	equ	0xFDA
 13331                           fsr2l	equ	0xFD9
 13332                           status	equ	0xFD8
 13333                           
 13334 ;; *************** function _oled_devInit *****************
 13335 ;; Defined at:
 13336 ;;		line 388 in file "../Includes/Drivers/SSD1306oLED.c"
 13337 ;; Parameters:    Size  Location     Type
 13338 ;;		None
 13339 ;; Auto vars:     Size  Location     Type
 13340 ;;		None
 13341 ;; Return value:  Size  Location     Type
 13342 ;;                  1    wreg      void 
 13343 ;; Registers used:
 13344 ;;		wreg, status,2, status,0, cstack
 13345 ;; Tracked objects:
 13346 ;;		On entry : 0/0
 13347 ;;		On exit  : 0/0
 13348 ;;		Unchanged: 0/0
 13349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13350 ;;      Params:         0       0       0       0       0       0       0       0       0
 13351 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13352 ;;      Temps:          0       1       0       0       0       0       0       0       0
 13353 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13354 ;;Total ram usage:        1 bytes
 13355 ;; Hardware stack levels used:    1
 13356 ;; Hardware stack levels required when called:   13
 13357 ;; This function calls:
 13358 ;;		_oled_initialDispayLine
 13359 ;;		_oled_powerControl
 13360 ;;		_oled_regulorResistorSelect
 13361 ;;		_oled_setContrastControlRegister
 13362 ;;		_oled_writeCommand
 13363 ;; This function is called by:
 13364 ;;		_oled_init
 13365 ;; This function uses a non-reentrant model
 13366 ;;
 13367                           
 13368                           	psect	text33
 13369  00632A                     __ptext33:
 13370                           	opt stack 0
 13371  00632A                     _oled_devInit:
 13372                           	opt stack 16
 13373                           
 13374                           ;SSD1306oLED.c: 390: oled_writeCommand(0xe2);
 13375                           
 13376                           ;incstack = 0
 13377  00632A  0EE2               	movlw	226
 13378  00632C  ECD8  F038         	call	_oled_writeCommand
 13379                           
 13380                           ;SSD1306oLED.c: 391: LATBbits.LATB2=1;
 13381  006330  848A               	bsf	3978,2,c	;volatile
 13382                           
 13383                           ;SSD1306oLED.c: 392: _delay((unsigned long)((200)*(48000000/4000000.0)));
 13384  006332  0E04               	movlw	4
 13385  006334  0100               	movlb	0	; () banked
 13386  006336  6F62               	movwf	??_oled_devInit& (0+255),b
 13387  006338  0E1C               	movlw	28
 13388  00633A                     u14467:
 13389  00633A  2EE8               	decfsz	wreg,f,c
 13390  00633C  D7FE               	bra	u14467
 13391  00633E  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 13392  006340  D7FC               	bra	u14467
 13393  006342  F000               	nop	
 13394                           
 13395                           ;SSD1306oLED.c: 393: LATBbits.LATB2=0;
 13396  006344  948A               	bcf	3978,2,c	;volatile
 13397                           
 13398                           ;SSD1306oLED.c: 394: _delay((unsigned long)((2000)*(48000000/4000000.0)));
 13399  006346  0E20               	movlw	32
 13400  006348  0100               	movlb	0	; () banked
 13401  00634A  6F62               	movwf	??_oled_devInit& (0+255),b
 13402  00634C  0E29               	movlw	41
 13403  00634E                     u14477:
 13404  00634E  2EE8               	decfsz	wreg,f,c
 13405  006350  D7FE               	bra	u14477
 13406  006352  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 13407  006354  D7FC               	bra	u14477
 13408  006356  D000               	nop2	
 13409                           
 13410                           ;SSD1306oLED.c: 395: LATBbits.LATB2=1;
 13411  006358  848A               	bsf	3978,2,c	;volatile
 13412                           
 13413                           ;SSD1306oLED.c: 396: _delay((unsigned long)((1000)*(48000000/4000000.0)));
 13414  00635A  0E10               	movlw	16
 13415  00635C  0100               	movlb	0	; () banked
 13416  00635E  6F62               	movwf	??_oled_devInit& (0+255),b
 13417  006360  0E94               	movlw	148
 13418  006362                     u14487:
 13419  006362  2EE8               	decfsz	wreg,f,c
 13420  006364  D7FE               	bra	u14487
 13421  006366  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 13422  006368  D7FC               	bra	u14487
 13423  00636A  F000               	nop	
 13424                           
 13425                           ;SSD1306oLED.c: 398: oled_writeCommand(0xa1);
 13426  00636C  0EA1               	movlw	161
 13427  00636E  ECD8  F038         	call	_oled_writeCommand
 13428                           
 13429                           ;SSD1306oLED.c: 399: oled_writeCommand(0xc0);
 13430  006372  0EC0               	movlw	192
 13431  006374  ECD8  F038         	call	_oled_writeCommand
 13432                           
 13433                           ;SSD1306oLED.c: 400: oled_writeCommand(0xa3);
 13434  006378  0EA3               	movlw	163
 13435  00637A  ECD8  F038         	call	_oled_writeCommand
 13436                           
 13437                           ;SSD1306oLED.c: 401: oled_powerControl(0x07);
 13438  00637E  0E07               	movlw	7
 13439  006380  EC18  F039         	call	_oled_powerControl
 13440                           
 13441                           ;SSD1306oLED.c: 402: oled_regulorResistorSelect(0x05);
 13442  006384  0E05               	movlw	5
 13443  006386  EC0F  F039         	call	_oled_regulorResistorSelect
 13444                           
 13445                           ;SSD1306oLED.c: 403: oled_setContrastControlRegister(Contrast_level);
 13446  00638A  0100               	movlb	0	; () banked
 13447  00638C  51F6               	movf	_Contrast_level& (0+255),w,b
 13448  00638E  ECF0  F038         	call	_oled_setContrastControlRegister
 13449                           
 13450                           ;SSD1306oLED.c: 404: oled_initialDispayLine(0x00);
 13451  006392  0E00               	movlw	0
 13452  006394  ECFB  F038         	call	_oled_initialDispayLine
 13453                           
 13454                           ;SSD1306oLED.c: 405: oled_writeCommand(0xF8);
 13455  006398  0EF8               	movlw	248
 13456  00639A  ECD8  F038         	call	_oled_writeCommand
 13457                           
 13458                           ;SSD1306oLED.c: 406: oled_writeCommand(0x00);
 13459  00639E  0E00               	movlw	0
 13460  0063A0  ECD8  F038         	call	_oled_writeCommand
 13461                           
 13462                           ;SSD1306oLED.c: 407: oled_writeCommand(0xaf);
 13463  0063A4  0EAF               	movlw	175
 13464  0063A6  ECD8  F038         	call	_oled_writeCommand
 13465  0063AA  0012               	return		;funcret
 13466  0063AC                     __end_of_oled_devInit:
 13467                           	opt stack 0
 13468                           tblptru	equ	0xFF8
 13469                           tblptrh	equ	0xFF7
 13470                           tblptrl	equ	0xFF6
 13471                           tablat	equ	0xFF5
 13472                           prodh	equ	0xFF4
 13473                           prodl	equ	0xFF3
 13474                           intcon	equ	0xFF2
 13475                           intcon3	equ	0xFF0
 13476                           postinc0	equ	0xFEE
 13477                           wreg	equ	0xFE8
 13478                           indf1	equ	0xFE7
 13479                           postdec1	equ	0xFE5
 13480                           fsr1h	equ	0xFE2
 13481                           fsr1l	equ	0xFE1
 13482                           indf2	equ	0xFDF
 13483                           fsr2h	equ	0xFDA
 13484                           fsr2l	equ	0xFD9
 13485                           status	equ	0xFD8
 13486                           
 13487 ;; *************** function _oled_setContrastControlRegister *****************
 13488 ;; Defined at:
 13489 ;;		line 454 in file "../Includes/Drivers/SSD1306oLED.c"
 13490 ;; Parameters:    Size  Location     Type
 13491 ;;  mod             1    wreg     unsigned char 
 13492 ;; Auto vars:     Size  Location     Type
 13493 ;;  mod             1    1[BANK0 ] unsigned char 
 13494 ;; Return value:  Size  Location     Type
 13495 ;;                  1    wreg      void 
 13496 ;; Registers used:
 13497 ;;		wreg, status,2, cstack
 13498 ;; Tracked objects:
 13499 ;;		On entry : 0/0
 13500 ;;		On exit  : 0/0
 13501 ;;		Unchanged: 0/0
 13502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13503 ;;      Params:         0       0       0       0       0       0       0       0       0
 13504 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13505 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13506 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13507 ;;Total ram usage:        1 bytes
 13508 ;; Hardware stack levels used:    1
 13509 ;; Hardware stack levels required when called:   12
 13510 ;; This function calls:
 13511 ;;		_oled_writeCommand
 13512 ;; This function is called by:
 13513 ;;		_oled_devInit
 13514 ;; This function uses a non-reentrant model
 13515 ;;
 13516                           
 13517                           	psect	text34
 13518  0071E0                     __ptext34:
 13519                           	opt stack 0
 13520  0071E0                     _oled_setContrastControlRegister:
 13521                           	opt stack 16
 13522                           
 13523                           ;incstack = 0
 13524                           ;oled_setContrastControlRegister@mod stored from wreg
 13525  0071E0  0100               	movlb	0	; () banked
 13526  0071E2  6F61               	movwf	oled_setContrastControlRegister@mod& (0+255),b
 13527                           
 13528                           ;SSD1306oLED.c: 456: oled_writeCommand(0x81);
 13529  0071E4  0E81               	movlw	129
 13530  0071E6  ECD8  F038         	call	_oled_writeCommand
 13531                           
 13532                           ;SSD1306oLED.c: 457: oled_writeCommand(mod);
 13533  0071EA  0100               	movlb	0	; () banked
 13534  0071EC  5161               	movf	oled_setContrastControlRegister@mod& (0+255),w,b
 13535  0071EE  ECD8  F038         	call	_oled_writeCommand
 13536  0071F2  D000               	goto	l1075
 13537  0071F4                     l1075:
 13538  0071F4  0012               	return		;funcret
 13539  0071F6                     __end_of_oled_setContrastControlRegister:
 13540                           	opt stack 0
 13541                           tblptru	equ	0xFF8
 13542                           tblptrh	equ	0xFF7
 13543                           tblptrl	equ	0xFF6
 13544                           tablat	equ	0xFF5
 13545                           prodh	equ	0xFF4
 13546                           prodl	equ	0xFF3
 13547                           intcon	equ	0xFF2
 13548                           intcon3	equ	0xFF0
 13549                           postinc0	equ	0xFEE
 13550                           wreg	equ	0xFE8
 13551                           indf1	equ	0xFE7
 13552                           postdec1	equ	0xFE5
 13553                           fsr1h	equ	0xFE2
 13554                           fsr1l	equ	0xFE1
 13555                           indf2	equ	0xFDF
 13556                           fsr2h	equ	0xFDA
 13557                           fsr2l	equ	0xFD9
 13558                           status	equ	0xFD8
 13559                           
 13560 ;; *************** function _oled_regulorResistorSelect *****************
 13561 ;; Defined at:
 13562 ;;		line 482 in file "../Includes/Drivers/SSD1306oLED.c"
 13563 ;; Parameters:    Size  Location     Type
 13564 ;;  r               1    wreg     unsigned char 
 13565 ;; Auto vars:     Size  Location     Type
 13566 ;;  r               1    1[BANK0 ] unsigned char 
 13567 ;; Return value:  Size  Location     Type
 13568 ;;                  1    wreg      void 
 13569 ;; Registers used:
 13570 ;;		wreg, status,2, status,0, cstack
 13571 ;; Tracked objects:
 13572 ;;		On entry : 0/0
 13573 ;;		On exit  : 0/0
 13574 ;;		Unchanged: 0/0
 13575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13576 ;;      Params:         0       0       0       0       0       0       0       0       0
 13577 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13578 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13579 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13580 ;;Total ram usage:        1 bytes
 13581 ;; Hardware stack levels used:    1
 13582 ;; Hardware stack levels required when called:   12
 13583 ;; This function calls:
 13584 ;;		_oled_writeCommand
 13585 ;; This function is called by:
 13586 ;;		_oled_devInit
 13587 ;; This function uses a non-reentrant model
 13588 ;;
 13589                           
 13590                           	psect	text35
 13591  00721E                     __ptext35:
 13592                           	opt stack 0
 13593  00721E                     _oled_regulorResistorSelect:
 13594                           	opt stack 16
 13595                           
 13596                           ;incstack = 0
 13597                           ;oled_regulorResistorSelect@r stored from wreg
 13598  00721E  0100               	movlb	0	; () banked
 13599  007220  6F61               	movwf	oled_regulorResistorSelect@r& (0+255),b
 13600                           
 13601                           ;SSD1306oLED.c: 484: oled_writeCommand((0x20|r));
 13602  007222  0100               	movlb	0	; () banked
 13603  007224  5161               	movf	oled_regulorResistorSelect@r& (0+255),w,b
 13604  007226  0920               	iorlw	32
 13605  007228  ECD8  F038         	call	_oled_writeCommand
 13606  00722C  D000               	goto	l1084
 13607  00722E                     l1084:
 13608  00722E  0012               	return		;funcret
 13609  007230                     __end_of_oled_regulorResistorSelect:
 13610                           	opt stack 0
 13611                           tblptru	equ	0xFF8
 13612                           tblptrh	equ	0xFF7
 13613                           tblptrl	equ	0xFF6
 13614                           tablat	equ	0xFF5
 13615                           prodh	equ	0xFF4
 13616                           prodl	equ	0xFF3
 13617                           intcon	equ	0xFF2
 13618                           intcon3	equ	0xFF0
 13619                           postinc0	equ	0xFEE
 13620                           wreg	equ	0xFE8
 13621                           indf1	equ	0xFE7
 13622                           postdec1	equ	0xFE5
 13623                           fsr1h	equ	0xFE2
 13624                           fsr1l	equ	0xFE1
 13625                           indf2	equ	0xFDF
 13626                           fsr2h	equ	0xFDA
 13627                           fsr2l	equ	0xFD9
 13628                           status	equ	0xFD8
 13629                           
 13630 ;; *************** function _oled_powerControl *****************
 13631 ;; Defined at:
 13632 ;;		line 469 in file "../Includes/Drivers/SSD1306oLED.c"
 13633 ;; Parameters:    Size  Location     Type
 13634 ;;  vol             1    wreg     unsigned char 
 13635 ;; Auto vars:     Size  Location     Type
 13636 ;;  vol             1    1[BANK0 ] unsigned char 
 13637 ;; Return value:  Size  Location     Type
 13638 ;;                  1    wreg      void 
 13639 ;; Registers used:
 13640 ;;		wreg, status,2, status,0, cstack
 13641 ;; Tracked objects:
 13642 ;;		On entry : 0/0
 13643 ;;		On exit  : 0/0
 13644 ;;		Unchanged: 0/0
 13645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13646 ;;      Params:         0       0       0       0       0       0       0       0       0
 13647 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13648 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13649 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13650 ;;Total ram usage:        1 bytes
 13651 ;; Hardware stack levels used:    1
 13652 ;; Hardware stack levels required when called:   12
 13653 ;; This function calls:
 13654 ;;		_oled_writeCommand
 13655 ;; This function is called by:
 13656 ;;		_oled_devInit
 13657 ;; This function uses a non-reentrant model
 13658 ;;
 13659                           
 13660                           	psect	text36
 13661  007230                     __ptext36:
 13662                           	opt stack 0
 13663  007230                     _oled_powerControl:
 13664                           	opt stack 16
 13665                           
 13666                           ;incstack = 0
 13667                           ;oled_powerControl@vol stored from wreg
 13668  007230  0100               	movlb	0	; () banked
 13669  007232  6F61               	movwf	oled_powerControl@vol& (0+255),b
 13670                           
 13671                           ;SSD1306oLED.c: 471: oled_writeCommand((0x28|vol));
 13672  007234  0100               	movlb	0	; () banked
 13673  007236  5161               	movf	oled_powerControl@vol& (0+255),w,b
 13674  007238  0928               	iorlw	40
 13675  00723A  ECD8  F038         	call	_oled_writeCommand
 13676  00723E  D000               	goto	l1081
 13677  007240                     l1081:
 13678  007240  0012               	return		;funcret
 13679  007242                     __end_of_oled_powerControl:
 13680                           	opt stack 0
 13681                           tblptru	equ	0xFF8
 13682                           tblptrh	equ	0xFF7
 13683                           tblptrl	equ	0xFF6
 13684                           tablat	equ	0xFF5
 13685                           prodh	equ	0xFF4
 13686                           prodl	equ	0xFF3
 13687                           intcon	equ	0xFF2
 13688                           intcon3	equ	0xFF0
 13689                           postinc0	equ	0xFEE
 13690                           wreg	equ	0xFE8
 13691                           indf1	equ	0xFE7
 13692                           postdec1	equ	0xFE5
 13693                           fsr1h	equ	0xFE2
 13694                           fsr1l	equ	0xFE1
 13695                           indf2	equ	0xFDF
 13696                           fsr2h	equ	0xFDA
 13697                           fsr2l	equ	0xFD9
 13698                           status	equ	0xFD8
 13699                           
 13700 ;; *************** function _oled_initialDispayLine *****************
 13701 ;; Defined at:
 13702 ;;		line 462 in file "../Includes/Drivers/SSD1306oLED.c"
 13703 ;; Parameters:    Size  Location     Type
 13704 ;;  line            1    wreg     unsigned char 
 13705 ;; Auto vars:     Size  Location     Type
 13706 ;;  line            1    1[BANK0 ] unsigned char 
 13707 ;; Return value:  Size  Location     Type
 13708 ;;                  1    wreg      void 
 13709 ;; Registers used:
 13710 ;;		wreg, status,2, status,0, cstack
 13711 ;; Tracked objects:
 13712 ;;		On entry : 0/0
 13713 ;;		On exit  : 0/0
 13714 ;;		Unchanged: 0/0
 13715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13716 ;;      Params:         0       0       0       0       0       0       0       0       0
 13717 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13718 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13719 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13720 ;;Total ram usage:        1 bytes
 13721 ;; Hardware stack levels used:    1
 13722 ;; Hardware stack levels required when called:   12
 13723 ;; This function calls:
 13724 ;;		_oled_writeCommand
 13725 ;; This function is called by:
 13726 ;;		_oled_devInit
 13727 ;; This function uses a non-reentrant model
 13728 ;;
 13729                           
 13730                           	psect	text37
 13731  0071F6                     __ptext37:
 13732                           	opt stack 0
 13733  0071F6                     _oled_initialDispayLine:
 13734                           	opt stack 16
 13735                           
 13736                           ;incstack = 0
 13737                           ;oled_initialDispayLine@line stored from wreg
 13738  0071F6  0100               	movlb	0	; () banked
 13739  0071F8  6F61               	movwf	oled_initialDispayLine@line& (0+255),b
 13740                           
 13741                           ;SSD1306oLED.c: 464: line|=0x40;
 13742  0071FA  0100               	movlb	0	; () banked
 13743  0071FC  8D61               	bsf	oled_initialDispayLine@line& (0+255),6,b
 13744                           
 13745                           ; BSR set to: 0
 13746                           ;SSD1306oLED.c: 465: oled_writeCommand(line);
 13747  0071FE  0100               	movlb	0	; () banked
 13748  007200  5161               	movf	oled_initialDispayLine@line& (0+255),w,b
 13749  007202  ECD8  F038         	call	_oled_writeCommand
 13750  007206  D000               	goto	l1078
 13751  007208                     l1078:
 13752  007208  0012               	return		;funcret
 13753  00720A                     __end_of_oled_initialDispayLine:
 13754                           	opt stack 0
 13755                           tblptru	equ	0xFF8
 13756                           tblptrh	equ	0xFF7
 13757                           tblptrl	equ	0xFF6
 13758                           tablat	equ	0xFF5
 13759                           prodh	equ	0xFF4
 13760                           prodl	equ	0xFF3
 13761                           intcon	equ	0xFF2
 13762                           intcon3	equ	0xFF0
 13763                           postinc0	equ	0xFEE
 13764                           wreg	equ	0xFE8
 13765                           indf1	equ	0xFE7
 13766                           postdec1	equ	0xFE5
 13767                           fsr1h	equ	0xFE2
 13768                           fsr1l	equ	0xFE1
 13769                           indf2	equ	0xFDF
 13770                           fsr2h	equ	0xFDA
 13771                           fsr2l	equ	0xFD9
 13772                           status	equ	0xFD8
 13773                           
 13774 ;; *************** function _oled_displayOff *****************
 13775 ;; Defined at:
 13776 ;;		line 425 in file "../Includes/Drivers/SSD1306oLED.c"
 13777 ;; Parameters:    Size  Location     Type
 13778 ;;  state           1    wreg     unsigned char 
 13779 ;; Auto vars:     Size  Location     Type
 13780 ;;  state           1    0[COMRAM] unsigned char 
 13781 ;; Return value:  Size  Location     Type
 13782 ;;                  1    wreg      void 
 13783 ;; Registers used:
 13784 ;;		wreg, cstack
 13785 ;; Tracked objects:
 13786 ;;		On entry : 0/0
 13787 ;;		On exit  : 0/0
 13788 ;;		Unchanged: 0/0
 13789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13790 ;;      Params:         0       0       0       0       0       0       0       0       0
 13791 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13792 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13793 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13794 ;;Total ram usage:        0 bytes
 13795 ;; Hardware stack levels used:    1
 13796 ;; Hardware stack levels required when called:   12
 13797 ;; This function calls:
 13798 ;;		_oled_writeCommand
 13799 ;; This function is called by:
 13800 ;;		_moteApp_GoToSleep
 13801 ;; This function uses a non-reentrant model
 13802 ;;
 13803                           
 13804                           	psect	text38
 13805  0072CC                     __ptext38:
 13806                           	opt stack 0
 13807  0072CC                     _oled_displayOff:
 13808                           	opt stack 15
 13809                           
 13810                           ;SSD1306oLED.c: 427: oled_writeCommand(0xae);
 13811                           
 13812                           ;incstack = 0
 13813  0072CC  0EAE               	movlw	174
 13814  0072CE  ECD8  F038         	call	_oled_writeCommand
 13815  0072D2  0012               	return		;funcret
 13816  0072D4                     __end_of_oled_displayOff:
 13817                           	opt stack 0
 13818                           tblptru	equ	0xFF8
 13819                           tblptrh	equ	0xFF7
 13820                           tblptrl	equ	0xFF6
 13821                           tablat	equ	0xFF5
 13822                           prodh	equ	0xFF4
 13823                           prodl	equ	0xFF3
 13824                           intcon	equ	0xFF2
 13825                           intcon3	equ	0xFF0
 13826                           postinc0	equ	0xFEE
 13827                           wreg	equ	0xFE8
 13828                           indf1	equ	0xFE7
 13829                           postdec1	equ	0xFE5
 13830                           fsr1h	equ	0xFE2
 13831                           fsr1l	equ	0xFE1
 13832                           indf2	equ	0xFDF
 13833                           fsr2h	equ	0xFDA
 13834                           fsr2l	equ	0xFD9
 13835                           status	equ	0xFD8
 13836                           
 13837 ;; *************** function _moduleSleep *****************
 13838 ;; Defined at:
 13839 ;;		line 173 in file "../Includes/Board/MOTEapp.c"
 13840 ;; Parameters:    Size  Location     Type
 13841 ;;		None
 13842 ;; Auto vars:     Size  Location     Type
 13843 ;;		None
 13844 ;; Return value:  Size  Location     Type
 13845 ;;                  1    wreg      void 
 13846 ;; Registers used:
 13847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13848 ;; Tracked objects:
 13849 ;;		On entry : 0/0
 13850 ;;		On exit  : 0/0
 13851 ;;		Unchanged: 0/0
 13852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13853 ;;      Params:         0       0       0       0       0       0       0       0       0
 13854 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13855 ;;      Temps:          0       1       0       0       0       0       0       0       0
 13856 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13857 ;;Total ram usage:        1 bytes
 13858 ;; Hardware stack levels used:    1
 13859 ;; Hardware stack levels required when called:   14
 13860 ;; This function calls:
 13861 ;;		_sendCommand
 13862 ;; This function is called by:
 13863 ;;		_moteApp_GoToSleep
 13864 ;; This function uses a non-reentrant model
 13865 ;;
 13866                           
 13867                           	psect	text39
 13868  007008                     __ptext39:
 13869                           	opt stack 0
 13870  007008                     _moduleSleep:
 13871                           	opt stack 13
 13872                           
 13873                           ;MOTEapp.c: 175: sendCommand("sys sleep 999999999");
 13874                           
 13875                           ;incstack = 0
 13876  007008  0E82               	movlw	low STR_22
 13877  00700A  0100               	movlb	0	; () banked
 13878  00700C  6F61               	movwf	sendCommand@string& (0+255),b
 13879  00700E  0E7A               	movlw	high STR_22
 13880  007010  0100               	movlb	0	; () banked
 13881  007012  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13882  007014  EC65  F037         	call	_sendCommand	;wreg free
 13883                           
 13884                           ;MOTEapp.c: 176: while(1 == PIE1bits.TXIE)
 13885  007018  D000               	goto	l352
 13886  00701A                     l352:
 13887  00701A  B89D               	btfsc	3997,4,c	;volatile
 13888  00701C  D001               	goto	u11031
 13889  00701E  D001               	goto	u11030
 13890  007020                     u11031:
 13891  007020  D7FC               	goto	l352
 13892  007022                     u11030:
 13893  007022  D000               	goto	l12145
 13894  007024                     l12145:
 13895                           
 13896                           ;MOTEapp.c: 178: _delay((unsigned long)((16)*(48000000/4000.0)));
 13897  007024  0EFA               	movlw	250
 13898  007026  0100               	movlb	0	; () banked
 13899  007028  6F63               	movwf	??_moduleSleep& (0+255),b
 13900  00702A  0E58               	movlw	88
 13901  00702C                     u14497:
 13902  00702C  2EE8               	decfsz	wreg,f,c
 13903  00702E  D7FE               	bra	u14497
 13904  007030  2F63               	decfsz	??_moduleSleep& (0+255),f,b
 13905  007032  D7FC               	bra	u14497
 13906  007034  F000               	nop	
 13907  007036  0012               	return		;funcret
 13908  007038                     __end_of_moduleSleep:
 13909                           	opt stack 0
 13910                           tblptru	equ	0xFF8
 13911                           tblptrh	equ	0xFF7
 13912                           tblptrl	equ	0xFF6
 13913                           tablat	equ	0xFF5
 13914                           prodh	equ	0xFF4
 13915                           prodl	equ	0xFF3
 13916                           intcon	equ	0xFF2
 13917                           intcon3	equ	0xFF0
 13918                           postinc0	equ	0xFEE
 13919                           wreg	equ	0xFE8
 13920                           indf1	equ	0xFE7
 13921                           postdec1	equ	0xFE5
 13922                           fsr1h	equ	0xFE2
 13923                           fsr1l	equ	0xFE1
 13924                           indf2	equ	0xFDF
 13925                           fsr2h	equ	0xFDA
 13926                           fsr2l	equ	0xFD9
 13927                           status	equ	0xFD8
 13928                           
 13929 ;; *************** function _moduleResync *****************
 13930 ;; Defined at:
 13931 ;;		line 132 in file "../Includes/Board/MOTEapp.c"
 13932 ;; Parameters:    Size  Location     Type
 13933 ;;		None
 13934 ;; Auto vars:     Size  Location     Type
 13935 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 13936 ;;  escapeEvent     1    7[BANK0 ] unsigned char 
 13937 ;; Return value:  Size  Location     Type
 13938 ;;                  1    wreg      void 
 13939 ;; Registers used:
 13940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13941 ;; Tracked objects:
 13942 ;;		On entry : 0/0
 13943 ;;		On exit  : 0/0
 13944 ;;		Unchanged: 0/0
 13945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13946 ;;      Params:         0       0       0       0       0       0       0       0       0
 13947 ;;      Locals:         0       3       0       0       0       0       0       0       0
 13948 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13949 ;;      Totals:         0       3       0       0       0       0       0       0       0
 13950 ;;Total ram usage:        3 bytes
 13951 ;; Hardware stack levels used:    1
 13952 ;; Hardware stack levels required when called:   14
 13953 ;; This function calls:
 13954 ;;		_MOTEapp_getModuleResponse
 13955 ;;		_moteApp_delayms
 13956 ;;		_sendCommand
 13957 ;; This function is called by:
 13958 ;;		_main
 13959 ;;		_moteApp_GoToSleep
 13960 ;; This function uses a non-reentrant model
 13961 ;;
 13962                           
 13963                           	psect	text40
 13964  005B62                     __ptext40:
 13965                           	opt stack 0
 13966  005B62                     _moduleResync:
 13967                           	opt stack 13
 13968                           
 13969                           ;MOTEapp.c: 134: bool escapeEvent = 0;
 13970                           
 13971                           ;incstack = 0
 13972  005B62  0E00               	movlw	0
 13973  005B64  0100               	movlb	0	; () banked
 13974  005B66  6F67               	movwf	moduleResync@escapeEvent& (0+255),b
 13975                           
 13976                           ;MOTEapp.c: 135: uint16_t escapeCounter = 0;
 13977  005B68  0E00               	movlw	0
 13978  005B6A  0100               	movlb	0	; () banked
 13979  005B6C  6F66               	movwf	(moduleResync@escapeCounter+1)& (0+255),b
 13980  005B6E  0E00               	movlw	0
 13981  005B70  6F65               	movwf	moduleResync@escapeCounter& (0+255),b
 13982                           
 13983                           ; BSR set to: 0
 13984                           ;MOTEapp.c: 143: TXSTAbits.TXEN = 0;
 13985  005B72  9AAC               	bcf	4012,5,c	;volatile
 13986                           
 13987                           ; BSR set to: 0
 13988                           ;MOTEapp.c: 144: LATCbits.LATC6 = 0;
 13989  005B74  9C8B               	bcf	3979,6,c	;volatile
 13990                           
 13991                           ; BSR set to: 0
 13992                           ;MOTEapp.c: 145: moteApp_delayms(10);
 13993  005B76  0E00               	movlw	0
 13994  005B78  0100               	movlb	0	; () banked
 13995  005B7A  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 13996  005B7C  0E0A               	movlw	10
 13997  005B7E  6F60               	movwf	moteApp_delayms@length& (0+255),b
 13998  005B80  EC90  F036         	call	_moteApp_delayms	;wreg free
 13999                           
 14000                           ;MOTEapp.c: 146: TXSTAbits.TXEN = 1;
 14001  005B84  8AAC               	bsf	4012,5,c	;volatile
 14002                           
 14003                           ;MOTEapp.c: 147: moteApp_delayms(5);
 14004  005B86  0E00               	movlw	0
 14005  005B88  0100               	movlb	0	; () banked
 14006  005B8A  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 14007  005B8C  0E05               	movlw	5
 14008  005B8E  6F60               	movwf	moteApp_delayms@length& (0+255),b
 14009  005B90  EC90  F036         	call	_moteApp_delayms	;wreg free
 14010                           
 14011                           ;MOTEapp.c: 149: TXREG = 0x55;
 14012  005B94  0E55               	movlw	85
 14013  005B96  6EAD               	movwf	4013,c	;volatile
 14014                           
 14015                           ;MOTEapp.c: 150: while (TXSTAbits.TRMT == 0)
 14016  005B98  D000               	goto	l334
 14017  005B9A                     l334:
 14018  005B9A  A2AC               	btfss	4012,1,c	;volatile
 14019  005B9C  D001               	goto	u10921
 14020  005B9E  D001               	goto	u10920
 14021  005BA0                     u10921:
 14022  005BA0  D7FC               	goto	l334
 14023  005BA2                     u10920:
 14024  005BA2  D000               	goto	l12099
 14025  005BA4                     l12099:
 14026                           
 14027                           ;MOTEapp.c: 153: sendCommand("z");
 14028  005BA4  0EFC               	movlw	low STR_21
 14029  005BA6  0100               	movlb	0	; () banked
 14030  005BA8  6F61               	movwf	sendCommand@string& (0+255),b
 14031  005BAA  0E7F               	movlw	high STR_21
 14032  005BAC  0100               	movlb	0	; () banked
 14033  005BAE  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14034  005BB0  EC65  F037         	call	_sendCommand	;wreg free
 14035                           
 14036                           ;MOTEapp.c: 155: moteApp_delayms(40);
 14037  005BB4  0E00               	movlw	0
 14038  005BB6  0100               	movlb	0	; () banked
 14039  005BB8  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 14040  005BBA  0E28               	movlw	40
 14041  005BBC  6F60               	movwf	moteApp_delayms@length& (0+255),b
 14042  005BBE  EC90  F036         	call	_moteApp_delayms	;wreg free
 14043                           
 14044                           ;MOTEapp.c: 156: while (escapeEvent)
 14045  005BC2  D01D               	goto	l337
 14046  005BC4                     l12103:
 14047                           
 14048                           ;MOTEapp.c: 157: {
 14049                           ;MOTEapp.c: 158: if(MOTEapp_getModuleResponse())
 14050  005BC4  EC41  F030         	call	_MOTEapp_getModuleResponse	;wreg free
 14051  005BC8  0900               	iorlw	0
 14052  005BCA  B4D8               	btfsc	status,2,c
 14053  005BCC  D001               	goto	u10931
 14054  005BCE  D001               	goto	u10930
 14055  005BD0                     u10931:
 14056  005BD0  D004               	goto	l12107
 14057  005BD2                     u10930:
 14058                           
 14059                           ;MOTEapp.c: 159: escapeEvent = 1;
 14060  005BD2  0E01               	movlw	1
 14061  005BD4  0100               	movlb	0	; () banked
 14062  005BD6  6F67               	movwf	moduleResync@escapeEvent& (0+255),b
 14063  005BD8  D012               	goto	l337
 14064  005BDA                     l12107:
 14065                           
 14066                           ;MOTEapp.c: 160: else if (++escapeCounter > 5000)
 14067  005BDA  0100               	movlb	0	; () banked
 14068  005BDC  4B65               	infsnz	moduleResync@escapeCounter& (0+255),f,b
 14069  005BDE  2B66               	incf	(moduleResync@escapeCounter+1)& (0+255),f,b
 14070  005BE0  0E89               	movlw	137
 14071  005BE2  0100               	movlb	0	; () banked
 14072  005BE4  5D65               	subwf	moduleResync@escapeCounter& (0+255),w,b
 14073  005BE6  0E13               	movlw	19
 14074  005BE8  0100               	movlb	0	; () banked
 14075  005BEA  5966               	subwfb	(moduleResync@escapeCounter+1)& (0+255),w,b
 14076  005BEC  A0D8               	btfss	status,0,c
 14077  005BEE  D001               	goto	u10941
 14078  005BF0  D001               	goto	u10940
 14079  005BF2                     u10941:
 14080  005BF2  D005               	goto	l337
 14081  005BF4                     u10940:
 14082                           
 14083                           ; BSR set to: 0
 14084                           ;MOTEapp.c: 161: escapeEvent = 1;
 14085  005BF4  0E01               	movlw	1
 14086  005BF6  0100               	movlb	0	; () banked
 14087  005BF8  6F67               	movwf	moduleResync@escapeEvent& (0+255),b
 14088  005BFA  D001               	goto	l337
 14089                           
 14090                           ; BSR set to: 0
 14091  005BFC  D000               	goto	l337
 14092  005BFE                     l337:
 14093  005BFE  0100               	movlb	0	; () banked
 14094  005C00  5167               	movf	moduleResync@escapeEvent& (0+255),w,b
 14095  005C02  0100               	movlb	0	; () banked
 14096  005C04  A4D8               	btfss	status,2,c
 14097  005C06  D001               	goto	u10951
 14098  005C08  D001               	goto	u10950
 14099  005C0A                     u10951:
 14100  005C0A  D7DC               	goto	l12103
 14101  005C0C                     u10950:
 14102  005C0C  D000               	goto	l343
 14103  005C0E                     l343:
 14104                           
 14105                           ; BSR set to: 0
 14106  005C0E  0012               	return		;funcret
 14107  005C10                     __end_of_moduleResync:
 14108                           	opt stack 0
 14109                           tblptru	equ	0xFF8
 14110                           tblptrh	equ	0xFF7
 14111                           tblptrl	equ	0xFF6
 14112                           tablat	equ	0xFF5
 14113                           prodh	equ	0xFF4
 14114                           prodl	equ	0xFF3
 14115                           intcon	equ	0xFF2
 14116                           intcon3	equ	0xFF0
 14117                           postinc0	equ	0xFEE
 14118                           wreg	equ	0xFE8
 14119                           indf1	equ	0xFE7
 14120                           postdec1	equ	0xFE5
 14121                           fsr1h	equ	0xFE2
 14122                           fsr1l	equ	0xFE1
 14123                           indf2	equ	0xFDF
 14124                           fsr2h	equ	0xFDA
 14125                           fsr2l	equ	0xFD9
 14126                           status	equ	0xFD8
 14127                           
 14128 ;; *************** function _MOTEapp_getModuleResponse *****************
 14129 ;; Defined at:
 14130 ;;		line 1072 in file "../Includes/Board/MOTEapp.c"
 14131 ;; Parameters:    Size  Location     Type
 14132 ;;		None
 14133 ;; Auto vars:     Size  Location     Type
 14134 ;;  bufferByte      1    2[BANK0 ] unsigned char 
 14135 ;;  terminatorRe    1    1[BANK0 ] unsigned char 
 14136 ;; Return value:  Size  Location     Type
 14137 ;;                  1    wreg      unsigned char 
 14138 ;; Registers used:
 14139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14140 ;; Tracked objects:
 14141 ;;		On entry : 0/0
 14142 ;;		On exit  : 0/0
 14143 ;;		Unchanged: 0/0
 14144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14145 ;;      Params:         0       0       0       0       0       0       0       0       0
 14146 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14147 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14148 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14149 ;;Total ram usage:        2 bytes
 14150 ;; Hardware stack levels used:    1
 14151 ;; Hardware stack levels required when called:   12
 14152 ;; This function calls:
 14153 ;;		_EUSART_Read
 14154 ;; This function is called by:
 14155 ;;		_moduleResync
 14156 ;;		_moteHandler
 14157 ;;		_moteApp_setSensorsInput
 14158 ;;		_moteApp_getTempValue
 14159 ;;		_moteApp_getLightValue
 14160 ;; This function uses a non-reentrant model
 14161 ;;
 14162                           
 14163                           	psect	text41
 14164  006082                     __ptext41:
 14165                           	opt stack 0
 14166  006082                     _MOTEapp_getModuleResponse:
 14167                           	opt stack 15
 14168                           
 14169                           ;MOTEapp.c: 1074: bool terminatorReceived = 0;
 14170                           
 14171                           ; BSR set to: 0
 14172                           ;incstack = 0
 14173  006082  0E00               	movlw	0
 14174  006084  0100               	movlb	0	; () banked
 14175  006086  6F61               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 14176                           
 14177                           ;MOTEapp.c: 1076: if ((eusartRxCount))
 14178  006088  5057               	movf	_eusartRxCount,w,c	;volatile
 14179  00608A  B4D8               	btfsc	status,2,c
 14180  00608C  D001               	goto	u10851
 14181  00608E  D001               	goto	u10850
 14182  006090                     u10851:
 14183  006090  D03C               	goto	l12019
 14184  006092                     u10850:
 14185                           
 14186                           ; BSR set to: 0
 14187                           ;MOTEapp.c: 1077: {
 14188                           ;MOTEapp.c: 1078: uint8_t bufferByte = 0;
 14189  006092  0E00               	movlw	0
 14190  006094  0100               	movlb	0	; () banked
 14191  006096  6F62               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 14192                           
 14193                           ; BSR set to: 0
 14194                           ;MOTEapp.c: 1079: bufferByte = EUSART_Read();
 14195  006098  EC49  F035         	call	_EUSART_Read	;wreg free
 14196  00609C  0100               	movlb	0	; () banked
 14197  00609E  6F62               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 14198                           
 14199                           ; BSR set to: 0
 14200                           ;MOTEapp.c: 1081: if (bufferByte == 0x0D)
 14201  0060A0  0E0D               	movlw	13
 14202  0060A2  0100               	movlb	0	; () banked
 14203  0060A4  1962               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 14204  0060A6  A4D8               	btfss	status,2,c
 14205  0060A8  D001               	goto	u10861
 14206  0060AA  D001               	goto	u10860
 14207  0060AC                     u10861:
 14208  0060AC  D010               	goto	l12011
 14209  0060AE                     u10860:
 14210                           
 14211                           ; BSR set to: 0
 14212                           ;MOTEapp.c: 1082: {
 14213                           ;MOTEapp.c: 1083: moduleResonseBuffer[moduleBufferIndex] = 0x00;
 14214  0060AE  5056               	movf	_moduleBufferIndex,w,c
 14215  0060B0  0D01               	mullw	1
 14216  0060B2  0E5D               	movlw	low _moduleResonseBuffer
 14217  0060B4  24F3               	addwf	prodl,w,c
 14218  0060B6  6ED9               	movwf	fsr2l,c
 14219  0060B8  0E01               	movlw	high _moduleResonseBuffer
 14220  0060BA  20F4               	addwfc	prodh,w,c
 14221  0060BC  6EDA               	movwf	fsr2h,c
 14222  0060BE  0E00               	movlw	0
 14223  0060C0  6EDF               	movwf	indf2,c
 14224                           
 14225                           ; BSR set to: 0
 14226                           ;MOTEapp.c: 1084: terminatorReceived = 1;
 14227  0060C2  0E01               	movlw	1
 14228  0060C4  0100               	movlb	0	; () banked
 14229  0060C6  6F61               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 14230                           
 14231                           ; BSR set to: 0
 14232                           ;MOTEapp.c: 1085: moduleBufferIndex = 0;
 14233  0060C8  0E00               	movlw	0
 14234  0060CA  6E56               	movwf	_moduleBufferIndex,c
 14235                           
 14236                           ;MOTEapp.c: 1086: }
 14237  0060CC  D01E               	goto	l12019
 14238  0060CE                     l12011:
 14239                           
 14240                           ; BSR set to: 0
 14241                           ;MOTEapp.c: 1087: else if ( (bufferByte == 0x00) || (bufferByte == 0x0A) )
 14242  0060CE  0100               	movlb	0	; () banked
 14243  0060D0  5162               	movf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 14244  0060D2  0100               	movlb	0	; () banked
 14245  0060D4  B4D8               	btfsc	status,2,c
 14246  0060D6  D001               	goto	u10871
 14247  0060D8  D001               	goto	u10870
 14248  0060DA                     u10871:
 14249  0060DA  D017               	goto	l12019
 14250  0060DC                     u10870:
 14251                           
 14252                           ; BSR set to: 0
 14253  0060DC  0E0A               	movlw	10
 14254  0060DE  0100               	movlb	0	; () banked
 14255  0060E0  1962               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 14256  0060E2  A4D8               	btfss	status,2,c
 14257  0060E4  D001               	goto	u10881
 14258  0060E6  D001               	goto	u10880
 14259  0060E8                     u10881:
 14260  0060E8  D002               	goto	l12015
 14261  0060EA                     u10880:
 14262  0060EA  D00F               	goto	l12019
 14263                           
 14264                           ; BSR set to: 0
 14265                           ;MOTEapp.c: 1088: {
 14266                           ;MOTEapp.c: 1090: }
 14267  0060EC  D00E               	goto	l12019
 14268  0060EE                     l12015:
 14269                           
 14270                           ; BSR set to: 0
 14271                           ;MOTEapp.c: 1091: else
 14272                           ;MOTEapp.c: 1092: {
 14273                           ;MOTEapp.c: 1093: moduleResonseBuffer[moduleBufferIndex] = bufferByte;
 14274  0060EE  5056               	movf	_moduleBufferIndex,w,c
 14275  0060F0  0D01               	mullw	1
 14276  0060F2  0E5D               	movlw	low _moduleResonseBuffer
 14277  0060F4  24F3               	addwf	prodl,w,c
 14278  0060F6  6ED9               	movwf	fsr2l,c
 14279  0060F8  0E01               	movlw	high _moduleResonseBuffer
 14280  0060FA  20F4               	addwfc	prodh,w,c
 14281  0060FC  6EDA               	movwf	fsr2h,c
 14282  0060FE  C062  FFDF         	movff	MOTEapp_getModuleResponse@bufferByte,indf2
 14283                           
 14284                           ; BSR set to: 0
 14285                           ;MOTEapp.c: 1095: moduleBufferIndex++;
 14286  006102  2A56               	incf	_moduleBufferIndex,f,c
 14287  006104  D002               	goto	l12019
 14288                           
 14289                           ; BSR set to: 0
 14290  006106  D001               	goto	l12019
 14291                           
 14292                           ; BSR set to: 0
 14293  006108  D000               	goto	l12019
 14294  00610A                     l12019:
 14295                           
 14296                           ; BSR set to: 0
 14297                           ;MOTEapp.c: 1096: }
 14298                           ;MOTEapp.c: 1097: }
 14299                           ;MOTEapp.c: 1098: return terminatorReceived;
 14300  00610A  0100               	movlb	0	; () banked
 14301  00610C  5161               	movf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),w,b
 14302  00610E  D000               	goto	l625
 14303  006110                     l625:
 14304                           
 14305                           ; BSR set to: 0
 14306  006110  0012               	return		;funcret
 14307  006112                     __end_of_MOTEapp_getModuleResponse:
 14308                           	opt stack 0
 14309                           tblptru	equ	0xFF8
 14310                           tblptrh	equ	0xFF7
 14311                           tblptrl	equ	0xFF6
 14312                           tablat	equ	0xFF5
 14313                           prodh	equ	0xFF4
 14314                           prodl	equ	0xFF3
 14315                           intcon	equ	0xFF2
 14316                           intcon3	equ	0xFF0
 14317                           postinc0	equ	0xFEE
 14318                           wreg	equ	0xFE8
 14319                           indf1	equ	0xFE7
 14320                           postdec1	equ	0xFE5
 14321                           fsr1h	equ	0xFE2
 14322                           fsr1l	equ	0xFE1
 14323                           indf2	equ	0xFDF
 14324                           fsr2h	equ	0xFDA
 14325                           fsr2l	equ	0xFD9
 14326                           status	equ	0xFD8
 14327                           
 14328 ;; *************** function _EUSART_FlushBuffer *****************
 14329 ;; Defined at:
 14330 ;;		line 202 in file "../Includes/MccGenerated/eusart.c"
 14331 ;; Parameters:    Size  Location     Type
 14332 ;;		None
 14333 ;; Auto vars:     Size  Location     Type
 14334 ;;  index           1    0[BANK0 ] unsigned char 
 14335 ;; Return value:  Size  Location     Type
 14336 ;;                  1    wreg      void 
 14337 ;; Registers used:
 14338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14339 ;; Tracked objects:
 14340 ;;		On entry : 0/0
 14341 ;;		On exit  : 0/0
 14342 ;;		Unchanged: 0/0
 14343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14344 ;;      Params:         0       0       0       0       0       0       0       0       0
 14345 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14346 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14347 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14348 ;;Total ram usage:        1 bytes
 14349 ;; Hardware stack levels used:    1
 14350 ;; Hardware stack levels required when called:   11
 14351 ;; This function calls:
 14352 ;;		Nothing
 14353 ;; This function is called by:
 14354 ;;		_test_powerup
 14355 ;;		_moteApp_GoToSleep
 14356 ;; This function uses a non-reentrant model
 14357 ;;
 14358                           
 14359                           	psect	text42
 14360  006870                     __ptext42:
 14361                           	opt stack 0
 14362  006870                     _EUSART_FlushBuffer:
 14363                           	opt stack 18
 14364                           
 14365                           ;eusart.c: 204: uint8_t index;
 14366                           ;eusart.c: 205: for (index=0; index < 64; index++)
 14367                           
 14368                           ; BSR set to: 0
 14369                           ;incstack = 0
 14370  006870  0E00               	movlw	0
 14371  006872  0100               	movlb	0	; () banked
 14372  006874  6F60               	movwf	EUSART_FlushBuffer@index& (0+255),b
 14373                           
 14374                           ; BSR set to: 0
 14375  006876  0E3F               	movlw	63
 14376  006878  0100               	movlb	0	; () banked
 14377  00687A  6560               	cpfsgt	EUSART_FlushBuffer@index& (0+255),b
 14378  00687C  D001               	goto	u11011
 14379  00687E  D001               	goto	u11010
 14380  006880                     u11011:
 14381  006880  D002               	goto	l12133
 14382  006882                     u11010:
 14383  006882  D015               	goto	l12139
 14384                           
 14385                           ; BSR set to: 0
 14386  006884  D014               	goto	l12139
 14387  006886                     l12133:
 14388                           
 14389                           ; BSR set to: 0
 14390                           ;eusart.c: 206: {
 14391                           ;eusart.c: 207: eusartRxBuffer[index] = 0;
 14392  006886  0100               	movlb	0	; () banked
 14393  006888  5160               	movf	EUSART_FlushBuffer@index& (0+255),w,b
 14394  00688A  0D01               	mullw	1
 14395  00688C  0E00               	movlw	low _eusartRxBuffer
 14396  00688E  24F3               	addwf	prodl,w,c
 14397  006890  6ED9               	movwf	fsr2l,c
 14398  006892  0E02               	movlw	high _eusartRxBuffer
 14399  006894  20F4               	addwfc	prodh,w,c
 14400  006896  6EDA               	movwf	fsr2h,c
 14401  006898  0E00               	movlw	0
 14402  00689A  6EDF               	movwf	indf2,c
 14403                           
 14404                           ; BSR set to: 0
 14405  00689C  0100               	movlb	0	; () banked
 14406  00689E  2B60               	incf	EUSART_FlushBuffer@index& (0+255),f,b
 14407                           
 14408                           ; BSR set to: 0
 14409  0068A0  0E3F               	movlw	63
 14410  0068A2  0100               	movlb	0	; () banked
 14411  0068A4  6560               	cpfsgt	EUSART_FlushBuffer@index& (0+255),b
 14412  0068A6  D001               	goto	u11021
 14413  0068A8  D001               	goto	u11020
 14414  0068AA                     u11021:
 14415  0068AA  D7ED               	goto	l12133
 14416  0068AC                     u11020:
 14417  0068AC  D000               	goto	l12139
 14418  0068AE                     l12139:
 14419                           
 14420                           ; BSR set to: 0
 14421                           ;eusart.c: 208: }
 14422                           ;eusart.c: 209: eusartRxHead = 0;
 14423  0068AE  0E00               	movlw	0
 14424  0068B0  0100               	movlb	0	; () banked
 14425  0068B2  6FD9               	movwf	_eusartRxHead& (0+255),b
 14426                           
 14427                           ;eusart.c: 210: eusartRxTail = 0;
 14428  0068B4  0E00               	movlw	0
 14429  0068B6  0100               	movlb	0	; () banked
 14430  0068B8  6FD8               	movwf	_eusartRxTail& (0+255),b
 14431                           
 14432                           ;eusart.c: 211: eusartRxCount = 0;
 14433  0068BA  0E00               	movlw	0
 14434  0068BC  6E57               	movwf	_eusartRxCount,c	;volatile
 14435                           
 14436                           ; BSR set to: 0
 14437                           ;eusart.c: 213: PIE1bits.TXIE = 0;
 14438  0068BE  989D               	bcf	3997,4,c	;volatile
 14439                           
 14440                           ;eusart.c: 214: eusartTxHead = 0;
 14441  0068C0  0E00               	movlw	0
 14442  0068C2  0100               	movlb	0	; () banked
 14443  0068C4  6FDB               	movwf	_eusartTxHead& (0+255),b
 14444                           
 14445                           ;eusart.c: 215: eusartTxTail = 0;
 14446  0068C6  0E00               	movlw	0
 14447  0068C8  0100               	movlb	0	; () banked
 14448  0068CA  6FDA               	movwf	_eusartTxTail& (0+255),b
 14449                           
 14450                           ;eusart.c: 216: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 14451  0068CC  0E40               	movlw	64
 14452  0068CE  6E4F               	movwf	_eusartTxBufferRemaining,c	;volatile
 14453                           
 14454                           ; BSR set to: 0
 14455  0068D0  0012               	return		;funcret
 14456  0068D2                     __end_of_EUSART_FlushBuffer:
 14457                           	opt stack 0
 14458                           tblptru	equ	0xFF8
 14459                           tblptrh	equ	0xFF7
 14460                           tblptrl	equ	0xFF6
 14461                           tablat	equ	0xFF5
 14462                           prodh	equ	0xFF4
 14463                           prodl	equ	0xFF3
 14464                           intcon	equ	0xFF2
 14465                           intcon3	equ	0xFF0
 14466                           postinc0	equ	0xFEE
 14467                           wreg	equ	0xFE8
 14468                           indf1	equ	0xFE7
 14469                           postdec1	equ	0xFE5
 14470                           fsr1h	equ	0xFE2
 14471                           fsr1l	equ	0xFE1
 14472                           indf2	equ	0xFDF
 14473                           fsr2h	equ	0xFDA
 14474                           fsr2l	equ	0xFD9
 14475                           status	equ	0xFD8
 14476                           
 14477 ;; *************** function _TMR2_ReadTimer *****************
 14478 ;; Defined at:
 14479 ;;		line 87 in file "../Includes/MccGenerated/tmr2.c"
 14480 ;; Parameters:    Size  Location     Type
 14481 ;;		None
 14482 ;; Auto vars:     Size  Location     Type
 14483 ;;  readVal         1    0[BANK0 ] unsigned char 
 14484 ;; Return value:  Size  Location     Type
 14485 ;;                  1    wreg      unsigned char 
 14486 ;; Registers used:
 14487 ;;		wreg, status,2
 14488 ;; Tracked objects:
 14489 ;;		On entry : 0/0
 14490 ;;		On exit  : 0/0
 14491 ;;		Unchanged: 0/0
 14492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14493 ;;      Params:         0       0       0       0       0       0       0       0       0
 14494 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14495 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14496 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14497 ;;Total ram usage:        1 bytes
 14498 ;; Hardware stack levels used:    1
 14499 ;; Hardware stack levels required when called:   11
 14500 ;; This function calls:
 14501 ;;		Nothing
 14502 ;; This function is called by:
 14503 ;;		_moteRunningProcess
 14504 ;; This function uses a non-reentrant model
 14505 ;;
 14506                           
 14507                           	psect	text43
 14508  007284                     __ptext43:
 14509                           	opt stack 0
 14510  007284                     _TMR2_ReadTimer:
 14511                           	opt stack 17
 14512                           
 14513                           ;tmr2.c: 88: uint8_t readVal;
 14514                           ;tmr2.c: 90: readVal = TMR2;
 14515                           
 14516                           ; BSR set to: 0
 14517                           ;incstack = 0
 14518  007284  CFBC F060          	movff	4028,TMR2_ReadTimer@readVal	;volatile
 14519                           
 14520                           ;tmr2.c: 92: return readVal;
 14521  007288  0100               	movlb	0	; () banked
 14522  00728A  5160               	movf	TMR2_ReadTimer@readVal& (0+255),w,b
 14523  00728C  D000               	goto	l1525
 14524  00728E                     l1525:
 14525                           
 14526                           ; BSR set to: 0
 14527  00728E  0012               	return		;funcret
 14528  007290                     __end_of_TMR2_ReadTimer:
 14529                           	opt stack 0
 14530                           tblptru	equ	0xFF8
 14531                           tblptrh	equ	0xFF7
 14532                           tblptrl	equ	0xFF6
 14533                           tablat	equ	0xFF5
 14534                           prodh	equ	0xFF4
 14535                           prodl	equ	0xFF3
 14536                           intcon	equ	0xFF2
 14537                           intcon3	equ	0xFF0
 14538                           postinc0	equ	0xFEE
 14539                           wreg	equ	0xFE8
 14540                           indf1	equ	0xFE7
 14541                           postdec1	equ	0xFE5
 14542                           fsr1h	equ	0xFE2
 14543                           fsr1l	equ	0xFE1
 14544                           indf2	equ	0xFDF
 14545                           fsr2h	equ	0xFDA
 14546                           fsr2l	equ	0xFD9
 14547                           status	equ	0xFD8
 14548                           
 14549 ;; *************** function _MOTEapp_SetDataRateSetting *****************
 14550 ;; Defined at:
 14551 ;;		line 979 in file "../Includes/Board/MOTEapp.c"
 14552 ;; Parameters:    Size  Location     Type
 14553 ;;  dr              1    wreg     unsigned char 
 14554 ;; Auto vars:     Size  Location     Type
 14555 ;;  dr              1    4[BANK0 ] unsigned char 
 14556 ;; Return value:  Size  Location     Type
 14557 ;;                  1    wreg      void 
 14558 ;; Registers used:
 14559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14560 ;; Tracked objects:
 14561 ;;		On entry : 0/0
 14562 ;;		On exit  : 0/0
 14563 ;;		Unchanged: 0/0
 14564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14565 ;;      Params:         0       0       0       0       0       0       0       0       0
 14566 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14567 ;;      Temps:          0       1       0       0       0       0       0       0       0
 14568 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14569 ;;Total ram usage:        2 bytes
 14570 ;; Hardware stack levels used:    1
 14571 ;; Hardware stack levels required when called:   14
 14572 ;; This function calls:
 14573 ;;		_sendCommand
 14574 ;; This function is called by:
 14575 ;;		_moteRunningProcess
 14576 ;; This function uses a non-reentrant model
 14577 ;;
 14578                           
 14579                           	psect	text44
 14580  00359A                     __ptext44:
 14581                           	opt stack 0
 14582  00359A                     _MOTEapp_SetDataRateSetting:
 14583                           	opt stack 14
 14584                           
 14585                           ; BSR set to: 0
 14586                           ;incstack = 0
 14587                           ;MOTEapp_SetDataRateSetting@dr stored from wreg
 14588  00359A  0100               	movlb	0	; () banked
 14589  00359C  6F64               	movwf	MOTEapp_SetDataRateSetting@dr& (0+255),b
 14590                           
 14591                           ;MOTEapp.c: 981: if (dr != 8)
 14592  00359E  0E08               	movlw	8
 14593  0035A0  0100               	movlb	0	; () banked
 14594  0035A2  1964               	xorwf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 14595  0035A4  B4D8               	btfsc	status,2,c
 14596  0035A6  D001               	goto	u12581
 14597  0035A8  D001               	goto	u12580
 14598  0035AA                     u12581:
 14599  0035AA  D077               	goto	l13217
 14600  0035AC                     u12580:
 14601                           
 14602                           ; BSR set to: 0
 14603                           ;MOTEapp.c: 982: {
 14604                           ;MOTEapp.c: 983: sendCommand("mac set adr off");
 14605  0035AC  0EA3               	movlw	low STR_163
 14606  0035AE  0100               	movlb	0	; () banked
 14607  0035B0  6F61               	movwf	sendCommand@string& (0+255),b
 14608  0035B2  0E7C               	movlw	high STR_163
 14609  0035B4  0100               	movlb	0	; () banked
 14610  0035B6  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14611  0035B8  EC65  F037         	call	_sendCommand	;wreg free
 14612                           
 14613                           ;MOTEapp.c: 984: _delay((unsigned long)((16)*(48000000/4000.0)));
 14614  0035BC  0EFA               	movlw	250
 14615  0035BE  0100               	movlb	0	; () banked
 14616  0035C0  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14617  0035C2  0E58               	movlw	88
 14618  0035C4                     u14507:
 14619  0035C4  2EE8               	decfsz	wreg,f,c
 14620  0035C6  D7FE               	bra	u14507
 14621  0035C8  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14622  0035CA  D7FC               	bra	u14507
 14623  0035CC  F000               	nop	
 14624                           
 14625                           ;MOTEapp.c: 985: _delay((unsigned long)((16)*(48000000/4000.0)));
 14626  0035CE  0EFA               	movlw	250
 14627  0035D0  0100               	movlb	0	; () banked
 14628  0035D2  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14629  0035D4  0E58               	movlw	88
 14630  0035D6                     u14517:
 14631  0035D6  2EE8               	decfsz	wreg,f,c
 14632  0035D8  D7FE               	bra	u14517
 14633  0035DA  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14634  0035DC  D7FC               	bra	u14517
 14635  0035DE  F000               	nop	
 14636                           
 14637                           ;MOTEapp.c: 986: _delay((unsigned long)((16)*(48000000/4000.0)));
 14638  0035E0  0EFA               	movlw	250
 14639  0035E2  0100               	movlb	0	; () banked
 14640  0035E4  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14641  0035E6  0E58               	movlw	88
 14642  0035E8                     u14527:
 14643  0035E8  2EE8               	decfsz	wreg,f,c
 14644  0035EA  D7FE               	bra	u14527
 14645  0035EC  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14646  0035EE  D7FC               	bra	u14527
 14647  0035F0  F000               	nop	
 14648  0035F2  D053               	goto	l13217
 14649                           
 14650                           ;MOTEapp.c: 987: }
 14651                           ;MOTEapp.c: 989: switch (dr)
 14652  0035F4  D052               	goto	l13217
 14653  0035F6                     l13197:
 14654                           
 14655                           ;MOTEapp.c: 992: sendCommand("mac set dr 0");
 14656  0035F6  0E7F               	movlw	low STR_164
 14657  0035F8  0100               	movlb	0	; () banked
 14658  0035FA  6F61               	movwf	sendCommand@string& (0+255),b
 14659  0035FC  0E7D               	movlw	high STR_164
 14660  0035FE  0100               	movlb	0	; () banked
 14661  003600  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14662  003602  EC65  F037         	call	_sendCommand	;wreg free
 14663                           
 14664                           ;MOTEapp.c: 993: break;
 14665  003606  D067               	goto	l13219
 14666  003608                     l13199:
 14667                           
 14668                           ;MOTEapp.c: 995: sendCommand("mac set dr 1");
 14669  003608  0E8C               	movlw	low STR_165
 14670  00360A  0100               	movlb	0	; () banked
 14671  00360C  6F61               	movwf	sendCommand@string& (0+255),b
 14672  00360E  0E7D               	movlw	high STR_165
 14673  003610  0100               	movlb	0	; () banked
 14674  003612  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14675  003614  EC65  F037         	call	_sendCommand	;wreg free
 14676                           
 14677                           ;MOTEapp.c: 996: break;
 14678  003618  D05E               	goto	l13219
 14679  00361A                     l13201:
 14680                           
 14681                           ;MOTEapp.c: 998: sendCommand("mac set dr 2");
 14682  00361A  0E99               	movlw	low STR_166
 14683  00361C  0100               	movlb	0	; () banked
 14684  00361E  6F61               	movwf	sendCommand@string& (0+255),b
 14685  003620  0E7D               	movlw	high STR_166
 14686  003622  0100               	movlb	0	; () banked
 14687  003624  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14688  003626  EC65  F037         	call	_sendCommand	;wreg free
 14689                           
 14690                           ;MOTEapp.c: 999: break;
 14691  00362A  D055               	goto	l13219
 14692  00362C                     l13203:
 14693                           
 14694                           ;MOTEapp.c: 1001: sendCommand("mac set dr 3");
 14695  00362C  0EA6               	movlw	low STR_167
 14696  00362E  0100               	movlb	0	; () banked
 14697  003630  6F61               	movwf	sendCommand@string& (0+255),b
 14698  003632  0E7D               	movlw	high STR_167
 14699  003634  0100               	movlb	0	; () banked
 14700  003636  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14701  003638  EC65  F037         	call	_sendCommand	;wreg free
 14702                           
 14703                           ;MOTEapp.c: 1002: break;
 14704  00363C  D04C               	goto	l13219
 14705  00363E                     l13205:
 14706                           
 14707                           ;MOTEapp.c: 1004: sendCommand("mac set dr 4");
 14708  00363E  0EB3               	movlw	low STR_168
 14709  003640  0100               	movlb	0	; () banked
 14710  003642  6F61               	movwf	sendCommand@string& (0+255),b
 14711  003644  0E7D               	movlw	high STR_168
 14712  003646  0100               	movlb	0	; () banked
 14713  003648  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14714  00364A  EC65  F037         	call	_sendCommand	;wreg free
 14715                           
 14716                           ;MOTEapp.c: 1005: break;
 14717  00364E  D043               	goto	l13219
 14718  003650                     l13207:
 14719                           
 14720                           ;MOTEapp.c: 1007: sendCommand("mac set dr 5");
 14721  003650  0EC0               	movlw	low STR_169
 14722  003652  0100               	movlb	0	; () banked
 14723  003654  6F61               	movwf	sendCommand@string& (0+255),b
 14724  003656  0E7D               	movlw	high STR_169
 14725  003658  0100               	movlb	0	; () banked
 14726  00365A  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14727  00365C  EC65  F037         	call	_sendCommand	;wreg free
 14728                           
 14729                           ;MOTEapp.c: 1008: break;
 14730  003660  D03A               	goto	l13219
 14731  003662                     l13209:
 14732                           
 14733                           ;MOTEapp.c: 1010: sendCommand("mac set dr 6");
 14734  003662  0ECD               	movlw	low STR_170
 14735  003664  0100               	movlb	0	; () banked
 14736  003666  6F61               	movwf	sendCommand@string& (0+255),b
 14737  003668  0E7D               	movlw	high STR_170
 14738  00366A  0100               	movlb	0	; () banked
 14739  00366C  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14740  00366E  EC65  F037         	call	_sendCommand	;wreg free
 14741                           
 14742                           ;MOTEapp.c: 1011: break;
 14743  003672  D031               	goto	l13219
 14744  003674                     l13211:
 14745                           
 14746                           ;MOTEapp.c: 1013: sendCommand("mac set dr 7");
 14747  003674  0EDA               	movlw	low STR_171
 14748  003676  0100               	movlb	0	; () banked
 14749  003678  6F61               	movwf	sendCommand@string& (0+255),b
 14750  00367A  0E7D               	movlw	high STR_171
 14751  00367C  0100               	movlb	0	; () banked
 14752  00367E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14753  003680  EC65  F037         	call	_sendCommand	;wreg free
 14754                           
 14755                           ;MOTEapp.c: 1014: break;
 14756  003684  D028               	goto	l13219
 14757  003686                     l13213:
 14758                           
 14759                           ;MOTEapp.c: 1016: sendCommand("mac set adr on");
 14760  003686  0EF1               	movlw	low STR_172
 14761  003688  0100               	movlb	0	; () banked
 14762  00368A  6F61               	movwf	sendCommand@string& (0+255),b
 14763  00368C  0E7C               	movlw	high STR_172
 14764  00368E  0100               	movlb	0	; () banked
 14765  003690  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14766  003692  EC65  F037         	call	_sendCommand	;wreg free
 14767                           
 14768                           ;MOTEapp.c: 1017: break;
 14769  003696  D01F               	goto	l13219
 14770                           
 14771                           ;MOTEapp.c: 1018: }
 14772  003698  D01E               	goto	l13219
 14773  00369A                     l13217:
 14774  00369A  0100               	movlb	0	; () banked
 14775  00369C  5164               	movf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 14776                           
 14777                           ; Switch size 1, requested type "space"
 14778                           ; Number of cases is 9, Range of values is 0 to 8
 14779                           ; switch strategies available:
 14780                           ; Name         Instructions Cycles
 14781                           ; simple_byte           28    15 (average)
 14782                           ;	Chosen strategy is simple_byte
 14783  00369E  0A00               	xorlw	0	; case 0
 14784  0036A0  B4D8               	btfsc	status,2,c
 14785  0036A2  D7A9               	goto	l13197
 14786  0036A4  0A01               	xorlw	1	; case 1
 14787  0036A6  B4D8               	btfsc	status,2,c
 14788  0036A8  D7AF               	goto	l13199
 14789  0036AA  0A03               	xorlw	3	; case 2
 14790  0036AC  B4D8               	btfsc	status,2,c
 14791  0036AE  D7B5               	goto	l13201
 14792  0036B0  0A01               	xorlw	1	; case 3
 14793  0036B2  B4D8               	btfsc	status,2,c
 14794  0036B4  D7BB               	goto	l13203
 14795  0036B6  0A07               	xorlw	7	; case 4
 14796  0036B8  B4D8               	btfsc	status,2,c
 14797  0036BA  D7C1               	goto	l13205
 14798  0036BC  0A01               	xorlw	1	; case 5
 14799  0036BE  B4D8               	btfsc	status,2,c
 14800  0036C0  D7C7               	goto	l13207
 14801  0036C2  0A03               	xorlw	3	; case 6
 14802  0036C4  B4D8               	btfsc	status,2,c
 14803  0036C6  D7CD               	goto	l13209
 14804  0036C8  0A01               	xorlw	1	; case 7
 14805  0036CA  B4D8               	btfsc	status,2,c
 14806  0036CC  D7D3               	goto	l13211
 14807  0036CE  0A0F               	xorlw	15	; case 8
 14808  0036D0  B4D8               	btfsc	status,2,c
 14809  0036D2  D7D9               	goto	l13213
 14810  0036D4  D000               	goto	l13219
 14811  0036D6                     l13219:
 14812                           
 14813                           ;MOTEapp.c: 1019: _delay((unsigned long)((16)*(48000000/4000.0)));
 14814  0036D6  0EFA               	movlw	250
 14815  0036D8  0100               	movlb	0	; () banked
 14816  0036DA  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14817  0036DC  0E58               	movlw	88
 14818  0036DE                     u14537:
 14819  0036DE  2EE8               	decfsz	wreg,f,c
 14820  0036E0  D7FE               	bra	u14537
 14821  0036E2  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14822  0036E4  D7FC               	bra	u14537
 14823  0036E6  F000               	nop	
 14824                           
 14825                           ;MOTEapp.c: 1020: _delay((unsigned long)((16)*(48000000/4000.0)));
 14826  0036E8  0EFA               	movlw	250
 14827  0036EA  0100               	movlb	0	; () banked
 14828  0036EC  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14829  0036EE  0E58               	movlw	88
 14830  0036F0                     u14547:
 14831  0036F0  2EE8               	decfsz	wreg,f,c
 14832  0036F2  D7FE               	bra	u14547
 14833  0036F4  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14834  0036F6  D7FC               	bra	u14547
 14835  0036F8  F000               	nop	
 14836                           
 14837                           ;MOTEapp.c: 1021: _delay((unsigned long)((16)*(48000000/4000.0)));
 14838  0036FA  0EFA               	movlw	250
 14839  0036FC  0100               	movlb	0	; () banked
 14840  0036FE  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14841  003700  0E58               	movlw	88
 14842  003702                     u14557:
 14843  003702  2EE8               	decfsz	wreg,f,c
 14844  003704  D7FE               	bra	u14557
 14845  003706  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14846  003708  D7FC               	bra	u14557
 14847  00370A  F000               	nop	
 14848                           
 14849                           ;MOTEapp.c: 1022: sendCommand("mac save");
 14850  00370C  0E2B               	movlw	low STR_173
 14851  00370E  0100               	movlb	0	; () banked
 14852  003710  6F61               	movwf	sendCommand@string& (0+255),b
 14853  003712  0E7F               	movlw	high STR_173
 14854  003714  0100               	movlb	0	; () banked
 14855  003716  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14856  003718  EC65  F037         	call	_sendCommand	;wreg free
 14857  00371C  0012               	return		;funcret
 14858  00371E                     __end_of_MOTEapp_SetDataRateSetting:
 14859                           	opt stack 0
 14860                           tblptru	equ	0xFF8
 14861                           tblptrh	equ	0xFF7
 14862                           tblptrl	equ	0xFF6
 14863                           tablat	equ	0xFF5
 14864                           prodh	equ	0xFF4
 14865                           prodl	equ	0xFF3
 14866                           intcon	equ	0xFF2
 14867                           intcon3	equ	0xFF0
 14868                           postinc0	equ	0xFEE
 14869                           wreg	equ	0xFE8
 14870                           indf1	equ	0xFE7
 14871                           postdec1	equ	0xFE5
 14872                           fsr1h	equ	0xFE2
 14873                           fsr1l	equ	0xFE1
 14874                           indf2	equ	0xFDF
 14875                           fsr2h	equ	0xFDA
 14876                           fsr2l	equ	0xFD9
 14877                           status	equ	0xFD8
 14878                           
 14879 ;; *************** function _ADC_TempConversion *****************
 14880 ;; Defined at:
 14881 ;;		line 136 in file "../Includes/MccGenerated/adc.c"
 14882 ;; Parameters:    Size  Location     Type
 14883 ;;  tempRaw         1    wreg     enum E5745
 14884 ;; Auto vars:     Size  Location     Type
 14885 ;;  tempRaw         1   70[BANK0 ] enum E5745
 14886 ;;  val             4   72[BANK0 ] enum E5745
 14887 ;;  temp            1   71[BANK0 ] unsigned char 
 14888 ;; Return value:  Size  Location     Type
 14889 ;;                  1    wreg      unsigned char 
 14890 ;; Registers used:
 14891 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14892 ;; Tracked objects:
 14893 ;;		On entry : 0/0
 14894 ;;		On exit  : 0/0
 14895 ;;		Unchanged: 0/0
 14896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14897 ;;      Params:         0       0       0       0       0       0       0       0       0
 14898 ;;      Locals:         0       6       0       0       0       0       0       0       0
 14899 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14900 ;;      Totals:         0       6       0       0       0       0       0       0       0
 14901 ;;Total ram usage:        6 bytes
 14902 ;; Hardware stack levels used:    1
 14903 ;; Hardware stack levels required when called:   12
 14904 ;; This function calls:
 14905 ;;		___fladd
 14906 ;;		___fldiv
 14907 ;;		___flmul
 14908 ;;		___fltol
 14909 ;;		___xxtofl
 14910 ;; This function is called by:
 14911 ;;		_moteHandler
 14912 ;;		_moteRunningProcess
 14913 ;;		_moteApp_testSensors
 14914 ;;		_test_adc
 14915 ;; This function uses a non-reentrant model
 14916 ;;
 14917                           
 14918                           	psect	text45
 14919  004DD0                     __ptext45:
 14920                           	opt stack 0
 14921  004DD0                     _ADC_TempConversion:
 14922                           	opt stack 16
 14923                           
 14924                           ;incstack = 0
 14925                           ;ADC_TempConversion@tempRaw stored from wreg
 14926  004DD0  0100               	movlb	0	; () banked
 14927  004DD2  6FA6               	movwf	ADC_TempConversion@tempRaw& (0+255),b
 14928                           
 14929                           ;adc.c: 138: uint8_t temp;
 14930                           ;adc.c: 140: double val = ((tempRaw * 3.2)/1024);
 14931  004DD4  0ECD               	movlw	205
 14932  004DD6  0100               	movlb	0	; () banked
 14933  004DD8  6F78               	movwf	___flmul@a& (0+255),b
 14934  004DDA  0ECC               	movlw	204
 14935  004DDC  6F79               	movwf	(___flmul@a+1)& (0+255),b
 14936  004DDE  0E4C               	movlw	76
 14937  004DE0  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 14938  004DE2  0E40               	movlw	64
 14939  004DE4  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 14940  004DE6  0100               	movlb	0	; () banked
 14941  004DE8  51A6               	movf	ADC_TempConversion@tempRaw& (0+255),w,b
 14942  004DEA  0100               	movlb	0	; () banked
 14943  004DEC  6F60               	movwf	___xxtofl@val& (0+255),b
 14944  004DEE  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
 14945  004DF0  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 14946  004DF2  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 14947  004DF4  0E00               	movlw	0
 14948  004DF6  ECFC  F017         	call	___xxtofl
 14949  004DFA  C060  F074         	movff	?___xxtofl,___flmul@b
 14950  004DFE  C061  F075         	movff	?___xxtofl+1,___flmul@b+1
 14951  004E02  C062  F076         	movff	?___xxtofl+2,___flmul@b+2
 14952  004E06  C063  F077         	movff	?___xxtofl+3,___flmul@b+3
 14953  004E0A  EC7C  F010         	call	___flmul	;wreg free
 14954  004E0E  C074  F08D         	movff	?___flmul,___fldiv@b
 14955  004E12  C075  F08E         	movff	?___flmul+1,___fldiv@b+1
 14956  004E16  C076  F08F         	movff	?___flmul+2,___fldiv@b+2
 14957  004E1A  C077  F090         	movff	?___flmul+3,___fldiv@b+3
 14958  004E1E  0E00               	movlw	0
 14959  004E20  0100               	movlb	0	; () banked
 14960  004E22  6F91               	movwf	___fldiv@a& (0+255),b
 14961  004E24  0E00               	movlw	0
 14962  004E26  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 14963  004E28  0E80               	movlw	128
 14964  004E2A  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 14965  004E2C  0E44               	movlw	68
 14966  004E2E  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 14967  004E30  EC09  F013         	call	___fldiv	;wreg free
 14968  004E34  C08D  F0A8         	movff	?___fldiv,ADC_TempConversion@val
 14969  004E38  C08E  F0A9         	movff	?___fldiv+1,ADC_TempConversion@val+1
 14970  004E3C  C08F  F0AA         	movff	?___fldiv+2,ADC_TempConversion@val+2
 14971  004E40  C090  F0AB         	movff	?___fldiv+3,ADC_TempConversion@val+3
 14972                           
 14973                           ;adc.c: 141: val = ((val - 0.5)*100);
 14974  004E44  0E00               	movlw	0
 14975  004E46  0100               	movlb	0	; () banked
 14976  004E48  6F64               	movwf	___fladd@a& (0+255),b
 14977  004E4A  0E00               	movlw	0
 14978  004E4C  6F65               	movwf	(___fladd@a+1)& (0+255),b
 14979  004E4E  0E00               	movlw	0
 14980  004E50  6F66               	movwf	(___fladd@a+2)& (0+255),b
 14981  004E52  0EBF               	movlw	191
 14982  004E54  6F67               	movwf	(___fladd@a+3)& (0+255),b
 14983  004E56  C0A8  F060         	movff	ADC_TempConversion@val,___fladd@b
 14984  004E5A  C0A9  F061         	movff	ADC_TempConversion@val+1,___fladd@b+1
 14985  004E5E  C0AA  F062         	movff	ADC_TempConversion@val+2,___fladd@b+2
 14986  004E62  C0AB  F063         	movff	ADC_TempConversion@val+3,___fladd@b+3
 14987  004E66  ECB1  F00D         	call	___fladd	;wreg free
 14988  004E6A  C060  F074         	movff	?___fladd,___flmul@b
 14989  004E6E  C061  F075         	movff	?___fladd+1,___flmul@b+1
 14990  004E72  C062  F076         	movff	?___fladd+2,___flmul@b+2
 14991  004E76  C063  F077         	movff	?___fladd+3,___flmul@b+3
 14992  004E7A  0E00               	movlw	0
 14993  004E7C  0100               	movlb	0	; () banked
 14994  004E7E  6F78               	movwf	___flmul@a& (0+255),b
 14995  004E80  0E00               	movlw	0
 14996  004E82  6F79               	movwf	(___flmul@a+1)& (0+255),b
 14997  004E84  0EC8               	movlw	200
 14998  004E86  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 14999  004E88  0E42               	movlw	66
 15000  004E8A  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 15001  004E8C  EC7C  F010         	call	___flmul	;wreg free
 15002  004E90  C074  F0A8         	movff	?___flmul,ADC_TempConversion@val
 15003  004E94  C075  F0A9         	movff	?___flmul+1,ADC_TempConversion@val+1
 15004  004E98  C076  F0AA         	movff	?___flmul+2,ADC_TempConversion@val+2
 15005  004E9C  C077  F0AB         	movff	?___flmul+3,ADC_TempConversion@val+3
 15006                           
 15007                           ;adc.c: 142: temp = (uint8_t) val;
 15008  004EA0  C0A8  F060         	movff	ADC_TempConversion@val,___fltol@f1
 15009  004EA4  C0A9  F061         	movff	ADC_TempConversion@val+1,___fltol@f1+1
 15010  004EA8  C0AA  F062         	movff	ADC_TempConversion@val+2,___fltol@f1+2
 15011  004EAC  C0AB  F063         	movff	ADC_TempConversion@val+3,___fltol@f1+3
 15012  004EB0  EC60  F01E         	call	___fltol	;wreg free
 15013  004EB4  0100               	movlb	0	; () banked
 15014  004EB6  5160               	movf	?___fltol& (0+255),w,b
 15015  004EB8  0100               	movlb	0	; () banked
 15016  004EBA  6FA7               	movwf	ADC_TempConversion@temp& (0+255),b
 15017                           
 15018                           ; BSR set to: 0
 15019                           ;adc.c: 144: return temp;
 15020  004EBC  0100               	movlb	0	; () banked
 15021  004EBE  51A7               	movf	ADC_TempConversion@temp& (0+255),w,b
 15022  004EC0  D000               	goto	l1276
 15023  004EC2                     l1276:
 15024                           
 15025                           ; BSR set to: 0
 15026  004EC2  0012               	return		;funcret
 15027  004EC4                     __end_of_ADC_TempConversion:
 15028                           	opt stack 0
 15029                           tblptru	equ	0xFF8
 15030                           tblptrh	equ	0xFF7
 15031                           tblptrl	equ	0xFF6
 15032                           tablat	equ	0xFF5
 15033                           prodh	equ	0xFF4
 15034                           prodl	equ	0xFF3
 15035                           intcon	equ	0xFF2
 15036                           intcon3	equ	0xFF0
 15037                           postinc0	equ	0xFEE
 15038                           wreg	equ	0xFE8
 15039                           indf1	equ	0xFE7
 15040                           postdec1	equ	0xFE5
 15041                           fsr1h	equ	0xFE2
 15042                           fsr1l	equ	0xFE1
 15043                           indf2	equ	0xFDF
 15044                           fsr2h	equ	0xFDA
 15045                           fsr2l	equ	0xFD9
 15046                           status	equ	0xFD8
 15047                           
 15048 ;; *************** function ___xxtofl *****************
 15049 ;; Defined at:
 15050 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\xxtofl.c"
 15051 ;; Parameters:    Size  Location     Type
 15052 ;;  sign            1    wreg     unsigned char 
 15053 ;;  val             4    0[BANK0 ] long 
 15054 ;; Auto vars:     Size  Location     Type
 15055 ;;  sign            1    8[BANK0 ] unsigned char 
 15056 ;;  arg             4   10[BANK0 ] unsigned long 
 15057 ;;  exp             1    9[BANK0 ] unsigned char 
 15058 ;; Return value:  Size  Location     Type
 15059 ;;                  4    0[BANK0 ] unsigned char 
 15060 ;; Registers used:
 15061 ;;		wreg, status,2, status,0
 15062 ;; Tracked objects:
 15063 ;;		On entry : 0/0
 15064 ;;		On exit  : 0/0
 15065 ;;		Unchanged: 0/0
 15066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15067 ;;      Params:         0       4       0       0       0       0       0       0       0
 15068 ;;      Locals:         0       6       0       0       0       0       0       0       0
 15069 ;;      Temps:          0       4       0       0       0       0       0       0       0
 15070 ;;      Totals:         0      14       0       0       0       0       0       0       0
 15071 ;;Total ram usage:       14 bytes
 15072 ;; Hardware stack levels used:    1
 15073 ;; Hardware stack levels required when called:   11
 15074 ;; This function calls:
 15075 ;;		Nothing
 15076 ;; This function is called by:
 15077 ;;		_ADC_TempConversion
 15078 ;; This function uses a non-reentrant model
 15079 ;;
 15080                           
 15081                           	psect	text46
 15082  002FF8                     __ptext46:
 15083                           	opt stack 0
 15084  002FF8                     ___xxtofl:
 15085                           	opt stack 16
 15086                           
 15087                           ; BSR set to: 0
 15088                           ;incstack = 0
 15089                           ;___xxtofl@sign stored from wreg
 15090  002FF8  0100               	movlb	0	; () banked
 15091  002FFA  6F68               	movwf	___xxtofl@sign& (0+255),b
 15092  002FFC  0100               	movlb	0	; () banked
 15093  002FFE  5168               	movf	___xxtofl@sign& (0+255),w,b
 15094  003000  0100               	movlb	0	; () banked
 15095  003002  B4D8               	btfsc	status,2,c
 15096  003004  D001               	goto	u12101
 15097  003006  D001               	goto	u12100
 15098  003008                     u12101:
 15099  003008  D020               	goto	l2753
 15100  00300A                     u12100:
 15101                           
 15102                           ; BSR set to: 0
 15103  00300A  0100               	movlb	0	; () banked
 15104  00300C  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 15105  00300E  D002               	goto	u12110
 15106  003010  D000               	goto	u12111
 15107  003012                     u12111:
 15108  003012  D01B               	goto	l2753
 15109  003014                     u12110:
 15110                           
 15111                           ; BSR set to: 0
 15112  003014  C060  F064         	movff	___xxtofl@val,??___xxtofl
 15113  003018  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 15114  00301C  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 15115  003020  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 15116  003024  0100               	movlb	0	; () banked
 15117  003026  1F64               	comf	??___xxtofl& (0+255),f,b
 15118  003028  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 15119  00302A  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 15120  00302C  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 15121  00302E  2B64               	incf	??___xxtofl& (0+255),f,b
 15122  003030  0E00               	movlw	0
 15123  003032  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 15124  003034  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 15125  003036  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 15126  003038  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 15127  00303C  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 15128  003040  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 15129  003044  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 15130  003048  D009               	goto	l12835
 15131  00304A                     l2753:
 15132                           
 15133                           ; BSR set to: 0
 15134  00304A  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 15135  00304E  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 15136  003052  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 15137  003056  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 15138  00305A  D000               	goto	l12835
 15139  00305C                     l12835:
 15140                           
 15141                           ; BSR set to: 0
 15142  00305C  0100               	movlb	0	; () banked
 15143  00305E  5160               	movf	___xxtofl@val& (0+255),w,b
 15144  003060  0100               	movlb	0	; () banked
 15145  003062  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 15146  003064  0100               	movlb	0	; () banked
 15147  003066  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 15148  003068  0100               	movlb	0	; () banked
 15149  00306A  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 15150  00306C  A4D8               	btfss	status,2,c
 15151  00306E  D001               	goto	u12121
 15152  003070  D001               	goto	u12120
 15153  003072                     u12121:
 15154  003072  D00B               	goto	l12841
 15155  003074                     u12120:
 15156                           
 15157                           ; BSR set to: 0
 15158  003074  0E00               	movlw	0
 15159  003076  0100               	movlb	0	; () banked
 15160  003078  6F60               	movwf	?___xxtofl& (0+255),b
 15161  00307A  0E00               	movlw	0
 15162  00307C  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 15163  00307E  0E00               	movlw	0
 15164  003080  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 15165  003082  0E00               	movlw	0
 15166  003084  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 15167  003086  D0BB               	goto	l2756
 15168                           
 15169                           ; BSR set to: 0
 15170  003088  D0BA               	goto	l2756
 15171  00308A                     l12841:
 15172                           
 15173                           ; BSR set to: 0
 15174  00308A  0E96               	movlw	150
 15175  00308C  0100               	movlb	0	; () banked
 15176  00308E  6F69               	movwf	___xxtofl@exp& (0+255),b
 15177  003090  D009               	goto	l12845
 15178  003092                     l12843:
 15179                           
 15180                           ; BSR set to: 0
 15181  003092  0100               	movlb	0	; () banked
 15182  003094  2B69               	incf	___xxtofl@exp& (0+255),f,b
 15183  003096  0100               	movlb	0	; () banked
 15184  003098  90D8               	bcf	status,0,c
 15185  00309A  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 15186  00309C  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 15187  00309E  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 15188  0030A0  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 15189  0030A2  D000               	goto	l12845
 15190  0030A4                     l12845:
 15191                           
 15192                           ; BSR set to: 0
 15193  0030A4  0E00               	movlw	0
 15194  0030A6  0100               	movlb	0	; () banked
 15195  0030A8  156A               	andwf	___xxtofl@arg& (0+255),w,b
 15196  0030AA  0100               	movlb	0	; () banked
 15197  0030AC  6F64               	movwf	??___xxtofl& (0+255),b
 15198  0030AE  0E00               	movlw	0
 15199  0030B0  0100               	movlb	0	; () banked
 15200  0030B2  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 15201  0030B4  0100               	movlb	0	; () banked
 15202  0030B6  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 15203  0030B8  0E00               	movlw	0
 15204  0030BA  0100               	movlb	0	; () banked
 15205  0030BC  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 15206  0030BE  0100               	movlb	0	; () banked
 15207  0030C0  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 15208  0030C2  0EFE               	movlw	254
 15209  0030C4  0100               	movlb	0	; () banked
 15210  0030C6  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 15211  0030C8  0100               	movlb	0	; () banked
 15212  0030CA  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 15213  0030CC  0100               	movlb	0	; () banked
 15214  0030CE  5164               	movf	??___xxtofl& (0+255),w,b
 15215  0030D0  0100               	movlb	0	; () banked
 15216  0030D2  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 15217  0030D4  0100               	movlb	0	; () banked
 15218  0030D6  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 15219  0030D8  0100               	movlb	0	; () banked
 15220  0030DA  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 15221  0030DC  A4D8               	btfss	status,2,c
 15222  0030DE  D001               	goto	u12131
 15223  0030E0  D001               	goto	u12130
 15224  0030E2                     u12131:
 15225  0030E2  D7D7               	goto	l12843
 15226  0030E4                     u12130:
 15227  0030E4  D010               	goto	l2760
 15228                           
 15229                           ; BSR set to: 0
 15230  0030E6  D00F               	goto	l2760
 15231  0030E8                     l12847:
 15232                           
 15233                           ; BSR set to: 0
 15234  0030E8  0100               	movlb	0	; () banked
 15235  0030EA  2B69               	incf	___xxtofl@exp& (0+255),f,b
 15236                           
 15237                           ; BSR set to: 0
 15238  0030EC  0E01               	movlw	1
 15239  0030EE  0100               	movlb	0	; () banked
 15240  0030F0  276A               	addwf	___xxtofl@arg& (0+255),f,b
 15241  0030F2  0E00               	movlw	0
 15242  0030F4  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 15243  0030F6  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 15244  0030F8  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 15245                           
 15246                           ; BSR set to: 0
 15247  0030FA  0100               	movlb	0	; () banked
 15248  0030FC  90D8               	bcf	status,0,c
 15249  0030FE  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 15250  003100  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 15251  003102  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 15252  003104  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 15253  003106                     l2760:
 15254                           
 15255                           ; BSR set to: 0
 15256  003106  0E00               	movlw	0
 15257  003108  0100               	movlb	0	; () banked
 15258  00310A  156A               	andwf	___xxtofl@arg& (0+255),w,b
 15259  00310C  0100               	movlb	0	; () banked
 15260  00310E  6F64               	movwf	??___xxtofl& (0+255),b
 15261  003110  0E00               	movlw	0
 15262  003112  0100               	movlb	0	; () banked
 15263  003114  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 15264  003116  0100               	movlb	0	; () banked
 15265  003118  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 15266  00311A  0E00               	movlw	0
 15267  00311C  0100               	movlb	0	; () banked
 15268  00311E  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 15269  003120  0100               	movlb	0	; () banked
 15270  003122  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 15271  003124  0EFF               	movlw	255
 15272  003126  0100               	movlb	0	; () banked
 15273  003128  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 15274  00312A  0100               	movlb	0	; () banked
 15275  00312C  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 15276  00312E  0100               	movlb	0	; () banked
 15277  003130  5164               	movf	??___xxtofl& (0+255),w,b
 15278  003132  0100               	movlb	0	; () banked
 15279  003134  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 15280  003136  0100               	movlb	0	; () banked
 15281  003138  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 15282  00313A  0100               	movlb	0	; () banked
 15283  00313C  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 15284  00313E  A4D8               	btfss	status,2,c
 15285  003140  D001               	goto	u12141
 15286  003142  D001               	goto	u12140
 15287  003144                     u12141:
 15288  003144  D7D1               	goto	l12847
 15289  003146                     u12140:
 15290  003146  D00A               	goto	l12855
 15291                           
 15292                           ; BSR set to: 0
 15293  003148  D009               	goto	l12855
 15294  00314A                     l12853:
 15295                           
 15296                           ; BSR set to: 0
 15297  00314A  0100               	movlb	0	; () banked
 15298  00314C  0769               	decf	___xxtofl@exp& (0+255),f,b
 15299  00314E  0100               	movlb	0	; () banked
 15300  003150  90D8               	bcf	status,0,c
 15301  003152  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 15302  003154  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 15303  003156  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 15304  003158  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 15305  00315A  D000               	goto	l12855
 15306  00315C                     l12855:
 15307                           
 15308                           ; BSR set to: 0
 15309  00315C  0100               	movlb	0	; () banked
 15310  00315E  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 15311  003160  D001               	goto	u12151
 15312  003162  D001               	goto	u12150
 15313  003164                     u12151:
 15314  003164  D007               	goto	l2767
 15315  003166                     u12150:
 15316                           
 15317                           ; BSR set to: 0
 15318  003166  0E02               	movlw	2
 15319  003168  0100               	movlb	0	; () banked
 15320  00316A  6169               	cpfslt	___xxtofl@exp& (0+255),b
 15321  00316C  D001               	goto	u12161
 15322  00316E  D001               	goto	u12160
 15323  003170                     u12161:
 15324  003170  D7EC               	goto	l12853
 15325  003172                     u12160:
 15326  003172  D000               	goto	l2767
 15327  003174                     l2767:
 15328                           
 15329                           ; BSR set to: 0
 15330  003174  0100               	movlb	0	; () banked
 15331  003176  B169               	btfsc	___xxtofl@exp& (0+255),0,b
 15332  003178  D001               	goto	u12171
 15333  00317A  D001               	goto	u12170
 15334  00317C                     u12171:
 15335  00317C  D009               	goto	l2768
 15336  00317E                     u12170:
 15337                           
 15338                           ; BSR set to: 0
 15339  00317E  0EFF               	movlw	255
 15340  003180  0100               	movlb	0	; () banked
 15341  003182  176A               	andwf	___xxtofl@arg& (0+255),f,b
 15342  003184  0EFF               	movlw	255
 15343  003186  176B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 15344  003188  0E7F               	movlw	127
 15345  00318A  176C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 15346  00318C  0EFF               	movlw	255
 15347  00318E  176D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 15348  003190                     l2768:
 15349                           
 15350                           ; BSR set to: 0
 15351  003190  0100               	movlb	0	; () banked
 15352  003192  90D8               	bcf	status,0,c
 15353  003194  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 15354  003196  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 15355  00319A  0100               	movlb	0	; () banked
 15356  00319C  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 15357  00319E  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 15358  0031A0  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 15359  0031A2  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 15360  0031A6  0100               	movlb	0	; () banked
 15361  0031A8  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 15362  0031AA  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 15363  0031AC  6B64               	clrf	??___xxtofl& (0+255),b
 15364  0031AE  0100               	movlb	0	; () banked
 15365  0031B0  5164               	movf	??___xxtofl& (0+255),w,b
 15366  0031B2  0100               	movlb	0	; () banked
 15367  0031B4  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 15368  0031B6  0100               	movlb	0	; () banked
 15369  0031B8  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 15370  0031BA  0100               	movlb	0	; () banked
 15371  0031BC  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 15372  0031BE  0100               	movlb	0	; () banked
 15373  0031C0  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 15374  0031C2  0100               	movlb	0	; () banked
 15375  0031C4  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 15376  0031C6  0100               	movlb	0	; () banked
 15377  0031C8  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 15378  0031CA  0100               	movlb	0	; () banked
 15379  0031CC  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 15380                           
 15381                           ; BSR set to: 0
 15382  0031CE  0100               	movlb	0	; () banked
 15383  0031D0  5168               	movf	___xxtofl@sign& (0+255),w,b
 15384  0031D2  0100               	movlb	0	; () banked
 15385  0031D4  B4D8               	btfsc	status,2,c
 15386  0031D6  D001               	goto	u12181
 15387  0031D8  D001               	goto	u12180
 15388  0031DA                     u12181:
 15389  0031DA  D008               	goto	l12867
 15390  0031DC                     u12180:
 15391                           
 15392                           ; BSR set to: 0
 15393  0031DC  0100               	movlb	0	; () banked
 15394  0031DE  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 15395  0031E0  D002               	goto	u12190
 15396  0031E2  D000               	goto	u12191
 15397  0031E4                     u12191:
 15398  0031E4  D003               	goto	l12867
 15399  0031E6                     u12190:
 15400                           
 15401                           ; BSR set to: 0
 15402  0031E6  0100               	movlb	0	; () banked
 15403  0031E8  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 15404  0031EA  D000               	goto	l12867
 15405  0031EC                     l12867:
 15406                           
 15407                           ; BSR set to: 0
 15408  0031EC  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 15409  0031F0  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 15410  0031F4  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 15411  0031F8  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 15412  0031FC  D000               	goto	l2756
 15413  0031FE                     l2756:
 15414                           
 15415                           ; BSR set to: 0
 15416  0031FE  0012               	return		;funcret
 15417  003200                     __end_of___xxtofl:
 15418                           	opt stack 0
 15419                           tblptru	equ	0xFF8
 15420                           tblptrh	equ	0xFF7
 15421                           tblptrl	equ	0xFF6
 15422                           tablat	equ	0xFF5
 15423                           prodh	equ	0xFF4
 15424                           prodl	equ	0xFF3
 15425                           intcon	equ	0xFF2
 15426                           intcon3	equ	0xFF0
 15427                           postinc0	equ	0xFEE
 15428                           wreg	equ	0xFE8
 15429                           indf1	equ	0xFE7
 15430                           postdec1	equ	0xFE5
 15431                           fsr1h	equ	0xFE2
 15432                           fsr1l	equ	0xFE1
 15433                           indf2	equ	0xFDF
 15434                           fsr2h	equ	0xFDA
 15435                           fsr2l	equ	0xFD9
 15436                           status	equ	0xFD8
 15437                           
 15438 ;; *************** function ___fltol *****************
 15439 ;; Defined at:
 15440 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fltol.c"
 15441 ;; Parameters:    Size  Location     Type
 15442 ;;  f1              4    0[BANK0 ] unsigned char 
 15443 ;; Auto vars:     Size  Location     Type
 15444 ;;  exp1            1    9[BANK0 ] unsigned char 
 15445 ;;  sign1           1    8[BANK0 ] unsigned char 
 15446 ;; Return value:  Size  Location     Type
 15447 ;;                  4    0[BANK0 ] long 
 15448 ;; Registers used:
 15449 ;;		wreg, status,2, status,0
 15450 ;; Tracked objects:
 15451 ;;		On entry : 0/0
 15452 ;;		On exit  : 0/0
 15453 ;;		Unchanged: 0/0
 15454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15455 ;;      Params:         0       4       0       0       0       0       0       0       0
 15456 ;;      Locals:         0       2       0       0       0       0       0       0       0
 15457 ;;      Temps:          0       4       0       0       0       0       0       0       0
 15458 ;;      Totals:         0      10       0       0       0       0       0       0       0
 15459 ;;Total ram usage:       10 bytes
 15460 ;; Hardware stack levels used:    1
 15461 ;; Hardware stack levels required when called:   11
 15462 ;; This function calls:
 15463 ;;		Nothing
 15464 ;; This function is called by:
 15465 ;;		_ADC_TempConversion
 15466 ;; This function uses a non-reentrant model
 15467 ;;
 15468                           
 15469                           	psect	text47
 15470  003CC0                     __ptext47:
 15471                           	opt stack 0
 15472  003CC0                     ___fltol:
 15473                           	opt stack 16
 15474                           
 15475                           ; BSR set to: 0
 15476                           ;incstack = 0
 15477  003CC0  0100               	movlb	0	; () banked
 15478  003CC2  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 15479  003CC4  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 15480  003CC6  0100               	movlb	0	; () banked
 15481  003CC8  6F69               	movwf	___fltol@exp1& (0+255),b
 15482  003CCA  0100               	movlb	0	; () banked
 15483  003CCC  5169               	movf	___fltol@exp1& (0+255),w,b
 15484  003CCE  A4D8               	btfss	status,2,c
 15485  003CD0  D001               	goto	u12001
 15486  003CD2  D001               	goto	u12000
 15487  003CD4                     u12001:
 15488  003CD4  D00B               	goto	l12765
 15489  003CD6                     u12000:
 15490                           
 15491                           ; BSR set to: 0
 15492  003CD6  0E00               	movlw	0
 15493  003CD8  0100               	movlb	0	; () banked
 15494  003CDA  6F60               	movwf	?___fltol& (0+255),b
 15495  003CDC  0E00               	movlw	0
 15496  003CDE  6F61               	movwf	(?___fltol+1)& (0+255),b
 15497  003CE0  0E00               	movlw	0
 15498  003CE2  6F62               	movwf	(?___fltol+2)& (0+255),b
 15499  003CE4  0E00               	movlw	0
 15500  003CE6  6F63               	movwf	(?___fltol+3)& (0+255),b
 15501  003CE8  D087               	goto	l2407
 15502                           
 15503                           ; BSR set to: 0
 15504  003CEA  D086               	goto	l2407
 15505  003CEC                     l12765:
 15506                           
 15507                           ; BSR set to: 0
 15508  003CEC  C060  F064         	movff	___fltol@f1,??___fltol
 15509  003CF0  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 15510  003CF4  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 15511  003CF8  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 15512  003CFC  0E20               	movlw	32
 15513  003CFE  D006               	goto	u12010
 15514  003D00                     u12015:
 15515  003D00  0100               	movlb	0	; () banked
 15516  003D02  90D8               	bcf	status,0,c
 15517  003D04  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 15518  003D06  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 15519  003D08  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 15520  003D0A  3364               	rrcf	??___fltol& (0+255),f,b
 15521  003D0C                     u12010:
 15522  003D0C  2EE8               	decfsz	wreg,f,c
 15523  003D0E  D7F8               	goto	u12015
 15524  003D10  0100               	movlb	0	; () banked
 15525  003D12  5164               	movf	??___fltol& (0+255),w,b
 15526  003D14  0100               	movlb	0	; () banked
 15527  003D16  6F68               	movwf	___fltol@sign1& (0+255),b
 15528                           
 15529                           ; BSR set to: 0
 15530  003D18  0100               	movlb	0	; () banked
 15531  003D1A  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 15532                           
 15533                           ; BSR set to: 0
 15534  003D1C  0EFF               	movlw	255
 15535  003D1E  0100               	movlb	0	; () banked
 15536  003D20  1760               	andwf	___fltol@f1& (0+255),f,b
 15537  003D22  0EFF               	movlw	255
 15538  003D24  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 15539  003D26  0EFF               	movlw	255
 15540  003D28  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 15541  003D2A  0E00               	movlw	0
 15542  003D2C  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 15543                           
 15544                           ; BSR set to: 0
 15545  003D2E  0E96               	movlw	150
 15546  003D30  0100               	movlb	0	; () banked
 15547  003D32  5F69               	subwf	___fltol@exp1& (0+255),f,b
 15548                           
 15549                           ; BSR set to: 0
 15550  003D34  0100               	movlb	0	; () banked
 15551  003D36  BF69               	btfsc	___fltol@exp1& (0+255),7,b
 15552  003D38  D002               	goto	u12020
 15553  003D3A  D000               	goto	u12021
 15554  003D3C                     u12021:
 15555  003D3C  D01F               	goto	l12785
 15556  003D3E                     u12020:
 15557                           
 15558                           ; BSR set to: 0
 15559  003D3E  0100               	movlb	0	; () banked
 15560  003D40  5169               	movf	___fltol@exp1& (0+255),w,b
 15561  003D42  0A80               	xorlw	128
 15562  003D44  0F97               	addlw	151
 15563  003D46  B0D8               	btfsc	status,0,c
 15564  003D48  D001               	goto	u12031
 15565  003D4A  D001               	goto	u12030
 15566  003D4C                     u12031:
 15567  003D4C  D00C               	goto	l12781
 15568  003D4E                     u12030:
 15569                           
 15570                           ; BSR set to: 0
 15571  003D4E  0E00               	movlw	0
 15572  003D50  0100               	movlb	0	; () banked
 15573  003D52  6F60               	movwf	?___fltol& (0+255),b
 15574  003D54  0E00               	movlw	0
 15575  003D56  6F61               	movwf	(?___fltol+1)& (0+255),b
 15576  003D58  0E00               	movlw	0
 15577  003D5A  6F62               	movwf	(?___fltol+2)& (0+255),b
 15578  003D5C  0E00               	movlw	0
 15579  003D5E  6F63               	movwf	(?___fltol+3)& (0+255),b
 15580  003D60  D04B               	goto	l2407
 15581                           
 15582                           ; BSR set to: 0
 15583  003D62  D04A               	goto	l2407
 15584                           
 15585                           ; BSR set to: 0
 15586  003D64  D000               	goto	l12781
 15587  003D66                     l12781:
 15588                           
 15589                           ; BSR set to: 0
 15590  003D66  0100               	movlb	0	; () banked
 15591  003D68  90D8               	bcf	status,0,c
 15592  003D6A  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 15593  003D6C  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 15594  003D6E  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 15595  003D70  3360               	rrcf	___fltol@f1& (0+255),f,b
 15596                           
 15597                           ; BSR set to: 0
 15598  003D72  0100               	movlb	0	; () banked
 15599  003D74  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 15600  003D76  D7F7               	goto	l12781
 15601  003D78  D025               	goto	l12795
 15602                           
 15603                           ; BSR set to: 0
 15604  003D7A  D024               	goto	l12795
 15605  003D7C                     l12785:
 15606                           
 15607                           ; BSR set to: 0
 15608  003D7C  0E1F               	movlw	31
 15609  003D7E  0100               	movlb	0	; () banked
 15610  003D80  6569               	cpfsgt	___fltol@exp1& (0+255),b
 15611  003D82  D001               	goto	u12041
 15612  003D84  D001               	goto	u12040
 15613  003D86                     u12041:
 15614  003D86  D015               	goto	l12793
 15615  003D88                     u12040:
 15616                           
 15617                           ; BSR set to: 0
 15618  003D88  0E00               	movlw	0
 15619  003D8A  0100               	movlb	0	; () banked
 15620  003D8C  6F60               	movwf	?___fltol& (0+255),b
 15621  003D8E  0E00               	movlw	0
 15622  003D90  6F61               	movwf	(?___fltol+1)& (0+255),b
 15623  003D92  0E00               	movlw	0
 15624  003D94  6F62               	movwf	(?___fltol+2)& (0+255),b
 15625  003D96  0E00               	movlw	0
 15626  003D98  6F63               	movwf	(?___fltol+3)& (0+255),b
 15627  003D9A  D02E               	goto	l2407
 15628                           
 15629                           ; BSR set to: 0
 15630  003D9C  D02D               	goto	l2407
 15631                           
 15632                           ; BSR set to: 0
 15633  003D9E  D009               	goto	l12793
 15634  003DA0                     l12791:
 15635                           
 15636                           ; BSR set to: 0
 15637  003DA0  0100               	movlb	0	; () banked
 15638  003DA2  90D8               	bcf	status,0,c
 15639  003DA4  3760               	rlcf	___fltol@f1& (0+255),f,b
 15640  003DA6  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 15641  003DA8  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 15642  003DAA  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 15643  003DAC  0100               	movlb	0	; () banked
 15644  003DAE  0769               	decf	___fltol@exp1& (0+255),f,b
 15645  003DB0  D000               	goto	l12793
 15646  003DB2                     l12793:
 15647                           
 15648                           ; BSR set to: 0
 15649  003DB2  0100               	movlb	0	; () banked
 15650  003DB4  5169               	movf	___fltol@exp1& (0+255),w,b
 15651  003DB6  0100               	movlb	0	; () banked
 15652  003DB8  A4D8               	btfss	status,2,c
 15653  003DBA  D001               	goto	u12051
 15654  003DBC  D001               	goto	u12050
 15655  003DBE                     u12051:
 15656  003DBE  D7F0               	goto	l12791
 15657  003DC0                     u12050:
 15658  003DC0  D001               	goto	l12795
 15659                           
 15660                           ; BSR set to: 0
 15661  003DC2  D000               	goto	l12795
 15662  003DC4                     l12795:
 15663                           
 15664                           ; BSR set to: 0
 15665  003DC4  0100               	movlb	0	; () banked
 15666  003DC6  5168               	movf	___fltol@sign1& (0+255),w,b
 15667  003DC8  0100               	movlb	0	; () banked
 15668  003DCA  B4D8               	btfsc	status,2,c
 15669  003DCC  D001               	goto	u12061
 15670  003DCE  D001               	goto	u12060
 15671  003DD0                     u12061:
 15672  003DD0  D00A               	goto	l12799
 15673  003DD2                     u12060:
 15674                           
 15675                           ; BSR set to: 0
 15676  003DD2  0100               	movlb	0	; () banked
 15677  003DD4  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 15678  003DD6  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 15679  003DD8  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 15680  003DDA  6D60               	negf	___fltol@f1& (0+255),b
 15681  003DDC  0E00               	movlw	0
 15682  003DDE  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 15683  003DE0  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 15684  003DE2  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 15685  003DE4  D000               	goto	l12799
 15686  003DE6                     l12799:
 15687                           
 15688                           ; BSR set to: 0
 15689  003DE6  C060  F060         	movff	___fltol@f1,?___fltol
 15690  003DEA  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 15691  003DEE  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 15692  003DF2  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 15693  003DF6  D000               	goto	l2407
 15694  003DF8                     l2407:
 15695                           
 15696                           ; BSR set to: 0
 15697  003DF8  0012               	return		;funcret
 15698  003DFA                     __end_of___fltol:
 15699                           	opt stack 0
 15700                           tblptru	equ	0xFF8
 15701                           tblptrh	equ	0xFF7
 15702                           tblptrl	equ	0xFF6
 15703                           tablat	equ	0xFF5
 15704                           prodh	equ	0xFF4
 15705                           prodl	equ	0xFF3
 15706                           intcon	equ	0xFF2
 15707                           intcon3	equ	0xFF0
 15708                           postinc0	equ	0xFEE
 15709                           wreg	equ	0xFE8
 15710                           indf1	equ	0xFE7
 15711                           postdec1	equ	0xFE5
 15712                           fsr1h	equ	0xFE2
 15713                           fsr1l	equ	0xFE1
 15714                           indf2	equ	0xFDF
 15715                           fsr2h	equ	0xFDA
 15716                           fsr2l	equ	0xFD9
 15717                           status	equ	0xFD8
 15718                           
 15719 ;; *************** function ___flmul *****************
 15720 ;; Defined at:
 15721 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\sprcmul.c"
 15722 ;; Parameters:    Size  Location     Type
 15723 ;;  b               4   20[BANK0 ] long 
 15724 ;;  a               4   24[BANK0 ] long 
 15725 ;; Auto vars:     Size  Location     Type
 15726 ;;  prod            4   39[BANK0 ] struct .
 15727 ;;  grs             4   34[BANK0 ] unsigned long 
 15728 ;;  temp            2   43[BANK0 ] struct .
 15729 ;;  bexp            1   38[BANK0 ] unsigned char 
 15730 ;;  aexp            1   33[BANK0 ] unsigned char 
 15731 ;;  sign            1   32[BANK0 ] unsigned char 
 15732 ;; Return value:  Size  Location     Type
 15733 ;;                  4   20[BANK0 ] unsigned char 
 15734 ;; Registers used:
 15735 ;;		wreg, status,2, status,0, prodl, prodh
 15736 ;; Tracked objects:
 15737 ;;		On entry : 0/0
 15738 ;;		On exit  : 0/0
 15739 ;;		Unchanged: 0/0
 15740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15741 ;;      Params:         0       8       0       0       0       0       0       0       0
 15742 ;;      Locals:         0      13       0       0       0       0       0       0       0
 15743 ;;      Temps:          0       4       0       0       0       0       0       0       0
 15744 ;;      Totals:         0      25       0       0       0       0       0       0       0
 15745 ;;Total ram usage:       25 bytes
 15746 ;; Hardware stack levels used:    1
 15747 ;; Hardware stack levels required when called:   11
 15748 ;; This function calls:
 15749 ;;		Nothing
 15750 ;; This function is called by:
 15751 ;;		_ADC_TempConversion
 15752 ;; This function uses a non-reentrant model
 15753 ;;
 15754                           
 15755                           	psect	text48
 15756  0020F8                     __ptext48:
 15757                           	opt stack 0
 15758  0020F8                     ___flmul:
 15759                           	opt stack 16
 15760                           
 15761                           ; BSR set to: 0
 15762                           ;incstack = 0
 15763  0020F8  0100               	movlb	0	; () banked
 15764  0020FA  5177               	movf	(___flmul@b+3)& (0+255),w,b
 15765  0020FC  0B80               	andlw	128
 15766  0020FE  0100               	movlb	0	; () banked
 15767  002100  6F80               	movwf	___flmul@sign& (0+255),b
 15768  002102  0100               	movlb	0	; () banked
 15769  002104  5177               	movf	(___flmul@b+3)& (0+255),w,b
 15770  002106  2577               	addwf	(___flmul@b+3)& (0+255),w,b
 15771  002108  0100               	movlb	0	; () banked
 15772  00210A  6F86               	movwf	___flmul@bexp& (0+255),b
 15773                           
 15774                           ; BSR set to: 0
 15775  00210C  0100               	movlb	0	; () banked
 15776  00210E  AF76               	btfss	(___flmul@b+2)& (0+255),7,b
 15777  002110  D001               	goto	u11751
 15778  002112  D001               	goto	u11750
 15779  002114                     u11751:
 15780  002114  D003               	goto	l12599
 15781  002116                     u11750:
 15782                           
 15783                           ; BSR set to: 0
 15784  002116  0100               	movlb	0	; () banked
 15785  002118  8186               	bsf	___flmul@bexp& (0+255),0,b
 15786  00211A  D000               	goto	l12599
 15787  00211C                     l12599:
 15788                           
 15789                           ; BSR set to: 0
 15790  00211C  0100               	movlb	0	; () banked
 15791  00211E  5186               	movf	___flmul@bexp& (0+255),w,b
 15792  002120  0100               	movlb	0	; () banked
 15793  002122  B4D8               	btfsc	status,2,c
 15794  002124  D001               	goto	u11761
 15795  002126  D001               	goto	u11760
 15796  002128                     u11761:
 15797  002128  D013               	goto	l12607
 15798  00212A                     u11760:
 15799                           
 15800                           ; BSR set to: 0
 15801  00212A  0100               	movlb	0	; () banked
 15802  00212C  2986               	incf	___flmul@bexp& (0+255),w,b
 15803  00212E  A4D8               	btfss	status,2,c
 15804  002130  D001               	goto	u11771
 15805  002132  D001               	goto	u11770
 15806  002134                     u11771:
 15807  002134  D00A               	goto	l12605
 15808  002136                     u11770:
 15809                           
 15810                           ; BSR set to: 0
 15811  002136  0E00               	movlw	0
 15812  002138  0100               	movlb	0	; () banked
 15813  00213A  6F74               	movwf	___flmul@b& (0+255),b
 15814  00213C  0E00               	movlw	0
 15815  00213E  6F75               	movwf	(___flmul@b+1)& (0+255),b
 15816  002140  0E00               	movlw	0
 15817  002142  6F76               	movwf	(___flmul@b+2)& (0+255),b
 15818  002144  0E00               	movlw	0
 15819  002146  6F77               	movwf	(___flmul@b+3)& (0+255),b
 15820  002148  D000               	goto	l12605
 15821  00214A                     l12605:
 15822                           
 15823                           ; BSR set to: 0
 15824  00214A  0100               	movlb	0	; () banked
 15825  00214C  8F76               	bsf	(___flmul@b+2)& (0+255),7,b
 15826  00214E  D00A               	goto	l12609
 15827  002150                     l12607:
 15828                           
 15829                           ; BSR set to: 0
 15830  002150  0E00               	movlw	0
 15831  002152  0100               	movlb	0	; () banked
 15832  002154  6F74               	movwf	___flmul@b& (0+255),b
 15833  002156  0E00               	movlw	0
 15834  002158  6F75               	movwf	(___flmul@b+1)& (0+255),b
 15835  00215A  0E00               	movlw	0
 15836  00215C  6F76               	movwf	(___flmul@b+2)& (0+255),b
 15837  00215E  0E00               	movlw	0
 15838  002160  6F77               	movwf	(___flmul@b+3)& (0+255),b
 15839  002162  D000               	goto	l12609
 15840  002164                     l12609:
 15841                           
 15842                           ; BSR set to: 0
 15843  002164  0100               	movlb	0	; () banked
 15844  002166  517B               	movf	(___flmul@a+3)& (0+255),w,b
 15845  002168  0B80               	andlw	128
 15846  00216A  0100               	movlb	0	; () banked
 15847  00216C  1B80               	xorwf	___flmul@sign& (0+255),f,b
 15848                           
 15849                           ; BSR set to: 0
 15850  00216E  0100               	movlb	0	; () banked
 15851  002170  517B               	movf	(___flmul@a+3)& (0+255),w,b
 15852  002172  257B               	addwf	(___flmul@a+3)& (0+255),w,b
 15853  002174  0100               	movlb	0	; () banked
 15854  002176  6F81               	movwf	___flmul@aexp& (0+255),b
 15855                           
 15856                           ; BSR set to: 0
 15857  002178  0100               	movlb	0	; () banked
 15858  00217A  AF7A               	btfss	(___flmul@a+2)& (0+255),7,b
 15859  00217C  D001               	goto	u11781
 15860  00217E  D001               	goto	u11780
 15861  002180                     u11781:
 15862  002180  D003               	goto	l12617
 15863  002182                     u11780:
 15864                           
 15865                           ; BSR set to: 0
 15866  002182  0100               	movlb	0	; () banked
 15867  002184  8181               	bsf	___flmul@aexp& (0+255),0,b
 15868  002186  D000               	goto	l12617
 15869  002188                     l12617:
 15870                           
 15871                           ; BSR set to: 0
 15872  002188  0100               	movlb	0	; () banked
 15873  00218A  5181               	movf	___flmul@aexp& (0+255),w,b
 15874  00218C  0100               	movlb	0	; () banked
 15875  00218E  B4D8               	btfsc	status,2,c
 15876  002190  D001               	goto	u11791
 15877  002192  D001               	goto	u11790
 15878  002194                     u11791:
 15879  002194  D013               	goto	l12625
 15880  002196                     u11790:
 15881                           
 15882                           ; BSR set to: 0
 15883  002196  0100               	movlb	0	; () banked
 15884  002198  2981               	incf	___flmul@aexp& (0+255),w,b
 15885  00219A  A4D8               	btfss	status,2,c
 15886  00219C  D001               	goto	u11801
 15887  00219E  D001               	goto	u11800
 15888  0021A0                     u11801:
 15889  0021A0  D00A               	goto	l12623
 15890  0021A2                     u11800:
 15891                           
 15892                           ; BSR set to: 0
 15893  0021A2  0E00               	movlw	0
 15894  0021A4  0100               	movlb	0	; () banked
 15895  0021A6  6F78               	movwf	___flmul@a& (0+255),b
 15896  0021A8  0E00               	movlw	0
 15897  0021AA  6F79               	movwf	(___flmul@a+1)& (0+255),b
 15898  0021AC  0E00               	movlw	0
 15899  0021AE  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 15900  0021B0  0E00               	movlw	0
 15901  0021B2  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 15902  0021B4  D000               	goto	l12623
 15903  0021B6                     l12623:
 15904                           
 15905                           ; BSR set to: 0
 15906  0021B6  0100               	movlb	0	; () banked
 15907  0021B8  8F7A               	bsf	(___flmul@a+2)& (0+255),7,b
 15908  0021BA  D009               	goto	l2714
 15909  0021BC                     l12625:
 15910                           
 15911                           ; BSR set to: 0
 15912  0021BC  0E00               	movlw	0
 15913  0021BE  0100               	movlb	0	; () banked
 15914  0021C0  6F78               	movwf	___flmul@a& (0+255),b
 15915  0021C2  0E00               	movlw	0
 15916  0021C4  6F79               	movwf	(___flmul@a+1)& (0+255),b
 15917  0021C6  0E00               	movlw	0
 15918  0021C8  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 15919  0021CA  0E00               	movlw	0
 15920  0021CC  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 15921  0021CE                     l2714:
 15922                           
 15923                           ; BSR set to: 0
 15924  0021CE  0100               	movlb	0	; () banked
 15925  0021D0  5181               	movf	___flmul@aexp& (0+255),w,b
 15926  0021D2  0100               	movlb	0	; () banked
 15927  0021D4  B4D8               	btfsc	status,2,c
 15928  0021D6  D001               	goto	u11811
 15929  0021D8  D001               	goto	u11810
 15930  0021DA                     u11811:
 15931  0021DA  D008               	goto	l12629
 15932  0021DC                     u11810:
 15933                           
 15934                           ; BSR set to: 0
 15935  0021DC  0100               	movlb	0	; () banked
 15936  0021DE  5186               	movf	___flmul@bexp& (0+255),w,b
 15937  0021E0  0100               	movlb	0	; () banked
 15938  0021E2  A4D8               	btfss	status,2,c
 15939  0021E4  D001               	goto	u11821
 15940  0021E6  D001               	goto	u11820
 15941  0021E8                     u11821:
 15942  0021E8  D00C               	goto	l12633
 15943  0021EA                     u11820:
 15944  0021EA  D000               	goto	l12629
 15945  0021EC                     l12629:
 15946                           
 15947                           ; BSR set to: 0
 15948  0021EC  0E00               	movlw	0
 15949  0021EE  0100               	movlb	0	; () banked
 15950  0021F0  6F74               	movwf	?___flmul& (0+255),b
 15951  0021F2  0E00               	movlw	0
 15952  0021F4  6F75               	movwf	(?___flmul+1)& (0+255),b
 15953  0021F6  0E00               	movlw	0
 15954  0021F8  6F76               	movwf	(?___flmul+2)& (0+255),b
 15955  0021FA  0E00               	movlw	0
 15956  0021FC  6F77               	movwf	(?___flmul+3)& (0+255),b
 15957  0021FE  D208               	goto	l2718
 15958                           
 15959                           ; BSR set to: 0
 15960  002200  D207               	goto	l2718
 15961  002202                     l12633:
 15962                           
 15963                           ; BSR set to: 0
 15964  002202  0100               	movlb	0	; () banked
 15965  002204  517A               	movf	(___flmul@a+2)& (0+255),w,b
 15966  002206  0100               	movlb	0	; () banked
 15967  002208  0374               	mulwf	___flmul@b& (0+255),b
 15968  00220A  CFF3 F08B          	movff	prodl,___flmul@temp
 15969  00220E  CFF4 F08C          	movff	prodh,___flmul@temp+1
 15970                           
 15971                           ; BSR set to: 0
 15972  002212  0100               	movlb	0	; () banked
 15973  002214  518B               	movf	___flmul@temp& (0+255),w,b
 15974  002216  0100               	movlb	0	; () banked
 15975  002218  6F82               	movwf	___flmul@grs& (0+255),b
 15976  00221A  6B83               	clrf	(___flmul@grs+1)& (0+255),b
 15977  00221C  6B84               	clrf	(___flmul@grs+2)& (0+255),b
 15978  00221E  6B85               	clrf	(___flmul@grs+3)& (0+255),b
 15979                           
 15980                           ; BSR set to: 0
 15981  002220  0100               	movlb	0	; () banked
 15982  002222  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 15983  002224  0100               	movlb	0	; () banked
 15984  002226  6F87               	movwf	___flmul@prod& (0+255),b
 15985  002228  6B88               	clrf	(___flmul@prod+1)& (0+255),b
 15986  00222A  6B89               	clrf	(___flmul@prod+2)& (0+255),b
 15987  00222C  6B8A               	clrf	(___flmul@prod+3)& (0+255),b
 15988  00222E  0100               	movlb	0	; () banked
 15989  002230  5179               	movf	(___flmul@a+1)& (0+255),w,b
 15990  002232  0100               	movlb	0	; () banked
 15991  002234  0375               	mulwf	(___flmul@b+1)& (0+255),b
 15992  002236  CFF3 F08B          	movff	prodl,___flmul@temp
 15993  00223A  CFF4 F08C          	movff	prodh,___flmul@temp+1
 15994                           
 15995                           ; BSR set to: 0
 15996  00223E  0100               	movlb	0	; () banked
 15997  002240  518B               	movf	___flmul@temp& (0+255),w,b
 15998  002242  0100               	movlb	0	; () banked
 15999  002244  2782               	addwf	___flmul@grs& (0+255),f,b
 16000  002246  0E00               	movlw	0
 16001  002248  2383               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16002  00224A  2384               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16003  00224C  2385               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16004                           
 16005                           ; BSR set to: 0
 16006  00224E  0100               	movlb	0	; () banked
 16007  002250  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16008  002252  0100               	movlb	0	; () banked
 16009  002254  2787               	addwf	___flmul@prod& (0+255),f,b
 16010  002256  0E00               	movlw	0
 16011  002258  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16012  00225A  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16013  00225C  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16014  00225E  0100               	movlb	0	; () banked
 16015  002260  5178               	movf	___flmul@a& (0+255),w,b
 16016  002262  0100               	movlb	0	; () banked
 16017  002264  0376               	mulwf	(___flmul@b+2)& (0+255),b
 16018  002266  CFF3 F08B          	movff	prodl,___flmul@temp
 16019  00226A  CFF4 F08C          	movff	prodh,___flmul@temp+1
 16020                           
 16021                           ; BSR set to: 0
 16022  00226E  0100               	movlb	0	; () banked
 16023  002270  518B               	movf	___flmul@temp& (0+255),w,b
 16024  002272  0100               	movlb	0	; () banked
 16025  002274  2782               	addwf	___flmul@grs& (0+255),f,b
 16026  002276  0E00               	movlw	0
 16027  002278  2383               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16028  00227A  2384               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16029  00227C  2385               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16030                           
 16031                           ; BSR set to: 0
 16032  00227E  0100               	movlb	0	; () banked
 16033  002280  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16034  002282  0100               	movlb	0	; () banked
 16035  002284  2787               	addwf	___flmul@prod& (0+255),f,b
 16036  002286  0E00               	movlw	0
 16037  002288  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16038  00228A  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16039  00228C  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16040                           
 16041                           ; BSR set to: 0
 16042  00228E  C084  F085         	movff	___flmul@grs+2,___flmul@grs+3
 16043  002292  C083  F084         	movff	___flmul@grs+1,___flmul@grs+2
 16044  002296  C082  F083         	movff	___flmul@grs,___flmul@grs+1
 16045  00229A  0100               	movlb	0	; () banked
 16046  00229C  6B82               	clrf	___flmul@grs& (0+255),b
 16047                           
 16048                           ; BSR set to: 0
 16049  00229E  0100               	movlb	0	; () banked
 16050  0022A0  5178               	movf	___flmul@a& (0+255),w,b
 16051  0022A2  0100               	movlb	0	; () banked
 16052  0022A4  0375               	mulwf	(___flmul@b+1)& (0+255),b
 16053  0022A6  CFF3 F08B          	movff	prodl,___flmul@temp
 16054  0022AA  CFF4 F08C          	movff	prodh,___flmul@temp+1
 16055                           
 16056                           ; BSR set to: 0
 16057  0022AE  0100               	movlb	0	; () banked
 16058  0022B0  518B               	movf	___flmul@temp& (0+255),w,b
 16059  0022B2  0100               	movlb	0	; () banked
 16060  0022B4  2782               	addwf	___flmul@grs& (0+255),f,b
 16061  0022B6  0100               	movlb	0	; () banked
 16062  0022B8  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16063  0022BA  0100               	movlb	0	; () banked
 16064  0022BC  2383               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16065  0022BE  0E00               	movlw	0
 16066  0022C0  0100               	movlb	0	; () banked
 16067  0022C2  2384               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16068  0022C4  0E00               	movlw	0
 16069  0022C6  0100               	movlb	0	; () banked
 16070  0022C8  2385               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16071                           
 16072                           ; BSR set to: 0
 16073  0022CA  0100               	movlb	0	; () banked
 16074  0022CC  5179               	movf	(___flmul@a+1)& (0+255),w,b
 16075  0022CE  0100               	movlb	0	; () banked
 16076  0022D0  0374               	mulwf	___flmul@b& (0+255),b
 16077  0022D2  CFF3 F08B          	movff	prodl,___flmul@temp
 16078  0022D6  CFF4 F08C          	movff	prodh,___flmul@temp+1
 16079                           
 16080                           ; BSR set to: 0
 16081  0022DA  0100               	movlb	0	; () banked
 16082  0022DC  518B               	movf	___flmul@temp& (0+255),w,b
 16083  0022DE  0100               	movlb	0	; () banked
 16084  0022E0  2782               	addwf	___flmul@grs& (0+255),f,b
 16085  0022E2  0100               	movlb	0	; () banked
 16086  0022E4  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16087  0022E6  0100               	movlb	0	; () banked
 16088  0022E8  2383               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16089  0022EA  0E00               	movlw	0
 16090  0022EC  0100               	movlb	0	; () banked
 16091  0022EE  2384               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16092  0022F0  0E00               	movlw	0
 16093  0022F2  0100               	movlb	0	; () banked
 16094  0022F4  2385               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16095                           
 16096                           ; BSR set to: 0
 16097  0022F6  C084  F085         	movff	___flmul@grs+2,___flmul@grs+3
 16098  0022FA  C083  F084         	movff	___flmul@grs+1,___flmul@grs+2
 16099  0022FE  C082  F083         	movff	___flmul@grs,___flmul@grs+1
 16100  002302  0100               	movlb	0	; () banked
 16101  002304  6B82               	clrf	___flmul@grs& (0+255),b
 16102  002306  0100               	movlb	0	; () banked
 16103  002308  5178               	movf	___flmul@a& (0+255),w,b
 16104  00230A  0100               	movlb	0	; () banked
 16105  00230C  0374               	mulwf	___flmul@b& (0+255),b
 16106  00230E  CFF3 F08B          	movff	prodl,___flmul@temp
 16107  002312  CFF4 F08C          	movff	prodh,___flmul@temp+1
 16108                           
 16109                           ; BSR set to: 0
 16110  002316  0100               	movlb	0	; () banked
 16111  002318  518B               	movf	___flmul@temp& (0+255),w,b
 16112  00231A  0100               	movlb	0	; () banked
 16113  00231C  2782               	addwf	___flmul@grs& (0+255),f,b
 16114  00231E  0100               	movlb	0	; () banked
 16115  002320  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16116  002322  0100               	movlb	0	; () banked
 16117  002324  2383               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16118  002326  0E00               	movlw	0
 16119  002328  0100               	movlb	0	; () banked
 16120  00232A  2384               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16121  00232C  0E00               	movlw	0
 16122  00232E  0100               	movlb	0	; () banked
 16123  002330  2385               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16124                           
 16125                           ; BSR set to: 0
 16126  002332  0100               	movlb	0	; () banked
 16127  002334  517A               	movf	(___flmul@a+2)& (0+255),w,b
 16128  002336  0100               	movlb	0	; () banked
 16129  002338  0375               	mulwf	(___flmul@b+1)& (0+255),b
 16130  00233A  CFF3 F08B          	movff	prodl,___flmul@temp
 16131  00233E  CFF4 F08C          	movff	prodh,___flmul@temp+1
 16132  002342  0100               	movlb	0	; () banked
 16133  002344  518B               	movf	___flmul@temp& (0+255),w,b
 16134  002346  0100               	movlb	0	; () banked
 16135  002348  2787               	addwf	___flmul@prod& (0+255),f,b
 16136  00234A  0100               	movlb	0	; () banked
 16137  00234C  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16138  00234E  0100               	movlb	0	; () banked
 16139  002350  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16140  002352  0E00               	movlw	0
 16141  002354  0100               	movlb	0	; () banked
 16142  002356  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16143  002358  0E00               	movlw	0
 16144  00235A  0100               	movlb	0	; () banked
 16145  00235C  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16146                           
 16147                           ; BSR set to: 0
 16148  00235E  0100               	movlb	0	; () banked
 16149  002360  5179               	movf	(___flmul@a+1)& (0+255),w,b
 16150  002362  0100               	movlb	0	; () banked
 16151  002364  0376               	mulwf	(___flmul@b+2)& (0+255),b
 16152  002366  CFF3 F08B          	movff	prodl,___flmul@temp
 16153  00236A  CFF4 F08C          	movff	prodh,___flmul@temp+1
 16154                           
 16155                           ; BSR set to: 0
 16156  00236E  0100               	movlb	0	; () banked
 16157  002370  518B               	movf	___flmul@temp& (0+255),w,b
 16158  002372  0100               	movlb	0	; () banked
 16159  002374  2787               	addwf	___flmul@prod& (0+255),f,b
 16160  002376  0100               	movlb	0	; () banked
 16161  002378  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16162  00237A  0100               	movlb	0	; () banked
 16163  00237C  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16164  00237E  0E00               	movlw	0
 16165  002380  0100               	movlb	0	; () banked
 16166  002382  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16167  002384  0E00               	movlw	0
 16168  002386  0100               	movlb	0	; () banked
 16169  002388  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16170  00238A  0100               	movlb	0	; () banked
 16171  00238C  517A               	movf	(___flmul@a+2)& (0+255),w,b
 16172  00238E  0100               	movlb	0	; () banked
 16173  002390  0376               	mulwf	(___flmul@b+2)& (0+255),b
 16174  002392  CFF3 F08B          	movff	prodl,___flmul@temp
 16175  002396  CFF4 F08C          	movff	prodh,___flmul@temp+1
 16176                           
 16177                           ; BSR set to: 0
 16178  00239A  0100               	movlb	0	; () banked
 16179  00239C  518B               	movf	___flmul@temp& (0+255),w,b
 16180  00239E  0100               	movlb	0	; () banked
 16181  0023A0  6F7C               	movwf	??___flmul& (0+255),b
 16182  0023A2  0100               	movlb	0	; () banked
 16183  0023A4  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16184  0023A6  0100               	movlb	0	; () banked
 16185  0023A8  6F7D               	movwf	(??___flmul+1)& (0+255),b
 16186  0023AA  0100               	movlb	0	; () banked
 16187  0023AC  6B7E               	clrf	(??___flmul+2)& (0+255),b
 16188  0023AE  0100               	movlb	0	; () banked
 16189  0023B0  6B7F               	clrf	(??___flmul+3)& (0+255),b
 16190  0023B2  C07E  F07F         	movff	??___flmul+2,??___flmul+3
 16191  0023B6  C07D  F07E         	movff	??___flmul+1,??___flmul+2
 16192  0023BA  C07C  F07D         	movff	??___flmul,??___flmul+1
 16193  0023BE  0100               	movlb	0	; () banked
 16194  0023C0  6B7C               	clrf	??___flmul& (0+255),b
 16195  0023C2  0100               	movlb	0	; () banked
 16196  0023C4  517C               	movf	??___flmul& (0+255),w,b
 16197  0023C6  0100               	movlb	0	; () banked
 16198  0023C8  2787               	addwf	___flmul@prod& (0+255),f,b
 16199  0023CA  0100               	movlb	0	; () banked
 16200  0023CC  517D               	movf	(??___flmul+1)& (0+255),w,b
 16201  0023CE  0100               	movlb	0	; () banked
 16202  0023D0  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16203  0023D2  0100               	movlb	0	; () banked
 16204  0023D4  517E               	movf	(??___flmul+2)& (0+255),w,b
 16205  0023D6  0100               	movlb	0	; () banked
 16206  0023D8  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16207  0023DA  0100               	movlb	0	; () banked
 16208  0023DC  517F               	movf	(??___flmul+3)& (0+255),w,b
 16209  0023DE  0100               	movlb	0	; () banked
 16210  0023E0  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16211                           
 16212                           ; BSR set to: 0
 16213  0023E2  C082  F07C         	movff	___flmul@grs,??___flmul
 16214  0023E6  C083  F07D         	movff	___flmul@grs+1,??___flmul+1
 16215  0023EA  C084  F07E         	movff	___flmul@grs+2,??___flmul+2
 16216  0023EE  C085  F07F         	movff	___flmul@grs+3,??___flmul+3
 16217  0023F2  0E19               	movlw	25
 16218  0023F4  D006               	goto	u11830
 16219  0023F6                     u11835:
 16220  0023F6  0100               	movlb	0	; () banked
 16221  0023F8  90D8               	bcf	status,0,c
 16222  0023FA  337F               	rrcf	(??___flmul+3)& (0+255),f,b
 16223  0023FC  337E               	rrcf	(??___flmul+2)& (0+255),f,b
 16224  0023FE  337D               	rrcf	(??___flmul+1)& (0+255),f,b
 16225  002400  337C               	rrcf	??___flmul& (0+255),f,b
 16226  002402                     u11830:
 16227  002402  2EE8               	decfsz	wreg,f,c
 16228  002404  D7F8               	goto	u11835
 16229  002406  0100               	movlb	0	; () banked
 16230  002408  517C               	movf	??___flmul& (0+255),w,b
 16231  00240A  0100               	movlb	0	; () banked
 16232  00240C  2787               	addwf	___flmul@prod& (0+255),f,b
 16233  00240E  0100               	movlb	0	; () banked
 16234  002410  517D               	movf	(??___flmul+1)& (0+255),w,b
 16235  002412  0100               	movlb	0	; () banked
 16236  002414  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16237  002416  0100               	movlb	0	; () banked
 16238  002418  517E               	movf	(??___flmul+2)& (0+255),w,b
 16239  00241A  0100               	movlb	0	; () banked
 16240  00241C  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16241  00241E  0100               	movlb	0	; () banked
 16242  002420  517F               	movf	(??___flmul+3)& (0+255),w,b
 16243  002422  0100               	movlb	0	; () banked
 16244  002424  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16245                           
 16246                           ; BSR set to: 0
 16247  002426  C084  F085         	movff	___flmul@grs+2,___flmul@grs+3
 16248  00242A  C083  F084         	movff	___flmul@grs+1,___flmul@grs+2
 16249  00242E  C082  F083         	movff	___flmul@grs,___flmul@grs+1
 16250  002432  0100               	movlb	0	; () banked
 16251  002434  6B82               	clrf	___flmul@grs& (0+255),b
 16252                           
 16253                           ; BSR set to: 0
 16254  002436  0100               	movlb	0	; () banked
 16255  002438  5181               	movf	___flmul@aexp& (0+255),w,b
 16256  00243A  C086  F07C         	movff	___flmul@bexp,??___flmul
 16257  00243E  0100               	movlb	0	; () banked
 16258  002440  6B7D               	clrf	(??___flmul+1)& (0+255),b
 16259  002442  0100               	movlb	0	; () banked
 16260  002444  277C               	addwf	??___flmul& (0+255),f,b
 16261  002446  0E00               	movlw	0
 16262  002448  237D               	addwfc	(??___flmul+1)& (0+255),f,b
 16263  00244A  0E82               	movlw	130
 16264  00244C  0100               	movlb	0	; () banked
 16265  00244E  257C               	addwf	??___flmul& (0+255),w,b
 16266  002450  0100               	movlb	0	; () banked
 16267  002452  6F8B               	movwf	___flmul@temp& (0+255),b
 16268  002454  0EFF               	movlw	255
 16269  002456  0100               	movlb	0	; () banked
 16270  002458  217D               	addwfc	(??___flmul+1)& (0+255),w,b
 16271  00245A  0100               	movlb	0	; () banked
 16272  00245C  6F8C               	movwf	(___flmul@temp+1)& (0+255),b
 16273  00245E  D018               	goto	l12681
 16274  002460                     l12675:
 16275                           
 16276                           ; BSR set to: 0
 16277  002460  0100               	movlb	0	; () banked
 16278  002462  90D8               	bcf	status,0,c
 16279  002464  3787               	rlcf	___flmul@prod& (0+255),f,b
 16280  002466  3788               	rlcf	(___flmul@prod+1)& (0+255),f,b
 16281  002468  3789               	rlcf	(___flmul@prod+2)& (0+255),f,b
 16282  00246A  378A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 16283                           
 16284                           ; BSR set to: 0
 16285  00246C  0100               	movlb	0	; () banked
 16286  00246E  AF85               	btfss	(___flmul@grs+3)& (0+255),7,b
 16287  002470  D001               	goto	u11841
 16288  002472  D001               	goto	u11840
 16289  002474                     u11841:
 16290  002474  D002               	goto	l2721
 16291  002476                     u11840:
 16292                           
 16293                           ; BSR set to: 0
 16294  002476  0100               	movlb	0	; () banked
 16295  002478  8187               	bsf	___flmul@prod& (0+255),0,b
 16296  00247A                     l2721:
 16297                           
 16298                           ; BSR set to: 0
 16299  00247A  0100               	movlb	0	; () banked
 16300  00247C  90D8               	bcf	status,0,c
 16301  00247E  3782               	rlcf	___flmul@grs& (0+255),f,b
 16302  002480  3783               	rlcf	(___flmul@grs+1)& (0+255),f,b
 16303  002482  3784               	rlcf	(___flmul@grs+2)& (0+255),f,b
 16304  002484  3785               	rlcf	(___flmul@grs+3)& (0+255),f,b
 16305  002486  0100               	movlb	0	; () banked
 16306  002488  078B               	decf	___flmul@temp& (0+255),f,b
 16307  00248A  A0D8               	btfss	status,0,c
 16308  00248C  078C               	decf	(___flmul@temp+1)& (0+255),f,b
 16309  00248E  D000               	goto	l12681
 16310  002490                     l12681:
 16311                           
 16312                           ; BSR set to: 0
 16313  002490  0100               	movlb	0	; () banked
 16314  002492  AF89               	btfss	(___flmul@prod+2)& (0+255),7,b
 16315  002494  D001               	goto	u11851
 16316  002496  D001               	goto	u11850
 16317  002498                     u11851:
 16318  002498  D7E3               	goto	l12675
 16319  00249A                     u11850:
 16320  00249A  D000               	goto	l12683
 16321  00249C                     l12683:
 16322                           
 16323                           ; BSR set to: 0
 16324  00249C  0E00               	movlw	0
 16325  00249E  0100               	movlb	0	; () banked
 16326  0024A0  6F81               	movwf	___flmul@aexp& (0+255),b
 16327                           
 16328                           ; BSR set to: 0
 16329  0024A2  0100               	movlb	0	; () banked
 16330  0024A4  AF85               	btfss	(___flmul@grs+3)& (0+255),7,b
 16331  0024A6  D001               	goto	u11861
 16332  0024A8  D001               	goto	u11860
 16333  0024AA                     u11861:
 16334  0024AA  D02E               	goto	l2723
 16335  0024AC                     u11860:
 16336                           
 16337                           ; BSR set to: 0
 16338  0024AC  0EFF               	movlw	255
 16339  0024AE  0100               	movlb	0	; () banked
 16340  0024B0  1582               	andwf	___flmul@grs& (0+255),w,b
 16341  0024B2  0100               	movlb	0	; () banked
 16342  0024B4  6F7C               	movwf	??___flmul& (0+255),b
 16343  0024B6  0EFF               	movlw	255
 16344  0024B8  0100               	movlb	0	; () banked
 16345  0024BA  1583               	andwf	(___flmul@grs+1)& (0+255),w,b
 16346  0024BC  0100               	movlb	0	; () banked
 16347  0024BE  6F7D               	movwf	(??___flmul+1)& (0+255),b
 16348  0024C0  0EFF               	movlw	255
 16349  0024C2  0100               	movlb	0	; () banked
 16350  0024C4  1584               	andwf	(___flmul@grs+2)& (0+255),w,b
 16351  0024C6  0100               	movlb	0	; () banked
 16352  0024C8  6F7E               	movwf	(??___flmul+2)& (0+255),b
 16353  0024CA  0E7F               	movlw	127
 16354  0024CC  0100               	movlb	0	; () banked
 16355  0024CE  1585               	andwf	(___flmul@grs+3)& (0+255),w,b
 16356  0024D0  0100               	movlb	0	; () banked
 16357  0024D2  6F7F               	movwf	(??___flmul+3)& (0+255),b
 16358  0024D4  0100               	movlb	0	; () banked
 16359  0024D6  517C               	movf	??___flmul& (0+255),w,b
 16360  0024D8  0100               	movlb	0	; () banked
 16361  0024DA  117D               	iorwf	(??___flmul+1)& (0+255),w,b
 16362  0024DC  0100               	movlb	0	; () banked
 16363  0024DE  117E               	iorwf	(??___flmul+2)& (0+255),w,b
 16364  0024E0  0100               	movlb	0	; () banked
 16365  0024E2  117F               	iorwf	(??___flmul+3)& (0+255),w,b
 16366  0024E4  B4D8               	btfsc	status,2,c
 16367  0024E6  D001               	goto	u11871
 16368  0024E8  D001               	goto	u11870
 16369  0024EA                     u11871:
 16370  0024EA  D004               	goto	l2724
 16371  0024EC                     u11870:
 16372                           
 16373                           ; BSR set to: 0
 16374  0024EC  0E01               	movlw	1
 16375  0024EE  0100               	movlb	0	; () banked
 16376  0024F0  6F81               	movwf	___flmul@aexp& (0+255),b
 16377  0024F2  D00A               	goto	l2723
 16378  0024F4                     l2724:
 16379                           
 16380                           ; BSR set to: 0
 16381  0024F4  0100               	movlb	0	; () banked
 16382  0024F6  A187               	btfss	___flmul@prod& (0+255),0,b
 16383  0024F8  D001               	goto	u11881
 16384  0024FA  D001               	goto	u11880
 16385  0024FC                     u11881:
 16386  0024FC  D005               	goto	l2723
 16387  0024FE                     u11880:
 16388                           
 16389                           ; BSR set to: 0
 16390  0024FE  0E01               	movlw	1
 16391  002500  0100               	movlb	0	; () banked
 16392  002502  6F81               	movwf	___flmul@aexp& (0+255),b
 16393  002504  D001               	goto	l2723
 16394                           
 16395                           ; BSR set to: 0
 16396  002506  D000               	goto	l2723
 16397  002508                     l2723:
 16398                           
 16399                           ; BSR set to: 0
 16400  002508  0100               	movlb	0	; () banked
 16401  00250A  5181               	movf	___flmul@aexp& (0+255),w,b
 16402  00250C  0100               	movlb	0	; () banked
 16403  00250E  B4D8               	btfsc	status,2,c
 16404  002510  D001               	goto	u11891
 16405  002512  D001               	goto	u11890
 16406  002514                     u11891:
 16407  002514  D027               	goto	l12701
 16408  002516                     u11890:
 16409                           
 16410                           ; BSR set to: 0
 16411  002516  0E01               	movlw	1
 16412  002518  0100               	movlb	0	; () banked
 16413  00251A  2787               	addwf	___flmul@prod& (0+255),f,b
 16414  00251C  0E00               	movlw	0
 16415  00251E  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16416  002520  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16417  002522  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16418                           
 16419                           ; BSR set to: 0
 16420  002524  0100               	movlb	0	; () banked
 16421  002526  A18A               	btfss	(___flmul@prod+3)& (0+255),0,b
 16422  002528  D001               	goto	u11901
 16423  00252A  D001               	goto	u11900
 16424  00252C                     u11901:
 16425  00252C  D01B               	goto	l12701
 16426  00252E                     u11900:
 16427                           
 16428                           ; BSR set to: 0
 16429  00252E  C087  F07C         	movff	___flmul@prod,??___flmul
 16430  002532  C088  F07D         	movff	___flmul@prod+1,??___flmul+1
 16431  002536  C089  F07E         	movff	___flmul@prod+2,??___flmul+2
 16432  00253A  C08A  F07F         	movff	___flmul@prod+3,??___flmul+3
 16433  00253E  0100               	movlb	0	; () banked
 16434  002540  357F               	rlcf	(??___flmul+3)& (0+255),w,b
 16435  002542  337F               	rrcf	(??___flmul+3)& (0+255),f,b
 16436  002544  337E               	rrcf	(??___flmul+2)& (0+255),f,b
 16437  002546  337D               	rrcf	(??___flmul+1)& (0+255),f,b
 16438  002548  337C               	rrcf	??___flmul& (0+255),f,b
 16439  00254A  C07C  F087         	movff	??___flmul,___flmul@prod
 16440  00254E  C07D  F088         	movff	??___flmul+1,___flmul@prod+1
 16441  002552  C07E  F089         	movff	??___flmul+2,___flmul@prod+2
 16442  002556  C07F  F08A         	movff	??___flmul+3,___flmul@prod+3
 16443                           
 16444                           ; BSR set to: 0
 16445  00255A  0100               	movlb	0	; () banked
 16446  00255C  4B8B               	infsnz	___flmul@temp& (0+255),f,b
 16447  00255E  2B8C               	incf	(___flmul@temp+1)& (0+255),f,b
 16448  002560  D001               	goto	l12701
 16449                           
 16450                           ; BSR set to: 0
 16451  002562  D000               	goto	l12701
 16452  002564                     l12701:
 16453                           
 16454                           ; BSR set to: 0
 16455  002564  0100               	movlb	0	; () banked
 16456  002566  BF8C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 16457  002568  D008               	goto	u11911
 16458  00256A  0100               	movlb	0	; () banked
 16459  00256C  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16460  00256E  E106               	bnz	u11910
 16461  002570  0100               	movlb	0	; () banked
 16462  002572  298B               	incf	___flmul@temp& (0+255),w,b
 16463  002574  A0D8               	btfss	status,0,c
 16464  002576  D001               	goto	u11911
 16465  002578  D001               	goto	u11910
 16466  00257A                     u11911:
 16467  00257A  D00A               	goto	l12705
 16468  00257C                     u11910:
 16469                           
 16470                           ; BSR set to: 0
 16471  00257C  0E00               	movlw	0
 16472  00257E  0100               	movlb	0	; () banked
 16473  002580  6F87               	movwf	___flmul@prod& (0+255),b
 16474  002582  0E00               	movlw	0
 16475  002584  6F88               	movwf	(___flmul@prod+1)& (0+255),b
 16476  002586  0E80               	movlw	128
 16477  002588  6F89               	movwf	(___flmul@prod+2)& (0+255),b
 16478  00258A  0E7F               	movlw	127
 16479  00258C  6F8A               	movwf	(___flmul@prod+3)& (0+255),b
 16480  00258E  D033               	goto	l12717
 16481  002590                     l12705:
 16482                           
 16483                           ; BSR set to: 0
 16484  002590  0100               	movlb	0	; () banked
 16485  002592  BF8C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 16486  002594  D009               	goto	u11920
 16487  002596  0100               	movlb	0	; () banked
 16488  002598  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16489  00259A  E105               	bnz	u11921
 16490  00259C  0100               	movlb	0	; () banked
 16491  00259E  058B               	decf	___flmul@temp& (0+255),w,b
 16492  0025A0  B0D8               	btfsc	status,0,c
 16493  0025A2  D001               	goto	u11921
 16494  0025A4  D001               	goto	u11920
 16495  0025A6                     u11921:
 16496  0025A6  D00D               	goto	l2731
 16497  0025A8                     u11920:
 16498                           
 16499                           ; BSR set to: 0
 16500  0025A8  0E00               	movlw	0
 16501  0025AA  0100               	movlb	0	; () banked
 16502  0025AC  6F87               	movwf	___flmul@prod& (0+255),b
 16503  0025AE  0E00               	movlw	0
 16504  0025B0  6F88               	movwf	(___flmul@prod+1)& (0+255),b
 16505  0025B2  0E00               	movlw	0
 16506  0025B4  6F89               	movwf	(___flmul@prod+2)& (0+255),b
 16507  0025B6  0E00               	movlw	0
 16508  0025B8  6F8A               	movwf	(___flmul@prod+3)& (0+255),b
 16509  0025BA  0E00               	movlw	0
 16510  0025BC  0100               	movlb	0	; () banked
 16511  0025BE  6F80               	movwf	___flmul@sign& (0+255),b
 16512  0025C0  D01A               	goto	l12717
 16513  0025C2                     l2731:
 16514                           
 16515                           ; BSR set to: 0
 16516  0025C2  C08B  F086         	movff	___flmul@temp,___flmul@bexp
 16517                           
 16518                           ; BSR set to: 0
 16519  0025C6  0EFF               	movlw	255
 16520  0025C8  0100               	movlb	0	; () banked
 16521  0025CA  1787               	andwf	___flmul@prod& (0+255),f,b
 16522  0025CC  0EFF               	movlw	255
 16523  0025CE  1788               	andwf	(___flmul@prod+1)& (0+255),f,b
 16524  0025D0  0E7F               	movlw	127
 16525  0025D2  1789               	andwf	(___flmul@prod+2)& (0+255),f,b
 16526  0025D4  0E00               	movlw	0
 16527  0025D6  178A               	andwf	(___flmul@prod+3)& (0+255),f,b
 16528                           
 16529                           ; BSR set to: 0
 16530  0025D8  0100               	movlb	0	; () banked
 16531  0025DA  A186               	btfss	___flmul@bexp& (0+255),0,b
 16532  0025DC  D001               	goto	u11931
 16533  0025DE  D001               	goto	u11930
 16534  0025E0                     u11931:
 16535  0025E0  D003               	goto	l12715
 16536  0025E2                     u11930:
 16537                           
 16538                           ; BSR set to: 0
 16539  0025E2  0100               	movlb	0	; () banked
 16540  0025E4  8F89               	bsf	(___flmul@prod+2)& (0+255),7,b
 16541  0025E6  D000               	goto	l12715
 16542  0025E8                     l12715:
 16543                           
 16544                           ; BSR set to: 0
 16545  0025E8  0100               	movlb	0	; () banked
 16546  0025EA  90D8               	bcf	status,0,c
 16547  0025EC  3186               	rrcf	___flmul@bexp& (0+255),w,b
 16548  0025EE  0100               	movlb	0	; () banked
 16549  0025F0  6F8A               	movwf	(___flmul@prod+3)& (0+255),b
 16550  0025F2  D001               	goto	l12717
 16551                           
 16552                           ; BSR set to: 0
 16553  0025F4  D000               	goto	l12717
 16554  0025F6                     l12717:
 16555                           
 16556                           ; BSR set to: 0
 16557  0025F6  0100               	movlb	0	; () banked
 16558  0025F8  5180               	movf	___flmul@sign& (0+255),w,b
 16559  0025FA  0100               	movlb	0	; () banked
 16560  0025FC  138A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 16561                           
 16562                           ; BSR set to: 0
 16563  0025FE  C087  F074         	movff	___flmul@prod,?___flmul
 16564  002602  C088  F075         	movff	___flmul@prod+1,?___flmul+1
 16565  002606  C089  F076         	movff	___flmul@prod+2,?___flmul+2
 16566  00260A  C08A  F077         	movff	___flmul@prod+3,?___flmul+3
 16567  00260E  D000               	goto	l2718
 16568  002610                     l2718:
 16569                           
 16570                           ; BSR set to: 0
 16571  002610  0012               	return		;funcret
 16572  002612                     __end_of___flmul:
 16573                           	opt stack 0
 16574                           tblptru	equ	0xFF8
 16575                           tblptrh	equ	0xFF7
 16576                           tblptrl	equ	0xFF6
 16577                           tablat	equ	0xFF5
 16578                           prodh	equ	0xFF4
 16579                           prodl	equ	0xFF3
 16580                           intcon	equ	0xFF2
 16581                           intcon3	equ	0xFF0
 16582                           postinc0	equ	0xFEE
 16583                           wreg	equ	0xFE8
 16584                           indf1	equ	0xFE7
 16585                           postdec1	equ	0xFE5
 16586                           fsr1h	equ	0xFE2
 16587                           fsr1l	equ	0xFE1
 16588                           indf2	equ	0xFDF
 16589                           fsr2h	equ	0xFDA
 16590                           fsr2l	equ	0xFD9
 16591                           status	equ	0xFD8
 16592                           
 16593 ;; *************** function ___fldiv *****************
 16594 ;; Defined at:
 16595 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\sprcdiv.c"
 16596 ;; Parameters:    Size  Location     Type
 16597 ;;  b               4   45[BANK0 ] unsigned char 
 16598 ;;  a               4   49[BANK0 ] unsigned char 
 16599 ;; Auto vars:     Size  Location     Type
 16600 ;;  grs             4   64[BANK0 ] unsigned long 
 16601 ;;  rem             4   58[BANK0 ] unsigned long 
 16602 ;;  new_exp         2   62[BANK0 ] int 
 16603 ;;  aexp            1   69[BANK0 ] unsigned char 
 16604 ;;  bexp            1   68[BANK0 ] unsigned char 
 16605 ;;  sign            1   57[BANK0 ] unsigned char 
 16606 ;; Return value:  Size  Location     Type
 16607 ;;                  4   45[BANK0 ] unsigned char 
 16608 ;; Registers used:
 16609 ;;		wreg, status,2, status,0
 16610 ;; Tracked objects:
 16611 ;;		On entry : 0/0
 16612 ;;		On exit  : 0/0
 16613 ;;		Unchanged: 0/0
 16614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16615 ;;      Params:         0       8       0       0       0       0       0       0       0
 16616 ;;      Locals:         0      13       0       0       0       0       0       0       0
 16617 ;;      Temps:          0       4       0       0       0       0       0       0       0
 16618 ;;      Totals:         0      25       0       0       0       0       0       0       0
 16619 ;;Total ram usage:       25 bytes
 16620 ;; Hardware stack levels used:    1
 16621 ;; Hardware stack levels required when called:   11
 16622 ;; This function calls:
 16623 ;;		Nothing
 16624 ;; This function is called by:
 16625 ;;		_ADC_TempConversion
 16626 ;; This function uses a non-reentrant model
 16627 ;;
 16628                           
 16629                           	psect	text49
 16630  002612                     __ptext49:
 16631                           	opt stack 0
 16632  002612                     ___fldiv:
 16633                           	opt stack 16
 16634                           
 16635                           ; BSR set to: 0
 16636                           ;incstack = 0
 16637  002612  0100               	movlb	0	; () banked
 16638  002614  5190               	movf	(___fldiv@b+3)& (0+255),w,b
 16639  002616  0B80               	andlw	128
 16640  002618  0100               	movlb	0	; () banked
 16641  00261A  6F99               	movwf	___fldiv@sign& (0+255),b
 16642  00261C  0100               	movlb	0	; () banked
 16643  00261E  5190               	movf	(___fldiv@b+3)& (0+255),w,b
 16644  002620  2590               	addwf	(___fldiv@b+3)& (0+255),w,b
 16645  002622  0100               	movlb	0	; () banked
 16646  002624  6FA4               	movwf	___fldiv@bexp& (0+255),b
 16647                           
 16648                           ; BSR set to: 0
 16649  002626  0100               	movlb	0	; () banked
 16650  002628  AF8F               	btfss	(___fldiv@b+2)& (0+255),7,b
 16651  00262A  D001               	goto	u11521
 16652  00262C  D001               	goto	u11520
 16653  00262E                     u11521:
 16654  00262E  D003               	goto	l12463
 16655  002630                     u11520:
 16656                           
 16657                           ; BSR set to: 0
 16658  002630  0100               	movlb	0	; () banked
 16659  002632  81A4               	bsf	___fldiv@bexp& (0+255),0,b
 16660  002634  D000               	goto	l12463
 16661  002636                     l12463:
 16662                           
 16663                           ; BSR set to: 0
 16664  002636  0100               	movlb	0	; () banked
 16665  002638  51A4               	movf	___fldiv@bexp& (0+255),w,b
 16666  00263A  0100               	movlb	0	; () banked
 16667  00263C  B4D8               	btfsc	status,2,c
 16668  00263E  D001               	goto	u11531
 16669  002640  D001               	goto	u11530
 16670  002642                     u11531:
 16671  002642  D016               	goto	l12473
 16672  002644                     u11530:
 16673                           
 16674                           ; BSR set to: 0
 16675  002644  0100               	movlb	0	; () banked
 16676  002646  29A4               	incf	___fldiv@bexp& (0+255),w,b
 16677  002648  A4D8               	btfss	status,2,c
 16678  00264A  D001               	goto	u11541
 16679  00264C  D001               	goto	u11540
 16680  00264E                     u11541:
 16681  00264E  D00A               	goto	l12469
 16682  002650                     u11540:
 16683                           
 16684                           ; BSR set to: 0
 16685  002650  0E00               	movlw	0
 16686  002652  0100               	movlb	0	; () banked
 16687  002654  6F8D               	movwf	___fldiv@b& (0+255),b
 16688  002656  0E00               	movlw	0
 16689  002658  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 16690  00265A  0E00               	movlw	0
 16691  00265C  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 16692  00265E  0E00               	movlw	0
 16693  002660  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 16694  002662  D000               	goto	l12469
 16695  002664                     l12469:
 16696                           
 16697                           ; BSR set to: 0
 16698  002664  0100               	movlb	0	; () banked
 16699  002666  8F8F               	bsf	(___fldiv@b+2)& (0+255),7,b
 16700                           
 16701                           ; BSR set to: 0
 16702  002668  0E00               	movlw	0
 16703  00266A  0100               	movlb	0	; () banked
 16704  00266C  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 16705  00266E  D00A               	goto	l12475
 16706  002670                     l12473:
 16707                           
 16708                           ; BSR set to: 0
 16709  002670  0E00               	movlw	0
 16710  002672  0100               	movlb	0	; () banked
 16711  002674  6F8D               	movwf	___fldiv@b& (0+255),b
 16712  002676  0E00               	movlw	0
 16713  002678  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 16714  00267A  0E00               	movlw	0
 16715  00267C  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 16716  00267E  0E00               	movlw	0
 16717  002680  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 16718  002682  D000               	goto	l12475
 16719  002684                     l12475:
 16720                           
 16721                           ; BSR set to: 0
 16722  002684  0100               	movlb	0	; () banked
 16723  002686  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 16724  002688  0B80               	andlw	128
 16725  00268A  0100               	movlb	0	; () banked
 16726  00268C  1B99               	xorwf	___fldiv@sign& (0+255),f,b
 16727                           
 16728                           ; BSR set to: 0
 16729  00268E  0100               	movlb	0	; () banked
 16730  002690  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 16731  002692  2594               	addwf	(___fldiv@a+3)& (0+255),w,b
 16732  002694  0100               	movlb	0	; () banked
 16733  002696  6FA5               	movwf	___fldiv@aexp& (0+255),b
 16734                           
 16735                           ; BSR set to: 0
 16736  002698  0100               	movlb	0	; () banked
 16737  00269A  AF93               	btfss	(___fldiv@a+2)& (0+255),7,b
 16738  00269C  D001               	goto	u11551
 16739  00269E  D001               	goto	u11550
 16740  0026A0                     u11551:
 16741  0026A0  D003               	goto	l12483
 16742  0026A2                     u11550:
 16743                           
 16744                           ; BSR set to: 0
 16745  0026A2  0100               	movlb	0	; () banked
 16746  0026A4  81A5               	bsf	___fldiv@aexp& (0+255),0,b
 16747  0026A6  D000               	goto	l12483
 16748  0026A8                     l12483:
 16749                           
 16750                           ; BSR set to: 0
 16751  0026A8  0100               	movlb	0	; () banked
 16752  0026AA  51A5               	movf	___fldiv@aexp& (0+255),w,b
 16753  0026AC  0100               	movlb	0	; () banked
 16754  0026AE  B4D8               	btfsc	status,2,c
 16755  0026B0  D001               	goto	u11561
 16756  0026B2  D001               	goto	u11560
 16757  0026B4                     u11561:
 16758  0026B4  D016               	goto	l12493
 16759  0026B6                     u11560:
 16760                           
 16761                           ; BSR set to: 0
 16762  0026B6  0100               	movlb	0	; () banked
 16763  0026B8  29A5               	incf	___fldiv@aexp& (0+255),w,b
 16764  0026BA  A4D8               	btfss	status,2,c
 16765  0026BC  D001               	goto	u11571
 16766  0026BE  D001               	goto	u11570
 16767  0026C0                     u11571:
 16768  0026C0  D00A               	goto	l12489
 16769  0026C2                     u11570:
 16770                           
 16771                           ; BSR set to: 0
 16772  0026C2  0E00               	movlw	0
 16773  0026C4  0100               	movlb	0	; () banked
 16774  0026C6  6F91               	movwf	___fldiv@a& (0+255),b
 16775  0026C8  0E00               	movlw	0
 16776  0026CA  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 16777  0026CC  0E00               	movlw	0
 16778  0026CE  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 16779  0026D0  0E00               	movlw	0
 16780  0026D2  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 16781  0026D4  D000               	goto	l12489
 16782  0026D6                     l12489:
 16783                           
 16784                           ; BSR set to: 0
 16785  0026D6  0100               	movlb	0	; () banked
 16786  0026D8  8F93               	bsf	(___fldiv@a+2)& (0+255),7,b
 16787                           
 16788                           ; BSR set to: 0
 16789  0026DA  0E00               	movlw	0
 16790  0026DC  0100               	movlb	0	; () banked
 16791  0026DE  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 16792  0026E0  D00A               	goto	l12495
 16793  0026E2                     l12493:
 16794                           
 16795                           ; BSR set to: 0
 16796  0026E2  0E00               	movlw	0
 16797  0026E4  0100               	movlb	0	; () banked
 16798  0026E6  6F91               	movwf	___fldiv@a& (0+255),b
 16799  0026E8  0E00               	movlw	0
 16800  0026EA  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 16801  0026EC  0E00               	movlw	0
 16802  0026EE  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 16803  0026F0  0E00               	movlw	0
 16804  0026F2  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 16805  0026F4  D000               	goto	l12495
 16806  0026F6                     l12495:
 16807                           
 16808                           ; BSR set to: 0
 16809  0026F6  0100               	movlb	0	; () banked
 16810  0026F8  5191               	movf	___fldiv@a& (0+255),w,b
 16811  0026FA  0100               	movlb	0	; () banked
 16812  0026FC  1192               	iorwf	(___fldiv@a+1)& (0+255),w,b
 16813  0026FE  0100               	movlb	0	; () banked
 16814  002700  1193               	iorwf	(___fldiv@a+2)& (0+255),w,b
 16815  002702  0100               	movlb	0	; () banked
 16816  002704  1194               	iorwf	(___fldiv@a+3)& (0+255),w,b
 16817  002706  A4D8               	btfss	status,2,c
 16818  002708  D001               	goto	u11581
 16819  00270A  D001               	goto	u11580
 16820  00270C                     u11581:
 16821  00270C  D018               	goto	l12505
 16822  00270E                     u11580:
 16823                           
 16824                           ; BSR set to: 0
 16825  00270E  0E00               	movlw	0
 16826  002710  0100               	movlb	0	; () banked
 16827  002712  6F8D               	movwf	___fldiv@b& (0+255),b
 16828  002714  0E00               	movlw	0
 16829  002716  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 16830  002718  0E00               	movlw	0
 16831  00271A  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 16832  00271C  0E00               	movlw	0
 16833  00271E  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 16834                           
 16835                           ; BSR set to: 0
 16836  002720  0100               	movlb	0	; () banked
 16837  002722  0E80               	movlw	128
 16838  002724  138F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 16839  002726  0E7F               	movlw	127
 16840  002728  1390               	iorwf	(___fldiv@b+3)& (0+255),f,b
 16841                           
 16842                           ; BSR set to: 0
 16843  00272A  C08D  F08D         	movff	___fldiv@b,?___fldiv
 16844  00272E  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 16845  002732  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 16846  002736  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 16847  00273A  D194               	goto	l2682
 16848                           
 16849                           ; BSR set to: 0
 16850  00273C  D193               	goto	l2682
 16851  00273E                     l12505:
 16852                           
 16853                           ; BSR set to: 0
 16854  00273E  0100               	movlb	0	; () banked
 16855  002740  51A4               	movf	___fldiv@bexp& (0+255),w,b
 16856  002742  0100               	movlb	0	; () banked
 16857  002744  A4D8               	btfss	status,2,c
 16858  002746  D001               	goto	u11591
 16859  002748  D001               	goto	u11590
 16860  00274A                     u11591:
 16861  00274A  D013               	goto	l12513
 16862  00274C                     u11590:
 16863                           
 16864                           ; BSR set to: 0
 16865  00274C  0E00               	movlw	0
 16866  00274E  0100               	movlb	0	; () banked
 16867  002750  6F8D               	movwf	___fldiv@b& (0+255),b
 16868  002752  0E00               	movlw	0
 16869  002754  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 16870  002756  0E00               	movlw	0
 16871  002758  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 16872  00275A  0E00               	movlw	0
 16873  00275C  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 16874                           
 16875                           ; BSR set to: 0
 16876  00275E  C08D  F08D         	movff	___fldiv@b,?___fldiv
 16877  002762  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 16878  002766  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 16879  00276A  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 16880  00276E  D17A               	goto	l2682
 16881                           
 16882                           ; BSR set to: 0
 16883  002770  D179               	goto	l2682
 16884  002772                     l12513:
 16885                           
 16886                           ; BSR set to: 0
 16887  002772  0100               	movlb	0	; () banked
 16888  002774  51A5               	movf	___fldiv@aexp& (0+255),w,b
 16889  002776  0100               	movlb	0	; () banked
 16890  002778  6F95               	movwf	??___fldiv& (0+255),b
 16891  00277A  6B96               	clrf	(??___fldiv+1)& (0+255),b
 16892  00277C  0100               	movlb	0	; () banked
 16893  00277E  1F95               	comf	??___fldiv& (0+255),f,b
 16894  002780  1F96               	comf	(??___fldiv+1)& (0+255),f,b
 16895  002782  4B95               	infsnz	??___fldiv& (0+255),f,b
 16896  002784  2B96               	incf	(??___fldiv+1)& (0+255),f,b
 16897  002786  0100               	movlb	0	; () banked
 16898  002788  51A4               	movf	___fldiv@bexp& (0+255),w,b
 16899  00278A  0100               	movlb	0	; () banked
 16900  00278C  6F97               	movwf	(??___fldiv+2)& (0+255),b
 16901  00278E  6B98               	clrf	(??___fldiv+3)& (0+255),b
 16902  002790  0100               	movlb	0	; () banked
 16903  002792  5195               	movf	??___fldiv& (0+255),w,b
 16904  002794  0100               	movlb	0	; () banked
 16905  002796  2797               	addwf	(??___fldiv+2)& (0+255),f,b
 16906  002798  0100               	movlb	0	; () banked
 16907  00279A  5196               	movf	(??___fldiv+1)& (0+255),w,b
 16908  00279C  0100               	movlb	0	; () banked
 16909  00279E  2398               	addwfc	(??___fldiv+3)& (0+255),f,b
 16910  0027A0  0E7F               	movlw	127
 16911  0027A2  0100               	movlb	0	; () banked
 16912  0027A4  2597               	addwf	(??___fldiv+2)& (0+255),w,b
 16913  0027A6  0100               	movlb	0	; () banked
 16914  0027A8  6F9E               	movwf	___fldiv@new_exp& (0+255),b
 16915  0027AA  0E00               	movlw	0
 16916  0027AC  0100               	movlb	0	; () banked
 16917  0027AE  2198               	addwfc	(??___fldiv+3)& (0+255),w,b
 16918  0027B0  0100               	movlb	0	; () banked
 16919  0027B2  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 16920                           
 16921                           ; BSR set to: 0
 16922  0027B4  C08D  F09A         	movff	___fldiv@b,___fldiv@rem
 16923  0027B8  C08E  F09B         	movff	___fldiv@b+1,___fldiv@rem+1
 16924  0027BC  C08F  F09C         	movff	___fldiv@b+2,___fldiv@rem+2
 16925  0027C0  C090  F09D         	movff	___fldiv@b+3,___fldiv@rem+3
 16926                           
 16927                           ; BSR set to: 0
 16928  0027C4  0E00               	movlw	0
 16929  0027C6  0100               	movlb	0	; () banked
 16930  0027C8  6F8D               	movwf	___fldiv@b& (0+255),b
 16931  0027CA  0E00               	movlw	0
 16932  0027CC  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 16933  0027CE  0E00               	movlw	0
 16934  0027D0  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 16935  0027D2  0E00               	movlw	0
 16936  0027D4  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 16937                           
 16938                           ; BSR set to: 0
 16939  0027D6  0E00               	movlw	0
 16940  0027D8  0100               	movlb	0	; () banked
 16941  0027DA  6FA0               	movwf	___fldiv@grs& (0+255),b
 16942  0027DC  0E00               	movlw	0
 16943  0027DE  6FA1               	movwf	(___fldiv@grs+1)& (0+255),b
 16944  0027E0  0E00               	movlw	0
 16945  0027E2  6FA2               	movwf	(___fldiv@grs+2)& (0+255),b
 16946  0027E4  0E00               	movlw	0
 16947  0027E6  6FA3               	movwf	(___fldiv@grs+3)& (0+255),b
 16948                           
 16949                           ; BSR set to: 0
 16950  0027E8  0E00               	movlw	0
 16951  0027EA  0100               	movlb	0	; () banked
 16952  0027EC  6FA5               	movwf	___fldiv@aexp& (0+255),b
 16953  0027EE  D04A               	goto	l2684
 16954  0027F0                     l12523:
 16955                           
 16956                           ; BSR set to: 0
 16957  0027F0  0100               	movlb	0	; () banked
 16958  0027F2  51A5               	movf	___fldiv@aexp& (0+255),w,b
 16959  0027F4  0100               	movlb	0	; () banked
 16960  0027F6  B4D8               	btfsc	status,2,c
 16961  0027F8  D001               	goto	u11601
 16962  0027FA  D001               	goto	u11600
 16963  0027FC                     u11601:
 16964  0027FC  D01A               	goto	l12531
 16965  0027FE                     u11600:
 16966                           
 16967                           ; BSR set to: 0
 16968  0027FE  0100               	movlb	0	; () banked
 16969  002800  90D8               	bcf	status,0,c
 16970  002802  379A               	rlcf	___fldiv@rem& (0+255),f,b
 16971  002804  379B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 16972  002806  379C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 16973  002808  379D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 16974  00280A  0100               	movlb	0	; () banked
 16975  00280C  90D8               	bcf	status,0,c
 16976  00280E  378D               	rlcf	___fldiv@b& (0+255),f,b
 16977  002810  378E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 16978  002812  378F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 16979  002814  3790               	rlcf	(___fldiv@b+3)& (0+255),f,b
 16980                           
 16981                           ; BSR set to: 0
 16982  002816  0100               	movlb	0	; () banked
 16983  002818  AFA3               	btfss	(___fldiv@grs+3)& (0+255),7,b
 16984  00281A  D001               	goto	u11611
 16985  00281C  D001               	goto	u11610
 16986  00281E                     u11611:
 16987  00281E  D002               	goto	l2687
 16988  002820                     u11610:
 16989                           
 16990                           ; BSR set to: 0
 16991  002820  0100               	movlb	0	; () banked
 16992  002822  818D               	bsf	___fldiv@b& (0+255),0,b
 16993  002824                     l2687:
 16994                           
 16995                           ; BSR set to: 0
 16996  002824  0100               	movlb	0	; () banked
 16997  002826  90D8               	bcf	status,0,c
 16998  002828  37A0               	rlcf	___fldiv@grs& (0+255),f,b
 16999  00282A  37A1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 17000  00282C  37A2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 17001  00282E  37A3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 17002  002830  D000               	goto	l12531
 17003  002832                     l12531:
 17004                           
 17005                           ; BSR set to: 0
 17006  002832  0100               	movlb	0	; () banked
 17007  002834  5191               	movf	___fldiv@a& (0+255),w,b
 17008  002836  0100               	movlb	0	; () banked
 17009  002838  5D9A               	subwf	___fldiv@rem& (0+255),w,b
 17010  00283A  0100               	movlb	0	; () banked
 17011  00283C  5192               	movf	(___fldiv@a+1)& (0+255),w,b
 17012  00283E  0100               	movlb	0	; () banked
 17013  002840  599B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 17014  002842  0100               	movlb	0	; () banked
 17015  002844  5193               	movf	(___fldiv@a+2)& (0+255),w,b
 17016  002846  0100               	movlb	0	; () banked
 17017  002848  599C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 17018  00284A  0100               	movlb	0	; () banked
 17019  00284C  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 17020  00284E  0100               	movlb	0	; () banked
 17021  002850  599D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 17022  002852  A0D8               	btfss	status,0,c
 17023  002854  D001               	goto	u11621
 17024  002856  D001               	goto	u11620
 17025  002858                     u11621:
 17026  002858  D013               	goto	l12537
 17027  00285A                     u11620:
 17028                           
 17029                           ; BSR set to: 0
 17030  00285A  0100               	movlb	0	; () banked
 17031  00285C  8DA3               	bsf	(___fldiv@grs+3)& (0+255),6,b
 17032                           
 17033                           ; BSR set to: 0
 17034  00285E  0100               	movlb	0	; () banked
 17035  002860  5191               	movf	___fldiv@a& (0+255),w,b
 17036  002862  0100               	movlb	0	; () banked
 17037  002864  5F9A               	subwf	___fldiv@rem& (0+255),f,b
 17038  002866  0100               	movlb	0	; () banked
 17039  002868  5192               	movf	(___fldiv@a+1)& (0+255),w,b
 17040  00286A  0100               	movlb	0	; () banked
 17041  00286C  5B9B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 17042  00286E  0100               	movlb	0	; () banked
 17043  002870  5193               	movf	(___fldiv@a+2)& (0+255),w,b
 17044  002872  0100               	movlb	0	; () banked
 17045  002874  5B9C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 17046  002876  0100               	movlb	0	; () banked
 17047  002878  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 17048  00287A  0100               	movlb	0	; () banked
 17049  00287C  5B9D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 17050  00287E  D000               	goto	l12537
 17051  002880                     l12537:
 17052                           
 17053                           ; BSR set to: 0
 17054  002880  0100               	movlb	0	; () banked
 17055  002882  2BA5               	incf	___fldiv@aexp& (0+255),f,b
 17056  002884                     l2684:
 17057                           
 17058                           ; BSR set to: 0
 17059  002884  0E19               	movlw	25
 17060  002886  0100               	movlb	0	; () banked
 17061  002888  65A5               	cpfsgt	___fldiv@aexp& (0+255),b
 17062  00288A  D001               	goto	u11631
 17063  00288C  D001               	goto	u11630
 17064  00288E                     u11631:
 17065  00288E  D7B0               	goto	l12523
 17066  002890                     u11630:
 17067  002890  D000               	goto	l12539
 17068  002892                     l12539:
 17069                           
 17070                           ; BSR set to: 0
 17071  002892  0100               	movlb	0	; () banked
 17072  002894  519A               	movf	___fldiv@rem& (0+255),w,b
 17073  002896  0100               	movlb	0	; () banked
 17074  002898  119B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 17075  00289A  0100               	movlb	0	; () banked
 17076  00289C  119C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 17077  00289E  0100               	movlb	0	; () banked
 17078  0028A0  119D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 17079  0028A2  B4D8               	btfsc	status,2,c
 17080  0028A4  D001               	goto	u11641
 17081  0028A6  D001               	goto	u11640
 17082  0028A8                     u11641:
 17083  0028A8  D01C               	goto	l12549
 17084  0028AA                     u11640:
 17085                           
 17086                           ; BSR set to: 0
 17087  0028AA  0100               	movlb	0	; () banked
 17088  0028AC  81A0               	bsf	___fldiv@grs& (0+255),0,b
 17089  0028AE  D019               	goto	l12549
 17090                           
 17091                           ; BSR set to: 0
 17092  0028B0  D018               	goto	l12549
 17093  0028B2                     l12543:
 17094                           
 17095                           ; BSR set to: 0
 17096  0028B2  0100               	movlb	0	; () banked
 17097  0028B4  90D8               	bcf	status,0,c
 17098  0028B6  378D               	rlcf	___fldiv@b& (0+255),f,b
 17099  0028B8  378E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 17100  0028BA  378F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 17101  0028BC  3790               	rlcf	(___fldiv@b+3)& (0+255),f,b
 17102                           
 17103                           ; BSR set to: 0
 17104  0028BE  0100               	movlb	0	; () banked
 17105  0028C0  AFA3               	btfss	(___fldiv@grs+3)& (0+255),7,b
 17106  0028C2  D001               	goto	u11651
 17107  0028C4  D001               	goto	u11650
 17108  0028C6                     u11651:
 17109  0028C6  D002               	goto	l2693
 17110  0028C8                     u11650:
 17111                           
 17112                           ; BSR set to: 0
 17113  0028C8  0100               	movlb	0	; () banked
 17114  0028CA  818D               	bsf	___fldiv@b& (0+255),0,b
 17115  0028CC                     l2693:
 17116                           
 17117                           ; BSR set to: 0
 17118  0028CC  0100               	movlb	0	; () banked
 17119  0028CE  90D8               	bcf	status,0,c
 17120  0028D0  37A0               	rlcf	___fldiv@grs& (0+255),f,b
 17121  0028D2  37A1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 17122  0028D4  37A2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 17123  0028D6  37A3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 17124  0028D8  0100               	movlb	0	; () banked
 17125  0028DA  079E               	decf	___fldiv@new_exp& (0+255),f,b
 17126  0028DC  A0D8               	btfss	status,0,c
 17127  0028DE  079F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 17128  0028E0  D000               	goto	l12549
 17129  0028E2                     l12549:
 17130                           
 17131                           ; BSR set to: 0
 17132  0028E2  0100               	movlb	0	; () banked
 17133  0028E4  AF8F               	btfss	(___fldiv@b+2)& (0+255),7,b
 17134  0028E6  D001               	goto	u11661
 17135  0028E8  D001               	goto	u11660
 17136  0028EA                     u11661:
 17137  0028EA  D7E3               	goto	l12543
 17138  0028EC                     u11660:
 17139  0028EC  D000               	goto	l12551
 17140  0028EE                     l12551:
 17141                           
 17142                           ; BSR set to: 0
 17143  0028EE  0E00               	movlw	0
 17144  0028F0  0100               	movlb	0	; () banked
 17145  0028F2  6FA5               	movwf	___fldiv@aexp& (0+255),b
 17146                           
 17147                           ; BSR set to: 0
 17148  0028F4  0100               	movlb	0	; () banked
 17149  0028F6  AFA3               	btfss	(___fldiv@grs+3)& (0+255),7,b
 17150  0028F8  D001               	goto	u11671
 17151  0028FA  D001               	goto	u11670
 17152  0028FC                     u11671:
 17153  0028FC  D02E               	goto	l2695
 17154  0028FE                     u11670:
 17155                           
 17156                           ; BSR set to: 0
 17157  0028FE  0EFF               	movlw	255
 17158  002900  0100               	movlb	0	; () banked
 17159  002902  15A0               	andwf	___fldiv@grs& (0+255),w,b
 17160  002904  0100               	movlb	0	; () banked
 17161  002906  6F95               	movwf	??___fldiv& (0+255),b
 17162  002908  0EFF               	movlw	255
 17163  00290A  0100               	movlb	0	; () banked
 17164  00290C  15A1               	andwf	(___fldiv@grs+1)& (0+255),w,b
 17165  00290E  0100               	movlb	0	; () banked
 17166  002910  6F96               	movwf	(??___fldiv+1)& (0+255),b
 17167  002912  0EFF               	movlw	255
 17168  002914  0100               	movlb	0	; () banked
 17169  002916  15A2               	andwf	(___fldiv@grs+2)& (0+255),w,b
 17170  002918  0100               	movlb	0	; () banked
 17171  00291A  6F97               	movwf	(??___fldiv+2)& (0+255),b
 17172  00291C  0E7F               	movlw	127
 17173  00291E  0100               	movlb	0	; () banked
 17174  002920  15A3               	andwf	(___fldiv@grs+3)& (0+255),w,b
 17175  002922  0100               	movlb	0	; () banked
 17176  002924  6F98               	movwf	(??___fldiv+3)& (0+255),b
 17177  002926  0100               	movlb	0	; () banked
 17178  002928  5195               	movf	??___fldiv& (0+255),w,b
 17179  00292A  0100               	movlb	0	; () banked
 17180  00292C  1196               	iorwf	(??___fldiv+1)& (0+255),w,b
 17181  00292E  0100               	movlb	0	; () banked
 17182  002930  1197               	iorwf	(??___fldiv+2)& (0+255),w,b
 17183  002932  0100               	movlb	0	; () banked
 17184  002934  1198               	iorwf	(??___fldiv+3)& (0+255),w,b
 17185  002936  B4D8               	btfsc	status,2,c
 17186  002938  D001               	goto	u11681
 17187  00293A  D001               	goto	u11680
 17188  00293C                     u11681:
 17189  00293C  D004               	goto	l2696
 17190  00293E                     u11680:
 17191                           
 17192                           ; BSR set to: 0
 17193  00293E  0E01               	movlw	1
 17194  002940  0100               	movlb	0	; () banked
 17195  002942  6FA5               	movwf	___fldiv@aexp& (0+255),b
 17196  002944  D00A               	goto	l2695
 17197  002946                     l2696:
 17198                           
 17199                           ; BSR set to: 0
 17200  002946  0100               	movlb	0	; () banked
 17201  002948  A18D               	btfss	___fldiv@b& (0+255),0,b
 17202  00294A  D001               	goto	u11691
 17203  00294C  D001               	goto	u11690
 17204  00294E                     u11691:
 17205  00294E  D005               	goto	l2695
 17206  002950                     u11690:
 17207                           
 17208                           ; BSR set to: 0
 17209  002950  0E01               	movlw	1
 17210  002952  0100               	movlb	0	; () banked
 17211  002954  6FA5               	movwf	___fldiv@aexp& (0+255),b
 17212  002956  D001               	goto	l2695
 17213                           
 17214                           ; BSR set to: 0
 17215  002958  D000               	goto	l2695
 17216  00295A                     l2695:
 17217                           
 17218                           ; BSR set to: 0
 17219  00295A  0100               	movlb	0	; () banked
 17220  00295C  51A5               	movf	___fldiv@aexp& (0+255),w,b
 17221  00295E  0100               	movlb	0	; () banked
 17222  002960  B4D8               	btfsc	status,2,c
 17223  002962  D001               	goto	u11701
 17224  002964  D001               	goto	u11700
 17225  002966                     u11701:
 17226  002966  D027               	goto	l12569
 17227  002968                     u11700:
 17228                           
 17229                           ; BSR set to: 0
 17230  002968  0E01               	movlw	1
 17231  00296A  0100               	movlb	0	; () banked
 17232  00296C  278D               	addwf	___fldiv@b& (0+255),f,b
 17233  00296E  0E00               	movlw	0
 17234  002970  238E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 17235  002972  238F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 17236  002974  2390               	addwfc	(___fldiv@b+3)& (0+255),f,b
 17237                           
 17238                           ; BSR set to: 0
 17239  002976  0100               	movlb	0	; () banked
 17240  002978  A190               	btfss	(___fldiv@b+3)& (0+255),0,b
 17241  00297A  D001               	goto	u11711
 17242  00297C  D001               	goto	u11710
 17243  00297E                     u11711:
 17244  00297E  D01B               	goto	l12569
 17245  002980                     u11710:
 17246                           
 17247                           ; BSR set to: 0
 17248  002980  C08D  F095         	movff	___fldiv@b,??___fldiv
 17249  002984  C08E  F096         	movff	___fldiv@b+1,??___fldiv+1
 17250  002988  C08F  F097         	movff	___fldiv@b+2,??___fldiv+2
 17251  00298C  C090  F098         	movff	___fldiv@b+3,??___fldiv+3
 17252  002990  0100               	movlb	0	; () banked
 17253  002992  3598               	rlcf	(??___fldiv+3)& (0+255),w,b
 17254  002994  3398               	rrcf	(??___fldiv+3)& (0+255),f,b
 17255  002996  3397               	rrcf	(??___fldiv+2)& (0+255),f,b
 17256  002998  3396               	rrcf	(??___fldiv+1)& (0+255),f,b
 17257  00299A  3395               	rrcf	??___fldiv& (0+255),f,b
 17258  00299C  C095  F08D         	movff	??___fldiv,___fldiv@b
 17259  0029A0  C096  F08E         	movff	??___fldiv+1,___fldiv@b+1
 17260  0029A4  C097  F08F         	movff	??___fldiv+2,___fldiv@b+2
 17261  0029A8  C098  F090         	movff	??___fldiv+3,___fldiv@b+3
 17262                           
 17263                           ; BSR set to: 0
 17264  0029AC  0100               	movlb	0	; () banked
 17265  0029AE  4B9E               	infsnz	___fldiv@new_exp& (0+255),f,b
 17266  0029B0  2B9F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 17267  0029B2  D001               	goto	l12569
 17268                           
 17269                           ; BSR set to: 0
 17270  0029B4  D000               	goto	l12569
 17271  0029B6                     l12569:
 17272                           
 17273                           ; BSR set to: 0
 17274  0029B6  0100               	movlb	0	; () banked
 17275  0029B8  BF9F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 17276  0029BA  D008               	goto	u11721
 17277  0029BC  0100               	movlb	0	; () banked
 17278  0029BE  519F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 17279  0029C0  E106               	bnz	u11720
 17280  0029C2  0100               	movlb	0	; () banked
 17281  0029C4  299E               	incf	___fldiv@new_exp& (0+255),w,b
 17282  0029C6  A0D8               	btfss	status,0,c
 17283  0029C8  D001               	goto	u11721
 17284  0029CA  D001               	goto	u11720
 17285  0029CC                     u11721:
 17286  0029CC  D00E               	goto	l12573
 17287  0029CE                     u11720:
 17288                           
 17289                           ; BSR set to: 0
 17290  0029CE  0E00               	movlw	0
 17291  0029D0  0100               	movlb	0	; () banked
 17292  0029D2  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 17293  0029D4  699E               	setf	___fldiv@new_exp& (0+255),b
 17294  0029D6  0E00               	movlw	0
 17295  0029D8  0100               	movlb	0	; () banked
 17296  0029DA  6F8D               	movwf	___fldiv@b& (0+255),b
 17297  0029DC  0E00               	movlw	0
 17298  0029DE  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 17299  0029E0  0E00               	movlw	0
 17300  0029E2  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 17301  0029E4  0E00               	movlw	0
 17302  0029E6  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 17303  0029E8  D000               	goto	l12573
 17304  0029EA                     l12573:
 17305                           
 17306                           ; BSR set to: 0
 17307  0029EA  0100               	movlb	0	; () banked
 17308  0029EC  BF9F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 17309  0029EE  D009               	goto	u11730
 17310  0029F0  0100               	movlb	0	; () banked
 17311  0029F2  519F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 17312  0029F4  E105               	bnz	u11731
 17313  0029F6  0100               	movlb	0	; () banked
 17314  0029F8  059E               	decf	___fldiv@new_exp& (0+255),w,b
 17315  0029FA  B0D8               	btfsc	status,0,c
 17316  0029FC  D001               	goto	u11731
 17317  0029FE  D001               	goto	u11730
 17318  002A00                     u11731:
 17319  002A00  D012               	goto	l12577
 17320  002A02                     u11730:
 17321                           
 17322                           ; BSR set to: 0
 17323  002A02  0E00               	movlw	0
 17324  002A04  0100               	movlb	0	; () banked
 17325  002A06  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 17326  002A08  0E00               	movlw	0
 17327  002A0A  6F9E               	movwf	___fldiv@new_exp& (0+255),b
 17328  002A0C  0E00               	movlw	0
 17329  002A0E  0100               	movlb	0	; () banked
 17330  002A10  6F8D               	movwf	___fldiv@b& (0+255),b
 17331  002A12  0E00               	movlw	0
 17332  002A14  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 17333  002A16  0E00               	movlw	0
 17334  002A18  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 17335  002A1A  0E00               	movlw	0
 17336  002A1C  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 17337  002A1E  0E00               	movlw	0
 17338  002A20  0100               	movlb	0	; () banked
 17339  002A22  6F99               	movwf	___fldiv@sign& (0+255),b
 17340  002A24  D000               	goto	l12577
 17341  002A26                     l12577:
 17342                           
 17343                           ; BSR set to: 0
 17344  002A26  C09E  F0A4         	movff	___fldiv@new_exp,___fldiv@bexp
 17345                           
 17346                           ; BSR set to: 0
 17347  002A2A  0100               	movlb	0	; () banked
 17348  002A2C  A1A4               	btfss	___fldiv@bexp& (0+255),0,b
 17349  002A2E  D001               	goto	u11741
 17350  002A30  D001               	goto	u11740
 17351  002A32                     u11741:
 17352  002A32  D003               	goto	l12583
 17353  002A34                     u11740:
 17354                           
 17355                           ; BSR set to: 0
 17356  002A34  0100               	movlb	0	; () banked
 17357  002A36  8F8F               	bsf	(___fldiv@b+2)& (0+255),7,b
 17358  002A38  D003               	goto	l12585
 17359  002A3A                     l12583:
 17360                           
 17361                           ; BSR set to: 0
 17362  002A3A  0100               	movlb	0	; () banked
 17363  002A3C  9F8F               	bcf	(___fldiv@b+2)& (0+255),7,b
 17364  002A3E  D000               	goto	l12585
 17365  002A40                     l12585:
 17366                           
 17367                           ; BSR set to: 0
 17368  002A40  0100               	movlb	0	; () banked
 17369  002A42  90D8               	bcf	status,0,c
 17370  002A44  31A4               	rrcf	___fldiv@bexp& (0+255),w,b
 17371  002A46  0100               	movlb	0	; () banked
 17372  002A48  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 17373                           
 17374                           ; BSR set to: 0
 17375  002A4A  0100               	movlb	0	; () banked
 17376  002A4C  5199               	movf	___fldiv@sign& (0+255),w,b
 17377  002A4E  0100               	movlb	0	; () banked
 17378  002A50  1390               	iorwf	(___fldiv@b+3)& (0+255),f,b
 17379                           
 17380                           ; BSR set to: 0
 17381  002A52  C08D  F08D         	movff	___fldiv@b,?___fldiv
 17382  002A56  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 17383  002A5A  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 17384  002A5E  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 17385  002A62  D000               	goto	l2682
 17386  002A64                     l2682:
 17387                           
 17388                           ; BSR set to: 0
 17389  002A64  0012               	return		;funcret
 17390  002A66                     __end_of___fldiv:
 17391                           	opt stack 0
 17392                           tblptru	equ	0xFF8
 17393                           tblptrh	equ	0xFF7
 17394                           tblptrl	equ	0xFF6
 17395                           tablat	equ	0xFF5
 17396                           prodh	equ	0xFF4
 17397                           prodl	equ	0xFF3
 17398                           intcon	equ	0xFF2
 17399                           intcon3	equ	0xFF0
 17400                           postinc0	equ	0xFEE
 17401                           wreg	equ	0xFE8
 17402                           indf1	equ	0xFE7
 17403                           postdec1	equ	0xFE5
 17404                           fsr1h	equ	0xFE2
 17405                           fsr1l	equ	0xFE1
 17406                           indf2	equ	0xFDF
 17407                           fsr2h	equ	0xFDA
 17408                           fsr2l	equ	0xFD9
 17409                           status	equ	0xFD8
 17410                           
 17411 ;; *************** function ___fladd *****************
 17412 ;; Defined at:
 17413 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\sprcadd.c"
 17414 ;; Parameters:    Size  Location     Type
 17415 ;;  b               4    0[BANK0 ] unsigned char 
 17416 ;;  a               4    4[BANK0 ] unsigned char 
 17417 ;; Auto vars:     Size  Location     Type
 17418 ;;  grs             1   19[BANK0 ] unsigned char 
 17419 ;;  bexp            1   18[BANK0 ] unsigned char 
 17420 ;;  aexp            1   17[BANK0 ] unsigned char 
 17421 ;;  signs           1   16[BANK0 ] unsigned char 
 17422 ;; Return value:  Size  Location     Type
 17423 ;;                  4    0[BANK0 ] unsigned char 
 17424 ;; Registers used:
 17425 ;;		wreg, status,2, status,0
 17426 ;; Tracked objects:
 17427 ;;		On entry : 0/0
 17428 ;;		On exit  : 0/0
 17429 ;;		Unchanged: 0/0
 17430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17431 ;;      Params:         0       8       0       0       0       0       0       0       0
 17432 ;;      Locals:         0       4       0       0       0       0       0       0       0
 17433 ;;      Temps:          0       8       0       0       0       0       0       0       0
 17434 ;;      Totals:         0      20       0       0       0       0       0       0       0
 17435 ;;Total ram usage:       20 bytes
 17436 ;; Hardware stack levels used:    1
 17437 ;; Hardware stack levels required when called:   11
 17438 ;; This function calls:
 17439 ;;		Nothing
 17440 ;; This function is called by:
 17441 ;;		_ADC_TempConversion
 17442 ;; This function uses a non-reentrant model
 17443 ;;
 17444                           
 17445                           	psect	text50
 17446  001B62                     __ptext50:
 17447                           	opt stack 0
 17448  001B62                     ___fladd:
 17449                           	opt stack 16
 17450                           
 17451                           ; BSR set to: 0
 17452                           ;incstack = 0
 17453  001B62  0100               	movlb	0	; () banked
 17454  001B64  5163               	movf	(___fladd@b+3)& (0+255),w,b
 17455  001B66  0B80               	andlw	128
 17456  001B68  0100               	movlb	0	; () banked
 17457  001B6A  6F70               	movwf	___fladd@signs& (0+255),b
 17458  001B6C  0100               	movlb	0	; () banked
 17459  001B6E  5163               	movf	(___fladd@b+3)& (0+255),w,b
 17460  001B70  2563               	addwf	(___fladd@b+3)& (0+255),w,b
 17461  001B72  0100               	movlb	0	; () banked
 17462  001B74  6F72               	movwf	___fladd@bexp& (0+255),b
 17463                           
 17464                           ; BSR set to: 0
 17465  001B76  0100               	movlb	0	; () banked
 17466  001B78  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
 17467  001B7A  D001               	goto	u11131
 17468  001B7C  D001               	goto	u11130
 17469  001B7E                     u11131:
 17470  001B7E  D003               	goto	l12261
 17471  001B80                     u11130:
 17472                           
 17473                           ; BSR set to: 0
 17474  001B80  0100               	movlb	0	; () banked
 17475  001B82  8172               	bsf	___fladd@bexp& (0+255),0,b
 17476  001B84  D000               	goto	l12261
 17477  001B86                     l12261:
 17478                           
 17479                           ; BSR set to: 0
 17480  001B86  0100               	movlb	0	; () banked
 17481  001B88  5172               	movf	___fladd@bexp& (0+255),w,b
 17482  001B8A  0100               	movlb	0	; () banked
 17483  001B8C  B4D8               	btfsc	status,2,c
 17484  001B8E  D001               	goto	u11141
 17485  001B90  D001               	goto	u11140
 17486  001B92                     u11141:
 17487  001B92  D016               	goto	l12271
 17488  001B94                     u11140:
 17489                           
 17490                           ; BSR set to: 0
 17491  001B94  0100               	movlb	0	; () banked
 17492  001B96  2972               	incf	___fladd@bexp& (0+255),w,b
 17493  001B98  A4D8               	btfss	status,2,c
 17494  001B9A  D001               	goto	u11151
 17495  001B9C  D001               	goto	u11150
 17496  001B9E                     u11151:
 17497  001B9E  D00A               	goto	l12267
 17498  001BA0                     u11150:
 17499                           
 17500                           ; BSR set to: 0
 17501  001BA0  0E00               	movlw	0
 17502  001BA2  0100               	movlb	0	; () banked
 17503  001BA4  6F60               	movwf	___fladd@b& (0+255),b
 17504  001BA6  0E00               	movlw	0
 17505  001BA8  6F61               	movwf	(___fladd@b+1)& (0+255),b
 17506  001BAA  0E00               	movlw	0
 17507  001BAC  6F62               	movwf	(___fladd@b+2)& (0+255),b
 17508  001BAE  0E00               	movlw	0
 17509  001BB0  6F63               	movwf	(___fladd@b+3)& (0+255),b
 17510  001BB2  D000               	goto	l12267
 17511  001BB4                     l12267:
 17512                           
 17513                           ; BSR set to: 0
 17514  001BB4  0100               	movlb	0	; () banked
 17515  001BB6  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 17516                           
 17517                           ; BSR set to: 0
 17518  001BB8  0E00               	movlw	0
 17519  001BBA  0100               	movlb	0	; () banked
 17520  001BBC  6F63               	movwf	(___fladd@b+3)& (0+255),b
 17521  001BBE  D00A               	goto	l12273
 17522  001BC0                     l12271:
 17523                           
 17524                           ; BSR set to: 0
 17525  001BC0  0E00               	movlw	0
 17526  001BC2  0100               	movlb	0	; () banked
 17527  001BC4  6F60               	movwf	___fladd@b& (0+255),b
 17528  001BC6  0E00               	movlw	0
 17529  001BC8  6F61               	movwf	(___fladd@b+1)& (0+255),b
 17530  001BCA  0E00               	movlw	0
 17531  001BCC  6F62               	movwf	(___fladd@b+2)& (0+255),b
 17532  001BCE  0E00               	movlw	0
 17533  001BD0  6F63               	movwf	(___fladd@b+3)& (0+255),b
 17534  001BD2  D000               	goto	l12273
 17535  001BD4                     l12273:
 17536                           
 17537                           ; BSR set to: 0
 17538  001BD4  0100               	movlb	0	; () banked
 17539  001BD6  5167               	movf	(___fladd@a+3)& (0+255),w,b
 17540  001BD8  0B80               	andlw	128
 17541  001BDA  0100               	movlb	0	; () banked
 17542  001BDC  6F71               	movwf	___fladd@aexp& (0+255),b
 17543                           
 17544                           ; BSR set to: 0
 17545  001BDE  0100               	movlb	0	; () banked
 17546  001BE0  5170               	movf	___fladd@signs& (0+255),w,b
 17547  001BE2  0100               	movlb	0	; () banked
 17548  001BE4  1971               	xorwf	___fladd@aexp& (0+255),w,b
 17549  001BE6  B4D8               	btfsc	status,2,c
 17550  001BE8  D001               	goto	u11161
 17551  001BEA  D001               	goto	u11160
 17552  001BEC                     u11161:
 17553  001BEC  D003               	goto	l12279
 17554  001BEE                     u11160:
 17555                           
 17556                           ; BSR set to: 0
 17557  001BEE  0100               	movlb	0	; () banked
 17558  001BF0  8D70               	bsf	___fladd@signs& (0+255),6,b
 17559  001BF2  D000               	goto	l12279
 17560  001BF4                     l12279:
 17561                           
 17562                           ; BSR set to: 0
 17563  001BF4  0100               	movlb	0	; () banked
 17564  001BF6  5167               	movf	(___fladd@a+3)& (0+255),w,b
 17565  001BF8  2567               	addwf	(___fladd@a+3)& (0+255),w,b
 17566  001BFA  0100               	movlb	0	; () banked
 17567  001BFC  6F71               	movwf	___fladd@aexp& (0+255),b
 17568                           
 17569                           ; BSR set to: 0
 17570  001BFE  0100               	movlb	0	; () banked
 17571  001C00  AF66               	btfss	(___fladd@a+2)& (0+255),7,b
 17572  001C02  D001               	goto	u11171
 17573  001C04  D001               	goto	u11170
 17574  001C06                     u11171:
 17575  001C06  D003               	goto	l12285
 17576  001C08                     u11170:
 17577                           
 17578                           ; BSR set to: 0
 17579  001C08  0100               	movlb	0	; () banked
 17580  001C0A  8171               	bsf	___fladd@aexp& (0+255),0,b
 17581  001C0C  D000               	goto	l12285
 17582  001C0E                     l12285:
 17583                           
 17584                           ; BSR set to: 0
 17585  001C0E  0100               	movlb	0	; () banked
 17586  001C10  5171               	movf	___fladd@aexp& (0+255),w,b
 17587  001C12  0100               	movlb	0	; () banked
 17588  001C14  B4D8               	btfsc	status,2,c
 17589  001C16  D001               	goto	u11181
 17590  001C18  D001               	goto	u11180
 17591  001C1A                     u11181:
 17592  001C1A  D016               	goto	l12295
 17593  001C1C                     u11180:
 17594                           
 17595                           ; BSR set to: 0
 17596  001C1C  0100               	movlb	0	; () banked
 17597  001C1E  2971               	incf	___fladd@aexp& (0+255),w,b
 17598  001C20  A4D8               	btfss	status,2,c
 17599  001C22  D001               	goto	u11191
 17600  001C24  D001               	goto	u11190
 17601  001C26                     u11191:
 17602  001C26  D00A               	goto	l12291
 17603  001C28                     u11190:
 17604                           
 17605                           ; BSR set to: 0
 17606  001C28  0E00               	movlw	0
 17607  001C2A  0100               	movlb	0	; () banked
 17608  001C2C  6F64               	movwf	___fladd@a& (0+255),b
 17609  001C2E  0E00               	movlw	0
 17610  001C30  6F65               	movwf	(___fladd@a+1)& (0+255),b
 17611  001C32  0E00               	movlw	0
 17612  001C34  6F66               	movwf	(___fladd@a+2)& (0+255),b
 17613  001C36  0E00               	movlw	0
 17614  001C38  6F67               	movwf	(___fladd@a+3)& (0+255),b
 17615  001C3A  D000               	goto	l12291
 17616  001C3C                     l12291:
 17617                           
 17618                           ; BSR set to: 0
 17619  001C3C  0100               	movlb	0	; () banked
 17620  001C3E  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
 17621                           
 17622                           ; BSR set to: 0
 17623  001C40  0E00               	movlw	0
 17624  001C42  0100               	movlb	0	; () banked
 17625  001C44  6F67               	movwf	(___fladd@a+3)& (0+255),b
 17626  001C46  D00A               	goto	l12297
 17627  001C48                     l12295:
 17628                           
 17629                           ; BSR set to: 0
 17630  001C48  0E00               	movlw	0
 17631  001C4A  0100               	movlb	0	; () banked
 17632  001C4C  6F64               	movwf	___fladd@a& (0+255),b
 17633  001C4E  0E00               	movlw	0
 17634  001C50  6F65               	movwf	(___fladd@a+1)& (0+255),b
 17635  001C52  0E00               	movlw	0
 17636  001C54  6F66               	movwf	(___fladd@a+2)& (0+255),b
 17637  001C56  0E00               	movlw	0
 17638  001C58  6F67               	movwf	(___fladd@a+3)& (0+255),b
 17639  001C5A  D000               	goto	l12297
 17640  001C5C                     l12297:
 17641                           
 17642                           ; BSR set to: 0
 17643  001C5C  0100               	movlb	0	; () banked
 17644  001C5E  5172               	movf	___fladd@bexp& (0+255),w,b
 17645  001C60  0100               	movlb	0	; () banked
 17646  001C62  5D71               	subwf	___fladd@aexp& (0+255),w,b
 17647  001C64  B0D8               	btfsc	status,0,c
 17648  001C66  D001               	goto	u11201
 17649  001C68  D001               	goto	u11200
 17650  001C6A                     u11201:
 17651  001C6A  D028               	goto	l12333
 17652  001C6C                     u11200:
 17653                           
 17654                           ; BSR set to: 0
 17655  001C6C  0100               	movlb	0	; () banked
 17656  001C6E  AD70               	btfss	___fladd@signs& (0+255),6,b
 17657  001C70  D001               	goto	u11211
 17658  001C72  D001               	goto	u11210
 17659  001C74                     u11211:
 17660  001C74  D004               	goto	l12303
 17661  001C76                     u11210:
 17662                           
 17663                           ; BSR set to: 0
 17664  001C76  0E80               	movlw	128
 17665  001C78  0100               	movlb	0	; () banked
 17666  001C7A  1B70               	xorwf	___fladd@signs& (0+255),f,b
 17667  001C7C  D000               	goto	l12303
 17668  001C7E                     l12303:
 17669                           
 17670                           ; BSR set to: 0
 17671  001C7E  C072  F073         	movff	___fladd@bexp,___fladd@grs
 17672                           
 17673                           ; BSR set to: 0
 17674  001C82  C071  F072         	movff	___fladd@aexp,___fladd@bexp
 17675                           
 17676                           ; BSR set to: 0
 17677  001C86  C073  F071         	movff	___fladd@grs,___fladd@aexp
 17678                           
 17679                           ; BSR set to: 0
 17680  001C8A  C060  F073         	movff	___fladd@b,___fladd@grs
 17681                           
 17682                           ; BSR set to: 0
 17683  001C8E  C064  F060         	movff	___fladd@a,___fladd@b
 17684                           
 17685                           ; BSR set to: 0
 17686  001C92  C073  F064         	movff	___fladd@grs,___fladd@a
 17687                           
 17688                           ; BSR set to: 0
 17689  001C96  C061  F073         	movff	___fladd@b+1,___fladd@grs
 17690                           
 17691                           ; BSR set to: 0
 17692  001C9A  C065  F061         	movff	___fladd@a+1,___fladd@b+1
 17693                           
 17694                           ; BSR set to: 0
 17695  001C9E  C073  F065         	movff	___fladd@grs,___fladd@a+1
 17696                           
 17697                           ; BSR set to: 0
 17698  001CA2  C062  F073         	movff	___fladd@b+2,___fladd@grs
 17699                           
 17700                           ; BSR set to: 0
 17701  001CA6  C066  F062         	movff	___fladd@a+2,___fladd@b+2
 17702                           
 17703                           ; BSR set to: 0
 17704  001CAA  C073  F066         	movff	___fladd@grs,___fladd@a+2
 17705                           
 17706                           ; BSR set to: 0
 17707  001CAE  C063  F073         	movff	___fladd@b+3,___fladd@grs
 17708                           
 17709                           ; BSR set to: 0
 17710  001CB2  C067  F063         	movff	___fladd@a+3,___fladd@b+3
 17711                           
 17712                           ; BSR set to: 0
 17713  001CB6  C073  F067         	movff	___fladd@grs,___fladd@a+3
 17714  001CBA  D000               	goto	l12333
 17715  001CBC                     l12333:
 17716                           
 17717                           ; BSR set to: 0
 17718  001CBC  0E00               	movlw	0
 17719  001CBE  0100               	movlb	0	; () banked
 17720  001CC0  6F73               	movwf	___fladd@grs& (0+255),b
 17721                           
 17722                           ; BSR set to: 0
 17723  001CC2  0100               	movlb	0	; () banked
 17724  001CC4  5172               	movf	___fladd@bexp& (0+255),w,b
 17725  001CC6  0100               	movlb	0	; () banked
 17726  001CC8  6F68               	movwf	??___fladd& (0+255),b
 17727  001CCA  6B69               	clrf	(??___fladd+1)& (0+255),b
 17728  001CCC  0100               	movlb	0	; () banked
 17729  001CCE  1F68               	comf	??___fladd& (0+255),f,b
 17730  001CD0  1F69               	comf	(??___fladd+1)& (0+255),f,b
 17731  001CD2  4B68               	infsnz	??___fladd& (0+255),f,b
 17732  001CD4  2B69               	incf	(??___fladd+1)& (0+255),f,b
 17733  001CD6  0100               	movlb	0	; () banked
 17734  001CD8  5171               	movf	___fladd@aexp& (0+255),w,b
 17735  001CDA  0100               	movlb	0	; () banked
 17736  001CDC  6F6A               	movwf	(??___fladd+2)& (0+255),b
 17737  001CDE  6B6B               	clrf	(??___fladd+3)& (0+255),b
 17738  001CE0  0100               	movlb	0	; () banked
 17739  001CE2  5168               	movf	??___fladd& (0+255),w,b
 17740  001CE4  0100               	movlb	0	; () banked
 17741  001CE6  276A               	addwf	(??___fladd+2)& (0+255),f,b
 17742  001CE8  0100               	movlb	0	; () banked
 17743  001CEA  5169               	movf	(??___fladd+1)& (0+255),w,b
 17744  001CEC  0100               	movlb	0	; () banked
 17745  001CEE  236B               	addwfc	(??___fladd+3)& (0+255),f,b
 17746  001CF0  0100               	movlb	0	; () banked
 17747  001CF2  BF6B               	btfsc	(??___fladd+3)& (0+255),7,b
 17748  001CF4  D009               	goto	u11221
 17749  001CF6  0100               	movlb	0	; () banked
 17750  001CF8  516B               	movf	(??___fladd+3)& (0+255),w,b
 17751  001CFA  E107               	bnz	u11220
 17752  001CFC  0E1A               	movlw	26
 17753  001CFE  0100               	movlb	0	; () banked
 17754  001D00  5D6A               	subwf	(??___fladd+2)& (0+255),w,b
 17755  001D02  A0D8               	btfss	status,0,c
 17756  001D04  D001               	goto	u11221
 17757  001D06  D001               	goto	u11220
 17758  001D08                     u11221:
 17759  001D08  D03D               	goto	l2629
 17760  001D0A                     u11220:
 17761                           
 17762                           ; BSR set to: 0
 17763  001D0A  0100               	movlb	0	; () banked
 17764  001D0C  5160               	movf	___fladd@b& (0+255),w,b
 17765  001D0E  0100               	movlb	0	; () banked
 17766  001D10  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 17767  001D12  0100               	movlb	0	; () banked
 17768  001D14  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 17769  001D16  0100               	movlb	0	; () banked
 17770  001D18  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 17771  001D1A  A4D8               	btfss	status,2,c
 17772  001D1C  D001               	goto	u11231
 17773  001D1E  D002               	goto	u11230
 17774  001D20                     u11231:
 17775  001D20  0E01               	movlw	1
 17776  001D22  D001               	goto	u11240
 17777  001D24                     u11230:
 17778  001D24  0E00               	movlw	0
 17779  001D26                     u11240:
 17780  001D26  0100               	movlb	0	; () banked
 17781  001D28  6F73               	movwf	___fladd@grs& (0+255),b
 17782                           
 17783                           ; BSR set to: 0
 17784  001D2A  0E00               	movlw	0
 17785  001D2C  0100               	movlb	0	; () banked
 17786  001D2E  6F60               	movwf	___fladd@b& (0+255),b
 17787  001D30  0E00               	movlw	0
 17788  001D32  6F61               	movwf	(___fladd@b+1)& (0+255),b
 17789  001D34  0E00               	movlw	0
 17790  001D36  6F62               	movwf	(___fladd@b+2)& (0+255),b
 17791  001D38  0E00               	movlw	0
 17792  001D3A  6F63               	movwf	(___fladd@b+3)& (0+255),b
 17793                           
 17794                           ; BSR set to: 0
 17795  001D3C  C071  F072         	movff	___fladd@aexp,___fladd@bexp
 17796  001D40  D02A               	goto	l2628
 17797                           
 17798                           ; BSR set to: 0
 17799  001D42  D020               	goto	l2629
 17800  001D44                     l2630:
 17801                           
 17802                           ; BSR set to: 0
 17803  001D44  0100               	movlb	0	; () banked
 17804  001D46  A173               	btfss	___fladd@grs& (0+255),0,b
 17805  001D48  D001               	goto	u11251
 17806  001D4A  D001               	goto	u11250
 17807  001D4C                     u11251:
 17808  001D4C  D007               	goto	l12345
 17809  001D4E                     u11250:
 17810                           
 17811                           ; BSR set to: 0
 17812  001D4E  0100               	movlb	0	; () banked
 17813  001D50  90D8               	bcf	status,0,c
 17814  001D52  3173               	rrcf	___fladd@grs& (0+255),w,b
 17815  001D54  0901               	iorlw	1
 17816  001D56  0100               	movlb	0	; () banked
 17817  001D58  6F73               	movwf	___fladd@grs& (0+255),b
 17818  001D5A  D004               	goto	l12347
 17819  001D5C                     l12345:
 17820                           
 17821                           ; BSR set to: 0
 17822  001D5C  0100               	movlb	0	; () banked
 17823  001D5E  90D8               	bcf	status,0,c
 17824  001D60  3373               	rrcf	___fladd@grs& (0+255),f,b
 17825  001D62  D000               	goto	l12347
 17826  001D64                     l12347:
 17827                           
 17828                           ; BSR set to: 0
 17829  001D64  0100               	movlb	0	; () banked
 17830  001D66  A160               	btfss	___fladd@b& (0+255),0,b
 17831  001D68  D001               	goto	u11261
 17832  001D6A  D001               	goto	u11260
 17833  001D6C                     u11261:
 17834  001D6C  D003               	goto	l12351
 17835  001D6E                     u11260:
 17836                           
 17837                           ; BSR set to: 0
 17838  001D6E  0100               	movlb	0	; () banked
 17839  001D70  8F73               	bsf	___fladd@grs& (0+255),7,b
 17840  001D72  D000               	goto	l12351
 17841  001D74                     l12351:
 17842                           
 17843                           ; BSR set to: 0
 17844  001D74  0100               	movlb	0	; () banked
 17845  001D76  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 17846  001D78  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 17847  001D7A  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 17848  001D7C  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 17849  001D7E  3360               	rrcf	___fladd@b& (0+255),f,b
 17850                           
 17851                           ; BSR set to: 0
 17852  001D80  0100               	movlb	0	; () banked
 17853  001D82  2B72               	incf	___fladd@bexp& (0+255),f,b
 17854  001D84                     l2629:
 17855                           
 17856                           ; BSR set to: 0
 17857  001D84  0100               	movlb	0	; () banked
 17858  001D86  5171               	movf	___fladd@aexp& (0+255),w,b
 17859  001D88  0100               	movlb	0	; () banked
 17860  001D8A  5D72               	subwf	___fladd@bexp& (0+255),w,b
 17861  001D8C  A0D8               	btfss	status,0,c
 17862  001D8E  D001               	goto	u11271
 17863  001D90  D001               	goto	u11270
 17864  001D92                     u11271:
 17865  001D92  D7D8               	goto	l2630
 17866  001D94                     u11270:
 17867  001D94  D000               	goto	l2628
 17868  001D96                     l2628:
 17869                           
 17870                           ; BSR set to: 0
 17871  001D96  0100               	movlb	0	; () banked
 17872  001D98  BD70               	btfsc	___fladd@signs& (0+255),6,b
 17873  001D9A  D001               	goto	u11281
 17874  001D9C  D001               	goto	u11280
 17875  001D9E                     u11281:
 17876  001D9E  D04B               	goto	l12379
 17877  001DA0                     u11280:
 17878                           
 17879                           ; BSR set to: 0
 17880  001DA0  0100               	movlb	0	; () banked
 17881  001DA2  5172               	movf	___fladd@bexp& (0+255),w,b
 17882  001DA4  0100               	movlb	0	; () banked
 17883  001DA6  A4D8               	btfss	status,2,c
 17884  001DA8  D001               	goto	u11291
 17885  001DAA  D001               	goto	u11290
 17886  001DAC                     u11291:
 17887  001DAC  D00B               	goto	l12361
 17888  001DAE                     u11290:
 17889                           
 17890                           ; BSR set to: 0
 17891  001DAE  0E00               	movlw	0
 17892  001DB0  0100               	movlb	0	; () banked
 17893  001DB2  6F60               	movwf	?___fladd& (0+255),b
 17894  001DB4  0E00               	movlw	0
 17895  001DB6  6F61               	movwf	(?___fladd+1)& (0+255),b
 17896  001DB8  0E00               	movlw	0
 17897  001DBA  6F62               	movwf	(?___fladd+2)& (0+255),b
 17898  001DBC  0E00               	movlw	0
 17899  001DBE  6F63               	movwf	(?___fladd+3)& (0+255),b
 17900  001DC0  D19A               	goto	l2637
 17901                           
 17902                           ; BSR set to: 0
 17903  001DC2  D199               	goto	l2637
 17904  001DC4                     l12361:
 17905                           
 17906                           ; BSR set to: 0
 17907  001DC4  0100               	movlb	0	; () banked
 17908  001DC6  5164               	movf	___fladd@a& (0+255),w,b
 17909  001DC8  0100               	movlb	0	; () banked
 17910  001DCA  2760               	addwf	___fladd@b& (0+255),f,b
 17911  001DCC  0100               	movlb	0	; () banked
 17912  001DCE  5165               	movf	(___fladd@a+1)& (0+255),w,b
 17913  001DD0  0100               	movlb	0	; () banked
 17914  001DD2  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 17915  001DD4  0100               	movlb	0	; () banked
 17916  001DD6  5166               	movf	(___fladd@a+2)& (0+255),w,b
 17917  001DD8  0100               	movlb	0	; () banked
 17918  001DDA  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 17919  001DDC  0100               	movlb	0	; () banked
 17920  001DDE  5167               	movf	(___fladd@a+3)& (0+255),w,b
 17921  001DE0  0100               	movlb	0	; () banked
 17922  001DE2  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 17923                           
 17924                           ; BSR set to: 0
 17925  001DE4  0100               	movlb	0	; () banked
 17926  001DE6  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 17927  001DE8  D001               	goto	u11301
 17928  001DEA  D001               	goto	u11300
 17929  001DEC                     u11301:
 17930  001DEC  D0ED               	goto	l12415
 17931  001DEE                     u11300:
 17932                           
 17933                           ; BSR set to: 0
 17934  001DEE  0100               	movlb	0	; () banked
 17935  001DF0  A173               	btfss	___fladd@grs& (0+255),0,b
 17936  001DF2  D001               	goto	u11311
 17937  001DF4  D001               	goto	u11310
 17938  001DF6                     u11311:
 17939  001DF6  D009               	goto	l12369
 17940  001DF8                     u11310:
 17941                           
 17942                           ; BSR set to: 0
 17943  001DF8  0100               	movlb	0	; () banked
 17944  001DFA  90D8               	bcf	status,0,c
 17945  001DFC  3373               	rrcf	___fladd@grs& (0+255),f,b
 17946  001DFE  0100               	movlb	0	; () banked
 17947  001E00  5173               	movf	___fladd@grs& (0+255),w,b
 17948  001E02  0901               	iorlw	1
 17949  001E04  0100               	movlb	0	; () banked
 17950  001E06  6F73               	movwf	___fladd@grs& (0+255),b
 17951  001E08  D004               	goto	l12371
 17952  001E0A                     l12369:
 17953                           
 17954                           ; BSR set to: 0
 17955  001E0A  0100               	movlb	0	; () banked
 17956  001E0C  90D8               	bcf	status,0,c
 17957  001E0E  3373               	rrcf	___fladd@grs& (0+255),f,b
 17958  001E10  D000               	goto	l12371
 17959  001E12                     l12371:
 17960                           
 17961                           ; BSR set to: 0
 17962  001E12  0100               	movlb	0	; () banked
 17963  001E14  A160               	btfss	___fladd@b& (0+255),0,b
 17964  001E16  D001               	goto	u11321
 17965  001E18  D001               	goto	u11320
 17966  001E1A                     u11321:
 17967  001E1A  D003               	goto	l12375
 17968  001E1C                     u11320:
 17969                           
 17970                           ; BSR set to: 0
 17971  001E1C  0100               	movlb	0	; () banked
 17972  001E1E  8F73               	bsf	___fladd@grs& (0+255),7,b
 17973  001E20  D000               	goto	l12375
 17974  001E22                     l12375:
 17975                           
 17976                           ; BSR set to: 0
 17977  001E22  0100               	movlb	0	; () banked
 17978  001E24  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 17979  001E26  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 17980  001E28  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 17981  001E2A  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 17982  001E2C  3360               	rrcf	___fladd@b& (0+255),f,b
 17983                           
 17984                           ; BSR set to: 0
 17985  001E2E  0100               	movlb	0	; () banked
 17986  001E30  2B72               	incf	___fladd@bexp& (0+255),f,b
 17987  001E32  D0CA               	goto	l12415
 17988                           
 17989                           ; BSR set to: 0
 17990  001E34  D0C9               	goto	l12415
 17991  001E36                     l12379:
 17992                           
 17993                           ; BSR set to: 0
 17994  001E36  0100               	movlb	0	; () banked
 17995  001E38  5164               	movf	___fladd@a& (0+255),w,b
 17996  001E3A  0100               	movlb	0	; () banked
 17997  001E3C  5D60               	subwf	___fladd@b& (0+255),w,b
 17998  001E3E  0100               	movlb	0	; () banked
 17999  001E40  5165               	movf	(___fladd@a+1)& (0+255),w,b
 18000  001E42  0100               	movlb	0	; () banked
 18001  001E44  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
 18002  001E46  0100               	movlb	0	; () banked
 18003  001E48  5166               	movf	(___fladd@a+2)& (0+255),w,b
 18004  001E4A  0100               	movlb	0	; () banked
 18005  001E4C  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
 18006  001E4E  0100               	movlb	0	; () banked
 18007  001E50  5163               	movf	(___fladd@b+3)& (0+255),w,b
 18008  001E52  0A80               	xorlw	128
 18009  001E54  0100               	movlb	0	; () banked
 18010  001E56  6F68               	movwf	??___fladd& (0+255),b
 18011  001E58  0100               	movlb	0	; () banked
 18012  001E5A  5167               	movf	(___fladd@a+3)& (0+255),w,b
 18013  001E5C  0A80               	xorlw	128
 18014  001E5E  0100               	movlb	0	; () banked
 18015  001E60  5968               	subwfb	??___fladd& (0+255),w,b
 18016  001E62  B0D8               	btfsc	status,0,c
 18017  001E64  D001               	goto	u11331
 18018  001E66  D001               	goto	u11330
 18019  001E68                     u11331:
 18020  001E68  D053               	goto	l12389
 18021  001E6A                     u11330:
 18022                           
 18023                           ; BSR set to: 0
 18024  001E6A  C060  F068         	movff	___fladd@b,??___fladd
 18025  001E6E  C061  F069         	movff	___fladd@b+1,??___fladd+1
 18026  001E72  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 18027  001E76  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 18028  001E7A  0100               	movlb	0	; () banked
 18029  001E7C  1F68               	comf	??___fladd& (0+255),f,b
 18030  001E7E  1F69               	comf	(??___fladd+1)& (0+255),f,b
 18031  001E80  1F6A               	comf	(??___fladd+2)& (0+255),f,b
 18032  001E82  1F6B               	comf	(??___fladd+3)& (0+255),f,b
 18033  001E84  2B68               	incf	??___fladd& (0+255),f,b
 18034  001E86  0E00               	movlw	0
 18035  001E88  2369               	addwfc	(??___fladd+1)& (0+255),f,b
 18036  001E8A  236A               	addwfc	(??___fladd+2)& (0+255),f,b
 18037  001E8C  236B               	addwfc	(??___fladd+3)& (0+255),f,b
 18038  001E8E  0100               	movlb	0	; () banked
 18039  001E90  5164               	movf	___fladd@a& (0+255),w,b
 18040  001E92  0100               	movlb	0	; () banked
 18041  001E94  2568               	addwf	??___fladd& (0+255),w,b
 18042  001E96  0100               	movlb	0	; () banked
 18043  001E98  6F6C               	movwf	(??___fladd+4)& (0+255),b
 18044  001E9A  0100               	movlb	0	; () banked
 18045  001E9C  5165               	movf	(___fladd@a+1)& (0+255),w,b
 18046  001E9E  0100               	movlb	0	; () banked
 18047  001EA0  2169               	addwfc	(??___fladd+1)& (0+255),w,b
 18048  001EA2  0100               	movlb	0	; () banked
 18049  001EA4  6F6D               	movwf	(??___fladd+5)& (0+255),b
 18050  001EA6  0100               	movlb	0	; () banked
 18051  001EA8  5166               	movf	(___fladd@a+2)& (0+255),w,b
 18052  001EAA  0100               	movlb	0	; () banked
 18053  001EAC  216A               	addwfc	(??___fladd+2)& (0+255),w,b
 18054  001EAE  0100               	movlb	0	; () banked
 18055  001EB0  6F6E               	movwf	(??___fladd+6)& (0+255),b
 18056  001EB2  0100               	movlb	0	; () banked
 18057  001EB4  5167               	movf	(___fladd@a+3)& (0+255),w,b
 18058  001EB6  0100               	movlb	0	; () banked
 18059  001EB8  216B               	addwfc	(??___fladd+3)& (0+255),w,b
 18060  001EBA  0100               	movlb	0	; () banked
 18061  001EBC  6F6F               	movwf	(??___fladd+7)& (0+255),b
 18062  001EBE  0EFF               	movlw	255
 18063  001EC0  0100               	movlb	0	; () banked
 18064  001EC2  256C               	addwf	(??___fladd+4)& (0+255),w,b
 18065  001EC4  0100               	movlb	0	; () banked
 18066  001EC6  6F60               	movwf	___fladd@b& (0+255),b
 18067  001EC8  0EFF               	movlw	255
 18068  001ECA  0100               	movlb	0	; () banked
 18069  001ECC  216D               	addwfc	(??___fladd+5)& (0+255),w,b
 18070  001ECE  0100               	movlb	0	; () banked
 18071  001ED0  6F61               	movwf	(___fladd@b+1)& (0+255),b
 18072  001ED2  0EFF               	movlw	255
 18073  001ED4  0100               	movlb	0	; () banked
 18074  001ED6  216E               	addwfc	(??___fladd+6)& (0+255),w,b
 18075  001ED8  0100               	movlb	0	; () banked
 18076  001EDA  6F62               	movwf	(___fladd@b+2)& (0+255),b
 18077  001EDC  0EFF               	movlw	255
 18078  001EDE  0100               	movlb	0	; () banked
 18079  001EE0  216F               	addwfc	(??___fladd+7)& (0+255),w,b
 18080  001EE2  0100               	movlb	0	; () banked
 18081  001EE4  6F63               	movwf	(___fladd@b+3)& (0+255),b
 18082  001EE6  0E80               	movlw	128
 18083  001EE8  0100               	movlb	0	; () banked
 18084  001EEA  1B70               	xorwf	___fladd@signs& (0+255),f,b
 18085                           
 18086                           ; BSR set to: 0
 18087  001EEC  0100               	movlb	0	; () banked
 18088  001EEE  6D73               	negf	___fladd@grs& (0+255),b
 18089                           
 18090                           ; BSR set to: 0
 18091  001EF0  0100               	movlb	0	; () banked
 18092  001EF2  5173               	movf	___fladd@grs& (0+255),w,b
 18093  001EF4  0100               	movlb	0	; () banked
 18094  001EF6  A4D8               	btfss	status,2,c
 18095  001EF8  D001               	goto	u11341
 18096  001EFA  D001               	goto	u11340
 18097  001EFC                     u11341:
 18098  001EFC  D019               	goto	l2645
 18099  001EFE                     u11340:
 18100                           
 18101                           ; BSR set to: 0
 18102  001EFE  0E01               	movlw	1
 18103  001F00  0100               	movlb	0	; () banked
 18104  001F02  2760               	addwf	___fladd@b& (0+255),f,b
 18105  001F04  0E00               	movlw	0
 18106  001F06  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 18107  001F08  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 18108  001F0A  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 18109  001F0C  D011               	goto	l2645
 18110                           
 18111                           ; BSR set to: 0
 18112  001F0E  D010               	goto	l2645
 18113  001F10                     l12389:
 18114                           
 18115                           ; BSR set to: 0
 18116  001F10  0100               	movlb	0	; () banked
 18117  001F12  5164               	movf	___fladd@a& (0+255),w,b
 18118  001F14  0100               	movlb	0	; () banked
 18119  001F16  5F60               	subwf	___fladd@b& (0+255),f,b
 18120  001F18  0100               	movlb	0	; () banked
 18121  001F1A  5165               	movf	(___fladd@a+1)& (0+255),w,b
 18122  001F1C  0100               	movlb	0	; () banked
 18123  001F1E  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
 18124  001F20  0100               	movlb	0	; () banked
 18125  001F22  5166               	movf	(___fladd@a+2)& (0+255),w,b
 18126  001F24  0100               	movlb	0	; () banked
 18127  001F26  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
 18128  001F28  0100               	movlb	0	; () banked
 18129  001F2A  5167               	movf	(___fladd@a+3)& (0+255),w,b
 18130  001F2C  0100               	movlb	0	; () banked
 18131  001F2E  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
 18132  001F30                     l2645:
 18133                           
 18134                           ; BSR set to: 0
 18135  001F30  0100               	movlb	0	; () banked
 18136  001F32  5160               	movf	___fladd@b& (0+255),w,b
 18137  001F34  0100               	movlb	0	; () banked
 18138  001F36  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 18139  001F38  0100               	movlb	0	; () banked
 18140  001F3A  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 18141  001F3C  0100               	movlb	0	; () banked
 18142  001F3E  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 18143  001F40  A4D8               	btfss	status,2,c
 18144  001F42  D001               	goto	u11351
 18145  001F44  D001               	goto	u11350
 18146  001F46                     u11351:
 18147  001F46  D039               	goto	l12413
 18148  001F48                     u11350:
 18149                           
 18150                           ; BSR set to: 0
 18151  001F48  0100               	movlb	0	; () banked
 18152  001F4A  5173               	movf	___fladd@grs& (0+255),w,b
 18153  001F4C  0100               	movlb	0	; () banked
 18154  001F4E  A4D8               	btfss	status,2,c
 18155  001F50  D001               	goto	u11361
 18156  001F52  D001               	goto	u11360
 18157  001F54                     u11361:
 18158  001F54  D032               	goto	l12413
 18159  001F56                     u11360:
 18160                           
 18161                           ; BSR set to: 0
 18162  001F56  0E00               	movlw	0
 18163  001F58  0100               	movlb	0	; () banked
 18164  001F5A  6F60               	movwf	?___fladd& (0+255),b
 18165  001F5C  0E00               	movlw	0
 18166  001F5E  6F61               	movwf	(?___fladd+1)& (0+255),b
 18167  001F60  0E00               	movlw	0
 18168  001F62  6F62               	movwf	(?___fladd+2)& (0+255),b
 18169  001F64  0E00               	movlw	0
 18170  001F66  6F63               	movwf	(?___fladd+3)& (0+255),b
 18171  001F68  D0C6               	goto	l2637
 18172                           
 18173                           ; BSR set to: 0
 18174  001F6A  D0C5               	goto	l2637
 18175                           
 18176                           ; BSR set to: 0
 18177  001F6C  D026               	goto	l12413
 18178  001F6E                     l12397:
 18179                           
 18180                           ; BSR set to: 0
 18181  001F6E  0100               	movlb	0	; () banked
 18182  001F70  90D8               	bcf	status,0,c
 18183  001F72  3760               	rlcf	___fladd@b& (0+255),f,b
 18184  001F74  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
 18185  001F76  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
 18186  001F78  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
 18187                           
 18188                           ; BSR set to: 0
 18189  001F7A  0100               	movlb	0	; () banked
 18190  001F7C  AF73               	btfss	___fladd@grs& (0+255),7,b
 18191  001F7E  D001               	goto	u11371
 18192  001F80  D001               	goto	u11370
 18193  001F82                     u11371:
 18194  001F82  D003               	goto	l12403
 18195  001F84                     u11370:
 18196                           
 18197                           ; BSR set to: 0
 18198  001F84  0100               	movlb	0	; () banked
 18199  001F86  8160               	bsf	___fladd@b& (0+255),0,b
 18200  001F88  D000               	goto	l12403
 18201  001F8A                     l12403:
 18202                           
 18203                           ; BSR set to: 0
 18204  001F8A  0100               	movlb	0	; () banked
 18205  001F8C  A173               	btfss	___fladd@grs& (0+255),0,b
 18206  001F8E  D001               	goto	u11381
 18207  001F90  D001               	goto	u11380
 18208  001F92                     u11381:
 18209  001F92  D004               	goto	l12407
 18210  001F94                     u11380:
 18211                           
 18212                           ; BSR set to: 0
 18213  001F94  80D8               	bsf	status,0,c
 18214  001F96  0100               	movlb	0	; () banked
 18215  001F98  3773               	rlcf	___fladd@grs& (0+255),f,b
 18216  001F9A  D004               	goto	l12409
 18217  001F9C                     l12407:
 18218                           
 18219                           ; BSR set to: 0
 18220  001F9C  0100               	movlb	0	; () banked
 18221  001F9E  90D8               	bcf	status,0,c
 18222  001FA0  3773               	rlcf	___fladd@grs& (0+255),f,b
 18223  001FA2  D000               	goto	l12409
 18224  001FA4                     l12409:
 18225                           
 18226                           ; BSR set to: 0
 18227  001FA4  0100               	movlb	0	; () banked
 18228  001FA6  5172               	movf	___fladd@bexp& (0+255),w,b
 18229  001FA8  0100               	movlb	0	; () banked
 18230  001FAA  B4D8               	btfsc	status,2,c
 18231  001FAC  D001               	goto	u11391
 18232  001FAE  D001               	goto	u11390
 18233  001FB0                     u11391:
 18234  001FB0  D004               	goto	l12413
 18235  001FB2                     u11390:
 18236                           
 18237                           ; BSR set to: 0
 18238  001FB2  0100               	movlb	0	; () banked
 18239  001FB4  0772               	decf	___fladd@bexp& (0+255),f,b
 18240  001FB6  D001               	goto	l12413
 18241                           
 18242                           ; BSR set to: 0
 18243  001FB8  D000               	goto	l12413
 18244  001FBA                     l12413:
 18245                           
 18246                           ; BSR set to: 0
 18247  001FBA  0100               	movlb	0	; () banked
 18248  001FBC  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
 18249  001FBE  D001               	goto	u11401
 18250  001FC0  D001               	goto	u11400
 18251  001FC2                     u11401:
 18252  001FC2  D7D5               	goto	l12397
 18253  001FC4                     u11400:
 18254  001FC4  D001               	goto	l12415
 18255                           
 18256                           ; BSR set to: 0
 18257  001FC6  D000               	goto	l12415
 18258  001FC8                     l12415:
 18259                           
 18260                           ; BSR set to: 0
 18261  001FC8  0E00               	movlw	0
 18262  001FCA  0100               	movlb	0	; () banked
 18263  001FCC  6F71               	movwf	___fladd@aexp& (0+255),b
 18264                           
 18265                           ; BSR set to: 0
 18266  001FCE  0100               	movlb	0	; () banked
 18267  001FD0  AF73               	btfss	___fladd@grs& (0+255),7,b
 18268  001FD2  D001               	goto	u11411
 18269  001FD4  D001               	goto	u11410
 18270  001FD6                     u11411:
 18271  001FD6  D017               	goto	l2654
 18272  001FD8                     u11410:
 18273                           
 18274                           ; BSR set to: 0
 18275  001FD8  C073  F068         	movff	___fladd@grs,??___fladd
 18276  001FDC  0E7F               	movlw	127
 18277  001FDE  0100               	movlb	0	; () banked
 18278  001FE0  1768               	andwf	??___fladd& (0+255),f,b
 18279  001FE2  B4D8               	btfsc	status,2,c
 18280  001FE4  D001               	goto	u11421
 18281  001FE6  D001               	goto	u11420
 18282  001FE8                     u11421:
 18283  001FE8  D004               	goto	l2655
 18284  001FEA                     u11420:
 18285                           
 18286                           ; BSR set to: 0
 18287  001FEA  0E01               	movlw	1
 18288  001FEC  0100               	movlb	0	; () banked
 18289  001FEE  6F71               	movwf	___fladd@aexp& (0+255),b
 18290  001FF0  D00A               	goto	l2654
 18291  001FF2                     l2655:
 18292                           
 18293                           ; BSR set to: 0
 18294  001FF2  0100               	movlb	0	; () banked
 18295  001FF4  A160               	btfss	___fladd@b& (0+255),0,b
 18296  001FF6  D001               	goto	u11431
 18297  001FF8  D001               	goto	u11430
 18298  001FFA                     u11431:
 18299  001FFA  D005               	goto	l2654
 18300  001FFC                     u11430:
 18301                           
 18302                           ; BSR set to: 0
 18303  001FFC  0E01               	movlw	1
 18304  001FFE  0100               	movlb	0	; () banked
 18305  002000  6F71               	movwf	___fladd@aexp& (0+255),b
 18306  002002  D001               	goto	l2654
 18307                           
 18308                           ; BSR set to: 0
 18309  002004  D000               	goto	l2654
 18310  002006                     l2654:
 18311                           
 18312                           ; BSR set to: 0
 18313  002006  0100               	movlb	0	; () banked
 18314  002008  5171               	movf	___fladd@aexp& (0+255),w,b
 18315  00200A  0100               	movlb	0	; () banked
 18316  00200C  B4D8               	btfsc	status,2,c
 18317  00200E  D001               	goto	u11441
 18318  002010  D001               	goto	u11440
 18319  002012                     u11441:
 18320  002012  D02D               	goto	l12433
 18321  002014                     u11440:
 18322                           
 18323                           ; BSR set to: 0
 18324  002014  0E01               	movlw	1
 18325  002016  0100               	movlb	0	; () banked
 18326  002018  2760               	addwf	___fladd@b& (0+255),f,b
 18327  00201A  0E00               	movlw	0
 18328  00201C  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 18329  00201E  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 18330  002020  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 18331                           
 18332                           ; BSR set to: 0
 18333  002022  0100               	movlb	0	; () banked
 18334  002024  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 18335  002026  D001               	goto	u11451
 18336  002028  D001               	goto	u11450
 18337  00202A                     u11451:
 18338  00202A  D021               	goto	l12433
 18339  00202C                     u11450:
 18340                           
 18341                           ; BSR set to: 0
 18342  00202C  C060  F068         	movff	___fladd@b,??___fladd
 18343  002030  C061  F069         	movff	___fladd@b+1,??___fladd+1
 18344  002034  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 18345  002038  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 18346  00203C  0100               	movlb	0	; () banked
 18347  00203E  356B               	rlcf	(??___fladd+3)& (0+255),w,b
 18348  002040  336B               	rrcf	(??___fladd+3)& (0+255),f,b
 18349  002042  336A               	rrcf	(??___fladd+2)& (0+255),f,b
 18350  002044  3369               	rrcf	(??___fladd+1)& (0+255),f,b
 18351  002046  3368               	rrcf	??___fladd& (0+255),f,b
 18352  002048  C068  F060         	movff	??___fladd,___fladd@b
 18353  00204C  C069  F061         	movff	??___fladd+1,___fladd@b+1
 18354  002050  C06A  F062         	movff	??___fladd+2,___fladd@b+2
 18355  002054  C06B  F063         	movff	??___fladd+3,___fladd@b+3
 18356  002058  0100               	movlb	0	; () banked
 18357  00205A  2972               	incf	___fladd@bexp& (0+255),w,b
 18358  00205C  B4D8               	btfsc	status,2,c
 18359  00205E  D001               	goto	u11461
 18360  002060  D001               	goto	u11460
 18361  002062                     u11461:
 18362  002062  D005               	goto	l12433
 18363  002064                     u11460:
 18364                           
 18365                           ; BSR set to: 0
 18366  002064  0100               	movlb	0	; () banked
 18367  002066  2B72               	incf	___fladd@bexp& (0+255),f,b
 18368  002068  D002               	goto	l12433
 18369                           
 18370                           ; BSR set to: 0
 18371  00206A  D001               	goto	l12433
 18372                           
 18373                           ; BSR set to: 0
 18374  00206C  D000               	goto	l12433
 18375  00206E                     l12433:
 18376                           
 18377                           ; BSR set to: 0
 18378  00206E  0100               	movlb	0	; () banked
 18379  002070  2972               	incf	___fladd@bexp& (0+255),w,b
 18380  002072  B4D8               	btfsc	status,2,c
 18381  002074  D001               	goto	u11471
 18382  002076  D001               	goto	u11470
 18383  002078                     u11471:
 18384  002078  D008               	goto	l12437
 18385  00207A                     u11470:
 18386                           
 18387                           ; BSR set to: 0
 18388  00207A  0100               	movlb	0	; () banked
 18389  00207C  5172               	movf	___fladd@bexp& (0+255),w,b
 18390  00207E  0100               	movlb	0	; () banked
 18391  002080  A4D8               	btfss	status,2,c
 18392  002082  D001               	goto	u11481
 18393  002084  D001               	goto	u11480
 18394  002086                     u11481:
 18395  002086  D016               	goto	l12441
 18396  002088                     u11480:
 18397  002088  D000               	goto	l12437
 18398  00208A                     l12437:
 18399                           
 18400                           ; BSR set to: 0
 18401  00208A  0E00               	movlw	0
 18402  00208C  0100               	movlb	0	; () banked
 18403  00208E  6F60               	movwf	___fladd@b& (0+255),b
 18404  002090  0E00               	movlw	0
 18405  002092  6F61               	movwf	(___fladd@b+1)& (0+255),b
 18406  002094  0E00               	movlw	0
 18407  002096  6F62               	movwf	(___fladd@b+2)& (0+255),b
 18408  002098  0E00               	movlw	0
 18409  00209A  6F63               	movwf	(___fladd@b+3)& (0+255),b
 18410  00209C  0100               	movlb	0	; () banked
 18411  00209E  5172               	movf	___fladd@bexp& (0+255),w,b
 18412  0020A0  0100               	movlb	0	; () banked
 18413  0020A2  A4D8               	btfss	status,2,c
 18414  0020A4  D001               	goto	u11491
 18415  0020A6  D001               	goto	u11490
 18416  0020A8                     u11491:
 18417  0020A8  D005               	goto	l12441
 18418  0020AA                     u11490:
 18419                           
 18420                           ; BSR set to: 0
 18421  0020AA  0E00               	movlw	0
 18422  0020AC  0100               	movlb	0	; () banked
 18423  0020AE  6F70               	movwf	___fladd@signs& (0+255),b
 18424  0020B0  D001               	goto	l12441
 18425                           
 18426                           ; BSR set to: 0
 18427  0020B2  D000               	goto	l12441
 18428  0020B4                     l12441:
 18429                           
 18430                           ; BSR set to: 0
 18431  0020B4  0100               	movlb	0	; () banked
 18432  0020B6  A172               	btfss	___fladd@bexp& (0+255),0,b
 18433  0020B8  D001               	goto	u11501
 18434  0020BA  D001               	goto	u11500
 18435  0020BC                     u11501:
 18436  0020BC  D003               	goto	l12445
 18437  0020BE                     u11500:
 18438                           
 18439                           ; BSR set to: 0
 18440  0020BE  0100               	movlb	0	; () banked
 18441  0020C0  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 18442  0020C2  D003               	goto	l12447
 18443  0020C4                     l12445:
 18444                           
 18445                           ; BSR set to: 0
 18446  0020C4  0100               	movlb	0	; () banked
 18447  0020C6  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
 18448  0020C8  D000               	goto	l12447
 18449  0020CA                     l12447:
 18450                           
 18451                           ; BSR set to: 0
 18452  0020CA  0100               	movlb	0	; () banked
 18453  0020CC  90D8               	bcf	status,0,c
 18454  0020CE  3172               	rrcf	___fladd@bexp& (0+255),w,b
 18455  0020D0  0100               	movlb	0	; () banked
 18456  0020D2  6F63               	movwf	(___fladd@b+3)& (0+255),b
 18457                           
 18458                           ; BSR set to: 0
 18459  0020D4  0100               	movlb	0	; () banked
 18460  0020D6  AF70               	btfss	___fladd@signs& (0+255),7,b
 18461  0020D8  D001               	goto	u11511
 18462  0020DA  D001               	goto	u11510
 18463  0020DC                     u11511:
 18464  0020DC  D003               	goto	l12453
 18465  0020DE                     u11510:
 18466                           
 18467                           ; BSR set to: 0
 18468  0020DE  0100               	movlb	0	; () banked
 18469  0020E0  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
 18470  0020E2  D000               	goto	l12453
 18471  0020E4                     l12453:
 18472                           
 18473                           ; BSR set to: 0
 18474  0020E4  C060  F060         	movff	___fladd@b,?___fladd
 18475  0020E8  C061  F061         	movff	___fladd@b+1,?___fladd+1
 18476  0020EC  C062  F062         	movff	___fladd@b+2,?___fladd+2
 18477  0020F0  C063  F063         	movff	___fladd@b+3,?___fladd+3
 18478  0020F4  D000               	goto	l2637
 18479  0020F6                     l2637:
 18480                           
 18481                           ; BSR set to: 0
 18482  0020F6  0012               	return		;funcret
 18483  0020F8                     __end_of___fladd:
 18484                           	opt stack 0
 18485                           tblptru	equ	0xFF8
 18486                           tblptrh	equ	0xFF7
 18487                           tblptrl	equ	0xFF6
 18488                           tablat	equ	0xFF5
 18489                           prodh	equ	0xFF4
 18490                           prodl	equ	0xFF3
 18491                           intcon	equ	0xFF2
 18492                           intcon3	equ	0xFF0
 18493                           postinc0	equ	0xFEE
 18494                           wreg	equ	0xFE8
 18495                           indf1	equ	0xFE7
 18496                           postdec1	equ	0xFE5
 18497                           fsr1h	equ	0xFE2
 18498                           fsr1l	equ	0xFE1
 18499                           indf2	equ	0xFDF
 18500                           fsr2h	equ	0xFDA
 18501                           fsr2l	equ	0xFD9
 18502                           status	equ	0xFD8
 18503                           
 18504 ;; *************** function _moteJoiningProcess *****************
 18505 ;; Defined at:
 18506 ;;		line 291 in file "../Includes/Board/MOTEapp.c"
 18507 ;; Parameters:    Size  Location     Type
 18508 ;;  messageReady    1    wreg     unsigned char 
 18509 ;;  changeStates    1   22[BANK0 ] unsigned char 
 18510 ;;  selectButton    1   23[BANK0 ] unsigned char 
 18511 ;; Auto vars:     Size  Location     Type
 18512 ;;  messageReady    1   27[BANK0 ] unsigned char 
 18513 ;;  readDataRate    1   25[BANK0 ] unsigned char 
 18514 ;;  joiningCompl    1   26[BANK0 ] unsigned char 
 18515 ;; Return value:  Size  Location     Type
 18516 ;;                  1    wreg      enum E6058
 18517 ;; Registers used:
 18518 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18519 ;; Tracked objects:
 18520 ;;		On entry : 0/0
 18521 ;;		On exit  : 0/0
 18522 ;;		Unchanged: 0/0
 18523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18524 ;;      Params:         0       2       0       0       0       0       0       0       0
 18525 ;;      Locals:         0       3       0       0       0       0       0       0       0
 18526 ;;      Temps:          0       1       0       0       0       0       0       0       0
 18527 ;;      Totals:         0       6       0       0       0       0       0       0       0
 18528 ;;Total ram usage:        6 bytes
 18529 ;; Hardware stack levels used:    1
 18530 ;; Hardware stack levels required when called:   16
 18531 ;; This function calls:
 18532 ;;		_DATAEE_WriteByte
 18533 ;;		_moteApp_delayms
 18534 ;;		_oled_clear
 18535 ;;		_oled_putString
 18536 ;;		_sendCommand
 18537 ;;		_strcmp
 18538 ;;		_strncmp
 18539 ;; This function is called by:
 18540 ;;		_moteHandler
 18541 ;; This function uses a non-reentrant model
 18542 ;;
 18543                           
 18544                           	psect	text51
 18545  0013EE                     __ptext51:
 18546                           	opt stack 0
 18547  0013EE                     _moteJoiningProcess:
 18548                           	opt stack 13
 18549                           
 18550                           ; BSR set to: 0
 18551                           ;incstack = 0
 18552                           ;moteJoiningProcess@messageReady stored from wreg
 18553  0013EE  0100               	movlb	0	; () banked
 18554  0013F0  6F7B               	movwf	moteJoiningProcess@messageReady& (0+255),b
 18555                           
 18556                           ;MOTEapp.c: 293: bool joiningComplete = 0;
 18557  0013F2  0E00               	movlw	0
 18558  0013F4  0100               	movlb	0	; () banked
 18559  0013F6  6F7A               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 18560                           
 18561                           ;MOTEapp.c: 295: switch (activeState)
 18562  0013F8  D38C               	goto	l13879
 18563  0013FA                     l390:
 18564  0013FA  D7FF               	goto	l390
 18565                           
 18566                           ;MOTEapp.c: 299: break;
 18567  0013FC  D3AE               	goto	l13881
 18568  0013FE                     l13697:
 18569                           
 18570                           ;MOTEapp.c: 301: sendCommand("sys reset");
 18571  0013FE  0EFC               	movlw	low STR_30
 18572  001400  0100               	movlb	0	; () banked
 18573  001402  6F61               	movwf	sendCommand@string& (0+255),b
 18574  001404  0E7E               	movlw	high STR_30
 18575  001406  0100               	movlb	0	; () banked
 18576  001408  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18577  00140A  EC65  F037         	call	_sendCommand	;wreg free
 18578                           
 18579                           ;MOTEapp.c: 302: activeState = moteReset;
 18580  00140E  0E01               	movlw	1
 18581  001410  0100               	movlb	0	; () banked
 18582  001412  6FEB               	movwf	_activeState& (0+255),b
 18583                           
 18584                           ;MOTEapp.c: 303: break;
 18585  001414  D3A2               	goto	l13881
 18586  001416                     l13701:
 18587                           
 18588                           ; BSR set to: 0
 18589                           ;MOTEapp.c: 305: if (selectButton)
 18590  001416  0100               	movlb	0	; () banked
 18591  001418  5177               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 18592  00141A  0100               	movlb	0	; () banked
 18593  00141C  B4D8               	btfsc	status,2,c
 18594  00141E  D001               	goto	u13131
 18595  001420  D001               	goto	u13130
 18596  001422                     u13131:
 18597  001422  D003               	goto	l396
 18598  001424                     u13130:
 18599                           
 18600                           ; BSR set to: 0
 18601                           ;MOTEapp.c: 306: {
 18602                           ;MOTEapp.c: 307: activeState = moteComFailure;
 18603  001424  0E0A               	movlw	10
 18604  001426  0100               	movlb	0	; () banked
 18605  001428  6FEB               	movwf	_activeState& (0+255),b
 18606  00142A                     l396:
 18607                           
 18608                           ; BSR set to: 0
 18609                           ;MOTEapp.c: 308: }
 18610                           ;MOTEapp.c: 309: if ( messageReady )
 18611  00142A  0100               	movlb	0	; () banked
 18612  00142C  517B               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 18613  00142E  0100               	movlb	0	; () banked
 18614  001430  B4D8               	btfsc	status,2,c
 18615  001432  D001               	goto	u13141
 18616  001434  D001               	goto	u13140
 18617  001436                     u13141:
 18618  001436  D391               	goto	l13881
 18619  001438                     u13140:
 18620                           
 18621                           ; BSR set to: 0
 18622                           ;MOTEapp.c: 310: {
 18623                           ;MOTEapp.c: 311: if(strncmp(moduleResonseBuffer, "RN24", 4) == 0)
 18624  001438  0E5D               	movlw	low _moduleResonseBuffer
 18625  00143A  0100               	movlb	0	; () banked
 18626  00143C  6F60               	movwf	strncmp@s1& (0+255),b
 18627  00143E  0E01               	movlw	high _moduleResonseBuffer
 18628  001440  0100               	movlb	0	; () banked
 18629  001442  6F61               	movwf	(strncmp@s1+1)& (0+255),b
 18630  001444  0EB8               	movlw	low STR_31
 18631  001446  0100               	movlb	0	; () banked
 18632  001448  6F62               	movwf	strncmp@s2& (0+255),b
 18633  00144A  0E7F               	movlw	high STR_31
 18634  00144C  0100               	movlb	0	; () banked
 18635  00144E  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 18636  001450  0E00               	movlw	0
 18637  001452  0100               	movlb	0	; () banked
 18638  001454  6F65               	movwf	(strncmp@len+1)& (0+255),b
 18639  001456  0E04               	movlw	4
 18640  001458  6F64               	movwf	strncmp@len& (0+255),b
 18641  00145A  ECFE  F02C         	call	_strncmp	;wreg free
 18642  00145E  0100               	movlb	0	; () banked
 18643  001460  5160               	movf	?_strncmp& (0+255),w,b
 18644  001462  0100               	movlb	0	; () banked
 18645  001464  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 18646  001466  A4D8               	btfss	status,2,c
 18647  001468  D001               	goto	u13151
 18648  00146A  D001               	goto	u13150
 18649  00146C                     u13151:
 18650  00146C  D033               	goto	l13719
 18651  00146E                     u13150:
 18652                           
 18653                           ; BSR set to: 0
 18654                           ;MOTEapp.c: 312: {
 18655                           ;MOTEapp.c: 313: rnModule = rn2483;
 18656  00146E  0E00               	movlw	0
 18657  001470  0100               	movlb	0	; () banked
 18658  001472  6FE2               	movwf	_rnModule& (0+255),b
 18659                           
 18660                           ; BSR set to: 0
 18661                           ;MOTEapp.c: 314: oled_clear();
 18662  001474  ECA5  F038         	call	_oled_clear	;wreg free
 18663                           
 18664                           ;MOTEapp.c: 315: oled_putString(" Joining Method ",0,0);
 18665  001478  0E43               	movlw	low STR_32
 18666  00147A  0100               	movlb	0	; () banked
 18667  00147C  6F71               	movwf	oled_putString@string& (0+255),b
 18668  00147E  0E7B               	movlw	high STR_32
 18669  001480  0100               	movlb	0	; () banked
 18670  001482  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18671  001484  0E00               	movlw	0
 18672  001486  0100               	movlb	0	; () banked
 18673  001488  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18674  00148A  0E00               	movlw	0
 18675  00148C  0100               	movlb	0	; () banked
 18676  00148E  6F74               	movwf	oled_putString@start_page& (0+255),b
 18677  001490  EC89  F030         	call	_oled_putString	;wreg free
 18678                           
 18679                           ;MOTEapp.c: 316: oled_putString("<- ABP   OTAA ->", 0,2);
 18680  001494  0E98               	movlw	low STR_33
 18681  001496  0100               	movlb	0	; () banked
 18682  001498  6F71               	movwf	oled_putString@string& (0+255),b
 18683  00149A  0E7B               	movlw	high STR_33
 18684  00149C  0100               	movlb	0	; () banked
 18685  00149E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18686  0014A0  0E00               	movlw	0
 18687  0014A2  0100               	movlb	0	; () banked
 18688  0014A4  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18689  0014A6  0E02               	movlw	2
 18690  0014A8  0100               	movlb	0	; () banked
 18691  0014AA  6F74               	movwf	oled_putString@start_page& (0+255),b
 18692  0014AC  EC89  F030         	call	_oled_putString	;wreg free
 18693                           
 18694                           ;MOTEapp.c: 317: oled_putString("  (S2)   (S3)   ", 0,3);
 18695  0014B0  0EEE               	movlw	low STR_34
 18696  0014B2  0100               	movlb	0	; () banked
 18697  0014B4  6F71               	movwf	oled_putString@string& (0+255),b
 18698  0014B6  0E7A               	movlw	high STR_34
 18699  0014B8  0100               	movlb	0	; () banked
 18700  0014BA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18701  0014BC  0E00               	movlw	0
 18702  0014BE  0100               	movlb	0	; () banked
 18703  0014C0  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18704  0014C2  0E03               	movlw	3
 18705  0014C4  0100               	movlb	0	; () banked
 18706  0014C6  6F74               	movwf	oled_putString@start_page& (0+255),b
 18707  0014C8  EC89  F030         	call	_oled_putString	;wreg free
 18708                           
 18709                           ;MOTEapp.c: 318: activeState = moteJoinMethod;
 18710  0014CC  0E02               	movlw	2
 18711  0014CE  0100               	movlb	0	; () banked
 18712  0014D0  6FEB               	movwf	_activeState& (0+255),b
 18713                           
 18714                           ;MOTEapp.c: 319: }
 18715  0014D2  D343               	goto	l13881
 18716  0014D4                     l13719:
 18717                           
 18718                           ; BSR set to: 0
 18719                           ;MOTEapp.c: 320: else if(strncmp(moduleResonseBuffer, "RN29", 4) == 0)
 18720  0014D4  0E5D               	movlw	low _moduleResonseBuffer
 18721  0014D6  0100               	movlb	0	; () banked
 18722  0014D8  6F60               	movwf	strncmp@s1& (0+255),b
 18723  0014DA  0E01               	movlw	high _moduleResonseBuffer
 18724  0014DC  0100               	movlb	0	; () banked
 18725  0014DE  6F61               	movwf	(strncmp@s1+1)& (0+255),b
 18726  0014E0  0EBD               	movlw	low STR_35
 18727  0014E2  0100               	movlb	0	; () banked
 18728  0014E4  6F62               	movwf	strncmp@s2& (0+255),b
 18729  0014E6  0E7F               	movlw	high STR_35
 18730  0014E8  0100               	movlb	0	; () banked
 18731  0014EA  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 18732  0014EC  0E00               	movlw	0
 18733  0014EE  0100               	movlb	0	; () banked
 18734  0014F0  6F65               	movwf	(strncmp@len+1)& (0+255),b
 18735  0014F2  0E04               	movlw	4
 18736  0014F4  6F64               	movwf	strncmp@len& (0+255),b
 18737  0014F6  ECFE  F02C         	call	_strncmp	;wreg free
 18738  0014FA  0100               	movlb	0	; () banked
 18739  0014FC  5160               	movf	?_strncmp& (0+255),w,b
 18740  0014FE  0100               	movlb	0	; () banked
 18741  001500  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 18742  001502  A4D8               	btfss	status,2,c
 18743  001504  D001               	goto	u13161
 18744  001506  D001               	goto	u13160
 18745  001508                     u13161:
 18746  001508  D033               	goto	l13733
 18747  00150A                     u13160:
 18748                           
 18749                           ; BSR set to: 0
 18750                           ;MOTEapp.c: 321: {
 18751                           ;MOTEapp.c: 322: rnModule = rn2903;
 18752  00150A  0E01               	movlw	1
 18753  00150C  0100               	movlb	0	; () banked
 18754  00150E  6FE2               	movwf	_rnModule& (0+255),b
 18755                           
 18756                           ; BSR set to: 0
 18757                           ;MOTEapp.c: 323: oled_clear();
 18758  001510  ECA5  F038         	call	_oled_clear	;wreg free
 18759                           
 18760                           ;MOTEapp.c: 324: oled_putString(" Joining Method ",0,0);
 18761  001514  0E43               	movlw	low STR_32
 18762  001516  0100               	movlb	0	; () banked
 18763  001518  6F71               	movwf	oled_putString@string& (0+255),b
 18764  00151A  0E7B               	movlw	high STR_32
 18765  00151C  0100               	movlb	0	; () banked
 18766  00151E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18767  001520  0E00               	movlw	0
 18768  001522  0100               	movlb	0	; () banked
 18769  001524  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18770  001526  0E00               	movlw	0
 18771  001528  0100               	movlb	0	; () banked
 18772  00152A  6F74               	movwf	oled_putString@start_page& (0+255),b
 18773  00152C  EC89  F030         	call	_oled_putString	;wreg free
 18774                           
 18775                           ;MOTEapp.c: 325: oled_putString("<- ABP   OTAA ->", 0,2);
 18776  001530  0E98               	movlw	low STR_33
 18777  001532  0100               	movlb	0	; () banked
 18778  001534  6F71               	movwf	oled_putString@string& (0+255),b
 18779  001536  0E7B               	movlw	high STR_33
 18780  001538  0100               	movlb	0	; () banked
 18781  00153A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18782  00153C  0E00               	movlw	0
 18783  00153E  0100               	movlb	0	; () banked
 18784  001540  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18785  001542  0E02               	movlw	2
 18786  001544  0100               	movlb	0	; () banked
 18787  001546  6F74               	movwf	oled_putString@start_page& (0+255),b
 18788  001548  EC89  F030         	call	_oled_putString	;wreg free
 18789                           
 18790                           ;MOTEapp.c: 326: oled_putString("  (S2)   (S3)   ", 0,3);
 18791  00154C  0EEE               	movlw	low STR_34
 18792  00154E  0100               	movlb	0	; () banked
 18793  001550  6F71               	movwf	oled_putString@string& (0+255),b
 18794  001552  0E7A               	movlw	high STR_34
 18795  001554  0100               	movlb	0	; () banked
 18796  001556  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18797  001558  0E00               	movlw	0
 18798  00155A  0100               	movlb	0	; () banked
 18799  00155C  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18800  00155E  0E03               	movlw	3
 18801  001560  0100               	movlb	0	; () banked
 18802  001562  6F74               	movwf	oled_putString@start_page& (0+255),b
 18803  001564  EC89  F030         	call	_oled_putString	;wreg free
 18804                           
 18805                           ;MOTEapp.c: 327: activeState = moteJoinMethod;
 18806  001568  0E02               	movlw	2
 18807  00156A  0100               	movlb	0	; () banked
 18808  00156C  6FEB               	movwf	_activeState& (0+255),b
 18809                           
 18810                           ;MOTEapp.c: 328: }
 18811  00156E  D2F5               	goto	l13881
 18812  001570                     l13733:
 18813                           
 18814                           ; BSR set to: 0
 18815                           ;MOTEapp.c: 329: else
 18816                           ;MOTEapp.c: 330: {
 18817                           ;MOTEapp.c: 331: sendCommand("sys reset");
 18818  001570  0EFC               	movlw	low STR_30
 18819  001572  0100               	movlb	0	; () banked
 18820  001574  6F61               	movwf	sendCommand@string& (0+255),b
 18821  001576  0E7E               	movlw	high STR_30
 18822  001578  0100               	movlb	0	; () banked
 18823  00157A  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18824  00157C  EC65  F037         	call	_sendCommand	;wreg free
 18825                           
 18826                           ;MOTEapp.c: 332: moteApp_delayms(25);
 18827  001580  0E00               	movlw	0
 18828  001582  0100               	movlb	0	; () banked
 18829  001584  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 18830  001586  0E19               	movlw	25
 18831  001588  6F60               	movwf	moteApp_delayms@length& (0+255),b
 18832  00158A  EC90  F036         	call	_moteApp_delayms	;wreg free
 18833                           
 18834                           ;MOTEapp.c: 333: activeState = moteStartup;
 18835  00158E  0E00               	movlw	0
 18836  001590  0100               	movlb	0	; () banked
 18837  001592  6FEB               	movwf	_activeState& (0+255),b
 18838  001594  D2E2               	goto	l13881
 18839                           
 18840                           ; BSR set to: 0
 18841  001596  D2E1               	goto	l13881
 18842                           
 18843                           ; BSR set to: 0
 18844  001598  D2E0               	goto	l13881
 18845                           
 18846                           ; BSR set to: 0
 18847                           ;MOTEapp.c: 334: }
 18848                           ;MOTEapp.c: 335: }
 18849                           ;MOTEapp.c: 336: break;
 18850  00159A  D2DF               	goto	l13881
 18851  00159C                     l13739:
 18852                           
 18853                           ; BSR set to: 0
 18854                           ;MOTEapp.c: 338: if (changeStates)
 18855  00159C  0100               	movlb	0	; () banked
 18856  00159E  5176               	movf	moteJoiningProcess@changeStates& (0+255),w,b
 18857  0015A0  0100               	movlb	0	; () banked
 18858  0015A2  B4D8               	btfsc	status,2,c
 18859  0015A4  D001               	goto	u13171
 18860  0015A6  D001               	goto	u13170
 18861  0015A8                     u13171:
 18862  0015A8  D021               	goto	l13749
 18863  0015AA                     u13170:
 18864                           
 18865                           ; BSR set to: 0
 18866                           ;MOTEapp.c: 339: {
 18867                           ;MOTEapp.c: 340: oled_putString("  (S2)          ", 0,3);
 18868  0015AA  0EBB               	movlw	low STR_40
 18869  0015AC  0100               	movlb	0	; () banked
 18870  0015AE  6F71               	movwf	oled_putString@string& (0+255),b
 18871  0015B0  0E7A               	movlw	high STR_40
 18872  0015B2  0100               	movlb	0	; () banked
 18873  0015B4  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18874  0015B6  0E00               	movlw	0
 18875  0015B8  0100               	movlb	0	; () banked
 18876  0015BA  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18877  0015BC  0E03               	movlw	3
 18878  0015BE  0100               	movlb	0	; () banked
 18879  0015C0  6F74               	movwf	oled_putString@start_page& (0+255),b
 18880  0015C2  EC89  F030         	call	_oled_putString	;wreg free
 18881                           
 18882                           ;MOTEapp.c: 341: moteApp_delayms(500);
 18883  0015C6  0E01               	movlw	1
 18884  0015C8  0100               	movlb	0	; () banked
 18885  0015CA  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 18886  0015CC  0EF4               	movlw	244
 18887  0015CE  6F60               	movwf	moteApp_delayms@length& (0+255),b
 18888  0015D0  EC90  F036         	call	_moteApp_delayms	;wreg free
 18889                           
 18890                           ;MOTEapp.c: 342: sendCommand("mac join abp");
 18891  0015D4  0EE7               	movlw	low STR_41
 18892  0015D6  0100               	movlb	0	; () banked
 18893  0015D8  6F61               	movwf	sendCommand@string& (0+255),b
 18894  0015DA  0E7D               	movlw	high STR_41
 18895  0015DC  0100               	movlb	0	; () banked
 18896  0015DE  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18897  0015E0  EC65  F037         	call	_sendCommand	;wreg free
 18898                           
 18899                           ;MOTEapp.c: 343: activeState = moteCheckAbp;
 18900  0015E4  0E03               	movlw	3
 18901  0015E6  0100               	movlb	0	; () banked
 18902  0015E8  6FEB               	movwf	_activeState& (0+255),b
 18903                           
 18904                           ;MOTEapp.c: 344: }
 18905  0015EA  D2B7               	goto	l13881
 18906  0015EC                     l13749:
 18907                           
 18908                           ; BSR set to: 0
 18909                           ;MOTEapp.c: 345: else if (selectButton)
 18910  0015EC  0100               	movlb	0	; () banked
 18911  0015EE  5177               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 18912  0015F0  0100               	movlb	0	; () banked
 18913  0015F2  B4D8               	btfsc	status,2,c
 18914  0015F4  D001               	goto	u13181
 18915  0015F6  D001               	goto	u13180
 18916  0015F8                     u13181:
 18917  0015F8  D2B0               	goto	l13881
 18918  0015FA                     u13180:
 18919                           
 18920                           ; BSR set to: 0
 18921                           ;MOTEapp.c: 346: {
 18922                           ;MOTEapp.c: 347: oled_putString("         (S3)   ", 0,3);
 18923  0015FA  0EDD               	movlw	low STR_42
 18924  0015FC  0100               	movlb	0	; () banked
 18925  0015FE  6F71               	movwf	oled_putString@string& (0+255),b
 18926  001600  0E7A               	movlw	high STR_42
 18927  001602  0100               	movlb	0	; () banked
 18928  001604  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18929  001606  0E00               	movlw	0
 18930  001608  0100               	movlb	0	; () banked
 18931  00160A  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18932  00160C  0E03               	movlw	3
 18933  00160E  0100               	movlb	0	; () banked
 18934  001610  6F74               	movwf	oled_putString@start_page& (0+255),b
 18935  001612  EC89  F030         	call	_oled_putString	;wreg free
 18936                           
 18937                           ;MOTEapp.c: 348: moteApp_delayms(500);
 18938  001616  0E01               	movlw	1
 18939  001618  0100               	movlb	0	; () banked
 18940  00161A  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 18941  00161C  0EF4               	movlw	244
 18942  00161E  6F60               	movwf	moteApp_delayms@length& (0+255),b
 18943  001620  EC90  F036         	call	_moteApp_delayms	;wreg free
 18944                           
 18945                           ;MOTEapp.c: 349: sendCommand("mac join otaa");
 18946  001624  0E3B               	movlw	low STR_43
 18947  001626  0100               	movlb	0	; () banked
 18948  001628  6F61               	movwf	sendCommand@string& (0+255),b
 18949  00162A  0E7D               	movlw	high STR_43
 18950  00162C  0100               	movlb	0	; () banked
 18951  00162E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18952  001630  EC65  F037         	call	_sendCommand	;wreg free
 18953                           
 18954                           ;MOTEapp.c: 350: activeState = moteCheckOtaa;
 18955  001634  0E05               	movlw	5
 18956  001636  0100               	movlb	0	; () banked
 18957  001638  6FEB               	movwf	_activeState& (0+255),b
 18958  00163A  D28F               	goto	l13881
 18959                           
 18960                           ; BSR set to: 0
 18961  00163C  D28E               	goto	l13881
 18962                           
 18963                           ; BSR set to: 0
 18964                           ;MOTEapp.c: 351: }
 18965                           ;MOTEapp.c: 352: break;
 18966  00163E  D28D               	goto	l13881
 18967  001640                     l13759:
 18968                           
 18969                           ; BSR set to: 0
 18970                           ;MOTEapp.c: 354: if ( messageReady )
 18971  001640  0100               	movlb	0	; () banked
 18972  001642  517B               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 18973  001644  0100               	movlb	0	; () banked
 18974  001646  B4D8               	btfsc	status,2,c
 18975  001648  D001               	goto	u13191
 18976  00164A  D001               	goto	u13190
 18977  00164C                     u13191:
 18978  00164C  D286               	goto	l13881
 18979  00164E                     u13190:
 18980                           
 18981                           ; BSR set to: 0
 18982                           ;MOTEapp.c: 355: {
 18983                           ;MOTEapp.c: 356: if(strcmp(moduleResonseBuffer, "ok") == 0)
 18984  00164E  0E5D               	movlw	low _moduleResonseBuffer
 18985  001650  0100               	movlb	0	; () banked
 18986  001652  6F60               	movwf	strcmp@s1& (0+255),b
 18987  001654  0E01               	movlw	high _moduleResonseBuffer
 18988  001656  0100               	movlb	0	; () banked
 18989  001658  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 18990  00165A  0EF7               	movlw	low STR_44
 18991  00165C  0100               	movlb	0	; () banked
 18992  00165E  6F62               	movwf	strcmp@s2& (0+255),b
 18993  001660  0E7F               	movlw	high STR_44
 18994  001662  0100               	movlb	0	; () banked
 18995  001664  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 18996  001666  ECD1  F033         	call	_strcmp	;wreg free
 18997  00166A  0100               	movlb	0	; () banked
 18998  00166C  5160               	movf	?_strcmp& (0+255),w,b
 18999  00166E  0100               	movlb	0	; () banked
 19000  001670  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 19001  001672  A4D8               	btfss	status,2,c
 19002  001674  D001               	goto	u13201
 19003  001676  D001               	goto	u13200
 19004  001678                     u13201:
 19005  001678  D004               	goto	l13765
 19006  00167A                     u13200:
 19007                           
 19008                           ; BSR set to: 0
 19009                           ;MOTEapp.c: 357: {
 19010                           ;MOTEapp.c: 358: activeState = moteWaitAbp;
 19011  00167A  0E04               	movlw	4
 19012  00167C  0100               	movlb	0	; () banked
 19013  00167E  6FEB               	movwf	_activeState& (0+255),b
 19014                           
 19015                           ;MOTEapp.c: 359: }
 19016  001680  D26C               	goto	l13881
 19017  001682                     l13765:
 19018                           
 19019                           ; BSR set to: 0
 19020                           ;MOTEapp.c: 360: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 19021  001682  0E5D               	movlw	low _moduleResonseBuffer
 19022  001684  0100               	movlb	0	; () banked
 19023  001686  6F60               	movwf	strcmp@s1& (0+255),b
 19024  001688  0E01               	movlw	high _moduleResonseBuffer
 19025  00168A  0100               	movlb	0	; () banked
 19026  00168C  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 19027  00168E  0E57               	movlw	low STR_45
 19028  001690  0100               	movlb	0	; () banked
 19029  001692  6F62               	movwf	strcmp@s2& (0+255),b
 19030  001694  0E7D               	movlw	high STR_45
 19031  001696  0100               	movlb	0	; () banked
 19032  001698  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 19033  00169A  ECD1  F033         	call	_strcmp	;wreg free
 19034  00169E  0100               	movlb	0	; () banked
 19035  0016A0  5160               	movf	?_strcmp& (0+255),w,b
 19036  0016A2  0100               	movlb	0	; () banked
 19037  0016A4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 19038  0016A6  A4D8               	btfss	status,2,c
 19039  0016A8  D001               	goto	u13211
 19040  0016AA  D001               	goto	u13210
 19041  0016AC                     u13211:
 19042  0016AC  D022               	goto	l13775
 19043  0016AE                     u13210:
 19044                           
 19045                           ; BSR set to: 0
 19046                           ;MOTEapp.c: 361: {
 19047                           ;MOTEapp.c: 362: oled_clear();
 19048  0016AE  ECA5  F038         	call	_oled_clear	;wreg free
 19049                           
 19050                           ;MOTEapp.c: 363: oled_putString("Valid Keys",0,0);
 19051  0016B2  0EB4               	movlw	low STR_46
 19052  0016B4  0100               	movlb	0	; () banked
 19053  0016B6  6F71               	movwf	oled_putString@string& (0+255),b
 19054  0016B8  0E7E               	movlw	high STR_46
 19055  0016BA  0100               	movlb	0	; () banked
 19056  0016BC  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 19057  0016BE  0E00               	movlw	0
 19058  0016C0  0100               	movlb	0	; () banked
 19059  0016C2  6F73               	movwf	oled_putString@station_dot& (0+255),b
 19060  0016C4  0E00               	movlw	0
 19061  0016C6  0100               	movlb	0	; () banked
 19062  0016C8  6F74               	movwf	oled_putString@start_page& (0+255),b
 19063  0016CA  EC89  F030         	call	_oled_putString	;wreg free
 19064                           
 19065                           ;MOTEapp.c: 364: oled_putString("Required",0,1);
 19066  0016CE  0E19               	movlw	low STR_47
 19067  0016D0  0100               	movlb	0	; () banked
 19068  0016D2  6F71               	movwf	oled_putString@string& (0+255),b
 19069  0016D4  0E7F               	movlw	high STR_47
 19070  0016D6  0100               	movlb	0	; () banked
 19071  0016D8  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 19072  0016DA  0E00               	movlw	0
 19073  0016DC  0100               	movlb	0	; () banked
 19074  0016DE  6F73               	movwf	oled_putString@station_dot& (0+255),b
 19075  0016E0  0E01               	movlw	1
 19076  0016E2  0100               	movlb	0	; () banked
 19077  0016E4  6F74               	movwf	oled_putString@start_page& (0+255),b
 19078  0016E6  EC89  F030         	call	_oled_putString	;wreg free
 19079                           
 19080                           ;MOTEapp.c: 365: activeState = moteNeedKeys;
 19081  0016EA  0E09               	movlw	9
 19082  0016EC  0100               	movlb	0	; () banked
 19083  0016EE  6FEB               	movwf	_activeState& (0+255),b
 19084                           
 19085                           ;MOTEapp.c: 366: }
 19086  0016F0  D234               	goto	l13881
 19087  0016F2                     l13775:
 19088                           
 19089                           ; BSR set to: 0
 19090                           ;MOTEapp.c: 367: else
 19091                           ;MOTEapp.c: 368: {
 19092                           ;MOTEapp.c: 369: sendCommand("mac join abp");
 19093  0016F2  0EE7               	movlw	low STR_41
 19094  0016F4  0100               	movlb	0	; () banked
 19095  0016F6  6F61               	movwf	sendCommand@string& (0+255),b
 19096  0016F8  0E7D               	movlw	high STR_41
 19097  0016FA  0100               	movlb	0	; () banked
 19098  0016FC  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 19099  0016FE  EC65  F037         	call	_sendCommand	;wreg free
 19100                           
 19101                           ;MOTEapp.c: 370: activeState = moteCheckAbp;
 19102  001702  0E03               	movlw	3
 19103  001704  0100               	movlb	0	; () banked
 19104  001706  6FEB               	movwf	_activeState& (0+255),b
 19105  001708  D228               	goto	l13881
 19106                           
 19107                           ; BSR set to: 0
 19108  00170A  D227               	goto	l13881
 19109                           
 19110                           ; BSR set to: 0
 19111  00170C  D226               	goto	l13881
 19112                           
 19113                           ; BSR set to: 0
 19114                           ;MOTEapp.c: 371: }
 19115                           ;MOTEapp.c: 372: }
 19116                           ;MOTEapp.c: 373: break;
 19117  00170E  D225               	goto	l13881
 19118  001710                     l13779:
 19119                           
 19120                           ; BSR set to: 0
 19121                           ;MOTEapp.c: 375: if ( messageReady )
 19122  001710  0100               	movlb	0	; () banked
 19123  001712  517B               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 19124  001714  0100               	movlb	0	; () banked
 19125  001716  B4D8               	btfsc	status,2,c
 19126  001718  D001               	goto	u13221
 19127  00171A  D001               	goto	u13220
 19128  00171C                     u13221:
 19129  00171C  D21E               	goto	l13881
 19130  00171E                     u13220:
 19131                           
 19132                           ; BSR set to: 0
 19133                           ;MOTEapp.c: 376: {
 19134                           ;MOTEapp.c: 377: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 19135  00171E  0E5D               	movlw	low _moduleResonseBuffer
 19136  001720  0100               	movlb	0	; () banked
 19137  001722  6F60               	movwf	strcmp@s1& (0+255),b
 19138  001724  0E01               	movlw	high _moduleResonseBuffer
 19139  001726  0100               	movlb	0	; () banked
 19140  001728  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 19141  00172A  0E22               	movlw	low STR_49
 19142  00172C  0100               	movlb	0	; () banked
 19143  00172E  6F62               	movwf	strcmp@s2& (0+255),b
 19144  001730  0E7F               	movlw	high STR_49
 19145  001732  0100               	movlb	0	; () banked
 19146  001734  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 19147  001736  ECD1  F033         	call	_strcmp	;wreg free
 19148  00173A  0100               	movlb	0	; () banked
 19149  00173C  5160               	movf	?_strcmp& (0+255),w,b
 19150  00173E  0100               	movlb	0	; () banked
 19151  001740  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 19152  001742  A4D8               	btfss	status,2,c
 19153  001744  D001               	goto	u13231
 19154  001746  D001               	goto	u13230
 19155  001748                     u13231:
 19156  001748  D022               	goto	l13791
 19157  00174A                     u13230:
 19158                           
 19159                           ; BSR set to: 0
 19160                           ;MOTEapp.c: 378: {
 19161                           ;MOTEapp.c: 379: oled_clear();
 19162  00174A  ECA5  F038         	call	_oled_clear	;wreg free
 19163                           
 19164                           ;MOTEapp.c: 380: oled_putString("ABP Join ",0,0);
 19165  00174E  0ED4               	movlw	low STR_50
 19166  001750  0100               	movlb	0	; () banked
 19167  001752  6F71               	movwf	oled_putString@string& (0+255),b
 19168  001754  0E7E               	movlw	high STR_50
 19169  001756  0100               	movlb	0	; () banked
 19170  001758  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 19171  00175A  0E00               	movlw	0
 19172  00175C  0100               	movlb	0	; () banked
 19173  00175E  6F73               	movwf	oled_putString@station_dot& (0+255),b
 19174  001760  0E00               	movlw	0
 19175  001762  0100               	movlb	0	; () banked
 19176  001764  6F74               	movwf	oled_putString@start_page& (0+255),b
 19177  001766  EC89  F030         	call	_oled_putString	;wreg free
 19178                           
 19179                           ;MOTEapp.c: 381: oled_putString("Successful",0,1);
 19180  00176A  0E9E               	movlw	low STR_51
 19181  00176C  0100               	movlb	0	; () banked
 19182  00176E  6F71               	movwf	oled_putString@string& (0+255),b
 19183  001770  0E7E               	movlw	high STR_51
 19184  001772  0100               	movlb	0	; () banked
 19185  001774  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 19186  001776  0E00               	movlw	0
 19187  001778  0100               	movlb	0	; () banked
 19188  00177A  6F73               	movwf	oled_putString@station_dot& (0+255),b
 19189  00177C  0E01               	movlw	1
 19190  00177E  0100               	movlb	0	; () banked
 19191  001780  6F74               	movwf	oled_putString@start_page& (0+255),b
 19192  001782  EC89  F030         	call	_oled_putString	;wreg free
 19193                           
 19194                           ;MOTEapp.c: 382: activeState = moteJoined;
 19195  001786  0E07               	movlw	7
 19196  001788  0100               	movlb	0	; () banked
 19197  00178A  6FEB               	movwf	_activeState& (0+255),b
 19198                           
 19199                           ;MOTEapp.c: 383: }
 19200  00178C  D1E6               	goto	l13881
 19201  00178E                     l13791:
 19202                           
 19203                           ; BSR set to: 0
 19204                           ;MOTEapp.c: 384: else
 19205                           ;MOTEapp.c: 385: {
 19206                           ;MOTEapp.c: 386: sendCommand("mac reset");
 19207  00178E  0EF2               	movlw	low STR_52
 19208  001790  0100               	movlb	0	; () banked
 19209  001792  6F61               	movwf	sendCommand@string& (0+255),b
 19210  001794  0E7E               	movlw	high STR_52
 19211  001796  0100               	movlb	0	; () banked
 19212  001798  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 19213  00179A  EC65  F037         	call	_sendCommand	;wreg free
 19214                           
 19215                           ;MOTEapp.c: 387: activeState = moteReset;
 19216  00179E  0E01               	movlw	1
 19217  0017A0  0100               	movlb	0	; () banked
 19218  0017A2  6FEB               	movwf	_activeState& (0+255),b
 19219  0017A4  D1DA               	goto	l13881
 19220                           
 19221                           ; BSR set to: 0
 19222  0017A6  D1D9               	goto	l13881
 19223                           
 19224                           ; BSR set to: 0
 19225                           ;MOTEapp.c: 388: }
 19226                           ;MOTEapp.c: 389: }
 19227                           ;MOTEapp.c: 390: break;
 19228  0017A8  D1D8               	goto	l13881
 19229  0017AA                     l13795:
 19230                           
 19231                           ; BSR set to: 0
 19232                           ;MOTEapp.c: 393: if ( messageReady )
 19233  0017AA  0100               	movlb	0	; () banked
 19234  0017AC  517B               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 19235  0017AE  0100               	movlb	0	; () banked
 19236  0017B0  B4D8               	btfsc	status,2,c
 19237  0017B2  D001               	goto	u13241
 19238  0017B4  D001               	goto	u13240
 19239  0017B6                     u13241:
 19240  0017B6  D1D1               	goto	l13881
 19241  0017B8                     u13240:
 19242                           
 19243                           ; BSR set to: 0
 19244                           ;MOTEapp.c: 394: {
 19245                           ;MOTEapp.c: 395: if(strcmp(moduleResonseBuffer, "ok") == 0)
 19246  0017B8  0E5D               	movlw	low _moduleResonseBuffer
 19247  0017BA  0100               	movlb	0	; () banked
 19248  0017BC  6F60               	movwf	strcmp@s1& (0+255),b
 19249  0017BE  0E01               	movlw	high _moduleResonseBuffer
 19250  0017C0  0100               	movlb	0	; () banked
 19251  0017C2  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 19252  0017C4  0EF7               	movlw	low STR_44
 19253  0017C6  0100               	movlb	0	; () banked
 19254  0017C8  6F62               	movwf	strcmp@s2& (0+255),b
 19255  0017CA  0E7F               	movlw	high STR_44
 19256  0017CC  0100               	movlb	0	; () banked
 19257  0017CE  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 19258  0017D0  ECD1  F033         	call	_strcmp	;wreg free
 19259  0017D4  0100               	movlb	0	; () banked
 19260  0017D6  5160               	movf	?_strcmp& (0+255),w,b
 19261  0017D8  0100               	movlb	0	; () banked
 19262  0017DA  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 19263  0017DC  A4D8               	btfss	status,2,c
 19264  0017DE  D001               	goto	u13251
 19265  0017E0  D001               	goto	u13250
 19266  0017E2                     u13251:
 19267  0017E2  D004               	goto	l13801
 19268  0017E4                     u13250:
 19269                           
 19270                           ; BSR set to: 0
 19271                           ;MOTEapp.c: 396: {
 19272                           ;MOTEapp.c: 397: activeState = moteWaitOtaa;
 19273  0017E4  0E06               	movlw	6
 19274  0017E6  0100               	movlb	0	; () banked
 19275  0017E8  6FEB               	movwf	_activeState& (0+255),b
 19276                           
 19277                           ;MOTEapp.c: 398: }
 19278  0017EA  D1B7               	goto	l13881
 19279  0017EC                     l13801:
 19280                           
 19281                           ; BSR set to: 0
 19282                           ;MOTEapp.c: 399: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 19283  0017EC  0E5D               	movlw	low _moduleResonseBuffer
 19284  0017EE  0100               	movlb	0	; () banked
 19285  0017F0  6F60               	movwf	strcmp@s1& (0+255),b
 19286  0017F2  0E01               	movlw	high _moduleResonseBuffer
 19287  0017F4  0100               	movlb	0	; () banked
 19288  0017F6  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 19289  0017F8  0E57               	movlw	low STR_45
 19290  0017FA  0100               	movlb	0	; () banked
 19291  0017FC  6F62               	movwf	strcmp@s2& (0+255),b
 19292  0017FE  0E7D               	movlw	high STR_45
 19293  001800  0100               	movlb	0	; () banked
 19294  001802  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 19295  001804  ECD1  F033         	call	_strcmp	;wreg free
 19296  001808  0100               	movlb	0	; () banked
 19297  00180A  5160               	movf	?_strcmp& (0+255),w,b
 19298  00180C  0100               	movlb	0	; () banked
 19299  00180E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 19300  001810  A4D8               	btfss	status,2,c
 19301  001812  D001               	goto	u13261
 19302  001814  D001               	goto	u13260
 19303  001816                     u13261:
 19304  001816  D022               	goto	l13811
 19305  001818                     u13260:
 19306                           
 19307                           ; BSR set to: 0
 19308                           ;MOTEapp.c: 400: {
 19309                           ;MOTEapp.c: 401: oled_clear();
 19310  001818  ECA5  F038         	call	_oled_clear	;wreg free
 19311                           
 19312                           ;MOTEapp.c: 402: oled_putString("Valid Keys",0,0);
 19313  00181C  0EB4               	movlw	low STR_46
 19314  00181E  0100               	movlb	0	; () banked
 19315  001820  6F71               	movwf	oled_putString@string& (0+255),b
 19316  001822  0E7E               	movlw	high STR_46
 19317  001824  0100               	movlb	0	; () banked
 19318  001826  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 19319  001828  0E00               	movlw	0
 19320  00182A  0100               	movlb	0	; () banked
 19321  00182C  6F73               	movwf	oled_putString@station_dot& (0+255),b
 19322  00182E  0E00               	movlw	0
 19323  001830  0100               	movlb	0	; () banked
 19324  001832  6F74               	movwf	oled_putString@start_page& (0+255),b
 19325  001834  EC89  F030         	call	_oled_putString	;wreg free
 19326                           
 19327                           ;MOTEapp.c: 403: oled_putString("Required",0,1);
 19328  001838  0E19               	movlw	low STR_47
 19329  00183A  0100               	movlb	0	; () banked
 19330  00183C  6F71               	movwf	oled_putString@string& (0+255),b
 19331  00183E  0E7F               	movlw	high STR_47
 19332  001840  0100               	movlb	0	; () banked
 19333  001842  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 19334  001844  0E00               	movlw	0
 19335  001846  0100               	movlb	0	; () banked
 19336  001848  6F73               	movwf	oled_putString@station_dot& (0+255),b
 19337  00184A  0E01               	movlw	1
 19338  00184C  0100               	movlb	0	; () banked
 19339  00184E  6F74               	movwf	oled_putString@start_page& (0+255),b
 19340  001850  EC89  F030         	call	_oled_putString	;wreg free
 19341                           
 19342                           ;MOTEapp.c: 404: activeState = moteNeedKeys;
 19343  001854  0E09               	movlw	9
 19344  001856  0100               	movlb	0	; () banked
 19345  001858  6FEB               	movwf	_activeState& (0+255),b
 19346                           
 19347                           ;MOTEapp.c: 405: }
 19348  00185A  D17F               	goto	l13881
 19349  00185C                     l13811:
 19350                           
 19351                           ; BSR set to: 0
 19352                           ;MOTEapp.c: 406: else if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 19353  00185C  0E5D               	movlw	low _moduleResonseBuffer
 19354  00185E  0100               	movlb	0	; () banked
 19355  001860  6F60               	movwf	strcmp@s1& (0+255),b
 19356  001862  0E01               	movlw	high _moduleResonseBuffer
 19357  001864  0100               	movlb	0	; () banked
 19358  001866  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 19359  001868  0E49               	movlw	low STR_57
 19360  00186A  0100               	movlb	0	; () banked
 19361  00186C  6F62               	movwf	strcmp@s2& (0+255),b
 19362  00186E  0E7D               	movlw	high STR_57
 19363  001870  0100               	movlb	0	; () banked
 19364  001872  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 19365  001874  ECD1  F033         	call	_strcmp	;wreg free
 19366  001878  0100               	movlb	0	; () banked
 19367  00187A  5160               	movf	?_strcmp& (0+255),w,b
 19368  00187C  0100               	movlb	0	; () banked
 19369  00187E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 19370  001880  A4D8               	btfss	status,2,c
 19371  001882  D001               	goto	u13271
 19372  001884  D001               	goto	u13270
 19373  001886                     u13271:
 19374  001886  D00C               	goto	l13817
 19375  001888                     u13270:
 19376                           
 19377                           ; BSR set to: 0
 19378                           ;MOTEapp.c: 407: {
 19379                           ;MOTEapp.c: 408: sendCommand("mac join otaa");
 19380  001888  0E3B               	movlw	low STR_43
 19381  00188A  0100               	movlb	0	; () banked
 19382  00188C  6F61               	movwf	sendCommand@string& (0+255),b
 19383  00188E  0E7D               	movlw	high STR_43
 19384  001890  0100               	movlb	0	; () banked
 19385  001892  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 19386  001894  EC65  F037         	call	_sendCommand	;wreg free
 19387                           
 19388                           ;MOTEapp.c: 409: activeState = moteCheckOtaa;
 19389  001898  0E05               	movlw	5
 19390  00189A  0100               	movlb	0	; () banked
 19391  00189C  6FEB               	movwf	_activeState& (0+255),b
 19392                           
 19393                           ;MOTEapp.c: 410: }
 19394  00189E  D15D               	goto	l13881
 19395  0018A0                     l13817:
 19396                           
 19397                           ; BSR set to: 0
 19398                           ;MOTEapp.c: 411: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 19399  0018A0  0E5D               	movlw	low _moduleResonseBuffer
 19400  0018A2  0100               	movlb	0	; () banked
 19401  0018A4  6F60               	movwf	strcmp@s1& (0+255),b
 19402  0018A6  0E01               	movlw	high _moduleResonseBuffer
 19403  0018A8  0100               	movlb	0	; () banked
 19404  0018AA  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 19405  0018AC  0E93               	movlw	low STR_59
 19406  0018AE  0100               	movlb	0	; () banked
 19407  0018B0  6F62               	movwf	strcmp@s2& (0+255),b
 19408  0018B2  0E7E               	movlw	high STR_59
 19409  0018B4  0100               	movlb	0	; () banked
 19410  0018B6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 19411  0018B8  ECD1  F033         	call	_strcmp	;wreg free
 19412  0018BC  0100               	movlb	0	; () banked
 19413  0018BE  5160               	movf	?_strcmp& (0+255),w,b
 19414  0018C0  0100               	movlb	0	; () banked
 19415  0018C2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 19416  0018C4  A4D8               	btfss	status,2,c
 19417  0018C6  D001               	goto	u13281
 19418  0018C8  D001               	goto	u13280
 19419  0018CA                     u13281:
 19420  0018CA  D147               	goto	l13881
 19421  0018CC                     u13280:
 19422                           
 19423                           ; BSR set to: 0
 19424                           ;MOTEapp.c: 412: {
 19425                           ;MOTEapp.c: 413: activeState = moteStartup;
 19426  0018CC  0E00               	movlw	0
 19427  0018CE  0100               	movlb	0	; () banked
 19428  0018D0  6FEB               	movwf	_activeState& (0+255),b
 19429  0018D2  D143               	goto	l13881
 19430                           
 19431                           ; BSR set to: 0
 19432  0018D4  D142               	goto	l13881
 19433                           
 19434                           ; BSR set to: 0
 19435  0018D6  D141               	goto	l13881
 19436                           
 19437                           ; BSR set to: 0
 19438  0018D8  D140               	goto	l13881
 19439                           
 19440                           ; BSR set to: 0
 19441  0018DA  D13F               	goto	l13881
 19442                           
 19443                           ; BSR set to: 0
 19444                           ;MOTEapp.c: 414: }
 19445                           ;MOTEapp.c: 415: }
 19446                           ;MOTEapp.c: 416: break;
 19447  0018DC  D13E               	goto	l13881
 19448  0018DE                     l13821:
 19449                           
 19450                           ; BSR set to: 0
 19451                           ;MOTEapp.c: 418: if ( messageReady )
 19452  0018DE  0100               	movlb	0	; () banked
 19453  0018E0  517B               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 19454  0018E2  0100               	movlb	0	; () banked
 19455  0018E4  B4D8               	btfsc	status,2,c
 19456  0018E6  D001               	goto	u13291
 19457  0018E8  D001               	goto	u13290
 19458  0018EA                     u13291:
 19459  0018EA  D137               	goto	l13881
 19460  0018EC                     u13290:
 19461                           
 19462                           ; BSR set to: 0
 19463                           ;MOTEapp.c: 419: {
 19464                           ;MOTEapp.c: 420: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 19465  0018EC  0E5D               	movlw	low _moduleResonseBuffer
 19466  0018EE  0100               	movlb	0	; () banked
 19467  0018F0  6F60               	movwf	strcmp@s1& (0+255),b
 19468  0018F2  0E01               	movlw	high _moduleResonseBuffer
 19469  0018F4  0100               	movlb	0	; () banked
 19470  0018F6  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 19471  0018F8  0E22               	movlw	low STR_49
 19472  0018FA  0100               	movlb	0	; () banked
 19473  0018FC  6F62               	movwf	strcmp@s2& (0+255),b
 19474  0018FE  0E7F               	movlw	high STR_49
 19475  001900  0100               	movlb	0	; () banked
 19476  001902  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 19477  001904  ECD1  F033         	call	_strcmp	;wreg free
 19478  001908  0100               	movlb	0	; () banked
 19479  00190A  5160               	movf	?_strcmp& (0+255),w,b
 19480  00190C  0100               	movlb	0	; () banked
 19481  00190E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 19482  001910  A4D8               	btfss	status,2,c
 19483  001912  D001               	goto	u13301
 19484  001914  D001               	goto	u13300
 19485  001916                     u13301:
 19486  001916  D022               	goto	l13833
 19487  001918                     u13300:
 19488                           
 19489                           ; BSR set to: 0
 19490                           ;MOTEapp.c: 421: {
 19491                           ;MOTEapp.c: 422: oled_clear();
 19492  001918  ECA5  F038         	call	_oled_clear	;wreg free
 19493                           
 19494                           ;MOTEapp.c: 423: oled_putString("OTAA Join ",0,0);
 19495  00191C  0E88               	movlw	low STR_61
 19496  00191E  0100               	movlb	0	; () banked
 19497  001920  6F71               	movwf	oled_putString@string& (0+255),b
 19498  001922  0E7E               	movlw	high STR_61
 19499  001924  0100               	movlb	0	; () banked
 19500  001926  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 19501  001928  0E00               	movlw	0
 19502  00192A  0100               	movlb	0	; () banked
 19503  00192C  6F73               	movwf	oled_putString@station_dot& (0+255),b
 19504  00192E  0E00               	movlw	0
 19505  001930  0100               	movlb	0	; () banked
 19506  001932  6F74               	movwf	oled_putString@start_page& (0+255),b
 19507  001934  EC89  F030         	call	_oled_putString	;wreg free
 19508                           
 19509                           ;MOTEapp.c: 424: oled_putString("Successful",0,1);
 19510  001938  0E9E               	movlw	low STR_51
 19511  00193A  0100               	movlb	0	; () banked
 19512  00193C  6F71               	movwf	oled_putString@string& (0+255),b
 19513  00193E  0E7E               	movlw	high STR_51
 19514  001940  0100               	movlb	0	; () banked
 19515  001942  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 19516  001944  0E00               	movlw	0
 19517  001946  0100               	movlb	0	; () banked
 19518  001948  6F73               	movwf	oled_putString@station_dot& (0+255),b
 19519  00194A  0E01               	movlw	1
 19520  00194C  0100               	movlb	0	; () banked
 19521  00194E  6F74               	movwf	oled_putString@start_page& (0+255),b
 19522  001950  EC89  F030         	call	_oled_putString	;wreg free
 19523                           
 19524                           ;MOTEapp.c: 425: activeState = moteJoined;
 19525  001954  0E07               	movlw	7
 19526  001956  0100               	movlb	0	; () banked
 19527  001958  6FEB               	movwf	_activeState& (0+255),b
 19528                           
 19529                           ;MOTEapp.c: 426: }
 19530  00195A  D0FF               	goto	l13881
 19531  00195C                     l13833:
 19532                           
 19533                           ; BSR set to: 0
 19534                           ;MOTEapp.c: 427: else if(strcmp(moduleResonseBuffer, "denied") == 0)
 19535  00195C  0E5D               	movlw	low _moduleResonseBuffer
 19536  00195E  0100               	movlb	0	; () banked
 19537  001960  6F60               	movwf	strcmp@s1& (0+255),b
 19538  001962  0E01               	movlw	high _moduleResonseBuffer
 19539  001964  0100               	movlb	0	; () banked
 19540  001966  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 19541  001968  0E95               	movlw	low STR_63
 19542  00196A  0100               	movlb	0	; () banked
 19543  00196C  6F62               	movwf	strcmp@s2& (0+255),b
 19544  00196E  0E7F               	movlw	high STR_63
 19545  001970  0100               	movlb	0	; () banked
 19546  001972  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 19547  001974  ECD1  F033         	call	_strcmp	;wreg free
 19548  001978  0100               	movlb	0	; () banked
 19549  00197A  5160               	movf	?_strcmp& (0+255),w,b
 19550  00197C  0100               	movlb	0	; () banked
 19551  00197E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 19552  001980  A4D8               	btfss	status,2,c
 19553  001982  D001               	goto	u13311
 19554  001984  D001               	goto	u13310
 19555  001986                     u13311:
 19556  001986  D02A               	goto	l13845
 19557  001988                     u13310:
 19558                           
 19559                           ; BSR set to: 0
 19560                           ;MOTEapp.c: 428: {
 19561                           ;MOTEapp.c: 429: oled_clear();
 19562  001988  ECA5  F038         	call	_oled_clear	;wreg free
 19563                           
 19564                           ;MOTEapp.c: 430: oled_putString("OTAA Join",1,0);
 19565  00198C  0EE8               	movlw	low STR_64
 19566  00198E  0100               	movlb	0	; () banked
 19567  001990  6F71               	movwf	oled_putString@string& (0+255),b
 19568  001992  0E7E               	movlw	high STR_64
 19569  001994  0100               	movlb	0	; () banked
 19570  001996  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 19571  001998  0E01               	movlw	1
 19572  00199A  0100               	movlb	0	; () banked
 19573  00199C  6F73               	movwf	oled_putString@station_dot& (0+255),b
 19574  00199E  0E00               	movlw	0
 19575  0019A0  0100               	movlb	0	; () banked
 19576  0019A2  6F74               	movwf	oled_putString@start_page& (0+255),b
 19577  0019A4  EC89  F030         	call	_oled_putString	;wreg free
 19578                           
 19579                           ;MOTEapp.c: 431: oled_putString("Denied",2,1);
 19580  0019A8  0E8E               	movlw	low STR_65
 19581  0019AA  0100               	movlb	0	; () banked
 19582  0019AC  6F71               	movwf	oled_putString@string& (0+255),b
 19583  0019AE  0E7F               	movlw	high STR_65
 19584  0019B0  0100               	movlb	0	; () banked
 19585  0019B2  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 19586  0019B4  0E02               	movlw	2
 19587  0019B6  0100               	movlb	0	; () banked
 19588  0019B8  6F73               	movwf	oled_putString@station_dot& (0+255),b
 19589  0019BA  0E01               	movlw	1
 19590  0019BC  0100               	movlb	0	; () banked
 19591  0019BE  6F74               	movwf	oled_putString@start_page& (0+255),b
 19592  0019C0  EC89  F030         	call	_oled_putString	;wreg free
 19593                           
 19594                           ;MOTEapp.c: 432: sendCommand("mac join otaa");
 19595  0019C4  0E3B               	movlw	low STR_43
 19596  0019C6  0100               	movlb	0	; () banked
 19597  0019C8  6F61               	movwf	sendCommand@string& (0+255),b
 19598  0019CA  0E7D               	movlw	high STR_43
 19599  0019CC  0100               	movlb	0	; () banked
 19600  0019CE  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 19601  0019D0  EC65  F037         	call	_sendCommand	;wreg free
 19602                           
 19603                           ;MOTEapp.c: 433: activeState = moteCheckOtaa;
 19604  0019D4  0E05               	movlw	5
 19605  0019D6  0100               	movlb	0	; () banked
 19606  0019D8  6FEB               	movwf	_activeState& (0+255),b
 19607                           
 19608                           ;MOTEapp.c: 434: }
 19609  0019DA  D0BF               	goto	l13881
 19610  0019DC                     l13845:
 19611                           
 19612                           ; BSR set to: 0
 19613                           ;MOTEapp.c: 435: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 19614  0019DC  0E5D               	movlw	low _moduleResonseBuffer
 19615  0019DE  0100               	movlb	0	; () banked
 19616  0019E0  6F60               	movwf	strcmp@s1& (0+255),b
 19617  0019E2  0E01               	movlw	high _moduleResonseBuffer
 19618  0019E4  0100               	movlb	0	; () banked
 19619  0019E6  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 19620  0019E8  0E93               	movlw	low STR_59
 19621  0019EA  0100               	movlb	0	; () banked
 19622  0019EC  6F62               	movwf	strcmp@s2& (0+255),b
 19623  0019EE  0E7E               	movlw	high STR_59
 19624  0019F0  0100               	movlb	0	; () banked
 19625  0019F2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 19626  0019F4  ECD1  F033         	call	_strcmp	;wreg free
 19627  0019F8  0100               	movlb	0	; () banked
 19628  0019FA  5160               	movf	?_strcmp& (0+255),w,b
 19629  0019FC  0100               	movlb	0	; () banked
 19630  0019FE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 19631  001A00  A4D8               	btfss	status,2,c
 19632  001A02  D001               	goto	u13321
 19633  001A04  D001               	goto	u13320
 19634  001A06                     u13321:
 19635  001A06  D0A9               	goto	l13881
 19636  001A08                     u13320:
 19637                           
 19638                           ; BSR set to: 0
 19639                           ;MOTEapp.c: 436: {
 19640                           ;MOTEapp.c: 437: activeState = moteStartup;
 19641  001A08  0E00               	movlw	0
 19642  001A0A  0100               	movlb	0	; () banked
 19643  001A0C  6FEB               	movwf	_activeState& (0+255),b
 19644  001A0E  D0A5               	goto	l13881
 19645                           
 19646                           ; BSR set to: 0
 19647  001A10  D0A4               	goto	l13881
 19648                           
 19649                           ; BSR set to: 0
 19650  001A12  D0A3               	goto	l13881
 19651                           
 19652                           ; BSR set to: 0
 19653  001A14  D0A2               	goto	l13881
 19654                           
 19655                           ; BSR set to: 0
 19656                           ;MOTEapp.c: 438: }
 19657                           ;MOTEapp.c: 439: }
 19658                           ;MOTEapp.c: 440: break;
 19659  001A16  D0A1               	goto	l13881
 19660  001A18                     l13849:
 19661                           
 19662                           ; BSR set to: 0
 19663                           ;MOTEapp.c: 442: sendCommand("mac get dr");
 19664  001A18  0EA9               	movlw	low STR_68
 19665  001A1A  0100               	movlb	0	; () banked
 19666  001A1C  6F61               	movwf	sendCommand@string& (0+255),b
 19667  001A1E  0E7E               	movlw	high STR_68
 19668  001A20  0100               	movlb	0	; () banked
 19669  001A22  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 19670  001A24  EC65  F037         	call	_sendCommand	;wreg free
 19671                           
 19672                           ;MOTEapp.c: 443: activeState = moteGetDr;
 19673  001A28  0E08               	movlw	8
 19674  001A2A  0100               	movlb	0	; () banked
 19675  001A2C  6FEB               	movwf	_activeState& (0+255),b
 19676                           
 19677                           ;MOTEapp.c: 444: break;
 19678  001A2E  D095               	goto	l13881
 19679  001A30                     l13853:
 19680                           
 19681                           ; BSR set to: 0
 19682                           ;MOTEapp.c: 446: if ( messageReady )
 19683  001A30  0100               	movlb	0	; () banked
 19684  001A32  517B               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 19685  001A34  0100               	movlb	0	; () banked
 19686  001A36  B4D8               	btfsc	status,2,c
 19687  001A38  D001               	goto	u13331
 19688  001A3A  D001               	goto	u13330
 19689  001A3C                     u13331:
 19690  001A3C  D08E               	goto	l13881
 19691  001A3E                     u13330:
 19692                           
 19693                           ; BSR set to: 0
 19694                           ;MOTEapp.c: 447: {
 19695                           ;MOTEapp.c: 448: if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 19696  001A3E  0E5D               	movlw	low _moduleResonseBuffer
 19697  001A40  0100               	movlb	0	; () banked
 19698  001A42  6F60               	movwf	strcmp@s1& (0+255),b
 19699  001A44  0E01               	movlw	high _moduleResonseBuffer
 19700  001A46  0100               	movlb	0	; () banked
 19701  001A48  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 19702  001A4A  0E49               	movlw	low STR_57
 19703  001A4C  0100               	movlb	0	; () banked
 19704  001A4E  6F62               	movwf	strcmp@s2& (0+255),b
 19705  001A50  0E7D               	movlw	high STR_57
 19706  001A52  0100               	movlb	0	; () banked
 19707  001A54  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 19708  001A56  ECD1  F033         	call	_strcmp	;wreg free
 19709  001A5A  0100               	movlb	0	; () banked
 19710  001A5C  5160               	movf	?_strcmp& (0+255),w,b
 19711  001A5E  0100               	movlb	0	; () banked
 19712  001A60  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 19713  001A62  A4D8               	btfss	status,2,c
 19714  001A64  D001               	goto	u13341
 19715  001A66  D001               	goto	u13340
 19716  001A68                     u13341:
 19717  001A68  D00C               	goto	l13861
 19718  001A6A                     u13340:
 19719                           
 19720                           ; BSR set to: 0
 19721                           ;MOTEapp.c: 449: {
 19722                           ;MOTEapp.c: 450: sendCommand("mac get dr");
 19723  001A6A  0EA9               	movlw	low STR_68
 19724  001A6C  0100               	movlb	0	; () banked
 19725  001A6E  6F61               	movwf	sendCommand@string& (0+255),b
 19726  001A70  0E7E               	movlw	high STR_68
 19727  001A72  0100               	movlb	0	; () banked
 19728  001A74  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 19729  001A76  EC65  F037         	call	_sendCommand	;wreg free
 19730                           
 19731                           ;MOTEapp.c: 451: activeState = moteGetDr;
 19732  001A7A  0E08               	movlw	8
 19733  001A7C  0100               	movlb	0	; () banked
 19734  001A7E  6FEB               	movwf	_activeState& (0+255),b
 19735                           
 19736                           ;MOTEapp.c: 452: }
 19737  001A80  D06C               	goto	l13881
 19738  001A82                     l13861:
 19739                           
 19740                           ; BSR set to: 0
 19741                           ;MOTEapp.c: 453: else
 19742                           ;MOTEapp.c: 454: {
 19743                           ;MOTEapp.c: 455: uint8_t readDataRate;
 19744                           ;MOTEapp.c: 456: readDataRate = moduleResonseBuffer[0] - '0';
 19745  001A82  0101               	movlb	1	; () banked
 19746  001A84  515D               	movf	_moduleResonseBuffer& (0+255),w,b
 19747  001A86  0FD0               	addlw	208
 19748  001A88  0100               	movlb	0	; () banked
 19749  001A8A  6F79               	movwf	moteJoiningProcess@readDataRate& (0+255),b
 19750                           
 19751                           ; BSR set to: 0
 19752                           ;MOTEapp.c: 457: dataRateValue = readDataRate;
 19753  001A8C  C079  F0FB         	movff	moteJoiningProcess@readDataRate,_dataRateValue
 19754                           
 19755                           ; BSR set to: 0
 19756                           ;MOTEapp.c: 458: joiningComplete = 1;
 19757  001A90  0E01               	movlw	1
 19758  001A92  0100               	movlb	0	; () banked
 19759  001A94  6F7A               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 19760  001A96  D061               	goto	l13881
 19761                           
 19762                           ; BSR set to: 0
 19763  001A98  D060               	goto	l13881
 19764                           
 19765                           ; BSR set to: 0
 19766                           ;MOTEapp.c: 459: }
 19767                           ;MOTEapp.c: 460: }
 19768                           ;MOTEapp.c: 461: break;
 19769  001A9A  D05F               	goto	l13881
 19770  001A9C                     l13867:
 19771                           
 19772                           ; BSR set to: 0
 19773                           ;MOTEapp.c: 463: if (selectButton)
 19774  001A9C  0100               	movlb	0	; () banked
 19775  001A9E  5177               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 19776  001AA0  0100               	movlb	0	; () banked
 19777  001AA2  B4D8               	btfsc	status,2,c
 19778  001AA4  D001               	goto	u13351
 19779  001AA6  D001               	goto	u13350
 19780  001AA8                     u13351:
 19781  001AA8  D058               	goto	l13881
 19782  001AAA                     u13350:
 19783                           
 19784                           ; BSR set to: 0
 19785                           ;MOTEapp.c: 464: {
 19786                           ;MOTEapp.c: 465: activeState = moteComFailure;
 19787  001AAA  0E0A               	movlw	10
 19788  001AAC  0100               	movlb	0	; () banked
 19789  001AAE  6FEB               	movwf	_activeState& (0+255),b
 19790  001AB0  D054               	goto	l13881
 19791                           
 19792                           ; BSR set to: 0
 19793                           ;MOTEapp.c: 466: }
 19794                           ;MOTEapp.c: 468: break;
 19795  001AB2  D053               	goto	l13881
 19796  001AB4                     l13871:
 19797                           
 19798                           ; BSR set to: 0
 19799                           ;MOTEapp.c: 470: DATAEE_WriteByte(0x00, 0x00);
 19800  001AB4  0E00               	movlw	0
 19801  001AB6  0100               	movlb	0	; () banked
 19802  001AB8  6F60               	movwf	DATAEE_WriteByte@bData& (0+255),b
 19803  001ABA  0E00               	movlw	0
 19804  001ABC  EC0C  F036         	call	_DATAEE_WriteByte
 19805                           
 19806                           ;MOTEapp.c: 471: while((!PORTBbits.RB1) && (!PORTBbits.RB0));
 19807  001AC0  D000               	goto	l440
 19808  001AC2                     l440:
 19809  001AC2  B281               	btfsc	3969,1,c	;volatile
 19810  001AC4  D001               	goto	u13361
 19811  001AC6  D001               	goto	u13360
 19812  001AC8                     u13361:
 19813  001AC8  D006               	goto	l13875
 19814  001ACA                     u13360:
 19815  001ACA  A081               	btfss	3969,0,c	;volatile
 19816  001ACC  D001               	goto	u13371
 19817  001ACE  D001               	goto	u13370
 19818  001AD0                     u13371:
 19819  001AD0  D7F8               	goto	l440
 19820  001AD2                     u13370:
 19821  001AD2  D001               	goto	l13875
 19822  001AD4  D000               	goto	l13875
 19823  001AD6                     l13875:
 19824                           
 19825                           ;MOTEapp.c: 472: _delay((unsigned long)((16)*(48000000/4000.0)));
 19826  001AD6  0EFA               	movlw	250
 19827  001AD8  0100               	movlb	0	; () banked
 19828  001ADA  6F78               	movwf	??_moteJoiningProcess& (0+255),b
 19829  001ADC  0E58               	movlw	88
 19830  001ADE                     u14567:
 19831  001ADE  2EE8               	decfsz	wreg,f,c
 19832  001AE0  D7FE               	bra	u14567
 19833  001AE2  2F78               	decfsz	??_moteJoiningProcess& (0+255),f,b
 19834  001AE4  D7FC               	bra	u14567
 19835  001AE6  F000               	nop	
 19836                           
 19837                           ;MOTEapp.c: 473: _delay((unsigned long)((16)*(48000000/4000.0)));
 19838  001AE8  0EFA               	movlw	250
 19839  001AEA  0100               	movlb	0	; () banked
 19840  001AEC  6F78               	movwf	??_moteJoiningProcess& (0+255),b
 19841  001AEE  0E58               	movlw	88
 19842  001AF0                     u14577:
 19843  001AF0  2EE8               	decfsz	wreg,f,c
 19844  001AF2  D7FE               	bra	u14577
 19845  001AF4  2F78               	decfsz	??_moteJoiningProcess& (0+255),f,b
 19846  001AF6  D7FC               	bra	u14577
 19847  001AF8  F000               	nop	
 19848                           
 19849                           ;MOTEapp.c: 474: _delay((unsigned long)((16)*(48000000/4000.0)));
 19850  001AFA  0EFA               	movlw	250
 19851  001AFC  0100               	movlb	0	; () banked
 19852  001AFE  6F78               	movwf	??_moteJoiningProcess& (0+255),b
 19853  001B00  0E58               	movlw	88
 19854  001B02                     u14587:
 19855  001B02  2EE8               	decfsz	wreg,f,c
 19856  001B04  D7FE               	bra	u14587
 19857  001B06  2F78               	decfsz	??_moteJoiningProcess& (0+255),f,b
 19858  001B08  D7FC               	bra	u14587
 19859  001B0A  F000               	nop	
 19860  001B0C  00FF               	reset		;# 
 19861                           
 19862                           ;MOTEapp.c: 477: break;
 19863  001B0E  D025               	goto	l13881
 19864                           
 19865                           ;MOTEapp.c: 478: }
 19866  001B10  D024               	goto	l13881
 19867  001B12                     l13879:
 19868  001B12  0100               	movlb	0	; () banked
 19869  001B14  51EB               	movf	_activeState& (0+255),w,b
 19870                           
 19871                           ; Switch size 1, requested type "space"
 19872                           ; Number of cases is 11, Range of values is 0 to 10
 19873                           ; switch strategies available:
 19874                           ; Name         Instructions Cycles
 19875                           ; simple_byte           34    18 (average)
 19876                           ;	Chosen strategy is simple_byte
 19877  001B16  0A00               	xorlw	0	; case 0
 19878  001B18  B4D8               	btfsc	status,2,c
 19879  001B1A  D471               	goto	l13697
 19880  001B1C  0A01               	xorlw	1	; case 1
 19881  001B1E  B4D8               	btfsc	status,2,c
 19882  001B20  D47A               	goto	l13701
 19883  001B22  0A03               	xorlw	3	; case 2
 19884  001B24  B4D8               	btfsc	status,2,c
 19885  001B26  D53A               	goto	l13739
 19886  001B28  0A01               	xorlw	1	; case 3
 19887  001B2A  B4D8               	btfsc	status,2,c
 19888  001B2C  D589               	goto	l13759
 19889  001B2E  0A07               	xorlw	7	; case 4
 19890  001B30  B4D8               	btfsc	status,2,c
 19891  001B32  D5EE               	goto	l13779
 19892  001B34  0A01               	xorlw	1	; case 5
 19893  001B36  B4D8               	btfsc	status,2,c
 19894  001B38  D638               	goto	l13795
 19895  001B3A  0A03               	xorlw	3	; case 6
 19896  001B3C  B4D8               	btfsc	status,2,c
 19897  001B3E  D6CF               	goto	l13821
 19898  001B40  0A01               	xorlw	1	; case 7
 19899  001B42  B4D8               	btfsc	status,2,c
 19900  001B44  D769               	goto	l13849
 19901  001B46  0A0F               	xorlw	15	; case 8
 19902  001B48  B4D8               	btfsc	status,2,c
 19903  001B4A  D772               	goto	l13853
 19904  001B4C  0A01               	xorlw	1	; case 9
 19905  001B4E  B4D8               	btfsc	status,2,c
 19906  001B50  D7A5               	goto	l13867
 19907  001B52  0A03               	xorlw	3	; case 10
 19908  001B54  B4D8               	btfsc	status,2,c
 19909  001B56  D7AE               	goto	l13871
 19910  001B58  D450               	goto	l390
 19911  001B5A                     l13881:
 19912                           
 19913                           ;MOTEapp.c: 479: return joiningComplete;
 19914  001B5A  0100               	movlb	0	; () banked
 19915  001B5C  517A               	movf	moteJoiningProcess@joiningComplete& (0+255),w,b
 19916  001B5E  D000               	goto	l445
 19917  001B60                     l445:
 19918                           
 19919                           ; BSR set to: 0
 19920  001B60  0012               	return		;funcret
 19921  001B62                     __end_of_moteJoiningProcess:
 19922                           	opt stack 0
 19923                           tblptru	equ	0xFF8
 19924                           tblptrh	equ	0xFF7
 19925                           tblptrl	equ	0xFF6
 19926                           tablat	equ	0xFF5
 19927                           prodh	equ	0xFF4
 19928                           prodl	equ	0xFF3
 19929                           intcon	equ	0xFF2
 19930                           intcon3	equ	0xFF0
 19931                           postinc0	equ	0xFEE
 19932                           wreg	equ	0xFE8
 19933                           indf1	equ	0xFE7
 19934                           postdec1	equ	0xFE5
 19935                           fsr1h	equ	0xFE2
 19936                           fsr1l	equ	0xFE1
 19937                           indf2	equ	0xFDF
 19938                           fsr2h	equ	0xFDA
 19939                           fsr2l	equ	0xFD9
 19940                           status	equ	0xFD8
 19941                           
 19942 ;; *************** function _strncmp *****************
 19943 ;; Defined at:
 19944 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strncmp.c"
 19945 ;; Parameters:    Size  Location     Type
 19946 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 19947 ;;		 -> moduleResonseBuffer(64), 
 19948 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 19949 ;;		 -> STR_97(7), STR_95(7), STR_93(7), STR_90(7), 
 19950 ;;		 -> STR_35(5), STR_31(5), 
 19951 ;;  len             2    4[BANK0 ] unsigned int 
 19952 ;; Auto vars:     Size  Location     Type
 19953 ;;		None
 19954 ;; Return value:  Size  Location     Type
 19955 ;;                  2    0[BANK0 ] int 
 19956 ;; Registers used:
 19957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 19958 ;; Tracked objects:
 19959 ;;		On entry : 0/0
 19960 ;;		On exit  : 0/0
 19961 ;;		Unchanged: 0/0
 19962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19963 ;;      Params:         0       6       0       0       0       0       0       0       0
 19964 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19965 ;;      Temps:          0       3       0       0       0       0       0       0       0
 19966 ;;      Totals:         0       9       0       0       0       0       0       0       0
 19967 ;;Total ram usage:        9 bytes
 19968 ;; Hardware stack levels used:    1
 19969 ;; Hardware stack levels required when called:   11
 19970 ;; This function calls:
 19971 ;;		Nothing
 19972 ;; This function is called by:
 19973 ;;		_moteJoiningProcess
 19974 ;;		_moteRunningProcess
 19975 ;; This function uses a non-reentrant model
 19976 ;;
 19977                           
 19978                           	psect	text52
 19979  0059FC                     __ptext52:
 19980                           	opt stack 0
 19981  0059FC                     _strncmp:
 19982                           	opt stack 17
 19983                           
 19984                           ; BSR set to: 0
 19985                           ;incstack = 0
 19986  0059FC  D046               	goto	l13021
 19987  0059FE                     l13011:
 19988  0059FE  C060  FFD9         	movff	strncmp@s1,fsr2l
 19989  005A02  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 19990  005A06  50DF               	movf	indf2,w,c
 19991  005A08  B4D8               	btfsc	status,2,c
 19992  005A0A  D001               	goto	u12341
 19993  005A0C  D001               	goto	u12340
 19994  005A0E                     u12341:
 19995  005A0E  D014               	goto	l13015
 19996  005A10                     u12340:
 19997  005A10  C060  FFD9         	movff	strncmp@s1,fsr2l
 19998  005A14  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 19999  005A18  50DF               	movf	indf2,w,c
 20000  005A1A  0100               	movlb	0	; () banked
 20001  005A1C  6F66               	movwf	??_strncmp& (0+255),b
 20002  005A1E  C062  FFF6         	movff	strncmp@s2,tblptrl
 20003  005A22  C063  FFF7         	movff	strncmp@s2+1,tblptrh
 20004  005A26                     	if	0	;tblptru may be non-zero
 20005  005A26                     	endif
 20006  005A26                     	if	0	;tblptru may be non-zero
 20007  005A26                     	endif
 20008  005A26  0008               	tblrd		*
 20009  005A28  50F5               	movf	tablat,w,c
 20010  005A2A  0100               	movlb	0	; () banked
 20011  005A2C  1966               	xorwf	??_strncmp& (0+255),w,b
 20012  005A2E  B4D8               	btfsc	status,2,c
 20013  005A30  D001               	goto	u12351
 20014  005A32  D001               	goto	u12350
 20015  005A34                     u12351:
 20016  005A34  D023               	goto	l13019
 20017  005A36                     u12350:
 20018  005A36  D000               	goto	l13015
 20019  005A38                     l13015:
 20020  005A38  C062  FFF6         	movff	strncmp@s2,tblptrl
 20021  005A3C  C063  FFF7         	movff	strncmp@s2+1,tblptrh
 20022  005A40                     	if	0	;tblptru may be non-zero
 20023  005A40                     	endif
 20024  005A40                     	if	0	;tblptru may be non-zero
 20025  005A40                     	endif
 20026  005A40  0008               	tblrd		*
 20027  005A42  50F5               	movf	tablat,w,c
 20028  005A44  0100               	movlb	0	; () banked
 20029  005A46  6F66               	movwf	??_strncmp& (0+255),b
 20030  005A48  6B67               	clrf	(??_strncmp+1)& (0+255),b
 20031  005A4A  0100               	movlb	0	; () banked
 20032  005A4C  1F66               	comf	??_strncmp& (0+255),f,b
 20033  005A4E  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 20034  005A50  4B66               	infsnz	??_strncmp& (0+255),f,b
 20035  005A52  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 20036  005A54  C060  FFD9         	movff	strncmp@s1,fsr2l
 20037  005A58  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 20038  005A5C  50DF               	movf	indf2,w,c
 20039  005A5E  0100               	movlb	0	; () banked
 20040  005A60  6F68               	movwf	(??_strncmp+2)& (0+255),b
 20041  005A62  0100               	movlb	0	; () banked
 20042  005A64  5168               	movf	(??_strncmp+2)& (0+255),w,b
 20043  005A66  0100               	movlb	0	; () banked
 20044  005A68  2566               	addwf	??_strncmp& (0+255),w,b
 20045  005A6A  0100               	movlb	0	; () banked
 20046  005A6C  6F60               	movwf	?_strncmp& (0+255),b
 20047  005A6E  0E00               	movlw	0
 20048  005A70  0100               	movlb	0	; () banked
 20049  005A72  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 20050  005A74  0100               	movlb	0	; () banked
 20051  005A76  6F61               	movwf	(?_strncmp+1)& (0+255),b
 20052  005A78  D01C               	goto	l2749
 20053                           
 20054                           ; BSR set to: 0
 20055  005A7A  D01B               	goto	l2749
 20056  005A7C                     l13019:
 20057                           
 20058                           ; BSR set to: 0
 20059  005A7C  0100               	movlb	0	; () banked
 20060  005A7E  4B60               	infsnz	strncmp@s1& (0+255),f,b
 20061  005A80  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 20062  005A82  0100               	movlb	0	; () banked
 20063  005A84  4B62               	infsnz	strncmp@s2& (0+255),f,b
 20064  005A86  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 20065  005A88  D000               	goto	l13021
 20066  005A8A                     l13021:
 20067  005A8A  0100               	movlb	0	; () banked
 20068  005A8C  0764               	decf	strncmp@len& (0+255),f,b
 20069  005A8E  A0D8               	btfss	status,0,c
 20070  005A90  0765               	decf	(strncmp@len+1)& (0+255),f,b
 20071  005A92  0100               	movlb	0	; () banked
 20072  005A94  2964               	incf	strncmp@len& (0+255),w,b
 20073  005A96  E105               	bnz	u12361
 20074  005A98  0100               	movlb	0	; () banked
 20075  005A9A  2965               	incf	(strncmp@len+1)& (0+255),w,b
 20076  005A9C  A4D8               	btfss	status,2,c
 20077  005A9E  D001               	goto	u12361
 20078  005AA0  D001               	goto	u12360
 20079  005AA2                     u12361:
 20080  005AA2  D7AD               	goto	l13011
 20081  005AA4                     u12360:
 20082  005AA4  D000               	goto	l13023
 20083  005AA6                     l13023:
 20084                           
 20085                           ; BSR set to: 0
 20086  005AA6  0E00               	movlw	0
 20087  005AA8  0100               	movlb	0	; () banked
 20088  005AAA  6F61               	movwf	(?_strncmp+1)& (0+255),b
 20089  005AAC  0E00               	movlw	0
 20090  005AAE  6F60               	movwf	?_strncmp& (0+255),b
 20091  005AB0  D000               	goto	l2749
 20092  005AB2                     l2749:
 20093                           
 20094                           ; BSR set to: 0
 20095  005AB2  0012               	return		;funcret
 20096  005AB4                     __end_of_strncmp:
 20097                           	opt stack 0
 20098                           tblptru	equ	0xFF8
 20099                           tblptrh	equ	0xFF7
 20100                           tblptrl	equ	0xFF6
 20101                           tablat	equ	0xFF5
 20102                           prodh	equ	0xFF4
 20103                           prodl	equ	0xFF3
 20104                           intcon	equ	0xFF2
 20105                           intcon3	equ	0xFF0
 20106                           postinc0	equ	0xFEE
 20107                           wreg	equ	0xFE8
 20108                           indf1	equ	0xFE7
 20109                           postdec1	equ	0xFE5
 20110                           fsr1h	equ	0xFE2
 20111                           fsr1l	equ	0xFE1
 20112                           indf2	equ	0xFDF
 20113                           fsr2h	equ	0xFDA
 20114                           fsr2l	equ	0xFD9
 20115                           status	equ	0xFD8
 20116                           
 20117 ;; *************** function _strcmp *****************
 20118 ;; Defined at:
 20119 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strcmp.c"
 20120 ;; Parameters:    Size  Location     Type
 20121 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 20122 ;;		 -> moduleResonseBuffer(64), 
 20123 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 20124 ;;		 -> STR_89(3), STR_69(14), STR_67(11), STR_63(7), 
 20125 ;;		 -> STR_60(9), STR_59(11), STR_57(14), STR_54(14), 
 20126 ;;		 -> STR_53(3), STR_49(9), STR_45(14), STR_44(3), 
 20127 ;; Auto vars:     Size  Location     Type
 20128 ;;  r               1    5[BANK0 ] char 
 20129 ;; Return value:  Size  Location     Type
 20130 ;;                  2    0[BANK0 ] int 
 20131 ;; Registers used:
 20132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20133 ;; Tracked objects:
 20134 ;;		On entry : 0/0
 20135 ;;		On exit  : 0/0
 20136 ;;		Unchanged: 0/0
 20137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20138 ;;      Params:         0       4       0       0       0       0       0       0       0
 20139 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20140 ;;      Temps:          0       1       0       0       0       0       0       0       0
 20141 ;;      Totals:         0       6       0       0       0       0       0       0       0
 20142 ;;Total ram usage:        6 bytes
 20143 ;; Hardware stack levels used:    1
 20144 ;; Hardware stack levels required when called:   11
 20145 ;; This function calls:
 20146 ;;		Nothing
 20147 ;; This function is called by:
 20148 ;;		_moteJoiningProcess
 20149 ;;		_moteRunningProcess
 20150 ;; This function uses a non-reentrant model
 20151 ;;
 20152                           
 20153                           	psect	text53
 20154  0067A2                     __ptext53:
 20155                           	opt stack 0
 20156  0067A2                     _strcmp:
 20157                           	opt stack 17
 20158                           
 20159                           ; BSR set to: 0
 20160                           ;incstack = 0
 20161  0067A2  D007               	goto	l13031
 20162  0067A4                     l13029:
 20163  0067A4  0100               	movlb	0	; () banked
 20164  0067A6  4B60               	infsnz	strcmp@s1& (0+255),f,b
 20165  0067A8  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
 20166  0067AA  0100               	movlb	0	; () banked
 20167  0067AC  4B62               	infsnz	strcmp@s2& (0+255),f,b
 20168  0067AE  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
 20169  0067B0  D000               	goto	l13031
 20170  0067B2                     l13031:
 20171  0067B2  C060  FFD9         	movff	strcmp@s1,fsr2l
 20172  0067B6  C061  FFDA         	movff	strcmp@s1+1,fsr2h
 20173  0067BA  50DF               	movf	indf2,w,c
 20174  0067BC  0100               	movlb	0	; () banked
 20175  0067BE  6F64               	movwf	??_strcmp& (0+255),b
 20176  0067C0  C062  FFF6         	movff	strcmp@s2,tblptrl
 20177  0067C4  C063  FFF7         	movff	strcmp@s2+1,tblptrh
 20178  0067C8                     	if	0	;tblptru may be non-zero
 20179  0067C8                     	endif
 20180  0067C8                     	if	0	;tblptru may be non-zero
 20181  0067C8                     	endif
 20182  0067C8  0008               	tblrd		*
 20183  0067CA  50F5               	movf	tablat,w,c
 20184  0067CC  0800               	sublw	0
 20185  0067CE  0100               	movlb	0	; () banked
 20186  0067D0  2564               	addwf	??_strcmp& (0+255),w,b
 20187  0067D2  0100               	movlb	0	; () banked
 20188  0067D4  6F65               	movwf	strcmp@r& (0+255),b
 20189  0067D6  0100               	movlb	0	; () banked
 20190  0067D8  5165               	movf	strcmp@r& (0+255),w,b
 20191  0067DA  A4D8               	btfss	status,2,c
 20192  0067DC  D001               	goto	u12371
 20193  0067DE  D001               	goto	u12370
 20194  0067E0                     u12371:
 20195  0067E0  D00B               	goto	l13035
 20196  0067E2                     u12370:
 20197                           
 20198                           ; BSR set to: 0
 20199  0067E2  C060  FFD9         	movff	strcmp@s1,fsr2l
 20200  0067E6  C061  FFDA         	movff	strcmp@s1+1,fsr2h
 20201  0067EA  50DF               	movf	indf2,w,c
 20202  0067EC  A4D8               	btfss	status,2,c
 20203  0067EE  D001               	goto	u12381
 20204  0067F0  D001               	goto	u12380
 20205  0067F2                     u12381:
 20206  0067F2  D7D8               	goto	l13029
 20207  0067F4                     u12380:
 20208  0067F4  D001               	goto	l13035
 20209                           
 20210                           ; BSR set to: 0
 20211  0067F6  D000               	goto	l13035
 20212  0067F8                     l13035:
 20213                           
 20214                           ; BSR set to: 0
 20215  0067F8  0100               	movlb	0	; () banked
 20216  0067FA  5165               	movf	strcmp@r& (0+255),w,b
 20217  0067FC  0100               	movlb	0	; () banked
 20218  0067FE  6F60               	movwf	?_strcmp& (0+255),b
 20219  006800  6B61               	clrf	(?_strcmp+1)& (0+255),b
 20220  006802  BF60               	btfsc	?_strcmp& (0+255),7,b
 20221  006804  0761               	decf	(?_strcmp+1)& (0+255),f,b
 20222  006806  D000               	goto	l2741
 20223  006808                     l2741:
 20224                           
 20225                           ; BSR set to: 0
 20226  006808  0012               	return		;funcret
 20227  00680A                     __end_of_strcmp:
 20228                           	opt stack 0
 20229                           tblptru	equ	0xFF8
 20230                           tblptrh	equ	0xFF7
 20231                           tblptrl	equ	0xFF6
 20232                           tablat	equ	0xFF5
 20233                           prodh	equ	0xFF4
 20234                           prodl	equ	0xFF3
 20235                           intcon	equ	0xFF2
 20236                           intcon3	equ	0xFF0
 20237                           postinc0	equ	0xFEE
 20238                           wreg	equ	0xFE8
 20239                           indf1	equ	0xFE7
 20240                           postdec1	equ	0xFE5
 20241                           fsr1h	equ	0xFE2
 20242                           fsr1l	equ	0xFE1
 20243                           indf2	equ	0xFDF
 20244                           fsr2h	equ	0xFDA
 20245                           fsr2l	equ	0xFD9
 20246                           status	equ	0xFD8
 20247                           
 20248 ;; *************** function _moteApp_delayms *****************
 20249 ;; Defined at:
 20250 ;;		line 165 in file "../Includes/Board/MOTEapp.c"
 20251 ;; Parameters:    Size  Location     Type
 20252 ;;  length          2    0[BANK0 ] unsigned int 
 20253 ;; Auto vars:     Size  Location     Type
 20254 ;;  counter         2    3[BANK0 ] unsigned int 
 20255 ;; Return value:  Size  Location     Type
 20256 ;;                  1    wreg      void 
 20257 ;; Registers used:
 20258 ;;		wreg, status,2, status,0
 20259 ;; Tracked objects:
 20260 ;;		On entry : 0/0
 20261 ;;		On exit  : 0/0
 20262 ;;		Unchanged: 0/0
 20263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20264 ;;      Params:         0       2       0       0       0       0       0       0       0
 20265 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20266 ;;      Temps:          0       1       0       0       0       0       0       0       0
 20267 ;;      Totals:         0       5       0       0       0       0       0       0       0
 20268 ;;Total ram usage:        5 bytes
 20269 ;; Hardware stack levels used:    1
 20270 ;; Hardware stack levels required when called:   11
 20271 ;; This function calls:
 20272 ;;		Nothing
 20273 ;; This function is called by:
 20274 ;;		_main
 20275 ;;		_test_powerup
 20276 ;;		_moduleResync
 20277 ;;		_moteJoiningProcess
 20278 ;;		_moteRunningProcess
 20279 ;;		_moteApp_GoToSleep
 20280 ;;		_moteApp_setSensorsInput
 20281 ;; This function uses a non-reentrant model
 20282 ;;
 20283                           
 20284                           	psect	text54
 20285  006D20                     __ptext54:
 20286                           	opt stack 0
 20287  006D20                     _moteApp_delayms:
 20288                           	opt stack 16
 20289                           
 20290                           ;MOTEapp.c: 167: uint16_t counter;
 20291                           ;MOTEapp.c: 168: for(counter = 0; counter < length; counter++)
 20292                           
 20293                           ; BSR set to: 0
 20294                           ;incstack = 0
 20295  006D20  0E00               	movlw	0
 20296  006D22  0100               	movlb	0	; () banked
 20297  006D24  6F64               	movwf	(moteApp_delayms@counter+1)& (0+255),b
 20298  006D26  0E00               	movlw	0
 20299  006D28  6F63               	movwf	moteApp_delayms@counter& (0+255),b
 20300  006D2A  D00C               	goto	l346
 20301  006D2C                     l11981:
 20302                           
 20303                           ; BSR set to: 0
 20304                           ;MOTEapp.c: 169: {
 20305                           ;MOTEapp.c: 170: _delay((unsigned long)((1)*(48000000/4000.0)));
 20306  006D2C  0E10               	movlw	16
 20307  006D2E  0100               	movlb	0	; () banked
 20308  006D30  6F62               	movwf	??_moteApp_delayms& (0+255),b
 20309  006D32  0E94               	movlw	148
 20310  006D34                     u14597:
 20311  006D34  2EE8               	decfsz	wreg,f,c
 20312  006D36  D7FE               	bra	u14597
 20313  006D38  2F62               	decfsz	??_moteApp_delayms& (0+255),f,b
 20314  006D3A  D7FC               	bra	u14597
 20315  006D3C  F000               	nop	
 20316  006D3E  0100               	movlb	0	; () banked
 20317  006D40  4B63               	infsnz	moteApp_delayms@counter& (0+255),f,b
 20318  006D42  2B64               	incf	(moteApp_delayms@counter+1)& (0+255),f,b
 20319  006D44                     l346:
 20320                           
 20321                           ; BSR set to: 0
 20322  006D44  0100               	movlb	0	; () banked
 20323  006D46  5160               	movf	moteApp_delayms@length& (0+255),w,b
 20324  006D48  0100               	movlb	0	; () banked
 20325  006D4A  5D63               	subwf	moteApp_delayms@counter& (0+255),w,b
 20326  006D4C  0100               	movlb	0	; () banked
 20327  006D4E  5161               	movf	(moteApp_delayms@length+1)& (0+255),w,b
 20328  006D50  0100               	movlb	0	; () banked
 20329  006D52  5964               	subwfb	(moteApp_delayms@counter+1)& (0+255),w,b
 20330  006D54  A0D8               	btfss	status,0,c
 20331  006D56  D001               	goto	u10831
 20332  006D58  D001               	goto	u10830
 20333  006D5A                     u10831:
 20334  006D5A  D7E8               	goto	l11981
 20335  006D5C                     u10830:
 20336  006D5C  D000               	goto	l349
 20337  006D5E                     l349:
 20338                           
 20339                           ; BSR set to: 0
 20340  006D5E  0012               	return		;funcret
 20341  006D60                     __end_of_moteApp_delayms:
 20342                           	opt stack 0
 20343                           tblptru	equ	0xFF8
 20344                           tblptrh	equ	0xFF7
 20345                           tblptrl	equ	0xFF6
 20346                           tablat	equ	0xFF5
 20347                           prodh	equ	0xFF4
 20348                           prodl	equ	0xFF3
 20349                           intcon	equ	0xFF2
 20350                           intcon3	equ	0xFF0
 20351                           postinc0	equ	0xFEE
 20352                           wreg	equ	0xFE8
 20353                           indf1	equ	0xFE7
 20354                           postdec1	equ	0xFE5
 20355                           fsr1h	equ	0xFE2
 20356                           fsr1l	equ	0xFE1
 20357                           indf2	equ	0xFDF
 20358                           fsr2h	equ	0xFDA
 20359                           fsr2l	equ	0xFD9
 20360                           status	equ	0xFD8
 20361                           
 20362 ;; *************** function _DATAEE_WriteByte *****************
 20363 ;; Defined at:
 20364 ;;		line 166 in file "../Includes/MccGenerated/memory.c"
 20365 ;; Parameters:    Size  Location     Type
 20366 ;;  bAdd            1    wreg     unsigned char 
 20367 ;;  bData           1    0[BANK0 ] unsigned char 
 20368 ;; Auto vars:     Size  Location     Type
 20369 ;;  bAdd            1    1[BANK0 ] unsigned char 
 20370 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 20371 ;; Return value:  Size  Location     Type
 20372 ;;                  1    wreg      void 
 20373 ;; Registers used:
 20374 ;;		wreg, status,2
 20375 ;; Tracked objects:
 20376 ;;		On entry : 0/0
 20377 ;;		On exit  : 0/0
 20378 ;;		Unchanged: 0/0
 20379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20380 ;;      Params:         0       1       0       0       0       0       0       0       0
 20381 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20382 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20383 ;;      Totals:         0       3       0       0       0       0       0       0       0
 20384 ;;Total ram usage:        3 bytes
 20385 ;; Hardware stack levels used:    1
 20386 ;; Hardware stack levels required when called:   11
 20387 ;; This function calls:
 20388 ;;		Nothing
 20389 ;; This function is called by:
 20390 ;;		_main
 20391 ;;		_moteJoiningProcess
 20392 ;; This function uses a non-reentrant model
 20393 ;;
 20394                           
 20395                           	psect	text55
 20396  006C18                     __ptext55:
 20397                           	opt stack 0
 20398  006C18                     _DATAEE_WriteByte:
 20399                           	opt stack 17
 20400                           
 20401                           ; BSR set to: 0
 20402                           ;incstack = 0
 20403                           ;DATAEE_WriteByte@bAdd stored from wreg
 20404  006C18  0100               	movlb	0	; () banked
 20405  006C1A  6F61               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 20406                           
 20407                           ;memory.c: 168: uint8_t GIEBitValue = INTCONbits.GIE;
 20408  006C1C  0E00               	movlw	0
 20409  006C1E  BEF2               	btfsc	intcon,7,c	;volatile
 20410  006C20  0E01               	movlw	1
 20411  006C22  0100               	movlb	0	; () banked
 20412  006C24  6F62               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 20413                           
 20414                           ; BSR set to: 0
 20415                           ;memory.c: 170: EEADR = (bAdd & 0xFF);
 20416  006C26  C061  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
 20417                           
 20418                           ; BSR set to: 0
 20419                           ;memory.c: 171: EEDATA = bData;
 20420  006C2A  C060  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
 20421                           
 20422                           ; BSR set to: 0
 20423                           ;memory.c: 172: EECON1bits.EEPGD = 0;
 20424  006C2E  9EA6               	bcf	4006,7,c	;volatile
 20425                           
 20426                           ; BSR set to: 0
 20427                           ;memory.c: 173: EECON1bits.CFGS = 0;
 20428  006C30  9CA6               	bcf	4006,6,c	;volatile
 20429                           
 20430                           ; BSR set to: 0
 20431                           ;memory.c: 174: EECON1bits.WREN = 1;
 20432  006C32  84A6               	bsf	4006,2,c	;volatile
 20433                           
 20434                           ; BSR set to: 0
 20435                           ;memory.c: 175: INTCONbits.GIE = 0;
 20436  006C34  9EF2               	bcf	intcon,7,c	;volatile
 20437                           
 20438                           ; BSR set to: 0
 20439                           ;memory.c: 176: EECON2 = 0x55;
 20440  006C36  0E55               	movlw	85
 20441  006C38  6EA7               	movwf	4007,c	;volatile
 20442                           
 20443                           ; BSR set to: 0
 20444                           ;memory.c: 177: EECON2 = 0xAA;
 20445  006C3A  0EAA               	movlw	170
 20446  006C3C  6EA7               	movwf	4007,c	;volatile
 20447                           
 20448                           ; BSR set to: 0
 20449                           ;memory.c: 178: EECON1bits.WR = 1;
 20450  006C3E  82A6               	bsf	4006,1,c	;volatile
 20451                           
 20452                           ;memory.c: 180: while (EECON1bits.WR)
 20453  006C40  D000               	goto	l1454
 20454  006C42                     l1454:
 20455  006C42  B2A6               	btfsc	4006,1,c	;volatile
 20456  006C44  D001               	goto	u12201
 20457  006C46  D001               	goto	u12200
 20458  006C48                     u12201:
 20459  006C48  D7FC               	goto	l1454
 20460  006C4A                     u12200:
 20461                           
 20462                           ;memory.c: 182: }
 20463                           ;memory.c: 184: EECON1bits.WREN = 0;
 20464  006C4A  94A6               	bcf	4006,2,c	;volatile
 20465                           
 20466                           ;memory.c: 185: INTCONbits.GIE = GIEBitValue;
 20467  006C4C  0100               	movlb	0	; () banked
 20468  006C4E  B162               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 20469  006C50  D002               	bra	u12215
 20470  006C52  9EF2               	bcf	intcon,7,c	;volatile
 20471  006C54  D001               	bra	u12216
 20472  006C56                     u12215:
 20473  006C56  8EF2               	bsf	intcon,7,c	;volatile
 20474  006C58                     u12216:
 20475  006C58  0012               	return		;funcret
 20476  006C5A                     __end_of_DATAEE_WriteByte:
 20477                           	opt stack 0
 20478                           tblptru	equ	0xFF8
 20479                           tblptrh	equ	0xFF7
 20480                           tblptrl	equ	0xFF6
 20481                           tablat	equ	0xFF5
 20482                           prodh	equ	0xFF4
 20483                           prodl	equ	0xFF3
 20484                           intcon	equ	0xFF2
 20485                           intcon3	equ	0xFF0
 20486                           postinc0	equ	0xFEE
 20487                           wreg	equ	0xFE8
 20488                           indf1	equ	0xFE7
 20489                           postdec1	equ	0xFE5
 20490                           fsr1h	equ	0xFE2
 20491                           fsr1l	equ	0xFE1
 20492                           indf2	equ	0xFDF
 20493                           fsr2h	equ	0xFDA
 20494                           fsr2l	equ	0xFD9
 20495                           status	equ	0xFD8
 20496                           
 20497 ;; *************** function _USBapp_exitCDCState *****************
 20498 ;; Defined at:
 20499 ;;		line 139 in file "../Includes/Board/USBapp.c"
 20500 ;; Parameters:    Size  Location     Type
 20501 ;;  usbState        1    wreg     enum E5834
 20502 ;; Auto vars:     Size  Location     Type
 20503 ;;  usbState        1    0[BANK0 ] enum E5834
 20504 ;; Return value:  Size  Location     Type
 20505 ;;                  1    wreg      void 
 20506 ;; Registers used:
 20507 ;;		wreg
 20508 ;; Tracked objects:
 20509 ;;		On entry : 0/0
 20510 ;;		On exit  : 0/0
 20511 ;;		Unchanged: 0/0
 20512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20513 ;;      Params:         0       0       0       0       0       0       0       0       0
 20514 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20515 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20516 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20517 ;;Total ram usage:        1 bytes
 20518 ;; Hardware stack levels used:    1
 20519 ;; Hardware stack levels required when called:   11
 20520 ;; This function calls:
 20521 ;;		Nothing
 20522 ;; This function is called by:
 20523 ;;		_moteHandler
 20524 ;; This function uses a non-reentrant model
 20525 ;;
 20526                           
 20527                           	psect	text56
 20528  00729C                     __ptext56:
 20529                           	opt stack 0
 20530  00729C                     _USBapp_exitCDCState:
 20531                           	opt stack 18
 20532                           
 20533                           ;incstack = 0
 20534                           ;USBapp_exitCDCState@usbState stored from wreg
 20535  00729C  0100               	movlb	0	; () banked
 20536  00729E  6F60               	movwf	USBapp_exitCDCState@usbState& (0+255),b
 20537                           
 20538                           ;USBapp.c: 141: exitUSB = usbState;
 20539  0072A0  C060  F0F7         	movff	USBapp_exitCDCState@usbState,_exitUSB
 20540  0072A4  0012               	return		;funcret
 20541  0072A6                     __end_of_USBapp_exitCDCState:
 20542                           	opt stack 0
 20543                           tblptru	equ	0xFF8
 20544                           tblptrh	equ	0xFF7
 20545                           tblptrl	equ	0xFF6
 20546                           tablat	equ	0xFF5
 20547                           prodh	equ	0xFF4
 20548                           prodl	equ	0xFF3
 20549                           intcon	equ	0xFF2
 20550                           intcon3	equ	0xFF0
 20551                           postinc0	equ	0xFEE
 20552                           wreg	equ	0xFE8
 20553                           indf1	equ	0xFE7
 20554                           postdec1	equ	0xFE5
 20555                           fsr1h	equ	0xFE2
 20556                           fsr1l	equ	0xFE1
 20557                           indf2	equ	0xFDF
 20558                           fsr2h	equ	0xFDA
 20559                           fsr2l	equ	0xFD9
 20560                           status	equ	0xFD8
 20561                           
 20562 ;; *************** function _USBapp_exitCDC *****************
 20563 ;; Defined at:
 20564 ;;		line 134 in file "../Includes/Board/USBapp.c"
 20565 ;; Parameters:    Size  Location     Type
 20566 ;;		None
 20567 ;; Auto vars:     Size  Location     Type
 20568 ;;		None
 20569 ;; Return value:  Size  Location     Type
 20570 ;;                  1    wreg      enum E5898
 20571 ;; Registers used:
 20572 ;;		wreg, status,2
 20573 ;; Tracked objects:
 20574 ;;		On entry : 0/0
 20575 ;;		On exit  : 0/0
 20576 ;;		Unchanged: 0/0
 20577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20578 ;;      Params:         0       0       0       0       0       0       0       0       0
 20579 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20580 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20581 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20582 ;;Total ram usage:        0 bytes
 20583 ;; Hardware stack levels used:    1
 20584 ;; Hardware stack levels required when called:   11
 20585 ;; This function calls:
 20586 ;;		Nothing
 20587 ;; This function is called by:
 20588 ;;		_moteHandler
 20589 ;; This function uses a non-reentrant model
 20590 ;;
 20591                           
 20592                           	psect	text57
 20593  0072D4                     __ptext57:
 20594                           	opt stack 0
 20595  0072D4                     _USBapp_exitCDC:
 20596                           	opt stack 18
 20597                           
 20598                           ;USBapp.c: 136: return exitUSB;
 20599                           
 20600                           ;incstack = 0
 20601  0072D4  0100               	movlb	0	; () banked
 20602  0072D6  51F7               	movf	_exitUSB& (0+255),w,b
 20603  0072D8  D000               	goto	l859
 20604  0072DA                     l859:
 20605                           
 20606                           ; BSR set to: 0
 20607  0072DA  0012               	return		;funcret
 20608  0072DC                     __end_of_USBapp_exitCDC:
 20609                           	opt stack 0
 20610                           tblptru	equ	0xFF8
 20611                           tblptrh	equ	0xFF7
 20612                           tblptrl	equ	0xFF6
 20613                           tablat	equ	0xFF5
 20614                           prodh	equ	0xFF4
 20615                           prodl	equ	0xFF3
 20616                           intcon	equ	0xFF2
 20617                           intcon3	equ	0xFF0
 20618                           postinc0	equ	0xFEE
 20619                           wreg	equ	0xFE8
 20620                           indf1	equ	0xFE7
 20621                           postdec1	equ	0xFE5
 20622                           fsr1h	equ	0xFE2
 20623                           fsr1l	equ	0xFE1
 20624                           indf2	equ	0xFDF
 20625                           fsr2h	equ	0xFDA
 20626                           fsr2l	equ	0xFD9
 20627                           status	equ	0xFD8
 20628                           
 20629 ;; *************** function _TMRapp_Handler *****************
 20630 ;; Defined at:
 20631 ;;		line 57 in file "../Includes/Drivers/TMRapp.c"
 20632 ;; Parameters:    Size  Location     Type
 20633 ;;		None
 20634 ;; Auto vars:     Size  Location     Type
 20635 ;;		None
 20636 ;; Return value:  Size  Location     Type
 20637 ;;                  1    wreg      void 
 20638 ;; Registers used:
 20639 ;;		wreg, status,2, status,0, cstack
 20640 ;; Tracked objects:
 20641 ;;		On entry : 0/0
 20642 ;;		On exit  : 0/0
 20643 ;;		Unchanged: 0/0
 20644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20645 ;;      Params:         0       0       0       0       0       0       0       0       0
 20646 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20647 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20648 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20649 ;;Total ram usage:        0 bytes
 20650 ;; Hardware stack levels used:    1
 20651 ;; Hardware stack levels required when called:   12
 20652 ;; This function calls:
 20653 ;;		___almod
 20654 ;;		___lwmod
 20655 ;; This function is called by:
 20656 ;;		_moteHandler
 20657 ;; This function uses a non-reentrant model
 20658 ;;
 20659                           
 20660                           	psect	text58
 20661  00389E                     __ptext58:
 20662                           	opt stack 0
 20663  00389E                     _TMRapp_Handler:
 20664                           	opt stack 17
 20665                           
 20666                           ;TMRapp.c: 60: timerMsTickCount++;
 20667                           
 20668                           ; BSR set to: 0
 20669                           ;incstack = 0
 20670  00389E  0100               	movlb	0	; () banked
 20671  0038A0  4BC5               	infsnz	_timerMsTickCount& (0+255),f,b
 20672  0038A2  2BC6               	incf	(_timerMsTickCount+1)& (0+255),f,b
 20673                           
 20674                           ; BSR set to: 0
 20675                           ;TMRapp.c: 62: if ( (timerMsTickCount % 10) == 0)
 20676  0038A4  C0C5  F060         	movff	_timerMsTickCount,___lwmod@dividend
 20677  0038A8  C0C6  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 20678  0038AC  0E00               	movlw	0
 20679  0038AE  0100               	movlb	0	; () banked
 20680  0038B0  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20681  0038B2  0E0A               	movlw	10
 20682  0038B4  6F62               	movwf	___lwmod@divisor& (0+255),b
 20683  0038B6  ECD6  F031         	call	___lwmod	;wreg free
 20684  0038BA  0100               	movlb	0	; () banked
 20685  0038BC  5160               	movf	?___lwmod& (0+255),w,b
 20686  0038BE  0100               	movlb	0	; () banked
 20687  0038C0  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20688  0038C2  A4D8               	btfss	status,2,c
 20689  0038C4  D001               	goto	u12981
 20690  0038C6  D001               	goto	u12980
 20691  0038C8                     u12981:
 20692  0038C8  D09F               	goto	l965
 20693  0038CA                     u12980:
 20694                           
 20695                           ; BSR set to: 0
 20696                           ;TMRapp.c: 63: {
 20697                           ;TMRapp.c: 64: appTimer.mSecTenTick = 1;
 20698  0038CA  0100               	movlb	0	; () banked
 20699  0038CC  83F2               	bsf	_appTimer& (0+255),1,b
 20700                           
 20701                           ; BSR set to: 0
 20702                           ;TMRapp.c: 65: if ( (timerMsTickCount % 100) == 0)
 20703  0038CE  C0C5  F060         	movff	_timerMsTickCount,___lwmod@dividend
 20704  0038D2  C0C6  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 20705  0038D6  0E00               	movlw	0
 20706  0038D8  0100               	movlb	0	; () banked
 20707  0038DA  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20708  0038DC  0E64               	movlw	100
 20709  0038DE  6F62               	movwf	___lwmod@divisor& (0+255),b
 20710  0038E0  ECD6  F031         	call	___lwmod	;wreg free
 20711  0038E4  0100               	movlb	0	; () banked
 20712  0038E6  5160               	movf	?___lwmod& (0+255),w,b
 20713  0038E8  0100               	movlb	0	; () banked
 20714  0038EA  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20715  0038EC  A4D8               	btfss	status,2,c
 20716  0038EE  D001               	goto	u12991
 20717  0038F0  D001               	goto	u12990
 20718  0038F2                     u12991:
 20719  0038F2  D08A               	goto	l965
 20720  0038F4                     u12990:
 20721                           
 20722                           ; BSR set to: 0
 20723                           ;TMRapp.c: 66: {
 20724                           ;TMRapp.c: 67: appTimer.mSecHundredTick = 1;
 20725  0038F4  0100               	movlb	0	; () banked
 20726  0038F6  85F2               	bsf	_appTimer& (0+255),2,b
 20727                           
 20728                           ; BSR set to: 0
 20729                           ;TMRapp.c: 68: if ( (timerMsTickCount % 1000) == 0)
 20730  0038F8  C0C5  F060         	movff	_timerMsTickCount,___lwmod@dividend
 20731  0038FC  C0C6  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 20732  003900  0E03               	movlw	3
 20733  003902  0100               	movlb	0	; () banked
 20734  003904  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20735  003906  0EE8               	movlw	232
 20736  003908  6F62               	movwf	___lwmod@divisor& (0+255),b
 20737  00390A  ECD6  F031         	call	___lwmod	;wreg free
 20738  00390E  0100               	movlb	0	; () banked
 20739  003910  5160               	movf	?___lwmod& (0+255),w,b
 20740  003912  0100               	movlb	0	; () banked
 20741  003914  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20742  003916  A4D8               	btfss	status,2,c
 20743  003918  D001               	goto	u13001
 20744  00391A  D001               	goto	u13000
 20745  00391C                     u13001:
 20746  00391C  D075               	goto	l965
 20747  00391E                     u13000:
 20748                           
 20749                           ; BSR set to: 0
 20750                           ;TMRapp.c: 69: {
 20751                           ;TMRapp.c: 70: appTimer.SecTick = 1;
 20752  00391E  0100               	movlb	0	; () banked
 20753  003920  87F2               	bsf	_appTimer& (0+255),3,b
 20754                           
 20755                           ; BSR set to: 0
 20756                           ;TMRapp.c: 71: if ( (timerMsTickCount % 60000) == 0)
 20757  003922  C0C5  F060         	movff	_timerMsTickCount,___almod@dividend
 20758  003926  C0C6  F061         	movff	_timerMsTickCount+1,___almod@dividend+1
 20759  00392A  0100               	movlb	0	; () banked
 20760  00392C  6B62               	clrf	(___almod@dividend+2)& (0+255),b
 20761  00392E  6B63               	clrf	(___almod@dividend+3)& (0+255),b
 20762  003930  0E60               	movlw	96
 20763  003932  0100               	movlb	0	; () banked
 20764  003934  6F64               	movwf	___almod@divisor& (0+255),b
 20765  003936  0EEA               	movlw	234
 20766  003938  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 20767  00393A  0E00               	movlw	0
 20768  00393C  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 20769  00393E  0E00               	movlw	0
 20770  003940  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 20771  003942  EC5B  F021         	call	___almod	;wreg free
 20772  003946  0100               	movlb	0	; () banked
 20773  003948  5160               	movf	?___almod& (0+255),w,b
 20774  00394A  0100               	movlb	0	; () banked
 20775  00394C  1161               	iorwf	(?___almod+1)& (0+255),w,b
 20776  00394E  0100               	movlb	0	; () banked
 20777  003950  1162               	iorwf	(?___almod+2)& (0+255),w,b
 20778  003952  0100               	movlb	0	; () banked
 20779  003954  1163               	iorwf	(?___almod+3)& (0+255),w,b
 20780  003956  A4D8               	btfss	status,2,c
 20781  003958  D001               	goto	u13011
 20782  00395A  D001               	goto	u13010
 20783  00395C                     u13011:
 20784  00395C  D055               	goto	l965
 20785  00395E                     u13010:
 20786                           
 20787                           ; BSR set to: 0
 20788                           ;TMRapp.c: 72: {
 20789                           ;TMRapp.c: 73: timerMinTickCount++;
 20790  00395E  0100               	movlb	0	; () banked
 20791  003960  4BC3               	infsnz	_timerMinTickCount& (0+255),f,b
 20792  003962  2BC4               	incf	(_timerMinTickCount+1)& (0+255),f,b
 20793                           
 20794                           ; BSR set to: 0
 20795                           ;TMRapp.c: 74: appTimer.MinTick = 1;
 20796  003964  0100               	movlb	0	; () banked
 20797  003966  89F2               	bsf	_appTimer& (0+255),4,b
 20798                           
 20799                           ; BSR set to: 0
 20800                           ;TMRapp.c: 75: if ( (timerMinTickCount % 60) == 0)
 20801  003968  C0C3  F060         	movff	_timerMinTickCount,___lwmod@dividend
 20802  00396C  C0C4  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 20803  003970  0E00               	movlw	0
 20804  003972  0100               	movlb	0	; () banked
 20805  003974  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20806  003976  0E3C               	movlw	60
 20807  003978  6F62               	movwf	___lwmod@divisor& (0+255),b
 20808  00397A  ECD6  F031         	call	___lwmod	;wreg free
 20809  00397E  0100               	movlb	0	; () banked
 20810  003980  5160               	movf	?___lwmod& (0+255),w,b
 20811  003982  0100               	movlb	0	; () banked
 20812  003984  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20813  003986  A4D8               	btfss	status,2,c
 20814  003988  D001               	goto	u13021
 20815  00398A  D001               	goto	u13020
 20816  00398C                     u13021:
 20817  00398C  D03D               	goto	l965
 20818  00398E                     u13020:
 20819                           
 20820                           ; BSR set to: 0
 20821                           ;TMRapp.c: 76: {
 20822                           ;TMRapp.c: 77: appTimer.HourTick = 1;
 20823  00398E  0100               	movlb	0	; () banked
 20824  003990  8BF2               	bsf	_appTimer& (0+255),5,b
 20825                           
 20826                           ; BSR set to: 0
 20827                           ;TMRapp.c: 78: if ( (timerMinTickCount % 720) == 0)
 20828  003992  C0C3  F060         	movff	_timerMinTickCount,___lwmod@dividend
 20829  003996  C0C4  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 20830  00399A  0E02               	movlw	2
 20831  00399C  0100               	movlb	0	; () banked
 20832  00399E  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20833  0039A0  0ED0               	movlw	208
 20834  0039A2  6F62               	movwf	___lwmod@divisor& (0+255),b
 20835  0039A4  ECD6  F031         	call	___lwmod	;wreg free
 20836  0039A8  0100               	movlb	0	; () banked
 20837  0039AA  5160               	movf	?___lwmod& (0+255),w,b
 20838  0039AC  0100               	movlb	0	; () banked
 20839  0039AE  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20840  0039B0  A4D8               	btfss	status,2,c
 20841  0039B2  D001               	goto	u13031
 20842  0039B4  D001               	goto	u13030
 20843  0039B6                     u13031:
 20844  0039B6  D028               	goto	l965
 20845  0039B8                     u13030:
 20846                           
 20847                           ; BSR set to: 0
 20848                           ;TMRapp.c: 79: {
 20849                           ;TMRapp.c: 80: appTimer.HalfDayTick = 1;
 20850  0039B8  0100               	movlb	0	; () banked
 20851  0039BA  8DF2               	bsf	_appTimer& (0+255),6,b
 20852                           
 20853                           ; BSR set to: 0
 20854                           ;TMRapp.c: 81: if ( (timerMinTickCount % 1440) == 0)
 20855  0039BC  C0C3  F060         	movff	_timerMinTickCount,___lwmod@dividend
 20856  0039C0  C0C4  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 20857  0039C4  0E05               	movlw	5
 20858  0039C6  0100               	movlb	0	; () banked
 20859  0039C8  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20860  0039CA  0EA0               	movlw	160
 20861  0039CC  6F62               	movwf	___lwmod@divisor& (0+255),b
 20862  0039CE  ECD6  F031         	call	___lwmod	;wreg free
 20863  0039D2  0100               	movlb	0	; () banked
 20864  0039D4  5160               	movf	?___lwmod& (0+255),w,b
 20865  0039D6  0100               	movlb	0	; () banked
 20866  0039D8  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20867  0039DA  A4D8               	btfss	status,2,c
 20868  0039DC  D001               	goto	u13041
 20869  0039DE  D001               	goto	u13040
 20870  0039E0                     u13041:
 20871  0039E0  D013               	goto	l965
 20872  0039E2                     u13040:
 20873                           
 20874                           ; BSR set to: 0
 20875                           ;TMRapp.c: 82: {
 20876                           ;TMRapp.c: 83: appTimer.DayTick = 1;
 20877  0039E2  0100               	movlb	0	; () banked
 20878  0039E4  8FF2               	bsf	_appTimer& (0+255),7,b
 20879                           
 20880                           ; BSR set to: 0
 20881                           ;TMRapp.c: 85: timerMsTickCount = 0;
 20882  0039E6  0E00               	movlw	0
 20883  0039E8  0100               	movlb	0	; () banked
 20884  0039EA  6FC6               	movwf	(_timerMsTickCount+1)& (0+255),b
 20885  0039EC  0E00               	movlw	0
 20886  0039EE  6FC5               	movwf	_timerMsTickCount& (0+255),b
 20887                           
 20888                           ;TMRapp.c: 86: timerMinTickCount = 0;
 20889  0039F0  0E00               	movlw	0
 20890  0039F2  0100               	movlb	0	; () banked
 20891  0039F4  6FC4               	movwf	(_timerMinTickCount+1)& (0+255),b
 20892  0039F6  0E00               	movlw	0
 20893  0039F8  6FC3               	movwf	_timerMinTickCount& (0+255),b
 20894  0039FA  D006               	goto	l965
 20895                           
 20896                           ; BSR set to: 0
 20897  0039FC  D005               	goto	l965
 20898                           
 20899                           ; BSR set to: 0
 20900  0039FE  D004               	goto	l965
 20901                           
 20902                           ; BSR set to: 0
 20903  003A00  D003               	goto	l965
 20904                           
 20905                           ; BSR set to: 0
 20906  003A02  D002               	goto	l965
 20907                           
 20908                           ; BSR set to: 0
 20909  003A04  D001               	goto	l965
 20910                           
 20911                           ; BSR set to: 0
 20912  003A06  D000               	goto	l965
 20913  003A08                     l965:
 20914                           
 20915                           ; BSR set to: 0
 20916  003A08  0012               	return		;funcret
 20917  003A0A                     __end_of_TMRapp_Handler:
 20918                           	opt stack 0
 20919                           tblptru	equ	0xFF8
 20920                           tblptrh	equ	0xFF7
 20921                           tblptrl	equ	0xFF6
 20922                           tablat	equ	0xFF5
 20923                           prodh	equ	0xFF4
 20924                           prodl	equ	0xFF3
 20925                           intcon	equ	0xFF2
 20926                           intcon3	equ	0xFF0
 20927                           postinc0	equ	0xFEE
 20928                           wreg	equ	0xFE8
 20929                           indf1	equ	0xFE7
 20930                           postdec1	equ	0xFE5
 20931                           fsr1h	equ	0xFE2
 20932                           fsr1l	equ	0xFE1
 20933                           indf2	equ	0xFDF
 20934                           fsr2h	equ	0xFDA
 20935                           fsr2l	equ	0xFD9
 20936                           status	equ	0xFD8
 20937                           
 20938 ;; *************** function ___lwmod *****************
 20939 ;; Defined at:
 20940 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
 20941 ;; Parameters:    Size  Location     Type
 20942 ;;  dividend        2    0[BANK0 ] unsigned int 
 20943 ;;  divisor         2    2[BANK0 ] unsigned int 
 20944 ;; Auto vars:     Size  Location     Type
 20945 ;;  counter         1    4[BANK0 ] unsigned char 
 20946 ;; Return value:  Size  Location     Type
 20947 ;;                  2    0[BANK0 ] unsigned int 
 20948 ;; Registers used:
 20949 ;;		wreg, status,2, status,0
 20950 ;; Tracked objects:
 20951 ;;		On entry : 0/0
 20952 ;;		On exit  : 0/0
 20953 ;;		Unchanged: 0/0
 20954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20955 ;;      Params:         0       4       0       0       0       0       0       0       0
 20956 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20957 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20958 ;;      Totals:         0       5       0       0       0       0       0       0       0
 20959 ;;Total ram usage:        5 bytes
 20960 ;; Hardware stack levels used:    1
 20961 ;; Hardware stack levels required when called:   11
 20962 ;; This function calls:
 20963 ;;		Nothing
 20964 ;; This function is called by:
 20965 ;;		_TMRapp_Handler
 20966 ;;		_moteApp_add16bToDataBuffer
 20967 ;;		_oled_putUint16
 20968 ;; This function uses a non-reentrant model
 20969 ;;
 20970                           
 20971                           	psect	text59
 20972  0063AC                     __ptext59:
 20973                           	opt stack 0
 20974  0063AC                     ___lwmod:
 20975                           	opt stack 17
 20976                           
 20977                           ; BSR set to: 0
 20978                           ;incstack = 0
 20979  0063AC  0100               	movlb	0	; () banked
 20980  0063AE  5162               	movf	___lwmod@divisor& (0+255),w,b
 20981  0063B0  0100               	movlb	0	; () banked
 20982  0063B2  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 20983  0063B4  B4D8               	btfsc	status,2,c
 20984  0063B6  D001               	goto	u12891
 20985  0063B8  D001               	goto	u12890
 20986  0063BA                     u12891:
 20987  0063BA  D02F               	goto	l2589
 20988  0063BC                     u12890:
 20989                           
 20990                           ; BSR set to: 0
 20991  0063BC  0E01               	movlw	1
 20992  0063BE  0100               	movlb	0	; () banked
 20993  0063C0  6F64               	movwf	___lwmod@counter& (0+255),b
 20994  0063C2  D007               	goto	l13479
 20995  0063C4                     l13477:
 20996                           
 20997                           ; BSR set to: 0
 20998  0063C4  0100               	movlb	0	; () banked
 20999  0063C6  90D8               	bcf	status,0,c
 21000  0063C8  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 21001  0063CA  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 21002  0063CC  0100               	movlb	0	; () banked
 21003  0063CE  2B64               	incf	___lwmod@counter& (0+255),f,b
 21004  0063D0  D000               	goto	l13479
 21005  0063D2                     l13479:
 21006                           
 21007                           ; BSR set to: 0
 21008  0063D2  0100               	movlb	0	; () banked
 21009  0063D4  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 21010  0063D6  D001               	goto	u12901
 21011  0063D8  D001               	goto	u12900
 21012  0063DA                     u12901:
 21013  0063DA  D7F4               	goto	l13477
 21014  0063DC                     u12900:
 21015  0063DC  D001               	goto	l13481
 21016                           
 21017                           ; BSR set to: 0
 21018  0063DE  D000               	goto	l13481
 21019  0063E0                     l13481:
 21020                           
 21021                           ; BSR set to: 0
 21022  0063E0  0100               	movlb	0	; () banked
 21023  0063E2  5162               	movf	___lwmod@divisor& (0+255),w,b
 21024  0063E4  0100               	movlb	0	; () banked
 21025  0063E6  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 21026  0063E8  0100               	movlb	0	; () banked
 21027  0063EA  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 21028  0063EC  0100               	movlb	0	; () banked
 21029  0063EE  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 21030  0063F0  A0D8               	btfss	status,0,c
 21031  0063F2  D001               	goto	u12911
 21032  0063F4  D001               	goto	u12910
 21033  0063F6                     u12911:
 21034  0063F6  D009               	goto	l13485
 21035  0063F8                     u12910:
 21036                           
 21037                           ; BSR set to: 0
 21038  0063F8  0100               	movlb	0	; () banked
 21039  0063FA  5162               	movf	___lwmod@divisor& (0+255),w,b
 21040  0063FC  0100               	movlb	0	; () banked
 21041  0063FE  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 21042  006400  0100               	movlb	0	; () banked
 21043  006402  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 21044  006404  0100               	movlb	0	; () banked
 21045  006406  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 21046  006408  D000               	goto	l13485
 21047  00640A                     l13485:
 21048                           
 21049                           ; BSR set to: 0
 21050  00640A  0100               	movlb	0	; () banked
 21051  00640C  90D8               	bcf	status,0,c
 21052  00640E  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 21053  006410  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 21054                           
 21055                           ; BSR set to: 0
 21056  006412  0100               	movlb	0	; () banked
 21057  006414  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 21058  006416  D7E4               	goto	l13481
 21059  006418  D000               	goto	l2589
 21060  00641A                     l2589:
 21061                           
 21062                           ; BSR set to: 0
 21063  00641A  C060  F060         	movff	___lwmod@dividend,?___lwmod
 21064  00641E  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 21065                           
 21066                           ; BSR set to: 0
 21067  006422  0012               	return		;funcret
 21068  006424                     __end_of___lwmod:
 21069                           	opt stack 0
 21070                           tblptru	equ	0xFF8
 21071                           tblptrh	equ	0xFF7
 21072                           tblptrl	equ	0xFF6
 21073                           tablat	equ	0xFF5
 21074                           prodh	equ	0xFF4
 21075                           prodl	equ	0xFF3
 21076                           intcon	equ	0xFF2
 21077                           intcon3	equ	0xFF0
 21078                           postinc0	equ	0xFEE
 21079                           wreg	equ	0xFE8
 21080                           indf1	equ	0xFE7
 21081                           postdec1	equ	0xFE5
 21082                           fsr1h	equ	0xFE2
 21083                           fsr1l	equ	0xFE1
 21084                           indf2	equ	0xFDF
 21085                           fsr2h	equ	0xFDA
 21086                           fsr2l	equ	0xFD9
 21087                           status	equ	0xFD8
 21088                           
 21089 ;; *************** function ___almod *****************
 21090 ;; Defined at:
 21091 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\almod.c"
 21092 ;; Parameters:    Size  Location     Type
 21093 ;;  dividend        4    0[BANK0 ] long 
 21094 ;;  divisor         4    4[BANK0 ] long 
 21095 ;; Auto vars:     Size  Location     Type
 21096 ;;  sign            1    9[BANK0 ] unsigned char 
 21097 ;;  counter         1    8[BANK0 ] unsigned char 
 21098 ;; Return value:  Size  Location     Type
 21099 ;;                  4    0[BANK0 ] long 
 21100 ;; Registers used:
 21101 ;;		wreg, status,2, status,0
 21102 ;; Tracked objects:
 21103 ;;		On entry : 0/0
 21104 ;;		On exit  : 0/0
 21105 ;;		Unchanged: 0/0
 21106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21107 ;;      Params:         0       8       0       0       0       0       0       0       0
 21108 ;;      Locals:         0       2       0       0       0       0       0       0       0
 21109 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21110 ;;      Totals:         0      10       0       0       0       0       0       0       0
 21111 ;;Total ram usage:       10 bytes
 21112 ;; Hardware stack levels used:    1
 21113 ;; Hardware stack levels required when called:   11
 21114 ;; This function calls:
 21115 ;;		Nothing
 21116 ;; This function is called by:
 21117 ;;		_TMRapp_Handler
 21118 ;; This function uses a non-reentrant model
 21119 ;;
 21120                           
 21121                           	psect	text60
 21122  0042B6                     __ptext60:
 21123                           	opt stack 0
 21124  0042B6                     ___almod:
 21125                           	opt stack 17
 21126                           
 21127                           ; BSR set to: 0
 21128                           ;incstack = 0
 21129  0042B6  0E00               	movlw	0
 21130  0042B8  0100               	movlb	0	; () banked
 21131  0042BA  6F69               	movwf	___almod@sign& (0+255),b
 21132                           
 21133                           ; BSR set to: 0
 21134  0042BC  0100               	movlb	0	; () banked
 21135  0042BE  BF63               	btfsc	(___almod@dividend+3)& (0+255),7,b
 21136  0042C0  D002               	goto	u12830
 21137  0042C2  D000               	goto	u12831
 21138  0042C4                     u12831:
 21139  0042C4  D00D               	goto	l13445
 21140  0042C6                     u12830:
 21141                           
 21142                           ; BSR set to: 0
 21143  0042C6  0100               	movlb	0	; () banked
 21144  0042C8  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 21145  0042CA  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 21146  0042CC  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 21147  0042CE  6D60               	negf	___almod@dividend& (0+255),b
 21148  0042D0  0E00               	movlw	0
 21149  0042D2  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 21150  0042D4  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 21151  0042D6  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 21152                           
 21153                           ; BSR set to: 0
 21154  0042D8  0E01               	movlw	1
 21155  0042DA  0100               	movlb	0	; () banked
 21156  0042DC  6F69               	movwf	___almod@sign& (0+255),b
 21157  0042DE  D000               	goto	l13445
 21158  0042E0                     l13445:
 21159                           
 21160                           ; BSR set to: 0
 21161  0042E0  0100               	movlb	0	; () banked
 21162  0042E2  BF67               	btfsc	(___almod@divisor+3)& (0+255),7,b
 21163  0042E4  D002               	goto	u12840
 21164  0042E6  D000               	goto	u12841
 21165  0042E8                     u12841:
 21166  0042E8  D00A               	goto	l13449
 21167  0042EA                     u12840:
 21168                           
 21169                           ; BSR set to: 0
 21170  0042EA  0100               	movlb	0	; () banked
 21171  0042EC  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 21172  0042EE  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 21173  0042F0  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 21174  0042F2  6D64               	negf	___almod@divisor& (0+255),b
 21175  0042F4  0E00               	movlw	0
 21176  0042F6  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 21177  0042F8  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 21178  0042FA  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 21179  0042FC  D000               	goto	l13449
 21180  0042FE                     l13449:
 21181                           
 21182                           ; BSR set to: 0
 21183  0042FE  0100               	movlb	0	; () banked
 21184  004300  5164               	movf	___almod@divisor& (0+255),w,b
 21185  004302  0100               	movlb	0	; () banked
 21186  004304  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 21187  004306  0100               	movlb	0	; () banked
 21188  004308  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 21189  00430A  0100               	movlb	0	; () banked
 21190  00430C  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 21191  00430E  B4D8               	btfsc	status,2,c
 21192  004310  D001               	goto	u12851
 21193  004312  D001               	goto	u12850
 21194  004314                     u12851:
 21195  004314  D044               	goto	l13465
 21196  004316                     u12850:
 21197                           
 21198                           ; BSR set to: 0
 21199  004316  0E01               	movlw	1
 21200  004318  0100               	movlb	0	; () banked
 21201  00431A  6F68               	movwf	___almod@counter& (0+255),b
 21202  00431C  D009               	goto	l13455
 21203  00431E                     l13453:
 21204                           
 21205                           ; BSR set to: 0
 21206  00431E  0100               	movlb	0	; () banked
 21207  004320  90D8               	bcf	status,0,c
 21208  004322  3764               	rlcf	___almod@divisor& (0+255),f,b
 21209  004324  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 21210  004326  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 21211  004328  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 21212  00432A  0100               	movlb	0	; () banked
 21213  00432C  2B68               	incf	___almod@counter& (0+255),f,b
 21214  00432E  D000               	goto	l13455
 21215  004330                     l13455:
 21216                           
 21217                           ; BSR set to: 0
 21218  004330  0100               	movlb	0	; () banked
 21219  004332  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 21220  004334  D001               	goto	u12861
 21221  004336  D001               	goto	u12860
 21222  004338                     u12861:
 21223  004338  D7F2               	goto	l13453
 21224  00433A                     u12860:
 21225  00433A  D001               	goto	l13457
 21226                           
 21227                           ; BSR set to: 0
 21228  00433C  D000               	goto	l13457
 21229  00433E                     l13457:
 21230                           
 21231                           ; BSR set to: 0
 21232  00433E  0100               	movlb	0	; () banked
 21233  004340  5164               	movf	___almod@divisor& (0+255),w,b
 21234  004342  0100               	movlb	0	; () banked
 21235  004344  5D60               	subwf	___almod@dividend& (0+255),w,b
 21236  004346  0100               	movlb	0	; () banked
 21237  004348  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 21238  00434A  0100               	movlb	0	; () banked
 21239  00434C  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 21240  00434E  0100               	movlb	0	; () banked
 21241  004350  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 21242  004352  0100               	movlb	0	; () banked
 21243  004354  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 21244  004356  0100               	movlb	0	; () banked
 21245  004358  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 21246  00435A  0100               	movlb	0	; () banked
 21247  00435C  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 21248  00435E  A0D8               	btfss	status,0,c
 21249  004360  D001               	goto	u12871
 21250  004362  D001               	goto	u12870
 21251  004364                     u12871:
 21252  004364  D011               	goto	l13461
 21253  004366                     u12870:
 21254                           
 21255                           ; BSR set to: 0
 21256  004366  0100               	movlb	0	; () banked
 21257  004368  5164               	movf	___almod@divisor& (0+255),w,b
 21258  00436A  0100               	movlb	0	; () banked
 21259  00436C  5F60               	subwf	___almod@dividend& (0+255),f,b
 21260  00436E  0100               	movlb	0	; () banked
 21261  004370  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 21262  004372  0100               	movlb	0	; () banked
 21263  004374  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 21264  004376  0100               	movlb	0	; () banked
 21265  004378  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 21266  00437A  0100               	movlb	0	; () banked
 21267  00437C  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 21268  00437E  0100               	movlb	0	; () banked
 21269  004380  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 21270  004382  0100               	movlb	0	; () banked
 21271  004384  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 21272  004386  D000               	goto	l13461
 21273  004388                     l13461:
 21274                           
 21275                           ; BSR set to: 0
 21276  004388  0100               	movlb	0	; () banked
 21277  00438A  90D8               	bcf	status,0,c
 21278  00438C  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 21279  00438E  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 21280  004390  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 21281  004392  3364               	rrcf	___almod@divisor& (0+255),f,b
 21282                           
 21283                           ; BSR set to: 0
 21284  004394  0100               	movlb	0	; () banked
 21285  004396  2F68               	decfsz	___almod@counter& (0+255),f,b
 21286  004398  D7D2               	goto	l13457
 21287  00439A  D001               	goto	l13465
 21288                           
 21289                           ; BSR set to: 0
 21290  00439C  D000               	goto	l13465
 21291  00439E                     l13465:
 21292                           
 21293                           ; BSR set to: 0
 21294  00439E  0100               	movlb	0	; () banked
 21295  0043A0  5169               	movf	___almod@sign& (0+255),w,b
 21296  0043A2  0100               	movlb	0	; () banked
 21297  0043A4  B4D8               	btfsc	status,2,c
 21298  0043A6  D001               	goto	u12881
 21299  0043A8  D001               	goto	u12880
 21300  0043AA                     u12881:
 21301  0043AA  D00A               	goto	l13469
 21302  0043AC                     u12880:
 21303                           
 21304                           ; BSR set to: 0
 21305  0043AC  0100               	movlb	0	; () banked
 21306  0043AE  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 21307  0043B0  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 21308  0043B2  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 21309  0043B4  6D60               	negf	___almod@dividend& (0+255),b
 21310  0043B6  0E00               	movlw	0
 21311  0043B8  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 21312  0043BA  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 21313  0043BC  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 21314  0043BE  D000               	goto	l13469
 21315  0043C0                     l13469:
 21316                           
 21317                           ; BSR set to: 0
 21318  0043C0  C060  F060         	movff	___almod@dividend,?___almod
 21319  0043C4  C061  F061         	movff	___almod@dividend+1,?___almod+1
 21320  0043C8  C062  F062         	movff	___almod@dividend+2,?___almod+2
 21321  0043CC  C063  F063         	movff	___almod@dividend+3,?___almod+3
 21322  0043D0  D000               	goto	l2255
 21323  0043D2                     l2255:
 21324                           
 21325                           ; BSR set to: 0
 21326  0043D2  0012               	return		;funcret
 21327  0043D4                     __end_of___almod:
 21328                           	opt stack 0
 21329                           tblptru	equ	0xFF8
 21330                           tblptrh	equ	0xFF7
 21331                           tblptrl	equ	0xFF6
 21332                           tablat	equ	0xFF5
 21333                           prodh	equ	0xFF4
 21334                           prodl	equ	0xFF3
 21335                           intcon	equ	0xFF2
 21336                           intcon3	equ	0xFF0
 21337                           postinc0	equ	0xFEE
 21338                           wreg	equ	0xFE8
 21339                           indf1	equ	0xFE7
 21340                           postdec1	equ	0xFE5
 21341                           fsr1h	equ	0xFE2
 21342                           fsr1l	equ	0xFE1
 21343                           indf2	equ	0xFDF
 21344                           fsr2h	equ	0xFDA
 21345                           fsr2l	equ	0xFD9
 21346                           status	equ	0xFD8
 21347                           
 21348 ;; *************** function _TMRapp_ClearBitFlags *****************
 21349 ;; Defined at:
 21350 ;;		line 51 in file "../Includes/Drivers/TMRapp.c"
 21351 ;; Parameters:    Size  Location     Type
 21352 ;;		None
 21353 ;; Auto vars:     Size  Location     Type
 21354 ;;		None
 21355 ;; Return value:  Size  Location     Type
 21356 ;;                  1    wreg      void 
 21357 ;; Registers used:
 21358 ;;		wreg, status,2
 21359 ;; Tracked objects:
 21360 ;;		On entry : 0/0
 21361 ;;		On exit  : 0/0
 21362 ;;		Unchanged: 0/0
 21363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21364 ;;      Params:         0       0       0       0       0       0       0       0       0
 21365 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21366 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21367 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21368 ;;Total ram usage:        0 bytes
 21369 ;; Hardware stack levels used:    1
 21370 ;; Hardware stack levels required when called:   11
 21371 ;; This function calls:
 21372 ;;		Nothing
 21373 ;; This function is called by:
 21374 ;;		_moteHandler
 21375 ;; This function uses a non-reentrant model
 21376 ;;
 21377                           
 21378                           	psect	text61
 21379  0072DC                     __ptext61:
 21380                           	opt stack 0
 21381  0072DC                     _TMRapp_ClearBitFlags:
 21382                           	opt stack 18
 21383                           
 21384                           ;TMRapp.c: 54: appTimer.TicksBitMap = 0x00;
 21385                           
 21386                           ; BSR set to: 0
 21387                           ;incstack = 0
 21388  0072DC  0E00               	movlw	0
 21389  0072DE  0100               	movlb	0	; () banked
 21390  0072E0  6FF2               	movwf	_appTimer& (0+255),b
 21391                           
 21392                           ; BSR set to: 0
 21393  0072E2  0012               	return		;funcret
 21394  0072E4                     __end_of_TMRapp_ClearBitFlags:
 21395                           	opt stack 0
 21396                           tblptru	equ	0xFF8
 21397                           tblptrh	equ	0xFF7
 21398                           tblptrl	equ	0xFF6
 21399                           tablat	equ	0xFF5
 21400                           prodh	equ	0xFF4
 21401                           prodl	equ	0xFF3
 21402                           intcon	equ	0xFF2
 21403                           intcon3	equ	0xFF0
 21404                           postinc0	equ	0xFEE
 21405                           wreg	equ	0xFE8
 21406                           indf1	equ	0xFE7
 21407                           postdec1	equ	0xFE5
 21408                           fsr1h	equ	0xFE2
 21409                           fsr1l	equ	0xFE1
 21410                           indf2	equ	0xFDF
 21411                           fsr2h	equ	0xFDA
 21412                           fsr2l	equ	0xFD9
 21413                           status	equ	0xFD8
 21414                           
 21415 ;; *************** function _MOTEapp_TimerBasedTask *****************
 21416 ;; Defined at:
 21417 ;;		line 1025 in file "../Includes/Board/MOTEapp.c"
 21418 ;; Parameters:    Size  Location     Type
 21419 ;;  timerTask       1    wreg     struct .
 21420 ;; Auto vars:     Size  Location     Type
 21421 ;;  timerTask       1    0[BANK0 ] struct .
 21422 ;; Return value:  Size  Location     Type
 21423 ;;                  1    wreg      void 
 21424 ;; Registers used:
 21425 ;;		wreg, status,2, status,0
 21426 ;; Tracked objects:
 21427 ;;		On entry : 0/0
 21428 ;;		On exit  : 0/0
 21429 ;;		Unchanged: 0/0
 21430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21431 ;;      Params:         0       0       0       0       0       0       0       0       0
 21432 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21433 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21434 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21435 ;;Total ram usage:        1 bytes
 21436 ;; Hardware stack levels used:    1
 21437 ;; Hardware stack levels required when called:   11
 21438 ;; This function calls:
 21439 ;;		Nothing
 21440 ;; This function is called by:
 21441 ;;		_moteHandler
 21442 ;; This function uses a non-reentrant model
 21443 ;;
 21444                           
 21445                           	psect	text62
 21446  006B88                     __ptext62:
 21447                           	opt stack 0
 21448  006B88                     _MOTEapp_TimerBasedTask:
 21449                           	opt stack 18
 21450                           
 21451                           ; BSR set to: 0
 21452                           ;incstack = 0
 21453                           ;MOTEapp_TimerBasedTask@timerTask stored from wreg
 21454  006B88  0100               	movlb	0	; () banked
 21455  006B8A  6F60               	movwf	MOTEapp_TimerBasedTask@timerTask& (0+255),b
 21456                           
 21457                           ;MOTEapp.c: 1030: if (timerTask.mSecTenTick)
 21458  006B8C  0100               	movlb	0	; () banked
 21459  006B8E  A360               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),1,b
 21460  006B90  D001               	goto	u13051
 21461  006B92  D001               	goto	u13050
 21462  006B94                     u13051:
 21463  006B94  D006               	goto	l13651
 21464  006B96                     u13050:
 21465                           
 21466                           ; BSR set to: 0
 21467                           ;MOTEapp.c: 1031: {
 21468                           ;MOTEapp.c: 1033: m10SecTicker++;
 21469  006B96  0101               	movlb	1	; () banked
 21470  006B98  4B56               	infsnz	_m10SecTicker& (0+255),f,b
 21471  006B9A  2B57               	incf	(_m10SecTicker+1)& (0+255),f,b
 21472  006B9C  D002               	goto	l13651
 21473                           
 21474                           ; BSR set to: 1
 21475  006B9E  D001               	goto	l13651
 21476                           
 21477                           ; BSR set to: 1
 21478  006BA0  D000               	goto	l13651
 21479  006BA2                     l13651:
 21480                           
 21481                           ;MOTEapp.c: 1039: }
 21482                           ;MOTEapp.c: 1040: if (timerTask.SecTick)
 21483  006BA2  0100               	movlb	0	; () banked
 21484  006BA4  A760               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),3,b
 21485  006BA6  D001               	goto	u13061
 21486  006BA8  D001               	goto	u13060
 21487  006BAA                     u13061:
 21488  006BAA  D003               	goto	l13655
 21489  006BAC                     u13060:
 21490                           
 21491                           ; BSR set to: 0
 21492                           ;MOTEapp.c: 1041: {
 21493                           ;MOTEapp.c: 1043: secTicker++;
 21494  006BAC  0100               	movlb	0	; () banked
 21495  006BAE  2BE5               	incf	_secTicker& (0+255),f,b
 21496  006BB0  D000               	goto	l13655
 21497  006BB2                     l13655:
 21498                           
 21499                           ; BSR set to: 0
 21500                           ;MOTEapp.c: 1044: }
 21501                           ;MOTEapp.c: 1045: if (timerTask.MinTick)
 21502  006BB2  0100               	movlb	0	; () banked
 21503  006BB4  A960               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),4,b
 21504  006BB6  D001               	goto	u13071
 21505  006BB8  D001               	goto	u13070
 21506  006BBA                     u13071:
 21507  006BBA  D009               	goto	l610
 21508  006BBC                     u13070:
 21509                           
 21510                           ; BSR set to: 0
 21511                           ;MOTEapp.c: 1046: {
 21512                           ;MOTEapp.c: 1048: minTicker++;
 21513  006BBC  0100               	movlb	0	; () banked
 21514  006BBE  2BE4               	incf	_minTicker& (0+255),f,b
 21515  006BC0  D006               	goto	l610
 21516                           
 21517                           ; BSR set to: 0
 21518  006BC2  D005               	goto	l610
 21519                           
 21520                           ; BSR set to: 0
 21521  006BC4  D004               	goto	l610
 21522                           
 21523                           ; BSR set to: 0
 21524                           
 21525                           ;MOTEapp.c: 1051: {
 21526  006BC6  D003               	goto	l610
 21527                           
 21528                           ; BSR set to: 0
 21529  006BC8  D002               	goto	l610
 21530                           
 21531                           ; BSR set to: 0
 21532                           
 21533                           ;MOTEapp.c: 1055: {
 21534  006BCA  D001               	goto	l610
 21535                           
 21536                           ; BSR set to: 0
 21537  006BCC  D000               	goto	l610
 21538  006BCE                     l610:
 21539                           
 21540                           ; BSR set to: 0
 21541  006BCE  0012               	return		;funcret
 21542  006BD0                     __end_of_MOTEapp_TimerBasedTask:
 21543                           	opt stack 0
 21544                           tblptru	equ	0xFF8
 21545                           tblptrh	equ	0xFF7
 21546                           tblptrl	equ	0xFF6
 21547                           tablat	equ	0xFF5
 21548                           prodh	equ	0xFF4
 21549                           prodl	equ	0xFF3
 21550                           intcon	equ	0xFF2
 21551                           intcon3	equ	0xFF0
 21552                           postinc0	equ	0xFEE
 21553                           wreg	equ	0xFE8
 21554                           indf1	equ	0xFE7
 21555                           postdec1	equ	0xFE5
 21556                           fsr1h	equ	0xFE2
 21557                           fsr1l	equ	0xFE1
 21558                           indf2	equ	0xFDF
 21559                           fsr2h	equ	0xFDA
 21560                           fsr2l	equ	0xFD9
 21561                           status	equ	0xFD8
 21562                           
 21563 ;; *************** function _moteApp_clearCommand *****************
 21564 ;; Defined at:
 21565 ;;		line 1257 in file "../Includes/Board/MOTEapp.c"
 21566 ;; Parameters:    Size  Location     Type
 21567 ;;		None
 21568 ;; Auto vars:     Size  Location     Type
 21569 ;;		None
 21570 ;; Return value:  Size  Location     Type
 21571 ;;                  1    wreg      void 
 21572 ;; Registers used:
 21573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21574 ;; Tracked objects:
 21575 ;;		On entry : 0/0
 21576 ;;		On exit  : 0/0
 21577 ;;		Unchanged: 0/0
 21578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21579 ;;      Params:         0       0       0       0       0       0       0       0       0
 21580 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21581 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21582 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21583 ;;Total ram usage:        0 bytes
 21584 ;; Hardware stack levels used:    1
 21585 ;; Hardware stack levels required when called:   14
 21586 ;; This function calls:
 21587 ;;		_sendCommand
 21588 ;; This function is called by:
 21589 ;;		_main
 21590 ;; This function uses a non-reentrant model
 21591 ;;
 21592                           
 21593                           	psect	text63
 21594  007242                     __ptext63:
 21595                           	opt stack 0
 21596  007242                     _moteApp_clearCommand:
 21597                           	opt stack 16
 21598                           
 21599                           ;MOTEapp.c: 1259: sendCommand("\r\n");
 21600                           
 21601                           ; BSR set to: 0
 21602                           ;incstack = 0
 21603  007242  0E05               	movlw	low (STR_177+23)
 21604  007244  0100               	movlb	0	; () banked
 21605  007246  6F61               	movwf	sendCommand@string& (0+255),b
 21606  007248  0E7A               	movlw	high (STR_177+23)
 21607  00724A  0100               	movlb	0	; () banked
 21608  00724C  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 21609  00724E  EC65  F037         	call	_sendCommand	;wreg free
 21610  007252  0012               	return		;funcret
 21611  007254                     __end_of_moteApp_clearCommand:
 21612                           	opt stack 0
 21613                           tblptru	equ	0xFF8
 21614                           tblptrh	equ	0xFF7
 21615                           tblptrl	equ	0xFF6
 21616                           tablat	equ	0xFF5
 21617                           prodh	equ	0xFF4
 21618                           prodl	equ	0xFF3
 21619                           intcon	equ	0xFF2
 21620                           intcon3	equ	0xFF0
 21621                           postinc0	equ	0xFEE
 21622                           wreg	equ	0xFE8
 21623                           indf1	equ	0xFE7
 21624                           postdec1	equ	0xFE5
 21625                           fsr1h	equ	0xFE2
 21626                           fsr1l	equ	0xFE1
 21627                           indf2	equ	0xFDF
 21628                           fsr2h	equ	0xFDA
 21629                           fsr2l	equ	0xFD9
 21630                           status	equ	0xFD8
 21631                           
 21632 ;; *************** function _sendCommand *****************
 21633 ;; Defined at:
 21634 ;;		line 1112 in file "../Includes/Board/MOTEapp.c"
 21635 ;; Parameters:    Size  Location     Type
 21636 ;;  string          2    1[BANK0 ] PTR const unsigned char 
 21637 ;;		 -> STR_186(22), STR_185(22), STR_184(27), STR_183(27), 
 21638 ;;		 -> STR_178(26), STR_177(26), STR_176(26), STR_175(26), 
 21639 ;;		 -> STR_174(3), STR_173(9), STR_172(15), STR_171(13), 
 21640 ;;		 -> STR_170(13), STR_169(13), STR_168(13), STR_167(13), 
 21641 ;;		 -> STR_166(13), STR_165(13), STR_164(13), STR_163(16), 
 21642 ;;		 -> STR_70(11), STR_68(11), STR_66(14), STR_58(14), 
 21643 ;;		 -> STR_52(10), STR_48(13), STR_43(14), STR_41(13), 
 21644 ;;		 -> STR_39(10), STR_30(10), STR_22(20), STR_21(2), 
 21645 ;; Auto vars:     Size  Location     Type
 21646 ;;		None
 21647 ;; Return value:  Size  Location     Type
 21648 ;;                  1    wreg      void 
 21649 ;; Registers used:
 21650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21651 ;; Tracked objects:
 21652 ;;		On entry : 0/0
 21653 ;;		On exit  : 0/0
 21654 ;;		Unchanged: 0/0
 21655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21656 ;;      Params:         0       2       0       0       0       0       0       0       0
 21657 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21658 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21659 ;;      Totals:         0       2       0       0       0       0       0       0       0
 21660 ;;Total ram usage:        2 bytes
 21661 ;; Hardware stack levels used:    1
 21662 ;; Hardware stack levels required when called:   13
 21663 ;; This function calls:
 21664 ;;		_EUSART_Write
 21665 ;;		_EndLine
 21666 ;; This function is called by:
 21667 ;;		_moduleResync
 21668 ;;		_moduleSleep
 21669 ;;		_moteJoiningProcess
 21670 ;;		_MOTEapp_SetDataRateSetting
 21671 ;;		_moteApp_clearCommand
 21672 ;;		_moteApp_toggleLeds
 21673 ;;		_moteApp_setSensorsInput
 21674 ;;		_moteApp_getTempValue
 21675 ;;		_moteApp_getLightValue
 21676 ;; This function uses a non-reentrant model
 21677 ;;
 21678                           
 21679                           	psect	text64
 21680  006ECA                     __ptext64:
 21681                           	opt stack 0
 21682  006ECA                     _sendCommand:
 21683                           	opt stack 14
 21684                           
 21685                           ;MOTEapp.c: 1115: while (*string)
 21686                           
 21687                           ;incstack = 0
 21688  006ECA  D00C               	goto	l11993
 21689  006ECC                     l11989:
 21690                           
 21691                           ;MOTEapp.c: 1116: {
 21692                           ;MOTEapp.c: 1117: EUSART_Write(*string++);
 21693  006ECC  C061  FFF6         	movff	sendCommand@string,tblptrl
 21694  006ED0  C062  FFF7         	movff	sendCommand@string+1,tblptrh
 21695  006ED4                     	if	0	;tblptru may be non-zero
 21696  006ED4                     	endif
 21697  006ED4                     	if	0	;tblptru may be non-zero
 21698  006ED4                     	endif
 21699  006ED4  0008               	tblrd		*
 21700  006ED6  50F5               	movf	tablat,w,c
 21701  006ED8  ECF3  F034         	call	_EUSART_Write
 21702  006EDC  0100               	movlb	0	; () banked
 21703  006EDE  4B61               	infsnz	sendCommand@string& (0+255),f,b
 21704  006EE0  2B62               	incf	(sendCommand@string+1)& (0+255),f,b
 21705  006EE2  D000               	goto	l11993
 21706  006EE4                     l11993:
 21707  006EE4  C061  FFF6         	movff	sendCommand@string,tblptrl
 21708  006EE8  C062  FFF7         	movff	sendCommand@string+1,tblptrh
 21709  006EEC                     	if	0	;tblptru may be non-zero
 21710  006EEC                     	endif
 21711  006EEC                     	if	0	;tblptru may be non-zero
 21712  006EEC                     	endif
 21713  006EEC  0008               	tblrd		*
 21714  006EEE  50F5               	movf	tablat,w,c
 21715  006EF0  0900               	iorlw	0
 21716  006EF2  A4D8               	btfss	status,2,c
 21717  006EF4  D001               	goto	u10841
 21718  006EF6  D001               	goto	u10840
 21719  006EF8                     u10841:
 21720  006EF8  D7E9               	goto	l11989
 21721  006EFA                     u10840:
 21722  006EFA  D000               	goto	l11995
 21723  006EFC                     l11995:
 21724                           
 21725                           ;MOTEapp.c: 1118: }
 21726                           ;MOTEapp.c: 1119: EndLine();
 21727  006EFC  EC3B  F039         	call	_EndLine	;wreg free
 21728  006F00  0012               	return		;funcret
 21729  006F02                     __end_of_sendCommand:
 21730                           	opt stack 0
 21731                           tblptru	equ	0xFF8
 21732                           tblptrh	equ	0xFF7
 21733                           tblptrl	equ	0xFF6
 21734                           tablat	equ	0xFF5
 21735                           prodh	equ	0xFF4
 21736                           prodl	equ	0xFF3
 21737                           intcon	equ	0xFF2
 21738                           intcon3	equ	0xFF0
 21739                           postinc0	equ	0xFEE
 21740                           wreg	equ	0xFE8
 21741                           indf1	equ	0xFE7
 21742                           postdec1	equ	0xFE5
 21743                           fsr1h	equ	0xFE2
 21744                           fsr1l	equ	0xFE1
 21745                           indf2	equ	0xFDF
 21746                           fsr2h	equ	0xFDA
 21747                           fsr2l	equ	0xFD9
 21748                           status	equ	0xFD8
 21749                           
 21750 ;; *************** function _EndLine *****************
 21751 ;; Defined at:
 21752 ;;		line 1106 in file "../Includes/Board/MOTEapp.c"
 21753 ;; Parameters:    Size  Location     Type
 21754 ;;		None
 21755 ;; Auto vars:     Size  Location     Type
 21756 ;;		None
 21757 ;; Return value:  Size  Location     Type
 21758 ;;                  1    wreg      void 
 21759 ;; Registers used:
 21760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21761 ;; Tracked objects:
 21762 ;;		On entry : 0/0
 21763 ;;		On exit  : 0/0
 21764 ;;		Unchanged: 0/0
 21765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21766 ;;      Params:         0       0       0       0       0       0       0       0       0
 21767 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21768 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21769 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21770 ;;Total ram usage:        0 bytes
 21771 ;; Hardware stack levels used:    1
 21772 ;; Hardware stack levels required when called:   12
 21773 ;; This function calls:
 21774 ;;		_EUSART_Write
 21775 ;; This function is called by:
 21776 ;;		_sendCommand
 21777 ;;		_sendDataCommand
 21778 ;; This function uses a non-reentrant model
 21779 ;;
 21780                           
 21781                           	psect	text65
 21782  007276                     __ptext65:
 21783                           	opt stack 0
 21784  007276                     _EndLine:
 21785                           	opt stack 14
 21786                           
 21787                           ;MOTEapp.c: 1108: EUSART_Write(0x0D);
 21788                           
 21789                           ;incstack = 0
 21790  007276  0E0D               	movlw	13
 21791  007278  ECF3  F034         	call	_EUSART_Write
 21792                           
 21793                           ;MOTEapp.c: 1109: EUSART_Write(0x0A);
 21794  00727C  0E0A               	movlw	10
 21795  00727E  ECF3  F034         	call	_EUSART_Write
 21796  007282  0012               	return		;funcret
 21797  007284                     __end_of_EndLine:
 21798                           	opt stack 0
 21799                           tblptru	equ	0xFF8
 21800                           tblptrh	equ	0xFF7
 21801                           tblptrl	equ	0xFF6
 21802                           tablat	equ	0xFF5
 21803                           prodh	equ	0xFF4
 21804                           prodl	equ	0xFF3
 21805                           intcon	equ	0xFF2
 21806                           intcon3	equ	0xFF0
 21807                           postinc0	equ	0xFEE
 21808                           wreg	equ	0xFE8
 21809                           indf1	equ	0xFE7
 21810                           postdec1	equ	0xFE5
 21811                           fsr1h	equ	0xFE2
 21812                           fsr1l	equ	0xFE1
 21813                           indf2	equ	0xFDF
 21814                           fsr2h	equ	0xFDA
 21815                           fsr2l	equ	0xFD9
 21816                           status	equ	0xFD8
 21817                           
 21818 ;; *************** function _USBapp_handlerState *****************
 21819 ;; Defined at:
 21820 ;;		line 78 in file "../Includes/Board/USBapp.c"
 21821 ;; Parameters:    Size  Location     Type
 21822 ;;  state           1    wreg     enum E5829
 21823 ;; Auto vars:     Size  Location     Type
 21824 ;;  state           1    0[BANK0 ] enum E5829
 21825 ;; Return value:  Size  Location     Type
 21826 ;;                  1    wreg      void 
 21827 ;; Registers used:
 21828 ;;		wreg
 21829 ;; Tracked objects:
 21830 ;;		On entry : 0/0
 21831 ;;		On exit  : 0/0
 21832 ;;		Unchanged: 0/0
 21833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21834 ;;      Params:         0       0       0       0       0       0       0       0       0
 21835 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21836 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21837 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21838 ;;Total ram usage:        1 bytes
 21839 ;; Hardware stack levels used:    1
 21840 ;; Hardware stack levels required when called:   11
 21841 ;; This function calls:
 21842 ;;		Nothing
 21843 ;; This function is called by:
 21844 ;;		_main
 21845 ;; This function uses a non-reentrant model
 21846 ;;
 21847                           
 21848                           	psect	text66
 21849  0072A6                     __ptext66:
 21850                           	opt stack 0
 21851  0072A6                     _USBapp_handlerState:
 21852                           	opt stack 19
 21853                           
 21854                           ;incstack = 0
 21855                           ;USBapp_handlerState@state stored from wreg
 21856  0072A6  0100               	movlb	0	; () banked
 21857  0072A8  6F60               	movwf	USBapp_handlerState@state& (0+255),b
 21858                           
 21859                           ;USBapp.c: 80: usbState = state;
 21860  0072AA  C060  F0DD         	movff	USBapp_handlerState@state,_usbState
 21861  0072AE  0012               	return		;funcret
 21862  0072B0                     __end_of_USBapp_handlerState:
 21863                           	opt stack 0
 21864                           tblptru	equ	0xFF8
 21865                           tblptrh	equ	0xFF7
 21866                           tblptrl	equ	0xFF6
 21867                           tablat	equ	0xFF5
 21868                           prodh	equ	0xFF4
 21869                           prodl	equ	0xFF3
 21870                           intcon	equ	0xFF2
 21871                           intcon3	equ	0xFF0
 21872                           postinc0	equ	0xFEE
 21873                           wreg	equ	0xFE8
 21874                           indf1	equ	0xFE7
 21875                           postdec1	equ	0xFE5
 21876                           fsr1h	equ	0xFE2
 21877                           fsr1l	equ	0xFE1
 21878                           indf2	equ	0xFDF
 21879                           fsr2h	equ	0xFDA
 21880                           fsr2l	equ	0xFD9
 21881                           status	equ	0xFD8
 21882                           
 21883 ;; *************** function _USBapp_Handler *****************
 21884 ;; Defined at:
 21885 ;;		line 86 in file "../Includes/Board/USBapp.c"
 21886 ;; Parameters:    Size  Location     Type
 21887 ;;		None
 21888 ;; Auto vars:     Size  Location     Type
 21889 ;;  buttonPress     1   22[BANK0 ] enum E5863
 21890 ;; Return value:  Size  Location     Type
 21891 ;;                  1    wreg      void 
 21892 ;; Registers used:
 21893 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21894 ;; Tracked objects:
 21895 ;;		On entry : 0/0
 21896 ;;		On exit  : 0/0
 21897 ;;		Unchanged: 0/0
 21898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21899 ;;      Params:         0       0       0       0       0       0       0       0       0
 21900 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21901 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21902 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21903 ;;Total ram usage:        1 bytes
 21904 ;; Hardware stack levels used:    1
 21905 ;; Hardware stack levels required when called:   16
 21906 ;; This function calls:
 21907 ;;		_USBapp_DeviceCdcEmulatorHandler
 21908 ;;		_oled_clear
 21909 ;;		_oled_putString
 21910 ;;		_service_pushbutton
 21911 ;; This function is called by:
 21912 ;;		_main
 21913 ;; This function uses a non-reentrant model
 21914 ;;
 21915                           
 21916                           	psect	text67
 21917  004EC4                     __ptext67:
 21918                           	opt stack 0
 21919  004EC4                     _USBapp_Handler:
 21920                           	opt stack 14
 21921  004EC4                     l839:
 21922                           
 21923                           ;USBapp.c: 90: {
 21924                           ;USBapp.c: 91: switch(usbState)
 21925  004EC4  D054               	goto	l14695
 21926  004EC6                     l842:
 21927  004EC6  D7FF               	goto	l842
 21928                           
 21929                           ;USBapp.c: 95: break;
 21930  004EC8  D05E               	goto	l849
 21931  004ECA                     l14667:
 21932                           
 21933                           ;USBapp.c: 98: oled_clear();
 21934  004ECA  ECA5  F038         	call	_oled_clear	;wreg free
 21935                           
 21936                           ;USBapp.c: 99: oled_putString("CDC Mode",1,0);
 21937  004ECE  0E10               	movlw	low STR_187
 21938  004ED0  0100               	movlb	0	; () banked
 21939  004ED2  6F71               	movwf	oled_putString@string& (0+255),b
 21940  004ED4  0E7F               	movlw	high STR_187
 21941  004ED6  0100               	movlb	0	; () banked
 21942  004ED8  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 21943  004EDA  0E01               	movlw	1
 21944  004EDC  0100               	movlb	0	; () banked
 21945  004EDE  6F73               	movwf	oled_putString@station_dot& (0+255),b
 21946  004EE0  0E00               	movlw	0
 21947  004EE2  0100               	movlb	0	; () banked
 21948  004EE4  6F74               	movwf	oled_putString@start_page& (0+255),b
 21949  004EE6  EC89  F030         	call	_oled_putString	;wreg free
 21950                           
 21951                           ;USBapp.c: 100: oled_putString("Command",2,1);
 21952  004EEA  0E61               	movlw	low STR_188
 21953  004EEC  0100               	movlb	0	; () banked
 21954  004EEE  6F71               	movwf	oled_putString@string& (0+255),b
 21955  004EF0  0E7F               	movlw	high STR_188
 21956  004EF2  0100               	movlb	0	; () banked
 21957  004EF4  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 21958  004EF6  0E02               	movlw	2
 21959  004EF8  0100               	movlb	0	; () banked
 21960  004EFA  6F73               	movwf	oled_putString@station_dot& (0+255),b
 21961  004EFC  0E01               	movlw	1
 21962  004EFE  0100               	movlb	0	; () banked
 21963  004F00  6F74               	movwf	oled_putString@start_page& (0+255),b
 21964  004F02  EC89  F030         	call	_oled_putString	;wreg free
 21965                           
 21966                           ;USBapp.c: 101: oled_putString("USB Handler",0,2);
 21967  004F06  0E28               	movlw	low STR_189
 21968  004F08  0100               	movlb	0	; () banked
 21969  004F0A  6F71               	movwf	oled_putString@string& (0+255),b
 21970  004F0C  0E7E               	movlw	high STR_189
 21971  004F0E  0100               	movlb	0	; () banked
 21972  004F10  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 21973  004F12  0E00               	movlw	0
 21974  004F14  0100               	movlb	0	; () banked
 21975  004F16  6F73               	movwf	oled_putString@station_dot& (0+255),b
 21976  004F18  0E02               	movlw	2
 21977  004F1A  0100               	movlb	0	; () banked
 21978  004F1C  6F74               	movwf	oled_putString@start_page& (0+255),b
 21979  004F1E  EC89  F030         	call	_oled_putString	;wreg free
 21980                           
 21981                           ;USBapp.c: 103: usbState = USB_RUNNING;
 21982  004F22  0E01               	movlw	1
 21983  004F24  0100               	movlb	0	; () banked
 21984  004F26  6FDD               	movwf	_usbState& (0+255),b
 21985                           
 21986                           ;USBapp.c: 104: break;
 21987  004F28  D02E               	goto	l849
 21988  004F2A                     l14677:
 21989                           
 21990                           ; BSR set to: 0
 21991                           ;USBapp.c: 107: if( USBDeviceState < CONFIGURED_STATE )
 21992  004F2A  0E20               	movlw	32
 21993  004F2C  0100               	movlb	0	; () banked
 21994  004F2E  61DE               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 21995  004F30  D001               	goto	u14111
 21996  004F32  D001               	goto	u14110
 21997  004F34                     u14111:
 21998  004F34  D002               	goto	l14681
 21999  004F36                     u14110:
 22000  004F36  D027               	goto	l849
 22001                           
 22002                           ; BSR set to: 0
 22003                           ;USBapp.c: 108: {
 22004                           ;USBapp.c: 110: continue;
 22005  004F38  D026               	goto	l849
 22006  004F3A                     l14681:
 22007                           
 22008                           ; BSR set to: 0
 22009                           ;USBapp.c: 111: }
 22010                           ;USBapp.c: 112: usbState = USB_CDC;
 22011  004F3A  0E02               	movlw	2
 22012  004F3C  0100               	movlb	0	; () banked
 22013  004F3E  6FDD               	movwf	_usbState& (0+255),b
 22014                           
 22015                           ;USBapp.c: 113: break;
 22016  004F40  D022               	goto	l849
 22017  004F42                     l14683:
 22018                           
 22019                           ; BSR set to: 0
 22020                           ;USBapp.c: 116: USBapp_DeviceCdcEmulatorHandler();
 22021  004F42  ECCB  F020         	call	_USBapp_DeviceCdcEmulatorHandler	;wreg free
 22022                           
 22023                           ;USBapp.c: 120: buttonStates_t buttonPress = Released;
 22024  004F46  0E03               	movlw	3
 22025  004F48  0100               	movlb	0	; () banked
 22026  004F4A  6F76               	movwf	USBapp_Handler@buttonPress& (0+255),b
 22027                           
 22028                           ; BSR set to: 0
 22029                           ;USBapp.c: 121: buttonPress = service_pushbutton();
 22030  004F4C  ECB0  F02E         	call	_service_pushbutton	;wreg free
 22031  004F50  0100               	movlb	0	; () banked
 22032  004F52  6F76               	movwf	USBapp_Handler@buttonPress& (0+255),b
 22033                           
 22034                           ; BSR set to: 0
 22035                           ;USBapp.c: 122: if (buttonPress != Released )
 22036  004F54  0E03               	movlw	3
 22037  004F56  0100               	movlb	0	; () banked
 22038  004F58  1976               	xorwf	USBapp_Handler@buttonPress& (0+255),w,b
 22039  004F5A  B4D8               	btfsc	status,2,c
 22040  004F5C  D001               	goto	u14121
 22041  004F5E  D001               	goto	u14120
 22042  004F60                     u14121:
 22043  004F60  D012               	goto	l849
 22044  004F62                     u14120:
 22045                           
 22046                           ; BSR set to: 0
 22047                           ;USBapp.c: 123: {
 22048                           ;USBapp.c: 124: exitUSB = USB_BAT;
 22049  004F62  0E02               	movlw	2
 22050  004F64  0100               	movlb	0	; () banked
 22051  004F66  6FF7               	movwf	_exitUSB& (0+255),b
 22052  004F68  D00E               	goto	l849
 22053                           
 22054                           ; BSR set to: 0
 22055                           ;USBapp.c: 125: }
 22056                           ;USBapp.c: 126: break;
 22057  004F6A  D00D               	goto	l849
 22058                           
 22059                           ; BSR set to: 0
 22060                           ;USBapp.c: 127: }
 22061  004F6C  D00C               	goto	l849
 22062  004F6E                     l14695:
 22063  004F6E  0100               	movlb	0	; () banked
 22064  004F70  51DD               	movf	_usbState& (0+255),w,b
 22065                           
 22066                           ; Switch size 1, requested type "space"
 22067                           ; Number of cases is 3, Range of values is 0 to 2
 22068                           ; switch strategies available:
 22069                           ; Name         Instructions Cycles
 22070                           ; simple_byte           10     6 (average)
 22071                           ;	Chosen strategy is simple_byte
 22072  004F72  0A00               	xorlw	0	; case 0
 22073  004F74  B4D8               	btfsc	status,2,c
 22074  004F76  D7A9               	goto	l14667
 22075  004F78  0A01               	xorlw	1	; case 1
 22076  004F7A  B4D8               	btfsc	status,2,c
 22077  004F7C  D7D6               	goto	l14677
 22078  004F7E  0A03               	xorlw	3	; case 2
 22079  004F80  B4D8               	btfsc	status,2,c
 22080  004F82  D7DF               	goto	l14683
 22081  004F84  D7A0               	goto	l842
 22082  004F86                     l849:
 22083                           
 22084                           ;USBapp.c: 128: }while((PORTAbits.RA0) && (exitUSB == NO_USB));
 22085  004F86  A080               	btfss	3968,0,c	;volatile
 22086  004F88  D001               	goto	u14131
 22087  004F8A  D001               	goto	u14130
 22088  004F8C                     u14131:
 22089  004F8C  D007               	goto	l854
 22090  004F8E                     u14130:
 22091  004F8E  0100               	movlb	0	; () banked
 22092  004F90  51F7               	movf	_exitUSB& (0+255),w,b
 22093  004F92  B4D8               	btfsc	status,2,c
 22094  004F94  D001               	goto	u14141
 22095  004F96  D001               	goto	u14140
 22096  004F98                     u14141:
 22097  004F98  D795               	goto	l839
 22098  004F9A                     u14140:
 22099  004F9A  D000               	goto	l854
 22100  004F9C                     l854:
 22101                           
 22102                           ;USBapp.c: 129: __nop();
 22103  004F9C  F000               	nop	
 22104                           
 22105                           ;USBapp.c: 130: if (exitUSB != USB_BAT)
 22106  004F9E  0E02               	movlw	2
 22107  004FA0  0100               	movlb	0	; () banked
 22108  004FA2  19F7               	xorwf	_exitUSB& (0+255),w,b
 22109  004FA4  B4D8               	btfsc	status,2,c
 22110  004FA6  D001               	goto	u14151
 22111  004FA8  D001               	goto	u14150
 22112  004FAA                     u14151:
 22113  004FAA  D004               	goto	l856
 22114  004FAC                     u14150:
 22115                           
 22116                           ; BSR set to: 0
 22117                           ;USBapp.c: 131: exitUSB = NO_USB;
 22118  004FAC  0E00               	movlw	0
 22119  004FAE  0100               	movlb	0	; () banked
 22120  004FB0  6FF7               	movwf	_exitUSB& (0+255),b
 22121  004FB2  D000               	goto	l856
 22122  004FB4                     l856:
 22123                           
 22124                           ; BSR set to: 0
 22125  004FB4  0012               	return		;funcret
 22126  004FB6                     __end_of_USBapp_Handler:
 22127                           	opt stack 0
 22128                           tblptru	equ	0xFF8
 22129                           tblptrh	equ	0xFF7
 22130                           tblptrl	equ	0xFF6
 22131                           tablat	equ	0xFF5
 22132                           prodh	equ	0xFF4
 22133                           prodl	equ	0xFF3
 22134                           intcon	equ	0xFF2
 22135                           intcon3	equ	0xFF0
 22136                           postinc0	equ	0xFEE
 22137                           wreg	equ	0xFE8
 22138                           indf1	equ	0xFE7
 22139                           postdec1	equ	0xFE5
 22140                           fsr1h	equ	0xFE2
 22141                           fsr1l	equ	0xFE1
 22142                           indf2	equ	0xFDF
 22143                           fsr2h	equ	0xFDA
 22144                           fsr2l	equ	0xFD9
 22145                           status	equ	0xFD8
 22146                           
 22147 ;; *************** function _service_pushbutton *****************
 22148 ;; Defined at:
 22149 ;;		line 49 in file "../Includes/Drivers/buttons.c"
 22150 ;; Parameters:    Size  Location     Type
 22151 ;;		None
 22152 ;; Auto vars:     Size  Location     Type
 22153 ;;  bs              1    0[BANK0 ] enum E5744
 22154 ;; Return value:  Size  Location     Type
 22155 ;;                  1    wreg      enum E5832
 22156 ;; Registers used:
 22157 ;;		wreg, status,2, status,0
 22158 ;; Tracked objects:
 22159 ;;		On entry : 0/0
 22160 ;;		On exit  : 0/0
 22161 ;;		Unchanged: 0/0
 22162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22163 ;;      Params:         0       0       0       0       0       0       0       0       0
 22164 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22165 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22166 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22167 ;;Total ram usage:        1 bytes
 22168 ;; Hardware stack levels used:    1
 22169 ;; Hardware stack levels required when called:   11
 22170 ;; This function calls:
 22171 ;;		Nothing
 22172 ;; This function is called by:
 22173 ;;		_moteHandler
 22174 ;;		_USBapp_Handler
 22175 ;; This function uses a non-reentrant model
 22176 ;;
 22177                           
 22178                           	psect	text68
 22179  005D60                     __ptext68:
 22180                           	opt stack 0
 22181  005D60                     _service_pushbutton:
 22182                           	opt stack 18
 22183                           
 22184                           ;buttons.c: 51: static uint32_t PB_Timer = 0;
 22185                           ;buttons.c: 52: static uint8_t Release_Timer = 0;
 22186                           ;buttons.c: 53: buttonStates_t bs = NoButton;
 22187                           
 22188                           ; BSR set to: 0
 22189                           ;incstack = 0
 22190  005D60  0E00               	movlw	0
 22191  005D62  0100               	movlb	0	; () banked
 22192  005D64  6F60               	movwf	service_pushbutton@bs& (0+255),b
 22193                           
 22194                           ; BSR set to: 0
 22195                           ;buttons.c: 55: if ((PORTBbits.RB1 == 0) || (PORTBbits.RB0 == 0) )
 22196  005D66  A281               	btfss	3969,1,c	;volatile
 22197  005D68  D001               	goto	u13081
 22198  005D6A  D001               	goto	u13080
 22199  005D6C                     u13081:
 22200  005D6C  D005               	goto	l13671
 22201  005D6E                     u13080:
 22202                           
 22203                           ; BSR set to: 0
 22204  005D6E  B081               	btfsc	3969,0,c	;volatile
 22205  005D70  D001               	goto	u13091
 22206  005D72  D001               	goto	u13090
 22207  005D74                     u13091:
 22208  005D74  D02A               	goto	l13683
 22209  005D76                     u13090:
 22210  005D76  D000               	goto	l13671
 22211  005D78                     l13671:
 22212                           
 22213                           ; BSR set to: 0
 22214                           ;buttons.c: 56: {
 22215                           ;buttons.c: 57: ++PB_Timer;
 22216  005D78  0E01               	movlw	1
 22217  005D7A  0101               	movlb	1	; () banked
 22218  005D7C  274A               	addwf	service_pushbutton@PB_Timer& (0+255),f,b
 22219  005D7E  0E00               	movlw	0
 22220  005D80  234B               	addwfc	(service_pushbutton@PB_Timer+1)& (0+255),f,b
 22221  005D82  234C               	addwfc	(service_pushbutton@PB_Timer+2)& (0+255),f,b
 22222  005D84  234D               	addwfc	(service_pushbutton@PB_Timer+3)& (0+255),f,b
 22223                           
 22224                           ;buttons.c: 61: if (PB_Timer == 55)
 22225  005D86  0E37               	movlw	55
 22226  005D88  0101               	movlb	1	; () banked
 22227  005D8A  194A               	xorwf	service_pushbutton@PB_Timer& (0+255),w,b
 22228  005D8C  0101               	movlb	1	; () banked
 22229  005D8E  114B               	iorwf	(service_pushbutton@PB_Timer+1)& (0+255),w,b
 22230  005D90  0101               	movlb	1	; () banked
 22231  005D92  114C               	iorwf	(service_pushbutton@PB_Timer+2)& (0+255),w,b
 22232  005D94  0101               	movlb	1	; () banked
 22233  005D96  114D               	iorwf	(service_pushbutton@PB_Timer+3)& (0+255),w,b
 22234  005D98  A4D8               	btfss	status,2,c
 22235  005D9A  D001               	goto	u13101
 22236  005D9C  D001               	goto	u13100
 22237  005D9E                     u13101:
 22238  005D9E  D010               	goto	l13681
 22239  005DA0                     u13100:
 22240                           
 22241                           ; BSR set to: 1
 22242                           ;buttons.c: 62: {
 22243                           ;buttons.c: 63: Release_Timer = 0;
 22244  005DA0  0E00               	movlw	0
 22245  005DA2  0100               	movlb	0	; () banked
 22246  005DA4  6FDC               	movwf	service_pushbutton@Release_Timer& (0+255),b
 22247                           
 22248                           ; BSR set to: 0
 22249                           ;buttons.c: 65: if (PORTBbits.RB1 == 0)
 22250  005DA6  B281               	btfsc	3969,1,c	;volatile
 22251  005DA8  D001               	goto	u13111
 22252  005DAA  D001               	goto	u13110
 22253  005DAC                     u13111:
 22254  005DAC  D004               	goto	l13679
 22255  005DAE                     u13110:
 22256                           
 22257                           ; BSR set to: 0
 22258                           ;buttons.c: 66: {
 22259                           ;buttons.c: 67: bs = ShortPress1;
 22260  005DAE  0E01               	movlw	1
 22261  005DB0  0100               	movlb	0	; () banked
 22262  005DB2  6F60               	movwf	service_pushbutton@bs& (0+255),b
 22263                           
 22264                           ;buttons.c: 68: }
 22265  005DB4  D025               	goto	l13691
 22266  005DB6                     l13679:
 22267                           
 22268                           ; BSR set to: 0
 22269                           ;buttons.c: 69: else
 22270                           ;buttons.c: 70: {
 22271                           ;buttons.c: 71: bs = ShortPress2;
 22272  005DB6  0E02               	movlw	2
 22273  005DB8  0100               	movlb	0	; () banked
 22274  005DBA  6F60               	movwf	service_pushbutton@bs& (0+255),b
 22275  005DBC  D021               	goto	l13691
 22276                           
 22277                           ; BSR set to: 0
 22278                           ;buttons.c: 72: }
 22279                           ;buttons.c: 73: }
 22280  005DBE  D020               	goto	l13691
 22281  005DC0                     l13681:
 22282                           
 22283                           ;buttons.c: 74: else
 22284                           ;buttons.c: 75: {
 22285                           ;buttons.c: 76: bs = NoButton;
 22286  005DC0  0E00               	movlw	0
 22287  005DC2  0100               	movlb	0	; () banked
 22288  005DC4  6F60               	movwf	service_pushbutton@bs& (0+255),b
 22289  005DC6  D01C               	goto	l13691
 22290                           
 22291                           ; BSR set to: 0
 22292                           ;buttons.c: 77: }
 22293                           ;buttons.c: 78: }
 22294  005DC8  D01B               	goto	l13691
 22295  005DCA                     l13683:
 22296                           
 22297                           ; BSR set to: 0
 22298                           ;buttons.c: 79: else
 22299                           ;buttons.c: 80: {
 22300                           ;buttons.c: 81: if (Release_Timer == 20)
 22301  005DCA  0E14               	movlw	20
 22302  005DCC  0100               	movlb	0	; () banked
 22303  005DCE  19DC               	xorwf	service_pushbutton@Release_Timer& (0+255),w,b
 22304  005DD0  A4D8               	btfss	status,2,c
 22305  005DD2  D001               	goto	u13121
 22306  005DD4  D001               	goto	u13120
 22307  005DD6                     u13121:
 22308  005DD6  D00D               	goto	l13687
 22309  005DD8                     u13120:
 22310                           
 22311                           ; BSR set to: 0
 22312                           ;buttons.c: 82: {
 22313                           ;buttons.c: 83: PB_Timer = 0;
 22314  005DD8  0E00               	movlw	0
 22315  005DDA  0101               	movlb	1	; () banked
 22316  005DDC  6F4A               	movwf	service_pushbutton@PB_Timer& (0+255),b
 22317  005DDE  0E00               	movlw	0
 22318  005DE0  6F4B               	movwf	(service_pushbutton@PB_Timer+1)& (0+255),b
 22319  005DE2  0E00               	movlw	0
 22320  005DE4  6F4C               	movwf	(service_pushbutton@PB_Timer+2)& (0+255),b
 22321  005DE6  0E00               	movlw	0
 22322  005DE8  6F4D               	movwf	(service_pushbutton@PB_Timer+3)& (0+255),b
 22323                           
 22324                           ;buttons.c: 84: Release_Timer = 0;
 22325  005DEA  0E00               	movlw	0
 22326  005DEC  0100               	movlb	0	; () banked
 22327  005DEE  6FDC               	movwf	service_pushbutton@Release_Timer& (0+255),b
 22328                           
 22329                           ;buttons.c: 85: }
 22330  005DF0  D003               	goto	l13689
 22331  005DF2                     l13687:
 22332                           
 22333                           ; BSR set to: 0
 22334                           ;buttons.c: 86: else
 22335                           ;buttons.c: 87: {
 22336                           ;buttons.c: 88: Release_Timer++;
 22337  005DF2  0100               	movlb	0	; () banked
 22338  005DF4  2BDC               	incf	service_pushbutton@Release_Timer& (0+255),f,b
 22339  005DF6  D000               	goto	l13689
 22340  005DF8                     l13689:
 22341                           
 22342                           ; BSR set to: 0
 22343                           ;buttons.c: 89: }
 22344                           ;buttons.c: 90: bs = Released;
 22345  005DF8  0E03               	movlw	3
 22346  005DFA  0100               	movlb	0	; () banked
 22347  005DFC  6F60               	movwf	service_pushbutton@bs& (0+255),b
 22348  005DFE  D000               	goto	l13691
 22349  005E00                     l13691:
 22350                           
 22351                           ; BSR set to: 0
 22352                           ;buttons.c: 91: }
 22353                           ;buttons.c: 93: return bs;
 22354  005E00  0100               	movlb	0	; () banked
 22355  005E02  5160               	movf	service_pushbutton@bs& (0+255),w,b
 22356  005E04  D000               	goto	l943
 22357  005E06                     l943:
 22358                           
 22359                           ; BSR set to: 0
 22360  005E06  0012               	return		;funcret
 22361  005E08                     __end_of_service_pushbutton:
 22362                           	opt stack 0
 22363                           tblptru	equ	0xFF8
 22364                           tblptrh	equ	0xFF7
 22365                           tblptrl	equ	0xFF6
 22366                           tablat	equ	0xFF5
 22367                           prodh	equ	0xFF4
 22368                           prodl	equ	0xFF3
 22369                           intcon	equ	0xFF2
 22370                           intcon3	equ	0xFF0
 22371                           postinc0	equ	0xFEE
 22372                           wreg	equ	0xFE8
 22373                           indf1	equ	0xFE7
 22374                           postdec1	equ	0xFE5
 22375                           fsr1h	equ	0xFE2
 22376                           fsr1l	equ	0xFE1
 22377                           indf2	equ	0xFDF
 22378                           fsr2h	equ	0xFDA
 22379                           fsr2l	equ	0xFD9
 22380                           status	equ	0xFD8
 22381                           
 22382 ;; *************** function _oled_putString *****************
 22383 ;; Defined at:
 22384 ;;		line 331 in file "../Includes/Drivers/SSD1306oLED.c"
 22385 ;; Parameters:    Size  Location     Type
 22386 ;;  string          2   17[BANK0 ] PTR const unsigned char 
 22387 ;;		 -> oled_putUint16@numData(6), oled_putint8@numData(6), oled_putUint8@numData(6), STR_189(12), 
 22388 ;;		 -> STR_188(8), STR_187(9), storedLight(5), STR_182(5), 
 22389 ;;		 -> STR_181(8), STR_180(8), STR_179(9), STR_162(16), 
 22390 ;;		 -> STR_161(17), STR_160(17), STR_159(4), STR_158(4), 
 22391 ;;		 -> STR_157(4), STR_156(4), STR_155(4), STR_154(4), 
 22392 ;;		 -> STR_153(4), STR_152(16), STR_151(17), STR_150(4), 
 22393 ;;		 -> STR_149(4), STR_148(4), STR_147(4), STR_146(4), 
 22394 ;;		 -> STR_145(4), STR_144(4), STR_143(4), STR_142(4), 
 22395 ;;		 -> STR_141(4), STR_140(4), STR_139(4), STR_138(4), 
 22396 ;;		 -> STR_137(16), STR_136(12), STR_135(17), STR_134(16), 
 22397 ;;		 -> STR_133(16), STR_132(16), STR_131(15), STR_130(15), 
 22398 ;;		 -> STR_129(16), STR_128(4), STR_127(3), STR_126(3), 
 22399 ;;		 -> STR_125(3), STR_124(3), STR_123(2), STR_122(5), 
 22400 ;;		 -> STR_121(7), STR_120(17), STR_119(17), STR_118(2), 
 22401 ;;		 -> STR_117(7), STR_116(7), STR_115(16), STR_114(16), 
 22402 ;;		 -> STR_113(15), STR_112(15), STR_111(17), STR_110(16), 
 22403 ;;		 -> STR_109(17), STR_108(17), STR_107(7), STR_106(10), 
 22404 ;;		 -> STR_105(17), STR_104(16), STR_103(16), STR_102(16), 
 22405 ;;		 -> STR_101(16), STR_100(17), STR_99(17), STR_98(16), 
 22406 ;;		 -> STR_96(19), STR_94(17), STR_92(17), STR_91(17), 
 22407 ;;		 -> responseData(32), responsePortNum(3), STR_88(13), STR_87(12), 
 22408 ;;		 -> STR_86(12), STR_83(18), STR_82(13), STR_81(17), 
 22409 ;;		 -> STR_80(16), STR_79(17), STR_78(17), STR_77(16), 
 22410 ;;		 -> STR_76(17), STR_75(17), STR_73(13), STR_72(12), 
 22411 ;;		 -> STR_71(17), STR_65(7), STR_64(10), STR_62(11), 
 22412 ;;		 -> STR_61(11), STR_56(9), STR_55(11), STR_51(11), 
 22413 ;;		 -> STR_50(10), STR_47(9), STR_46(11), STR_42(17), 
 22414 ;;		 -> STR_40(17), STR_38(17), STR_37(17), STR_36(17), 
 22415 ;;		 -> STR_34(17), STR_33(17), STR_32(17), moduleResonseBuffer(64), 
 22416 ;;		 -> STR_29(17), STR_28(17), STR_27(17), STR_26(17), 
 22417 ;;		 -> STR_25(9), STR_24(10), STR_23(5), STR_20(9), 
 22418 ;;		 -> STR_19(8), STR_18(8), STR_17(9), STR_16(10), 
 22419 ;;		 -> STR_15(11), STR_14(13), STR_13(13), STR_12(13), 
 22420 ;;		 -> STR_11(12), STR_10(13), STR_9(9), STR_8(12), 
 22421 ;;		 -> STR_7(16), STR_6(2), STR_5(2), STR_4(9), 
 22422 ;;		 -> STR_3(15), STR_2(15), STR_1(15), 
 22423 ;;  station_dot     1   19[BANK0 ] unsigned char 
 22424 ;;  start_page      1   20[BANK0 ] unsigned char 
 22425 ;; Auto vars:     Size  Location     Type
 22426 ;;  index           1   21[BANK0 ] unsigned char 
 22427 ;; Return value:  Size  Location     Type
 22428 ;;                  1    wreg      void 
 22429 ;; Registers used:
 22430 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22431 ;; Tracked objects:
 22432 ;;		On entry : 0/0
 22433 ;;		On exit  : 0/0
 22434 ;;		Unchanged: 0/0
 22435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22436 ;;      Params:         0       4       0       0       0       0       0       0       0
 22437 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22438 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22439 ;;      Totals:         0       5       0       0       0       0       0       0       0
 22440 ;;Total ram usage:        5 bytes
 22441 ;; Hardware stack levels used:    1
 22442 ;; Hardware stack levels required when called:   14
 22443 ;; This function calls:
 22444 ;;		_oled_putChar
 22445 ;; This function is called by:
 22446 ;;		_main
 22447 ;;		_test_oled
 22448 ;;		_test_switch
 22449 ;;		_test_comms
 22450 ;;		_test_leds
 22451 ;;		_moteHandler
 22452 ;;		_moteJoiningProcess
 22453 ;;		_moteRunningProcess
 22454 ;;		_moteApp_testSensors
 22455 ;;		_USBapp_Handler
 22456 ;;		_oled_putUint8
 22457 ;;		_oled_putint8
 22458 ;;		_test_adc
 22459 ;;		_test_rf
 22460 ;;		_oled_putUint16
 22461 ;; This function uses a non-reentrant model
 22462 ;;
 22463                           
 22464                           	psect	text69
 22465  006112                     __ptext69:
 22466                           	opt stack 0
 22467  006112                     _oled_putString:
 22468                           	opt stack 14
 22469                           
 22470                           ;SSD1306oLED.c: 333: uint8_t index;
 22471                           ;SSD1306oLED.c: 334: for(index = station_dot; index < 16; index++)
 22472                           
 22473                           ; BSR set to: 0
 22474                           ;incstack = 0
 22475  006112  C073  F075         	movff	oled_putString@station_dot,oled_putString@index
 22476  006116  0E0F               	movlw	15
 22477  006118  0100               	movlb	0	; () banked
 22478  00611A  6575               	cpfsgt	oled_putString@index& (0+255),b
 22479  00611C  D001               	goto	u10961
 22480  00611E  D001               	goto	u10960
 22481  006120                     u10961:
 22482  006120  D002               	goto	l12117
 22483  006122                     u10960:
 22484  006122  D03A               	goto	l1044
 22485                           
 22486                           ; BSR set to: 0
 22487  006124  D039               	goto	l1044
 22488  006126                     l12117:
 22489                           
 22490                           ; BSR set to: 0
 22491                           ;SSD1306oLED.c: 335: {
 22492                           ;SSD1306oLED.c: 336: if (*string != 0)
 22493  006126  C071  FFF6         	movff	oled_putString@string,tblptrl
 22494  00612A  C072  FFF7         	movff	oled_putString@string+1,tblptrh
 22495  00612E  6AF8               	clrf	tblptru,c
 22496  006130  0E07               	movlw	(high __ramtop+-1)
 22497  006132  64F7               	cpfsgt	tblptrh,c
 22498  006134  D003               	bra	u10977
 22499  006136  0008               	tblrd		*
 22500  006138  50F5               	movf	tablat,w,c
 22501  00613A  D005               	bra	u10970
 22502  00613C                     u10977:
 22503  00613C  CFF6 FFE9          	movff	tblptrl,fsr0l
 22504  006140  CFF7 FFEA          	movff	tblptrh,fsr0h
 22505  006144  50EF               	movf	indf0,w,c
 22506  006146                     u10970:
 22507  006146  0900               	iorlw	0
 22508  006148  B4D8               	btfsc	status,2,c
 22509  00614A  D001               	goto	u10981
 22510  00614C  D001               	goto	u10980
 22511  00614E                     u10981:
 22512  00614E  D024               	goto	l1044
 22513  006150                     u10980:
 22514                           
 22515                           ;SSD1306oLED.c: 337: {
 22516                           ;SSD1306oLED.c: 338: oled_putChar(*string, index, start_page);
 22517  006150  C075  F062         	movff	oled_putString@index,oled_putChar@station_dot
 22518  006154  C074  F063         	movff	oled_putString@start_page,oled_putChar@start_page
 22519  006158  C071  FFF6         	movff	oled_putString@string,tblptrl
 22520  00615C  C072  FFF7         	movff	oled_putString@string+1,tblptrh
 22521  006160  6AF8               	clrf	tblptru,c
 22522  006162  0E07               	movlw	(high __ramtop+-1)
 22523  006164  64F7               	cpfsgt	tblptrh,c
 22524  006166  D003               	bra	u10997
 22525  006168  0008               	tblrd		*
 22526  00616A  50F5               	movf	tablat,w,c
 22527  00616C  D005               	bra	u10990
 22528  00616E                     u10997:
 22529  00616E  CFF6 FFE9          	movff	tblptrl,fsr0l
 22530  006172  CFF7 FFEA          	movff	tblptrh,fsr0h
 22531  006176  50EF               	movf	indf0,w,c
 22532  006178                     u10990:
 22533  006178  ECA0  F02C         	call	_oled_putChar
 22534                           
 22535                           ;SSD1306oLED.c: 339: *string++;
 22536  00617C  0100               	movlb	0	; () banked
 22537  00617E  4B71               	infsnz	oled_putString@string& (0+255),f,b
 22538  006180  2B72               	incf	(oled_putString@string+1)& (0+255),f,b
 22539                           
 22540                           ;SSD1306oLED.c: 340: }
 22541  006182  D001               	goto	l12123
 22542                           
 22543                           ; BSR set to: 0
 22544                           ;SSD1306oLED.c: 341: else
 22545                           ;SSD1306oLED.c: 342: {
 22546                           ;SSD1306oLED.c: 343: break;
 22547  006184  D009               	goto	l1044
 22548  006186                     l12123:
 22549                           
 22550                           ; BSR set to: 0
 22551  006186  0100               	movlb	0	; () banked
 22552  006188  2B75               	incf	oled_putString@index& (0+255),f,b
 22553                           
 22554                           ; BSR set to: 0
 22555  00618A  0E0F               	movlw	15
 22556  00618C  0100               	movlb	0	; () banked
 22557  00618E  6575               	cpfsgt	oled_putString@index& (0+255),b
 22558  006190  D001               	goto	u11001
 22559  006192  D001               	goto	u11000
 22560  006194                     u11001:
 22561  006194  D7C8               	goto	l12117
 22562  006196                     u11000:
 22563  006196  D000               	goto	l1044
 22564  006198                     l1044:
 22565  006198  0012               	return		;funcret
 22566  00619A                     __end_of_oled_putString:
 22567                           	opt stack 0
 22568                           tblptru	equ	0xFF8
 22569                           tblptrh	equ	0xFF7
 22570                           tblptrl	equ	0xFF6
 22571                           tablat	equ	0xFF5
 22572                           prodh	equ	0xFF4
 22573                           prodl	equ	0xFF3
 22574                           intcon	equ	0xFF2
 22575                           intcon3	equ	0xFF0
 22576                           indf0	equ	0xFEF
 22577                           postinc0	equ	0xFEE
 22578                           fsr0h	equ	0xFEA
 22579                           fsr0l	equ	0xFE9
 22580                           wreg	equ	0xFE8
 22581                           indf1	equ	0xFE7
 22582                           postdec1	equ	0xFE5
 22583                           fsr1h	equ	0xFE2
 22584                           fsr1l	equ	0xFE1
 22585                           indf2	equ	0xFDF
 22586                           fsr2h	equ	0xFDA
 22587                           fsr2l	equ	0xFD9
 22588                           status	equ	0xFD8
 22589                           
 22590 ;; *************** function _oled_clear *****************
 22591 ;; Defined at:
 22592 ;;		line 348 in file "../Includes/Drivers/SSD1306oLED.c"
 22593 ;; Parameters:    Size  Location     Type
 22594 ;;		None
 22595 ;; Auto vars:     Size  Location     Type
 22596 ;;		None
 22597 ;; Return value:  Size  Location     Type
 22598 ;;                  1    wreg      void 
 22599 ;; Registers used:
 22600 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22601 ;; Tracked objects:
 22602 ;;		On entry : 0/0
 22603 ;;		On exit  : 0/0
 22604 ;;		Unchanged: 0/0
 22605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22606 ;;      Params:         0       0       0       0       0       0       0       0       0
 22607 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22608 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22609 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22610 ;;Total ram usage:        0 bytes
 22611 ;; Hardware stack levels used:    1
 22612 ;; Hardware stack levels required when called:   15
 22613 ;; This function calls:
 22614 ;;		_oled_clearRow
 22615 ;; This function is called by:
 22616 ;;		_main
 22617 ;;		_test_powerup
 22618 ;;		_test_oled
 22619 ;;		_test_switch
 22620 ;;		_moteHandler
 22621 ;;		_moteJoiningProcess
 22622 ;;		_moteRunningProcess
 22623 ;;		_moteApp_testSensors
 22624 ;;		_USBapp_Handler
 22625 ;;		_oled_init
 22626 ;;		_test_adc
 22627 ;;		_test_rf
 22628 ;; This function uses a non-reentrant model
 22629 ;;
 22630                           
 22631                           	psect	text70
 22632  00714A                     __ptext70:
 22633                           	opt stack 0
 22634  00714A                     _oled_clear:
 22635                           	opt stack 13
 22636                           
 22637                           ;SSD1306oLED.c: 350: oled_clearRow(0);
 22638                           
 22639                           ;incstack = 0
 22640  00714A  0E00               	movlw	0
 22641  00714C  EC0D  F037         	call	_oled_clearRow
 22642                           
 22643                           ;SSD1306oLED.c: 351: oled_clearRow(1);
 22644  007150  0E01               	movlw	1
 22645  007152  EC0D  F037         	call	_oled_clearRow
 22646                           
 22647                           ;SSD1306oLED.c: 352: oled_clearRow(2);
 22648  007156  0E02               	movlw	2
 22649  007158  EC0D  F037         	call	_oled_clearRow
 22650                           
 22651                           ;SSD1306oLED.c: 353: oled_clearRow(3);
 22652  00715C  0E03               	movlw	3
 22653  00715E  EC0D  F037         	call	_oled_clearRow
 22654  007162  0012               	return		;funcret
 22655  007164                     __end_of_oled_clear:
 22656                           	opt stack 0
 22657                           tblptru	equ	0xFF8
 22658                           tblptrh	equ	0xFF7
 22659                           tblptrl	equ	0xFF6
 22660                           tablat	equ	0xFF5
 22661                           prodh	equ	0xFF4
 22662                           prodl	equ	0xFF3
 22663                           intcon	equ	0xFF2
 22664                           intcon3	equ	0xFF0
 22665                           indf0	equ	0xFEF
 22666                           postinc0	equ	0xFEE
 22667                           fsr0h	equ	0xFEA
 22668                           fsr0l	equ	0xFE9
 22669                           wreg	equ	0xFE8
 22670                           indf1	equ	0xFE7
 22671                           postdec1	equ	0xFE5
 22672                           fsr1h	equ	0xFE2
 22673                           fsr1l	equ	0xFE1
 22674                           indf2	equ	0xFDF
 22675                           fsr2h	equ	0xFDA
 22676                           fsr2l	equ	0xFD9
 22677                           status	equ	0xFD8
 22678                           
 22679 ;; *************** function _oled_clearRow *****************
 22680 ;; Defined at:
 22681 ;;		line 356 in file "../Includes/Drivers/SSD1306oLED.c"
 22682 ;; Parameters:    Size  Location     Type
 22683 ;;  page            1    wreg     unsigned char 
 22684 ;; Auto vars:     Size  Location     Type
 22685 ;;  page            1   12[BANK0 ] unsigned char 
 22686 ;;  index           1   13[BANK0 ] unsigned char 
 22687 ;; Return value:  Size  Location     Type
 22688 ;;                  1    wreg      void 
 22689 ;; Registers used:
 22690 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22691 ;; Tracked objects:
 22692 ;;		On entry : 0/0
 22693 ;;		On exit  : 0/0
 22694 ;;		Unchanged: 0/0
 22695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22696 ;;      Params:         0       0       0       0       0       0       0       0       0
 22697 ;;      Locals:         0       2       0       0       0       0       0       0       0
 22698 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22699 ;;      Totals:         0       2       0       0       0       0       0       0       0
 22700 ;;Total ram usage:        2 bytes
 22701 ;; Hardware stack levels used:    1
 22702 ;; Hardware stack levels required when called:   14
 22703 ;; This function calls:
 22704 ;;		_oled_putChar
 22705 ;; This function is called by:
 22706 ;;		_oled_clear
 22707 ;; This function uses a non-reentrant model
 22708 ;;
 22709                           
 22710                           	psect	text71
 22711  006E1A                     __ptext71:
 22712                           	opt stack 0
 22713  006E1A                     _oled_clearRow:
 22714                           	opt stack 13
 22715                           
 22716                           ;incstack = 0
 22717                           ;oled_clearRow@page stored from wreg
 22718  006E1A  0100               	movlb	0	; () banked
 22719  006E1C  6F6C               	movwf	oled_clearRow@page& (0+255),b
 22720                           
 22721                           ;SSD1306oLED.c: 358: uint8_t index;
 22722                           ;SSD1306oLED.c: 360: for(index = 0; index < 16; index++)
 22723  006E1E  0E00               	movlw	0
 22724  006E20  0100               	movlb	0	; () banked
 22725  006E22  6F6D               	movwf	oled_clearRow@index& (0+255),b
 22726                           
 22727                           ; BSR set to: 0
 22728  006E24  0E0F               	movlw	15
 22729  006E26  0100               	movlb	0	; () banked
 22730  006E28  656D               	cpfsgt	oled_clearRow@index& (0+255),b
 22731  006E2A  D001               	goto	u10811
 22732  006E2C  D001               	goto	u10810
 22733  006E2E                     u10811:
 22734  006E2E  D002               	goto	l11953
 22735  006E30                     u10810:
 22736  006E30  D011               	goto	l1052
 22737                           
 22738                           ; BSR set to: 0
 22739  006E32  D010               	goto	l1052
 22740  006E34                     l11953:
 22741                           
 22742                           ; BSR set to: 0
 22743                           ;SSD1306oLED.c: 361: {
 22744                           ;SSD1306oLED.c: 362: oled_putChar( ' ', index, page);
 22745  006E34  C06D  F062         	movff	oled_clearRow@index,oled_putChar@station_dot
 22746  006E38  C06C  F063         	movff	oled_clearRow@page,oled_putChar@start_page
 22747  006E3C  0E20               	movlw	32
 22748  006E3E  ECA0  F02C         	call	_oled_putChar
 22749  006E42  0100               	movlb	0	; () banked
 22750  006E44  2B6D               	incf	oled_clearRow@index& (0+255),f,b
 22751                           
 22752                           ; BSR set to: 0
 22753  006E46  0E0F               	movlw	15
 22754  006E48  0100               	movlb	0	; () banked
 22755  006E4A  656D               	cpfsgt	oled_clearRow@index& (0+255),b
 22756  006E4C  D001               	goto	u10821
 22757  006E4E  D001               	goto	u10820
 22758  006E50                     u10821:
 22759  006E50  D7F1               	goto	l11953
 22760  006E52                     u10820:
 22761  006E52  D000               	goto	l1052
 22762  006E54                     l1052:
 22763                           
 22764                           ; BSR set to: 0
 22765  006E54  0012               	return		;funcret
 22766  006E56                     __end_of_oled_clearRow:
 22767                           	opt stack 0
 22768                           tblptru	equ	0xFF8
 22769                           tblptrh	equ	0xFF7
 22770                           tblptrl	equ	0xFF6
 22771                           tablat	equ	0xFF5
 22772                           prodh	equ	0xFF4
 22773                           prodl	equ	0xFF3
 22774                           intcon	equ	0xFF2
 22775                           intcon3	equ	0xFF0
 22776                           indf0	equ	0xFEF
 22777                           postinc0	equ	0xFEE
 22778                           fsr0h	equ	0xFEA
 22779                           fsr0l	equ	0xFE9
 22780                           wreg	equ	0xFE8
 22781                           indf1	equ	0xFE7
 22782                           postdec1	equ	0xFE5
 22783                           fsr1h	equ	0xFE2
 22784                           fsr1l	equ	0xFE1
 22785                           indf2	equ	0xFDF
 22786                           fsr2h	equ	0xFDA
 22787                           fsr2l	equ	0xFD9
 22788                           status	equ	0xFD8
 22789                           
 22790 ;; *************** function _oled_putChar *****************
 22791 ;; Defined at:
 22792 ;;		line 318 in file "../Includes/Drivers/SSD1306oLED.c"
 22793 ;; Parameters:    Size  Location     Type
 22794 ;;  k               1    wreg     unsigned char 
 22795 ;;  station_dot     1    2[BANK0 ] unsigned char 
 22796 ;;  start_page      1    3[BANK0 ] unsigned char 
 22797 ;; Auto vars:     Size  Location     Type
 22798 ;;  k               1   10[BANK0 ] unsigned char 
 22799 ;;  index           1   11[BANK0 ] unsigned char 
 22800 ;; Return value:  Size  Location     Type
 22801 ;;                  1    wreg      void 
 22802 ;; Registers used:
 22803 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22804 ;; Tracked objects:
 22805 ;;		On entry : 0/0
 22806 ;;		On exit  : 0/0
 22807 ;;		Unchanged: 0/0
 22808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22809 ;;      Params:         0       2       0       0       0       0       0       0       0
 22810 ;;      Locals:         0       2       0       0       0       0       0       0       0
 22811 ;;      Temps:          0       6       0       0       0       0       0       0       0
 22812 ;;      Totals:         0      10       0       0       0       0       0       0       0
 22813 ;;Total ram usage:       10 bytes
 22814 ;; Hardware stack levels used:    1
 22815 ;; Hardware stack levels required when called:   13
 22816 ;; This function calls:
 22817 ;;		_Set_Column_Address
 22818 ;;		_Set_Page_Address
 22819 ;;		_oled_writeData
 22820 ;; This function is called by:
 22821 ;;		_moteApp_testSensors
 22822 ;;		_oled_putString
 22823 ;;		_oled_clearRow
 22824 ;;		_test_adc
 22825 ;; This function uses a non-reentrant model
 22826 ;;
 22827                           
 22828                           	psect	text72
 22829  005940                     __ptext72:
 22830                           	opt stack 0
 22831  005940                     _oled_putChar:
 22832                           	opt stack 14
 22833                           
 22834                           ; BSR set to: 0
 22835                           ;incstack = 0
 22836                           ;oled_putChar@k stored from wreg
 22837  005940  0100               	movlb	0	; () banked
 22838  005942  6F6A               	movwf	oled_putChar@k& (0+255),b
 22839                           
 22840                           ;SSD1306oLED.c: 320: uint8_t index;
 22841                           ;SSD1306oLED.c: 322: Set_Page_Address(start_page);
 22842  005944  0100               	movlb	0	; () banked
 22843  005946  5163               	movf	oled_putChar@start_page& (0+255),w,b
 22844  005948  ECB2  F038         	call	_Set_Page_Address
 22845                           
 22846                           ;SSD1306oLED.c: 323: Set_Column_Address(0x00 + station_dot * 8 + 4);
 22847  00594C  0100               	movlb	0	; () banked
 22848  00594E  5162               	movf	oled_putChar@station_dot& (0+255),w,b
 22849  005950  0D08               	mullw	8
 22850  005952  50F3               	movf	prodl,w,c
 22851  005954  0F04               	addlw	4
 22852  005956  EC79  F038         	call	_Set_Column_Address
 22853                           
 22854                           ;SSD1306oLED.c: 325: for(index = 0; index < 8; index++)
 22855  00595A  0E00               	movlw	0
 22856  00595C  0100               	movlb	0	; () banked
 22857  00595E  6F6B               	movwf	oled_putChar@index& (0+255),b
 22858                           
 22859                           ; BSR set to: 0
 22860  005960  0E07               	movlw	7
 22861  005962  0100               	movlb	0	; () banked
 22862  005964  656B               	cpfsgt	oled_putChar@index& (0+255),b
 22863  005966  D001               	goto	u10741
 22864  005968  D001               	goto	u10740
 22865  00596A                     u10741:
 22866  00596A  D002               	goto	l11901
 22867  00596C                     u10740:
 22868  00596C  D046               	goto	l1037
 22869                           
 22870                           ; BSR set to: 0
 22871  00596E  D045               	goto	l1037
 22872  005970                     l11901:
 22873                           
 22874                           ; BSR set to: 0
 22875                           ;SSD1306oLED.c: 326: {
 22876                           ;SSD1306oLED.c: 327: oled_writeData(*(selectedFont + 8 * (k - 0x20) + index));
 22877  005970  0100               	movlb	0	; () banked
 22878  005972  516B               	movf	oled_putChar@index& (0+255),w,b
 22879  005974  0D01               	mullw	1
 22880  005976  0E00               	movlw	0
 22881  005978  0100               	movlb	0	; () banked
 22882  00597A  6F64               	movwf	??_oled_putChar& (0+255),b
 22883  00597C  0EFF               	movlw	255
 22884  00597E  0100               	movlb	0	; () banked
 22885  005980  6F65               	movwf	(??_oled_putChar+1)& (0+255),b
 22886  005982  0100               	movlb	0	; () banked
 22887  005984  516A               	movf	oled_putChar@k& (0+255),w,b
 22888  005986  0100               	movlb	0	; () banked
 22889  005988  6F66               	movwf	(??_oled_putChar+2)& (0+255),b
 22890  00598A  6B67               	clrf	(??_oled_putChar+3)& (0+255),b
 22891  00598C  0100               	movlb	0	; () banked
 22892  00598E  90D8               	bcf	status,0,c
 22893  005990  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 22894  005992  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 22895  005994  0100               	movlb	0	; () banked
 22896  005996  90D8               	bcf	status,0,c
 22897  005998  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 22898  00599A  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 22899  00599C  0100               	movlb	0	; () banked
 22900  00599E  90D8               	bcf	status,0,c
 22901  0059A0  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 22902  0059A2  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 22903  0059A4  0100               	movlb	0	; () banked
 22904  0059A6  5164               	movf	??_oled_putChar& (0+255),w,b
 22905  0059A8  0100               	movlb	0	; () banked
 22906  0059AA  2766               	addwf	(??_oled_putChar+2)& (0+255),f,b
 22907  0059AC  0100               	movlb	0	; () banked
 22908  0059AE  5165               	movf	(??_oled_putChar+1)& (0+255),w,b
 22909  0059B0  0100               	movlb	0	; () banked
 22910  0059B2  2367               	addwfc	(??_oled_putChar+3)& (0+255),f,b
 22911  0059B4  C1F8  F068         	movff	_selectedFont,??_oled_putChar+4
 22912  0059B8  C1F9  F069         	movff	_selectedFont+1,??_oled_putChar+5
 22913  0059BC  0100               	movlb	0	; () banked
 22914  0059BE  5166               	movf	(??_oled_putChar+2)& (0+255),w,b
 22915  0059C0  0100               	movlb	0	; () banked
 22916  0059C2  2768               	addwf	(??_oled_putChar+4)& (0+255),f,b
 22917  0059C4  0100               	movlb	0	; () banked
 22918  0059C6  5167               	movf	(??_oled_putChar+3)& (0+255),w,b
 22919  0059C8  0100               	movlb	0	; () banked
 22920  0059CA  2369               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 22921  0059CC  50F3               	movf	prodl,w,c
 22922  0059CE  0100               	movlb	0	; () banked
 22923  0059D0  2768               	addwf	(??_oled_putChar+4)& (0+255),f,b
 22924  0059D2  50F4               	movf	prodh,w,c
 22925  0059D4  0100               	movlb	0	; () banked
 22926  0059D6  2369               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 22927  0059D8  C068  FFF6         	movff	??_oled_putChar+4,tblptrl
 22928  0059DC  C069  FFF7         	movff	??_oled_putChar+5,tblptrh
 22929  0059E0                     	if	0	;tblptru may be non-zero
 22930  0059E0                     	endif
 22931  0059E0                     	if	0	;tblptru may be non-zero
 22932  0059E0                     	endif
 22933  0059E0  0008               	tblrd		*
 22934  0059E2  50F5               	movf	tablat,w,c
 22935  0059E4  ECCC  F038         	call	_oled_writeData
 22936  0059E8  0100               	movlb	0	; () banked
 22937  0059EA  2B6B               	incf	oled_putChar@index& (0+255),f,b
 22938                           
 22939                           ; BSR set to: 0
 22940  0059EC  0E07               	movlw	7
 22941  0059EE  0100               	movlb	0	; () banked
 22942  0059F0  656B               	cpfsgt	oled_putChar@index& (0+255),b
 22943  0059F2  D001               	goto	u10751
 22944  0059F4  D001               	goto	u10750
 22945  0059F6                     u10751:
 22946  0059F6  D7BC               	goto	l11901
 22947  0059F8                     u10750:
 22948  0059F8  D000               	goto	l1037
 22949  0059FA                     l1037:
 22950                           
 22951                           ; BSR set to: 0
 22952  0059FA  0012               	return		;funcret
 22953  0059FC                     __end_of_oled_putChar:
 22954                           	opt stack 0
 22955                           tblptru	equ	0xFF8
 22956                           tblptrh	equ	0xFF7
 22957                           tblptrl	equ	0xFF6
 22958                           tablat	equ	0xFF5
 22959                           prodh	equ	0xFF4
 22960                           prodl	equ	0xFF3
 22961                           intcon	equ	0xFF2
 22962                           intcon3	equ	0xFF0
 22963                           indf0	equ	0xFEF
 22964                           postinc0	equ	0xFEE
 22965                           fsr0h	equ	0xFEA
 22966                           fsr0l	equ	0xFE9
 22967                           wreg	equ	0xFE8
 22968                           indf1	equ	0xFE7
 22969                           postdec1	equ	0xFE5
 22970                           fsr1h	equ	0xFE2
 22971                           fsr1l	equ	0xFE1
 22972                           indf2	equ	0xFDF
 22973                           fsr2h	equ	0xFDA
 22974                           fsr2l	equ	0xFD9
 22975                           status	equ	0xFD8
 22976                           
 22977 ;; *************** function _oled_writeData *****************
 22978 ;; Defined at:
 22979 ;;		line 442 in file "../Includes/Drivers/SSD1306oLED.c"
 22980 ;; Parameters:    Size  Location     Type
 22981 ;;  data            1    wreg     unsigned char 
 22982 ;; Auto vars:     Size  Location     Type
 22983 ;;  data            1    0[BANK0 ] unsigned char 
 22984 ;; Return value:  Size  Location     Type
 22985 ;;                  1    wreg      void 
 22986 ;; Registers used:
 22987 ;;		wreg
 22988 ;; Tracked objects:
 22989 ;;		On entry : 0/0
 22990 ;;		On exit  : 0/0
 22991 ;;		Unchanged: 0/0
 22992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22993 ;;      Params:         0       0       0       0       0       0       0       0       0
 22994 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22995 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22996 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22997 ;;Total ram usage:        1 bytes
 22998 ;; Hardware stack levels used:    1
 22999 ;; Hardware stack levels required when called:   11
 23000 ;; This function calls:
 23001 ;;		Nothing
 23002 ;; This function is called by:
 23003 ;;		_oled_putChar
 23004 ;; This function uses a non-reentrant model
 23005 ;;
 23006                           
 23007                           	psect	text73
 23008  007198                     __ptext73:
 23009                           	opt stack 0
 23010  007198                     _oled_writeData:
 23011                           	opt stack 15
 23012                           
 23013                           ; BSR set to: 0
 23014                           ;incstack = 0
 23015                           ;oled_writeData@data stored from wreg
 23016  007198  0100               	movlb	0	; () banked
 23017  00719A  6F60               	movwf	oled_writeData@data& (0+255),b
 23018                           
 23019                           ;SSD1306oLED.c: 444: LATBbits.LATB4=0;
 23020  00719C  988A               	bcf	3978,4,c	;volatile
 23021                           
 23022                           ;SSD1306oLED.c: 445: LATCbits.LATC0=1;
 23023  00719E  808B               	bsf	3979,0,c	;volatile
 23024                           
 23025                           ;SSD1306oLED.c: 446: LATD=data;
 23026  0071A0  C060  FF8C         	movff	oled_writeData@data,3980	;volatile
 23027                           
 23028                           ;SSD1306oLED.c: 447: LATCbits.LATC1=0;
 23029  0071A4  928B               	bcf	3979,1,c	;volatile
 23030                           
 23031                           ;SSD1306oLED.c: 448: __nop();
 23032  0071A6  F000               	nop	
 23033                           
 23034                           ;SSD1306oLED.c: 449: LATCbits.LATC1=1;
 23035  0071A8  828B               	bsf	3979,1,c	;volatile
 23036                           
 23037                           ;SSD1306oLED.c: 450: LATBbits.LATB4=1;
 23038  0071AA  888A               	bsf	3978,4,c	;volatile
 23039  0071AC  D000               	goto	l1072
 23040  0071AE                     l1072:
 23041  0071AE  0012               	return		;funcret
 23042  0071B0                     __end_of_oled_writeData:
 23043                           	opt stack 0
 23044                           tblptru	equ	0xFF8
 23045                           tblptrh	equ	0xFF7
 23046                           tblptrl	equ	0xFF6
 23047                           tablat	equ	0xFF5
 23048                           prodh	equ	0xFF4
 23049                           prodl	equ	0xFF3
 23050                           intcon	equ	0xFF2
 23051                           intcon3	equ	0xFF0
 23052                           indf0	equ	0xFEF
 23053                           postinc0	equ	0xFEE
 23054                           fsr0h	equ	0xFEA
 23055                           fsr0l	equ	0xFE9
 23056                           wreg	equ	0xFE8
 23057                           indf1	equ	0xFE7
 23058                           postdec1	equ	0xFE5
 23059                           fsr1h	equ	0xFE2
 23060                           fsr1l	equ	0xFE1
 23061                           indf2	equ	0xFDF
 23062                           fsr2h	equ	0xFDA
 23063                           fsr2l	equ	0xFD9
 23064                           status	equ	0xFD8
 23065                           
 23066 ;; *************** function _Set_Page_Address *****************
 23067 ;; Defined at:
 23068 ;;		line 241 in file "../Includes/Drivers/SSD1306oLED.c"
 23069 ;; Parameters:    Size  Location     Type
 23070 ;;  address         1    wreg     unsigned char 
 23071 ;; Auto vars:     Size  Location     Type
 23072 ;;  address         1    1[BANK0 ] unsigned char 
 23073 ;; Return value:  Size  Location     Type
 23074 ;;                  1    wreg      void 
 23075 ;; Registers used:
 23076 ;;		wreg, status,2, status,0, cstack
 23077 ;; Tracked objects:
 23078 ;;		On entry : 0/0
 23079 ;;		On exit  : 0/0
 23080 ;;		Unchanged: 0/0
 23081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23082 ;;      Params:         0       0       0       0       0       0       0       0       0
 23083 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23084 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23085 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23086 ;;Total ram usage:        1 bytes
 23087 ;; Hardware stack levels used:    1
 23088 ;; Hardware stack levels required when called:   12
 23089 ;; This function calls:
 23090 ;;		_oled_writeCommand
 23091 ;; This function is called by:
 23092 ;;		_oled_putChar
 23093 ;; This function uses a non-reentrant model
 23094 ;;
 23095                           
 23096                           	psect	text74
 23097  007164                     __ptext74:
 23098                           	opt stack 0
 23099  007164                     _Set_Page_Address:
 23100                           	opt stack 14
 23101                           
 23102                           ;incstack = 0
 23103                           ;Set_Page_Address@address stored from wreg
 23104  007164  0100               	movlb	0	; () banked
 23105  007166  6F61               	movwf	Set_Page_Address@address& (0+255),b
 23106                           
 23107                           ;SSD1306oLED.c: 243: address = 0xb0 | address;
 23108  007168  0100               	movlb	0	; () banked
 23109  00716A  5161               	movf	Set_Page_Address@address& (0+255),w,b
 23110  00716C  09B0               	iorlw	176
 23111  00716E  0100               	movlb	0	; () banked
 23112  007170  6F61               	movwf	Set_Page_Address@address& (0+255),b
 23113                           
 23114                           ; BSR set to: 0
 23115                           ;SSD1306oLED.c: 244: oled_writeCommand(address);
 23116  007172  0100               	movlb	0	; () banked
 23117  007174  5161               	movf	Set_Page_Address@address& (0+255),w,b
 23118  007176  ECD8  F038         	call	_oled_writeCommand
 23119  00717A  D000               	goto	l1014
 23120  00717C                     l1014:
 23121  00717C  0012               	return		;funcret
 23122  00717E                     __end_of_Set_Page_Address:
 23123                           	opt stack 0
 23124                           tblptru	equ	0xFF8
 23125                           tblptrh	equ	0xFF7
 23126                           tblptrl	equ	0xFF6
 23127                           tablat	equ	0xFF5
 23128                           prodh	equ	0xFF4
 23129                           prodl	equ	0xFF3
 23130                           intcon	equ	0xFF2
 23131                           intcon3	equ	0xFF0
 23132                           indf0	equ	0xFEF
 23133                           postinc0	equ	0xFEE
 23134                           fsr0h	equ	0xFEA
 23135                           fsr0l	equ	0xFE9
 23136                           wreg	equ	0xFE8
 23137                           indf1	equ	0xFE7
 23138                           postdec1	equ	0xFE5
 23139                           fsr1h	equ	0xFE2
 23140                           fsr1l	equ	0xFE1
 23141                           indf2	equ	0xFDF
 23142                           fsr2h	equ	0xFDA
 23143                           fsr2l	equ	0xFD9
 23144                           status	equ	0xFD8
 23145                           
 23146 ;; *************** function _Set_Column_Address *****************
 23147 ;; Defined at:
 23148 ;;		line 249 in file "../Includes/Drivers/SSD1306oLED.c"
 23149 ;; Parameters:    Size  Location     Type
 23150 ;;  address         1    wreg     unsigned char 
 23151 ;; Auto vars:     Size  Location     Type
 23152 ;;  address         1    1[BANK0 ] unsigned char 
 23153 ;; Return value:  Size  Location     Type
 23154 ;;                  1    wreg      void 
 23155 ;; Registers used:
 23156 ;;		wreg, status,2, status,0, cstack
 23157 ;; Tracked objects:
 23158 ;;		On entry : 0/0
 23159 ;;		On exit  : 0/0
 23160 ;;		Unchanged: 0/0
 23161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23162 ;;      Params:         0       0       0       0       0       0       0       0       0
 23163 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23164 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23165 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23166 ;;Total ram usage:        1 bytes
 23167 ;; Hardware stack levels used:    1
 23168 ;; Hardware stack levels required when called:   12
 23169 ;; This function calls:
 23170 ;;		_oled_writeCommand
 23171 ;; This function is called by:
 23172 ;;		_oled_putChar
 23173 ;; This function uses a non-reentrant model
 23174 ;;
 23175                           
 23176                           	psect	text75
 23177  0070F2                     __ptext75:
 23178                           	opt stack 0
 23179  0070F2                     _Set_Column_Address:
 23180                           	opt stack 14
 23181                           
 23182                           ;incstack = 0
 23183                           ;Set_Column_Address@address stored from wreg
 23184  0070F2  0100               	movlb	0	; () banked
 23185  0070F4  6F61               	movwf	Set_Column_Address@address& (0+255),b
 23186                           
 23187                           ;SSD1306oLED.c: 251: oled_writeCommand((0x10|(address>>4)));
 23188  0070F6  0100               	movlb	0	; () banked
 23189  0070F8  3961               	swapf	Set_Column_Address@address& (0+255),w,b
 23190  0070FA  0B0F               	andlw	15
 23191  0070FC  0910               	iorlw	16
 23192  0070FE  ECD8  F038         	call	_oled_writeCommand
 23193                           
 23194                           ;SSD1306oLED.c: 252: oled_writeCommand((0x0f&address));
 23195  007102  0100               	movlb	0	; () banked
 23196  007104  5161               	movf	Set_Column_Address@address& (0+255),w,b
 23197  007106  0B0F               	andlw	15
 23198  007108  ECD8  F038         	call	_oled_writeCommand
 23199  00710C  D000               	goto	l1017
 23200  00710E                     l1017:
 23201  00710E  0012               	return		;funcret
 23202  007110                     __end_of_Set_Column_Address:
 23203                           	opt stack 0
 23204                           tblptru	equ	0xFF8
 23205                           tblptrh	equ	0xFF7
 23206                           tblptrl	equ	0xFF6
 23207                           tablat	equ	0xFF5
 23208                           prodh	equ	0xFF4
 23209                           prodl	equ	0xFF3
 23210                           intcon	equ	0xFF2
 23211                           intcon3	equ	0xFF0
 23212                           indf0	equ	0xFEF
 23213                           postinc0	equ	0xFEE
 23214                           fsr0h	equ	0xFEA
 23215                           fsr0l	equ	0xFE9
 23216                           wreg	equ	0xFE8
 23217                           indf1	equ	0xFE7
 23218                           postdec1	equ	0xFE5
 23219                           fsr1h	equ	0xFE2
 23220                           fsr1l	equ	0xFE1
 23221                           indf2	equ	0xFDF
 23222                           fsr2h	equ	0xFDA
 23223                           fsr2l	equ	0xFD9
 23224                           status	equ	0xFD8
 23225                           
 23226 ;; *************** function _oled_writeCommand *****************
 23227 ;; Defined at:
 23228 ;;		line 430 in file "../Includes/Drivers/SSD1306oLED.c"
 23229 ;; Parameters:    Size  Location     Type
 23230 ;;  command         1    wreg     unsigned char 
 23231 ;; Auto vars:     Size  Location     Type
 23232 ;;  command         1    0[BANK0 ] unsigned char 
 23233 ;; Return value:  Size  Location     Type
 23234 ;;                  1    wreg      void 
 23235 ;; Registers used:
 23236 ;;		wreg
 23237 ;; Tracked objects:
 23238 ;;		On entry : 0/0
 23239 ;;		On exit  : 0/0
 23240 ;;		Unchanged: 0/0
 23241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23242 ;;      Params:         0       0       0       0       0       0       0       0       0
 23243 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23244 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23245 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23246 ;;Total ram usage:        1 bytes
 23247 ;; Hardware stack levels used:    1
 23248 ;; Hardware stack levels required when called:   11
 23249 ;; This function calls:
 23250 ;;		Nothing
 23251 ;; This function is called by:
 23252 ;;		_Set_Page_Address
 23253 ;;		_Set_Column_Address
 23254 ;;		_oled_devInit
 23255 ;;		_oled_setDisplay
 23256 ;;		_oled_displayOff
 23257 ;;		_oled_setContrastControlRegister
 23258 ;;		_oled_initialDispayLine
 23259 ;;		_oled_powerControl
 23260 ;;		_oled_regulorResistorSelect
 23261 ;; This function uses a non-reentrant model
 23262 ;;
 23263                           
 23264                           	psect	text76
 23265  0071B0                     __ptext76:
 23266                           	opt stack 0
 23267  0071B0                     _oled_writeCommand:
 23268                           	opt stack 14
 23269                           
 23270                           ;incstack = 0
 23271                           ;oled_writeCommand@command stored from wreg
 23272  0071B0  0100               	movlb	0	; () banked
 23273  0071B2  6F60               	movwf	oled_writeCommand@command& (0+255),b
 23274                           
 23275                           ;SSD1306oLED.c: 432: LATBbits.LATB4=0;
 23276  0071B4  988A               	bcf	3978,4,c	;volatile
 23277                           
 23278                           ;SSD1306oLED.c: 433: LATCbits.LATC0=0;
 23279  0071B6  908B               	bcf	3979,0,c	;volatile
 23280                           
 23281                           ;SSD1306oLED.c: 434: LATD=command;
 23282  0071B8  C060  FF8C         	movff	oled_writeCommand@command,3980	;volatile
 23283                           
 23284                           ;SSD1306oLED.c: 435: LATCbits.LATC1=0;
 23285  0071BC  928B               	bcf	3979,1,c	;volatile
 23286                           
 23287                           ;SSD1306oLED.c: 436: __nop();
 23288  0071BE  F000               	nop	
 23289                           
 23290                           ;SSD1306oLED.c: 437: LATCbits.LATC1=1;
 23291  0071C0  828B               	bsf	3979,1,c	;volatile
 23292                           
 23293                           ;SSD1306oLED.c: 438: LATBbits.LATB4=1;
 23294  0071C2  888A               	bsf	3978,4,c	;volatile
 23295  0071C4  D000               	goto	l1069
 23296  0071C6                     l1069:
 23297  0071C6  0012               	return		;funcret
 23298  0071C8                     __end_of_oled_writeCommand:
 23299                           	opt stack 0
 23300                           tblptru	equ	0xFF8
 23301                           tblptrh	equ	0xFF7
 23302                           tblptrl	equ	0xFF6
 23303                           tablat	equ	0xFF5
 23304                           prodh	equ	0xFF4
 23305                           prodl	equ	0xFF3
 23306                           intcon	equ	0xFF2
 23307                           intcon3	equ	0xFF0
 23308                           indf0	equ	0xFEF
 23309                           postinc0	equ	0xFEE
 23310                           fsr0h	equ	0xFEA
 23311                           fsr0l	equ	0xFE9
 23312                           wreg	equ	0xFE8
 23313                           indf1	equ	0xFE7
 23314                           postdec1	equ	0xFE5
 23315                           fsr1h	equ	0xFE2
 23316                           fsr1l	equ	0xFE1
 23317                           indf2	equ	0xFDF
 23318                           fsr2h	equ	0xFDA
 23319                           fsr2l	equ	0xFD9
 23320                           status	equ	0xFD8
 23321                           
 23322 ;; *************** function _USBapp_DeviceCdcEmulatorHandler *****************
 23323 ;; Defined at:
 23324 ;;		line 162 in file "../Includes/Board/USBapp.c"
 23325 ;; Parameters:    Size  Location     Type
 23326 ;;		None
 23327 ;; Auto vars:     Size  Location     Type
 23328 ;;		None
 23329 ;; Return value:  Size  Location     Type
 23330 ;;                  1    wreg      void 
 23331 ;; Registers used:
 23332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23333 ;; Tracked objects:
 23334 ;;		On entry : 0/0
 23335 ;;		On exit  : 0/0
 23336 ;;		Unchanged: 0/0
 23337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23338 ;;      Params:         0       0       0       0       0       0       0       0       0
 23339 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23340 ;;      Temps:          0       1       0       0       0       0       0       0       0
 23341 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23342 ;;Total ram usage:        1 bytes
 23343 ;; Hardware stack levels used:    1
 23344 ;; Hardware stack levels required when called:   13
 23345 ;; This function calls:
 23346 ;;		_CDCTxService
 23347 ;;		_EUSART_Read
 23348 ;;		_EUSART_Write
 23349 ;;		_MOTEapp_setResponseReady
 23350 ;;		_USBapp_getrxByteFlag
 23351 ;;		_getsUSBUSART
 23352 ;;		_putUSBUSART
 23353 ;; This function is called by:
 23354 ;;		_USBapp_Handler
 23355 ;; This function uses a non-reentrant model
 23356 ;;
 23357                           
 23358                           	psect	text77
 23359  004196                     __ptext77:
 23360                           	opt stack 0
 23361  004196                     _USBapp_DeviceCdcEmulatorHandler:
 23362                           	opt stack 16
 23363                           
 23364                           ;USBapp.c: 165: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 23365                           
 23366                           ;incstack = 0
 23367  004196  0E1F               	movlw	31
 23368  004198  0100               	movlb	0	; () banked
 23369  00419A  65DE               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
 23370  00419C  D001               	goto	u13901
 23371  00419E  D001               	goto	u13900
 23372  0041A0                     u13901:
 23373  0041A0  D089               	goto	l873
 23374  0041A2                     u13900:
 23375                           
 23376                           ; BSR set to: 0
 23377  0041A2  A260               	btfss	3936,1,c	;volatile
 23378  0041A4  D001               	goto	u13911
 23379  0041A6  D001               	goto	u13910
 23380  0041A8                     u13911:
 23381  0041A8  D002               	goto	l14419
 23382  0041AA                     u13910:
 23383  0041AA  D084               	goto	l873
 23384                           
 23385                           ; BSR set to: 0
 23386                           ;USBapp.c: 166: return;
 23387  0041AC  D083               	goto	l873
 23388  0041AE                     l14419:
 23389                           
 23390                           ; BSR set to: 0
 23391                           ;USBapp.c: 168: if (RS232_Out_Data_Rdy == 0)
 23392  0041AE  5052               	movf	_RS232_Out_Data_Rdy,w,c
 23393  0041B0  A4D8               	btfss	status,2,c
 23394  0041B2  D001               	goto	u13921
 23395  0041B4  D001               	goto	u13920
 23396  0041B6                     u13921:
 23397  0041B6  D016               	goto	l874
 23398  0041B8                     u13920:
 23399                           
 23400                           ; BSR set to: 0
 23401                           ;USBapp.c: 169: {
 23402                           ;USBapp.c: 170: LastRS232Out = getsUSBUSART(USB_Buffer,64);
 23403  0041B8  0E80               	movlw	low _USB_Buffer
 23404  0041BA  0100               	movlb	0	; () banked
 23405  0041BC  6F67               	movwf	getsUSBUSART@buffer& (0+255),b
 23406  0041BE  0E02               	movlw	high _USB_Buffer
 23407  0041C0  0100               	movlb	0	; () banked
 23408  0041C2  6F68               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 23409  0041C4  0E40               	movlw	64
 23410  0041C6  0100               	movlb	0	; () banked
 23411  0041C8  6F69               	movwf	getsUSBUSART@len& (0+255),b
 23412  0041CA  ECF7  F022         	call	_getsUSBUSART	;wreg free
 23413  0041CE  6E51               	movwf	_LastRS232Out,c
 23414                           
 23415                           ;USBapp.c: 171: if(LastRS232Out > 0)
 23416  0041D0  5051               	movf	_LastRS232Out,w,c
 23417  0041D2  B4D8               	btfsc	status,2,c
 23418  0041D4  D001               	goto	u13931
 23419  0041D6  D001               	goto	u13930
 23420  0041D8                     u13931:
 23421  0041D8  D005               	goto	l874
 23422  0041DA                     u13930:
 23423                           
 23424                           ;USBapp.c: 172: {
 23425                           ;USBapp.c: 173: RS232_Out_Data_Rdy = 1;
 23426  0041DA  0E01               	movlw	1
 23427  0041DC  6E52               	movwf	_RS232_Out_Data_Rdy,c
 23428                           
 23429                           ;USBapp.c: 174: RS232cp = 0;
 23430  0041DE  0E00               	movlw	0
 23431  0041E0  6E50               	movwf	_RS232cp,c
 23432  0041E2  D000               	goto	l874
 23433  0041E4                     l874:
 23434                           
 23435                           ;USBapp.c: 175: }
 23436                           ;USBapp.c: 176: }
 23437                           ;USBapp.c: 179: if(RS232_Out_Data_Rdy && TXSTAbits.TRMT)
 23438  0041E4  5052               	movf	_RS232_Out_Data_Rdy,w,c
 23439  0041E6  B4D8               	btfsc	status,2,c
 23440  0041E8  D001               	goto	u13941
 23441  0041EA  D001               	goto	u13940
 23442  0041EC                     u13941:
 23443  0041EC  D019               	goto	l876
 23444  0041EE                     u13940:
 23445  0041EE  A2AC               	btfss	4012,1,c	;volatile
 23446  0041F0  D001               	goto	u13951
 23447  0041F2  D001               	goto	u13950
 23448  0041F4                     u13951:
 23449  0041F4  D015               	goto	l876
 23450  0041F6                     u13950:
 23451                           
 23452                           ;USBapp.c: 180: {
 23453                           ;USBapp.c: 182: EUSART_Write(USB_Buffer[RS232cp]);
 23454  0041F6  5050               	movf	_RS232cp,w,c
 23455  0041F8  0D01               	mullw	1
 23456  0041FA  0E80               	movlw	low _USB_Buffer
 23457  0041FC  24F3               	addwf	prodl,w,c
 23458  0041FE  6ED9               	movwf	fsr2l,c
 23459  004200  0E02               	movlw	high _USB_Buffer
 23460  004202  20F4               	addwfc	prodh,w,c
 23461  004204  6EDA               	movwf	fsr2h,c
 23462  004206  50DF               	movf	indf2,w,c
 23463  004208  ECF3  F034         	call	_EUSART_Write
 23464                           
 23465                           ;USBapp.c: 183: ++RS232cp;
 23466  00420C  2A50               	incf	_RS232cp,f,c
 23467                           
 23468                           ;USBapp.c: 184: if (RS232cp == LastRS232Out)
 23469  00420E  5051               	movf	_LastRS232Out,w,c
 23470  004210  1850               	xorwf	_RS232cp,w,c
 23471  004212  A4D8               	btfss	status,2,c
 23472  004214  D001               	goto	u13961
 23473  004216  D001               	goto	u13960
 23474  004218                     u13961:
 23475  004218  D003               	goto	l876
 23476  00421A                     u13960:
 23477                           
 23478                           ;USBapp.c: 185: RS232_Out_Data_Rdy = 0;
 23479  00421A  0E00               	movlw	0
 23480  00421C  6E52               	movwf	_RS232_Out_Data_Rdy,c
 23481  00421E  D000               	goto	l876
 23482  004220                     l876:
 23483                           
 23484                           ;USBapp.c: 186: }
 23485                           ;USBapp.c: 189: if ((eusartRxCount))
 23486  004220  5057               	movf	_eusartRxCount,w,c	;volatile
 23487  004222  B4D8               	btfsc	status,2,c
 23488  004224  D001               	goto	u13971
 23489  004226  D001               	goto	u13970
 23490  004228                     u13971:
 23491  004228  D02A               	goto	l14451
 23492  00422A                     u13970:
 23493                           
 23494                           ;USBapp.c: 190: {
 23495                           ;USBapp.c: 191: if(USBapp_getrxByteFlag() && (NextUSBOut < (64 - 1)))
 23496  00422A  EC76  F039         	call	_USBapp_getrxByteFlag	;wreg free
 23497  00422E  0900               	iorlw	0
 23498  004230  B4D8               	btfsc	status,2,c
 23499  004232  D001               	goto	u13981
 23500  004234  D001               	goto	u13980
 23501  004236                     u13981:
 23502  004236  D023               	goto	l14451
 23503  004238                     u13980:
 23504  004238  0E3F               	movlw	63
 23505  00423A  6053               	cpfslt	_NextUSBOut,c
 23506  00423C  D001               	goto	u13991
 23507  00423E  D001               	goto	u13990
 23508  004240                     u13991:
 23509  004240  D01E               	goto	l14451
 23510  004242                     u13990:
 23511                           
 23512                           ;USBapp.c: 192: {
 23513                           ;USBapp.c: 193: __nop();
 23514  004242  F000               	nop	
 23515                           
 23516                           ;USBapp.c: 194: USB_Buffer[NextUSBOut] = EUSART_Read();
 23517  004244  EC49  F035         	call	_EUSART_Read	;wreg free
 23518  004248  0100               	movlb	0	; () banked
 23519  00424A  6F6D               	movwf	??_USBapp_DeviceCdcEmulatorHandler& (0+255),b
 23520  00424C  5053               	movf	_NextUSBOut,w,c
 23521  00424E  0D01               	mullw	1
 23522  004250  0E80               	movlw	low _USB_Buffer
 23523  004252  24F3               	addwf	prodl,w,c
 23524  004254  6ED9               	movwf	fsr2l,c
 23525  004256  0E02               	movlw	high _USB_Buffer
 23526  004258  20F4               	addwfc	prodh,w,c
 23527  00425A  6EDA               	movwf	fsr2h,c
 23528  00425C  C06D  FFDF         	movff	??_USBapp_DeviceCdcEmulatorHandler,indf2
 23529                           
 23530                           ; BSR set to: 0
 23531                           ;USBapp.c: 195: ++NextUSBOut;
 23532  004260  2A53               	incf	_NextUSBOut,f,c
 23533                           
 23534                           ; BSR set to: 0
 23535                           ;USBapp.c: 196: USB_Buffer[NextUSBOut] = 0;
 23536  004262  5053               	movf	_NextUSBOut,w,c
 23537  004264  0D01               	mullw	1
 23538  004266  0E80               	movlw	low _USB_Buffer
 23539  004268  24F3               	addwf	prodl,w,c
 23540  00426A  6ED9               	movwf	fsr2l,c
 23541  00426C  0E02               	movlw	high _USB_Buffer
 23542  00426E  20F4               	addwfc	prodh,w,c
 23543  004270  6EDA               	movwf	fsr2h,c
 23544  004272  0E00               	movlw	0
 23545  004274  6EDF               	movwf	indf2,c
 23546                           
 23547                           ; BSR set to: 0
 23548                           ;USBapp.c: 197: rxByteFlag = 0;
 23549  004276  0E00               	movlw	0
 23550  004278  6E54               	movwf	_rxByteFlag,c	;volatile
 23551  00427A  D001               	goto	l14451
 23552                           
 23553                           ; BSR set to: 0
 23554  00427C  D000               	goto	l14451
 23555  00427E                     l14451:
 23556                           
 23557                           ;USBapp.c: 198: }
 23558                           ;USBapp.c: 199: }
 23559                           ;USBapp.c: 203: if(((cdc_trf_state == 0)) && (NextUSBOut > 0))
 23560  00427E  5055               	movf	_cdc_trf_state,w,c
 23561  004280  A4D8               	btfss	status,2,c
 23562  004282  D001               	goto	u14001
 23563  004284  D001               	goto	u14000
 23564  004286                     u14001:
 23565  004286  D014               	goto	l14461
 23566  004288                     u14000:
 23567  004288  5053               	movf	_NextUSBOut,w,c
 23568  00428A  B4D8               	btfsc	status,2,c
 23569  00428C  D001               	goto	u14011
 23570  00428E  D001               	goto	u14010
 23571  004290                     u14011:
 23572  004290  D00F               	goto	l14461
 23573  004292                     u14010:
 23574                           
 23575                           ;USBapp.c: 204: {
 23576                           ;USBapp.c: 205: putUSBUSART(&USB_Buffer[0], NextUSBOut);
 23577  004292  0E80               	movlw	low _USB_Buffer
 23578  004294  0100               	movlb	0	; () banked
 23579  004296  6F60               	movwf	putUSBUSART@data& (0+255),b
 23580  004298  0E02               	movlw	high _USB_Buffer
 23581  00429A  0100               	movlb	0	; () banked
 23582  00429C  6F61               	movwf	(putUSBUSART@data+1)& (0+255),b
 23583  00429E  C053  F062         	movff	_NextUSBOut,putUSBUSART@length
 23584  0042A2  EC31  F038         	call	_putUSBUSART	;wreg free
 23585                           
 23586                           ;USBapp.c: 206: MOTEapp_setResponseReady();
 23587  0042A6  EC72  F039         	call	_MOTEapp_setResponseReady	;wreg free
 23588                           
 23589                           ;USBapp.c: 207: NextUSBOut = 0;
 23590  0042AA  0E00               	movlw	0
 23591  0042AC  6E53               	movwf	_NextUSBOut,c
 23592  0042AE  D000               	goto	l14461
 23593  0042B0                     l14461:
 23594                           
 23595                           ;USBapp.c: 208: }
 23596                           ;USBapp.c: 210: CDCTxService();
 23597  0042B0  ECE9  F019         	call	_CDCTxService	;wreg free
 23598  0042B4                     l873:
 23599  0042B4  0012               	return		;funcret
 23600  0042B6                     __end_of_USBapp_DeviceCdcEmulatorHandler:
 23601                           	opt stack 0
 23602                           tblptru	equ	0xFF8
 23603                           tblptrh	equ	0xFF7
 23604                           tblptrl	equ	0xFF6
 23605                           tablat	equ	0xFF5
 23606                           prodh	equ	0xFF4
 23607                           prodl	equ	0xFF3
 23608                           intcon	equ	0xFF2
 23609                           intcon3	equ	0xFF0
 23610                           indf0	equ	0xFEF
 23611                           postinc0	equ	0xFEE
 23612                           fsr0h	equ	0xFEA
 23613                           fsr0l	equ	0xFE9
 23614                           wreg	equ	0xFE8
 23615                           indf1	equ	0xFE7
 23616                           postdec1	equ	0xFE5
 23617                           fsr1h	equ	0xFE2
 23618                           fsr1l	equ	0xFE1
 23619                           indf2	equ	0xFDF
 23620                           fsr2h	equ	0xFDA
 23621                           fsr2l	equ	0xFD9
 23622                           status	equ	0xFD8
 23623                           
 23624 ;; *************** function _putUSBUSART *****************
 23625 ;; Defined at:
 23626 ;;		line 503 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 23627 ;; Parameters:    Size  Location     Type
 23628 ;;  data            2    0[BANK0 ] PTR unsigned char 
 23629 ;;		 -> USB_Buffer(64), 
 23630 ;;  length          1    2[BANK0 ] unsigned char 
 23631 ;; Auto vars:     Size  Location     Type
 23632 ;;		None
 23633 ;; Return value:  Size  Location     Type
 23634 ;;                  1    wreg      void 
 23635 ;; Registers used:
 23636 ;;		wreg, status,2, status,0
 23637 ;; Tracked objects:
 23638 ;;		On entry : 0/0
 23639 ;;		On exit  : 0/0
 23640 ;;		Unchanged: 0/0
 23641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23642 ;;      Params:         0       3       0       0       0       0       0       0       0
 23643 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23644 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23645 ;;      Totals:         0       3       0       0       0       0       0       0       0
 23646 ;;Total ram usage:        3 bytes
 23647 ;; Hardware stack levels used:    1
 23648 ;; Hardware stack levels required when called:   11
 23649 ;; This function calls:
 23650 ;;		Nothing
 23651 ;; This function is called by:
 23652 ;;		_USBapp_DeviceCdcEmulatorHandler
 23653 ;; This function uses a non-reentrant model
 23654 ;;
 23655                           
 23656                           	psect	text78
 23657  007062                     __ptext78:
 23658                           	opt stack 0
 23659  007062                     _putUSBUSART:
 23660                           	opt stack 17
 23661                           
 23662                           ;usb_device_cdc.c: 528: {PIE3bits.USBIE = 0;};
 23663                           
 23664                           ;incstack = 0
 23665  007062  94A3               	bcf	4003,2,c	;volatile
 23666                           
 23667                           ;usb_device_cdc.c: 529: if(cdc_trf_state == 0)
 23668  007064  5055               	movf	_cdc_trf_state,w,c
 23669  007066  A4D8               	btfss	status,2,c
 23670  007068  D001               	goto	u12691
 23671  00706A  D001               	goto	u12690
 23672  00706C                     u12691:
 23673  00706C  D00C               	goto	l13359
 23674  00706E                     u12690:
 23675                           
 23676                           ;usb_device_cdc.c: 530: {
 23677                           ;usb_device_cdc.c: 531: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 23678  00706E  C060  F151         	movff	putUSBUSART@data,_pCDCSrc
 23679  007072  C061  F152         	movff	putUSBUSART@data+1,_pCDCSrc+1
 23680  007076  C062  F0CF         	movff	putUSBUSART@length,_cdc_tx_len
 23681  00707A  0E01               	movlw	1
 23682  00707C  0100               	movlb	0	; () banked
 23683  00707E  6FCE               	movwf	_cdc_mem_type& (0+255),b
 23684                           
 23685                           ; BSR set to: 0
 23686  007080  0E01               	movlw	1
 23687  007082  6E55               	movwf	_cdc_trf_state,c
 23688  007084  D000               	goto	l13359
 23689  007086                     l13359:
 23690                           
 23691                           ;usb_device_cdc.c: 532: }
 23692                           ;usb_device_cdc.c: 533: {PIE3bits.USBIE = 1;};
 23693  007086  84A3               	bsf	4003,2,c	;volatile
 23694  007088  0012               	return		;funcret
 23695  00708A                     __end_of_putUSBUSART:
 23696                           	opt stack 0
 23697                           tblptru	equ	0xFF8
 23698                           tblptrh	equ	0xFF7
 23699                           tblptrl	equ	0xFF6
 23700                           tablat	equ	0xFF5
 23701                           prodh	equ	0xFF4
 23702                           prodl	equ	0xFF3
 23703                           intcon	equ	0xFF2
 23704                           intcon3	equ	0xFF0
 23705                           indf0	equ	0xFEF
 23706                           postinc0	equ	0xFEE
 23707                           fsr0h	equ	0xFEA
 23708                           fsr0l	equ	0xFE9
 23709                           wreg	equ	0xFE8
 23710                           indf1	equ	0xFE7
 23711                           postdec1	equ	0xFE5
 23712                           fsr1h	equ	0xFE2
 23713                           fsr1l	equ	0xFE1
 23714                           indf2	equ	0xFDF
 23715                           fsr2h	equ	0xFDA
 23716                           fsr2l	equ	0xFD9
 23717                           status	equ	0xFD8
 23718                           
 23719 ;; *************** function _getsUSBUSART *****************
 23720 ;; Defined at:
 23721 ;;		line 432 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 23722 ;; Parameters:    Size  Location     Type
 23723 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 23724 ;;		 -> USB_Buffer(64), 
 23725 ;;  len             1    9[BANK0 ] unsigned char 
 23726 ;; Auto vars:     Size  Location     Type
 23727 ;;		None
 23728 ;; Return value:  Size  Location     Type
 23729 ;;                  1    wreg      unsigned char 
 23730 ;; Registers used:
 23731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23732 ;; Tracked objects:
 23733 ;;		On entry : 0/0
 23734 ;;		On exit  : 0/0
 23735 ;;		Unchanged: 0/0
 23736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23737 ;;      Params:         0       3       0       0       0       0       0       0       0
 23738 ;;      Locals:         0       2       0       0       0       0       0       0       0
 23739 ;;      Temps:          0       1       0       0       0       0       0       0       0
 23740 ;;      Totals:         0       6       0       0       0       0       0       0       0
 23741 ;;Total ram usage:        6 bytes
 23742 ;; Hardware stack levels used:    1
 23743 ;; Hardware stack levels required when called:   12
 23744 ;; This function calls:
 23745 ;;		_USBTransferOnePacket
 23746 ;; This function is called by:
 23747 ;;		_USBapp_DeviceCdcEmulatorHandler
 23748 ;; This function uses a non-reentrant model
 23749 ;;
 23750                           
 23751                           	psect	text79
 23752  0045EE                     __ptext79:
 23753                           	opt stack 0
 23754  0045EE                     _getsUSBUSART:
 23755                           	opt stack 16
 23756                           
 23757                           ;usb_device_cdc.c: 434: cdc_rx_len = 0;
 23758                           
 23759                           ;incstack = 0
 23760  0045EE  0E00               	movlw	0
 23761  0045F0  0100               	movlb	0	; () banked
 23762  0045F2  6FD0               	movwf	_cdc_rx_len& (0+255),b
 23763                           
 23764                           ; BSR set to: 0
 23765                           ;usb_device_cdc.c: 436: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 23766  0045F4  0100               	movlb	0	; () banked
 23767  0045F6  51BF               	movf	_CDCDataOutHandle& (0+255),w,b
 23768  0045F8  0100               	movlb	0	; () banked
 23769  0045FA  11C0               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 23770  0045FC  B4D8               	btfsc	status,2,c
 23771  0045FE  D001               	goto	u12641
 23772  004600  D001               	goto	u12640
 23773  004602                     u12641:
 23774  004602  D014               	goto	l13321
 23775  004604                     u12640:
 23776                           
 23777                           ; BSR set to: 0
 23778  004604  C0BF  FFD9         	movff	_CDCDataOutHandle,fsr2l
 23779  004608  C0C0  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 23780  00460C  0100               	movlb	0	; () banked
 23781  00460E  BEDF               	btfsc	indf2,7,c
 23782  004610  D001               	goto	u12651
 23783  004612  D004               	goto	u12650
 23784  004614                     u12651:
 23785  004614  0100               	movlb	0	; () banked
 23786  004616  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 23787  004618  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 23788  00461A  D002               	goto	u12658
 23789  00461C                     u12650:
 23790  00461C  0100               	movlb	0	; () banked
 23791  00461E  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 23792  004620                     u12658:
 23793  004620  0100               	movlb	0	; () banked
 23794  004622  516A               	movf	??_getsUSBUSART& (0+255),w,b
 23795  004624  0100               	movlb	0	; () banked
 23796  004626  6F6B               	movwf	_getsUSBUSART$6012& (0+255),b
 23797  004628  6B6C               	clrf	(_getsUSBUSART$6012+1)& (0+255),b
 23798  00462A  D006               	goto	l13323
 23799  00462C                     l13321:
 23800                           
 23801                           ; BSR set to: 0
 23802  00462C  0E00               	movlw	0
 23803  00462E  0100               	movlb	0	; () banked
 23804  004630  6F6C               	movwf	(_getsUSBUSART$6012+1)& (0+255),b
 23805  004632  0E00               	movlw	0
 23806  004634  6F6B               	movwf	_getsUSBUSART$6012& (0+255),b
 23807  004636  D000               	goto	l13323
 23808  004638                     l13323:
 23809                           
 23810                           ; BSR set to: 0
 23811  004638  0100               	movlb	0	; () banked
 23812  00463A  516B               	movf	_getsUSBUSART$6012& (0+255),w,b
 23813  00463C  0100               	movlb	0	; () banked
 23814  00463E  116C               	iorwf	(_getsUSBUSART$6012+1)& (0+255),w,b
 23815  004640  A4D8               	btfss	status,2,c
 23816  004642  D001               	goto	u12661
 23817  004644  D001               	goto	u12660
 23818  004646                     u12661:
 23819  004646  D053               	goto	l13339
 23820  004648                     u12660:
 23821                           
 23822                           ; BSR set to: 0
 23823                           ;usb_device_cdc.c: 437: {
 23824                           ;usb_device_cdc.c: 442: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 23825  004648  0100               	movlb	0	; () banked
 23826  00464A  EE20 F001          	lfsr	2,1
 23827  00464E  51BF               	movf	_CDCDataOutHandle& (0+255),w,b
 23828  004650  26D9               	addwf	fsr2l,f,c
 23829  004652  51C0               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 23830  004654  22DA               	addwfc	fsr2h,f,c
 23831  004656  0100               	movlb	0	; () banked
 23832  004658  5169               	movf	getsUSBUSART@len& (0+255),w,b
 23833  00465A  5CDE               	subwf	postinc2,w,c
 23834  00465C  B0D8               	btfsc	status,0,c
 23835  00465E  D001               	goto	u12671
 23836  004660  D001               	goto	u12670
 23837  004662                     u12671:
 23838  004662  D00B               	goto	l13329
 23839  004664                     u12670:
 23840                           
 23841                           ; BSR set to: 0
 23842                           ;usb_device_cdc.c: 443: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 23843  004664  0100               	movlb	0	; () banked
 23844  004666  EE20 F001          	lfsr	2,1
 23845  00466A  51BF               	movf	_CDCDataOutHandle& (0+255),w,b
 23846  00466C  26D9               	addwf	fsr2l,f,c
 23847  00466E  51C0               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 23848  004670  22DA               	addwfc	fsr2h,f,c
 23849  004672  50DF               	movf	indf2,w,c
 23850  004674  0100               	movlb	0	; () banked
 23851  004676  6F69               	movwf	getsUSBUSART@len& (0+255),b
 23852  004678  D000               	goto	l13329
 23853  00467A                     l13329:
 23854                           
 23855                           ; BSR set to: 0
 23856                           ;usb_device_cdc.c: 448: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 23857  00467A  0E00               	movlw	0
 23858  00467C  0100               	movlb	0	; () banked
 23859  00467E  6FD0               	movwf	_cdc_rx_len& (0+255),b
 23860  004680  D019               	goto	l13335
 23861  004682                     l13331:
 23862                           
 23863                           ; BSR set to: 0
 23864                           ;usb_device_cdc.c: 449: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 23865  004682  0100               	movlb	0	; () banked
 23866  004684  51D0               	movf	_cdc_rx_len& (0+255),w,b
 23867  004686  0D01               	mullw	1
 23868  004688  0E40               	movlw	64
 23869  00468A  24F3               	addwf	prodl,w,c
 23870  00468C  6ED9               	movwf	fsr2l,c
 23871  00468E  0E05               	movlw	5
 23872  004690  20F4               	addwfc	prodh,w,c
 23873  004692  6EDA               	movwf	fsr2h,c
 23874  004694  0100               	movlb	0	; () banked
 23875  004696  51D0               	movf	_cdc_rx_len& (0+255),w,b
 23876  004698  0D01               	mullw	1
 23877  00469A  50F3               	movf	prodl,w,c
 23878  00469C  0100               	movlb	0	; () banked
 23879  00469E  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 23880  0046A0  6EE1               	movwf	fsr1l,c
 23881  0046A2  50F4               	movf	prodh,w,c
 23882  0046A4  0100               	movlb	0	; () banked
 23883  0046A6  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 23884  0046A8  6EE2               	movwf	fsr1h,c
 23885  0046AA  CFDF FFE7          	movff	indf2,indf1
 23886                           
 23887                           ; BSR set to: 0
 23888  0046AE  0100               	movlb	0	; () banked
 23889  0046B0  2BD0               	incf	_cdc_rx_len& (0+255),f,b
 23890  0046B2  D000               	goto	l13335
 23891  0046B4                     l13335:
 23892                           
 23893                           ; BSR set to: 0
 23894  0046B4  0100               	movlb	0	; () banked
 23895  0046B6  5169               	movf	getsUSBUSART@len& (0+255),w,b
 23896  0046B8  0100               	movlb	0	; () banked
 23897  0046BA  5DD0               	subwf	_cdc_rx_len& (0+255),w,b
 23898  0046BC  A0D8               	btfss	status,0,c
 23899  0046BE  D001               	goto	u12681
 23900  0046C0  D001               	goto	u12680
 23901  0046C2                     u12681:
 23902  0046C2  D7DF               	goto	l13331
 23903  0046C4                     u12680:
 23904  0046C4  D000               	goto	l13337
 23905  0046C6                     l13337:
 23906                           
 23907                           ; BSR set to: 0
 23908                           ;usb_device_cdc.c: 455: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 23909  0046C6  0E00               	movlw	0
 23910  0046C8  0100               	movlb	0	; () banked
 23911  0046CA  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 23912  0046CC  0E40               	movlw	64
 23913  0046CE  0100               	movlb	0	; () banked
 23914  0046D0  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 23915  0046D2  0E05               	movlw	5
 23916  0046D4  0100               	movlb	0	; () banked
 23917  0046D6  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 23918  0046D8  0E40               	movlw	64
 23919  0046DA  0100               	movlb	0	; () banked
 23920  0046DC  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 23921  0046DE  0E02               	movlw	2
 23922  0046E0  EC7B  F023         	call	_USBTransferOnePacket
 23923  0046E4  C060  F0BF         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 23924  0046E8  C061  F0C0         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 23925  0046EC  D000               	goto	l13339
 23926  0046EE                     l13339:
 23927                           
 23928                           ;usb_device_cdc.c: 457: }
 23929                           ;usb_device_cdc.c: 459: return cdc_rx_len;
 23930  0046EE  0100               	movlb	0	; () banked
 23931  0046F0  51D0               	movf	_cdc_rx_len& (0+255),w,b
 23932  0046F2  D000               	goto	l2055
 23933  0046F4                     l2055:
 23934                           
 23935                           ; BSR set to: 0
 23936  0046F4  0012               	return		;funcret
 23937  0046F6                     __end_of_getsUSBUSART:
 23938                           	opt stack 0
 23939                           tblptru	equ	0xFF8
 23940                           tblptrh	equ	0xFF7
 23941                           tblptrl	equ	0xFF6
 23942                           tablat	equ	0xFF5
 23943                           prodh	equ	0xFF4
 23944                           prodl	equ	0xFF3
 23945                           intcon	equ	0xFF2
 23946                           intcon3	equ	0xFF0
 23947                           indf0	equ	0xFEF
 23948                           postinc0	equ	0xFEE
 23949                           fsr0h	equ	0xFEA
 23950                           fsr0l	equ	0xFE9
 23951                           wreg	equ	0xFE8
 23952                           indf1	equ	0xFE7
 23953                           postdec1	equ	0xFE5
 23954                           fsr1h	equ	0xFE2
 23955                           fsr1l	equ	0xFE1
 23956                           indf2	equ	0xFDF
 23957                           postinc2	equ	0xFDE
 23958                           fsr2h	equ	0xFDA
 23959                           fsr2l	equ	0xFD9
 23960                           status	equ	0xFD8
 23961                           
 23962 ;; *************** function _USBapp_getrxByteFlag *****************
 23963 ;; Defined at:
 23964 ;;		line 268 in file "../Includes/Board/USBapp.c"
 23965 ;; Parameters:    Size  Location     Type
 23966 ;;		None
 23967 ;; Auto vars:     Size  Location     Type
 23968 ;;		None
 23969 ;; Return value:  Size  Location     Type
 23970 ;;                  1    wreg      unsigned char 
 23971 ;; Registers used:
 23972 ;;		wreg, status,2
 23973 ;; Tracked objects:
 23974 ;;		On entry : 0/0
 23975 ;;		On exit  : 0/0
 23976 ;;		Unchanged: 0/0
 23977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23978 ;;      Params:         0       0       0       0       0       0       0       0       0
 23979 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23980 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23981 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23982 ;;Total ram usage:        0 bytes
 23983 ;; Hardware stack levels used:    1
 23984 ;; Hardware stack levels required when called:   11
 23985 ;; This function calls:
 23986 ;;		Nothing
 23987 ;; This function is called by:
 23988 ;;		_USBapp_DeviceCdcEmulatorHandler
 23989 ;; This function uses a non-reentrant model
 23990 ;;
 23991                           
 23992                           	psect	text80
 23993  0072EC                     __ptext80:
 23994                           	opt stack 0
 23995  0072EC                     _USBapp_getrxByteFlag:
 23996                           	opt stack 17
 23997                           
 23998                           ;USBapp.c: 270: return rxByteFlag;
 23999                           
 24000                           ; BSR set to: 0
 24001                           ;incstack = 0
 24002  0072EC  5054               	movf	_rxByteFlag,w,c	;volatile
 24003  0072EE  D000               	goto	l906
 24004  0072F0                     l906:
 24005  0072F0  0012               	return		;funcret
 24006  0072F2                     __end_of_USBapp_getrxByteFlag:
 24007                           	opt stack 0
 24008                           tblptru	equ	0xFF8
 24009                           tblptrh	equ	0xFF7
 24010                           tblptrl	equ	0xFF6
 24011                           tablat	equ	0xFF5
 24012                           prodh	equ	0xFF4
 24013                           prodl	equ	0xFF3
 24014                           intcon	equ	0xFF2
 24015                           intcon3	equ	0xFF0
 24016                           indf0	equ	0xFEF
 24017                           postinc0	equ	0xFEE
 24018                           fsr0h	equ	0xFEA
 24019                           fsr0l	equ	0xFE9
 24020                           wreg	equ	0xFE8
 24021                           indf1	equ	0xFE7
 24022                           postdec1	equ	0xFE5
 24023                           fsr1h	equ	0xFE2
 24024                           fsr1l	equ	0xFE1
 24025                           indf2	equ	0xFDF
 24026                           postinc2	equ	0xFDE
 24027                           fsr2h	equ	0xFDA
 24028                           fsr2l	equ	0xFD9
 24029                           status	equ	0xFD8
 24030                           
 24031 ;; *************** function _MOTEapp_setResponseReady *****************
 24032 ;; Defined at:
 24033 ;;		line 1101 in file "../Includes/Board/MOTEapp.c"
 24034 ;; Parameters:    Size  Location     Type
 24035 ;;		None
 24036 ;; Auto vars:     Size  Location     Type
 24037 ;;		None
 24038 ;; Return value:  Size  Location     Type
 24039 ;;                  1    wreg      void 
 24040 ;; Registers used:
 24041 ;;		wreg, status,2
 24042 ;; Tracked objects:
 24043 ;;		On entry : 0/0
 24044 ;;		On exit  : 0/0
 24045 ;;		Unchanged: 0/0
 24046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24047 ;;      Params:         0       0       0       0       0       0       0       0       0
 24048 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24049 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24050 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24051 ;;Total ram usage:        0 bytes
 24052 ;; Hardware stack levels used:    1
 24053 ;; Hardware stack levels required when called:   11
 24054 ;; This function calls:
 24055 ;;		Nothing
 24056 ;; This function is called by:
 24057 ;;		_USBapp_DeviceCdcEmulatorHandler
 24058 ;; This function uses a non-reentrant model
 24059 ;;
 24060                           
 24061                           	psect	text81
 24062  0072E4                     __ptext81:
 24063                           	opt stack 0
 24064  0072E4                     _MOTEapp_setResponseReady:
 24065                           	opt stack 17
 24066                           
 24067                           ;MOTEapp.c: 1103: responseReady = 1;
 24068                           
 24069                           ;incstack = 0
 24070  0072E4  0E01               	movlw	1
 24071  0072E6  0100               	movlb	0	; () banked
 24072  0072E8  6FEA               	movwf	_responseReady& (0+255),b
 24073                           
 24074                           ; BSR set to: 0
 24075  0072EA  0012               	return		;funcret
 24076  0072EC                     __end_of_MOTEapp_setResponseReady:
 24077                           	opt stack 0
 24078                           tblptru	equ	0xFF8
 24079                           tblptrh	equ	0xFF7
 24080                           tblptrl	equ	0xFF6
 24081                           tablat	equ	0xFF5
 24082                           prodh	equ	0xFF4
 24083                           prodl	equ	0xFF3
 24084                           intcon	equ	0xFF2
 24085                           intcon3	equ	0xFF0
 24086                           indf0	equ	0xFEF
 24087                           postinc0	equ	0xFEE
 24088                           fsr0h	equ	0xFEA
 24089                           fsr0l	equ	0xFE9
 24090                           wreg	equ	0xFE8
 24091                           indf1	equ	0xFE7
 24092                           postdec1	equ	0xFE5
 24093                           fsr1h	equ	0xFE2
 24094                           fsr1l	equ	0xFE1
 24095                           indf2	equ	0xFDF
 24096                           postinc2	equ	0xFDE
 24097                           fsr2h	equ	0xFDA
 24098                           fsr2l	equ	0xFD9
 24099                           status	equ	0xFD8
 24100                           
 24101 ;; *************** function _EUSART_Write *****************
 24102 ;; Defined at:
 24103 ;;		line 139 in file "../Includes/MccGenerated/eusart.c"
 24104 ;; Parameters:    Size  Location     Type
 24105 ;;  txData          1    wreg     unsigned char 
 24106 ;; Auto vars:     Size  Location     Type
 24107 ;;  txData          1    0[BANK0 ] unsigned char 
 24108 ;; Return value:  Size  Location     Type
 24109 ;;                  1    wreg      void 
 24110 ;; Registers used:
 24111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24112 ;; Tracked objects:
 24113 ;;		On entry : 0/0
 24114 ;;		On exit  : 0/0
 24115 ;;		Unchanged: 0/0
 24116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24117 ;;      Params:         0       0       0       0       0       0       0       0       0
 24118 ;;      Locals:         0       1       0       0       0       0       0       0       0
 24119 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24120 ;;      Totals:         0       1       0       0       0       0       0       0       0
 24121 ;;Total ram usage:        1 bytes
 24122 ;; Hardware stack levels used:    1
 24123 ;; Hardware stack levels required when called:   11
 24124 ;; This function calls:
 24125 ;;		Nothing
 24126 ;; This function is called by:
 24127 ;;		_EndLine
 24128 ;;		_sendCommand
 24129 ;;		_sendDataCommand
 24130 ;;		_USBapp_DeviceCdcEmulatorHandler
 24131 ;; This function uses a non-reentrant model
 24132 ;;
 24133                           
 24134                           	psect	text82
 24135  0069E6                     __ptext82:
 24136                           	opt stack 0
 24137  0069E6                     _EUSART_Write:
 24138                           	opt stack 14
 24139                           
 24140                           ; BSR set to: 0
 24141                           ;incstack = 0
 24142                           ;EUSART_Write@txData stored from wreg
 24143  0069E6  0100               	movlb	0	; () banked
 24144  0069E8  6F60               	movwf	EUSART_Write@txData& (0+255),b
 24145                           
 24146                           ;eusart.c: 141: while(0 == eusartTxBufferRemaining)
 24147  0069EA  D001               	goto	l11909
 24148  0069EC  D000               	goto	l11909
 24149  0069EE                     l11909:
 24150  0069EE  504F               	movf	_eusartTxBufferRemaining,w,c	;volatile
 24151  0069F0  B4D8               	btfsc	status,2,c
 24152  0069F2  D001               	goto	u10761
 24153  0069F4  D001               	goto	u10760
 24154  0069F6                     u10761:
 24155  0069F6  D7FB               	goto	l11909
 24156  0069F8                     u10760:
 24157                           
 24158                           ;eusart.c: 143: }
 24159                           ;eusart.c: 145: if(0 == PIE1bits.TXIE)
 24160  0069F8  B89D               	btfsc	3997,4,c	;volatile
 24161  0069FA  D001               	goto	u10771
 24162  0069FC  D001               	goto	u10770
 24163  0069FE                     u10771:
 24164  0069FE  D003               	goto	l1136
 24165  006A00                     u10770:
 24166                           
 24167                           ;eusart.c: 146: {
 24168                           ;eusart.c: 147: TXREG = txData;
 24169  006A00  C060  FFAD         	movff	EUSART_Write@txData,4013	;volatile
 24170                           
 24171                           ;eusart.c: 148: }
 24172  006A04  D01A               	goto	l11923
 24173  006A06                     l1136:
 24174                           
 24175                           ;eusart.c: 149: else
 24176                           ;eusart.c: 150: {
 24177                           ;eusart.c: 151: PIE1bits.TXIE = 0;
 24178  006A06  989D               	bcf	3997,4,c	;volatile
 24179                           
 24180                           ;eusart.c: 152: eusartTxBuffer[eusartTxHead++] = txData;
 24181  006A08  0100               	movlb	0	; () banked
 24182  006A0A  51DB               	movf	_eusartTxHead& (0+255),w,b
 24183  006A0C  0D01               	mullw	1
 24184  006A0E  0E40               	movlw	low _eusartTxBuffer
 24185  006A10  24F3               	addwf	prodl,w,c
 24186  006A12  6ED9               	movwf	fsr2l,c
 24187  006A14  0E02               	movlw	high _eusartTxBuffer
 24188  006A16  20F4               	addwfc	prodh,w,c
 24189  006A18  6EDA               	movwf	fsr2h,c
 24190  006A1A  C060  FFDF         	movff	EUSART_Write@txData,indf2
 24191                           
 24192                           ; BSR set to: 0
 24193  006A1E  0100               	movlb	0	; () banked
 24194  006A20  2BDB               	incf	_eusartTxHead& (0+255),f,b
 24195                           
 24196                           ; BSR set to: 0
 24197                           ;eusart.c: 153: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 24198  006A22  0E3F               	movlw	63
 24199  006A24  0100               	movlb	0	; () banked
 24200  006A26  65DB               	cpfsgt	_eusartTxHead& (0+255),b
 24201  006A28  D001               	goto	u10781
 24202  006A2A  D001               	goto	u10780
 24203  006A2C                     u10781:
 24204  006A2C  D004               	goto	l11921
 24205  006A2E                     u10780:
 24206                           
 24207                           ; BSR set to: 0
 24208                           ;eusart.c: 154: {
 24209                           ;eusart.c: 155: eusartTxHead = 0;
 24210  006A2E  0E00               	movlw	0
 24211  006A30  0100               	movlb	0	; () banked
 24212  006A32  6FDB               	movwf	_eusartTxHead& (0+255),b
 24213  006A34  D000               	goto	l11921
 24214  006A36                     l11921:
 24215                           
 24216                           ; BSR set to: 0
 24217                           ;eusart.c: 156: }
 24218                           ;eusart.c: 157: eusartTxBufferRemaining--;
 24219  006A36  064F               	decf	_eusartTxBufferRemaining,f,c	;volatile
 24220  006A38  D000               	goto	l11923
 24221  006A3A                     l11923:
 24222                           
 24223                           ;eusart.c: 158: }
 24224                           ;eusart.c: 159: PIE1bits.TXIE = 1;
 24225  006A3A  889D               	bsf	3997,4,c	;volatile
 24226  006A3C  0012               	return		;funcret
 24227  006A3E                     __end_of_EUSART_Write:
 24228                           	opt stack 0
 24229                           tblptru	equ	0xFF8
 24230                           tblptrh	equ	0xFF7
 24231                           tblptrl	equ	0xFF6
 24232                           tablat	equ	0xFF5
 24233                           prodh	equ	0xFF4
 24234                           prodl	equ	0xFF3
 24235                           intcon	equ	0xFF2
 24236                           intcon3	equ	0xFF0
 24237                           indf0	equ	0xFEF
 24238                           postinc0	equ	0xFEE
 24239                           fsr0h	equ	0xFEA
 24240                           fsr0l	equ	0xFE9
 24241                           wreg	equ	0xFE8
 24242                           indf1	equ	0xFE7
 24243                           postdec1	equ	0xFE5
 24244                           fsr1h	equ	0xFE2
 24245                           fsr1l	equ	0xFE1
 24246                           indf2	equ	0xFDF
 24247                           postinc2	equ	0xFDE
 24248                           fsr2h	equ	0xFDA
 24249                           fsr2l	equ	0xFD9
 24250                           status	equ	0xFD8
 24251                           
 24252 ;; *************** function _EUSART_Read *****************
 24253 ;; Defined at:
 24254 ;;		line 117 in file "../Includes/MccGenerated/eusart.c"
 24255 ;; Parameters:    Size  Location     Type
 24256 ;;		None
 24257 ;; Auto vars:     Size  Location     Type
 24258 ;;  readValue       1    0[BANK0 ] unsigned char 
 24259 ;; Return value:  Size  Location     Type
 24260 ;;                  1    wreg      unsigned char 
 24261 ;; Registers used:
 24262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24263 ;; Tracked objects:
 24264 ;;		On entry : 0/0
 24265 ;;		On exit  : 0/0
 24266 ;;		Unchanged: 0/0
 24267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24268 ;;      Params:         0       0       0       0       0       0       0       0       0
 24269 ;;      Locals:         0       1       0       0       0       0       0       0       0
 24270 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24271 ;;      Totals:         0       1       0       0       0       0       0       0       0
 24272 ;;Total ram usage:        1 bytes
 24273 ;; Hardware stack levels used:    1
 24274 ;; Hardware stack levels required when called:   11
 24275 ;; This function calls:
 24276 ;;		Nothing
 24277 ;; This function is called by:
 24278 ;;		_MOTEapp_getModuleResponse
 24279 ;;		_USBapp_DeviceCdcEmulatorHandler
 24280 ;; This function uses a non-reentrant model
 24281 ;;
 24282                           
 24283                           	psect	text83
 24284  006A92                     __ptext83:
 24285                           	opt stack 0
 24286  006A92                     _EUSART_Read:
 24287                           	opt stack 15
 24288                           
 24289                           ;eusart.c: 119: uint8_t readValue = 0;
 24290                           
 24291                           ;incstack = 0
 24292  006A92  0E00               	movlw	0
 24293  006A94  0100               	movlb	0	; () banked
 24294  006A96  6F60               	movwf	EUSART_Read@readValue& (0+255),b
 24295                           
 24296                           ;eusart.c: 121: while(0 == eusartRxCount)
 24297  006A98  D002               	goto	l11927
 24298  006A9A                     l1127:
 24299                           
 24300                           ;eusart.c: 122: {
 24301                           ;eusart.c: 123: LATAbits.LATA7 = 1;
 24302  006A9A  8E89               	bsf	3977,7,c	;volatile
 24303  006A9C  D000               	goto	l11927
 24304  006A9E                     l11927:
 24305  006A9E  5057               	movf	_eusartRxCount,w,c	;volatile
 24306  006AA0  B4D8               	btfsc	status,2,c
 24307  006AA2  D001               	goto	u10791
 24308  006AA4  D001               	goto	u10790
 24309  006AA6                     u10791:
 24310  006AA6  D7F9               	goto	l1127
 24311  006AA8                     u10790:
 24312                           
 24313                           ;eusart.c: 124: }
 24314                           ;eusart.c: 126: PIE1bits.RCIE = 0;
 24315  006AA8  9A9D               	bcf	3997,5,c	;volatile
 24316                           
 24317                           ;eusart.c: 128: readValue = eusartRxBuffer[eusartRxTail++];
 24318  006AAA  0100               	movlb	0	; () banked
 24319  006AAC  51D8               	movf	_eusartRxTail& (0+255),w,b
 24320  006AAE  0D01               	mullw	1
 24321  006AB0  0E00               	movlw	low _eusartRxBuffer
 24322  006AB2  24F3               	addwf	prodl,w,c
 24323  006AB4  6ED9               	movwf	fsr2l,c
 24324  006AB6  0E02               	movlw	high _eusartRxBuffer
 24325  006AB8  20F4               	addwfc	prodh,w,c
 24326  006ABA  6EDA               	movwf	fsr2h,c
 24327  006ABC  50DF               	movf	indf2,w,c
 24328  006ABE  0100               	movlb	0	; () banked
 24329  006AC0  6F60               	movwf	EUSART_Read@readValue& (0+255),b
 24330                           
 24331                           ; BSR set to: 0
 24332  006AC2  0100               	movlb	0	; () banked
 24333  006AC4  2BD8               	incf	_eusartRxTail& (0+255),f,b
 24334                           
 24335                           ; BSR set to: 0
 24336                           ;eusart.c: 129: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 24337  006AC6  0E3F               	movlw	63
 24338  006AC8  0100               	movlb	0	; () banked
 24339  006ACA  65D8               	cpfsgt	_eusartRxTail& (0+255),b
 24340  006ACC  D001               	goto	u10801
 24341  006ACE  D001               	goto	u10800
 24342  006AD0                     u10801:
 24343  006AD0  D004               	goto	l11937
 24344  006AD2                     u10800:
 24345                           
 24346                           ; BSR set to: 0
 24347                           ;eusart.c: 130: {
 24348                           ;eusart.c: 131: eusartRxTail = 0;
 24349  006AD2  0E00               	movlw	0
 24350  006AD4  0100               	movlb	0	; () banked
 24351  006AD6  6FD8               	movwf	_eusartRxTail& (0+255),b
 24352  006AD8  D000               	goto	l11937
 24353  006ADA                     l11937:
 24354                           
 24355                           ; BSR set to: 0
 24356                           ;eusart.c: 132: }
 24357                           ;eusart.c: 133: eusartRxCount--;
 24358  006ADA  0657               	decf	_eusartRxCount,f,c	;volatile
 24359                           
 24360                           ; BSR set to: 0
 24361                           ;eusart.c: 134: PIE1bits.RCIE = 1;
 24362  006ADC  8A9D               	bsf	3997,5,c	;volatile
 24363                           
 24364                           ; BSR set to: 0
 24365                           ;eusart.c: 136: return readValue;
 24366  006ADE  0100               	movlb	0	; () banked
 24367  006AE0  5160               	movf	EUSART_Read@readValue& (0+255),w,b
 24368  006AE2  D000               	goto	l1130
 24369  006AE4                     l1130:
 24370                           
 24371                           ; BSR set to: 0
 24372  006AE4  0012               	return		;funcret
 24373  006AE6                     __end_of_EUSART_Read:
 24374                           	opt stack 0
 24375                           tblptru	equ	0xFF8
 24376                           tblptrh	equ	0xFF7
 24377                           tblptrl	equ	0xFF6
 24378                           tablat	equ	0xFF5
 24379                           prodh	equ	0xFF4
 24380                           prodl	equ	0xFF3
 24381                           intcon	equ	0xFF2
 24382                           intcon3	equ	0xFF0
 24383                           indf0	equ	0xFEF
 24384                           postinc0	equ	0xFEE
 24385                           fsr0h	equ	0xFEA
 24386                           fsr0l	equ	0xFE9
 24387                           wreg	equ	0xFE8
 24388                           indf1	equ	0xFE7
 24389                           postdec1	equ	0xFE5
 24390                           fsr1h	equ	0xFE2
 24391                           fsr1l	equ	0xFE1
 24392                           indf2	equ	0xFDF
 24393                           postinc2	equ	0xFDE
 24394                           fsr2h	equ	0xFDA
 24395                           fsr2l	equ	0xFD9
 24396                           status	equ	0xFD8
 24397                           
 24398 ;; *************** function _CDCTxService *****************
 24399 ;; Defined at:
 24400 ;;		line 783 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 24401 ;; Parameters:    Size  Location     Type
 24402 ;;		None
 24403 ;; Auto vars:     Size  Location     Type
 24404 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 24405 ;;  i               1   10[BANK0 ] unsigned char 
 24406 ;; Return value:  Size  Location     Type
 24407 ;;                  1    wreg      void 
 24408 ;; Registers used:
 24409 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24410 ;; Tracked objects:
 24411 ;;		On entry : 0/0
 24412 ;;		On exit  : 0/0
 24413 ;;		Unchanged: 0/0
 24414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24415 ;;      Params:         0       0       0       0       0       0       0       0       0
 24416 ;;      Locals:         0       4       0       0       0       0       0       0       0
 24417 ;;      Temps:          0       1       0       0       0       0       0       0       0
 24418 ;;      Totals:         0       5       0       0       0       0       0       0       0
 24419 ;;Total ram usage:        5 bytes
 24420 ;; Hardware stack levels used:    1
 24421 ;; Hardware stack levels required when called:   12
 24422 ;; This function calls:
 24423 ;;		_USBTransferOnePacket
 24424 ;; This function is called by:
 24425 ;;		_USBapp_DeviceCdcEmulatorHandler
 24426 ;; This function uses a non-reentrant model
 24427 ;;
 24428                           
 24429                           	psect	text84
 24430  0033D2                     __ptext84:
 24431                           	opt stack 0
 24432  0033D2                     _CDCTxService:
 24433                           	opt stack 16
 24434                           
 24435                           ;usb_device_cdc.c: 785: uint8_t byte_to_send;
 24436                           ;usb_device_cdc.c: 786: uint8_t i;
 24437                           ;usb_device_cdc.c: 788: {PIE3bits.USBIE = 0;};
 24438                           
 24439                           ; BSR set to: 0
 24440                           ;incstack = 0
 24441  0033D2  94A3               	bcf	4003,2,c	;volatile
 24442                           
 24443                           ;usb_device_cdc.c: 790: {};
 24444                           ;usb_device_cdc.c: 792: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 24445  0033D4  0100               	movlb	0	; () banked
 24446  0033D6  51BD               	movf	_CDCDataInHandle& (0+255),w,b
 24447  0033D8  0100               	movlb	0	; () banked
 24448  0033DA  11BE               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 24449  0033DC  B4D8               	btfsc	status,2,c
 24450  0033DE  D001               	goto	u12701
 24451  0033E0  D001               	goto	u12700
 24452  0033E2                     u12701:
 24453  0033E2  D014               	goto	l13367
 24454  0033E4                     u12700:
 24455                           
 24456                           ; BSR set to: 0
 24457  0033E4  C0BD  FFD9         	movff	_CDCDataInHandle,fsr2l
 24458  0033E8  C0BE  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 24459  0033EC  0100               	movlb	0	; () banked
 24460  0033EE  BEDF               	btfsc	indf2,7,c
 24461  0033F0  D001               	goto	u12711
 24462  0033F2  D004               	goto	u12710
 24463  0033F4                     u12711:
 24464  0033F4  0100               	movlb	0	; () banked
 24465  0033F6  6B67               	clrf	??_CDCTxService& (0+255),b
 24466  0033F8  2B67               	incf	??_CDCTxService& (0+255),f,b
 24467  0033FA  D002               	goto	u12718
 24468  0033FC                     u12710:
 24469  0033FC  0100               	movlb	0	; () banked
 24470  0033FE  6B67               	clrf	??_CDCTxService& (0+255),b
 24471  003400                     u12718:
 24472  003400  0100               	movlb	0	; () banked
 24473  003402  5167               	movf	??_CDCTxService& (0+255),w,b
 24474  003404  0100               	movlb	0	; () banked
 24475  003406  6F68               	movwf	_CDCTxService$6060& (0+255),b
 24476  003408  6B69               	clrf	(_CDCTxService$6060+1)& (0+255),b
 24477  00340A  D006               	goto	l13369
 24478  00340C                     l13367:
 24479                           
 24480                           ; BSR set to: 0
 24481  00340C  0E00               	movlw	0
 24482  00340E  0100               	movlb	0	; () banked
 24483  003410  6F69               	movwf	(_CDCTxService$6060+1)& (0+255),b
 24484  003412  0E00               	movlw	0
 24485  003414  6F68               	movwf	_CDCTxService$6060& (0+255),b
 24486  003416  D000               	goto	l13369
 24487  003418                     l13369:
 24488                           
 24489                           ; BSR set to: 0
 24490  003418  0100               	movlb	0	; () banked
 24491  00341A  5168               	movf	_CDCTxService$6060& (0+255),w,b
 24492  00341C  0100               	movlb	0	; () banked
 24493  00341E  1169               	iorwf	(_CDCTxService$6060+1)& (0+255),w,b
 24494  003420  B4D8               	btfsc	status,2,c
 24495  003422  D001               	goto	u12721
 24496  003424  D001               	goto	u12720
 24497  003426                     u12721:
 24498  003426  D002               	goto	l13373
 24499  003428                     u12720:
 24500                           
 24501                           ; BSR set to: 0
 24502                           ;usb_device_cdc.c: 793: {
 24503                           ;usb_device_cdc.c: 794: {PIE3bits.USBIE = 1;};
 24504  003428  84A3               	bsf	4003,2,c	;volatile
 24505                           
 24506                           ;usb_device_cdc.c: 795: return;
 24507  00342A  D0B6               	goto	l2081
 24508  00342C                     l13373:
 24509                           
 24510                           ; BSR set to: 0
 24511                           ;usb_device_cdc.c: 796: }
 24512                           ;usb_device_cdc.c: 803: if(cdc_trf_state == 3)
 24513  00342C  0E03               	movlw	3
 24514  00342E  1855               	xorwf	_cdc_trf_state,w,c
 24515  003430  A4D8               	btfss	status,2,c
 24516  003432  D001               	goto	u12731
 24517  003434  D001               	goto	u12730
 24518  003436                     u12731:
 24519  003436  D002               	goto	l2082
 24520  003438                     u12730:
 24521                           
 24522                           ; BSR set to: 0
 24523                           ;usb_device_cdc.c: 804: cdc_trf_state = 0;
 24524  003438  0E00               	movlw	0
 24525  00343A  6E55               	movwf	_cdc_trf_state,c
 24526  00343C                     l2082:
 24527                           
 24528                           ; BSR set to: 0
 24529                           ;usb_device_cdc.c: 809: if(cdc_trf_state == 0)
 24530  00343C  5055               	movf	_cdc_trf_state,w,c
 24531  00343E  A4D8               	btfss	status,2,c
 24532  003440  D001               	goto	u12741
 24533  003442  D001               	goto	u12740
 24534  003444                     u12741:
 24535  003444  D002               	goto	l13379
 24536  003446                     u12740:
 24537                           
 24538                           ; BSR set to: 0
 24539                           ;usb_device_cdc.c: 810: {
 24540                           ;usb_device_cdc.c: 811: {PIE3bits.USBIE = 1;};
 24541  003446  84A3               	bsf	4003,2,c	;volatile
 24542                           
 24543                           ;usb_device_cdc.c: 812: return;
 24544  003448  D0A7               	goto	l2081
 24545  00344A                     l13379:
 24546                           
 24547                           ; BSR set to: 0
 24548                           ;usb_device_cdc.c: 813: }
 24549                           ;usb_device_cdc.c: 818: if(cdc_trf_state == 2)
 24550  00344A  0E02               	movlw	2
 24551  00344C  1855               	xorwf	_cdc_trf_state,w,c
 24552  00344E  A4D8               	btfss	status,2,c
 24553  003450  D001               	goto	u12751
 24554  003452  D001               	goto	u12750
 24555  003454                     u12751:
 24556  003454  D016               	goto	l13385
 24557  003456                     u12750:
 24558                           
 24559                           ; BSR set to: 0
 24560                           ;usb_device_cdc.c: 819: {
 24561                           ;usb_device_cdc.c: 820: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 24562  003456  0E01               	movlw	1
 24563  003458  0100               	movlb	0	; () banked
 24564  00345A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 24565  00345C  0E00               	movlw	0
 24566  00345E  0100               	movlb	0	; () banked
 24567  003460  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 24568  003462  0E00               	movlw	0
 24569  003464  0100               	movlb	0	; () banked
 24570  003466  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 24571  003468  0E00               	movlw	0
 24572  00346A  0100               	movlb	0	; () banked
 24573  00346C  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 24574  00346E  0E02               	movlw	2
 24575  003470  EC7B  F023         	call	_USBTransferOnePacket
 24576  003474  C060  F0BD         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 24577  003478  C061  F0BE         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 24578                           
 24579                           ;usb_device_cdc.c: 822: cdc_trf_state = 3;
 24580  00347C  0E03               	movlw	3
 24581  00347E  6E55               	movwf	_cdc_trf_state,c
 24582                           
 24583                           ;usb_device_cdc.c: 823: }
 24584  003480  D08A               	goto	l13429
 24585  003482                     l13385:
 24586                           
 24587                           ;usb_device_cdc.c: 824: else if(cdc_trf_state == 1)
 24588  003482  0455               	decf	_cdc_trf_state,w,c
 24589  003484  A4D8               	btfss	status,2,c
 24590  003486  D001               	goto	u12761
 24591  003488  D001               	goto	u12760
 24592  00348A                     u12761:
 24593  00348A  D085               	goto	l13429
 24594  00348C                     u12760:
 24595                           
 24596                           ;usb_device_cdc.c: 825: {
 24597                           ;usb_device_cdc.c: 829: if(cdc_tx_len > sizeof(cdc_data_tx))
 24598  00348C  0E40               	movlw	64
 24599  00348E  0100               	movlb	0	; () banked
 24600  003490  65CF               	cpfsgt	_cdc_tx_len& (0+255),b
 24601  003492  D001               	goto	u12771
 24602  003494  D001               	goto	u12770
 24603  003496                     u12771:
 24604  003496  D004               	goto	l2087
 24605  003498                     u12770:
 24606                           
 24607                           ; BSR set to: 0
 24608                           ;usb_device_cdc.c: 830: byte_to_send = sizeof(cdc_data_tx);
 24609  003498  0E40               	movlw	64
 24610  00349A  0100               	movlb	0	; () banked
 24611  00349C  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 24612  00349E  D003               	goto	l13391
 24613  0034A0                     l2087:
 24614                           
 24615                           ; BSR set to: 0
 24616                           ;usb_device_cdc.c: 831: else
 24617                           ;usb_device_cdc.c: 832: byte_to_send = cdc_tx_len;
 24618  0034A0  C0CF  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 24619  0034A4  D000               	goto	l13391
 24620  0034A6                     l13391:
 24621                           
 24622                           ; BSR set to: 0
 24623                           ;usb_device_cdc.c: 837: cdc_tx_len = cdc_tx_len - byte_to_send;
 24624  0034A6  0100               	movlb	0	; () banked
 24625  0034A8  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 24626  0034AA  0800               	sublw	0
 24627  0034AC  0100               	movlb	0	; () banked
 24628  0034AE  25CF               	addwf	_cdc_tx_len& (0+255),w,b
 24629  0034B0  0100               	movlb	0	; () banked
 24630  0034B2  6FCF               	movwf	_cdc_tx_len& (0+255),b
 24631                           
 24632                           ;usb_device_cdc.c: 839: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 24633  0034B4  0E00               	movlw	0
 24634  0034B6  0101               	movlb	1	; () banked
 24635  0034B8  6F4E               	movwf	_pCDCDst& (0+255),b
 24636  0034BA  0E05               	movlw	5
 24637  0034BC  0101               	movlb	1	; () banked
 24638  0034BE  6F4F               	movwf	(_pCDCDst+1)& (0+255),b
 24639                           
 24640                           ; BSR set to: 1
 24641                           ;usb_device_cdc.c: 841: i = byte_to_send;
 24642  0034C0  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 24643                           
 24644                           ; BSR set to: 1
 24645                           ;usb_device_cdc.c: 842: if(cdc_mem_type == 0x00)
 24646  0034C4  0100               	movlb	0	; () banked
 24647  0034C6  51CE               	movf	_cdc_mem_type& (0+255),w,b
 24648  0034C8  A4D8               	btfss	status,2,c
 24649  0034CA  D001               	goto	u12781
 24650  0034CC  D001               	goto	u12780
 24651  0034CE                     u12781:
 24652  0034CE  D032               	goto	l13417
 24653  0034D0                     u12780:
 24654  0034D0  D014               	goto	l13407
 24655                           
 24656                           ; BSR set to: 0
 24657                           ;usb_device_cdc.c: 843: {
 24658                           ;usb_device_cdc.c: 844: while(i)
 24659  0034D2  D013               	goto	l13407
 24660  0034D4                     l13399:
 24661                           
 24662                           ; BSR set to: 0
 24663                           ;usb_device_cdc.c: 845: {
 24664                           ;usb_device_cdc.c: 846: *pCDCDst.bRam = *pCDCSrc.bRom;
 24665  0034D4  C151  FFD9         	movff	_pCDCSrc,fsr2l
 24666  0034D8  C152  FFDA         	movff	_pCDCSrc+1,fsr2h
 24667  0034DC  C14E  FFE1         	movff	_pCDCDst,fsr1l
 24668  0034E0  C14F  FFE2         	movff	_pCDCDst+1,fsr1h
 24669  0034E4  CFDF FFE7          	movff	indf2,indf1
 24670                           
 24671                           ; BSR set to: 0
 24672                           ;usb_device_cdc.c: 847: pCDCDst.bRam++;
 24673  0034E8  0101               	movlb	1	; () banked
 24674  0034EA  4B4E               	infsnz	_pCDCDst& (0+255),f,b
 24675  0034EC  2B4F               	incf	(_pCDCDst+1)& (0+255),f,b
 24676                           
 24677                           ; BSR set to: 1
 24678                           ;usb_device_cdc.c: 848: pCDCSrc.bRom++;
 24679  0034EE  0101               	movlb	1	; () banked
 24680  0034F0  4B51               	infsnz	_pCDCSrc& (0+255),f,b
 24681  0034F2  2B52               	incf	(_pCDCSrc+1)& (0+255),f,b
 24682                           
 24683                           ; BSR set to: 1
 24684                           ;usb_device_cdc.c: 849: i--;
 24685  0034F4  0100               	movlb	0	; () banked
 24686  0034F6  076A               	decf	CDCTxService@i& (0+255),f,b
 24687  0034F8  D000               	goto	l13407
 24688  0034FA                     l13407:
 24689                           
 24690                           ; BSR set to: 0
 24691  0034FA  0100               	movlb	0	; () banked
 24692  0034FC  516A               	movf	CDCTxService@i& (0+255),w,b
 24693  0034FE  0100               	movlb	0	; () banked
 24694  003500  A4D8               	btfss	status,2,c
 24695  003502  D001               	goto	u12791
 24696  003504  D001               	goto	u12790
 24697  003506                     u12791:
 24698  003506  D7E6               	goto	l13399
 24699  003508                     u12790:
 24700  003508  D01E               	goto	l13419
 24701                           
 24702                           ; BSR set to: 0
 24703                           ;usb_device_cdc.c: 850: }
 24704                           ;usb_device_cdc.c: 851: }
 24705  00350A  D01D               	goto	l13419
 24706                           
 24707                           ; BSR set to: 0
 24708                           ;usb_device_cdc.c: 852: else
 24709                           ;usb_device_cdc.c: 853: {
 24710                           ;usb_device_cdc.c: 854: while(i)
 24711  00350C  D013               	goto	l13417
 24712  00350E                     l13409:
 24713                           
 24714                           ; BSR set to: 0
 24715                           ;usb_device_cdc.c: 855: {
 24716                           ;usb_device_cdc.c: 856: *pCDCDst.bRam = *pCDCSrc.bRam;
 24717  00350E  C151  FFD9         	movff	_pCDCSrc,fsr2l
 24718  003512  C152  FFDA         	movff	_pCDCSrc+1,fsr2h
 24719  003516  C14E  FFE1         	movff	_pCDCDst,fsr1l
 24720  00351A  C14F  FFE2         	movff	_pCDCDst+1,fsr1h
 24721  00351E  CFDF FFE7          	movff	indf2,indf1
 24722                           
 24723                           ; BSR set to: 0
 24724                           ;usb_device_cdc.c: 857: pCDCDst.bRam++;
 24725  003522  0101               	movlb	1	; () banked
 24726  003524  4B4E               	infsnz	_pCDCDst& (0+255),f,b
 24727  003526  2B4F               	incf	(_pCDCDst+1)& (0+255),f,b
 24728                           
 24729                           ; BSR set to: 1
 24730                           ;usb_device_cdc.c: 858: pCDCSrc.bRam++;
 24731  003528  0101               	movlb	1	; () banked
 24732  00352A  4B51               	infsnz	_pCDCSrc& (0+255),f,b
 24733  00352C  2B52               	incf	(_pCDCSrc+1)& (0+255),f,b
 24734                           
 24735                           ; BSR set to: 1
 24736                           ;usb_device_cdc.c: 859: i--;
 24737  00352E  0100               	movlb	0	; () banked
 24738  003530  076A               	decf	CDCTxService@i& (0+255),f,b
 24739  003532  D000               	goto	l13417
 24740  003534                     l13417:
 24741                           
 24742                           ; BSR set to: 0
 24743  003534  0100               	movlb	0	; () banked
 24744  003536  516A               	movf	CDCTxService@i& (0+255),w,b
 24745  003538  0100               	movlb	0	; () banked
 24746  00353A  A4D8               	btfss	status,2,c
 24747  00353C  D001               	goto	u12801
 24748  00353E  D001               	goto	u12800
 24749  003540                     u12801:
 24750  003540  D7E6               	goto	l13409
 24751  003542                     u12800:
 24752  003542  D001               	goto	l13419
 24753                           
 24754                           ; BSR set to: 0
 24755  003544  D000               	goto	l13419
 24756  003546                     l13419:
 24757                           
 24758                           ; BSR set to: 0
 24759                           ;usb_device_cdc.c: 860: }
 24760                           ;usb_device_cdc.c: 861: }
 24761                           ;usb_device_cdc.c: 867: if(cdc_tx_len == 0)
 24762  003546  0100               	movlb	0	; () banked
 24763  003548  51CF               	movf	_cdc_tx_len& (0+255),w,b
 24764  00354A  A4D8               	btfss	status,2,c
 24765  00354C  D001               	goto	u12811
 24766  00354E  D001               	goto	u12810
 24767  003550                     u12811:
 24768  003550  D00E               	goto	l13427
 24769  003552                     u12810:
 24770                           
 24771                           ; BSR set to: 0
 24772                           ;usb_device_cdc.c: 868: {
 24773                           ;usb_device_cdc.c: 869: if(byte_to_send == 64)
 24774  003552  0E40               	movlw	64
 24775  003554  0100               	movlb	0	; () banked
 24776  003556  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 24777  003558  A4D8               	btfss	status,2,c
 24778  00355A  D001               	goto	u12821
 24779  00355C  D001               	goto	u12820
 24780  00355E                     u12821:
 24781  00355E  D003               	goto	l13425
 24782  003560                     u12820:
 24783                           
 24784                           ; BSR set to: 0
 24785                           ;usb_device_cdc.c: 870: cdc_trf_state = 2;
 24786  003560  0E02               	movlw	2
 24787  003562  6E55               	movwf	_cdc_trf_state,c
 24788  003564  D004               	goto	l13427
 24789  003566                     l13425:
 24790                           
 24791                           ; BSR set to: 0
 24792                           ;usb_device_cdc.c: 871: else
 24793                           ;usb_device_cdc.c: 872: cdc_trf_state = 3;
 24794  003566  0E03               	movlw	3
 24795  003568  6E55               	movwf	_cdc_trf_state,c
 24796  00356A  D001               	goto	l13427
 24797                           
 24798                           ; BSR set to: 0
 24799  00356C  D000               	goto	l13427
 24800  00356E                     l13427:
 24801                           
 24802                           ; BSR set to: 0
 24803                           ;usb_device_cdc.c: 873: }
 24804                           ;usb_device_cdc.c: 874: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 24805  00356E  0E01               	movlw	1
 24806  003570  0100               	movlb	0	; () banked
 24807  003572  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 24808  003574  0E00               	movlw	0
 24809  003576  0100               	movlb	0	; () banked
 24810  003578  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 24811  00357A  0E05               	movlw	5
 24812  00357C  0100               	movlb	0	; () banked
 24813  00357E  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 24814  003580  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 24815  003584  0E02               	movlw	2
 24816  003586  EC7B  F023         	call	_USBTransferOnePacket
 24817  00358A  C060  F0BD         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 24818  00358E  C061  F0BE         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 24819  003592  D001               	goto	l13429
 24820  003594  D000               	goto	l13429
 24821  003596                     l13429:
 24822                           
 24823                           ;usb_device_cdc.c: 876: }
 24824                           ;usb_device_cdc.c: 878: {PIE3bits.USBIE = 1;};
 24825  003596  84A3               	bsf	4003,2,c	;volatile
 24826  003598                     l2081:
 24827  003598  0012               	return		;funcret
 24828  00359A                     __end_of_CDCTxService:
 24829                           	opt stack 0
 24830                           tblptru	equ	0xFF8
 24831                           tblptrh	equ	0xFF7
 24832                           tblptrl	equ	0xFF6
 24833                           tablat	equ	0xFF5
 24834                           prodh	equ	0xFF4
 24835                           prodl	equ	0xFF3
 24836                           intcon	equ	0xFF2
 24837                           intcon3	equ	0xFF0
 24838                           indf0	equ	0xFEF
 24839                           postinc0	equ	0xFEE
 24840                           fsr0h	equ	0xFEA
 24841                           fsr0l	equ	0xFE9
 24842                           wreg	equ	0xFE8
 24843                           indf1	equ	0xFE7
 24844                           postdec1	equ	0xFE5
 24845                           fsr1h	equ	0xFE2
 24846                           fsr1l	equ	0xFE1
 24847                           indf2	equ	0xFDF
 24848                           postinc2	equ	0xFDE
 24849                           fsr2h	equ	0xFDA
 24850                           fsr2l	equ	0xFD9
 24851                           status	equ	0xFD8
 24852                           
 24853 ;; *************** function _USBTransferOnePacket *****************
 24854 ;; Defined at:
 24855 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 24856 ;; Parameters:    Size  Location     Type
 24857 ;;  ep              1    wreg     unsigned char 
 24858 ;;  dir             1    0[BANK0 ] unsigned char 
 24859 ;;  data            2    1[BANK0 ] PTR unsigned char 
 24860 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 24861 ;;  len             1    3[BANK0 ] unsigned char 
 24862 ;; Auto vars:     Size  Location     Type
 24863 ;;  ep              1    4[BANK0 ] unsigned char 
 24864 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 24865 ;;		 -> BDT(48), NULL(0), 
 24866 ;; Return value:  Size  Location     Type
 24867 ;;                  2    0[BANK0 ] PTR void 
 24868 ;; Registers used:
 24869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24870 ;; Tracked objects:
 24871 ;;		On entry : 0/0
 24872 ;;		On exit  : 0/0
 24873 ;;		Unchanged: 0/0
 24874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24875 ;;      Params:         0       4       0       0       0       0       0       0       0
 24876 ;;      Locals:         0       3       0       0       0       0       0       0       0
 24877 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24878 ;;      Totals:         0       7       0       0       0       0       0       0       0
 24879 ;;Total ram usage:        7 bytes
 24880 ;; Hardware stack levels used:    1
 24881 ;; Hardware stack levels required when called:   11
 24882 ;; This function calls:
 24883 ;;		Nothing
 24884 ;; This function is called by:
 24885 ;;		_getsUSBUSART
 24886 ;;		_CDCTxService
 24887 ;;		_USBCDCEventHandler
 24888 ;; This function uses a non-reentrant model
 24889 ;;
 24890                           
 24891                           	psect	text85
 24892  0046F6                     __ptext85:
 24893                           	opt stack 0
 24894  0046F6                     _USBTransferOnePacket:
 24895                           	opt stack 16
 24896                           
 24897                           ;incstack = 0
 24898                           ;USBTransferOnePacket@ep stored from wreg
 24899  0046F6  0100               	movlb	0	; () banked
 24900  0046F8  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 24901                           
 24902                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 24903                           ;usb_device.c: 762: if(dir != 0)
 24904  0046FA  0100               	movlb	0	; () banked
 24905  0046FC  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 24906  0046FE  0100               	movlb	0	; () banked
 24907  004700  B4D8               	btfsc	status,2,c
 24908  004702  D001               	goto	u11101
 24909  004704  D001               	goto	u11100
 24910  004706                     u11101:
 24911  004706  D00E               	goto	l12223
 24912  004708                     u11100:
 24913                           
 24914                           ; BSR set to: 0
 24915                           ;usb_device.c: 763: {
 24916                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 24917  004708  0100               	movlb	0	; () banked
 24918  00470A  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 24919  00470C  0D02               	mullw	2
 24920  00470E  0E3C               	movlw	low _pBDTEntryIn
 24921  004710  24F3               	addwf	prodl,w,c
 24922  004712  6ED9               	movwf	fsr2l,c
 24923  004714  0E00               	movlw	high _pBDTEntryIn
 24924  004716  20F4               	addwfc	prodh,w,c
 24925  004718  6EDA               	movwf	fsr2h,c
 24926  00471A  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 24927  00471E  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 24928                           
 24929                           ;usb_device.c: 766: }
 24930  004722  D00E               	goto	l12225
 24931  004724                     l12223:
 24932                           
 24933                           ; BSR set to: 0
 24934                           ;usb_device.c: 767: else
 24935                           ;usb_device.c: 768: {
 24936                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 24937  004724  0100               	movlb	0	; () banked
 24938  004726  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 24939  004728  0D02               	mullw	2
 24940  00472A  0E40               	movlw	low _pBDTEntryOut
 24941  00472C  24F3               	addwf	prodl,w,c
 24942  00472E  6ED9               	movwf	fsr2l,c
 24943  004730  0E01               	movlw	high _pBDTEntryOut
 24944  004732  20F4               	addwfc	prodh,w,c
 24945  004734  6EDA               	movwf	fsr2h,c
 24946  004736  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 24947  00473A  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 24948  00473E  D000               	goto	l12225
 24949  004740                     l12225:
 24950                           
 24951                           ; BSR set to: 0
 24952                           ;usb_device.c: 771: }
 24953                           ;usb_device.c: 775: if(handle == 0)
 24954  004740  0100               	movlb	0	; () banked
 24955  004742  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 24956  004744  0100               	movlb	0	; () banked
 24957  004746  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 24958  004748  A4D8               	btfss	status,2,c
 24959  00474A  D001               	goto	u11111
 24960  00474C  D001               	goto	u11110
 24961  00474E                     u11111:
 24962  00474E  D008               	goto	l12231
 24963  004750                     u11110:
 24964                           
 24965                           ; BSR set to: 0
 24966                           ;usb_device.c: 776: {
 24967                           ;usb_device.c: 777: return 0;
 24968  004750  0E00               	movlw	0
 24969  004752  0100               	movlb	0	; () banked
 24970  004754  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 24971  004756  0E00               	movlw	0
 24972  004758  0100               	movlb	0	; () banked
 24973  00475A  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 24974  00475C  D04B               	goto	l1764
 24975                           
 24976                           ; BSR set to: 0
 24977  00475E  D04A               	goto	l1764
 24978  004760                     l12231:
 24979                           
 24980                           ; BSR set to: 0
 24981                           ;usb_device.c: 778: }
 24982                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 24983  004760  0100               	movlb	0	; () banked
 24984  004762  EE20 F002          	lfsr	2,2
 24985  004766  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 24986  004768  26D9               	addwf	fsr2l,f,c
 24987  00476A  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 24988  00476C  22DA               	addwfc	fsr2h,f,c
 24989  00476E  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 24990  004772  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 24991                           
 24992                           ;usb_device.c: 781: handle->CNT = len;
 24993  004776  0100               	movlb	0	; () banked
 24994  004778  EE20 F001          	lfsr	2,1
 24995  00477C  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 24996  00477E  26D9               	addwf	fsr2l,f,c
 24997  004780  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 24998  004782  22DA               	addwfc	fsr2h,f,c
 24999  004784  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 25000                           
 25001                           ; BSR set to: 0
 25002                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 25003  004788  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 25004  00478C  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 25005  004790  0E40               	movlw	64
 25006  004792  16DF               	andwf	indf2,f,c
 25007                           
 25008                           ; BSR set to: 0
 25009                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 25010  004794  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 25011  004798  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 25012  00479C  0E00               	movlw	0
 25013  00479E  86DB               	bsf	plusw2,3,c
 25014                           
 25015                           ; BSR set to: 0
 25016                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 25017  0047A0  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 25018  0047A4  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 25019  0047A8  0E00               	movlw	0
 25020  0047AA  8EDB               	bsf	plusw2,7,c
 25021                           
 25022                           ; BSR set to: 0
 25023                           ;usb_device.c: 787: if(dir != 0)
 25024  0047AC  0100               	movlb	0	; () banked
 25025  0047AE  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 25026  0047B0  0100               	movlb	0	; () banked
 25027  0047B2  B4D8               	btfsc	status,2,c
 25028  0047B4  D001               	goto	u11121
 25029  0047B6  D001               	goto	u11120
 25030  0047B8                     u11121:
 25031  0047B8  D00C               	goto	l12243
 25032  0047BA                     u11120:
 25033                           
 25034                           ; BSR set to: 0
 25035                           ;usb_device.c: 788: {
 25036                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 25037  0047BA  0100               	movlb	0	; () banked
 25038  0047BC  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 25039  0047BE  0D02               	mullw	2
 25040  0047C0  0E3C               	movlw	low _pBDTEntryIn
 25041  0047C2  24F3               	addwf	prodl,w,c
 25042  0047C4  6ED9               	movwf	fsr2l,c
 25043  0047C6  0E00               	movlw	high _pBDTEntryIn
 25044  0047C8  20F4               	addwfc	prodh,w,c
 25045  0047CA  6EDA               	movwf	fsr2h,c
 25046  0047CC  0E04               	movlw	4
 25047  0047CE  1ADF               	xorwf	indf2,f,c
 25048                           
 25049                           ;usb_device.c: 791: }
 25050  0047D0  D00C               	goto	l12245
 25051  0047D2                     l12243:
 25052                           
 25053                           ; BSR set to: 0
 25054                           ;usb_device.c: 792: else
 25055                           ;usb_device.c: 793: {
 25056                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 25057  0047D2  0100               	movlb	0	; () banked
 25058  0047D4  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 25059  0047D6  0D02               	mullw	2
 25060  0047D8  0E40               	movlw	low _pBDTEntryOut
 25061  0047DA  24F3               	addwf	prodl,w,c
 25062  0047DC  6ED9               	movwf	fsr2l,c
 25063  0047DE  0E01               	movlw	high _pBDTEntryOut
 25064  0047E0  20F4               	addwfc	prodh,w,c
 25065  0047E2  6EDA               	movwf	fsr2h,c
 25066  0047E4  0E04               	movlw	4
 25067  0047E6  1ADF               	xorwf	indf2,f,c
 25068  0047E8  D000               	goto	l12245
 25069  0047EA                     l12245:
 25070                           
 25071                           ; BSR set to: 0
 25072                           ;usb_device.c: 796: }
 25073                           ;usb_device.c: 797: return (void*)handle;
 25074  0047EA  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 25075  0047EE  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 25076  0047F2  D000               	goto	l1764
 25077  0047F4                     l1764:
 25078                           
 25079                           ; BSR set to: 0
 25080  0047F4  0012               	return		;funcret
 25081  0047F6                     __end_of_USBTransferOnePacket:
 25082                           	opt stack 0
 25083                           tblptru	equ	0xFF8
 25084                           tblptrh	equ	0xFF7
 25085                           tblptrl	equ	0xFF6
 25086                           tablat	equ	0xFF5
 25087                           prodh	equ	0xFF4
 25088                           prodl	equ	0xFF3
 25089                           intcon	equ	0xFF2
 25090                           intcon3	equ	0xFF0
 25091                           indf0	equ	0xFEF
 25092                           postinc0	equ	0xFEE
 25093                           fsr0h	equ	0xFEA
 25094                           fsr0l	equ	0xFE9
 25095                           wreg	equ	0xFE8
 25096                           indf1	equ	0xFE7
 25097                           postdec1	equ	0xFE5
 25098                           fsr1h	equ	0xFE2
 25099                           fsr1l	equ	0xFE1
 25100                           indf2	equ	0xFDF
 25101                           postinc2	equ	0xFDE
 25102                           postdec2	equ	0xFDD
 25103                           plusw2	equ	0xFDB
 25104                           fsr2h	equ	0xFDA
 25105                           fsr2l	equ	0xFD9
 25106                           status	equ	0xFD8
 25107                           
 25108 ;; *************** function _USBDeviceInit *****************
 25109 ;; Defined at:
 25110 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 25111 ;; Parameters:    Size  Location     Type
 25112 ;;		None
 25113 ;; Auto vars:     Size  Location     Type
 25114 ;;  i               1    8[BANK0 ] unsigned char 
 25115 ;; Return value:  Size  Location     Type
 25116 ;;                  1    wreg      void 
 25117 ;; Registers used:
 25118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25119 ;; Tracked objects:
 25120 ;;		On entry : 0/0
 25121 ;;		On exit  : 0/0
 25122 ;;		Unchanged: 0/0
 25123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25124 ;;      Params:         0       0       0       0       0       0       0       0       0
 25125 ;;      Locals:         0       1       0       0       0       0       0       0       0
 25126 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25127 ;;      Totals:         0       1       0       0       0       0       0       0       0
 25128 ;;Total ram usage:        1 bytes
 25129 ;; Hardware stack levels used:    1
 25130 ;; Hardware stack levels required when called:   12
 25131 ;; This function calls:
 25132 ;;		_memset
 25133 ;; This function is called by:
 25134 ;;		_main
 25135 ;; This function uses a non-reentrant model
 25136 ;;
 25137                           
 25138                           	psect	text86
 25139  00371E                     __ptext86:
 25140                           	opt stack 0
 25141  00371E                     _USBDeviceInit:
 25142                           	opt stack 18
 25143                           
 25144                           ;usb_device.c: 239: uint8_t i;
 25145                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 25146                           
 25147                           ; BSR set to: 0
 25148                           ;incstack = 0
 25149  00371E  94A3               	bcf	4003,2,c	;volatile
 25150                           
 25151                           ;usb_device.c: 244: {UEIR = 0;};
 25152  003720  0E00               	movlw	0
 25153  003722  6E67               	movwf	3943,c	;volatile
 25154                           
 25155                           ;usb_device.c: 247: {UIR = 0;};
 25156  003724  0E00               	movlw	0
 25157  003726  6E65               	movwf	3941,c	;volatile
 25158                           
 25159                           ;usb_device.c: 250: UEP0 = 0;
 25160  003728  0E00               	movlw	0
 25161  00372A  6E6A               	movwf	3946,c	;volatile
 25162                           
 25163                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 25164  00372C  0E6B               	movlw	107
 25165  00372E  0100               	movlb	0	; () banked
 25166  003730  6F60               	movwf	memset@p1& (0+255),b
 25167  003732  0E0F               	movlw	15
 25168  003734  0100               	movlb	0	; () banked
 25169  003736  6F61               	movwf	(memset@p1+1)& (0+255),b
 25170  003738  0E00               	movlw	0
 25171  00373A  0100               	movlb	0	; () banked
 25172  00373C  6F63               	movwf	(memset@c+1)& (0+255),b
 25173  00373E  0E00               	movlw	0
 25174  003740  6F62               	movwf	memset@c& (0+255),b
 25175  003742  0E00               	movlw	0
 25176  003744  0100               	movlb	0	; () banked
 25177  003746  6F65               	movwf	(memset@n+1)& (0+255),b
 25178  003748  0E02               	movlw	2
 25179  00374A  6F64               	movwf	memset@n& (0+255),b
 25180  00374C  EC2B  F037         	call	_memset	;wreg free
 25181                           
 25182                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 25183  003750  0E16               	movlw	22
 25184  003752  6E62               	movwf	3938,c	;volatile
 25185  003754  0E9F               	movlw	159
 25186  003756  6E66               	movwf	3942,c	;volatile
 25187  003758  0E7B               	movlw	123
 25188  00375A  6E64               	movwf	3940,c	;volatile
 25189                           
 25190                           ;usb_device.c: 257: ;
 25191                           ;usb_device.c: 260: ;
 25192                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 25193  00375C  0E00               	movlw	0
 25194  00375E  0100               	movlb	0	; () banked
 25195  003760  6F68               	movwf	USBDeviceInit@i& (0+255),b
 25196                           
 25197                           ; BSR set to: 0
 25198  003762  0E0B               	movlw	11
 25199  003764  0100               	movlb	0	; () banked
 25200  003766  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 25201  003768  D001               	goto	u14041
 25202  00376A  D001               	goto	u14040
 25203  00376C                     u14041:
 25204  00376C  D002               	goto	l14557
 25205  00376E                     u14040:
 25206  00376E  D016               	goto	l1722
 25207                           
 25208                           ; BSR set to: 0
 25209  003770  D015               	goto	l1722
 25210  003772                     l14557:
 25211                           
 25212                           ; BSR set to: 0
 25213                           ;usb_device.c: 264: {
 25214                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 25215  003772  0100               	movlb	0	; () banked
 25216  003774  5168               	movf	USBDeviceInit@i& (0+255),w,b
 25217  003776  0D04               	mullw	4
 25218  003778  0E00               	movlw	0
 25219  00377A  24F3               	addwf	prodl,w,c
 25220  00377C  6ED9               	movwf	fsr2l,c
 25221  00377E  0E04               	movlw	4
 25222  003780  20F4               	addwfc	prodh,w,c
 25223  003782  6EDA               	movwf	fsr2h,c
 25224  003784  6ADE               	clrf	postinc2,c
 25225  003786  6ADE               	clrf	postinc2,c
 25226  003788  6ADE               	clrf	postinc2,c
 25227  00378A  6ADD               	clrf	postdec2,c
 25228                           
 25229                           ; BSR set to: 0
 25230  00378C  0100               	movlb	0	; () banked
 25231  00378E  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 25232                           
 25233                           ; BSR set to: 0
 25234  003790  0E0B               	movlw	11
 25235  003792  0100               	movlb	0	; () banked
 25236  003794  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 25237  003796  D001               	goto	u14051
 25238  003798  D001               	goto	u14050
 25239  00379A                     u14051:
 25240  00379A  D7EB               	goto	l14557
 25241  00379C                     u14050:
 25242  00379C                     l1722:
 25243                           
 25244                           ; BSR set to: 0
 25245                           ;usb_device.c: 266: }
 25246                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 25247  00379C  8C60               	bsf	3936,6,c	;volatile
 25248                           
 25249                           ; BSR set to: 0
 25250                           ;usb_device.c: 272: UADDR = 0x00;
 25251  00379E  0E00               	movlw	0
 25252  0037A0  6E63               	movwf	3939,c	;volatile
 25253                           
 25254                           ; BSR set to: 0
 25255                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 25256  0037A2  9860               	bcf	3936,4,c	;volatile
 25257                           
 25258                           ; BSR set to: 0
 25259                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 25260  0037A4  9C60               	bcf	3936,6,c	;volatile
 25261                           
 25262                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 25263  0037A6  D00A               	goto	l14577
 25264  0037A8                     l14569:
 25265                           
 25266                           ;usb_device.c: 282: {
 25267                           ;usb_device.c: 283: (UIR &= 0xF7);
 25268  0037A8  9665               	bcf	3941,3,c	;volatile
 25269                           
 25270                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 25271  0037AA  0E00               	movlw	0
 25272  0037AC  6E39               	movwf	_inPipes+3,c	;volatile
 25273                           
 25274                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 25275  0037AE  0E00               	movlw	0
 25276  0037B0  6E31               	movwf	_outPipes+3,c	;volatile
 25277                           
 25278                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 25279  0037B2  0E00               	movlw	0
 25280  0037B4  6E33               	movwf	_outPipes+5,c	;volatile
 25281  0037B6  0E00               	movlw	0
 25282  0037B8  6E32               	movwf	_outPipes+4,c	;volatile
 25283  0037BA  D000               	goto	l14577
 25284  0037BC                     l14577:
 25285  0037BC  B665               	btfsc	3941,3,c	;volatile
 25286  0037BE  D001               	goto	u14061
 25287  0037C0  D001               	goto	u14060
 25288  0037C2                     u14061:
 25289  0037C2  D7F2               	goto	l14569
 25290  0037C4                     u14060:
 25291  0037C4  D000               	goto	l14579
 25292  0037C6                     l14579:
 25293                           
 25294                           ;usb_device.c: 288: }
 25295                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 25296  0037C6  0E01               	movlw	1
 25297  0037C8  0100               	movlb	0	; () banked
 25298  0037CA  6FD4               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 25299                           
 25300                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 25301  0037CC  0E01               	movlw	1
 25302  0037CE  0100               	movlb	0	; () banked
 25303  0037D0  6FD3               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 25304                           
 25305                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 25306  0037D2  0E00               	movlw	0
 25307  0037D4  0100               	movlb	0	; () banked
 25308  0037D6  6FD2               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 25309                           
 25310                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 25311  0037D8  0E00               	movlw	0
 25312  0037DA  0100               	movlb	0	; () banked
 25313  0037DC  6FD1               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 25314                           
 25315                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 25316  0037DE  0E00               	movlw	0
 25317  0037E0  0100               	movlb	0	; () banked
 25318  0037E2  6FD6               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25319                           
 25320                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 25321  0037E4  0E00               	movlw	0
 25322  0037E6  0100               	movlb	0	; () banked
 25323  0037E8  6F68               	movwf	USBDeviceInit@i& (0+255),b
 25324                           
 25325                           ; BSR set to: 0
 25326  0037EA  0E02               	movlw	2
 25327  0037EC  0100               	movlb	0	; () banked
 25328  0037EE  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 25329  0037F0  D001               	goto	u14071
 25330  0037F2  D001               	goto	u14070
 25331  0037F4                     u14071:
 25332  0037F4  D002               	goto	l14585
 25333  0037F6                     u14070:
 25334  0037F6  D03A               	goto	l14591
 25335                           
 25336                           ; BSR set to: 0
 25337  0037F8  D039               	goto	l14591
 25338  0037FA                     l14585:
 25339                           
 25340                           ; BSR set to: 0
 25341                           ;usb_device.c: 302: {
 25342                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 25343  0037FA  0100               	movlb	0	; () banked
 25344  0037FC  5168               	movf	USBDeviceInit@i& (0+255),w,b
 25345  0037FE  0D02               	mullw	2
 25346  003800  0E3C               	movlw	low _pBDTEntryIn
 25347  003802  24F3               	addwf	prodl,w,c
 25348  003804  6ED9               	movwf	fsr2l,c
 25349  003806  0E00               	movlw	high _pBDTEntryIn
 25350  003808  20F4               	addwfc	prodh,w,c
 25351  00380A  6EDA               	movwf	fsr2h,c
 25352  00380C  0E00               	movlw	0
 25353  00380E  6EDE               	movwf	postinc2,c
 25354  003810  0E00               	movlw	0
 25355  003812  6EDD               	movwf	postdec2,c
 25356                           
 25357                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 25358  003814  0100               	movlb	0	; () banked
 25359  003816  5168               	movf	USBDeviceInit@i& (0+255),w,b
 25360  003818  0D02               	mullw	2
 25361  00381A  0E40               	movlw	low _pBDTEntryOut
 25362  00381C  24F3               	addwf	prodl,w,c
 25363  00381E  6ED9               	movwf	fsr2l,c
 25364  003820  0E01               	movlw	high _pBDTEntryOut
 25365  003822  20F4               	addwfc	prodh,w,c
 25366  003824  6EDA               	movwf	fsr2h,c
 25367  003826  0E00               	movlw	0
 25368  003828  6EDE               	movwf	postinc2,c
 25369  00382A  0E00               	movlw	0
 25370  00382C  6EDD               	movwf	postdec2,c
 25371                           
 25372                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 25373  00382E  0100               	movlb	0	; () banked
 25374  003830  5168               	movf	USBDeviceInit@i& (0+255),w,b
 25375  003832  0D01               	mullw	1
 25376  003834  0EBA               	movlw	low _ep_data_in
 25377  003836  24F3               	addwf	prodl,w,c
 25378  003838  6ED9               	movwf	fsr2l,c
 25379  00383A  0E00               	movlw	high _ep_data_in
 25380  00383C  20F4               	addwfc	prodh,w,c
 25381  00383E  6EDA               	movwf	fsr2h,c
 25382  003840  0E00               	movlw	0
 25383  003842  6EDF               	movwf	indf2,c
 25384                           
 25385                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 25386  003844  0100               	movlb	0	; () banked
 25387  003846  5168               	movf	USBDeviceInit@i& (0+255),w,b
 25388  003848  0D01               	mullw	1
 25389  00384A  0EB7               	movlw	low _ep_data_out
 25390  00384C  24F3               	addwf	prodl,w,c
 25391  00384E  6ED9               	movwf	fsr2l,c
 25392  003850  0E00               	movlw	high _ep_data_out
 25393  003852  20F4               	addwfc	prodh,w,c
 25394  003854  6EDA               	movwf	fsr2h,c
 25395  003856  0E00               	movlw	0
 25396  003858  6EDF               	movwf	indf2,c
 25397                           
 25398                           ; BSR set to: 0
 25399  00385A  0100               	movlb	0	; () banked
 25400  00385C  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 25401                           
 25402                           ; BSR set to: 0
 25403  00385E  0E02               	movlw	2
 25404  003860  0100               	movlb	0	; () banked
 25405  003862  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 25406  003864  D001               	goto	u14081
 25407  003866  D001               	goto	u14080
 25408  003868                     u14081:
 25409  003868  D7C8               	goto	l14585
 25410  00386A                     u14080:
 25411  00386A  D000               	goto	l14591
 25412  00386C                     l14591:
 25413                           
 25414                           ; BSR set to: 0
 25415                           ;usb_device.c: 307: }
 25416                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 25417  00386C  0E08               	movlw	8
 25418  00386E  6E3C               	movwf	_pBDTEntryIn,c
 25419  003870  0E04               	movlw	4
 25420  003872  6E3D               	movwf	_pBDTEntryIn+1,c
 25421                           
 25422                           ; BSR set to: 0
 25423                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 25424  003874  0E16               	movlw	22
 25425  003876  6E6A               	movwf	3946,c	;volatile
 25426                           
 25427                           ; BSR set to: 0
 25428                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 25429  003878  0E04               	movlw	4
 25430  00387A  0104               	movlb	4	; () banked
 25431  00387C  6F03               	movwf	3,b	;volatile
 25432  00387E  0E30               	movlw	48
 25433  003880  6F02               	movwf	2,b	;volatile
 25434                           
 25435                           ; BSR set to: 4
 25436                           ;usb_device.c: 315: BDT[0].CNT = 8;
 25437  003882  0E08               	movlw	8
 25438  003884  0104               	movlb	4	; () banked
 25439  003886  6F01               	movwf	1,b	;volatile
 25440                           
 25441                           ; BSR set to: 4
 25442                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 25443  003888  0E04               	movlw	4
 25444  00388A  0104               	movlb	4	; () banked
 25445  00388C  6F00               	movwf	0,b	;volatile
 25446                           
 25447                           ; BSR set to: 4
 25448                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 25449  00388E  0104               	movlb	4	; () banked
 25450  003890  8F00               	bsf	0,7,b	;volatile
 25451                           
 25452                           ; BSR set to: 4
 25453                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 25454  003892  0E00               	movlw	0
 25455  003894  6E59               	movwf	_USBActiveConfiguration,c	;volatile
 25456                           
 25457                           ; BSR set to: 4
 25458                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 25459  003896  0E00               	movlw	0
 25460  003898  0100               	movlb	0	; () banked
 25461  00389A  6FDE               	movwf	_USBDeviceState& (0+255),b	;volatile
 25462                           
 25463                           ; BSR set to: 0
 25464  00389C  0012               	return		;funcret
 25465  00389E                     __end_of_USBDeviceInit:
 25466                           	opt stack 0
 25467                           tblptru	equ	0xFF8
 25468                           tblptrh	equ	0xFF7
 25469                           tblptrl	equ	0xFF6
 25470                           tablat	equ	0xFF5
 25471                           prodh	equ	0xFF4
 25472                           prodl	equ	0xFF3
 25473                           intcon	equ	0xFF2
 25474                           intcon3	equ	0xFF0
 25475                           indf0	equ	0xFEF
 25476                           postinc0	equ	0xFEE
 25477                           fsr0h	equ	0xFEA
 25478                           fsr0l	equ	0xFE9
 25479                           wreg	equ	0xFE8
 25480                           indf1	equ	0xFE7
 25481                           postdec1	equ	0xFE5
 25482                           fsr1h	equ	0xFE2
 25483                           fsr1l	equ	0xFE1
 25484                           indf2	equ	0xFDF
 25485                           postinc2	equ	0xFDE
 25486                           postdec2	equ	0xFDD
 25487                           plusw2	equ	0xFDB
 25488                           fsr2h	equ	0xFDA
 25489                           fsr2l	equ	0xFD9
 25490                           status	equ	0xFD8
 25491                           
 25492 ;; *************** function _memset *****************
 25493 ;; Defined at:
 25494 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memset.c"
 25495 ;; Parameters:    Size  Location     Type
 25496 ;;  p1              2    0[BANK0 ] PTR void 
 25497 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 25498 ;;  c               2    2[BANK0 ] int 
 25499 ;;  n               2    4[BANK0 ] unsigned int 
 25500 ;; Auto vars:     Size  Location     Type
 25501 ;;  p               2    6[BANK0 ] PTR unsigned char 
 25502 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 25503 ;; Return value:  Size  Location     Type
 25504 ;;                  2    0[BANK0 ] PTR void 
 25505 ;; Registers used:
 25506 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25507 ;; Tracked objects:
 25508 ;;		On entry : 0/0
 25509 ;;		On exit  : 0/0
 25510 ;;		Unchanged: 0/0
 25511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25512 ;;      Params:         0       6       0       0       0       0       0       0       0
 25513 ;;      Locals:         0       2       0       0       0       0       0       0       0
 25514 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25515 ;;      Totals:         0       8       0       0       0       0       0       0       0
 25516 ;;Total ram usage:        8 bytes
 25517 ;; Hardware stack levels used:    1
 25518 ;; Hardware stack levels required when called:   11
 25519 ;; This function calls:
 25520 ;;		Nothing
 25521 ;; This function is called by:
 25522 ;;		_USBDeviceInit
 25523 ;; This function uses a non-reentrant model
 25524 ;;
 25525                           
 25526                           	psect	text87
 25527  006E56                     __ptext87:
 25528                           	opt stack 0
 25529  006E56                     _memset:
 25530                           	opt stack 18
 25531                           
 25532                           ; BSR set to: 0
 25533                           ;incstack = 0
 25534  006E56  C060  F066         	movff	memset@p1,memset@p
 25535  006E5A  C061  F067         	movff	memset@p1+1,memset@p+1
 25536  006E5E  D00A               	goto	l14523
 25537  006E60                     l14519:
 25538  006E60  C066  FFD9         	movff	memset@p,fsr2l
 25539  006E64  C067  FFDA         	movff	memset@p+1,fsr2h
 25540  006E68  C062  FFDF         	movff	memset@c,indf2
 25541  006E6C  0100               	movlb	0	; () banked
 25542  006E6E  4B66               	infsnz	memset@p& (0+255),f,b
 25543  006E70  2B67               	incf	(memset@p+1)& (0+255),f,b
 25544  006E72  D000               	goto	l14523
 25545  006E74                     l14523:
 25546  006E74  0100               	movlb	0	; () banked
 25547  006E76  0764               	decf	memset@n& (0+255),f,b
 25548  006E78  A0D8               	btfss	status,0,c
 25549  006E7A  0765               	decf	(memset@n+1)& (0+255),f,b
 25550  006E7C  0100               	movlb	0	; () banked
 25551  006E7E  2964               	incf	memset@n& (0+255),w,b
 25552  006E80  E105               	bnz	u14031
 25553  006E82  0100               	movlb	0	; () banked
 25554  006E84  2965               	incf	(memset@n+1)& (0+255),w,b
 25555  006E86  A4D8               	btfss	status,2,c
 25556  006E88  D001               	goto	u14031
 25557  006E8A  D001               	goto	u14030
 25558  006E8C                     u14031:
 25559  006E8C  D7E9               	goto	l14519
 25560  006E8E                     u14030:
 25561  006E8E  D000               	goto	l2613
 25562  006E90                     l2613:
 25563                           
 25564                           ; BSR set to: 0
 25565  006E90  0012               	return		;funcret
 25566  006E92                     __end_of_memset:
 25567                           	opt stack 0
 25568                           tblptru	equ	0xFF8
 25569                           tblptrh	equ	0xFF7
 25570                           tblptrl	equ	0xFF6
 25571                           tablat	equ	0xFF5
 25572                           prodh	equ	0xFF4
 25573                           prodl	equ	0xFF3
 25574                           intcon	equ	0xFF2
 25575                           intcon3	equ	0xFF0
 25576                           indf0	equ	0xFEF
 25577                           postinc0	equ	0xFEE
 25578                           fsr0h	equ	0xFEA
 25579                           fsr0l	equ	0xFE9
 25580                           wreg	equ	0xFE8
 25581                           indf1	equ	0xFE7
 25582                           postdec1	equ	0xFE5
 25583                           fsr1h	equ	0xFE2
 25584                           fsr1l	equ	0xFE1
 25585                           indf2	equ	0xFDF
 25586                           postinc2	equ	0xFDE
 25587                           postdec2	equ	0xFDD
 25588                           plusw2	equ	0xFDB
 25589                           fsr2h	equ	0xFDA
 25590                           fsr2l	equ	0xFD9
 25591                           status	equ	0xFD8
 25592                           
 25593 ;; *************** function _USBDeviceAttach *****************
 25594 ;; Defined at:
 25595 ;;		line 1046 in file "../Includes/Usb/Framework/usb_device.c"
 25596 ;; Parameters:    Size  Location     Type
 25597 ;;		None
 25598 ;; Auto vars:     Size  Location     Type
 25599 ;;		None
 25600 ;; Return value:  Size  Location     Type
 25601 ;;                  1    wreg      void 
 25602 ;; Registers used:
 25603 ;;		wreg, status,2
 25604 ;; Tracked objects:
 25605 ;;		On entry : 0/0
 25606 ;;		On exit  : 0/0
 25607 ;;		Unchanged: 0/0
 25608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25609 ;;      Params:         0       0       0       0       0       0       0       0       0
 25610 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25611 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25612 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25613 ;;Total ram usage:        0 bytes
 25614 ;; Hardware stack levels used:    1
 25615 ;; Hardware stack levels required when called:   11
 25616 ;; This function calls:
 25617 ;;		Nothing
 25618 ;; This function is called by:
 25619 ;;		_main
 25620 ;; This function uses a non-reentrant model
 25621 ;;
 25622                           
 25623                           	psect	text88
 25624  006C5A                     __ptext88:
 25625                           	opt stack 0
 25626  006C5A                     _USBDeviceAttach:
 25627                           	opt stack 19
 25628                           
 25629                           ;usb_device.c: 1050: {
 25630                           ;usb_device.c: 1051: if(1 == 1)
 25631                           
 25632                           ; BSR set to: 0
 25633                           ;incstack = 0
 25634  006C5A  0100               	movlb	0	; () banked
 25635  006C5C  51DE               	movf	_USBDeviceState& (0+255),w,b	;volatile
 25636  006C5E  A4D8               	btfss	status,2,c
 25637  006C60  D001               	goto	u14091
 25638  006C62  D001               	goto	u14090
 25639  006C64                     u14091:
 25640  006C64  D01A               	goto	l1786
 25641  006C66                     u14090:
 25642                           
 25643                           ; BSR set to: 0
 25644                           ;usb_device.c: 1052: {
 25645                           ;usb_device.c: 1054: UCON = 0;
 25646  006C66  0E00               	movlw	0
 25647  006C68  6E60               	movwf	3936,c	;volatile
 25648                           
 25649                           ;usb_device.c: 1057: UIE = 0;
 25650  006C6A  0E00               	movlw	0
 25651  006C6C  6E64               	movwf	3940,c	;volatile
 25652                           
 25653                           ;usb_device.c: 1061: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 25654  006C6E  0E16               	movlw	22
 25655  006C70  6E62               	movwf	3938,c	;volatile
 25656  006C72  0E9F               	movlw	159
 25657  006C74  6E66               	movwf	3942,c	;volatile
 25658  006C76  0E7B               	movlw	123
 25659  006C78  6E64               	movwf	3940,c	;volatile
 25660                           
 25661                           ; BSR set to: 0
 25662                           ;usb_device.c: 1063: {RCONbits.IPEN = 1;IPR3bits.USBIP = 1;PIE3bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 25663  006C7A  8ED0               	bsf	4048,7,c	;volatile
 25664                           
 25665                           ; BSR set to: 0
 25666  006C7C  84A5               	bsf	4005,2,c	;volatile
 25667                           
 25668                           ; BSR set to: 0
 25669  006C7E  84A3               	bsf	4003,2,c	;volatile
 25670                           
 25671                           ; BSR set to: 0
 25672  006C80  8EF2               	bsf	intcon,7,c	;volatile
 25673                           
 25674                           ;usb_device.c: 1066: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 25675  006C82  D001               	goto	l1783
 25676  006C84                     l1784:
 25677  006C84  8660               	bsf	3936,3,c	;volatile
 25678  006C86                     l1783:
 25679  006C86  A660               	btfss	3936,3,c	;volatile
 25680  006C88  D001               	goto	u14101
 25681  006C8A  D001               	goto	u14100
 25682  006C8C                     u14101:
 25683  006C8C  D7FB               	goto	l1784
 25684  006C8E                     u14100:
 25685  006C8E  D000               	goto	l14619
 25686  006C90                     l14619:
 25687                           
 25688                           ;usb_device.c: 1069: USBDeviceState = ATTACHED_STATE;
 25689  006C90  0E01               	movlw	1
 25690  006C92  0100               	movlb	0	; () banked
 25691  006C94  6FDE               	movwf	_USBDeviceState& (0+255),b	;volatile
 25692  006C96  D001               	goto	l1786
 25693                           
 25694                           ; BSR set to: 0
 25695  006C98  D000               	goto	l1786
 25696  006C9A                     l1786:
 25697                           
 25698                           ; BSR set to: 0
 25699  006C9A  0012               	return		;funcret
 25700  006C9C                     __end_of_USBDeviceAttach:
 25701                           	opt stack 0
 25702                           tblptru	equ	0xFF8
 25703                           tblptrh	equ	0xFF7
 25704                           tblptrl	equ	0xFF6
 25705                           tablat	equ	0xFF5
 25706                           prodh	equ	0xFF4
 25707                           prodl	equ	0xFF3
 25708                           intcon	equ	0xFF2
 25709                           intcon3	equ	0xFF0
 25710                           indf0	equ	0xFEF
 25711                           postinc0	equ	0xFEE
 25712                           fsr0h	equ	0xFEA
 25713                           fsr0l	equ	0xFE9
 25714                           wreg	equ	0xFE8
 25715                           indf1	equ	0xFE7
 25716                           postdec1	equ	0xFE5
 25717                           fsr1h	equ	0xFE2
 25718                           fsr1l	equ	0xFE1
 25719                           indf2	equ	0xFDF
 25720                           postinc2	equ	0xFDE
 25721                           postdec2	equ	0xFDD
 25722                           plusw2	equ	0xFDB
 25723                           fsr2h	equ	0xFDA
 25724                           fsr2l	equ	0xFD9
 25725                           status	equ	0xFD8
 25726                           
 25727 ;; *************** function _SYSTEM_Initialize *****************
 25728 ;; Defined at:
 25729 ;;		line 93 in file "../Includes/MccGenerated/mcc.c"
 25730 ;; Parameters:    Size  Location     Type
 25731 ;;		None
 25732 ;; Auto vars:     Size  Location     Type
 25733 ;;		None
 25734 ;; Return value:  Size  Location     Type
 25735 ;;                  1    wreg      void 
 25736 ;; Registers used:
 25737 ;;		wreg, status,2, status,0, cstack
 25738 ;; Tracked objects:
 25739 ;;		On entry : 0/0
 25740 ;;		On exit  : 0/0
 25741 ;;		Unchanged: 0/0
 25742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25743 ;;      Params:         0       0       0       0       0       0       0       0       0
 25744 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25745 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25746 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25747 ;;Total ram usage:        0 bytes
 25748 ;; Hardware stack levels used:    1
 25749 ;; Hardware stack levels required when called:   13
 25750 ;; This function calls:
 25751 ;;		_ADC_Initialize
 25752 ;;		_CMP1_Initialize
 25753 ;;		_EUSART_Initialize
 25754 ;;		_OSCILLATOR_Initialize
 25755 ;;		_PIN_MANAGER_Initialize
 25756 ;;		_TMR1_Initialize
 25757 ;;		_TMR2_Initialize
 25758 ;;		_TMR3_Initialize
 25759 ;; This function is called by:
 25760 ;;		_main
 25761 ;; This function uses a non-reentrant model
 25762 ;;
 25763                           
 25764                           	psect	text89
 25765  0070AE                     __ptext89:
 25766                           	opt stack 0
 25767  0070AE                     _SYSTEM_Initialize:
 25768                           	opt stack 17
 25769                           
 25770                           ;mcc.c: 95: OSCILLATOR_Initialize();
 25771                           
 25772                           ; BSR set to: 0
 25773                           ;incstack = 0
 25774  0070AE  EC88  F038         	call	_OSCILLATOR_Initialize	;wreg free
 25775                           
 25776                           ;mcc.c: 96: PIN_MANAGER_Initialize();
 25777  0070B2  EC69  F034         	call	_PIN_MANAGER_Initialize	;wreg free
 25778                           
 25779                           ;mcc.c: 98: TMR1_Initialize();
 25780  0070B6  EC81  F037         	call	_TMR1_Initialize	;wreg free
 25781                           
 25782                           ;mcc.c: 99: TMR2_Initialize();
 25783  0070BA  EC05  F039         	call	_TMR2_Initialize	;wreg free
 25784                           
 25785                           ;mcc.c: 100: TMR3_Initialize();
 25786  0070BE  EC68  F038         	call	_TMR3_Initialize	;wreg free
 25787                           
 25788                           ;mcc.c: 101: EUSART_Initialize();
 25789  0070C2  ECCF  F036         	call	_EUSART_Initialize	;wreg free
 25790                           
 25791                           ;mcc.c: 102: ADC_Initialize();
 25792  0070C6  ECBF  F038         	call	_ADC_Initialize	;wreg free
 25793                           
 25794                           ;mcc.c: 103: CMP1_Initialize();
 25795  0070CA  EC2A  F039         	call	_CMP1_Initialize	;wreg free
 25796  0070CE  0012               	return		;funcret
 25797  0070D0                     __end_of_SYSTEM_Initialize:
 25798                           	opt stack 0
 25799                           tblptru	equ	0xFF8
 25800                           tblptrh	equ	0xFF7
 25801                           tblptrl	equ	0xFF6
 25802                           tablat	equ	0xFF5
 25803                           prodh	equ	0xFF4
 25804                           prodl	equ	0xFF3
 25805                           intcon	equ	0xFF2
 25806                           intcon3	equ	0xFF0
 25807                           indf0	equ	0xFEF
 25808                           postinc0	equ	0xFEE
 25809                           fsr0h	equ	0xFEA
 25810                           fsr0l	equ	0xFE9
 25811                           wreg	equ	0xFE8
 25812                           indf1	equ	0xFE7
 25813                           postdec1	equ	0xFE5
 25814                           fsr1h	equ	0xFE2
 25815                           fsr1l	equ	0xFE1
 25816                           indf2	equ	0xFDF
 25817                           postinc2	equ	0xFDE
 25818                           postdec2	equ	0xFDD
 25819                           plusw2	equ	0xFDB
 25820                           fsr2h	equ	0xFDA
 25821                           fsr2l	equ	0xFD9
 25822                           status	equ	0xFD8
 25823                           
 25824 ;; *************** function _TMR3_Initialize *****************
 25825 ;; Defined at:
 25826 ;;		line 67 in file "../Includes/MccGenerated/tmr3.c"
 25827 ;; Parameters:    Size  Location     Type
 25828 ;;		None
 25829 ;; Auto vars:     Size  Location     Type
 25830 ;;		None
 25831 ;; Return value:  Size  Location     Type
 25832 ;;                  1    wreg      void 
 25833 ;; Registers used:
 25834 ;;		wreg, status,2, cstack
 25835 ;; Tracked objects:
 25836 ;;		On entry : 0/0
 25837 ;;		On exit  : 0/0
 25838 ;;		Unchanged: 0/0
 25839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25840 ;;      Params:         0       0       0       0       0       0       0       0       0
 25841 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25842 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25843 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25844 ;;Total ram usage:        0 bytes
 25845 ;; Hardware stack levels used:    1
 25846 ;; Hardware stack levels required when called:   12
 25847 ;; This function calls:
 25848 ;;		_TMR3_StartTimer
 25849 ;; This function is called by:
 25850 ;;		_SYSTEM_Initialize
 25851 ;; This function uses a non-reentrant model
 25852 ;;
 25853                           
 25854                           	psect	text90
 25855  0070D0                     __ptext90:
 25856                           	opt stack 0
 25857  0070D0                     _TMR3_Initialize:
 25858                           	opt stack 17
 25859                           
 25860                           ;tmr3.c: 72: T3CON = 0x04;
 25861                           
 25862                           ;incstack = 0
 25863  0070D0  0E04               	movlw	4
 25864  0070D2  6EB1               	movwf	4017,c	;volatile
 25865                           
 25866                           ;tmr3.c: 75: T3GCON = 0x00;
 25867  0070D4  0E00               	movlw	0
 25868  0070D6  6EB4               	movwf	4020,c	;volatile
 25869                           
 25870                           ;tmr3.c: 78: TMR3H = 0xD5;
 25871  0070D8  0ED5               	movlw	213
 25872  0070DA  6EB3               	movwf	4019,c	;volatile
 25873                           
 25874                           ;tmr3.c: 81: TMR3L = 0xD0;
 25875  0070DC  0ED0               	movlw	208
 25876  0070DE  6EB2               	movwf	4018,c	;volatile
 25877                           
 25878                           ;tmr3.c: 84: timer3ReloadVal=TMR3;
 25879  0070E0  CFB2 F0C1          	movff	4018,_timer3ReloadVal	;volatile
 25880  0070E4  CFB3 F0C2          	movff	4019,_timer3ReloadVal+1	;volatile
 25881                           
 25882                           ;tmr3.c: 87: PIR2bits.TMR3IF = 0;
 25883  0070E8  92A1               	bcf	4001,1,c	;volatile
 25884                           
 25885                           ;tmr3.c: 90: PIE2bits.TMR3IE = 1;
 25886  0070EA  82A0               	bsf	4000,1,c	;volatile
 25887                           
 25888                           ;tmr3.c: 93: TMR3_StartTimer();
 25889  0070EC  EC7F  F039         	call	_TMR3_StartTimer	;wreg free
 25890  0070F0  0012               	return		;funcret
 25891  0070F2                     __end_of_TMR3_Initialize:
 25892                           	opt stack 0
 25893                           tblptru	equ	0xFF8
 25894                           tblptrh	equ	0xFF7
 25895                           tblptrl	equ	0xFF6
 25896                           tablat	equ	0xFF5
 25897                           prodh	equ	0xFF4
 25898                           prodl	equ	0xFF3
 25899                           intcon	equ	0xFF2
 25900                           intcon3	equ	0xFF0
 25901                           indf0	equ	0xFEF
 25902                           postinc0	equ	0xFEE
 25903                           fsr0h	equ	0xFEA
 25904                           fsr0l	equ	0xFE9
 25905                           wreg	equ	0xFE8
 25906                           indf1	equ	0xFE7
 25907                           postdec1	equ	0xFE5
 25908                           fsr1h	equ	0xFE2
 25909                           fsr1l	equ	0xFE1
 25910                           indf2	equ	0xFDF
 25911                           postinc2	equ	0xFDE
 25912                           postdec2	equ	0xFDD
 25913                           plusw2	equ	0xFDB
 25914                           fsr2h	equ	0xFDA
 25915                           fsr2l	equ	0xFD9
 25916                           status	equ	0xFD8
 25917                           
 25918 ;; *************** function _TMR3_StartTimer *****************
 25919 ;; Defined at:
 25920 ;;		line 96 in file "../Includes/MccGenerated/tmr3.c"
 25921 ;; Parameters:    Size  Location     Type
 25922 ;;		None
 25923 ;; Auto vars:     Size  Location     Type
 25924 ;;		None
 25925 ;; Return value:  Size  Location     Type
 25926 ;;                  1    wreg      void 
 25927 ;; Registers used:
 25928 ;;		None
 25929 ;; Tracked objects:
 25930 ;;		On entry : 0/0
 25931 ;;		On exit  : 0/0
 25932 ;;		Unchanged: 0/0
 25933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25934 ;;      Params:         0       0       0       0       0       0       0       0       0
 25935 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25936 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25937 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25938 ;;Total ram usage:        0 bytes
 25939 ;; Hardware stack levels used:    1
 25940 ;; Hardware stack levels required when called:   11
 25941 ;; This function calls:
 25942 ;;		Nothing
 25943 ;; This function is called by:
 25944 ;;		_TMR3_Initialize
 25945 ;; This function uses a non-reentrant model
 25946 ;;
 25947                           
 25948                           	psect	text91
 25949  0072FE                     __ptext91:
 25950                           	opt stack 0
 25951  0072FE                     _TMR3_StartTimer:
 25952                           	opt stack 17
 25953                           
 25954                           ;tmr3.c: 99: T3CONbits.TMR3ON = 1;
 25955                           
 25956                           ;incstack = 0
 25957  0072FE  80B1               	bsf	4017,0,c	;volatile
 25958  007300  0012               	return		;funcret
 25959  007302                     __end_of_TMR3_StartTimer:
 25960                           	opt stack 0
 25961                           tblptru	equ	0xFF8
 25962                           tblptrh	equ	0xFF7
 25963                           tblptrl	equ	0xFF6
 25964                           tablat	equ	0xFF5
 25965                           prodh	equ	0xFF4
 25966                           prodl	equ	0xFF3
 25967                           intcon	equ	0xFF2
 25968                           intcon3	equ	0xFF0
 25969                           indf0	equ	0xFEF
 25970                           postinc0	equ	0xFEE
 25971                           fsr0h	equ	0xFEA
 25972                           fsr0l	equ	0xFE9
 25973                           wreg	equ	0xFE8
 25974                           indf1	equ	0xFE7
 25975                           postdec1	equ	0xFE5
 25976                           fsr1h	equ	0xFE2
 25977                           fsr1l	equ	0xFE1
 25978                           indf2	equ	0xFDF
 25979                           postinc2	equ	0xFDE
 25980                           postdec2	equ	0xFDD
 25981                           plusw2	equ	0xFDB
 25982                           fsr2h	equ	0xFDA
 25983                           fsr2l	equ	0xFD9
 25984                           status	equ	0xFD8
 25985                           
 25986 ;; *************** function _TMR2_Initialize *****************
 25987 ;; Defined at:
 25988 ;;		line 58 in file "../Includes/MccGenerated/tmr2.c"
 25989 ;; Parameters:    Size  Location     Type
 25990 ;;		None
 25991 ;; Auto vars:     Size  Location     Type
 25992 ;;		None
 25993 ;; Return value:  Size  Location     Type
 25994 ;;                  1    wreg      void 
 25995 ;; Registers used:
 25996 ;;		wreg, status,2, cstack
 25997 ;; Tracked objects:
 25998 ;;		On entry : 0/0
 25999 ;;		On exit  : 0/0
 26000 ;;		Unchanged: 0/0
 26001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26002 ;;      Params:         0       0       0       0       0       0       0       0       0
 26003 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26004 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26005 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26006 ;;Total ram usage:        0 bytes
 26007 ;; Hardware stack levels used:    1
 26008 ;; Hardware stack levels required when called:   12
 26009 ;; This function calls:
 26010 ;;		_TMR2_StartTimer
 26011 ;; This function is called by:
 26012 ;;		_SYSTEM_Initialize
 26013 ;; This function uses a non-reentrant model
 26014 ;;
 26015                           
 26016                           	psect	text92
 26017  00720A                     __ptext92:
 26018                           	opt stack 0
 26019  00720A                     _TMR2_Initialize:
 26020                           	opt stack 17
 26021                           
 26022                           ;tmr2.c: 62: T2CON = 0x7A;
 26023                           
 26024                           ;incstack = 0
 26025  00720A  0E7A               	movlw	122
 26026  00720C  6EBA               	movwf	4026,c	;volatile
 26027                           
 26028                           ;tmr2.c: 65: PR2 = 0x9B;
 26029  00720E  0E9B               	movlw	155
 26030  007210  6EBB               	movwf	4027,c	;volatile
 26031                           
 26032                           ;tmr2.c: 68: TMR2 = 0x00;
 26033  007212  0E00               	movlw	0
 26034  007214  6EBC               	movwf	4028,c	;volatile
 26035                           
 26036                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
 26037  007216  929E               	bcf	3998,1,c	;volatile
 26038                           
 26039                           ;tmr2.c: 74: TMR2_StartTimer();
 26040  007218  EC81  F039         	call	_TMR2_StartTimer	;wreg free
 26041  00721C  0012               	return		;funcret
 26042  00721E                     __end_of_TMR2_Initialize:
 26043                           	opt stack 0
 26044                           tblptru	equ	0xFF8
 26045                           tblptrh	equ	0xFF7
 26046                           tblptrl	equ	0xFF6
 26047                           tablat	equ	0xFF5
 26048                           prodh	equ	0xFF4
 26049                           prodl	equ	0xFF3
 26050                           intcon	equ	0xFF2
 26051                           intcon3	equ	0xFF0
 26052                           indf0	equ	0xFEF
 26053                           postinc0	equ	0xFEE
 26054                           fsr0h	equ	0xFEA
 26055                           fsr0l	equ	0xFE9
 26056                           wreg	equ	0xFE8
 26057                           indf1	equ	0xFE7
 26058                           postdec1	equ	0xFE5
 26059                           fsr1h	equ	0xFE2
 26060                           fsr1l	equ	0xFE1
 26061                           indf2	equ	0xFDF
 26062                           postinc2	equ	0xFDE
 26063                           postdec2	equ	0xFDD
 26064                           plusw2	equ	0xFDB
 26065                           fsr2h	equ	0xFDA
 26066                           fsr2l	equ	0xFD9
 26067                           status	equ	0xFD8
 26068                           
 26069 ;; *************** function _TMR2_StartTimer *****************
 26070 ;; Defined at:
 26071 ;;		line 77 in file "../Includes/MccGenerated/tmr2.c"
 26072 ;; Parameters:    Size  Location     Type
 26073 ;;		None
 26074 ;; Auto vars:     Size  Location     Type
 26075 ;;		None
 26076 ;; Return value:  Size  Location     Type
 26077 ;;                  1    wreg      void 
 26078 ;; Registers used:
 26079 ;;		None
 26080 ;; Tracked objects:
 26081 ;;		On entry : 0/0
 26082 ;;		On exit  : 0/0
 26083 ;;		Unchanged: 0/0
 26084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26085 ;;      Params:         0       0       0       0       0       0       0       0       0
 26086 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26087 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26088 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26089 ;;Total ram usage:        0 bytes
 26090 ;; Hardware stack levels used:    1
 26091 ;; Hardware stack levels required when called:   11
 26092 ;; This function calls:
 26093 ;;		Nothing
 26094 ;; This function is called by:
 26095 ;;		_TMR2_Initialize
 26096 ;; This function uses a non-reentrant model
 26097 ;;
 26098                           
 26099                           	psect	text93
 26100  007302                     __ptext93:
 26101                           	opt stack 0
 26102  007302                     _TMR2_StartTimer:
 26103                           	opt stack 17
 26104                           
 26105                           ;tmr2.c: 79: T2CONbits.TMR2ON = 1;
 26106                           
 26107                           ;incstack = 0
 26108  007302  84BA               	bsf	4026,2,c	;volatile
 26109  007304  0012               	return		;funcret
 26110  007306                     __end_of_TMR2_StartTimer:
 26111                           	opt stack 0
 26112                           tblptru	equ	0xFF8
 26113                           tblptrh	equ	0xFF7
 26114                           tblptrl	equ	0xFF6
 26115                           tablat	equ	0xFF5
 26116                           prodh	equ	0xFF4
 26117                           prodl	equ	0xFF3
 26118                           intcon	equ	0xFF2
 26119                           intcon3	equ	0xFF0
 26120                           indf0	equ	0xFEF
 26121                           postinc0	equ	0xFEE
 26122                           fsr0h	equ	0xFEA
 26123                           fsr0l	equ	0xFE9
 26124                           wreg	equ	0xFE8
 26125                           indf1	equ	0xFE7
 26126                           postdec1	equ	0xFE5
 26127                           fsr1h	equ	0xFE2
 26128                           fsr1l	equ	0xFE1
 26129                           indf2	equ	0xFDF
 26130                           postinc2	equ	0xFDE
 26131                           postdec2	equ	0xFDD
 26132                           plusw2	equ	0xFDB
 26133                           fsr2h	equ	0xFDA
 26134                           fsr2l	equ	0xFD9
 26135                           status	equ	0xFD8
 26136                           
 26137 ;; *************** function _TMR1_Initialize *****************
 26138 ;; Defined at:
 26139 ;;		line 63 in file "../Includes/MccGenerated/tmr1.c"
 26140 ;; Parameters:    Size  Location     Type
 26141 ;;		None
 26142 ;; Auto vars:     Size  Location     Type
 26143 ;;		None
 26144 ;; Return value:  Size  Location     Type
 26145 ;;                  1    wreg      void 
 26146 ;; Registers used:
 26147 ;;		wreg, status,2, status,0, cstack
 26148 ;; Tracked objects:
 26149 ;;		On entry : 0/0
 26150 ;;		On exit  : 0/0
 26151 ;;		Unchanged: 0/0
 26152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26153 ;;      Params:         0       0       0       0       0       0       0       0       0
 26154 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26155 ;;      Temps:          0       2       0       0       0       0       0       0       0
 26156 ;;      Totals:         0       2       0       0       0       0       0       0       0
 26157 ;;Total ram usage:        2 bytes
 26158 ;; Hardware stack levels used:    1
 26159 ;; Hardware stack levels required when called:   12
 26160 ;; This function calls:
 26161 ;;		_TMR1_StartTimer
 26162 ;; This function is called by:
 26163 ;;		_SYSTEM_Initialize
 26164 ;; This function uses a non-reentrant model
 26165 ;;
 26166                           
 26167                           	psect	text94
 26168  006F02                     __ptext94:
 26169                           	opt stack 0
 26170  006F02                     _TMR1_Initialize:
 26171                           	opt stack 17
 26172                           
 26173                           ;tmr1.c: 68: T1CON = 0x00;
 26174                           
 26175                           ;incstack = 0
 26176  006F02  0E00               	movlw	0
 26177  006F04  6ECD               	movwf	4045,c	;volatile
 26178                           
 26179                           ;tmr1.c: 71: T1GCON = 0x00;
 26180  006F06  0E00               	movlw	0
 26181  006F08  6ECC               	movwf	4044,c	;volatile
 26182                           
 26183                           ;tmr1.c: 74: TMR1H = 0xD0;
 26184  006F0A  0ED0               	movlw	208
 26185  006F0C  6ECF               	movwf	4047,c	;volatile
 26186                           
 26187                           ;tmr1.c: 77: TMR1L = 0x20;
 26188  006F0E  0E20               	movlw	32
 26189  006F10  6ECE               	movwf	4046,c	;volatile
 26190                           
 26191                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
 26192  006F12  50CE               	movf	4046,w,c	;volatile
 26193  006F14  CFCF F060          	movff	4047,??_TMR1_Initialize	;volatile
 26194  006F18  0100               	movlb	0	; () banked
 26195  006F1A  6B61               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 26196  006F1C  C060  F061         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 26197  006F20  0100               	movlb	0	; () banked
 26198  006F22  6B60               	clrf	??_TMR1_Initialize& (0+255),b
 26199  006F24  0100               	movlb	0	; () banked
 26200  006F26  1160               	iorwf	??_TMR1_Initialize& (0+255),w,b
 26201  006F28  6E46               	movwf	_timer1ReloadVal,c	;volatile
 26202  006F2A  0100               	movlb	0	; () banked
 26203  006F2C  5161               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 26204  006F2E  6E47               	movwf	_timer1ReloadVal+1,c	;volatile
 26205                           
 26206                           ; BSR set to: 0
 26207                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
 26208  006F30  909E               	bcf	3998,0,c	;volatile
 26209                           
 26210                           ; BSR set to: 0
 26211                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
 26212  006F32  809D               	bsf	3997,0,c	;volatile
 26213                           
 26214                           ; BSR set to: 0
 26215                           ;tmr1.c: 89: TMR1_StartTimer();
 26216  006F34  EC83  F039         	call	_TMR1_StartTimer	;wreg free
 26217  006F38  0012               	return		;funcret
 26218  006F3A                     __end_of_TMR1_Initialize:
 26219                           	opt stack 0
 26220                           tblptru	equ	0xFF8
 26221                           tblptrh	equ	0xFF7
 26222                           tblptrl	equ	0xFF6
 26223                           tablat	equ	0xFF5
 26224                           prodh	equ	0xFF4
 26225                           prodl	equ	0xFF3
 26226                           intcon	equ	0xFF2
 26227                           intcon3	equ	0xFF0
 26228                           indf0	equ	0xFEF
 26229                           postinc0	equ	0xFEE
 26230                           fsr0h	equ	0xFEA
 26231                           fsr0l	equ	0xFE9
 26232                           wreg	equ	0xFE8
 26233                           indf1	equ	0xFE7
 26234                           postdec1	equ	0xFE5
 26235                           fsr1h	equ	0xFE2
 26236                           fsr1l	equ	0xFE1
 26237                           indf2	equ	0xFDF
 26238                           postinc2	equ	0xFDE
 26239                           postdec2	equ	0xFDD
 26240                           plusw2	equ	0xFDB
 26241                           fsr2h	equ	0xFDA
 26242                           fsr2l	equ	0xFD9
 26243                           status	equ	0xFD8
 26244                           
 26245 ;; *************** function _TMR1_StartTimer *****************
 26246 ;; Defined at:
 26247 ;;		line 92 in file "../Includes/MccGenerated/tmr1.c"
 26248 ;; Parameters:    Size  Location     Type
 26249 ;;		None
 26250 ;; Auto vars:     Size  Location     Type
 26251 ;;		None
 26252 ;; Return value:  Size  Location     Type
 26253 ;;                  1    wreg      void 
 26254 ;; Registers used:
 26255 ;;		None
 26256 ;; Tracked objects:
 26257 ;;		On entry : 0/0
 26258 ;;		On exit  : 0/0
 26259 ;;		Unchanged: 0/0
 26260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26261 ;;      Params:         0       0       0       0       0       0       0       0       0
 26262 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26263 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26264 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26265 ;;Total ram usage:        0 bytes
 26266 ;; Hardware stack levels used:    1
 26267 ;; Hardware stack levels required when called:   11
 26268 ;; This function calls:
 26269 ;;		Nothing
 26270 ;; This function is called by:
 26271 ;;		_TMR1_Initialize
 26272 ;; This function uses a non-reentrant model
 26273 ;;
 26274                           
 26275                           	psect	text95
 26276  007306                     __ptext95:
 26277                           	opt stack 0
 26278  007306                     _TMR1_StartTimer:
 26279                           	opt stack 17
 26280                           
 26281                           ;tmr1.c: 95: T1CONbits.TMR1ON = 1;
 26282                           
 26283                           ;incstack = 0
 26284  007306  80CD               	bsf	4045,0,c	;volatile
 26285  007308  0012               	return		;funcret
 26286  00730A                     __end_of_TMR1_StartTimer:
 26287                           	opt stack 0
 26288                           tblptru	equ	0xFF8
 26289                           tblptrh	equ	0xFF7
 26290                           tblptrl	equ	0xFF6
 26291                           tablat	equ	0xFF5
 26292                           prodh	equ	0xFF4
 26293                           prodl	equ	0xFF3
 26294                           intcon	equ	0xFF2
 26295                           intcon3	equ	0xFF0
 26296                           indf0	equ	0xFEF
 26297                           postinc0	equ	0xFEE
 26298                           fsr0h	equ	0xFEA
 26299                           fsr0l	equ	0xFE9
 26300                           wreg	equ	0xFE8
 26301                           indf1	equ	0xFE7
 26302                           postdec1	equ	0xFE5
 26303                           fsr1h	equ	0xFE2
 26304                           fsr1l	equ	0xFE1
 26305                           indf2	equ	0xFDF
 26306                           postinc2	equ	0xFDE
 26307                           postdec2	equ	0xFDD
 26308                           plusw2	equ	0xFDB
 26309                           fsr2h	equ	0xFDA
 26310                           fsr2l	equ	0xFD9
 26311                           status	equ	0xFD8
 26312                           
 26313 ;; *************** function _PIN_MANAGER_Initialize *****************
 26314 ;; Defined at:
 26315 ;;		line 51 in file "../Includes/MccGenerated/pin_manager.c"
 26316 ;; Parameters:    Size  Location     Type
 26317 ;;		None
 26318 ;; Auto vars:     Size  Location     Type
 26319 ;;		None
 26320 ;; Return value:  Size  Location     Type
 26321 ;;                  1    wreg      void 
 26322 ;; Registers used:
 26323 ;;		wreg, status,2
 26324 ;; Tracked objects:
 26325 ;;		On entry : 0/0
 26326 ;;		On exit  : 0/0
 26327 ;;		Unchanged: 0/0
 26328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26329 ;;      Params:         0       0       0       0       0       0       0       0       0
 26330 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26331 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26332 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26333 ;;Total ram usage:        0 bytes
 26334 ;; Hardware stack levels used:    1
 26335 ;; Hardware stack levels required when called:   11
 26336 ;; This function calls:
 26337 ;;		Nothing
 26338 ;; This function is called by:
 26339 ;;		_moteApp_GoToSleep
 26340 ;;		_SYSTEM_Initialize
 26341 ;; This function uses a non-reentrant model
 26342 ;;
 26343                           
 26344                           	psect	text96
 26345  0068D2                     __ptext96:
 26346                           	opt stack 0
 26347  0068D2                     _PIN_MANAGER_Initialize:
 26348                           	opt stack 16
 26349                           
 26350                           ;pin_manager.c: 55: TRISAbits.TRISA0 = 1;
 26351                           
 26352                           ;incstack = 0
 26353  0068D2  8092               	bsf	3986,0,c	;volatile
 26354                           
 26355                           ;pin_manager.c: 56: TRISAbits.TRISA1 = 1;
 26356  0068D4  8292               	bsf	3986,1,c	;volatile
 26357                           
 26358                           ;pin_manager.c: 57: TRISAbits.TRISA2 = 1;
 26359  0068D6  8492               	bsf	3986,2,c	;volatile
 26360                           
 26361                           ;pin_manager.c: 58: TRISAbits.TRISA3 = 1;
 26362  0068D8  8692               	bsf	3986,3,c	;volatile
 26363                           
 26364                           ;pin_manager.c: 60: LATEbits.LATE2 = 0;
 26365  0068DA  948D               	bcf	3981,2,c	;volatile
 26366                           
 26367                           ;pin_manager.c: 61: TRISEbits.TRISE2 = 0;
 26368  0068DC  9496               	bcf	3990,2,c	;volatile
 26369                           
 26370                           ;pin_manager.c: 62: TRISAbits.TRISA5 = 0;
 26371  0068DE  9A92               	bcf	3986,5,c	;volatile
 26372                           
 26373                           ;pin_manager.c: 63: TRISAbits.TRISA6 = 0;
 26374  0068E0  9C92               	bcf	3986,6,c	;volatile
 26375                           
 26376                           ;pin_manager.c: 64: TRISAbits.TRISA7 = 0;
 26377  0068E2  9E92               	bcf	3986,7,c	;volatile
 26378                           
 26379                           ;pin_manager.c: 66: INTCON2bits.nRBPU = 0;
 26380  0068E4  9EF1               	bcf	intcon2,7,c	;volatile
 26381                           
 26382                           ;pin_manager.c: 67: IOCBbits.IOCB7 = 1;
 26383  0068E6  8E86               	bsf	3974,7,c	;volatile
 26384                           
 26385                           ;pin_manager.c: 68: INTCONbits.IOCIE = 1;
 26386  0068E8  86F2               	bsf	intcon,3,c	;volatile
 26387                           
 26388                           ;pin_manager.c: 69: TRISBbits.TRISB1 = 1;
 26389  0068EA  8293               	bsf	3987,1,c	;volatile
 26390                           
 26391                           ;pin_manager.c: 70: TRISBbits.TRISB0 = 1;
 26392  0068EC  8093               	bsf	3987,0,c	;volatile
 26393                           
 26394                           ;pin_manager.c: 71: TRISBbits.TRISB7 = 1;
 26395  0068EE  8E93               	bsf	3987,7,c	;volatile
 26396                           
 26397                           ;pin_manager.c: 72: TRISBbits.TRISB2 = 0;
 26398  0068F0  9493               	bcf	3987,2,c	;volatile
 26399                           
 26400                           ;pin_manager.c: 73: TRISBbits.TRISB3 = 0;
 26401  0068F2  9693               	bcf	3987,3,c	;volatile
 26402                           
 26403                           ;pin_manager.c: 74: TRISBbits.TRISB4 = 0;
 26404  0068F4  9893               	bcf	3987,4,c	;volatile
 26405                           
 26406                           ;pin_manager.c: 75: TRISBbits.TRISB5 = 0;
 26407  0068F6  9A93               	bcf	3987,5,c	;volatile
 26408                           
 26409                           ;pin_manager.c: 77: TRISCbits.TRISC0 = 0;
 26410  0068F8  9094               	bcf	3988,0,c	;volatile
 26411                           
 26412                           ;pin_manager.c: 78: TRISCbits.TRISC1 = 0;
 26413  0068FA  9294               	bcf	3988,1,c	;volatile
 26414                           
 26415                           ;pin_manager.c: 79: TRISCbits.TRISC2 = 1;
 26416  0068FC  8494               	bsf	3988,2,c	;volatile
 26417                           
 26418                           ;pin_manager.c: 80: TRISCbits.TRISC6 = 0;
 26419  0068FE  9C94               	bcf	3988,6,c	;volatile
 26420                           
 26421                           ;pin_manager.c: 81: TRISCbits.TRISC7 = 1;
 26422  006900  8E94               	bsf	3988,7,c	;volatile
 26423                           
 26424                           ;pin_manager.c: 83: TRISD = 0b00000000;
 26425  006902  0E00               	movlw	0
 26426  006904  6E95               	movwf	3989,c	;volatile
 26427                           
 26428                           ;pin_manager.c: 85: TRISEbits.TRISE2 = 0;
 26429  006906  9496               	bcf	3990,2,c	;volatile
 26430                           
 26431                           ;pin_manager.c: 88: LATAbits.LATA5 = 0;
 26432  006908  9A89               	bcf	3977,5,c	;volatile
 26433                           
 26434                           ;pin_manager.c: 89: LATAbits.LATA6 = 0;
 26435  00690A  9C89               	bcf	3977,6,c	;volatile
 26436                           
 26437                           ;pin_manager.c: 90: LATAbits.LATA7 = 0;
 26438  00690C  9E89               	bcf	3977,7,c	;volatile
 26439                           
 26440                           ;pin_manager.c: 92: LATBbits.LATB2 = 0;
 26441  00690E  948A               	bcf	3978,2,c	;volatile
 26442                           
 26443                           ;pin_manager.c: 94: LATCbits.LATC2 = 0;
 26444  006910  948B               	bcf	3979,2,c	;volatile
 26445                           
 26446                           ;pin_manager.c: 95: LATCbits.LATC6 = 0;
 26447  006912  9C8B               	bcf	3979,6,c	;volatile
 26448                           
 26449                           ;pin_manager.c: 97: LATEbits.LATE2 = 1;
 26450  006914  848D               	bsf	3981,2,c	;volatile
 26451                           
 26452                           ;pin_manager.c: 99: ANSELAbits.ANSA0 = 0;
 26453  006916  010F               	movlb	15	; () banked
 26454  006918  915B               	bcf	91,0,b	;volatile
 26455                           
 26456                           ; BSR set to: 15
 26457                           ;pin_manager.c: 100: ANSELAbits.ANSA1 = 1;
 26458  00691A  010F               	movlb	15	; () banked
 26459  00691C  835B               	bsf	91,1,b	;volatile
 26460                           
 26461                           ; BSR set to: 15
 26462                           ;pin_manager.c: 101: ANSELAbits.ANSA2 = 1;
 26463  00691E  010F               	movlb	15	; () banked
 26464  006920  855B               	bsf	91,2,b	;volatile
 26465                           
 26466                           ; BSR set to: 15
 26467                           ;pin_manager.c: 102: ANSELAbits.ANSA3 = 1;
 26468  006922  010F               	movlb	15	; () banked
 26469  006924  875B               	bsf	91,3,b	;volatile
 26470                           
 26471                           ; BSR set to: 15
 26472                           ;pin_manager.c: 103: ANSELCbits.ANSC7 = 0;
 26473  006926  010F               	movlb	15	; () banked
 26474  006928  9F5D               	bcf	93,7,b	;volatile
 26475                           
 26476                           ; BSR set to: 15
 26477                           ;pin_manager.c: 104: ANSELCbits.ANSC6 = 0;
 26478  00692A  010F               	movlb	15	; () banked
 26479  00692C  9D5D               	bcf	93,6,b	;volatile
 26480                           
 26481                           ; BSR set to: 15
 26482  00692E  0012               	return		;funcret
 26483  006930                     __end_of_PIN_MANAGER_Initialize:
 26484                           	opt stack 0
 26485                           tblptru	equ	0xFF8
 26486                           tblptrh	equ	0xFF7
 26487                           tblptrl	equ	0xFF6
 26488                           tablat	equ	0xFF5
 26489                           prodh	equ	0xFF4
 26490                           prodl	equ	0xFF3
 26491                           intcon	equ	0xFF2
 26492                           intcon2	equ	0xFF1
 26493                           intcon3	equ	0xFF0
 26494                           indf0	equ	0xFEF
 26495                           postinc0	equ	0xFEE
 26496                           fsr0h	equ	0xFEA
 26497                           fsr0l	equ	0xFE9
 26498                           wreg	equ	0xFE8
 26499                           indf1	equ	0xFE7
 26500                           postdec1	equ	0xFE5
 26501                           fsr1h	equ	0xFE2
 26502                           fsr1l	equ	0xFE1
 26503                           indf2	equ	0xFDF
 26504                           postinc2	equ	0xFDE
 26505                           postdec2	equ	0xFDD
 26506                           plusw2	equ	0xFDB
 26507                           fsr2h	equ	0xFDA
 26508                           fsr2l	equ	0xFD9
 26509                           status	equ	0xFD8
 26510                           
 26511 ;; *************** function _OSCILLATOR_Initialize *****************
 26512 ;; Defined at:
 26513 ;;		line 106 in file "../Includes/MccGenerated/mcc.c"
 26514 ;; Parameters:    Size  Location     Type
 26515 ;;		None
 26516 ;; Auto vars:     Size  Location     Type
 26517 ;;		None
 26518 ;; Return value:  Size  Location     Type
 26519 ;;                  1    wreg      void 
 26520 ;; Registers used:
 26521 ;;		wreg, status,2
 26522 ;; Tracked objects:
 26523 ;;		On entry : 0/0
 26524 ;;		On exit  : 0/0
 26525 ;;		Unchanged: 0/0
 26526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26527 ;;      Params:         0       0       0       0       0       0       0       0       0
 26528 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26529 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26530 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26531 ;;Total ram usage:        0 bytes
 26532 ;; Hardware stack levels used:    1
 26533 ;; Hardware stack levels required when called:   11
 26534 ;; This function calls:
 26535 ;;		Nothing
 26536 ;; This function is called by:
 26537 ;;		_SYSTEM_Initialize
 26538 ;; This function uses a non-reentrant model
 26539 ;;
 26540                           
 26541                           	psect	text97
 26542  007110                     __ptext97:
 26543                           	opt stack 0
 26544  007110                     _OSCILLATOR_Initialize:
 26545                           	opt stack 18
 26546                           
 26547                           ;mcc.c: 108: OSCTUNE = 0x80;
 26548                           
 26549                           ; BSR set to: 15
 26550                           ;incstack = 0
 26551  007110  0E80               	movlw	128
 26552  007112  6E9B               	movwf	3995,c	;volatile
 26553                           
 26554                           ;mcc.c: 109: OSCCON = 0x70;
 26555  007114  0E70               	movlw	112
 26556  007116  6ED3               	movwf	4051,c	;volatile
 26557                           
 26558                           ;mcc.c: 110: OSCCON2 = 0x10;
 26559  007118  0E10               	movlw	16
 26560  00711A  6ED2               	movwf	4050,c	;volatile
 26561                           
 26562                           ;mcc.c: 111: while(OSCCON2bits.PLLRDY != 1);
 26563  00711C  D000               	goto	l1236
 26564  00711E                     l1236:
 26565  00711E  AED2               	btfss	4050,7,c	;volatile
 26566  007120  D001               	goto	u14021
 26567  007122  D001               	goto	u14020
 26568  007124                     u14021:
 26569  007124  D7FC               	goto	l1236
 26570  007126                     u14020:
 26571  007126  D000               	goto	l14473
 26572  007128                     l14473:
 26573                           
 26574                           ;mcc.c: 112: ACTCON = 0x90;
 26575  007128  0E90               	movlw	144
 26576  00712A  6EB5               	movwf	4021,c	;volatile
 26577  00712C  0012               	return		;funcret
 26578  00712E                     __end_of_OSCILLATOR_Initialize:
 26579                           	opt stack 0
 26580                           tblptru	equ	0xFF8
 26581                           tblptrh	equ	0xFF7
 26582                           tblptrl	equ	0xFF6
 26583                           tablat	equ	0xFF5
 26584                           prodh	equ	0xFF4
 26585                           prodl	equ	0xFF3
 26586                           intcon	equ	0xFF2
 26587                           intcon2	equ	0xFF1
 26588                           intcon3	equ	0xFF0
 26589                           indf0	equ	0xFEF
 26590                           postinc0	equ	0xFEE
 26591                           fsr0h	equ	0xFEA
 26592                           fsr0l	equ	0xFE9
 26593                           wreg	equ	0xFE8
 26594                           indf1	equ	0xFE7
 26595                           postdec1	equ	0xFE5
 26596                           fsr1h	equ	0xFE2
 26597                           fsr1l	equ	0xFE1
 26598                           indf2	equ	0xFDF
 26599                           postinc2	equ	0xFDE
 26600                           postdec2	equ	0xFDD
 26601                           plusw2	equ	0xFDB
 26602                           fsr2h	equ	0xFDA
 26603                           fsr2l	equ	0xFD9
 26604                           status	equ	0xFD8
 26605                           
 26606 ;; *************** function _EUSART_Initialize *****************
 26607 ;; Defined at:
 26608 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 26609 ;; Parameters:    Size  Location     Type
 26610 ;;		None
 26611 ;; Auto vars:     Size  Location     Type
 26612 ;;		None
 26613 ;; Return value:  Size  Location     Type
 26614 ;;                  1    wreg      void 
 26615 ;; Registers used:
 26616 ;;		wreg, status,2
 26617 ;; Tracked objects:
 26618 ;;		On entry : 0/0
 26619 ;;		On exit  : 0/0
 26620 ;;		Unchanged: 0/0
 26621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26622 ;;      Params:         0       0       0       0       0       0       0       0       0
 26623 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26624 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26625 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26626 ;;Total ram usage:        0 bytes
 26627 ;; Hardware stack levels used:    1
 26628 ;; Hardware stack levels required when called:   11
 26629 ;; This function calls:
 26630 ;;		Nothing
 26631 ;; This function is called by:
 26632 ;;		_SYSTEM_Initialize
 26633 ;; This function uses a non-reentrant model
 26634 ;;
 26635                           
 26636                           	psect	text98
 26637  006D9E                     __ptext98:
 26638                           	opt stack 0
 26639  006D9E                     _EUSART_Initialize:
 26640                           	opt stack 18
 26641                           
 26642                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 26643                           
 26644                           ;incstack = 0
 26645  006D9E  9A9D               	bcf	3997,5,c	;volatile
 26646                           
 26647                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 26648  006DA0  989D               	bcf	3997,4,c	;volatile
 26649                           
 26650                           ;eusart.c: 85: BAUDCON = 0x48;
 26651  006DA2  0E48               	movlw	72
 26652  006DA4  6EB8               	movwf	4024,c	;volatile
 26653                           
 26654                           ;eusart.c: 88: RCSTA = 0x90;
 26655  006DA6  0E90               	movlw	144
 26656  006DA8  6EAB               	movwf	4011,c	;volatile
 26657                           
 26658                           ;eusart.c: 91: TXSTA = 0x26;
 26659  006DAA  0E26               	movlw	38
 26660  006DAC  6EAC               	movwf	4012,c	;volatile
 26661                           
 26662                           ;eusart.c: 95: SPBRG = 0xD0;
 26663  006DAE  0ED0               	movlw	208
 26664  006DB0  6EAF               	movwf	4015,c	;volatile
 26665                           
 26666                           ;eusart.c: 100: SPBRGH = 0x00;
 26667  006DB2  0E00               	movlw	0
 26668  006DB4  6EB0               	movwf	4016,c	;volatile
 26669                           
 26670                           ;eusart.c: 103: eusartTxHead = 0;
 26671  006DB6  0E00               	movlw	0
 26672  006DB8  0100               	movlb	0	; () banked
 26673  006DBA  6FDB               	movwf	_eusartTxHead& (0+255),b
 26674                           
 26675                           ;eusart.c: 104: eusartTxTail = 0;
 26676  006DBC  0E00               	movlw	0
 26677  006DBE  0100               	movlb	0	; () banked
 26678  006DC0  6FDA               	movwf	_eusartTxTail& (0+255),b
 26679                           
 26680                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 26681  006DC2  0E40               	movlw	64
 26682  006DC4  6E4F               	movwf	_eusartTxBufferRemaining,c	;volatile
 26683                           
 26684                           ;eusart.c: 107: eusartRxHead = 0;
 26685  006DC6  0E00               	movlw	0
 26686  006DC8  0100               	movlb	0	; () banked
 26687  006DCA  6FD9               	movwf	_eusartRxHead& (0+255),b
 26688                           
 26689                           ;eusart.c: 108: eusartRxTail = 0;
 26690  006DCC  0E00               	movlw	0
 26691  006DCE  0100               	movlb	0	; () banked
 26692  006DD0  6FD8               	movwf	_eusartRxTail& (0+255),b
 26693                           
 26694                           ;eusart.c: 109: eusartRxCount = 0;
 26695  006DD2  0E00               	movlw	0
 26696  006DD4  6E57               	movwf	_eusartRxCount,c	;volatile
 26697                           
 26698                           ; BSR set to: 0
 26699                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 26700  006DD6  8A9D               	bsf	3997,5,c	;volatile
 26701                           
 26702                           ; BSR set to: 0
 26703                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 26704  006DD8  88AB               	bsf	4011,4,c	;volatile
 26705                           
 26706                           ; BSR set to: 0
 26707  006DDA  0012               	return		;funcret
 26708  006DDC                     __end_of_EUSART_Initialize:
 26709                           	opt stack 0
 26710                           tblptru	equ	0xFF8
 26711                           tblptrh	equ	0xFF7
 26712                           tblptrl	equ	0xFF6
 26713                           tablat	equ	0xFF5
 26714                           prodh	equ	0xFF4
 26715                           prodl	equ	0xFF3
 26716                           intcon	equ	0xFF2
 26717                           intcon2	equ	0xFF1
 26718                           intcon3	equ	0xFF0
 26719                           indf0	equ	0xFEF
 26720                           postinc0	equ	0xFEE
 26721                           fsr0h	equ	0xFEA
 26722                           fsr0l	equ	0xFE9
 26723                           wreg	equ	0xFE8
 26724                           indf1	equ	0xFE7
 26725                           postdec1	equ	0xFE5
 26726                           fsr1h	equ	0xFE2
 26727                           fsr1l	equ	0xFE1
 26728                           indf2	equ	0xFDF
 26729                           postinc2	equ	0xFDE
 26730                           postdec2	equ	0xFDD
 26731                           plusw2	equ	0xFDB
 26732                           fsr2h	equ	0xFDA
 26733                           fsr2l	equ	0xFD9
 26734                           status	equ	0xFD8
 26735                           
 26736 ;; *************** function _CMP1_Initialize *****************
 26737 ;; Defined at:
 26738 ;;		line 58 in file "../Includes/MccGenerated/cmp1.c"
 26739 ;; Parameters:    Size  Location     Type
 26740 ;;		None
 26741 ;; Auto vars:     Size  Location     Type
 26742 ;;		None
 26743 ;; Return value:  Size  Location     Type
 26744 ;;                  1    wreg      void 
 26745 ;; Registers used:
 26746 ;;		wreg, status,2
 26747 ;; Tracked objects:
 26748 ;;		On entry : 0/0
 26749 ;;		On exit  : 0/0
 26750 ;;		Unchanged: 0/0
 26751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26752 ;;      Params:         0       0       0       0       0       0       0       0       0
 26753 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26754 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26755 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26756 ;;Total ram usage:        0 bytes
 26757 ;; Hardware stack levels used:    1
 26758 ;; Hardware stack levels required when called:   11
 26759 ;; This function calls:
 26760 ;;		Nothing
 26761 ;; This function is called by:
 26762 ;;		_SYSTEM_Initialize
 26763 ;; This function uses a non-reentrant model
 26764 ;;
 26765                           
 26766                           	psect	text99
 26767  007254                     __ptext99:
 26768                           	opt stack 0
 26769  007254                     _CMP1_Initialize:
 26770                           	opt stack 18
 26771                           
 26772                           ;cmp1.c: 65: PIE2bits.C1IE = 0;
 26773                           
 26774                           ; BSR set to: 0
 26775                           ;incstack = 0
 26776  007254  9CA0               	bcf	4000,6,c	;volatile
 26777                           
 26778                           ;cmp1.c: 70: CM1CON0 = 0x9C;
 26779  007256  0E9C               	movlw	156
 26780  007258  6E98               	movwf	3992,c	;volatile
 26781                           
 26782                           ;cmp1.c: 73: CM2CON1bits.C1RSEL = 0x1;
 26783  00725A  8A9A               	bsf	3994,5,c	;volatile
 26784                           
 26785                           ;cmp1.c: 76: CM2CON1bits.C1SYNC = 0x0;
 26786  00725C  929A               	bcf	3994,1,c	;volatile
 26787                           
 26788                           ;cmp1.c: 79: CM2CON1bits.C1HYS = 0x0;
 26789  00725E  969A               	bcf	3994,3,c	;volatile
 26790                           
 26791                           ;cmp1.c: 83: PIR2bits.C1IF = 0;
 26792  007260  9CA1               	bcf	4001,6,c	;volatile
 26793                           
 26794                           ;cmp1.c: 86: PIE2bits.C1IE = 0;
 26795  007262  9CA0               	bcf	4000,6,c	;volatile
 26796  007264  0012               	return		;funcret
 26797  007266                     __end_of_CMP1_Initialize:
 26798                           	opt stack 0
 26799                           tblptru	equ	0xFF8
 26800                           tblptrh	equ	0xFF7
 26801                           tblptrl	equ	0xFF6
 26802                           tablat	equ	0xFF5
 26803                           prodh	equ	0xFF4
 26804                           prodl	equ	0xFF3
 26805                           intcon	equ	0xFF2
 26806                           intcon2	equ	0xFF1
 26807                           intcon3	equ	0xFF0
 26808                           indf0	equ	0xFEF
 26809                           postinc0	equ	0xFEE
 26810                           fsr0h	equ	0xFEA
 26811                           fsr0l	equ	0xFE9
 26812                           wreg	equ	0xFE8
 26813                           indf1	equ	0xFE7
 26814                           postdec1	equ	0xFE5
 26815                           fsr1h	equ	0xFE2
 26816                           fsr1l	equ	0xFE1
 26817                           indf2	equ	0xFDF
 26818                           postinc2	equ	0xFDE
 26819                           postdec2	equ	0xFDD
 26820                           plusw2	equ	0xFDB
 26821                           fsr2h	equ	0xFDA
 26822                           fsr2l	equ	0xFD9
 26823                           status	equ	0xFD8
 26824                           
 26825 ;; *************** function _ADC_Initialize *****************
 26826 ;; Defined at:
 26827 ;;		line 65 in file "../Includes/MccGenerated/adc.c"
 26828 ;; Parameters:    Size  Location     Type
 26829 ;;		None
 26830 ;; Auto vars:     Size  Location     Type
 26831 ;;		None
 26832 ;; Return value:  Size  Location     Type
 26833 ;;                  1    wreg      void 
 26834 ;; Registers used:
 26835 ;;		wreg, status,2
 26836 ;; Tracked objects:
 26837 ;;		On entry : 0/0
 26838 ;;		On exit  : 0/0
 26839 ;;		Unchanged: 0/0
 26840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26841 ;;      Params:         0       0       0       0       0       0       0       0       0
 26842 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26843 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26844 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26845 ;;Total ram usage:        0 bytes
 26846 ;; Hardware stack levels used:    1
 26847 ;; Hardware stack levels required when called:   11
 26848 ;; This function calls:
 26849 ;;		Nothing
 26850 ;; This function is called by:
 26851 ;;		_SYSTEM_Initialize
 26852 ;; This function uses a non-reentrant model
 26853 ;;
 26854                           
 26855                           	psect	text100
 26856  00717E                     __ptext100:
 26857                           	opt stack 0
 26858  00717E                     _ADC_Initialize:
 26859                           	opt stack 18
 26860                           
 26861                           ;adc.c: 68: VREFCON0 = 0b10100000;
 26862                           
 26863                           ;incstack = 0
 26864  00717E  0EA0               	movlw	160
 26865  007180  6E7D               	movwf	3965,c	;volatile
 26866                           
 26867                           ;adc.c: 70: ADCON0 = 0x01;
 26868  007182  0E01               	movlw	1
 26869  007184  6EC2               	movwf	4034,c	;volatile
 26870                           
 26871                           ;adc.c: 73: ADCON1 = 0x08;
 26872  007186  0E08               	movlw	8
 26873  007188  6EC1               	movwf	4033,c	;volatile
 26874                           
 26875                           ;adc.c: 76: ADCON2 = 0b10001110;
 26876  00718A  0E8E               	movlw	142
 26877  00718C  6EC0               	movwf	4032,c	;volatile
 26878                           
 26879                           ;adc.c: 79: ADRESL = 0x00;
 26880  00718E  0E00               	movlw	0
 26881  007190  6EC3               	movwf	4035,c	;volatile
 26882                           
 26883                           ;adc.c: 82: ADRESH = 0x00;
 26884  007192  0E00               	movlw	0
 26885  007194  6EC4               	movwf	4036,c	;volatile
 26886  007196  0012               	return		;funcret
 26887  007198                     __end_of_ADC_Initialize:
 26888                           	opt stack 0
 26889                           tblptru	equ	0xFF8
 26890                           tblptrh	equ	0xFF7
 26891                           tblptrl	equ	0xFF6
 26892                           tablat	equ	0xFF5
 26893                           prodh	equ	0xFF4
 26894                           prodl	equ	0xFF3
 26895                           intcon	equ	0xFF2
 26896                           intcon2	equ	0xFF1
 26897                           intcon3	equ	0xFF0
 26898                           indf0	equ	0xFEF
 26899                           postinc0	equ	0xFEE
 26900                           fsr0h	equ	0xFEA
 26901                           fsr0l	equ	0xFE9
 26902                           wreg	equ	0xFE8
 26903                           indf1	equ	0xFE7
 26904                           postdec1	equ	0xFE5
 26905                           fsr1h	equ	0xFE2
 26906                           fsr1l	equ	0xFE1
 26907                           indf2	equ	0xFDF
 26908                           postinc2	equ	0xFDE
 26909                           postdec2	equ	0xFDD
 26910                           plusw2	equ	0xFDB
 26911                           fsr2h	equ	0xFDA
 26912                           fsr2l	equ	0xFD9
 26913                           status	equ	0xFD8
 26914                           
 26915 ;; *************** function _MOTEapp_handlerState *****************
 26916 ;; Defined at:
 26917 ;;		line 181 in file "../Includes/Board/MOTEapp.c"
 26918 ;; Parameters:    Size  Location     Type
 26919 ;;  state           1    wreg     enum E5860
 26920 ;; Auto vars:     Size  Location     Type
 26921 ;;  state           1    0[BANK0 ] enum E5860
 26922 ;; Return value:  Size  Location     Type
 26923 ;;                  1    wreg      void 
 26924 ;; Registers used:
 26925 ;;		wreg
 26926 ;; Tracked objects:
 26927 ;;		On entry : 0/0
 26928 ;;		On exit  : 0/0
 26929 ;;		Unchanged: 0/0
 26930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26931 ;;      Params:         0       0       0       0       0       0       0       0       0
 26932 ;;      Locals:         0       1       0       0       0       0       0       0       0
 26933 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26934 ;;      Totals:         0       1       0       0       0       0       0       0       0
 26935 ;;Total ram usage:        1 bytes
 26936 ;; Hardware stack levels used:    1
 26937 ;; Hardware stack levels required when called:   11
 26938 ;; This function calls:
 26939 ;;		Nothing
 26940 ;; This function is called by:
 26941 ;;		_main
 26942 ;; This function uses a non-reentrant model
 26943 ;;
 26944                           
 26945                           	psect	text101
 26946  0072B0                     __ptext101:
 26947                           	opt stack 0
 26948  0072B0                     _MOTEapp_handlerState:
 26949                           	opt stack 19
 26950                           
 26951                           ;incstack = 0
 26952                           ;MOTEapp_handlerState@state stored from wreg
 26953  0072B0  0100               	movlb	0	; () banked
 26954  0072B2  6F60               	movwf	MOTEapp_handlerState@state& (0+255),b
 26955                           
 26956                           ;MOTEapp.c: 183: moteState = state;
 26957  0072B4  C060  F0FE         	movff	MOTEapp_handlerState@state,_moteState
 26958  0072B8  0012               	return		;funcret
 26959  0072BA                     __end_of_MOTEapp_handlerState:
 26960                           	opt stack 0
 26961                           tblptru	equ	0xFF8
 26962                           tblptrh	equ	0xFF7
 26963                           tblptrl	equ	0xFF6
 26964                           tablat	equ	0xFF5
 26965                           prodh	equ	0xFF4
 26966                           prodl	equ	0xFF3
 26967                           intcon	equ	0xFF2
 26968                           intcon2	equ	0xFF1
 26969                           intcon3	equ	0xFF0
 26970                           indf0	equ	0xFEF
 26971                           postinc0	equ	0xFEE
 26972                           fsr0h	equ	0xFEA
 26973                           fsr0l	equ	0xFE9
 26974                           wreg	equ	0xFE8
 26975                           indf1	equ	0xFE7
 26976                           postdec1	equ	0xFE5
 26977                           fsr1h	equ	0xFE2
 26978                           fsr1l	equ	0xFE1
 26979                           indf2	equ	0xFDF
 26980                           postinc2	equ	0xFDE
 26981                           postdec2	equ	0xFDD
 26982                           plusw2	equ	0xFDB
 26983                           fsr2h	equ	0xFDA
 26984                           fsr2l	equ	0xFD9
 26985                           status	equ	0xFD8
 26986                           
 26987 ;; *************** function _DATAEE_ReadByte *****************
 26988 ;; Defined at:
 26989 ;;		line 188 in file "../Includes/MccGenerated/memory.c"
 26990 ;; Parameters:    Size  Location     Type
 26991 ;;  bAdd            1    wreg     unsigned char 
 26992 ;; Auto vars:     Size  Location     Type
 26993 ;;  bAdd            1    0[BANK0 ] unsigned char 
 26994 ;; Return value:  Size  Location     Type
 26995 ;;                  1    wreg      unsigned char 
 26996 ;; Registers used:
 26997 ;;		wreg, status,2
 26998 ;; Tracked objects:
 26999 ;;		On entry : 0/0
 27000 ;;		On exit  : 0/0
 27001 ;;		Unchanged: 0/0
 27002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27003 ;;      Params:         0       0       0       0       0       0       0       0       0
 27004 ;;      Locals:         0       1       0       0       0       0       0       0       0
 27005 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27006 ;;      Totals:         0       1       0       0       0       0       0       0       0
 27007 ;;Total ram usage:        1 bytes
 27008 ;; Hardware stack levels used:    1
 27009 ;; Hardware stack levels required when called:   11
 27010 ;; This function calls:
 27011 ;;		Nothing
 27012 ;; This function is called by:
 27013 ;;		_main
 27014 ;; This function uses a non-reentrant model
 27015 ;;
 27016                           
 27017                           	psect	text102
 27018  0071C8                     __ptext102:
 27019                           	opt stack 0
 27020  0071C8                     _DATAEE_ReadByte:
 27021                           	opt stack 19
 27022                           
 27023                           ;incstack = 0
 27024                           ;DATAEE_ReadByte@bAdd stored from wreg
 27025  0071C8  0100               	movlb	0	; () banked
 27026  0071CA  6F60               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 27027                           
 27028                           ;memory.c: 190: EEADR = (bAdd & 0xFF);
 27029  0071CC  C060  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
 27030                           
 27031                           ;memory.c: 191: EECON1bits.CFGS = 0;
 27032  0071D0  9CA6               	bcf	4006,6,c	;volatile
 27033                           
 27034                           ;memory.c: 192: EECON1bits.EEPGD = 0;
 27035  0071D2  9EA6               	bcf	4006,7,c	;volatile
 27036                           
 27037                           ;memory.c: 193: EECON1bits.RD = 1;
 27038  0071D4  80A6               	bsf	4006,0,c	;volatile
 27039                           
 27040                           ;memory.c: 194: __nop();
 27041  0071D6  F000               	nop	
 27042                           
 27043                           ;memory.c: 195: __nop();
 27044  0071D8  F000               	nop	
 27045                           
 27046                           ;memory.c: 197: return (EEDATA);
 27047  0071DA  50A8               	movf	4008,w,c	;volatile
 27048  0071DC  D000               	goto	l1460
 27049  0071DE                     l1460:
 27050  0071DE  0012               	return		;funcret
 27051  0071E0                     __end_of_DATAEE_ReadByte:
 27052                           	opt stack 0
 27053                           tblptru	equ	0xFF8
 27054                           tblptrh	equ	0xFF7
 27055                           tblptrl	equ	0xFF6
 27056                           tablat	equ	0xFF5
 27057                           prodh	equ	0xFF4
 27058                           prodl	equ	0xFF3
 27059                           intcon	equ	0xFF2
 27060                           intcon2	equ	0xFF1
 27061                           intcon3	equ	0xFF0
 27062                           indf0	equ	0xFEF
 27063                           postinc0	equ	0xFEE
 27064                           fsr0h	equ	0xFEA
 27065                           fsr0l	equ	0xFE9
 27066                           wreg	equ	0xFE8
 27067                           indf1	equ	0xFE7
 27068                           postdec1	equ	0xFE5
 27069                           fsr1h	equ	0xFE2
 27070                           fsr1l	equ	0xFE1
 27071                           indf2	equ	0xFDF
 27072                           postinc2	equ	0xFDE
 27073                           postdec2	equ	0xFDD
 27074                           plusw2	equ	0xFDB
 27075                           fsr2h	equ	0xFDA
 27076                           fsr2l	equ	0xFD9
 27077                           status	equ	0xFD8
 27078                           
 27079 ;; *************** function _INTERRUPT_InterruptManager *****************
 27080 ;; Defined at:
 27081 ;;		line 56 in file "../Includes/MccGenerated/interrupt_manager.c"
 27082 ;; Parameters:    Size  Location     Type
 27083 ;;		None
 27084 ;; Auto vars:     Size  Location     Type
 27085 ;;		None
 27086 ;; Return value:  Size  Location     Type
 27087 ;;                  1    wreg      void 
 27088 ;; Registers used:
 27089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 27090 ;; Tracked objects:
 27091 ;;		On entry : 0/0
 27092 ;;		On exit  : 0/0
 27093 ;;		Unchanged: 0/0
 27094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27095 ;;      Params:         0       0       0       0       0       0       0       0       0
 27096 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27097 ;;      Temps:         14       0       0       0       0       0       0       0       0
 27098 ;;      Totals:        14       0       0       0       0       0       0       0       0
 27099 ;;Total ram usage:       14 bytes
 27100 ;; Hardware stack levels used:    1
 27101 ;; Hardware stack levels required when called:   10
 27102 ;; This function calls:
 27103 ;;		_CMP1_ISR
 27104 ;;		_EUSART_Receive_ISR
 27105 ;;		_EUSART_Transmit_ISR
 27106 ;;		_TMR1_ISR
 27107 ;;		_TMR3_ISR
 27108 ;;		_TMRapp_Tick
 27109 ;;		_USBDeviceTasks
 27110 ;;		_USBapp_setrxByteFlag
 27111 ;; This function is called by:
 27112 ;;		Interrupt level 2
 27113 ;; This function uses a non-reentrant model
 27114 ;;
 27115                           
 27116                           	psect	intcode
 27117  000008                     __pintcode:
 27118                           	opt stack 0
 27119  000008                     _INTERRUPT_InterruptManager:
 27120                           	opt stack 11
 27121                           
 27122                           ;incstack = 0
 27123  000008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 27124  00000A  CFFA F020          	movff	pclath,??_INTERRUPT_InterruptManager
 27125  00000E  CFFB F021          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 27126  000012  CFE9 F022          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 27127  000016  CFEA F023          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 27128  00001A  CFE1 F024          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 27129  00001E  CFE2 F025          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 27130  000022  CFD9 F026          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 27131  000026  CFDA F027          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 27132  00002A  CFF3 F028          	movff	prodl,??_INTERRUPT_InterruptManager+8
 27133  00002E  CFF4 F029          	movff	prodh,??_INTERRUPT_InterruptManager+9
 27134  000032  CFF6 F02A          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 27135  000036  CFF7 F02B          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 27136  00003A  CFF8 F02C          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 27137  00003E  CFF5 F02D          	movff	tablat,??_INTERRUPT_InterruptManager+13
 27138                           
 27139                           ;interrupt_manager.c: 59: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 27140  000042  A09D               	btfss	3997,0,c	;volatile
 27141  000044  D001               	goto	i2u1043_41
 27142  000046  D001               	goto	i2u1043_40
 27143  000048                     i2u1043_41:
 27144  000048  D009               	goto	i2l11611
 27145  00004A                     i2u1043_40:
 27146  00004A  A09E               	btfss	3998,0,c	;volatile
 27147  00004C  D001               	goto	i2u1044_41
 27148  00004E  D001               	goto	i2u1044_40
 27149  000050                     i2u1044_41:
 27150  000050  D005               	goto	i2l11611
 27151  000052                     i2u1044_40:
 27152                           
 27153                           ;interrupt_manager.c: 60: {
 27154                           ;interrupt_manager.c: 61: TMR1_ISR();
 27155  000052  EC48  F039         	call	_TMR1_ISR	;wreg free
 27156                           
 27157                           ;interrupt_manager.c: 63: TMRapp_Tick();
 27158  000056  EC7C  F039         	call	_TMRapp_Tick	;wreg free
 27159  00005A  D000               	goto	i2l11611
 27160  00005C                     i2l11611:
 27161                           
 27162                           ;interrupt_manager.c: 64: }
 27163                           ;interrupt_manager.c: 65: if(PIE2bits.TMR3IE == 1 && PIR2bits.TMR3IF == 1)
 27164  00005C  A2A0               	btfss	4000,1,c	;volatile
 27165  00005E  D001               	goto	i2u1045_41
 27166  000060  D001               	goto	i2u1045_40
 27167  000062                     i2u1045_41:
 27168  000062  D007               	goto	i2l1192
 27169  000064                     i2u1045_40:
 27170  000064  A2A1               	btfss	4001,1,c	;volatile
 27171  000066  D001               	goto	i2u1046_41
 27172  000068  D001               	goto	i2u1046_40
 27173  00006A                     i2u1046_41:
 27174  00006A  D003               	goto	i2l1192
 27175  00006C                     i2u1046_40:
 27176                           
 27177                           ;interrupt_manager.c: 66: {
 27178                           ;interrupt_manager.c: 67: TMR3_ISR();
 27179  00006C  EC45  F038         	call	_TMR3_ISR	;wreg free
 27180                           
 27181                           ;interrupt_manager.c: 68: }
 27182  000070  D03C               	goto	i2l1204
 27183  000072                     i2l1192:
 27184                           
 27185                           ;interrupt_manager.c: 69: else if( (PIE1bits.RCIE == 1) && (PIR1bits.RCIF == 1) )
 27186  000072  AA9D               	btfss	3997,5,c	;volatile
 27187  000074  D001               	goto	i2u1047_41
 27188  000076  D001               	goto	i2u1047_40
 27189  000078                     i2u1047_41:
 27190  000078  D009               	goto	i2l1194
 27191  00007A                     i2u1047_40:
 27192  00007A  AA9E               	btfss	3998,5,c	;volatile
 27193  00007C  D001               	goto	i2u1048_41
 27194  00007E  D001               	goto	i2u1048_40
 27195  000080                     i2u1048_41:
 27196  000080  D005               	goto	i2l1194
 27197  000082                     i2u1048_40:
 27198                           
 27199                           ;interrupt_manager.c: 70: {
 27200                           ;interrupt_manager.c: 71: USBapp_setrxByteFlag();
 27201  000082  EC79  F039         	call	_USBapp_setrxByteFlag	;wreg free
 27202                           
 27203                           ;interrupt_manager.c: 72: EUSART_Receive_ISR();
 27204  000086  EC6F  F036         	call	_EUSART_Receive_ISR	;wreg free
 27205                           
 27206                           ;interrupt_manager.c: 73: }
 27207  00008A  D02F               	goto	i2l1204
 27208  00008C                     i2l1194:
 27209                           
 27210                           ;interrupt_manager.c: 74: else if( (PIE1bits.TXIE == 1) && (PIR1bits.TXIF == 1) )
 27211  00008C  A89D               	btfss	3997,4,c	;volatile
 27212  00008E  D001               	goto	i2u1049_41
 27213  000090  D001               	goto	i2u1049_40
 27214  000092                     i2u1049_41:
 27215  000092  D007               	goto	i2l1196
 27216  000094                     i2u1049_40:
 27217  000094  A89E               	btfss	3998,4,c	;volatile
 27218  000096  D001               	goto	i2u1050_41
 27219  000098  D001               	goto	i2u1050_40
 27220  00009A                     i2u1050_41:
 27221  00009A  D003               	goto	i2l1196
 27222  00009C                     i2u1050_40:
 27223                           
 27224                           ;interrupt_manager.c: 75: {
 27225                           ;interrupt_manager.c: 76: EUSART_Transmit_ISR();
 27226  00009C  EC4E  F036         	call	_EUSART_Transmit_ISR	;wreg free
 27227                           
 27228                           ;interrupt_manager.c: 77: }
 27229  0000A0  D024               	goto	i2l1204
 27230  0000A2                     i2l1196:
 27231                           
 27232                           ;interrupt_manager.c: 78: else if(PIE2bits.C1IE == 1 && PIR2bits.C1IF == 1)
 27233  0000A2  ACA0               	btfss	4000,6,c	;volatile
 27234  0000A4  D001               	goto	i2u1051_41
 27235  0000A6  D001               	goto	i2u1051_40
 27236  0000A8                     i2u1051_41:
 27237  0000A8  D007               	goto	i2l1198
 27238  0000AA                     i2u1051_40:
 27239  0000AA  ACA1               	btfss	4001,6,c	;volatile
 27240  0000AC  D001               	goto	i2u1052_41
 27241  0000AE  D001               	goto	i2u1052_40
 27242  0000B0                     i2u1052_41:
 27243  0000B0  D003               	goto	i2l1198
 27244  0000B2                     i2u1052_40:
 27245                           
 27246                           ;interrupt_manager.c: 79: {
 27247                           ;interrupt_manager.c: 80: CMP1_ISR();
 27248  0000B2  EC85  F039         	call	_CMP1_ISR	;wreg free
 27249                           
 27250                           ;interrupt_manager.c: 81: }
 27251  0000B6  D019               	goto	i2l1204
 27252  0000B8                     i2l1198:
 27253                           
 27254                           ;interrupt_manager.c: 82: else if(INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1)
 27255  0000B8  A6F2               	btfss	intcon,3,c	;volatile
 27256  0000BA  D001               	goto	i2u1053_41
 27257  0000BC  D001               	goto	i2u1053_40
 27258  0000BE                     i2u1053_41:
 27259  0000BE  D00E               	goto	i2l11637
 27260  0000C0                     i2u1053_40:
 27261  0000C0  A0F2               	btfss	intcon,0,c	;volatile
 27262  0000C2  D001               	goto	i2u1054_41
 27263  0000C4  D001               	goto	i2u1054_40
 27264  0000C6                     i2u1054_41:
 27265  0000C6  D00A               	goto	i2l11637
 27266  0000C8                     i2u1054_40:
 27267                           
 27268                           ;interrupt_manager.c: 83: {
 27269                           ;interrupt_manager.c: 84: INTCONbits.IOCIF = 0;
 27270  0000C8  90F2               	bcf	intcon,0,c	;volatile
 27271                           
 27272                           ;interrupt_manager.c: 87: {
 27273                           ;interrupt_manager.c: 89: if(PORTBbits.RB7)
 27274  0000CA  AE81               	btfss	3969,7,c	;volatile
 27275  0000CC  D001               	goto	i2u1055_41
 27276  0000CE  D001               	goto	i2u1055_40
 27277  0000D0                     i2u1055_41:
 27278  0000D0  D002               	goto	i2l1201
 27279  0000D2                     i2u1055_40:
 27280                           
 27281                           ;interrupt_manager.c: 90: {
 27282                           ;interrupt_manager.c: 91: PORTAbits.RA7 = 1;
 27283  0000D2  8E80               	bsf	3968,7,c	;volatile
 27284                           
 27285                           ;interrupt_manager.c: 93: }
 27286  0000D4  D00A               	goto	i2l1204
 27287  0000D6                     i2l1201:
 27288                           
 27289                           ;interrupt_manager.c: 94: else
 27290                           ;interrupt_manager.c: 95: {
 27291                           ;interrupt_manager.c: 96: PORTAbits.RA7 = 0;
 27292  0000D6  9E80               	bcf	3968,7,c	;volatile
 27293  0000D8  D008               	goto	i2l1204
 27294                           
 27295                           ;interrupt_manager.c: 98: }
 27296                           ;interrupt_manager.c: 100: }
 27297                           ;interrupt_manager.c: 101: }
 27298  0000DA  D007               	goto	i2l1204
 27299  0000DC                     i2l11637:
 27300                           
 27301                           ;interrupt_manager.c: 102: else
 27302                           ;interrupt_manager.c: 103: {
 27303                           ;interrupt_manager.c: 105: USBDeviceTasks();
 27304  0000DC  EC00  F019         	call	_USBDeviceTasks	;wreg free
 27305  0000E0  D004               	goto	i2l1204
 27306  0000E2  D003               	goto	i2l1204
 27307  0000E4  D002               	goto	i2l1204
 27308  0000E6  D001               	goto	i2l1204
 27309  0000E8  D000               	goto	i2l1204
 27310  0000EA                     i2l1204:
 27311  0000EA  C02D  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 27312  0000EE  C02C  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 27313  0000F2  C02B  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 27314  0000F6  C02A  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 27315  0000FA  C029  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 27316  0000FE  C028  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 27317  000102  C027  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 27318  000106  C026  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 27319  00010A  C025  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 27320  00010E  C024  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 27321  000112  C023  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 27322  000116  C022  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 27323  00011A  C021  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 27324  00011E  C020  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 27325  000122  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 27326  000124  0011               	retfie		f
 27327  000126                     __end_of_INTERRUPT_InterruptManager:
 27328                           	opt stack 0
 27329                           pclatu	equ	0xFFB
 27330                           pclath	equ	0xFFA
 27331                           tblptru	equ	0xFF8
 27332                           tblptrh	equ	0xFF7
 27333                           tblptrl	equ	0xFF6
 27334                           tablat	equ	0xFF5
 27335                           prodh	equ	0xFF4
 27336                           prodl	equ	0xFF3
 27337                           intcon	equ	0xFF2
 27338                           intcon2	equ	0xFF1
 27339                           intcon3	equ	0xFF0
 27340                           indf0	equ	0xFEF
 27341                           postinc0	equ	0xFEE
 27342                           fsr0h	equ	0xFEA
 27343                           fsr0l	equ	0xFE9
 27344                           wreg	equ	0xFE8
 27345                           indf1	equ	0xFE7
 27346                           postdec1	equ	0xFE5
 27347                           fsr1h	equ	0xFE2
 27348                           fsr1l	equ	0xFE1
 27349                           indf2	equ	0xFDF
 27350                           postinc2	equ	0xFDE
 27351                           postdec2	equ	0xFDD
 27352                           plusw2	equ	0xFDB
 27353                           fsr2h	equ	0xFDA
 27354                           fsr2l	equ	0xFD9
 27355                           status	equ	0xFD8
 27356                           
 27357 ;; *************** function _USBapp_setrxByteFlag *****************
 27358 ;; Defined at:
 27359 ;;		line 263 in file "../Includes/Board/USBapp.c"
 27360 ;; Parameters:    Size  Location     Type
 27361 ;;		None
 27362 ;; Auto vars:     Size  Location     Type
 27363 ;;		None
 27364 ;; Return value:  Size  Location     Type
 27365 ;;                  1    wreg      void 
 27366 ;; Registers used:
 27367 ;;		wreg, status,2
 27368 ;; Tracked objects:
 27369 ;;		On entry : 0/0
 27370 ;;		On exit  : 0/0
 27371 ;;		Unchanged: 0/0
 27372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27373 ;;      Params:         0       0       0       0       0       0       0       0       0
 27374 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27375 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27376 ;;      Totals:         0       0       0       0       0       0       0       0       0
 27377 ;;Total ram usage:        0 bytes
 27378 ;; Hardware stack levels used:    1
 27379 ;; This function calls:
 27380 ;;		Nothing
 27381 ;; This function is called by:
 27382 ;;		_INTERRUPT_InterruptManager
 27383 ;; This function uses a non-reentrant model
 27384 ;;
 27385                           
 27386                           	psect	text104
 27387  0072F2                     __ptext104:
 27388                           	opt stack 0
 27389  0072F2                     _USBapp_setrxByteFlag:
 27390                           	opt stack 20
 27391                           
 27392                           ;USBapp.c: 265: rxByteFlag = 1;
 27393                           
 27394                           ;incstack = 0
 27395  0072F2  0E01               	movlw	1
 27396  0072F4  6E54               	movwf	_rxByteFlag,c	;volatile
 27397  0072F6  0012               	return		;funcret
 27398  0072F8                     __end_of_USBapp_setrxByteFlag:
 27399                           	opt stack 0
 27400                           pclatu	equ	0xFFB
 27401                           pclath	equ	0xFFA
 27402                           tblptru	equ	0xFF8
 27403                           tblptrh	equ	0xFF7
 27404                           tblptrl	equ	0xFF6
 27405                           tablat	equ	0xFF5
 27406                           prodh	equ	0xFF4
 27407                           prodl	equ	0xFF3
 27408                           intcon	equ	0xFF2
 27409                           intcon2	equ	0xFF1
 27410                           intcon3	equ	0xFF0
 27411                           indf0	equ	0xFEF
 27412                           postinc0	equ	0xFEE
 27413                           fsr0h	equ	0xFEA
 27414                           fsr0l	equ	0xFE9
 27415                           wreg	equ	0xFE8
 27416                           indf1	equ	0xFE7
 27417                           postdec1	equ	0xFE5
 27418                           fsr1h	equ	0xFE2
 27419                           fsr1l	equ	0xFE1
 27420                           indf2	equ	0xFDF
 27421                           postinc2	equ	0xFDE
 27422                           postdec2	equ	0xFDD
 27423                           plusw2	equ	0xFDB
 27424                           fsr2h	equ	0xFDA
 27425                           fsr2l	equ	0xFD9
 27426                           status	equ	0xFD8
 27427                           
 27428 ;; *************** function _USBDeviceTasks *****************
 27429 ;; Defined at:
 27430 ;;		line 428 in file "../Includes/Usb/Framework/usb_device.c"
 27431 ;; Parameters:    Size  Location     Type
 27432 ;;		None
 27433 ;; Auto vars:     Size  Location     Type
 27434 ;;  i               1   30[COMRAM] unsigned char 
 27435 ;; Return value:  Size  Location     Type
 27436 ;;                  1    wreg      void 
 27437 ;; Registers used:
 27438 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 27439 ;; Tracked objects:
 27440 ;;		On entry : 0/0
 27441 ;;		On exit  : 0/0
 27442 ;;		Unchanged: 0/0
 27443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27444 ;;      Params:         0       0       0       0       0       0       0       0       0
 27445 ;;      Locals:         1       0       0       0       0       0       0       0       0
 27446 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27447 ;;      Totals:         1       0       0       0       0       0       0       0       0
 27448 ;;Total ram usage:        1 bytes
 27449 ;; Hardware stack levels used:    1
 27450 ;; Hardware stack levels required when called:    9
 27451 ;; This function calls:
 27452 ;;		_USBCtrlEPAllowStatusStage
 27453 ;;		_USBCtrlEPService
 27454 ;;		_USBStallHandler
 27455 ;;		_USBSuspend
 27456 ;;		_USBWakeFromSuspend
 27457 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27458 ;;		i2_USBDeviceInit
 27459 ;; This function is called by:
 27460 ;;		_INTERRUPT_InterruptManager
 27461 ;; This function uses a non-reentrant model
 27462 ;;
 27463                           
 27464                           	psect	text105
 27465  003200                     __ptext105:
 27466                           	opt stack 0
 27467  003200                     _USBDeviceTasks:
 27468                           	opt stack 11
 27469                           
 27470                           ;usb_device.c: 430: uint8_t i;
 27471                           ;usb_device.c: 432: if(USBDeviceState == ATTACHED_STATE)
 27472                           
 27473                           ;incstack = 0
 27474  003200  0100               	movlb	0	; () banked
 27475  003202  05DE               	decf	_USBDeviceState& (0+255),w,b	;volatile
 27476  003204  A4D8               	btfss	status,2,c
 27477  003206  D001               	goto	i2u1006_41
 27478  003208  D001               	goto	i2u1006_40
 27479  00320A                     i2u1006_41:
 27480  00320A  D00D               	goto	i2l11323
 27481  00320C                     i2u1006_40:
 27482                           
 27483                           ; BSR set to: 0
 27484                           ;usb_device.c: 433: {
 27485                           ;usb_device.c: 443: if(!UCONbits.SE0)
 27486  00320C  BA60               	btfsc	3936,5,c	;volatile
 27487  00320E  D001               	goto	i2u1007_41
 27488  003210  D001               	goto	i2u1007_40
 27489  003212                     i2u1007_41:
 27490  003212  D009               	goto	i2l11323
 27491  003214                     i2u1007_40:
 27492                           
 27493                           ; BSR set to: 0
 27494                           ;usb_device.c: 444: {
 27495                           ;usb_device.c: 445: {UIR = 0;};
 27496  003214  0E00               	movlw	0
 27497  003216  6E65               	movwf	3941,c	;volatile
 27498                           
 27499                           ; BSR set to: 0
 27500                           ;usb_device.c: 446: UIEbits.URSTIE = 1;
 27501  003218  8064               	bsf	3940,0,c	;volatile
 27502                           
 27503                           ; BSR set to: 0
 27504                           ;usb_device.c: 447: UIEbits.IDLEIE = 1;
 27505  00321A  8864               	bsf	3940,4,c	;volatile
 27506                           
 27507                           ;usb_device.c: 448: USBDeviceState = POWERED_STATE;
 27508  00321C  0E02               	movlw	2
 27509  00321E  0100               	movlb	0	; () banked
 27510  003220  6FDE               	movwf	_USBDeviceState& (0+255),b	;volatile
 27511  003222  D001               	goto	i2l11323
 27512                           
 27513                           ; BSR set to: 0
 27514  003224  D000               	goto	i2l11323
 27515  003226                     i2l11323:
 27516                           
 27517                           ; BSR set to: 0
 27518                           ;usb_device.c: 449: }
 27519                           ;usb_device.c: 450: }
 27520                           ;usb_device.c: 454: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 27521  003226  A465               	btfss	3941,2,c	;volatile
 27522  003228  D001               	goto	i2u1008_41
 27523  00322A  D001               	goto	i2u1008_40
 27524  00322C                     i2u1008_41:
 27525  00322C  D008               	goto	i2l11331
 27526  00322E                     i2u1008_40:
 27527                           
 27528                           ; BSR set to: 0
 27529  00322E  A464               	btfss	3940,2,c	;volatile
 27530  003230  D001               	goto	i2u1009_41
 27531  003232  D001               	goto	i2u1009_40
 27532  003234                     i2u1009_41:
 27533  003234  D004               	goto	i2l11331
 27534  003236                     i2u1009_40:
 27535                           
 27536                           ; BSR set to: 0
 27537                           ;usb_device.c: 455: {
 27538                           ;usb_device.c: 456: (UIR &= 0xFB);
 27539  003236  9465               	bcf	3941,2,c	;volatile
 27540                           
 27541                           ; BSR set to: 0
 27542                           ;usb_device.c: 457: USBWakeFromSuspend();
 27543  003238  EC9D  F037         	call	_USBWakeFromSuspend	;wreg free
 27544  00323C  D000               	goto	i2l11331
 27545  00323E                     i2l11331:
 27546                           
 27547                           ;usb_device.c: 458: }
 27548                           ;usb_device.c: 463: if(UCONbits.SUSPND==1)
 27549  00323E  A260               	btfss	3936,1,c	;volatile
 27550  003240  D001               	goto	i2u1010_41
 27551  003242  D001               	goto	i2u1010_40
 27552  003244                     i2u1010_41:
 27553  003244  D002               	goto	i2l1734
 27554  003246                     i2u1010_40:
 27555                           
 27556                           ;usb_device.c: 464: {
 27557                           ;usb_device.c: 465: PIR3bits.USBIF = 0;;
 27558  003246  94A4               	bcf	4004,2,c	;volatile
 27559                           
 27560                           ;usb_device.c: 466: return;
 27561  003248  D0C3               	goto	i2l1735
 27562  00324A                     i2l1734:
 27563                           
 27564                           ;usb_device.c: 467: }
 27565                           ;usb_device.c: 479: if(UIRbits.URSTIF && UIEbits.URSTIE)
 27566  00324A  A065               	btfss	3941,0,c	;volatile
 27567  00324C  D001               	goto	i2u1011_41
 27568  00324E  D001               	goto	i2u1011_40
 27569  003250                     i2u1011_41:
 27570  003250  D00C               	goto	i2l11345
 27571  003252                     i2u1011_40:
 27572  003252  A064               	btfss	3940,0,c	;volatile
 27573  003254  D001               	goto	i2u1012_41
 27574  003256  D001               	goto	i2u1012_40
 27575  003258                     i2u1012_41:
 27576  003258  D008               	goto	i2l11345
 27577  00325A                     i2u1012_40:
 27578                           
 27579                           ;usb_device.c: 480: {
 27580                           ;usb_device.c: 481: USBDeviceInit();
 27581  00325A  EC05  F01D         	call	i2_USBDeviceInit	;wreg free
 27582                           
 27583                           ;usb_device.c: 485: {PIE3bits.USBIE = 1;};
 27584  00325E  84A3               	bsf	4003,2,c	;volatile
 27585                           
 27586                           ;usb_device.c: 487: USBDeviceState = DEFAULT_STATE;
 27587  003260  0E04               	movlw	4
 27588  003262  0100               	movlb	0	; () banked
 27589  003264  6FDE               	movwf	_USBDeviceState& (0+255),b	;volatile
 27590                           
 27591                           ; BSR set to: 0
 27592                           ;usb_device.c: 489: (UIR &= 0xFE);
 27593  003266  9065               	bcf	3941,0,c	;volatile
 27594  003268  D000               	goto	i2l11345
 27595  00326A                     i2l11345:
 27596                           
 27597                           ;usb_device.c: 490: }
 27598                           ;usb_device.c: 495: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 27599  00326A  A865               	btfss	3941,4,c	;volatile
 27600  00326C  D001               	goto	i2u1013_41
 27601  00326E  D001               	goto	i2u1013_40
 27602  003270                     i2u1013_41:
 27603  003270  D008               	goto	i2l11353
 27604  003272                     i2u1013_40:
 27605  003272  A864               	btfss	3940,4,c	;volatile
 27606  003274  D001               	goto	i2u1014_41
 27607  003276  D001               	goto	i2u1014_40
 27608  003278                     i2u1014_41:
 27609  003278  D004               	goto	i2l11353
 27610  00327A                     i2u1014_40:
 27611                           
 27612                           ;usb_device.c: 496: {
 27613                           ;usb_device.c: 497: USBSuspend();
 27614  00327A  EC1C  F038         	call	_USBSuspend	;wreg free
 27615                           
 27616                           ;usb_device.c: 498: (UIR &= 0xEF);
 27617  00327E  9865               	bcf	3941,4,c	;volatile
 27618  003280  D000               	goto	i2l11353
 27619  003282                     i2l11353:
 27620                           
 27621                           ;usb_device.c: 499: }
 27622                           ;usb_device.c: 501: if(UIRbits.SOFIF)
 27623  003282  AC65               	btfss	3941,6,c	;volatile
 27624  003284  D001               	goto	i2u1015_41
 27625  003286  D001               	goto	i2u1015_40
 27626  003288                     i2u1015_41:
 27627  003288  D024               	goto	i2l11369
 27628  00328A                     i2u1015_40:
 27629                           
 27630                           ;usb_device.c: 502: {
 27631                           ;usb_device.c: 503: if(UIEbits.SOFIE)
 27632  00328A  AC64               	btfss	3940,6,c	;volatile
 27633  00328C  D001               	goto	i2u1016_41
 27634  00328E  D001               	goto	i2u1016_40
 27635  003290                     i2u1016_41:
 27636  003290  D00F               	goto	i2l11359
 27637  003292                     i2u1016_40:
 27638                           
 27639                           ;usb_device.c: 504: {
 27640                           ;usb_device.c: 505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 27641  003292  0E00               	movlw	0
 27642  003294  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27643  003296  0E73               	movlw	115
 27644  003298  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27645  00329A  0E00               	movlw	0
 27646  00329C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 27647  00329E  0E00               	movlw	0
 27648  0032A0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 27649  0032A2  0E00               	movlw	0
 27650  0032A4  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27651  0032A6  0E01               	movlw	1
 27652  0032A8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27653  0032AA  EC12  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27654  0032AE  D000               	goto	i2l11359
 27655  0032B0                     i2l11359:
 27656                           
 27657                           ;usb_device.c: 506: }
 27658                           ;usb_device.c: 507: (UIR &= 0xBF);
 27659  0032B0  9C65               	bcf	3941,6,c	;volatile
 27660                           
 27661                           ;usb_device.c: 512: if(USBStatusStageTimeoutCounter != 0u)
 27662  0032B2  504B               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 27663  0032B4  B4D8               	btfsc	status,2,c
 27664  0032B6  D001               	goto	i2u1017_41
 27665  0032B8  D001               	goto	i2u1017_40
 27666  0032BA                     i2u1017_41:
 27667  0032BA  D002               	goto	i2l11365
 27668  0032BC                     i2u1017_40:
 27669                           
 27670                           ;usb_device.c: 513: {
 27671                           ;usb_device.c: 514: USBStatusStageTimeoutCounter--;
 27672  0032BC  064B               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 27673  0032BE  D000               	goto	i2l11365
 27674  0032C0                     i2l11365:
 27675                           
 27676                           ;usb_device.c: 515: }
 27677                           ;usb_device.c: 521: if(USBStatusStageTimeoutCounter == 0)
 27678  0032C0  504B               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 27679  0032C2  A4D8               	btfss	status,2,c
 27680  0032C4  D001               	goto	i2u1018_41
 27681  0032C6  D001               	goto	i2u1018_40
 27682  0032C8                     i2u1018_41:
 27683  0032C8  D004               	goto	i2l11369
 27684  0032CA                     i2u1018_40:
 27685                           
 27686                           ;usb_device.c: 522: {
 27687                           ;usb_device.c: 523: USBCtrlEPAllowStatusStage();
 27688  0032CA  EC42  F029         	call	_USBCtrlEPAllowStatusStage	;wreg free
 27689  0032CE  D001               	goto	i2l11369
 27690  0032D0  D000               	goto	i2l11369
 27691  0032D2                     i2l11369:
 27692                           
 27693                           ;usb_device.c: 524: }
 27694                           ;usb_device.c: 525: }
 27695                           ;usb_device.c: 527: if(UIRbits.STALLIF && UIEbits.STALLIE)
 27696  0032D2  AA65               	btfss	3941,5,c	;volatile
 27697  0032D4  D001               	goto	i2u1019_41
 27698  0032D6  D001               	goto	i2u1019_40
 27699  0032D8                     i2u1019_41:
 27700  0032D8  D007               	goto	i2l11375
 27701  0032DA                     i2u1019_40:
 27702  0032DA  AA64               	btfss	3940,5,c	;volatile
 27703  0032DC  D001               	goto	i2u1020_41
 27704  0032DE  D001               	goto	i2u1020_40
 27705  0032E0                     i2u1020_41:
 27706  0032E0  D003               	goto	i2l11375
 27707  0032E2                     i2u1020_40:
 27708                           
 27709                           ;usb_device.c: 528: {
 27710                           ;usb_device.c: 529: USBStallHandler();
 27711  0032E2  EC9C  F035         	call	_USBStallHandler	;wreg free
 27712  0032E6  D000               	goto	i2l11375
 27713  0032E8                     i2l11375:
 27714                           
 27715                           ;usb_device.c: 530: }
 27716                           ;usb_device.c: 532: if(UIRbits.UERRIF && UIEbits.UERRIE)
 27717  0032E8  A265               	btfss	3941,1,c	;volatile
 27718  0032EA  D001               	goto	i2u1021_41
 27719  0032EC  D001               	goto	i2u1021_40
 27720  0032EE                     i2u1021_41:
 27721  0032EE  D014               	goto	i2l11383
 27722  0032F0                     i2u1021_40:
 27723  0032F0  A264               	btfss	3940,1,c	;volatile
 27724  0032F2  D001               	goto	i2u1022_41
 27725  0032F4  D001               	goto	i2u1022_40
 27726  0032F6                     i2u1022_41:
 27727  0032F6  D010               	goto	i2l11383
 27728  0032F8                     i2u1022_40:
 27729                           
 27730                           ;usb_device.c: 533: {
 27731                           ;usb_device.c: 534: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 27732  0032F8  0E7F               	movlw	127
 27733  0032FA  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27734  0032FC  680E               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27735  0032FE  0E00               	movlw	0
 27736  003300  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 27737  003302  0E00               	movlw	0
 27738  003304  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 27739  003306  0E00               	movlw	0
 27740  003308  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27741  00330A  0E01               	movlw	1
 27742  00330C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27743  00330E  EC12  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27744                           
 27745                           ;usb_device.c: 535: {UEIR = 0;};
 27746  003312  0E00               	movlw	0
 27747  003314  6E67               	movwf	3943,c	;volatile
 27748  003316  D000               	goto	i2l11383
 27749  003318                     i2l11383:
 27750                           
 27751                           ;usb_device.c: 536: }
 27752                           ;usb_device.c: 543: if(USBDeviceState < DEFAULT_STATE)
 27753  003318  0E04               	movlw	4
 27754  00331A  0100               	movlb	0	; () banked
 27755  00331C  61DE               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 27756  00331E  D001               	goto	i2u1023_41
 27757  003320  D001               	goto	i2u1023_40
 27758  003322                     i2u1023_41:
 27759  003322  D002               	goto	i2l1744
 27760  003324                     i2u1023_40:
 27761                           
 27762                           ; BSR set to: 0
 27763                           ;usb_device.c: 544: {
 27764                           ;usb_device.c: 545: PIR3bits.USBIF = 0;;
 27765  003324  94A4               	bcf	4004,2,c	;volatile
 27766                           
 27767                           ;usb_device.c: 546: return;
 27768  003326  D054               	goto	i2l1735
 27769  003328                     i2l1744:
 27770                           
 27771                           ; BSR set to: 0
 27772                           ;usb_device.c: 547: }
 27773                           ;usb_device.c: 552: if(UIEbits.TRNIE)
 27774  003328  A664               	btfss	3940,3,c	;volatile
 27775  00332A  D001               	goto	i2u1024_41
 27776  00332C  D001               	goto	i2u1024_40
 27777  00332E                     i2u1024_41:
 27778  00332E  D04F               	goto	i2l1745
 27779  003330                     i2u1024_40:
 27780                           
 27781                           ; BSR set to: 0
 27782                           ;usb_device.c: 553: {
 27783                           ;usb_device.c: 554: for(i = 0; i < 4u; i++)
 27784  003330  0E00               	movlw	0
 27785  003332  6E1F               	movwf	USBDeviceTasks@i,c
 27786                           
 27787                           ; BSR set to: 0
 27788  003334  0E03               	movlw	3
 27789  003336  641F               	cpfsgt	USBDeviceTasks@i,c
 27790  003338  D001               	goto	i2u1025_41
 27791  00333A  D001               	goto	i2u1025_40
 27792  00333C                     i2u1025_41:
 27793  00333C  D002               	goto	i2l1746
 27794  00333E                     i2u1025_40:
 27795  00333E  D047               	goto	i2l1745
 27796                           
 27797                           ; BSR set to: 0
 27798  003340  D046               	goto	i2l1745
 27799  003342                     i2l1746:
 27800                           
 27801                           ;usb_device.c: 555: {
 27802                           ;usb_device.c: 556: if(UIRbits.TRNIF)
 27803  003342  A665               	btfss	3941,3,c	;volatile
 27804  003344  D001               	goto	i2u1026_41
 27805  003346  D001               	goto	i2u1026_40
 27806  003348                     i2u1026_41:
 27807  003348  D042               	goto	i2l1745
 27808  00334A                     i2u1026_40:
 27809                           
 27810                           ;usb_device.c: 557: {
 27811                           ;usb_device.c: 559: USTATcopy.Val = USTAT;
 27812  00334A  CF61 F058          	movff	3937,_USTATcopy	;volatile
 27813                           
 27814                           ;usb_device.c: 560: endpoint_number = USTATcopy.endpoint_number;
 27815  00334E  3058               	rrcf	_USTATcopy,w,c	;volatile
 27816  003350  32E8               	rrcf	wreg,f,c
 27817  003352  32E8               	rrcf	wreg,f,c
 27818  003354  0B0F               	andlw	15
 27819  003356  6E4C               	movwf	_endpoint_number,c	;volatile
 27820                           
 27821                           ;usb_device.c: 562: (UIR &= 0xF7);
 27822  003358  9665               	bcf	3941,3,c	;volatile
 27823                           
 27824                           ;usb_device.c: 566: if(USTATcopy.direction == 0)
 27825  00335A  B458               	btfsc	_USTATcopy,2,c	;volatile
 27826  00335C  D001               	goto	i2u1027_41
 27827  00335E  D001               	goto	i2u1027_40
 27828  003360                     i2u1027_41:
 27829  003360  D00B               	goto	i2l11403
 27830  003362                     i2u1027_40:
 27831                           
 27832                           ;usb_device.c: 567: {
 27833                           ;usb_device.c: 568: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 27834  003362  504C               	movf	_endpoint_number,w,c	;volatile
 27835  003364  0D01               	mullw	1
 27836  003366  0EB7               	movlw	low _ep_data_out
 27837  003368  24F3               	addwf	prodl,w,c
 27838  00336A  6ED9               	movwf	fsr2l,c
 27839  00336C  0E00               	movlw	high _ep_data_out
 27840  00336E  20F4               	addwfc	prodh,w,c
 27841  003370  6EDA               	movwf	fsr2h,c
 27842  003372  0100               	movlb	0	; () banked
 27843  003374  70DF               	btg	indf2,0,c
 27844                           
 27845                           ;usb_device.c: 569: }
 27846  003376  D00B               	goto	i2l11405
 27847  003378                     i2l11403:
 27848                           
 27849                           ;usb_device.c: 570: else
 27850                           ;usb_device.c: 571: {
 27851                           ;usb_device.c: 572: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 27852  003378  504C               	movf	_endpoint_number,w,c	;volatile
 27853  00337A  0D01               	mullw	1
 27854  00337C  0EBA               	movlw	low _ep_data_in
 27855  00337E  24F3               	addwf	prodl,w,c
 27856  003380  6ED9               	movwf	fsr2l,c
 27857  003382  0E00               	movlw	high _ep_data_in
 27858  003384  20F4               	addwfc	prodh,w,c
 27859  003386  6EDA               	movwf	fsr2h,c
 27860  003388  0100               	movlb	0	; () banked
 27861  00338A  70DF               	btg	indf2,0,c
 27862  00338C  D000               	goto	i2l11405
 27863  00338E                     i2l11405:
 27864                           
 27865                           ; BSR set to: 0
 27866                           ;usb_device.c: 573: }
 27867                           ;usb_device.c: 577: if(endpoint_number == 0)
 27868  00338E  504C               	movf	_endpoint_number,w,c	;volatile
 27869  003390  A4D8               	btfss	status,2,c
 27870  003392  D001               	goto	i2u1028_41
 27871  003394  D001               	goto	i2u1028_40
 27872  003396                     i2u1028_41:
 27873  003396  D003               	goto	i2l11409
 27874  003398                     i2u1028_40:
 27875                           
 27876                           ; BSR set to: 0
 27877                           ;usb_device.c: 578: {
 27878                           ;usb_device.c: 579: USBCtrlEPService();
 27879  003398  EC54  F028         	call	_USBCtrlEPService	;wreg free
 27880                           
 27881                           ;usb_device.c: 580: }
 27882  00339C  D011               	goto	i2l11411
 27883  00339E                     i2l11409:
 27884                           
 27885                           ;usb_device.c: 581: else
 27886                           ;usb_device.c: 582: {
 27887                           ;usb_device.c: 583: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 27888  00339E  0E00               	movlw	0
 27889  0033A0  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27890  0033A2  0E72               	movlw	114
 27891  0033A4  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27892  0033A6  0E58               	movlw	low _USTATcopy
 27893  0033A8  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 27894  0033AA  0E00               	movlw	high _USTATcopy
 27895  0033AC  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 27896  0033AE  0E00               	movlw	0
 27897  0033B0  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27898  0033B2  0E00               	movlw	0
 27899  0033B4  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27900  0033B6  EC12  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27901  0033BA  D002               	goto	i2l11411
 27902                           
 27903                           ;usb_device.c: 584: }
 27904                           ;usb_device.c: 585: }
 27905  0033BC  D001               	goto	i2l11411
 27906                           
 27907                           ;usb_device.c: 586: else
 27908                           ;usb_device.c: 587: {
 27909                           ;usb_device.c: 588: break;
 27910  0033BE  D007               	goto	i2l1745
 27911  0033C0                     i2l11411:
 27912  0033C0  2A1F               	incf	USBDeviceTasks@i,f,c
 27913  0033C2  0E03               	movlw	3
 27914  0033C4  641F               	cpfsgt	USBDeviceTasks@i,c
 27915  0033C6  D001               	goto	i2u1029_41
 27916  0033C8  D001               	goto	i2u1029_40
 27917  0033CA                     i2u1029_41:
 27918  0033CA  D7BB               	goto	i2l1746
 27919  0033CC                     i2u1029_40:
 27920  0033CC  D000               	goto	i2l1745
 27921  0033CE                     i2l1745:
 27922                           
 27923                           ;usb_device.c: 589: }
 27924                           ;usb_device.c: 590: }
 27925                           ;usb_device.c: 591: }
 27926                           ;usb_device.c: 593: PIR3bits.USBIF = 0;;
 27927  0033CE  94A4               	bcf	4004,2,c	;volatile
 27928  0033D0                     i2l1735:
 27929  0033D0  0012               	return		;funcret
 27930  0033D2                     __end_of_USBDeviceTasks:
 27931                           	opt stack 0
 27932                           pclatu	equ	0xFFB
 27933                           pclath	equ	0xFFA
 27934                           tblptru	equ	0xFF8
 27935                           tblptrh	equ	0xFF7
 27936                           tblptrl	equ	0xFF6
 27937                           tablat	equ	0xFF5
 27938                           prodh	equ	0xFF4
 27939                           prodl	equ	0xFF3
 27940                           intcon	equ	0xFF2
 27941                           intcon2	equ	0xFF1
 27942                           intcon3	equ	0xFF0
 27943                           indf0	equ	0xFEF
 27944                           postinc0	equ	0xFEE
 27945                           fsr0h	equ	0xFEA
 27946                           fsr0l	equ	0xFE9
 27947                           wreg	equ	0xFE8
 27948                           indf1	equ	0xFE7
 27949                           postdec1	equ	0xFE5
 27950                           fsr1h	equ	0xFE2
 27951                           fsr1l	equ	0xFE1
 27952                           indf2	equ	0xFDF
 27953                           postinc2	equ	0xFDE
 27954                           postdec2	equ	0xFDD
 27955                           plusw2	equ	0xFDB
 27956                           fsr2h	equ	0xFDA
 27957                           fsr2l	equ	0xFD9
 27958                           status	equ	0xFD8
 27959                           
 27960 ;; *************** function i2_USBDeviceInit *****************
 27961 ;; Defined at:
 27962 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 27963 ;; Parameters:    Size  Location     Type
 27964 ;;		None
 27965 ;; Auto vars:     Size  Location     Type
 27966 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 27967 ;; Return value:  Size  Location     Type
 27968 ;;                  1    wreg      void 
 27969 ;; Registers used:
 27970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27971 ;; Tracked objects:
 27972 ;;		On entry : 0/0
 27973 ;;		On exit  : 0/0
 27974 ;;		Unchanged: 0/0
 27975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27976 ;;      Params:         0       0       0       0       0       0       0       0       0
 27977 ;;      Locals:         1       0       0       0       0       0       0       0       0
 27978 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27979 ;;      Totals:         1       0       0       0       0       0       0       0       0
 27980 ;;Total ram usage:        1 bytes
 27981 ;; Hardware stack levels used:    1
 27982 ;; Hardware stack levels required when called:    1
 27983 ;; This function calls:
 27984 ;;		i2_memset
 27985 ;; This function is called by:
 27986 ;;		_USBDeviceTasks
 27987 ;; This function uses a non-reentrant model
 27988 ;;
 27989                           
 27990                           	psect	text106
 27991  003A0A                     __ptext106:
 27992                           	opt stack 0
 27993  003A0A                     i2_USBDeviceInit:
 27994                           	opt stack 18
 27995                           
 27996                           ;usb_device.c: 239: uint8_t i;
 27997                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 27998                           
 27999                           ;incstack = 0
 28000  003A0A  94A3               	bcf	4003,2,c	;volatile
 28001                           
 28002                           ;usb_device.c: 244: {UEIR = 0;};
 28003  003A0C  0E00               	movlw	0
 28004  003A0E  6E67               	movwf	3943,c	;volatile
 28005                           
 28006                           ;usb_device.c: 247: {UIR = 0;};
 28007  003A10  0E00               	movlw	0
 28008  003A12  6E65               	movwf	3941,c	;volatile
 28009                           
 28010                           ;usb_device.c: 250: UEP0 = 0;
 28011  003A14  0E00               	movlw	0
 28012  003A16  6E6A               	movwf	3946,c	;volatile
 28013                           
 28014                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 28015  003A18  0E6B               	movlw	107
 28016  003A1A  6E01               	movwf	i2memset@p1,c
 28017  003A1C  0E0F               	movlw	15
 28018  003A1E  6E02               	movwf	i2memset@p1+1,c
 28019  003A20  0E00               	movlw	0
 28020  003A22  6E04               	movwf	i2memset@c+1,c
 28021  003A24  0E00               	movlw	0
 28022  003A26  6E03               	movwf	i2memset@c,c
 28023  003A28  0E00               	movlw	0
 28024  003A2A  6E06               	movwf	i2memset@n+1,c
 28025  003A2C  0E02               	movlw	2
 28026  003A2E  6E05               	movwf	i2memset@n,c
 28027  003A30  ECB9  F037         	call	i2_memset	;wreg free
 28028                           
 28029                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 28030  003A34  0E16               	movlw	22
 28031  003A36  6E62               	movwf	3938,c	;volatile
 28032  003A38  0E9F               	movlw	159
 28033  003A3A  6E66               	movwf	3942,c	;volatile
 28034  003A3C  0E7B               	movlw	123
 28035  003A3E  6E64               	movwf	3940,c	;volatile
 28036                           
 28037                           ;usb_device.c: 257: ;
 28038                           ;usb_device.c: 260: ;
 28039                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 28040  003A40  0E00               	movlw	0
 28041  003A42  6E09               	movwf	i2USBDeviceInit@i,c
 28042  003A44  0E0B               	movlw	11
 28043  003A46  6409               	cpfsgt	i2USBDeviceInit@i,c
 28044  003A48  D001               	goto	i2u973_41
 28045  003A4A  D001               	goto	i2u973_40
 28046  003A4C                     i2u973_41:
 28047  003A4C  D002               	goto	i2l10959
 28048  003A4E                     i2u973_40:
 28049  003A4E  D013               	goto	i2l1722
 28050  003A50  D012               	goto	i2l1722
 28051  003A52                     i2l10959:
 28052                           
 28053                           ;usb_device.c: 264: {
 28054                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 28055  003A52  5009               	movf	i2USBDeviceInit@i,w,c
 28056  003A54  0D04               	mullw	4
 28057  003A56  0E00               	movlw	0
 28058  003A58  24F3               	addwf	prodl,w,c
 28059  003A5A  6ED9               	movwf	fsr2l,c
 28060  003A5C  0E04               	movlw	4
 28061  003A5E  20F4               	addwfc	prodh,w,c
 28062  003A60  6EDA               	movwf	fsr2h,c
 28063  003A62  6ADE               	clrf	postinc2,c
 28064  003A64  6ADE               	clrf	postinc2,c
 28065  003A66  6ADE               	clrf	postinc2,c
 28066  003A68  6ADD               	clrf	postdec2,c
 28067  003A6A  2A09               	incf	i2USBDeviceInit@i,f,c
 28068  003A6C  0E0B               	movlw	11
 28069  003A6E  6409               	cpfsgt	i2USBDeviceInit@i,c
 28070  003A70  D001               	goto	i2u974_41
 28071  003A72  D001               	goto	i2u974_40
 28072  003A74                     i2u974_41:
 28073  003A74  D7EE               	goto	i2l10959
 28074  003A76                     i2u974_40:
 28075  003A76                     i2l1722:
 28076                           
 28077                           ;usb_device.c: 266: }
 28078                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 28079  003A76  8C60               	bsf	3936,6,c	;volatile
 28080                           
 28081                           ;usb_device.c: 272: UADDR = 0x00;
 28082  003A78  0E00               	movlw	0
 28083  003A7A  6E63               	movwf	3939,c	;volatile
 28084                           
 28085                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 28086  003A7C  9860               	bcf	3936,4,c	;volatile
 28087                           
 28088                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 28089  003A7E  9C60               	bcf	3936,6,c	;volatile
 28090                           
 28091                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 28092  003A80  D00A               	goto	i2l10979
 28093  003A82                     i2l10971:
 28094                           
 28095                           ;usb_device.c: 282: {
 28096                           ;usb_device.c: 283: (UIR &= 0xF7);
 28097  003A82  9665               	bcf	3941,3,c	;volatile
 28098                           
 28099                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 28100  003A84  0E00               	movlw	0
 28101  003A86  6E39               	movwf	_inPipes+3,c	;volatile
 28102                           
 28103                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 28104  003A88  0E00               	movlw	0
 28105  003A8A  6E31               	movwf	_outPipes+3,c	;volatile
 28106                           
 28107                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 28108  003A8C  0E00               	movlw	0
 28109  003A8E  6E33               	movwf	_outPipes+5,c	;volatile
 28110  003A90  0E00               	movlw	0
 28111  003A92  6E32               	movwf	_outPipes+4,c	;volatile
 28112  003A94  D000               	goto	i2l10979
 28113  003A96                     i2l10979:
 28114  003A96  B665               	btfsc	3941,3,c	;volatile
 28115  003A98  D001               	goto	i2u975_41
 28116  003A9A  D001               	goto	i2u975_40
 28117  003A9C                     i2u975_41:
 28118  003A9C  D7F2               	goto	i2l10971
 28119  003A9E                     i2u975_40:
 28120  003A9E  D000               	goto	i2l10981
 28121  003AA0                     i2l10981:
 28122                           
 28123                           ;usb_device.c: 288: }
 28124                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 28125  003AA0  0E01               	movlw	1
 28126  003AA2  0100               	movlb	0	; () banked
 28127  003AA4  6FD4               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 28128                           
 28129                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 28130  003AA6  0E01               	movlw	1
 28131  003AA8  0100               	movlb	0	; () banked
 28132  003AAA  6FD3               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 28133                           
 28134                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 28135  003AAC  0E00               	movlw	0
 28136  003AAE  0100               	movlb	0	; () banked
 28137  003AB0  6FD2               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 28138                           
 28139                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 28140  003AB2  0E00               	movlw	0
 28141  003AB4  0100               	movlb	0	; () banked
 28142  003AB6  6FD1               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 28143                           
 28144                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 28145  003AB8  0E00               	movlw	0
 28146  003ABA  0100               	movlb	0	; () banked
 28147  003ABC  6FD6               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 28148                           
 28149                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 28150  003ABE  0E00               	movlw	0
 28151  003AC0  6E09               	movwf	i2USBDeviceInit@i,c
 28152                           
 28153                           ; BSR set to: 0
 28154  003AC2  0E02               	movlw	2
 28155  003AC4  6409               	cpfsgt	i2USBDeviceInit@i,c
 28156  003AC6  D001               	goto	i2u976_41
 28157  003AC8  D001               	goto	i2u976_40
 28158  003ACA                     i2u976_41:
 28159  003ACA  D002               	goto	i2l10987
 28160  003ACC                     i2u976_40:
 28161  003ACC  D034               	goto	i2l10993
 28162                           
 28163                           ; BSR set to: 0
 28164  003ACE  D033               	goto	i2l10993
 28165  003AD0                     i2l10987:
 28166                           
 28167                           ;usb_device.c: 302: {
 28168                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 28169  003AD0  5009               	movf	i2USBDeviceInit@i,w,c
 28170  003AD2  0D02               	mullw	2
 28171  003AD4  0E3C               	movlw	low _pBDTEntryIn
 28172  003AD6  24F3               	addwf	prodl,w,c
 28173  003AD8  6ED9               	movwf	fsr2l,c
 28174  003ADA  0E00               	movlw	high _pBDTEntryIn
 28175  003ADC  20F4               	addwfc	prodh,w,c
 28176  003ADE  6EDA               	movwf	fsr2h,c
 28177  003AE0  0E00               	movlw	0
 28178  003AE2  6EDE               	movwf	postinc2,c
 28179  003AE4  0E00               	movlw	0
 28180  003AE6  6EDD               	movwf	postdec2,c
 28181                           
 28182                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 28183  003AE8  5009               	movf	i2USBDeviceInit@i,w,c
 28184  003AEA  0D02               	mullw	2
 28185  003AEC  0E40               	movlw	low _pBDTEntryOut
 28186  003AEE  24F3               	addwf	prodl,w,c
 28187  003AF0  6ED9               	movwf	fsr2l,c
 28188  003AF2  0E01               	movlw	high _pBDTEntryOut
 28189  003AF4  20F4               	addwfc	prodh,w,c
 28190  003AF6  6EDA               	movwf	fsr2h,c
 28191  003AF8  0E00               	movlw	0
 28192  003AFA  6EDE               	movwf	postinc2,c
 28193  003AFC  0E00               	movlw	0
 28194  003AFE  6EDD               	movwf	postdec2,c
 28195                           
 28196                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 28197  003B00  5009               	movf	i2USBDeviceInit@i,w,c
 28198  003B02  0D01               	mullw	1
 28199  003B04  0EBA               	movlw	low _ep_data_in
 28200  003B06  24F3               	addwf	prodl,w,c
 28201  003B08  6ED9               	movwf	fsr2l,c
 28202  003B0A  0E00               	movlw	high _ep_data_in
 28203  003B0C  20F4               	addwfc	prodh,w,c
 28204  003B0E  6EDA               	movwf	fsr2h,c
 28205  003B10  0E00               	movlw	0
 28206  003B12  6EDF               	movwf	indf2,c
 28207                           
 28208                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 28209  003B14  5009               	movf	i2USBDeviceInit@i,w,c
 28210  003B16  0D01               	mullw	1
 28211  003B18  0EB7               	movlw	low _ep_data_out
 28212  003B1A  24F3               	addwf	prodl,w,c
 28213  003B1C  6ED9               	movwf	fsr2l,c
 28214  003B1E  0E00               	movlw	high _ep_data_out
 28215  003B20  20F4               	addwfc	prodh,w,c
 28216  003B22  6EDA               	movwf	fsr2h,c
 28217  003B24  0E00               	movlw	0
 28218  003B26  6EDF               	movwf	indf2,c
 28219  003B28  2A09               	incf	i2USBDeviceInit@i,f,c
 28220  003B2A  0E02               	movlw	2
 28221  003B2C  6409               	cpfsgt	i2USBDeviceInit@i,c
 28222  003B2E  D001               	goto	i2u977_41
 28223  003B30  D001               	goto	i2u977_40
 28224  003B32                     i2u977_41:
 28225  003B32  D7CE               	goto	i2l10987
 28226  003B34                     i2u977_40:
 28227  003B34  D000               	goto	i2l10993
 28228  003B36                     i2l10993:
 28229                           
 28230                           ;usb_device.c: 307: }
 28231                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 28232  003B36  0E08               	movlw	8
 28233  003B38  6E3C               	movwf	_pBDTEntryIn,c
 28234  003B3A  0E04               	movlw	4
 28235  003B3C  6E3D               	movwf	_pBDTEntryIn+1,c
 28236                           
 28237                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 28238  003B3E  0E16               	movlw	22
 28239  003B40  6E6A               	movwf	3946,c	;volatile
 28240                           
 28241                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 28242  003B42  0E04               	movlw	4
 28243  003B44  0104               	movlb	4	; () banked
 28244  003B46  6F03               	movwf	3,b	;volatile
 28245  003B48  0E30               	movlw	48
 28246  003B4A  6F02               	movwf	2,b	;volatile
 28247                           
 28248                           ; BSR set to: 4
 28249                           ;usb_device.c: 315: BDT[0].CNT = 8;
 28250  003B4C  0E08               	movlw	8
 28251  003B4E  0104               	movlb	4	; () banked
 28252  003B50  6F01               	movwf	1,b	;volatile
 28253                           
 28254                           ; BSR set to: 4
 28255                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 28256  003B52  0E04               	movlw	4
 28257  003B54  0104               	movlb	4	; () banked
 28258  003B56  6F00               	movwf	0,b	;volatile
 28259                           
 28260                           ; BSR set to: 4
 28261                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 28262  003B58  0104               	movlb	4	; () banked
 28263  003B5A  8F00               	bsf	0,7,b	;volatile
 28264                           
 28265                           ; BSR set to: 4
 28266                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 28267  003B5C  0E00               	movlw	0
 28268  003B5E  6E59               	movwf	_USBActiveConfiguration,c	;volatile
 28269                           
 28270                           ; BSR set to: 4
 28271                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 28272  003B60  0E00               	movlw	0
 28273  003B62  0100               	movlb	0	; () banked
 28274  003B64  6FDE               	movwf	_USBDeviceState& (0+255),b	;volatile
 28275                           
 28276                           ; BSR set to: 0
 28277  003B66  0012               	return		;funcret
 28278  003B68                     __end_ofi2_USBDeviceInit:
 28279                           	opt stack 0
 28280                           pclatu	equ	0xFFB
 28281                           pclath	equ	0xFFA
 28282                           tblptru	equ	0xFF8
 28283                           tblptrh	equ	0xFF7
 28284                           tblptrl	equ	0xFF6
 28285                           tablat	equ	0xFF5
 28286                           prodh	equ	0xFF4
 28287                           prodl	equ	0xFF3
 28288                           intcon	equ	0xFF2
 28289                           intcon2	equ	0xFF1
 28290                           intcon3	equ	0xFF0
 28291                           indf0	equ	0xFEF
 28292                           postinc0	equ	0xFEE
 28293                           fsr0h	equ	0xFEA
 28294                           fsr0l	equ	0xFE9
 28295                           wreg	equ	0xFE8
 28296                           indf1	equ	0xFE7
 28297                           postdec1	equ	0xFE5
 28298                           fsr1h	equ	0xFE2
 28299                           fsr1l	equ	0xFE1
 28300                           indf2	equ	0xFDF
 28301                           postinc2	equ	0xFDE
 28302                           postdec2	equ	0xFDD
 28303                           plusw2	equ	0xFDB
 28304                           fsr2h	equ	0xFDA
 28305                           fsr2l	equ	0xFD9
 28306                           status	equ	0xFD8
 28307                           
 28308 ;; *************** function _USBWakeFromSuspend *****************
 28309 ;; Defined at:
 28310 ;;		line 1944 in file "../Includes/Usb/Framework/usb_device.c"
 28311 ;; Parameters:    Size  Location     Type
 28312 ;;		None
 28313 ;; Auto vars:     Size  Location     Type
 28314 ;;		None
 28315 ;; Return value:  Size  Location     Type
 28316 ;;                  1    wreg      void 
 28317 ;; Registers used:
 28318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28319 ;; Tracked objects:
 28320 ;;		On entry : 0/0
 28321 ;;		On exit  : 0/0
 28322 ;;		Unchanged: 0/0
 28323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28324 ;;      Params:         0       0       0       0       0       0       0       0       0
 28325 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28326 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28327 ;;      Totals:         0       0       0       0       0       0       0       0       0
 28328 ;;Total ram usage:        0 bytes
 28329 ;; Hardware stack levels used:    1
 28330 ;; Hardware stack levels required when called:    5
 28331 ;; This function calls:
 28332 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28333 ;; This function is called by:
 28334 ;;		_USBDeviceTasks
 28335 ;; This function uses a non-reentrant model
 28336 ;;
 28337                           
 28338                           	psect	text107
 28339  006F3A                     __ptext107:
 28340                           	opt stack 0
 28341  006F3A                     _USBWakeFromSuspend:
 28342                           	opt stack 14
 28343                           
 28344                           ;usb_device.c: 1946: USBBusIsSuspended = 0;
 28345                           
 28346                           ; BSR set to: 0
 28347                           ;incstack = 0
 28348  006F3A  0E00               	movlw	0
 28349  006F3C  0100               	movlb	0	; () banked
 28350  006F3E  6FD6               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 28351                           
 28352                           ; BSR set to: 0
 28353                           ;usb_device.c: 1952: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 28354  006F40  0E00               	movlw	0
 28355  006F42  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 28356  006F44  0E74               	movlw	116
 28357  006F46  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 28358  006F48  0E00               	movlw	0
 28359  006F4A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 28360  006F4C  0E00               	movlw	0
 28361  006F4E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 28362  006F50  0E00               	movlw	0
 28363  006F52  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 28364  006F54  0E00               	movlw	0
 28365  006F56  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 28366  006F58  EC12  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 28367                           
 28368                           ;usb_device.c: 1958: UCONbits.SUSPND = 0;
 28369  006F5C  9260               	bcf	3936,1,c	;volatile
 28370                           
 28371                           ;usb_device.c: 1960: UIEbits.ACTVIE = 0;
 28372  006F5E  9464               	bcf	3940,2,c	;volatile
 28373                           
 28374                           ;usb_device.c: 1976: while(UIRbits.ACTVIF)
 28375  006F60  D002               	goto	i2l10881
 28376  006F62                     i2l10879:
 28377                           
 28378                           ;usb_device.c: 1977: {
 28379                           ;usb_device.c: 1978: (UIR &= 0xFB);
 28380  006F62  9465               	bcf	3941,2,c	;volatile
 28381  006F64  D000               	goto	i2l10881
 28382  006F66                     i2l10881:
 28383  006F66  B465               	btfsc	3941,2,c	;volatile
 28384  006F68  D001               	goto	i2u964_41
 28385  006F6A  D001               	goto	i2u964_40
 28386  006F6C                     i2u964_41:
 28387  006F6C  D7FA               	goto	i2l10879
 28388  006F6E                     i2u964_40:
 28389  006F6E  D000               	goto	i2l1895
 28390  006F70                     i2l1895:
 28391  006F70  0012               	return		;funcret
 28392  006F72                     __end_of_USBWakeFromSuspend:
 28393                           	opt stack 0
 28394                           pclatu	equ	0xFFB
 28395                           pclath	equ	0xFFA
 28396                           tblptru	equ	0xFF8
 28397                           tblptrh	equ	0xFF7
 28398                           tblptrl	equ	0xFF6
 28399                           tablat	equ	0xFF5
 28400                           prodh	equ	0xFF4
 28401                           prodl	equ	0xFF3
 28402                           intcon	equ	0xFF2
 28403                           intcon2	equ	0xFF1
 28404                           intcon3	equ	0xFF0
 28405                           indf0	equ	0xFEF
 28406                           postinc0	equ	0xFEE
 28407                           fsr0h	equ	0xFEA
 28408                           fsr0l	equ	0xFE9
 28409                           wreg	equ	0xFE8
 28410                           indf1	equ	0xFE7
 28411                           postdec1	equ	0xFE5
 28412                           fsr1h	equ	0xFE2
 28413                           fsr1l	equ	0xFE1
 28414                           indf2	equ	0xFDF
 28415                           postinc2	equ	0xFDE
 28416                           postdec2	equ	0xFDD
 28417                           plusw2	equ	0xFDB
 28418                           fsr2h	equ	0xFDA
 28419                           fsr2l	equ	0xFD9
 28420                           status	equ	0xFD8
 28421                           
 28422 ;; *************** function _USBSuspend *****************
 28423 ;; Defined at:
 28424 ;;		line 1889 in file "../Includes/Usb/Framework/usb_device.c"
 28425 ;; Parameters:    Size  Location     Type
 28426 ;;		None
 28427 ;; Auto vars:     Size  Location     Type
 28428 ;;		None
 28429 ;; Return value:  Size  Location     Type
 28430 ;;                  1    wreg      void 
 28431 ;; Registers used:
 28432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28433 ;; Tracked objects:
 28434 ;;		On entry : 0/0
 28435 ;;		On exit  : 0/0
 28436 ;;		Unchanged: 0/0
 28437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28438 ;;      Params:         0       0       0       0       0       0       0       0       0
 28439 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28440 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28441 ;;      Totals:         0       0       0       0       0       0       0       0       0
 28442 ;;Total ram usage:        0 bytes
 28443 ;; Hardware stack levels used:    1
 28444 ;; Hardware stack levels required when called:    5
 28445 ;; This function calls:
 28446 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28447 ;; This function is called by:
 28448 ;;		_USBDeviceTasks
 28449 ;; This function uses a non-reentrant model
 28450 ;;
 28451                           
 28452                           	psect	text108
 28453  007038                     __ptext108:
 28454                           	opt stack 0
 28455  007038                     _USBSuspend:
 28456                           	opt stack 14
 28457                           
 28458                           ;usb_device.c: 1914: UIEbits.ACTVIE = 1;
 28459                           
 28460                           ;incstack = 0
 28461  007038  8464               	bsf	3940,2,c	;volatile
 28462                           
 28463                           ;usb_device.c: 1915: (UIR &= 0xEF);
 28464  00703A  9865               	bcf	3941,4,c	;volatile
 28465                           
 28466                           ;usb_device.c: 1917: UCONbits.SUSPND = 1;
 28467  00703C  8260               	bsf	3936,1,c	;volatile
 28468                           
 28469                           ;usb_device.c: 1919: USBBusIsSuspended = 1;
 28470  00703E  0E01               	movlw	1
 28471  007040  0100               	movlb	0	; () banked
 28472  007042  6FD6               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 28473                           
 28474                           ; BSR set to: 0
 28475                           ;usb_device.c: 1926: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 28476  007044  0E00               	movlw	0
 28477  007046  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 28478  007048  0E75               	movlw	117
 28479  00704A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 28480  00704C  0E00               	movlw	0
 28481  00704E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 28482  007050  0E00               	movlw	0
 28483  007052  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 28484  007054  0E00               	movlw	0
 28485  007056  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 28486  007058  0E00               	movlw	0
 28487  00705A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 28488  00705C  EC12  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 28489  007060  0012               	return		;funcret
 28490  007062                     __end_of_USBSuspend:
 28491                           	opt stack 0
 28492                           pclatu	equ	0xFFB
 28493                           pclath	equ	0xFFA
 28494                           tblptru	equ	0xFF8
 28495                           tblptrh	equ	0xFF7
 28496                           tblptrl	equ	0xFF6
 28497                           tablat	equ	0xFF5
 28498                           prodh	equ	0xFF4
 28499                           prodl	equ	0xFF3
 28500                           intcon	equ	0xFF2
 28501                           intcon2	equ	0xFF1
 28502                           intcon3	equ	0xFF0
 28503                           indf0	equ	0xFEF
 28504                           postinc0	equ	0xFEE
 28505                           fsr0h	equ	0xFEA
 28506                           fsr0l	equ	0xFE9
 28507                           wreg	equ	0xFE8
 28508                           indf1	equ	0xFE7
 28509                           postdec1	equ	0xFE5
 28510                           fsr1h	equ	0xFE2
 28511                           fsr1l	equ	0xFE1
 28512                           indf2	equ	0xFDF
 28513                           postinc2	equ	0xFDE
 28514                           postdec2	equ	0xFDD
 28515                           plusw2	equ	0xFDB
 28516                           fsr2h	equ	0xFDA
 28517                           fsr2l	equ	0xFD9
 28518                           status	equ	0xFD8
 28519                           
 28520 ;; *************** function _USBStallHandler *****************
 28521 ;; Defined at:
 28522 ;;		line 1846 in file "../Includes/Usb/Framework/usb_device.c"
 28523 ;; Parameters:    Size  Location     Type
 28524 ;;		None
 28525 ;; Auto vars:     Size  Location     Type
 28526 ;;		None
 28527 ;; Return value:  Size  Location     Type
 28528 ;;                  1    wreg      void 
 28529 ;; Registers used:
 28530 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28531 ;; Tracked objects:
 28532 ;;		On entry : 0/0
 28533 ;;		On exit  : 0/0
 28534 ;;		Unchanged: 0/0
 28535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28536 ;;      Params:         0       0       0       0       0       0       0       0       0
 28537 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28538 ;;      Temps:          1       0       0       0       0       0       0       0       0
 28539 ;;      Totals:         1       0       0       0       0       0       0       0       0
 28540 ;;Total ram usage:        1 bytes
 28541 ;; Hardware stack levels used:    1
 28542 ;; This function calls:
 28543 ;;		Nothing
 28544 ;; This function is called by:
 28545 ;;		_USBDeviceTasks
 28546 ;; This function uses a non-reentrant model
 28547 ;;
 28548                           
 28549                           	psect	text109
 28550  006B38                     __ptext109:
 28551                           	opt stack 0
 28552  006B38                     _USBStallHandler:
 28553                           	opt stack 19
 28554                           
 28555                           ;usb_device.c: 1858: if(UEP0bits.EPSTALL == 1)
 28556                           
 28557                           ;incstack = 0
 28558  006B38  A06A               	btfss	3946,0,c	;volatile
 28559  006B3A  D001               	goto	i2u965_41
 28560  006B3C  D001               	goto	i2u965_40
 28561  006B3E                     i2u965_41:
 28562  006B3E  D022               	goto	i2l1884
 28563  006B40                     i2u965_40:
 28564                           
 28565                           ;usb_device.c: 1859: {
 28566                           ;usb_device.c: 1861: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 28567  006B40  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 28568  006B44  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 28569  006B48  0E80               	movlw	128
 28570  006B4A  18DE               	xorwf	postinc2,w,c
 28571  006B4C  A4D8               	btfss	status,2,c
 28572  006B4E  D001               	goto	i2u966_41
 28573  006B50  D001               	goto	i2u966_40
 28574  006B52                     i2u966_41:
 28575  006B52  D017               	goto	i2l10903
 28576  006B54                     i2u966_40:
 28577  006B54  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 28578  006B58  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28579  006B5C  0E84               	movlw	132
 28580  006B5E  18DE               	xorwf	postinc2,w,c
 28581  006B60  A4D8               	btfss	status,2,c
 28582  006B62  D001               	goto	i2u967_41
 28583  006B64  D001               	goto	i2u967_40
 28584  006B66                     i2u967_41:
 28585  006B66  D00D               	goto	i2l10903
 28586  006B68                     i2u967_40:
 28587                           
 28588                           ;usb_device.c: 1862: {
 28589                           ;usb_device.c: 1864: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 28590  006B68  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 28591  006B6C  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 28592  006B70  0E0C               	movlw	12
 28593  006B72  6EDF               	movwf	indf2,c
 28594                           
 28595                           ;usb_device.c: 1865: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 28596  006B74  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 28597  006B78  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 28598  006B7C  0E00               	movlw	0
 28599  006B7E  8EDB               	bsf	plusw2,7,c
 28600  006B80  D000               	goto	i2l10903
 28601  006B82                     i2l10903:
 28602                           
 28603                           ;usb_device.c: 1866: }
 28604                           ;usb_device.c: 1867: UEP0bits.EPSTALL = 0;
 28605  006B82  906A               	bcf	3946,0,c	;volatile
 28606  006B84                     i2l1884:
 28607                           
 28608                           ;usb_device.c: 1868: }
 28609                           ;usb_device.c: 1870: (UIR &= 0xDF);
 28610  006B84  9A65               	bcf	3941,5,c	;volatile
 28611  006B86  0012               	return		;funcret
 28612  006B88                     __end_of_USBStallHandler:
 28613                           	opt stack 0
 28614                           pclatu	equ	0xFFB
 28615                           pclath	equ	0xFFA
 28616                           tblptru	equ	0xFF8
 28617                           tblptrh	equ	0xFF7
 28618                           tblptrl	equ	0xFF6
 28619                           tablat	equ	0xFF5
 28620                           prodh	equ	0xFF4
 28621                           prodl	equ	0xFF3
 28622                           intcon	equ	0xFF2
 28623                           intcon2	equ	0xFF1
 28624                           intcon3	equ	0xFF0
 28625                           indf0	equ	0xFEF
 28626                           postinc0	equ	0xFEE
 28627                           fsr0h	equ	0xFEA
 28628                           fsr0l	equ	0xFE9
 28629                           wreg	equ	0xFE8
 28630                           indf1	equ	0xFE7
 28631                           postdec1	equ	0xFE5
 28632                           fsr1h	equ	0xFE2
 28633                           fsr1l	equ	0xFE1
 28634                           indf2	equ	0xFDF
 28635                           postinc2	equ	0xFDE
 28636                           postdec2	equ	0xFDD
 28637                           plusw2	equ	0xFDB
 28638                           fsr2h	equ	0xFDA
 28639                           fsr2l	equ	0xFD9
 28640                           status	equ	0xFD8
 28641                           
 28642 ;; *************** function _USBCtrlEPService *****************
 28643 ;; Defined at:
 28644 ;;		line 2004 in file "../Includes/Usb/Framework/usb_device.c"
 28645 ;; Parameters:    Size  Location     Type
 28646 ;;		None
 28647 ;; Auto vars:     Size  Location     Type
 28648 ;;  setup_cnt       1   29[COMRAM] unsigned char 
 28649 ;; Return value:  Size  Location     Type
 28650 ;;                  1    wreg      void 
 28651 ;; Registers used:
 28652 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 28653 ;; Tracked objects:
 28654 ;;		On entry : 0/0
 28655 ;;		On exit  : 0/0
 28656 ;;		Unchanged: 0/0
 28657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28658 ;;      Params:         0       0       0       0       0       0       0       0       0
 28659 ;;      Locals:         1       0       0       0       0       0       0       0       0
 28660 ;;      Temps:          2       0       0       0       0       0       0       0       0
 28661 ;;      Totals:         3       0       0       0       0       0       0       0       0
 28662 ;;Total ram usage:        3 bytes
 28663 ;; Hardware stack levels used:    1
 28664 ;; Hardware stack levels required when called:    8
 28665 ;; This function calls:
 28666 ;;		_USBCtrlTrfInHandler
 28667 ;;		_USBCtrlTrfOutHandler
 28668 ;;		_USBCtrlTrfSetupHandler
 28669 ;; This function is called by:
 28670 ;;		_USBDeviceTasks
 28671 ;; This function uses a non-reentrant model
 28672 ;;
 28673                           
 28674                           	psect	text110
 28675  0050A8                     __ptext110:
 28676                           	opt stack 0
 28677  0050A8                     _USBCtrlEPService:
 28678                           	opt stack 11
 28679                           
 28680                           ;usb_device.c: 2009: USBStatusStageTimeoutCounter = (uint8_t)45;
 28681                           
 28682                           ;incstack = 0
 28683  0050A8  0E2D               	movlw	45
 28684  0050AA  6E4B               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 28685                           
 28686                           ;usb_device.c: 2012: if((USTATcopy.Val & ~0x02) == 0x00)
 28687  0050AC  C058  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 28688  0050B0  0EFD               	movlw	253
 28689  0050B2  161C               	andwf	??_USBCtrlEPService,f,c
 28690  0050B4  A4D8               	btfss	status,2,c
 28691  0050B6  D001               	goto	i2u968_41
 28692  0050B8  D001               	goto	i2u968_40
 28693  0050BA                     i2u968_41:
 28694  0050BA  D062               	goto	i2l10937
 28695  0050BC                     i2u968_40:
 28696                           
 28697                           ;usb_device.c: 2013: {
 28698                           ;usb_device.c: 2015: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 28699  0050BC  C058  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 28700  0050C0  90D8               	bcf	status,0,c
 28701  0050C2  321C               	rrcf	??_USBCtrlEPService,f,c
 28702  0050C4  0E3F               	movlw	63
 28703  0050C6  161C               	andwf	??_USBCtrlEPService,f,c
 28704  0050C8  501C               	movf	??_USBCtrlEPService,w,c
 28705  0050CA  0D04               	mullw	4
 28706  0050CC  0E00               	movlw	0
 28707  0050CE  24F3               	addwf	prodl,w,c
 28708  0050D0  6E44               	movwf	_pBDTEntryEP0OutCurrent,c
 28709  0050D2  0E04               	movlw	4
 28710  0050D4  20F4               	addwfc	prodh,w,c
 28711  0050D6  6E45               	movwf	_pBDTEntryEP0OutCurrent+1,c
 28712                           
 28713                           ;usb_device.c: 2019: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 28714  0050D8  C044  F042         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 28715  0050DC  C045  F043         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 28716                           
 28717                           ;usb_device.c: 2021: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 28718  0050E0  0E04               	movlw	4
 28719  0050E2  1A42               	xorwf	_pBDTEntryEP0OutNext,f,c
 28720                           
 28721                           ;usb_device.c: 2024: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 28722  0050E4  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 28723  0050E8  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 28724  0050EC  30DF               	rrcf	indf2,w,c
 28725  0050EE  32E8               	rrcf	wreg,f,c
 28726  0050F0  0B0F               	andlw	15
 28727  0050F2  0A0D               	xorlw	13
 28728  0050F4  A4D8               	btfss	status,2,c
 28729  0050F6  D001               	goto	i2u969_41
 28730  0050F8  D001               	goto	i2u969_40
 28731  0050FA                     i2u969_41:
 28732  0050FA  D03E               	goto	i2l10935
 28733  0050FC                     i2u969_40:
 28734                           
 28735                           ;usb_device.c: 2025: {
 28736                           ;usb_device.c: 2026: unsigned char setup_cnt;
 28737                           ;usb_device.c: 2032: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 28738  0050FC  0E00               	movlw	0
 28739  0050FE  6E1E               	movwf	USBCtrlEPService@setup_cnt,c
 28740  005100  0E07               	movlw	7
 28741  005102  641E               	cpfsgt	USBCtrlEPService@setup_cnt,c
 28742  005104  D001               	goto	i2u970_41
 28743  005106  D001               	goto	i2u970_40
 28744  005108                     i2u970_41:
 28745  005108  D002               	goto	i2l10923
 28746  00510A                     i2u970_40:
 28747  00510A  D029               	goto	i2l10931
 28748  00510C  D028               	goto	i2l10931
 28749  00510E                     i2l10923:
 28750                           
 28751                           ;usb_device.c: 2033: {
 28752                           ;usb_device.c: 2034: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 28753  00510E  EE20 F002          	lfsr	2,2
 28754  005112  5044               	movf	_pBDTEntryEP0OutCurrent,w,c
 28755  005114  26D9               	addwf	fsr2l,f,c
 28756  005116  5045               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 28757  005118  22DA               	addwfc	fsr2h,f,c
 28758  00511A  CFDE F01C          	movff	postinc2,??_USBCtrlEPService
 28759  00511E  CFDD F01D          	movff	postdec2,??_USBCtrlEPService+1
 28760  005122  C01C  FFD9         	movff	??_USBCtrlEPService,fsr2l
 28761  005126  C01D  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 28762  00512A  501E               	movf	USBCtrlEPService@setup_cnt,w,c
 28763  00512C  0D01               	mullw	1
 28764  00512E  0E30               	movlw	48
 28765  005130  24F3               	addwf	prodl,w,c
 28766  005132  6EE1               	movwf	fsr1l,c
 28767  005134  0E04               	movlw	4
 28768  005136  20F4               	addwfc	prodh,w,c
 28769  005138  6EE2               	movwf	fsr1h,c
 28770  00513A  CFDF FFE7          	movff	indf2,indf1
 28771                           
 28772                           ;usb_device.c: 2035: pBDTEntryEP0OutCurrent->ADR++;
 28773  00513E  EE20 F002          	lfsr	2,2
 28774  005142  5044               	movf	_pBDTEntryEP0OutCurrent,w,c
 28775  005144  26D9               	addwf	fsr2l,f,c
 28776  005146  5045               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 28777  005148  22DA               	addwfc	fsr2h,f,c
 28778  00514A  2ADE               	incf	postinc2,f,c
 28779  00514C  0E00               	movlw	0
 28780  00514E  22DD               	addwfc	postdec2,f,c
 28781  005150  2A1E               	incf	USBCtrlEPService@setup_cnt,f,c
 28782  005152  0E07               	movlw	7
 28783  005154  641E               	cpfsgt	USBCtrlEPService@setup_cnt,c
 28784  005156  D001               	goto	i2u971_41
 28785  005158  D001               	goto	i2u971_40
 28786  00515A                     i2u971_41:
 28787  00515A  D7D9               	goto	i2l10923
 28788  00515C                     i2u971_40:
 28789  00515C  D000               	goto	i2l10931
 28790  00515E                     i2l10931:
 28791                           
 28792                           ;usb_device.c: 2036: }
 28793                           ;usb_device.c: 2037: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 28794  00515E  EE20 F002          	lfsr	2,2
 28795  005162  5044               	movf	_pBDTEntryEP0OutCurrent,w,c
 28796  005164  26D9               	addwf	fsr2l,f,c
 28797  005166  5045               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 28798  005168  22DA               	addwfc	fsr2h,f,c
 28799  00516A  0E30               	movlw	48
 28800  00516C  6EDE               	movwf	postinc2,c
 28801  00516E  0E04               	movlw	4
 28802  005170  6EDD               	movwf	postdec2,c
 28803                           
 28804                           ;usb_device.c: 2040: USBCtrlTrfSetupHandler();
 28805  005172  ECCD  F030         	call	_USBCtrlTrfSetupHandler	;wreg free
 28806                           
 28807                           ;usb_device.c: 2041: }
 28808  005176  D00F               	goto	i2l1905
 28809  005178                     i2l10935:
 28810                           
 28811                           ;usb_device.c: 2042: else
 28812                           ;usb_device.c: 2043: {
 28813                           ;usb_device.c: 2045: USBCtrlTrfOutHandler();
 28814  005178  EC66  F033         	call	_USBCtrlTrfOutHandler	;wreg free
 28815  00517C  D00C               	goto	i2l1905
 28816                           
 28817                           ;usb_device.c: 2046: }
 28818                           ;usb_device.c: 2047: }
 28819  00517E  D00B               	goto	i2l1905
 28820  005180                     i2l10937:
 28821                           
 28822                           ;usb_device.c: 2048: else if((USTATcopy.Val & ~0x02) == 0x04)
 28823  005180  5058               	movf	_USTATcopy,w,c	;volatile
 28824  005182  0BFD               	andlw	253
 28825  005184  0A04               	xorlw	4
 28826  005186  A4D8               	btfss	status,2,c
 28827  005188  D001               	goto	i2u972_41
 28828  00518A  D001               	goto	i2u972_40
 28829  00518C                     i2u972_41:
 28830  00518C  D004               	goto	i2l1905
 28831  00518E                     i2u972_40:
 28832                           
 28833                           ;usb_device.c: 2049: {
 28834                           ;usb_device.c: 2052: USBCtrlTrfInHandler();
 28835  00518E  ECEA  F021         	call	_USBCtrlTrfInHandler	;wreg free
 28836  005192  D001               	goto	i2l1905
 28837  005194  D000               	goto	i2l1905
 28838  005196                     i2l1905:
 28839  005196  0012               	return		;funcret
 28840  005198                     __end_of_USBCtrlEPService:
 28841                           	opt stack 0
 28842                           pclatu	equ	0xFFB
 28843                           pclath	equ	0xFFA
 28844                           tblptru	equ	0xFF8
 28845                           tblptrh	equ	0xFF7
 28846                           tblptrl	equ	0xFF6
 28847                           tablat	equ	0xFF5
 28848                           prodh	equ	0xFF4
 28849                           prodl	equ	0xFF3
 28850                           intcon	equ	0xFF2
 28851                           intcon2	equ	0xFF1
 28852                           intcon3	equ	0xFF0
 28853                           indf0	equ	0xFEF
 28854                           postinc0	equ	0xFEE
 28855                           fsr0h	equ	0xFEA
 28856                           fsr0l	equ	0xFE9
 28857                           wreg	equ	0xFE8
 28858                           indf1	equ	0xFE7
 28859                           postdec1	equ	0xFE5
 28860                           fsr1h	equ	0xFE2
 28861                           fsr1l	equ	0xFE1
 28862                           indf2	equ	0xFDF
 28863                           postinc2	equ	0xFDE
 28864                           postdec2	equ	0xFDD
 28865                           plusw2	equ	0xFDB
 28866                           fsr2h	equ	0xFDA
 28867                           fsr2l	equ	0xFD9
 28868                           status	equ	0xFD8
 28869                           
 28870 ;; *************** function _USBCtrlTrfSetupHandler *****************
 28871 ;; Defined at:
 28872 ;;		line 2097 in file "../Includes/Usb/Framework/usb_device.c"
 28873 ;; Parameters:    Size  Location     Type
 28874 ;;		None
 28875 ;; Auto vars:     Size  Location     Type
 28876 ;;		None
 28877 ;; Return value:  Size  Location     Type
 28878 ;;                  1    wreg      void 
 28879 ;; Registers used:
 28880 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28881 ;; Tracked objects:
 28882 ;;		On entry : 0/0
 28883 ;;		On exit  : 0/0
 28884 ;;		Unchanged: 0/0
 28885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28886 ;;      Params:         0       0       0       0       0       0       0       0       0
 28887 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28888 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28889 ;;      Totals:         0       0       0       0       0       0       0       0       0
 28890 ;;Total ram usage:        0 bytes
 28891 ;; Hardware stack levels used:    1
 28892 ;; Hardware stack levels required when called:    7
 28893 ;; This function calls:
 28894 ;;		_USBCheckStdRequest
 28895 ;;		_USBCtrlEPServiceComplete
 28896 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28897 ;; This function is called by:
 28898 ;;		_USBCtrlEPService
 28899 ;; This function uses a non-reentrant model
 28900 ;;
 28901                           
 28902                           	psect	text111
 28903  00619A                     __ptext111:
 28904                           	opt stack 0
 28905  00619A                     _USBCtrlTrfSetupHandler:
 28906                           	opt stack 11
 28907                           
 28908                           ;usb_device.c: 2102: shortPacketStatus = 0;
 28909                           
 28910                           ;incstack = 0
 28911  00619A  0E00               	movlw	0
 28912  00619C  6E4E               	movwf	_shortPacketStatus,c	;volatile
 28913                           
 28914                           ;usb_device.c: 2103: USBDeferStatusStagePacket = 0;
 28915  00619E  0E00               	movlw	0
 28916  0061A0  6E4A               	movwf	_USBDeferStatusStagePacket,c	;volatile
 28917                           
 28918                           ;usb_device.c: 2104: USBDeferINDataStagePackets = 0;
 28919  0061A2  0E00               	movlw	0
 28920  0061A4  0100               	movlb	0	; () banked
 28921  0061A6  6FD2               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 28922                           
 28923                           ;usb_device.c: 2105: USBDeferOUTDataStagePackets = 0;
 28924  0061A8  0E00               	movlw	0
 28925  0061AA  0100               	movlb	0	; () banked
 28926  0061AC  6FD1               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 28927                           
 28928                           ;usb_device.c: 2106: BothEP0OutUOWNsSet = 0;
 28929  0061AE  0E00               	movlw	0
 28930  0061B0  0100               	movlb	0	; () banked
 28931  0061B2  6FD5               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 28932                           
 28933                           ;usb_device.c: 2107: controlTransferState = 0;
 28934  0061B4  0E00               	movlw	0
 28935  0061B6  6E4D               	movwf	_controlTransferState,c	;volatile
 28936                           
 28937                           ; BSR set to: 0
 28938                           ;usb_device.c: 2116: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 28939  0061B8  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 28940  0061BC  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28941  0061C0  0E7F               	movlw	127
 28942  0061C2  16DF               	andwf	indf2,f,c
 28943                           
 28944                           ; BSR set to: 0
 28945                           ;usb_device.c: 2117: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 28946  0061C4  0E04               	movlw	4
 28947  0061C6  1A3C               	xorwf	_pBDTEntryIn,f,c
 28948                           
 28949                           ; BSR set to: 0
 28950                           ;usb_device.c: 2118: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 28951  0061C8  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 28952  0061CC  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28953  0061D0  0E7F               	movlw	127
 28954  0061D2  16DF               	andwf	indf2,f,c
 28955                           
 28956                           ; BSR set to: 0
 28957                           ;usb_device.c: 2119: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 28958  0061D4  0E04               	movlw	4
 28959  0061D6  1A3C               	xorwf	_pBDTEntryIn,f,c
 28960                           
 28961                           ; BSR set to: 0
 28962                           ;usb_device.c: 2120: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 28963  0061D8  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28964  0061DC  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28965  0061E0  0E7F               	movlw	127
 28966  0061E2  16DF               	andwf	indf2,f,c
 28967                           
 28968                           ; BSR set to: 0
 28969                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 28970  0061E4  0E00               	movlw	0
 28971  0061E6  6E39               	movwf	_inPipes+3,c	;volatile
 28972                           
 28973                           ; BSR set to: 0
 28974                           ;usb_device.c: 2123: inPipes[0].wCount.Val = 0;
 28975  0061E8  0E00               	movlw	0
 28976  0061EA  6E3B               	movwf	_inPipes+5,c	;volatile
 28977  0061EC  0E00               	movlw	0
 28978  0061EE  6E3A               	movwf	_inPipes+4,c	;volatile
 28979                           
 28980                           ; BSR set to: 0
 28981                           ;usb_device.c: 2124: outPipes[0].info.Val = 0;
 28982  0061F0  0E00               	movlw	0
 28983  0061F2  6E31               	movwf	_outPipes+3,c	;volatile
 28984                           
 28985                           ; BSR set to: 0
 28986                           ;usb_device.c: 2125: outPipes[0].wCount.Val = 0;
 28987  0061F4  0E00               	movlw	0
 28988  0061F6  6E33               	movwf	_outPipes+5,c	;volatile
 28989  0061F8  0E00               	movlw	0
 28990  0061FA  6E32               	movwf	_outPipes+4,c	;volatile
 28991                           
 28992                           ; BSR set to: 0
 28993                           ;usb_device.c: 2131: USBCheckStdRequest();
 28994  0061FC  ECDB  F027         	call	_USBCheckStdRequest	;wreg free
 28995                           
 28996                           ;usb_device.c: 2132: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 28997  006200  0E00               	movlw	0
 28998  006202  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 28999  006204  0E03               	movlw	3
 29000  006206  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 29001  006208  0E00               	movlw	0
 29002  00620A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 29003  00620C  0E00               	movlw	0
 29004  00620E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 29005  006210  0E00               	movlw	0
 29006  006212  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 29007  006214  0E00               	movlw	0
 29008  006216  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 29009  006218  EC12  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 29010                           
 29011                           ;usb_device.c: 2145: USBCtrlEPServiceComplete();
 29012  00621C  EC34  F020         	call	_USBCtrlEPServiceComplete	;wreg free
 29013  006220  0012               	return		;funcret
 29014  006222                     __end_of_USBCtrlTrfSetupHandler:
 29015                           	opt stack 0
 29016                           pclatu	equ	0xFFB
 29017                           pclath	equ	0xFFA
 29018                           tblptru	equ	0xFF8
 29019                           tblptrh	equ	0xFF7
 29020                           tblptrl	equ	0xFF6
 29021                           tablat	equ	0xFF5
 29022                           prodh	equ	0xFF4
 29023                           prodl	equ	0xFF3
 29024                           intcon	equ	0xFF2
 29025                           intcon2	equ	0xFF1
 29026                           intcon3	equ	0xFF0
 29027                           indf0	equ	0xFEF
 29028                           postinc0	equ	0xFEE
 29029                           fsr0h	equ	0xFEA
 29030                           fsr0l	equ	0xFE9
 29031                           wreg	equ	0xFE8
 29032                           indf1	equ	0xFE7
 29033                           postdec1	equ	0xFE5
 29034                           fsr1h	equ	0xFE2
 29035                           fsr1l	equ	0xFE1
 29036                           indf2	equ	0xFDF
 29037                           postinc2	equ	0xFDE
 29038                           postdec2	equ	0xFDD
 29039                           plusw2	equ	0xFDB
 29040                           fsr2h	equ	0xFDA
 29041                           fsr2l	equ	0xFD9
 29042                           status	equ	0xFD8
 29043                           
 29044 ;; *************** function _USBCtrlEPServiceComplete *****************
 29045 ;; Defined at:
 29046 ;;		line 1282 in file "../Includes/Usb/Framework/usb_device.c"
 29047 ;; Parameters:    Size  Location     Type
 29048 ;;		None
 29049 ;; Auto vars:     Size  Location     Type
 29050 ;;		None
 29051 ;; Return value:  Size  Location     Type
 29052 ;;                  1    wreg      void 
 29053 ;; Registers used:
 29054 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29055 ;; Tracked objects:
 29056 ;;		On entry : 0/0
 29057 ;;		On exit  : 0/0
 29058 ;;		Unchanged: 0/0
 29059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29060 ;;      Params:         0       0       0       0       0       0       0       0       0
 29061 ;;      Locals:         0       0       0       0       0       0       0       0       0
 29062 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29063 ;;      Totals:         0       0       0       0       0       0       0       0       0
 29064 ;;Total ram usage:        0 bytes
 29065 ;; Hardware stack levels used:    1
 29066 ;; Hardware stack levels required when called:    2
 29067 ;; This function calls:
 29068 ;;		_USBCtrlEPAllowDataStage
 29069 ;;		_USBCtrlEPAllowStatusStage
 29070 ;; This function is called by:
 29071 ;;		_USBCtrlTrfSetupHandler
 29072 ;; This function uses a non-reentrant model
 29073 ;;
 29074                           
 29075                           	psect	text112
 29076  004068                     __ptext112:
 29077                           	opt stack 0
 29078  004068                     _USBCtrlEPServiceComplete:
 29079                           	opt stack 15
 29080                           
 29081                           ;usb_device.c: 1288: UCONbits.PKTDIS = 0;
 29082                           
 29083                           ;incstack = 0
 29084  004068  9860               	bcf	3936,4,c	;volatile
 29085                           
 29086                           ;usb_device.c: 1294: if(inPipes[0].info.bits.busy == 0)
 29087  00406A  BE39               	btfsc	_inPipes+3,7,c	;volatile
 29088  00406C  D001               	goto	i2u648_41
 29089  00406E  D001               	goto	i2u648_40
 29090  004070                     i2u648_41:
 29091  004070  D042               	goto	i2l1808
 29092  004072                     i2u648_40:
 29093                           
 29094                           ;usb_device.c: 1295: {
 29095                           ;usb_device.c: 1296: if(outPipes[0].info.bits.busy == 1)
 29096  004072  AE31               	btfss	_outPipes+3,7,c	;volatile
 29097  004074  D001               	goto	i2u649_41
 29098  004076  D001               	goto	i2u649_40
 29099  004078                     i2u649_41:
 29100  004078  D012               	goto	i2l8387
 29101  00407A                     i2u649_40:
 29102                           
 29103                           ;usb_device.c: 1297: {
 29104                           ;usb_device.c: 1298: controlTransferState = 2;
 29105  00407A  0E02               	movlw	2
 29106  00407C  6E4D               	movwf	_controlTransferState,c	;volatile
 29107                           
 29108                           ;usb_device.c: 1309: if(USBDeferOUTDataStagePackets == 0)
 29109  00407E  0100               	movlb	0	; () banked
 29110  004080  51D1               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 29111  004082  A4D8               	btfss	status,2,c
 29112  004084  D001               	goto	i2u650_41
 29113  004086  D001               	goto	i2u650_40
 29114  004088                     i2u650_41:
 29115  004088  D003               	goto	i2l8383
 29116  00408A                     i2u650_40:
 29117                           
 29118                           ; BSR set to: 0
 29119                           ;usb_device.c: 1310: {
 29120                           ;usb_device.c: 1311: USBCtrlEPAllowDataStage();
 29121  00408A  EC04  F02F         	call	_USBCtrlEPAllowDataStage	;wreg free
 29122  00408E  D000               	goto	i2l8383
 29123  004090                     i2l8383:
 29124                           
 29125                           ;usb_device.c: 1312: }
 29126                           ;usb_device.c: 1316: USBStatusStageEnabledFlag2 = 0;
 29127  004090  0E00               	movlw	0
 29128  004092  0100               	movlb	0	; () banked
 29129  004094  6FD3               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 29130                           
 29131                           ; BSR set to: 0
 29132                           ;usb_device.c: 1317: USBStatusStageEnabledFlag1 = 0;
 29133  004096  0E00               	movlw	0
 29134  004098  0100               	movlb	0	; () banked
 29135  00409A  6FD4               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 29136                           
 29137                           ;usb_device.c: 1318: }
 29138  00409C  D07B               	goto	i2l1818
 29139  00409E                     i2l8387:
 29140                           
 29141                           ;usb_device.c: 1319: else
 29142                           ;usb_device.c: 1320: {
 29143                           ;usb_device.c: 1325: pBDTEntryEP0OutNext->CNT = 8;
 29144  00409E  EE20 F001          	lfsr	2,1
 29145  0040A2  5042               	movf	_pBDTEntryEP0OutNext,w,c
 29146  0040A4  26D9               	addwf	fsr2l,f,c
 29147  0040A6  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 29148  0040A8  22DA               	addwfc	fsr2h,f,c
 29149  0040AA  0E08               	movlw	8
 29150  0040AC  6EDF               	movwf	indf2,c
 29151                           
 29152                           ;usb_device.c: 1326: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29153  0040AE  EE20 F002          	lfsr	2,2
 29154  0040B2  5042               	movf	_pBDTEntryEP0OutNext,w,c
 29155  0040B4  26D9               	addwf	fsr2l,f,c
 29156  0040B6  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 29157  0040B8  22DA               	addwfc	fsr2h,f,c
 29158  0040BA  0E30               	movlw	48
 29159  0040BC  6EDE               	movwf	postinc2,c
 29160  0040BE  0E04               	movlw	4
 29161  0040C0  6EDD               	movwf	postdec2,c
 29162                           
 29163                           ;usb_device.c: 1327: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 29164  0040C2  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29165  0040C6  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29166  0040CA  0E0C               	movlw	12
 29167  0040CC  6EDF               	movwf	indf2,c
 29168                           
 29169                           ;usb_device.c: 1328: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29170  0040CE  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29171  0040D2  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29172  0040D6  0E00               	movlw	0
 29173  0040D8  8EDB               	bsf	plusw2,7,c
 29174                           
 29175                           ;usb_device.c: 1329: pBDTEntryIn[0]->STAT.Val = 0x04;
 29176  0040DA  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 29177  0040DE  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29178  0040E2  0E04               	movlw	4
 29179  0040E4  6EDF               	movwf	indf2,c
 29180                           
 29181                           ;usb_device.c: 1330: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29182  0040E6  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 29183  0040EA  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29184  0040EE  0E00               	movlw	0
 29185  0040F0  8EDB               	bsf	plusw2,7,c
 29186  0040F2  D050               	goto	i2l1818
 29187                           
 29188                           ;usb_device.c: 1331: }
 29189                           ;usb_device.c: 1332: }
 29190  0040F4  D04F               	goto	i2l1818
 29191  0040F6                     i2l1808:
 29192                           
 29193                           ;usb_device.c: 1333: else
 29194                           ;usb_device.c: 1334: {
 29195                           ;usb_device.c: 1335: if(SetupPkt.DataDir == (0x80>>7))
 29196  0040F6  0104               	movlb	4	; () banked
 29197  0040F8  AF30               	btfss	48,7,b	;volatile
 29198  0040FA  D001               	goto	i2u651_41
 29199  0040FC  D001               	goto	i2u651_40
 29200  0040FE                     i2u651_41:
 29201  0040FE  D01A               	goto	i2l8407
 29202  004100                     i2u651_40:
 29203                           
 29204                           ; BSR set to: 4
 29205                           ;usb_device.c: 1336: {
 29206                           ;usb_device.c: 1337: controlTransferState = 1;
 29207  004100  0E01               	movlw	1
 29208  004102  6E4D               	movwf	_controlTransferState,c	;volatile
 29209                           
 29210                           ;usb_device.c: 1351: if(USBDeferINDataStagePackets == 0)
 29211  004104  0100               	movlb	0	; () banked
 29212  004106  51D2               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 29213  004108  A4D8               	btfss	status,2,c
 29214  00410A  D001               	goto	i2u652_41
 29215  00410C  D001               	goto	i2u652_40
 29216  00410E                     i2u652_41:
 29217  00410E  D003               	goto	i2l8399
 29218  004110                     i2u652_40:
 29219                           
 29220                           ; BSR set to: 0
 29221                           ;usb_device.c: 1352: {
 29222                           ;usb_device.c: 1353: USBCtrlEPAllowDataStage();
 29223  004110  EC04  F02F         	call	_USBCtrlEPAllowDataStage	;wreg free
 29224  004114  D000               	goto	i2l8399
 29225  004116                     i2l8399:
 29226                           
 29227                           ;usb_device.c: 1354: }
 29228                           ;usb_device.c: 1376: USBStatusStageEnabledFlag2 = 0;
 29229  004116  0E00               	movlw	0
 29230  004118  0100               	movlb	0	; () banked
 29231  00411A  6FD3               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 29232                           
 29233                           ; BSR set to: 0
 29234                           ;usb_device.c: 1377: USBStatusStageEnabledFlag1 = 0;
 29235  00411C  0E00               	movlw	0
 29236  00411E  0100               	movlb	0	; () banked
 29237  004120  6FD4               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 29238                           
 29239                           ; BSR set to: 0
 29240                           ;usb_device.c: 1378: if(USBDeferStatusStagePacket == 0)
 29241  004122  504A               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 29242  004124  A4D8               	btfss	status,2,c
 29243  004126  D001               	goto	i2u653_41
 29244  004128  D001               	goto	i2u653_40
 29245  00412A                     i2u653_41:
 29246  00412A  D034               	goto	i2l1818
 29247  00412C                     i2u653_40:
 29248                           
 29249                           ; BSR set to: 0
 29250                           ;usb_device.c: 1379: {
 29251                           ;usb_device.c: 1380: USBCtrlEPAllowStatusStage();
 29252  00412C  EC42  F029         	call	_USBCtrlEPAllowStatusStage	;wreg free
 29253  004130  D031               	goto	i2l1818
 29254                           
 29255                           ;usb_device.c: 1381: }
 29256                           ;usb_device.c: 1382: }
 29257  004132  D030               	goto	i2l1818
 29258  004134                     i2l8407:
 29259                           
 29260                           ;usb_device.c: 1383: else
 29261                           ;usb_device.c: 1384: {
 29262                           ;usb_device.c: 1395: controlTransferState = 2;
 29263  004134  0E02               	movlw	2
 29264  004136  6E4D               	movwf	_controlTransferState,c	;volatile
 29265                           
 29266                           ;usb_device.c: 1398: pBDTEntryEP0OutNext->CNT = 8;
 29267  004138  EE20 F001          	lfsr	2,1
 29268  00413C  5042               	movf	_pBDTEntryEP0OutNext,w,c
 29269  00413E  26D9               	addwf	fsr2l,f,c
 29270  004140  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 29271  004142  22DA               	addwfc	fsr2h,f,c
 29272  004144  0E08               	movlw	8
 29273  004146  6EDF               	movwf	indf2,c
 29274                           
 29275                           ;usb_device.c: 1399: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29276  004148  EE20 F002          	lfsr	2,2
 29277  00414C  5042               	movf	_pBDTEntryEP0OutNext,w,c
 29278  00414E  26D9               	addwf	fsr2l,f,c
 29279  004150  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 29280  004152  22DA               	addwfc	fsr2h,f,c
 29281  004154  0E30               	movlw	48
 29282  004156  6EDE               	movwf	postinc2,c
 29283  004158  0E04               	movlw	4
 29284  00415A  6EDD               	movwf	postdec2,c
 29285                           
 29286                           ;usb_device.c: 1400: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 29287  00415C  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29288  004160  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29289  004164  0E04               	movlw	4
 29290  004166  6EDF               	movwf	indf2,c
 29291                           
 29292                           ;usb_device.c: 1401: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29293  004168  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29294  00416C  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29295  004170  0E00               	movlw	0
 29296  004172  8EDB               	bsf	plusw2,7,c
 29297                           
 29298                           ;usb_device.c: 1404: USBStatusStageEnabledFlag2 = 0;
 29299  004174  0E00               	movlw	0
 29300  004176  0100               	movlb	0	; () banked
 29301  004178  6FD3               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 29302                           
 29303                           ; BSR set to: 0
 29304                           ;usb_device.c: 1405: USBStatusStageEnabledFlag1 = 0;
 29305  00417A  0E00               	movlw	0
 29306  00417C  0100               	movlb	0	; () banked
 29307  00417E  6FD4               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 29308                           
 29309                           ; BSR set to: 0
 29310                           ;usb_device.c: 1406: if(USBDeferStatusStagePacket == 0)
 29311  004180  504A               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 29312  004182  A4D8               	btfss	status,2,c
 29313  004184  D001               	goto	i2u654_41
 29314  004186  D001               	goto	i2u654_40
 29315  004188                     i2u654_41:
 29316  004188  D005               	goto	i2l1818
 29317  00418A                     i2u654_40:
 29318                           
 29319                           ; BSR set to: 0
 29320                           ;usb_device.c: 1407: {
 29321                           ;usb_device.c: 1408: USBCtrlEPAllowStatusStage();
 29322  00418A  EC42  F029         	call	_USBCtrlEPAllowStatusStage	;wreg free
 29323  00418E  D002               	goto	i2l1818
 29324  004190  D001               	goto	i2l1818
 29325  004192  D000               	goto	i2l1818
 29326  004194                     i2l1818:
 29327  004194  0012               	return		;funcret
 29328  004196                     __end_of_USBCtrlEPServiceComplete:
 29329                           	opt stack 0
 29330                           pclatu	equ	0xFFB
 29331                           pclath	equ	0xFFA
 29332                           tblptru	equ	0xFF8
 29333                           tblptrh	equ	0xFF7
 29334                           tblptrl	equ	0xFF6
 29335                           tablat	equ	0xFF5
 29336                           prodh	equ	0xFF4
 29337                           prodl	equ	0xFF3
 29338                           intcon	equ	0xFF2
 29339                           intcon2	equ	0xFF1
 29340                           intcon3	equ	0xFF0
 29341                           indf0	equ	0xFEF
 29342                           postinc0	equ	0xFEE
 29343                           fsr0h	equ	0xFEA
 29344                           fsr0l	equ	0xFE9
 29345                           wreg	equ	0xFE8
 29346                           indf1	equ	0xFE7
 29347                           postdec1	equ	0xFE5
 29348                           fsr1h	equ	0xFE2
 29349                           fsr1l	equ	0xFE1
 29350                           indf2	equ	0xFDF
 29351                           postinc2	equ	0xFDE
 29352                           postdec2	equ	0xFDD
 29353                           plusw2	equ	0xFDB
 29354                           fsr2h	equ	0xFDA
 29355                           fsr2l	equ	0xFD9
 29356                           status	equ	0xFD8
 29357                           
 29358 ;; *************** function _USBCtrlEPAllowDataStage *****************
 29359 ;; Defined at:
 29360 ;;		line 1173 in file "../Includes/Usb/Framework/usb_device.c"
 29361 ;; Parameters:    Size  Location     Type
 29362 ;;		None
 29363 ;; Auto vars:     Size  Location     Type
 29364 ;;		None
 29365 ;; Return value:  Size  Location     Type
 29366 ;;                  1    wreg      void 
 29367 ;; Registers used:
 29368 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29369 ;; Tracked objects:
 29370 ;;		On entry : 0/0
 29371 ;;		On exit  : 0/0
 29372 ;;		Unchanged: 0/0
 29373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29374 ;;      Params:         0       0       0       0       0       0       0       0       0
 29375 ;;      Locals:         0       0       0       0       0       0       0       0       0
 29376 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29377 ;;      Totals:         0       0       0       0       0       0       0       0       0
 29378 ;;Total ram usage:        0 bytes
 29379 ;; Hardware stack levels used:    1
 29380 ;; Hardware stack levels required when called:    1
 29381 ;; This function calls:
 29382 ;;		_USBCtrlTrfTxService
 29383 ;; This function is called by:
 29384 ;;		_USBCtrlEPServiceComplete
 29385 ;; This function uses a non-reentrant model
 29386 ;;
 29387                           
 29388                           	psect	text113
 29389  005E08                     __ptext113:
 29390                           	opt stack 0
 29391  005E08                     _USBCtrlEPAllowDataStage:
 29392                           	opt stack 15
 29393                           
 29394                           ;usb_device.c: 1175: USBDeferINDataStagePackets = 0;
 29395                           
 29396                           ;incstack = 0
 29397  005E08  0E00               	movlw	0
 29398  005E0A  0100               	movlb	0	; () banked
 29399  005E0C  6FD2               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 29400                           
 29401                           ;usb_device.c: 1176: USBDeferOUTDataStagePackets = 0;
 29402  005E0E  0E00               	movlw	0
 29403  005E10  0100               	movlb	0	; () banked
 29404  005E12  6FD1               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 29405                           
 29406                           ; BSR set to: 0
 29407                           ;usb_device.c: 1178: if(controlTransferState == 2)
 29408  005E14  0E02               	movlw	2
 29409  005E16  184D               	xorwf	_controlTransferState,w,c	;volatile
 29410  005E18  A4D8               	btfss	status,2,c
 29411  005E1A  D001               	goto	i2u593_41
 29412  005E1C  D001               	goto	i2u593_40
 29413  005E1E                     i2u593_41:
 29414  005E1E  D01F               	goto	i2l8009
 29415  005E20                     i2u593_40:
 29416                           
 29417                           ; BSR set to: 0
 29418                           ;usb_device.c: 1179: {
 29419                           ;usb_device.c: 1181: pBDTEntryEP0OutNext->CNT = 8;
 29420  005E20  EE20 F001          	lfsr	2,1
 29421  005E24  5042               	movf	_pBDTEntryEP0OutNext,w,c
 29422  005E26  26D9               	addwf	fsr2l,f,c
 29423  005E28  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 29424  005E2A  22DA               	addwfc	fsr2h,f,c
 29425  005E2C  0E08               	movlw	8
 29426  005E2E  6EDF               	movwf	indf2,c
 29427                           
 29428                           ;usb_device.c: 1182: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 29429  005E30  EE20 F002          	lfsr	2,2
 29430  005E34  5042               	movf	_pBDTEntryEP0OutNext,w,c
 29431  005E36  26D9               	addwf	fsr2l,f,c
 29432  005E38  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 29433  005E3A  22DA               	addwfc	fsr2h,f,c
 29434  005E3C  0E38               	movlw	56
 29435  005E3E  6EDE               	movwf	postinc2,c
 29436  005E40  0E04               	movlw	4
 29437  005E42  6EDD               	movwf	postdec2,c
 29438                           
 29439                           ; BSR set to: 0
 29440                           ;usb_device.c: 1183: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 29441  005E44  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29442  005E48  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29443  005E4C  0E48               	movlw	72
 29444  005E4E  6EDF               	movwf	indf2,c
 29445                           
 29446                           ; BSR set to: 0
 29447                           ;usb_device.c: 1184: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29448  005E50  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29449  005E54  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29450  005E58  0E00               	movlw	0
 29451  005E5A  8EDB               	bsf	plusw2,7,c
 29452                           
 29453                           ;usb_device.c: 1185: }
 29454  005E5C  D028               	goto	i2l1800
 29455  005E5E                     i2l8009:
 29456                           
 29457                           ; BSR set to: 0
 29458                           ;usb_device.c: 1186: else
 29459                           ;usb_device.c: 1187: {
 29460                           ;usb_device.c: 1190: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 29461  005E5E  503A               	movf	_inPipes+4,w,c	;volatile
 29462  005E60  0104               	movlb	4	; () banked
 29463  005E62  5D36               	subwf	54,w,b	;volatile
 29464  005E64  503B               	movf	_inPipes+5,w,c	;volatile
 29465  005E66  0104               	movlb	4	; () banked
 29466  005E68  5937               	subwfb	55,w,b	;volatile
 29467  005E6A  B0D8               	btfsc	status,0,c
 29468  005E6C  D001               	goto	i2u594_41
 29469  005E6E  D001               	goto	i2u594_40
 29470  005E70                     i2u594_41:
 29471  005E70  D005               	goto	i2l8013
 29472  005E72                     i2u594_40:
 29473                           
 29474                           ; BSR set to: 4
 29475                           ;usb_device.c: 1191: {
 29476                           ;usb_device.c: 1192: inPipes[0].wCount.Val = SetupPkt.wLength;
 29477  005E72  C436 F03A          	movff	1078,_inPipes+4	;volatile
 29478  005E76  C437 F03B          	movff	1079,_inPipes+5	;volatile
 29479  005E7A  D000               	goto	i2l8013
 29480  005E7C                     i2l8013:
 29481                           
 29482                           ; BSR set to: 4
 29483                           ;usb_device.c: 1193: }
 29484                           ;usb_device.c: 1194: USBCtrlTrfTxService();
 29485  005E7C  ECF7  F024         	call	_USBCtrlTrfTxService	;wreg free
 29486                           
 29487                           ;usb_device.c: 1199: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 29488  005E80  EE20 F002          	lfsr	2,2
 29489  005E84  503C               	movf	_pBDTEntryIn,w,c
 29490  005E86  26D9               	addwf	fsr2l,f,c
 29491  005E88  503D               	movf	_pBDTEntryIn+1,w,c
 29492  005E8A  22DA               	addwfc	fsr2h,f,c
 29493  005E8C  0E38               	movlw	56
 29494  005E8E  6EDE               	movwf	postinc2,c
 29495  005E90  0E04               	movlw	4
 29496  005E92  6EDD               	movwf	postdec2,c
 29497                           
 29498                           ;usb_device.c: 1200: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 29499  005E94  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 29500  005E98  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29501  005E9C  0E48               	movlw	72
 29502  005E9E  6EDF               	movwf	indf2,c
 29503                           
 29504                           ;usb_device.c: 1201: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29505  005EA0  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 29506  005EA4  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29507  005EA8  0E00               	movlw	0
 29508  005EAA  8EDB               	bsf	plusw2,7,c
 29509  005EAC  D000               	goto	i2l1800
 29510  005EAE                     i2l1800:
 29511  005EAE  0012               	return		;funcret
 29512  005EB0                     __end_of_USBCtrlEPAllowDataStage:
 29513                           	opt stack 0
 29514                           pclatu	equ	0xFFB
 29515                           pclath	equ	0xFFA
 29516                           tblptru	equ	0xFF8
 29517                           tblptrh	equ	0xFF7
 29518                           tblptrl	equ	0xFF6
 29519                           tablat	equ	0xFF5
 29520                           prodh	equ	0xFF4
 29521                           prodl	equ	0xFF3
 29522                           intcon	equ	0xFF2
 29523                           intcon2	equ	0xFF1
 29524                           intcon3	equ	0xFF0
 29525                           indf0	equ	0xFEF
 29526                           postinc0	equ	0xFEE
 29527                           fsr0h	equ	0xFEA
 29528                           fsr0l	equ	0xFE9
 29529                           wreg	equ	0xFE8
 29530                           indf1	equ	0xFE7
 29531                           postdec1	equ	0xFE5
 29532                           fsr1h	equ	0xFE2
 29533                           fsr1l	equ	0xFE1
 29534                           indf2	equ	0xFDF
 29535                           postinc2	equ	0xFDE
 29536                           postdec2	equ	0xFDD
 29537                           plusw2	equ	0xFDB
 29538                           fsr2h	equ	0xFDA
 29539                           fsr2l	equ	0xFD9
 29540                           status	equ	0xFD8
 29541                           
 29542 ;; *************** function _USBCheckStdRequest *****************
 29543 ;; Defined at:
 29544 ;;		line 2317 in file "../Includes/Usb/Framework/usb_device.c"
 29545 ;; Parameters:    Size  Location     Type
 29546 ;;		None
 29547 ;; Auto vars:     Size  Location     Type
 29548 ;;		None
 29549 ;; Return value:  Size  Location     Type
 29550 ;;                  1    wreg      void 
 29551 ;; Registers used:
 29552 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29553 ;; Tracked objects:
 29554 ;;		On entry : 0/0
 29555 ;;		On exit  : 0/0
 29556 ;;		Unchanged: 0/0
 29557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29558 ;;      Params:         0       0       0       0       0       0       0       0       0
 29559 ;;      Locals:         0       0       0       0       0       0       0       0       0
 29560 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29561 ;;      Totals:         0       0       0       0       0       0       0       0       0
 29562 ;;Total ram usage:        0 bytes
 29563 ;; Hardware stack levels used:    1
 29564 ;; Hardware stack levels required when called:    6
 29565 ;; This function calls:
 29566 ;;		_USBStdFeatureReqHandler
 29567 ;;		_USBStdGetDscHandler
 29568 ;;		_USBStdGetStatusHandler
 29569 ;;		_USBStdSetCfgHandler
 29570 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 29571 ;; This function is called by:
 29572 ;;		_USBCtrlTrfSetupHandler
 29573 ;; This function uses a non-reentrant model
 29574 ;;
 29575                           
 29576                           	psect	text114
 29577  004FB6                     __ptext114:
 29578                           	opt stack 0
 29579  004FB6                     _USBCheckStdRequest:
 29580                           	opt stack 11
 29581                           
 29582                           ;usb_device.c: 2319: if(SetupPkt.RequestType != (0x00>>5)) return;
 29583                           
 29584                           ;incstack = 0
 29585  004FB6  0104               	movlb	4	; () banked
 29586  004FB8  3930               	swapf	48,w,b	;volatile
 29587  004FBA  32E8               	rrcf	wreg,f,c
 29588  004FBC  0B03               	andlw	3
 29589  004FBE  0900               	iorlw	0
 29590  004FC0  B4D8               	btfsc	status,2,c
 29591  004FC2  D001               	goto	i2u662_41
 29592  004FC4  D001               	goto	i2u662_40
 29593  004FC6                     i2u662_41:
 29594  004FC6  D04B               	goto	i2l8509
 29595  004FC8                     i2u662_40:
 29596  004FC8  D06E               	goto	i2l1933
 29597                           
 29598                           ; BSR set to: 4
 29599  004FCA  D06D               	goto	i2l1933
 29600                           
 29601                           ; BSR set to: 4
 29602                           ;usb_device.c: 2321: switch(SetupPkt.bRequest)
 29603  004FCC  D048               	goto	i2l8509
 29604  004FCE                     i2l1935:
 29605                           
 29606                           ; BSR set to: 4
 29607                           ;usb_device.c: 2324: inPipes[0].info.bits.busy = 1;
 29608  004FCE  8E39               	bsf	_inPipes+3,7,c	;volatile
 29609                           
 29610                           ; BSR set to: 4
 29611                           ;usb_device.c: 2325: USBDeviceState = ADR_PENDING_STATE;
 29612  004FD0  0E08               	movlw	8
 29613  004FD2  0100               	movlb	0	; () banked
 29614  004FD4  6FDE               	movwf	_USBDeviceState& (0+255),b	;volatile
 29615                           
 29616                           ;usb_device.c: 2327: break;
 29617  004FD6  D067               	goto	i2l1933
 29618  004FD8                     i2l8479:
 29619                           
 29620                           ;usb_device.c: 2329: USBStdGetDscHandler();
 29621  004FD8  EC99  F01F         	call	_USBStdGetDscHandler	;wreg free
 29622                           
 29623                           ;usb_device.c: 2330: break;
 29624  004FDC  D064               	goto	i2l1933
 29625  004FDE                     i2l8481:
 29626                           
 29627                           ;usb_device.c: 2332: USBStdSetCfgHandler();
 29628  004FDE  EC6D  F026         	call	_USBStdSetCfgHandler	;wreg free
 29629                           
 29630                           ;usb_device.c: 2333: break;
 29631  004FE2  D061               	goto	i2l1933
 29632  004FE4                     i2l8483:
 29633                           
 29634                           ;usb_device.c: 2335: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 29635  004FE4  0E59               	movlw	low _USBActiveConfiguration
 29636  004FE6  6E36               	movwf	_inPipes,c	;volatile
 29637  004FE8  0E00               	movlw	high _USBActiveConfiguration
 29638  004FEA  6E37               	movwf	_inPipes+1,c	;volatile
 29639                           
 29640                           ;usb_device.c: 2336: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 29641  004FEC  8039               	bsf	_inPipes+3,0,c	;volatile
 29642                           
 29643                           ;usb_device.c: 2337: inPipes[0].wCount.v[0] = 1;
 29644  004FEE  0E01               	movlw	1
 29645  004FF0  6E3A               	movwf	_inPipes+4,c	;volatile
 29646                           
 29647                           ;usb_device.c: 2338: inPipes[0].info.bits.busy = 1;
 29648  004FF2  8E39               	bsf	_inPipes+3,7,c	;volatile
 29649                           
 29650                           ;usb_device.c: 2339: break;
 29651  004FF4  D058               	goto	i2l1933
 29652  004FF6                     i2l8491:
 29653                           
 29654                           ;usb_device.c: 2341: USBStdGetStatusHandler();
 29655  004FF6  EC26  F02A         	call	_USBStdGetStatusHandler	;wreg free
 29656                           
 29657                           ;usb_device.c: 2342: break;
 29658  004FFA  D055               	goto	i2l1933
 29659                           
 29660                           ;usb_device.c: 2343: case 1:
 29661  004FFC  D000               	goto	i2l8493
 29662  004FFE                     i2l8493:
 29663                           
 29664                           ;usb_device.c: 2344: case 3:
 29665                           ;usb_device.c: 2345: USBStdFeatureReqHandler();
 29666  004FFE  EC33  F015         	call	_USBStdFeatureReqHandler	;wreg free
 29667                           
 29668                           ;usb_device.c: 2346: break;
 29669  005002  D051               	goto	i2l1933
 29670  005004                     i2l8495:
 29671                           
 29672                           ;usb_device.c: 2348: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 29673  005004  0104               	movlb	4	; () banked
 29674  005006  5134               	movf	52,w,b	;volatile
 29675  005008  0D01               	mullw	1
 29676  00500A  0EF3               	movlw	low _USBAlternateInterface
 29677  00500C  24F3               	addwf	prodl,w,c
 29678  00500E  6E36               	movwf	_inPipes,c	;volatile
 29679  005010  0E00               	movlw	high _USBAlternateInterface
 29680  005012  20F4               	addwfc	prodh,w,c
 29681  005014  6E37               	movwf	_inPipes+1,c	;volatile
 29682                           
 29683                           ; BSR set to: 4
 29684                           ;usb_device.c: 2349: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 29685  005016  8039               	bsf	_inPipes+3,0,c	;volatile
 29686                           
 29687                           ; BSR set to: 4
 29688                           ;usb_device.c: 2350: inPipes[0].wCount.v[0] = 1;
 29689  005018  0E01               	movlw	1
 29690  00501A  6E3A               	movwf	_inPipes+4,c	;volatile
 29691                           
 29692                           ; BSR set to: 4
 29693                           ;usb_device.c: 2351: inPipes[0].info.bits.busy = 1;
 29694  00501C  8E39               	bsf	_inPipes+3,7,c	;volatile
 29695                           
 29696                           ;usb_device.c: 2352: break;
 29697  00501E  D043               	goto	i2l1933
 29698  005020                     i2l1944:
 29699                           
 29700                           ; BSR set to: 4
 29701                           ;usb_device.c: 2354: inPipes[0].info.bits.busy = 1;
 29702  005020  8E39               	bsf	_inPipes+3,7,c	;volatile
 29703                           
 29704                           ; BSR set to: 4
 29705                           ;usb_device.c: 2355: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 29706  005022  0104               	movlb	4	; () banked
 29707  005024  5134               	movf	52,w,b	;volatile
 29708  005026  0D01               	mullw	1
 29709  005028  0EF3               	movlw	low _USBAlternateInterface
 29710  00502A  24F3               	addwf	prodl,w,c
 29711  00502C  6ED9               	movwf	fsr2l,c
 29712  00502E  0E00               	movlw	high _USBAlternateInterface
 29713  005030  20F4               	addwfc	prodh,w,c
 29714  005032  6EDA               	movwf	fsr2h,c
 29715  005034  C432 FFDF          	movff	1074,indf2	;volatile
 29716                           
 29717                           ;usb_device.c: 2356: break;
 29718  005038  D036               	goto	i2l1933
 29719  00503A                     i2l8505:
 29720                           
 29721                           ; BSR set to: 4
 29722                           ;usb_device.c: 2358: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 29723  00503A  0E00               	movlw	0
 29724  00503C  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 29725  00503E  0E02               	movlw	2
 29726  005040  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 29727  005042  0E00               	movlw	0
 29728  005044  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 29729  005046  0E00               	movlw	0
 29730  005048  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 29731  00504A  0E00               	movlw	0
 29732  00504C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 29733  00504E  0E00               	movlw	0
 29734  005050  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 29735  005052  EC12  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 29736                           
 29737                           ;usb_device.c: 2359: break;
 29738  005056  D027               	goto	i2l1933
 29739                           
 29740                           ;usb_device.c: 2360: case 12:
 29741  005058  D026               	goto	i2l1933
 29742                           
 29743                           ;usb_device.c: 2362: break;
 29744                           
 29745                           ;usb_device.c: 2361: default:
 29746  00505A  D025               	goto	i2l1933
 29747                           
 29748                           ;usb_device.c: 2363: }
 29749  00505C  D024               	goto	i2l1933
 29750  00505E                     i2l8509:
 29751  00505E  0104               	movlb	4	; () banked
 29752  005060  5131               	movf	49,w,b	;volatile
 29753                           
 29754                           ; Switch size 1, requested type "space"
 29755                           ; Number of cases is 11, Range of values is 0 to 12
 29756                           ; switch strategies available:
 29757                           ; Name         Instructions Cycles
 29758                           ; simple_byte           34    18 (average)
 29759                           ;	Chosen strategy is simple_byte
 29760  005062  0A00               	xorlw	0	; case 0
 29761  005064  B4D8               	btfsc	status,2,c
 29762  005066  D7C7               	goto	i2l8491
 29763  005068  0A01               	xorlw	1	; case 1
 29764  00506A  B4D8               	btfsc	status,2,c
 29765  00506C  D7C8               	goto	i2l8493
 29766  00506E  0A02               	xorlw	2	; case 3
 29767  005070  B4D8               	btfsc	status,2,c
 29768  005072  D7C5               	goto	i2l8493
 29769  005074  0A06               	xorlw	6	; case 5
 29770  005076  B4D8               	btfsc	status,2,c
 29771  005078  D7AA               	goto	i2l1935
 29772  00507A  0A03               	xorlw	3	; case 6
 29773  00507C  B4D8               	btfsc	status,2,c
 29774  00507E  D7AC               	goto	i2l8479
 29775  005080  0A01               	xorlw	1	; case 7
 29776  005082  B4D8               	btfsc	status,2,c
 29777  005084  D7DA               	goto	i2l8505
 29778  005086  0A0F               	xorlw	15	; case 8
 29779  005088  B4D8               	btfsc	status,2,c
 29780  00508A  D7AC               	goto	i2l8483
 29781  00508C  0A01               	xorlw	1	; case 9
 29782  00508E  B4D8               	btfsc	status,2,c
 29783  005090  D7A6               	goto	i2l8481
 29784  005092  0A03               	xorlw	3	; case 10
 29785  005094  B4D8               	btfsc	status,2,c
 29786  005096  D7B6               	goto	i2l8495
 29787  005098  0A01               	xorlw	1	; case 11
 29788  00509A  B4D8               	btfsc	status,2,c
 29789  00509C  D7C1               	goto	i2l1944
 29790  00509E  0A07               	xorlw	7	; case 12
 29791  0050A0  B4D8               	btfsc	status,2,c
 29792  0050A2  D001               	goto	i2l1933
 29793  0050A4  D000               	goto	i2l1933
 29794  0050A6                     i2l1933:
 29795  0050A6  0012               	return		;funcret
 29796  0050A8                     __end_of_USBCheckStdRequest:
 29797                           	opt stack 0
 29798                           pclatu	equ	0xFFB
 29799                           pclath	equ	0xFFA
 29800                           tblptru	equ	0xFF8
 29801                           tblptrh	equ	0xFF7
 29802                           tblptrl	equ	0xFF6
 29803                           tablat	equ	0xFF5
 29804                           prodh	equ	0xFF4
 29805                           prodl	equ	0xFF3
 29806                           intcon	equ	0xFF2
 29807                           intcon2	equ	0xFF1
 29808                           intcon3	equ	0xFF0
 29809                           indf0	equ	0xFEF
 29810                           postinc0	equ	0xFEE
 29811                           fsr0h	equ	0xFEA
 29812                           fsr0l	equ	0xFE9
 29813                           wreg	equ	0xFE8
 29814                           indf1	equ	0xFE7
 29815                           postdec1	equ	0xFE5
 29816                           fsr1h	equ	0xFE2
 29817                           fsr1l	equ	0xFE1
 29818                           indf2	equ	0xFDF
 29819                           postinc2	equ	0xFDE
 29820                           postdec2	equ	0xFDD
 29821                           plusw2	equ	0xFDB
 29822                           fsr2h	equ	0xFDA
 29823                           fsr2l	equ	0xFD9
 29824                           status	equ	0xFD8
 29825                           
 29826 ;; *************** function _USBStdSetCfgHandler *****************
 29827 ;; Defined at:
 29828 ;;		line 1629 in file "../Includes/Usb/Framework/usb_device.c"
 29829 ;; Parameters:    Size  Location     Type
 29830 ;;		None
 29831 ;; Auto vars:     Size  Location     Type
 29832 ;;  i               1   21[COMRAM] unsigned char 
 29833 ;; Return value:  Size  Location     Type
 29834 ;;                  1    wreg      void 
 29835 ;; Registers used:
 29836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29837 ;; Tracked objects:
 29838 ;;		On entry : 0/0
 29839 ;;		On exit  : 0/0
 29840 ;;		Unchanged: 0/0
 29841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29842 ;;      Params:         0       0       0       0       0       0       0       0       0
 29843 ;;      Locals:         1       0       0       0       0       0       0       0       0
 29844 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29845 ;;      Totals:         1       0       0       0       0       0       0       0       0
 29846 ;;Total ram usage:        1 bytes
 29847 ;; Hardware stack levels used:    1
 29848 ;; Hardware stack levels required when called:    5
 29849 ;; This function calls:
 29850 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 29851 ;;		i2_memset
 29852 ;; This function is called by:
 29853 ;;		_USBCheckStdRequest
 29854 ;; This function uses a non-reentrant model
 29855 ;;
 29856                           
 29857                           	psect	text115
 29858  004CDA                     __ptext115:
 29859                           	opt stack 0
 29860  004CDA                     _USBStdSetCfgHandler:
 29861                           	opt stack 11
 29862                           
 29863                           ;usb_device.c: 1631: uint8_t i;
 29864                           ;usb_device.c: 1634: inPipes[0].info.bits.busy = 1;
 29865                           
 29866                           ;incstack = 0
 29867  004CDA  8E39               	bsf	_inPipes+3,7,c	;volatile
 29868                           
 29869                           ;usb_device.c: 1637: memset((void*)&UEP1,0x00,(2));;
 29870  004CDC  0E6B               	movlw	107
 29871  004CDE  6E01               	movwf	i2memset@p1,c
 29872  004CE0  0E0F               	movlw	15
 29873  004CE2  6E02               	movwf	i2memset@p1+1,c
 29874  004CE4  0E00               	movlw	0
 29875  004CE6  6E04               	movwf	i2memset@c+1,c
 29876  004CE8  0E00               	movlw	0
 29877  004CEA  6E03               	movwf	i2memset@c,c
 29878  004CEC  0E00               	movlw	0
 29879  004CEE  6E06               	movwf	i2memset@n+1,c
 29880  004CF0  0E02               	movlw	2
 29881  004CF2  6E05               	movwf	i2memset@n,c
 29882  004CF4  ECB9  F037         	call	i2_memset	;wreg free
 29883                           
 29884                           ;usb_device.c: 1640: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 29885  004CF8  0E00               	movlw	0
 29886  004CFA  6E01               	movwf	i2memset@p1,c
 29887  004CFC  0E04               	movlw	4
 29888  004CFE  6E02               	movwf	i2memset@p1+1,c
 29889  004D00  0E00               	movlw	0
 29890  004D02  6E04               	movwf	i2memset@c+1,c
 29891  004D04  0E00               	movlw	0
 29892  004D06  6E03               	movwf	i2memset@c,c
 29893  004D08  0E00               	movlw	0
 29894  004D0A  6E06               	movwf	i2memset@n+1,c
 29895  004D0C  0E30               	movlw	48
 29896  004D0E  6E05               	movwf	i2memset@n,c
 29897  004D10  ECB9  F037         	call	i2_memset	;wreg free
 29898                           
 29899                           ;usb_device.c: 1643: UCONbits.PPBRST = 1;
 29900  004D14  8C60               	bsf	3936,6,c	;volatile
 29901                           
 29902                           ;usb_device.c: 1648: for(i = 0; i < (uint8_t)(2+1u); i++)
 29903  004D16  0E00               	movlw	0
 29904  004D18  6E16               	movwf	USBStdSetCfgHandler@i,c
 29905  004D1A  0E02               	movlw	2
 29906  004D1C  6416               	cpfsgt	USBStdSetCfgHandler@i,c
 29907  004D1E  D001               	goto	i2u595_41
 29908  004D20  D001               	goto	i2u595_40
 29909  004D22                     i2u595_41:
 29910  004D22  D002               	goto	i2l8033
 29911  004D24                     i2u595_40:
 29912  004D24  D01C               	goto	i2l8039
 29913  004D26  D01B               	goto	i2l8039
 29914  004D28                     i2l8033:
 29915                           
 29916                           ;usb_device.c: 1649: {
 29917                           ;usb_device.c: 1650: ep_data_in[i].Val = 0u;
 29918  004D28  5016               	movf	USBStdSetCfgHandler@i,w,c
 29919  004D2A  0D01               	mullw	1
 29920  004D2C  0EBA               	movlw	low _ep_data_in
 29921  004D2E  24F3               	addwf	prodl,w,c
 29922  004D30  6ED9               	movwf	fsr2l,c
 29923  004D32  0E00               	movlw	high _ep_data_in
 29924  004D34  20F4               	addwfc	prodh,w,c
 29925  004D36  6EDA               	movwf	fsr2h,c
 29926  004D38  0E00               	movlw	0
 29927  004D3A  6EDF               	movwf	indf2,c
 29928                           
 29929                           ;usb_device.c: 1651: ep_data_out[i].Val = 0u;
 29930  004D3C  5016               	movf	USBStdSetCfgHandler@i,w,c
 29931  004D3E  0D01               	mullw	1
 29932  004D40  0EB7               	movlw	low _ep_data_out
 29933  004D42  24F3               	addwf	prodl,w,c
 29934  004D44  6ED9               	movwf	fsr2l,c
 29935  004D46  0E00               	movlw	high _ep_data_out
 29936  004D48  20F4               	addwfc	prodh,w,c
 29937  004D4A  6EDA               	movwf	fsr2h,c
 29938  004D4C  0E00               	movlw	0
 29939  004D4E  6EDF               	movwf	indf2,c
 29940  004D50  2A16               	incf	USBStdSetCfgHandler@i,f,c
 29941  004D52  0E02               	movlw	2
 29942  004D54  6416               	cpfsgt	USBStdSetCfgHandler@i,c
 29943  004D56  D001               	goto	i2u596_41
 29944  004D58  D001               	goto	i2u596_40
 29945  004D5A                     i2u596_41:
 29946  004D5A  D7E6               	goto	i2l8033
 29947  004D5C                     i2u596_40:
 29948  004D5C  D000               	goto	i2l8039
 29949  004D5E                     i2l8039:
 29950                           
 29951                           ;usb_device.c: 1652: }
 29952                           ;usb_device.c: 1655: memset((void*)&USBAlternateInterface,0x00,2);
 29953  004D5E  0EF3               	movlw	low _USBAlternateInterface
 29954  004D60  6E01               	movwf	i2memset@p1,c
 29955  004D62  0E00               	movlw	high _USBAlternateInterface
 29956  004D64  6E02               	movwf	i2memset@p1+1,c
 29957  004D66  0E00               	movlw	0
 29958  004D68  6E04               	movwf	i2memset@c+1,c
 29959  004D6A  0E00               	movlw	0
 29960  004D6C  6E03               	movwf	i2memset@c,c
 29961  004D6E  0E00               	movlw	0
 29962  004D70  6E06               	movwf	i2memset@n+1,c
 29963  004D72  0E02               	movlw	2
 29964  004D74  6E05               	movwf	i2memset@n,c
 29965  004D76  ECB9  F037         	call	i2_memset	;wreg free
 29966                           
 29967                           ;usb_device.c: 1658: UCONbits.PPBRST = 0;
 29968  004D7A  9C60               	bcf	3936,6,c	;volatile
 29969                           
 29970                           ;usb_device.c: 1660: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 29971  004D7C  0E08               	movlw	8
 29972  004D7E  6E3C               	movwf	_pBDTEntryIn,c
 29973  004D80  0E04               	movlw	4
 29974  004D82  6E3D               	movwf	_pBDTEntryIn+1,c
 29975                           
 29976                           ;usb_device.c: 1663: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 29977  004D84  0E00               	movlw	0
 29978  004D86  6E44               	movwf	_pBDTEntryEP0OutCurrent,c
 29979  004D88  0E04               	movlw	4
 29980  004D8A  6E45               	movwf	_pBDTEntryEP0OutCurrent+1,c
 29981                           
 29982                           ;usb_device.c: 1664: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 29983  004D8C  C044  F042         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 29984  004D90  C045  F043         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 29985                           
 29986                           ;usb_device.c: 1667: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 29987  004D94  C432 F059          	movff	1074,_USBActiveConfiguration	;volatile
 29988                           
 29989                           ;usb_device.c: 1670: if(USBActiveConfiguration == 0)
 29990  004D98  5059               	movf	_USBActiveConfiguration,w,c	;volatile
 29991  004D9A  A4D8               	btfss	status,2,c
 29992  004D9C  D001               	goto	i2u597_41
 29993  004D9E  D001               	goto	i2u597_40
 29994  004DA0                     i2u597_41:
 29995  004DA0  D004               	goto	i2l8055
 29996  004DA2                     i2u597_40:
 29997                           
 29998                           ;usb_device.c: 1671: {
 29999                           ;usb_device.c: 1673: USBDeviceState = ADDRESS_STATE;
 30000  004DA2  0E10               	movlw	16
 30001  004DA4  0100               	movlb	0	; () banked
 30002  004DA6  6FDE               	movwf	_USBDeviceState& (0+255),b	;volatile
 30003                           
 30004                           ;usb_device.c: 1674: }
 30005  004DA8  D012               	goto	i2l1853
 30006  004DAA                     i2l8055:
 30007                           
 30008                           ;usb_device.c: 1675: else
 30009                           ;usb_device.c: 1676: {
 30010                           ;usb_device.c: 1678: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 30011  004DAA  0E00               	movlw	0
 30012  004DAC  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 30013  004DAE  0E01               	movlw	1
 30014  004DB0  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 30015  004DB2  0E59               	movlw	low _USBActiveConfiguration
 30016  004DB4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 30017  004DB6  0E00               	movlw	high _USBActiveConfiguration
 30018  004DB8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 30019  004DBA  0E00               	movlw	0
 30020  004DBC  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 30021  004DBE  0E01               	movlw	1
 30022  004DC0  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 30023  004DC2  EC12  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 30024                           
 30025                           ;usb_device.c: 1683: USBDeviceState = CONFIGURED_STATE;
 30026  004DC6  0E20               	movlw	32
 30027  004DC8  0100               	movlb	0	; () banked
 30028  004DCA  6FDE               	movwf	_USBDeviceState& (0+255),b	;volatile
 30029  004DCC  D000               	goto	i2l1853
 30030  004DCE                     i2l1853:
 30031                           
 30032                           ; BSR set to: 0
 30033  004DCE  0012               	return		;funcret
 30034  004DD0                     __end_of_USBStdSetCfgHandler:
 30035                           	opt stack 0
 30036                           pclatu	equ	0xFFB
 30037                           pclath	equ	0xFFA
 30038                           tblptru	equ	0xFF8
 30039                           tblptrh	equ	0xFF7
 30040                           tblptrl	equ	0xFF6
 30041                           tablat	equ	0xFF5
 30042                           prodh	equ	0xFF4
 30043                           prodl	equ	0xFF3
 30044                           intcon	equ	0xFF2
 30045                           intcon2	equ	0xFF1
 30046                           intcon3	equ	0xFF0
 30047                           indf0	equ	0xFEF
 30048                           postinc0	equ	0xFEE
 30049                           fsr0h	equ	0xFEA
 30050                           fsr0l	equ	0xFE9
 30051                           wreg	equ	0xFE8
 30052                           indf1	equ	0xFE7
 30053                           postdec1	equ	0xFE5
 30054                           fsr1h	equ	0xFE2
 30055                           fsr1l	equ	0xFE1
 30056                           indf2	equ	0xFDF
 30057                           postinc2	equ	0xFDE
 30058                           postdec2	equ	0xFDD
 30059                           plusw2	equ	0xFDB
 30060                           fsr2h	equ	0xFDA
 30061                           fsr2l	equ	0xFD9
 30062                           status	equ	0xFD8
 30063                           
 30064 ;; *************** function i2_memset *****************
 30065 ;; Defined at:
 30066 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memset.c"
 30067 ;; Parameters:    Size  Location     Type
 30068 ;;  p1              2    0[COMRAM] PTR void 
 30069 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 30070 ;;  c               2    2[COMRAM] int 
 30071 ;;  n               2    4[COMRAM] unsigned int 
 30072 ;; Auto vars:     Size  Location     Type
 30073 ;;  memset          2    6[COMRAM] PTR unsigned char 
 30074 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 30075 ;; Return value:  Size  Location     Type
 30076 ;;                  2    0[COMRAM] PTR void 
 30077 ;; Registers used:
 30078 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30079 ;; Tracked objects:
 30080 ;;		On entry : 0/0
 30081 ;;		On exit  : 0/0
 30082 ;;		Unchanged: 0/0
 30083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30084 ;;      Params:         6       0       0       0       0       0       0       0       0
 30085 ;;      Locals:         2       0       0       0       0       0       0       0       0
 30086 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30087 ;;      Totals:         8       0       0       0       0       0       0       0       0
 30088 ;;Total ram usage:        8 bytes
 30089 ;; Hardware stack levels used:    1
 30090 ;; This function calls:
 30091 ;;		Nothing
 30092 ;; This function is called by:
 30093 ;;		_USBStdSetCfgHandler
 30094 ;;		i2_USBDeviceInit
 30095 ;; This function uses a non-reentrant model
 30096 ;;
 30097                           
 30098                           	psect	text116
 30099  006F72                     __ptext116:
 30100                           	opt stack 0
 30101  006F72                     i2_memset:
 30102                           	opt stack 18
 30103                           
 30104                           ; BSR set to: 0
 30105                           ;incstack = 0
 30106  006F72  C001  F007         	movff	i2memset@p1,i2memset@p
 30107  006F76  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 30108  006F7A  D009               	goto	i2l7855
 30109  006F7C                     i2l7851:
 30110  006F7C  C007  FFD9         	movff	i2memset@p,fsr2l
 30111  006F80  C008  FFDA         	movff	i2memset@p+1,fsr2h
 30112  006F84  C003  FFDF         	movff	i2memset@c,indf2
 30113  006F88  4A07               	infsnz	i2memset@p,f,c
 30114  006F8A  2A08               	incf	i2memset@p+1,f,c
 30115  006F8C  D000               	goto	i2l7855
 30116  006F8E                     i2l7855:
 30117  006F8E  0605               	decf	i2memset@n,f,c
 30118  006F90  A0D8               	btfss	status,0,c
 30119  006F92  0606               	decf	i2memset@n+1,f,c
 30120  006F94  2805               	incf	i2memset@n,w,c
 30121  006F96  E104               	bnz	i2u579_41
 30122  006F98  2806               	incf	i2memset@n+1,w,c
 30123  006F9A  A4D8               	btfss	status,2,c
 30124  006F9C  D001               	goto	i2u579_41
 30125  006F9E  D001               	goto	i2u579_40
 30126  006FA0                     i2u579_41:
 30127  006FA0  D7ED               	goto	i2l7851
 30128  006FA2                     i2u579_40:
 30129  006FA2  D000               	goto	i2l2613
 30130  006FA4                     i2l2613:
 30131  006FA4  0012               	return		;funcret
 30132  006FA6                     __end_ofi2_memset:
 30133                           	opt stack 0
 30134                           pclatu	equ	0xFFB
 30135                           pclath	equ	0xFFA
 30136                           tblptru	equ	0xFF8
 30137                           tblptrh	equ	0xFF7
 30138                           tblptrl	equ	0xFF6
 30139                           tablat	equ	0xFF5
 30140                           prodh	equ	0xFF4
 30141                           prodl	equ	0xFF3
 30142                           intcon	equ	0xFF2
 30143                           intcon2	equ	0xFF1
 30144                           intcon3	equ	0xFF0
 30145                           indf0	equ	0xFEF
 30146                           postinc0	equ	0xFEE
 30147                           fsr0h	equ	0xFEA
 30148                           fsr0l	equ	0xFE9
 30149                           wreg	equ	0xFE8
 30150                           indf1	equ	0xFE7
 30151                           postdec1	equ	0xFE5
 30152                           fsr1h	equ	0xFE2
 30153                           fsr1l	equ	0xFE1
 30154                           indf2	equ	0xFDF
 30155                           postinc2	equ	0xFDE
 30156                           postdec2	equ	0xFDD
 30157                           plusw2	equ	0xFDB
 30158                           fsr2h	equ	0xFDA
 30159                           fsr2l	equ	0xFD9
 30160                           status	equ	0xFD8
 30161                           
 30162 ;; *************** function _USBStdGetStatusHandler *****************
 30163 ;; Defined at:
 30164 ;;		line 1773 in file "../Includes/Usb/Framework/usb_device.c"
 30165 ;; Parameters:    Size  Location     Type
 30166 ;;		None
 30167 ;; Auto vars:     Size  Location     Type
 30168 ;;  p               2    1[COMRAM] PTR struct __BDT
 30169 ;;		 -> BDT(48), NULL(0), 
 30170 ;; Return value:  Size  Location     Type
 30171 ;;                  1    wreg      void 
 30172 ;; Registers used:
 30173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30174 ;; Tracked objects:
 30175 ;;		On entry : 0/0
 30176 ;;		On exit  : 0/0
 30177 ;;		Unchanged: 0/0
 30178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30179 ;;      Params:         0       0       0       0       0       0       0       0       0
 30180 ;;      Locals:         2       0       0       0       0       0       0       0       0
 30181 ;;      Temps:          1       0       0       0       0       0       0       0       0
 30182 ;;      Totals:         3       0       0       0       0       0       0       0       0
 30183 ;;Total ram usage:        3 bytes
 30184 ;; Hardware stack levels used:    1
 30185 ;; This function calls:
 30186 ;;		Nothing
 30187 ;; This function is called by:
 30188 ;;		_USBCheckStdRequest
 30189 ;; This function uses a non-reentrant model
 30190 ;;
 30191                           
 30192                           	psect	text117
 30193  00544C                     __ptext117:
 30194                           	opt stack 0
 30195  00544C                     _USBStdGetStatusHandler:
 30196                           	opt stack 16
 30197                           
 30198                           ;usb_device.c: 1775: CtrlTrfData[0] = 0;
 30199                           
 30200                           ;incstack = 0
 30201  00544C  0E00               	movlw	0
 30202  00544E  0104               	movlb	4	; () banked
 30203  005450  6F38               	movwf	56,b	;volatile
 30204                           
 30205                           ;usb_device.c: 1776: CtrlTrfData[1] = 0;
 30206  005452  0E00               	movlw	0
 30207  005454  0104               	movlb	4	; () banked
 30208  005456  6F39               	movwf	57,b	;volatile
 30209                           
 30210                           ;usb_device.c: 1778: switch(SetupPkt.Recipient)
 30211  005458  D04F               	goto	i2l8111
 30212  00545A                     i2l1871:
 30213                           
 30214                           ; BSR set to: 4
 30215                           ;usb_device.c: 1781: inPipes[0].info.bits.busy = 1;
 30216  00545A  8E39               	bsf	_inPipes+3,7,c	;volatile
 30217                           
 30218                           ;usb_device.c: 1786: if(0 == 1)
 30219  00545C  D003               	goto	i2l8095
 30220                           
 30221                           ; BSR set to: 4
 30222                           ;usb_device.c: 1787: {
 30223                           ;usb_device.c: 1788: CtrlTrfData[0]|=0x01;
 30224  00545E  0104               	movlb	4	; () banked
 30225  005460  8138               	bsf	56,0,b	;volatile
 30226  005462  D000               	goto	i2l8095
 30227  005464                     i2l8095:
 30228                           
 30229                           ; BSR set to: 4
 30230                           ;usb_device.c: 1789: }
 30231                           ;usb_device.c: 1791: if(RemoteWakeup == 1)
 30232  005464  0100               	movlb	0	; () banked
 30233  005466  05D7               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 30234  005468  A4D8               	btfss	status,2,c
 30235  00546A  D001               	goto	i2u604_41
 30236  00546C  D001               	goto	i2u604_40
 30237  00546E                     i2u604_41:
 30238  00546E  D051               	goto	i2l1874
 30239  005470                     i2u604_40:
 30240                           
 30241                           ; BSR set to: 0
 30242                           ;usb_device.c: 1792: {
 30243                           ;usb_device.c: 1793: CtrlTrfData[0]|=0x02;
 30244  005470  0104               	movlb	4	; () banked
 30245  005472  8338               	bsf	56,1,b	;volatile
 30246  005474  D04E               	goto	i2l1874
 30247                           
 30248                           ; BSR set to: 4
 30249                           ;usb_device.c: 1794: }
 30250                           ;usb_device.c: 1795: break;
 30251  005476  D04D               	goto	i2l1874
 30252  005478                     i2l1875:
 30253                           
 30254                           ; BSR set to: 4
 30255                           ;usb_device.c: 1797: inPipes[0].info.bits.busy = 1;
 30256  005478  8E39               	bsf	_inPipes+3,7,c	;volatile
 30257                           
 30258                           ;usb_device.c: 1798: break;
 30259  00547A  D04B               	goto	i2l1874
 30260  00547C                     i2l1876:
 30261                           
 30262                           ; BSR set to: 4
 30263                           ;usb_device.c: 1800: inPipes[0].info.bits.busy = 1;
 30264  00547C  8E39               	bsf	_inPipes+3,7,c	;volatile
 30265                           
 30266                           ;usb_device.c: 1804: {
 30267                           ;usb_device.c: 1805: BDT_ENTRY *p;
 30268                           ;usb_device.c: 1807: if(SetupPkt.EPDir == 0)
 30269  00547E  0104               	movlb	4	; () banked
 30270  005480  BF34               	btfsc	52,7,b	;volatile
 30271  005482  D001               	goto	i2u605_41
 30272  005484  D001               	goto	i2u605_40
 30273  005486                     i2u605_41:
 30274  005486  D011               	goto	i2l8101
 30275  005488                     i2u605_40:
 30276                           
 30277                           ; BSR set to: 4
 30278                           ;usb_device.c: 1808: {
 30279                           ;usb_device.c: 1809: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 30280  005488  0104               	movlb	4	; () banked
 30281  00548A  5134               	movf	52,w,b	;volatile
 30282  00548C  0B0F               	andlw	15
 30283  00548E  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 30284  005490  5001               	movf	??_USBStdGetStatusHandler,w,c
 30285  005492  0D02               	mullw	2
 30286  005494  0E40               	movlw	low _pBDTEntryOut
 30287  005496  24F3               	addwf	prodl,w,c
 30288  005498  6ED9               	movwf	fsr2l,c
 30289  00549A  0E01               	movlw	high _pBDTEntryOut
 30290  00549C  20F4               	addwfc	prodh,w,c
 30291  00549E  6EDA               	movwf	fsr2h,c
 30292  0054A0  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 30293  0054A4  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 30294                           
 30295                           ;usb_device.c: 1810: }
 30296  0054A8  D011               	goto	i2l8103
 30297  0054AA                     i2l8101:
 30298                           
 30299                           ; BSR set to: 4
 30300                           ;usb_device.c: 1811: else
 30301                           ;usb_device.c: 1812: {
 30302                           ;usb_device.c: 1813: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 30303  0054AA  0104               	movlb	4	; () banked
 30304  0054AC  5134               	movf	52,w,b	;volatile
 30305  0054AE  0B0F               	andlw	15
 30306  0054B0  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 30307  0054B2  5001               	movf	??_USBStdGetStatusHandler,w,c
 30308  0054B4  0D02               	mullw	2
 30309  0054B6  0E3C               	movlw	low _pBDTEntryIn
 30310  0054B8  24F3               	addwf	prodl,w,c
 30311  0054BA  6ED9               	movwf	fsr2l,c
 30312  0054BC  0E00               	movlw	high _pBDTEntryIn
 30313  0054BE  20F4               	addwfc	prodh,w,c
 30314  0054C0  6EDA               	movwf	fsr2h,c
 30315  0054C2  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 30316  0054C6  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 30317  0054CA  D000               	goto	i2l8103
 30318  0054CC                     i2l8103:
 30319                           
 30320                           ; BSR set to: 4
 30321                           ;usb_device.c: 1814: }
 30322                           ;usb_device.c: 1816: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 30323  0054CC  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 30324  0054D0  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 30325  0054D4  AEDF               	btfss	indf2,7,c
 30326  0054D6  D001               	goto	i2u606_41
 30327  0054D8  D001               	goto	i2u606_40
 30328  0054DA                     i2u606_41:
 30329  0054DA  D01B               	goto	i2l1874
 30330  0054DC                     i2u606_40:
 30331                           
 30332                           ; BSR set to: 4
 30333  0054DC  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 30334  0054E0  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 30335  0054E4  A4DF               	btfss	indf2,2,c
 30336  0054E6  D001               	goto	i2u607_41
 30337  0054E8  D001               	goto	i2u607_40
 30338  0054EA                     i2u607_41:
 30339  0054EA  D013               	goto	i2l1874
 30340  0054EC                     i2u607_40:
 30341                           
 30342                           ; BSR set to: 4
 30343                           ;usb_device.c: 1817: CtrlTrfData[0]=0x01;
 30344  0054EC  0E01               	movlw	1
 30345  0054EE  0104               	movlb	4	; () banked
 30346  0054F0  6F38               	movwf	56,b	;volatile
 30347  0054F2  D00F               	goto	i2l1874
 30348                           
 30349                           ; BSR set to: 4
 30350                           ;usb_device.c: 1818: break;
 30351  0054F4  D00E               	goto	i2l1874
 30352                           
 30353                           ; BSR set to: 4
 30354                           ;usb_device.c: 1819: }
 30355                           ;usb_device.c: 1820: }
 30356  0054F6  D00D               	goto	i2l1874
 30357  0054F8                     i2l8111:
 30358                           
 30359                           ; BSR set to: 4
 30360  0054F8  0104               	movlb	4	; () banked
 30361  0054FA  5130               	movf	48,w,b	;volatile
 30362  0054FC  0B1F               	andlw	31
 30363                           
 30364                           ; Switch size 1, requested type "space"
 30365                           ; Number of cases is 3, Range of values is 0 to 2
 30366                           ; switch strategies available:
 30367                           ; Name         Instructions Cycles
 30368                           ; simple_byte           10     6 (average)
 30369                           ;	Chosen strategy is simple_byte
 30370  0054FE  0A00               	xorlw	0	; case 0
 30371  005500  B4D8               	btfsc	status,2,c
 30372  005502  D7AB               	goto	i2l1871
 30373  005504  0A01               	xorlw	1	; case 1
 30374  005506  B4D8               	btfsc	status,2,c
 30375  005508  D7B7               	goto	i2l1875
 30376  00550A  0A03               	xorlw	3	; case 2
 30377  00550C  B4D8               	btfsc	status,2,c
 30378  00550E  D7B6               	goto	i2l1876
 30379  005510  D000               	goto	i2l1874
 30380  005512                     i2l1874:
 30381                           
 30382                           ;usb_device.c: 1822: if(inPipes[0].info.bits.busy == 1)
 30383  005512  AE39               	btfss	_inPipes+3,7,c	;volatile
 30384  005514  D001               	goto	i2u608_41
 30385  005516  D001               	goto	i2u608_40
 30386  005518                     i2u608_41:
 30387  005518  D008               	goto	i2l1881
 30388  00551A                     i2u608_40:
 30389                           
 30390                           ;usb_device.c: 1823: {
 30391                           ;usb_device.c: 1824: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 30392  00551A  0E38               	movlw	56
 30393  00551C  6E36               	movwf	_inPipes,c	;volatile
 30394  00551E  0E04               	movlw	4
 30395  005520  6E37               	movwf	_inPipes+1,c	;volatile
 30396                           
 30397                           ;usb_device.c: 1825: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 30398  005522  8039               	bsf	_inPipes+3,0,c	;volatile
 30399                           
 30400                           ;usb_device.c: 1826: inPipes[0].wCount.v[0] = 2;
 30401  005524  0E02               	movlw	2
 30402  005526  6E3A               	movwf	_inPipes+4,c	;volatile
 30403  005528  D000               	goto	i2l1881
 30404  00552A                     i2l1881:
 30405  00552A  0012               	return		;funcret
 30406  00552C                     __end_of_USBStdGetStatusHandler:
 30407                           	opt stack 0
 30408                           pclatu	equ	0xFFB
 30409                           pclath	equ	0xFFA
 30410                           tblptru	equ	0xFF8
 30411                           tblptrh	equ	0xFF7
 30412                           tblptrl	equ	0xFF6
 30413                           tablat	equ	0xFF5
 30414                           prodh	equ	0xFF4
 30415                           prodl	equ	0xFF3
 30416                           intcon	equ	0xFF2
 30417                           intcon2	equ	0xFF1
 30418                           intcon3	equ	0xFF0
 30419                           indf0	equ	0xFEF
 30420                           postinc0	equ	0xFEE
 30421                           fsr0h	equ	0xFEA
 30422                           fsr0l	equ	0xFE9
 30423                           wreg	equ	0xFE8
 30424                           indf1	equ	0xFE7
 30425                           postdec1	equ	0xFE5
 30426                           fsr1h	equ	0xFE2
 30427                           fsr1l	equ	0xFE1
 30428                           indf2	equ	0xFDF
 30429                           postinc2	equ	0xFDE
 30430                           postdec2	equ	0xFDD
 30431                           plusw2	equ	0xFDB
 30432                           fsr2h	equ	0xFDA
 30433                           fsr2l	equ	0xFD9
 30434                           status	equ	0xFD8
 30435                           
 30436 ;; *************** function _USBStdGetDscHandler *****************
 30437 ;; Defined at:
 30438 ;;		line 1704 in file "../Includes/Usb/Framework/usb_device.c"
 30439 ;; Parameters:    Size  Location     Type
 30440 ;;		None
 30441 ;; Auto vars:     Size  Location     Type
 30442 ;;		None
 30443 ;; Return value:  Size  Location     Type
 30444 ;;                  1    wreg      void 
 30445 ;; Registers used:
 30446 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 30447 ;; Tracked objects:
 30448 ;;		On entry : 0/0
 30449 ;;		On exit  : 0/0
 30450 ;;		Unchanged: 0/0
 30451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30452 ;;      Params:         0       0       0       0       0       0       0       0       0
 30453 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30454 ;;      Temps:          2       0       0       0       0       0       0       0       0
 30455 ;;      Totals:         2       0       0       0       0       0       0       0       0
 30456 ;;Total ram usage:        2 bytes
 30457 ;; Hardware stack levels used:    1
 30458 ;; This function calls:
 30459 ;;		Nothing
 30460 ;; This function is called by:
 30461 ;;		_USBCheckStdRequest
 30462 ;; This function uses a non-reentrant model
 30463 ;;
 30464                           
 30465                           	psect	text118
 30466  003F32                     __ptext118:
 30467                           	opt stack 0
 30468  003F32                     _USBStdGetDscHandler:
 30469                           	opt stack 16
 30470                           
 30471                           ;usb_device.c: 1706: if(SetupPkt.bmRequestType == 0x80)
 30472                           
 30473                           ;incstack = 0
 30474  003F32  0E80               	movlw	128
 30475  003F34  0104               	movlb	4	; () banked
 30476  003F36  1930               	xorwf	48,w,b	;volatile
 30477  003F38  A4D8               	btfss	status,2,c
 30478  003F3A  D001               	goto	i2u598_41
 30479  003F3C  D001               	goto	i2u598_40
 30480  003F3E                     i2u598_41:
 30481  003F3E  D093               	goto	i2l1867
 30482  003F40                     i2u598_40:
 30483                           
 30484                           ; BSR set to: 4
 30485                           ;usb_device.c: 1707: {
 30486                           ;usb_device.c: 1708: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 30487  003F40  0EC0               	movlw	192
 30488  003F42  6E39               	movwf	_inPipes+3,c	;volatile
 30489                           
 30490                           ;usb_device.c: 1710: switch(SetupPkt.bDescriptorType)
 30491  003F44  D083               	goto	i2l8089
 30492  003F46                     i2l8063:
 30493                           
 30494                           ; BSR set to: 4
 30495                           ;usb_device.c: 1713: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 30496  003F46  0EA2               	movlw	low _device_dsc
 30497  003F48  6E36               	movwf	_inPipes,c	;volatile
 30498  003F4A  0E79               	movlw	high _device_dsc
 30499  003F4C  6E37               	movwf	_inPipes+1,c	;volatile
 30500                           
 30501                           ; BSR set to: 4
 30502                           ;usb_device.c: 1714: inPipes[0].wCount.Val = sizeof(device_dsc);
 30503  003F4E  0E00               	movlw	0
 30504  003F50  6E3B               	movwf	_inPipes+5,c	;volatile
 30505  003F52  0E12               	movlw	18
 30506  003F54  6E3A               	movwf	_inPipes+4,c	;volatile
 30507                           
 30508                           ;usb_device.c: 1715: break;
 30509  003F56  D087               	goto	i2l1867
 30510  003F58                     i2l8067:
 30511                           
 30512                           ; BSR set to: 4
 30513                           ;usb_device.c: 1720: if(SetupPkt.bDscIndex < 1)
 30514  003F58  0104               	movlb	4	; () banked
 30515  003F5A  5132               	movf	50,w,b	;volatile
 30516  003F5C  A4D8               	btfss	status,2,c
 30517  003F5E  D001               	goto	i2u599_41
 30518  003F60  D001               	goto	i2u599_40
 30519  003F62                     i2u599_41:
 30520  003F62  D03E               	goto	i2l8075
 30521  003F64                     i2u599_40:
 30522                           
 30523                           ; BSR set to: 4
 30524                           ;usb_device.c: 1721: {
 30525                           ;usb_device.c: 1722: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 30526  003F64  0104               	movlb	4	; () banked
 30527  003F66  5132               	movf	50,w,b	;volatile
 30528  003F68  0D02               	mullw	2
 30529  003F6A  0EF5               	movlw	low _USB_CD_Ptr
 30530  003F6C  24F3               	addwf	prodl,w,c
 30531  003F6E  6EF6               	movwf	tblptrl,c
 30532  003F70  0E75               	movlw	high _USB_CD_Ptr
 30533  003F72  20F4               	addwfc	prodh,w,c
 30534  003F74  6EF7               	movwf	tblptrh,c
 30535  003F76                     	if	0	;There are less than 3 active tblptr bytes
 30536  003F76                     	endif
 30537  003F76  0009               	tblrd		*+
 30538  003F78  CFF5 F036          	movff	tablat,_inPipes	;volatile
 30539  003F7C  000A               	tblrd		*-
 30540  003F7E  CFF5 F037          	movff	tablat,_inPipes+1	;volatile
 30541                           
 30542                           ; BSR set to: 4
 30543                           ;usb_device.c: 1727: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 30544  003F82  0E02               	movlw	2
 30545  003F84  2436               	addwf	_inPipes,w,c	;volatile
 30546  003F86  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 30547  003F88  0E00               	movlw	0
 30548  003F8A  2037               	addwfc	_inPipes+1,w,c	;volatile
 30549  003F8C  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 30550  003F8E  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 30551  003F92  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 30552  003F96  6AF8               	clrf	tblptru,c
 30553  003F98  0E07               	movlw	(high __ramtop+-1)
 30554  003F9A  64F7               	cpfsgt	tblptrh,c
 30555  003F9C  D003               	bra	i2u600_47
 30556  003F9E  0008               	tblrd		*
 30557  003FA0  50F5               	movf	tablat,w,c
 30558  003FA2  D005               	bra	i2u600_40
 30559  003FA4                     i2u600_47:
 30560  003FA4  CFF6 FFE9          	movff	tblptrl,fsr0l
 30561  003FA8  CFF7 FFEA          	movff	tblptrh,fsr0h
 30562  003FAC  50EF               	movf	indf0,w,c
 30563  003FAE                     i2u600_40:
 30564  003FAE  6E3A               	movwf	_inPipes+4,c	;volatile
 30565                           
 30566                           ;usb_device.c: 1728: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 30567  003FB0  0E03               	movlw	3
 30568  003FB2  2436               	addwf	_inPipes,w,c	;volatile
 30569  003FB4  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 30570  003FB6  0E00               	movlw	0
 30571  003FB8  2037               	addwfc	_inPipes+1,w,c	;volatile
 30572  003FBA  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 30573  003FBC  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 30574  003FC0  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 30575  003FC4  6AF8               	clrf	tblptru,c
 30576  003FC6  0E07               	movlw	(high __ramtop+-1)
 30577  003FC8  64F7               	cpfsgt	tblptrh,c
 30578  003FCA  D003               	bra	i2u601_47
 30579  003FCC  0008               	tblrd		*
 30580  003FCE  50F5               	movf	tablat,w,c
 30581  003FD0  D005               	bra	i2u601_40
 30582  003FD2                     i2u601_47:
 30583  003FD2  CFF6 FFE9          	movff	tblptrl,fsr0l
 30584  003FD6  CFF7 FFEA          	movff	tblptrh,fsr0h
 30585  003FDA  50EF               	movf	indf0,w,c
 30586  003FDC                     i2u601_40:
 30587  003FDC  6E3B               	movwf	_inPipes+5,c	;volatile
 30588                           
 30589                           ;usb_device.c: 1729: }
 30590  003FDE  D043               	goto	i2l1867
 30591  003FE0                     i2l8075:
 30592                           
 30593                           ;usb_device.c: 1730: else
 30594                           ;usb_device.c: 1731: {
 30595                           ;usb_device.c: 1732: inPipes[0].info.Val = 0;
 30596  003FE0  0E00               	movlw	0
 30597  003FE2  6E39               	movwf	_inPipes+3,c	;volatile
 30598  003FE4  D040               	goto	i2l1867
 30599                           
 30600                           ;usb_device.c: 1733: }
 30601                           ;usb_device.c: 1734: break;
 30602  003FE6  D03F               	goto	i2l1867
 30603  003FE8                     i2l8077:
 30604                           
 30605                           ;usb_device.c: 1739: if(SetupPkt.bDscIndex<3)
 30606  003FE8  0E03               	movlw	3
 30607  003FEA  0104               	movlb	4	; () banked
 30608  003FEC  6132               	cpfslt	50,b	;volatile
 30609  003FEE  D001               	goto	i2u602_41
 30610  003FF0  D001               	goto	i2u602_40
 30611  003FF2                     i2u602_41:
 30612  003FF2  D024               	goto	i2l8083
 30613  003FF4                     i2u602_40:
 30614                           
 30615                           ; BSR set to: 4
 30616                           ;usb_device.c: 1740: {
 30617                           ;usb_device.c: 1742: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 30618  003FF4  0104               	movlb	4	; () banked
 30619  003FF6  5132               	movf	50,w,b	;volatile
 30620  003FF8  0D02               	mullw	2
 30621  003FFA  0EEF               	movlw	low _USB_SD_Ptr
 30622  003FFC  24F3               	addwf	prodl,w,c
 30623  003FFE  6EF6               	movwf	tblptrl,c
 30624  004000  0E75               	movlw	high _USB_SD_Ptr
 30625  004002  20F4               	addwfc	prodh,w,c
 30626  004004  6EF7               	movwf	tblptrh,c
 30627  004006                     	if	0	;There are less than 3 active tblptr bytes
 30628  004006                     	endif
 30629  004006  0009               	tblrd		*+
 30630  004008  CFF5 F036          	movff	tablat,_inPipes	;volatile
 30631  00400C  000A               	tblrd		*-
 30632  00400E  CFF5 F037          	movff	tablat,_inPipes+1	;volatile
 30633                           
 30634                           ; BSR set to: 4
 30635                           ;usb_device.c: 1744: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 30636  004012  C036  FFF6         	movff	_inPipes,tblptrl	;volatile
 30637  004016  C037  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 30638  00401A  6AF8               	clrf	tblptru,c
 30639  00401C  0E07               	movlw	(high __ramtop+-1)
 30640  00401E  64F7               	cpfsgt	tblptrh,c
 30641  004020  D003               	bra	i2u603_47
 30642  004022  0008               	tblrd		*
 30643  004024  50F5               	movf	tablat,w,c
 30644  004026  D005               	bra	i2u603_40
 30645  004028                     i2u603_47:
 30646  004028  CFF6 FFE9          	movff	tblptrl,fsr0l
 30647  00402C  CFF7 FFEA          	movff	tblptrh,fsr0h
 30648  004030  50EF               	movf	indf0,w,c
 30649  004032                     i2u603_40:
 30650  004032  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 30651  004034  5001               	movf	??_USBStdGetDscHandler,w,c
 30652  004036  6E3A               	movwf	_inPipes+4,c	;volatile
 30653  004038  6A3B               	clrf	_inPipes+5,c	;volatile
 30654                           
 30655                           ;usb_device.c: 1745: }
 30656  00403A  D015               	goto	i2l1867
 30657  00403C                     i2l8083:
 30658                           
 30659                           ;usb_device.c: 1746: else
 30660                           ;usb_device.c: 1747: {
 30661                           ;usb_device.c: 1748: inPipes[0].info.Val = 0;
 30662  00403C  0E00               	movlw	0
 30663  00403E  6E39               	movwf	_inPipes+3,c	;volatile
 30664  004040  D012               	goto	i2l1867
 30665                           
 30666                           ;usb_device.c: 1749: }
 30667                           ;usb_device.c: 1750: break;
 30668  004042  D011               	goto	i2l1867
 30669  004044                     i2l8085:
 30670                           
 30671                           ;usb_device.c: 1752: inPipes[0].info.Val = 0;
 30672  004044  0E00               	movlw	0
 30673  004046  6E39               	movwf	_inPipes+3,c	;volatile
 30674                           
 30675                           ;usb_device.c: 1753: break;
 30676  004048  D00E               	goto	i2l1867
 30677                           
 30678                           ;usb_device.c: 1754: }
 30679  00404A  D00D               	goto	i2l1867
 30680  00404C                     i2l8089:
 30681  00404C  0104               	movlb	4	; () banked
 30682  00404E  5133               	movf	51,w,b	;volatile
 30683                           
 30684                           ; Switch size 1, requested type "space"
 30685                           ; Number of cases is 3, Range of values is 1 to 3
 30686                           ; switch strategies available:
 30687                           ; Name         Instructions Cycles
 30688                           ; simple_byte           10     6 (average)
 30689                           ;	Chosen strategy is simple_byte
 30690  004050  0A01               	xorlw	1	; case 1
 30691  004052  B4D8               	btfsc	status,2,c
 30692  004054  D778               	goto	i2l8063
 30693  004056  0A03               	xorlw	3	; case 2
 30694  004058  B4D8               	btfsc	status,2,c
 30695  00405A  D77E               	goto	i2l8067
 30696  00405C  0A01               	xorlw	1	; case 3
 30697  00405E  B4D8               	btfsc	status,2,c
 30698  004060  D7C3               	goto	i2l8077
 30699  004062  D7F0               	goto	i2l8085
 30700                           
 30701                           ; BSR set to: 4
 30702  004064  D000               	goto	i2l1867
 30703  004066                     i2l1867:
 30704  004066  0012               	return		;funcret
 30705  004068                     __end_of_USBStdGetDscHandler:
 30706                           	opt stack 0
 30707                           pclatu	equ	0xFFB
 30708                           pclath	equ	0xFFA
 30709                           tblptru	equ	0xFF8
 30710                           tblptrh	equ	0xFF7
 30711                           tblptrl	equ	0xFF6
 30712                           tablat	equ	0xFF5
 30713                           prodh	equ	0xFF4
 30714                           prodl	equ	0xFF3
 30715                           intcon	equ	0xFF2
 30716                           intcon2	equ	0xFF1
 30717                           intcon3	equ	0xFF0
 30718                           indf0	equ	0xFEF
 30719                           postinc0	equ	0xFEE
 30720                           fsr0h	equ	0xFEA
 30721                           fsr0l	equ	0xFE9
 30722                           wreg	equ	0xFE8
 30723                           indf1	equ	0xFE7
 30724                           postdec1	equ	0xFE5
 30725                           fsr1h	equ	0xFE2
 30726                           fsr1l	equ	0xFE1
 30727                           indf2	equ	0xFDF
 30728                           postinc2	equ	0xFDE
 30729                           postdec2	equ	0xFDD
 30730                           plusw2	equ	0xFDB
 30731                           fsr2h	equ	0xFDA
 30732                           fsr2l	equ	0xFD9
 30733                           status	equ	0xFD8
 30734                           
 30735 ;; *************** function _USBStdFeatureReqHandler *****************
 30736 ;; Defined at:
 30737 ;;		line 2385 in file "../Includes/Usb/Framework/usb_device.c"
 30738 ;; Parameters:    Size  Location     Type
 30739 ;;		None
 30740 ;; Auto vars:     Size  Location     Type
 30741 ;;  p               2   25[COMRAM] PTR struct __BDT
 30742 ;;		 -> BDT(48), NULL(0), 
 30743 ;;  pUEP            2   22[COMRAM] PTR unsigned char 
 30744 ;;		 -> UEP0(1), 
 30745 ;;  current_ep_d    1   24[COMRAM] struct .
 30746 ;; Return value:  Size  Location     Type
 30747 ;;                  1    wreg      void 
 30748 ;; Registers used:
 30749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30750 ;; Tracked objects:
 30751 ;;		On entry : 0/0
 30752 ;;		On exit  : 0/0
 30753 ;;		Unchanged: 0/0
 30754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30755 ;;      Params:         0       0       0       0       0       0       0       0       0
 30756 ;;      Locals:         5       0       0       0       0       0       0       0       0
 30757 ;;      Temps:          1       0       0       0       0       0       0       0       0
 30758 ;;      Totals:         6       0       0       0       0       0       0       0       0
 30759 ;;Total ram usage:        6 bytes
 30760 ;; Hardware stack levels used:    1
 30761 ;; Hardware stack levels required when called:    5
 30762 ;; This function calls:
 30763 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 30764 ;; This function is called by:
 30765 ;;		_USBCheckStdRequest
 30766 ;; This function uses a non-reentrant model
 30767 ;;
 30768                           
 30769                           	psect	text119
 30770  002A66                     __ptext119:
 30771                           	opt stack 0
 30772  002A66                     _USBStdFeatureReqHandler:
 30773                           	opt stack 11
 30774                           
 30775                           ;usb_device.c: 2387: BDT_ENTRY *p;
 30776                           ;usb_device.c: 2388: EP_STATUS current_ep_data;
 30777                           ;usb_device.c: 2390: unsigned char* pUEP;
 30778                           ;usb_device.c: 2393: if((SetupPkt.bFeature == 1)&&
 30779                           ;usb_device.c: 2394: (SetupPkt.Recipient == (0x00)))
 30780                           
 30781                           ;incstack = 0
 30782  002A66  0104               	movlb	4	; () banked
 30783  002A68  0532               	decf	50,w,b	;volatile
 30784  002A6A  A4D8               	btfss	status,2,c
 30785  002A6C  D001               	goto	i2u609_41
 30786  002A6E  D001               	goto	i2u609_40
 30787  002A70                     i2u609_41:
 30788  002A70  D018               	goto	i2l1950
 30789  002A72                     i2u609_40:
 30790                           
 30791                           ; BSR set to: 4
 30792  002A72  0104               	movlb	4	; () banked
 30793  002A74  5130               	movf	48,w,b	;volatile
 30794  002A76  0B1F               	andlw	31
 30795  002A78  0900               	iorlw	0
 30796  002A7A  A4D8               	btfss	status,2,c
 30797  002A7C  D001               	goto	i2u610_41
 30798  002A7E  D001               	goto	i2u610_40
 30799  002A80                     i2u610_41:
 30800  002A80  D010               	goto	i2l1950
 30801  002A82                     i2u610_40:
 30802                           
 30803                           ; BSR set to: 4
 30804                           ;usb_device.c: 2395: {
 30805                           ;usb_device.c: 2396: inPipes[0].info.bits.busy = 1;
 30806  002A82  8E39               	bsf	_inPipes+3,7,c	;volatile
 30807                           
 30808                           ; BSR set to: 4
 30809                           ;usb_device.c: 2397: if(SetupPkt.bRequest == 3)
 30810  002A84  0E03               	movlw	3
 30811  002A86  0104               	movlb	4	; () banked
 30812  002A88  1931               	xorwf	49,w,b	;volatile
 30813  002A8A  A4D8               	btfss	status,2,c
 30814  002A8C  D001               	goto	i2u611_41
 30815  002A8E  D001               	goto	i2u611_40
 30816  002A90                     i2u611_41:
 30817  002A90  D004               	goto	i2l8129
 30818  002A92                     i2u611_40:
 30819                           
 30820                           ; BSR set to: 4
 30821                           ;usb_device.c: 2398: RemoteWakeup = 1;
 30822  002A92  0E01               	movlw	1
 30823  002A94  0100               	movlb	0	; () banked
 30824  002A96  6FD7               	movwf	_RemoteWakeup& (0+255),b	;volatile
 30825  002A98  D004               	goto	i2l1950
 30826  002A9A                     i2l8129:
 30827                           
 30828                           ;usb_device.c: 2399: else
 30829                           ;usb_device.c: 2400: RemoteWakeup = 0;
 30830  002A9A  0E00               	movlw	0
 30831  002A9C  0100               	movlb	0	; () banked
 30832  002A9E  6FD7               	movwf	_RemoteWakeup& (0+255),b	;volatile
 30833  002AA0  D000               	goto	i2l1950
 30834  002AA2                     i2l1950:
 30835                           
 30836                           ;usb_device.c: 2401: }
 30837                           ;usb_device.c: 2404: if((SetupPkt.bFeature == 0)&&
 30838                           ;usb_device.c: 2405: (SetupPkt.Recipient == (0x02))&&
 30839                           ;usb_device.c: 2406: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 30840                           ;usb_device.c: 2407: (USBDeviceState == CONFIGURED_STATE))
 30841  002AA2  0104               	movlb	4	; () banked
 30842  002AA4  5132               	movf	50,w,b	;volatile
 30843  002AA6  A4D8               	btfss	status,2,c
 30844  002AA8  D001               	goto	i2u612_41
 30845  002AAA  D001               	goto	i2u612_40
 30846  002AAC                     i2u612_41:
 30847  002AAC  D160               	goto	i2l1973
 30848  002AAE                     i2u612_40:
 30849                           
 30850                           ; BSR set to: 4
 30851  002AAE  0104               	movlb	4	; () banked
 30852  002AB0  5130               	movf	48,w,b	;volatile
 30853  002AB2  0B1F               	andlw	31
 30854  002AB4  0A02               	xorlw	2
 30855  002AB6  A4D8               	btfss	status,2,c
 30856  002AB8  D001               	goto	i2u613_41
 30857  002ABA  D001               	goto	i2u613_40
 30858  002ABC                     i2u613_41:
 30859  002ABC  D158               	goto	i2l1973
 30860  002ABE                     i2u613_40:
 30861                           
 30862                           ; BSR set to: 4
 30863  002ABE  0104               	movlb	4	; () banked
 30864  002AC0  5134               	movf	52,w,b	;volatile
 30865  002AC2  0B0F               	andlw	15
 30866  002AC4  0900               	iorlw	0
 30867  002AC6  B4D8               	btfsc	status,2,c
 30868  002AC8  D001               	goto	i2u614_41
 30869  002ACA  D001               	goto	i2u614_40
 30870  002ACC                     i2u614_41:
 30871  002ACC  D150               	goto	i2l1973
 30872  002ACE                     i2u614_40:
 30873                           
 30874                           ; BSR set to: 4
 30875  002ACE  0104               	movlb	4	; () banked
 30876  002AD0  5134               	movf	52,w,b	;volatile
 30877  002AD2  0B0F               	andlw	15
 30878  002AD4  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 30879  002AD6  0E03               	movlw	3
 30880  002AD8  6016               	cpfslt	??_USBStdFeatureReqHandler,c
 30881  002ADA  D001               	goto	i2u615_41
 30882  002ADC  D001               	goto	i2u615_40
 30883  002ADE                     i2u615_41:
 30884  002ADE  D147               	goto	i2l1973
 30885  002AE0                     i2u615_40:
 30886                           
 30887                           ; BSR set to: 4
 30888  002AE0  0E20               	movlw	32
 30889  002AE2  0100               	movlb	0	; () banked
 30890  002AE4  19DE               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 30891  002AE6  A4D8               	btfss	status,2,c
 30892  002AE8  D001               	goto	i2u616_41
 30893  002AEA  D001               	goto	i2u616_40
 30894  002AEC                     i2u616_41:
 30895  002AEC  D140               	goto	i2l1973
 30896  002AEE                     i2u616_40:
 30897                           
 30898                           ; BSR set to: 0
 30899                           ;usb_device.c: 2408: {
 30900                           ;usb_device.c: 2411: inPipes[0].info.bits.busy = 1;
 30901  002AEE  8E39               	bsf	_inPipes+3,7,c	;volatile
 30902                           
 30903                           ;usb_device.c: 2414: if(SetupPkt.EPDir == 0)
 30904  002AF0  0104               	movlb	4	; () banked
 30905  002AF2  BF34               	btfsc	52,7,b	;volatile
 30906  002AF4  D001               	goto	i2u617_41
 30907  002AF6  D001               	goto	i2u617_40
 30908  002AF8                     i2u617_41:
 30909  002AF8  D01F               	goto	i2l8143
 30910  002AFA                     i2u617_40:
 30911                           
 30912                           ; BSR set to: 4
 30913                           ;usb_device.c: 2415: {
 30914                           ;usb_device.c: 2416: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 30915  002AFA  0104               	movlb	4	; () banked
 30916  002AFC  5134               	movf	52,w,b	;volatile
 30917  002AFE  0B0F               	andlw	15
 30918  002B00  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 30919  002B02  5016               	movf	??_USBStdFeatureReqHandler,w,c
 30920  002B04  0D02               	mullw	2
 30921  002B06  0E40               	movlw	low _pBDTEntryOut
 30922  002B08  24F3               	addwf	prodl,w,c
 30923  002B0A  6ED9               	movwf	fsr2l,c
 30924  002B0C  0E01               	movlw	high _pBDTEntryOut
 30925  002B0E  20F4               	addwfc	prodh,w,c
 30926  002B10  6EDA               	movwf	fsr2h,c
 30927  002B12  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 30928  002B16  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 30929                           
 30930                           ;usb_device.c: 2417: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 30931  002B1A  0104               	movlb	4	; () banked
 30932  002B1C  5134               	movf	52,w,b	;volatile
 30933  002B1E  0B0F               	andlw	15
 30934  002B20  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 30935  002B22  5016               	movf	??_USBStdFeatureReqHandler,w,c
 30936  002B24  0D01               	mullw	1
 30937  002B26  0EB7               	movlw	low _ep_data_out
 30938  002B28  24F3               	addwf	prodl,w,c
 30939  002B2A  6ED9               	movwf	fsr2l,c
 30940  002B2C  0E00               	movlw	high _ep_data_out
 30941  002B2E  20F4               	addwfc	prodh,w,c
 30942  002B30  6EDA               	movwf	fsr2h,c
 30943  002B32  50DF               	movf	indf2,w,c
 30944  002B34  6E19               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 30945                           
 30946                           ;usb_device.c: 2418: }
 30947  002B36  D01F               	goto	i2l8145
 30948  002B38                     i2l8143:
 30949                           
 30950                           ; BSR set to: 4
 30951                           ;usb_device.c: 2419: else
 30952                           ;usb_device.c: 2420: {
 30953                           ;usb_device.c: 2421: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 30954  002B38  0104               	movlb	4	; () banked
 30955  002B3A  5134               	movf	52,w,b	;volatile
 30956  002B3C  0B0F               	andlw	15
 30957  002B3E  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 30958  002B40  5016               	movf	??_USBStdFeatureReqHandler,w,c
 30959  002B42  0D02               	mullw	2
 30960  002B44  0E3C               	movlw	low _pBDTEntryIn
 30961  002B46  24F3               	addwf	prodl,w,c
 30962  002B48  6ED9               	movwf	fsr2l,c
 30963  002B4A  0E00               	movlw	high _pBDTEntryIn
 30964  002B4C  20F4               	addwfc	prodh,w,c
 30965  002B4E  6EDA               	movwf	fsr2h,c
 30966  002B50  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 30967  002B54  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 30968                           
 30969                           ;usb_device.c: 2422: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 30970  002B58  0104               	movlb	4	; () banked
 30971  002B5A  5134               	movf	52,w,b	;volatile
 30972  002B5C  0B0F               	andlw	15
 30973  002B5E  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 30974  002B60  5016               	movf	??_USBStdFeatureReqHandler,w,c
 30975  002B62  0D01               	mullw	1
 30976  002B64  0EBA               	movlw	low _ep_data_in
 30977  002B66  24F3               	addwf	prodl,w,c
 30978  002B68  6ED9               	movwf	fsr2l,c
 30979  002B6A  0E00               	movlw	high _ep_data_in
 30980  002B6C  20F4               	addwfc	prodh,w,c
 30981  002B6E  6EDA               	movwf	fsr2h,c
 30982  002B70  50DF               	movf	indf2,w,c
 30983  002B72  6E19               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 30984  002B74  D000               	goto	i2l8145
 30985  002B76                     i2l8145:
 30986                           
 30987                           ; BSR set to: 4
 30988                           ;usb_device.c: 2423: }
 30989                           ;usb_device.c: 2428: if(current_ep_data.bits.ping_pong_state == 0)
 30990  002B76  B019               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 30991  002B78  D001               	goto	i2u618_41
 30992  002B7A  D001               	goto	i2u618_40
 30993  002B7C                     i2u618_41:
 30994  002B7C  D002               	goto	i2l8149
 30995  002B7E                     i2u618_40:
 30996                           
 30997                           ; BSR set to: 4
 30998                           ;usb_device.c: 2429: {
 30999                           ;usb_device.c: 2430: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 31000  002B7E  941A               	bcf	USBStdFeatureReqHandler@p,2,c
 31001                           
 31002                           ;usb_device.c: 2431: }
 31003  002B80  D002               	goto	i2l8151
 31004  002B82                     i2l8149:
 31005                           
 31006                           ; BSR set to: 4
 31007                           ;usb_device.c: 2432: else
 31008                           ;usb_device.c: 2433: {
 31009                           ;usb_device.c: 2434: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 31010  002B82  841A               	bsf	USBStdFeatureReqHandler@p,2,c
 31011  002B84  D000               	goto	i2l8151
 31012  002B86                     i2l8151:
 31013                           
 31014                           ; BSR set to: 4
 31015                           ;usb_device.c: 2435: }
 31016                           ;usb_device.c: 2439: if(SetupPkt.EPDir == 0)
 31017  002B86  0104               	movlb	4	; () banked
 31018  002B88  BF34               	btfsc	52,7,b	;volatile
 31019  002B8A  D001               	goto	i2u619_41
 31020  002B8C  D001               	goto	i2u619_40
 31021  002B8E                     i2u619_41:
 31022  002B8E  D011               	goto	i2l8155
 31023  002B90                     i2u619_40:
 31024                           
 31025                           ; BSR set to: 4
 31026                           ;usb_device.c: 2440: {
 31027                           ;usb_device.c: 2441: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 31028  002B90  0104               	movlb	4	; () banked
 31029  002B92  5134               	movf	52,w,b	;volatile
 31030  002B94  0B0F               	andlw	15
 31031  002B96  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 31032  002B98  5016               	movf	??_USBStdFeatureReqHandler,w,c
 31033  002B9A  0D02               	mullw	2
 31034  002B9C  0E40               	movlw	low _pBDTEntryOut
 31035  002B9E  24F3               	addwf	prodl,w,c
 31036  002BA0  6ED9               	movwf	fsr2l,c
 31037  002BA2  0E01               	movlw	high _pBDTEntryOut
 31038  002BA4  20F4               	addwfc	prodh,w,c
 31039  002BA6  6EDA               	movwf	fsr2h,c
 31040  002BA8  C01A  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 31041  002BAC  C01B  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 31042                           
 31043                           ;usb_device.c: 2442: }
 31044  002BB0  D011               	goto	i2l8157
 31045  002BB2                     i2l8155:
 31046                           
 31047                           ; BSR set to: 4
 31048                           ;usb_device.c: 2443: else
 31049                           ;usb_device.c: 2444: {
 31050                           ;usb_device.c: 2445: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 31051  002BB2  0104               	movlb	4	; () banked
 31052  002BB4  5134               	movf	52,w,b	;volatile
 31053  002BB6  0B0F               	andlw	15
 31054  002BB8  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 31055  002BBA  5016               	movf	??_USBStdFeatureReqHandler,w,c
 31056  002BBC  0D02               	mullw	2
 31057  002BBE  0E3C               	movlw	low _pBDTEntryIn
 31058  002BC0  24F3               	addwf	prodl,w,c
 31059  002BC2  6ED9               	movwf	fsr2l,c
 31060  002BC4  0E00               	movlw	high _pBDTEntryIn
 31061  002BC6  20F4               	addwfc	prodh,w,c
 31062  002BC8  6EDA               	movwf	fsr2h,c
 31063  002BCA  C01A  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 31064  002BCE  C01B  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 31065  002BD2  D000               	goto	i2l8157
 31066  002BD4                     i2l8157:
 31067                           
 31068                           ; BSR set to: 4
 31069                           ;usb_device.c: 2446: }
 31070                           ;usb_device.c: 2449: if(SetupPkt.bRequest == 3)
 31071  002BD4  0E03               	movlw	3
 31072  002BD6  0104               	movlb	4	; () banked
 31073  002BD8  1931               	xorwf	49,w,b	;volatile
 31074  002BDA  A4D8               	btfss	status,2,c
 31075  002BDC  D001               	goto	i2u620_41
 31076  002BDE  D001               	goto	i2u620_40
 31077  002BE0                     i2u620_41:
 31078  002BE0  D039               	goto	i2l8171
 31079  002BE2                     i2u620_40:
 31080                           
 31081                           ; BSR set to: 4
 31082                           ;usb_device.c: 2450: {
 31083                           ;usb_device.c: 2451: if(p->STAT.UOWN == 1)
 31084  002BE2  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 31085  002BE6  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 31086  002BEA  AEDF               	btfss	indf2,7,c
 31087  002BEC  D001               	goto	i2u621_41
 31088  002BEE  D001               	goto	i2u621_40
 31089  002BF0                     i2u621_41:
 31090  002BF0  D024               	goto	i2l8167
 31091  002BF2                     i2u621_40:
 31092                           
 31093                           ; BSR set to: 4
 31094                           ;usb_device.c: 2452: {
 31095                           ;usb_device.c: 2455: if(SetupPkt.EPDir == 0)
 31096  002BF2  0104               	movlb	4	; () banked
 31097  002BF4  BF34               	btfsc	52,7,b	;volatile
 31098  002BF6  D001               	goto	i2u622_41
 31099  002BF8  D001               	goto	i2u622_40
 31100  002BFA                     i2u622_41:
 31101  002BFA  D00F               	goto	i2l8165
 31102  002BFC                     i2u622_40:
 31103                           
 31104                           ; BSR set to: 4
 31105                           ;usb_device.c: 2456: {
 31106                           ;usb_device.c: 2457: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 31107  002BFC  0104               	movlb	4	; () banked
 31108  002BFE  5134               	movf	52,w,b	;volatile
 31109  002C00  0B0F               	andlw	15
 31110  002C02  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 31111  002C04  5016               	movf	??_USBStdFeatureReqHandler,w,c
 31112  002C06  0D01               	mullw	1
 31113  002C08  0EB7               	movlw	low _ep_data_out
 31114  002C0A  24F3               	addwf	prodl,w,c
 31115  002C0C  6ED9               	movwf	fsr2l,c
 31116  002C0E  0E00               	movlw	high _ep_data_out
 31117  002C10  20F4               	addwfc	prodh,w,c
 31118  002C12  6EDA               	movwf	fsr2h,c
 31119  002C14  0100               	movlb	0	; () banked
 31120  002C16  82DF               	bsf	indf2,1,c
 31121                           
 31122                           ;usb_device.c: 2458: }
 31123  002C18  D010               	goto	i2l8167
 31124  002C1A                     i2l8165:
 31125                           
 31126                           ;usb_device.c: 2459: else
 31127                           ;usb_device.c: 2460: {
 31128                           ;usb_device.c: 2461: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 31129  002C1A  0104               	movlb	4	; () banked
 31130  002C1C  5134               	movf	52,w,b	;volatile
 31131  002C1E  0B0F               	andlw	15
 31132  002C20  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 31133  002C22  5016               	movf	??_USBStdFeatureReqHandler,w,c
 31134  002C24  0D01               	mullw	1
 31135  002C26  0EBA               	movlw	low _ep_data_in
 31136  002C28  24F3               	addwf	prodl,w,c
 31137  002C2A  6ED9               	movwf	fsr2l,c
 31138  002C2C  0E00               	movlw	high _ep_data_in
 31139  002C2E  20F4               	addwfc	prodh,w,c
 31140  002C30  6EDA               	movwf	fsr2h,c
 31141  002C32  0100               	movlb	0	; () banked
 31142  002C34  82DF               	bsf	indf2,1,c
 31143  002C36  D001               	goto	i2l8167
 31144                           
 31145                           ; BSR set to: 0
 31146  002C38  D000               	goto	i2l8167
 31147  002C3A                     i2l8167:
 31148                           
 31149                           ;usb_device.c: 2462: }
 31150                           ;usb_device.c: 2463: }
 31151                           ;usb_device.c: 2466: p->STAT.Val |= 0x04;
 31152  002C3A  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 31153  002C3E  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 31154  002C42  0E00               	movlw	0
 31155  002C44  84DB               	bsf	plusw2,2,c
 31156                           
 31157                           ;usb_device.c: 2467: p->STAT.Val |= 0x80;
 31158  002C46  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 31159  002C4A  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 31160  002C4E  0E00               	movlw	0
 31161  002C50  8EDB               	bsf	plusw2,7,c
 31162                           
 31163                           ;usb_device.c: 2468: }
 31164  002C52  D08D               	goto	i2l1973
 31165  002C54                     i2l8171:
 31166                           
 31167                           ;usb_device.c: 2469: else
 31168                           ;usb_device.c: 2470: {
 31169                           ;usb_device.c: 2473: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 31170  002C54  0E04               	movlw	4
 31171  002C56  1A1A               	xorwf	USBStdFeatureReqHandler@p,f,c
 31172                           
 31173                           ;usb_device.c: 2475: if(p->STAT.UOWN == 1)
 31174  002C58  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 31175  002C5C  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 31176  002C60  AEDF               	btfss	indf2,7,c
 31177  002C62  D001               	goto	i2u623_41
 31178  002C64  D001               	goto	i2u623_40
 31179  002C66                     i2u623_41:
 31180  002C66  D01B               	goto	i2l8181
 31181  002C68                     i2u623_40:
 31182                           
 31183                           ;usb_device.c: 2476: {
 31184                           ;usb_device.c: 2479: p->STAT.Val &= (~0x80);
 31185  002C68  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 31186  002C6C  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 31187  002C70  0E7F               	movlw	127
 31188  002C72  16DF               	andwf	indf2,f,c
 31189                           
 31190                           ;usb_device.c: 2480: p->STAT.Val |= 0x40;
 31191  002C74  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 31192  002C78  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 31193  002C7C  0E00               	movlw	0
 31194  002C7E  8CDB               	bsf	plusw2,6,c
 31195                           
 31196                           ;usb_device.c: 2481: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 31197  002C80  0E00               	movlw	0
 31198  002C82  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 31199  002C84  0E05               	movlw	5
 31200  002C86  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 31201  002C88  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 31202  002C8C  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 31203  002C90  0E00               	movlw	0
 31204  002C92  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 31205  002C94  0E02               	movlw	2
 31206  002C96  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 31207  002C98  EC12  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 31208                           
 31209                           ;usb_device.c: 2482: }
 31210  002C9C  D007               	goto	i2l8183
 31211  002C9E                     i2l8181:
 31212                           
 31213                           ;usb_device.c: 2483: else
 31214                           ;usb_device.c: 2484: {
 31215                           ;usb_device.c: 2486: p->STAT.Val |= 0x40;
 31216  002C9E  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 31217  002CA2  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 31218  002CA6  0E00               	movlw	0
 31219  002CA8  8CDB               	bsf	plusw2,6,c
 31220  002CAA  D000               	goto	i2l8183
 31221  002CAC                     i2l8183:
 31222                           
 31223                           ;usb_device.c: 2487: }
 31224                           ;usb_device.c: 2491: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 31225  002CAC  0E04               	movlw	4
 31226  002CAE  1A1A               	xorwf	USBStdFeatureReqHandler@p,f,c
 31227                           
 31228                           ;usb_device.c: 2497: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 31229  002CB0  B219               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 31230  002CB2  D001               	goto	i2u624_41
 31231  002CB4  D001               	goto	i2u624_40
 31232  002CB6                     i2u624_41:
 31233  002CB6  D008               	goto	i2l1969
 31234  002CB8                     i2u624_40:
 31235  002CB8  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 31236  002CBC  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 31237  002CC0  AEDF               	btfss	indf2,7,c
 31238  002CC2  D001               	goto	i2u625_41
 31239  002CC4  D001               	goto	i2u625_40
 31240  002CC6                     i2u625_41:
 31241  002CC6  D038               	goto	i2l8197
 31242  002CC8                     i2u625_40:
 31243  002CC8                     i2l1969:
 31244                           
 31245                           ;usb_device.c: 2498: {
 31246                           ;usb_device.c: 2499: if(SetupPkt.EPDir == 0)
 31247  002CC8  0104               	movlb	4	; () banked
 31248  002CCA  BF34               	btfsc	52,7,b	;volatile
 31249  002CCC  D001               	goto	i2u626_41
 31250  002CCE  D001               	goto	i2u626_40
 31251  002CD0                     i2u626_41:
 31252  002CD0  D00F               	goto	i2l8191
 31253  002CD2                     i2u626_40:
 31254                           
 31255                           ; BSR set to: 4
 31256                           ;usb_device.c: 2500: {
 31257                           ;usb_device.c: 2501: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 31258  002CD2  0104               	movlb	4	; () banked
 31259  002CD4  5134               	movf	52,w,b	;volatile
 31260  002CD6  0B0F               	andlw	15
 31261  002CD8  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 31262  002CDA  5016               	movf	??_USBStdFeatureReqHandler,w,c
 31263  002CDC  0D01               	mullw	1
 31264  002CDE  0EB7               	movlw	low _ep_data_out
 31265  002CE0  24F3               	addwf	prodl,w,c
 31266  002CE2  6ED9               	movwf	fsr2l,c
 31267  002CE4  0E00               	movlw	high _ep_data_out
 31268  002CE6  20F4               	addwfc	prodh,w,c
 31269  002CE8  6EDA               	movwf	fsr2h,c
 31270  002CEA  0100               	movlb	0	; () banked
 31271  002CEC  92DF               	bcf	indf2,1,c
 31272                           
 31273                           ;usb_device.c: 2502: }
 31274  002CEE  D00F               	goto	i2l8193
 31275  002CF0                     i2l8191:
 31276                           
 31277                           ;usb_device.c: 2503: else
 31278                           ;usb_device.c: 2504: {
 31279                           ;usb_device.c: 2505: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 31280  002CF0  0104               	movlb	4	; () banked
 31281  002CF2  5134               	movf	52,w,b	;volatile
 31282  002CF4  0B0F               	andlw	15
 31283  002CF6  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 31284  002CF8  5016               	movf	??_USBStdFeatureReqHandler,w,c
 31285  002CFA  0D01               	mullw	1
 31286  002CFC  0EBA               	movlw	low _ep_data_in
 31287  002CFE  24F3               	addwf	prodl,w,c
 31288  002D00  6ED9               	movwf	fsr2l,c
 31289  002D02  0E00               	movlw	high _ep_data_in
 31290  002D04  20F4               	addwfc	prodh,w,c
 31291  002D06  6EDA               	movwf	fsr2h,c
 31292  002D08  0100               	movlb	0	; () banked
 31293  002D0A  92DF               	bcf	indf2,1,c
 31294  002D0C  D000               	goto	i2l8193
 31295  002D0E                     i2l8193:
 31296                           
 31297                           ; BSR set to: 0
 31298                           ;usb_device.c: 2506: }
 31299                           ;usb_device.c: 2508: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 31300  002D0E  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 31301  002D12  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 31302  002D16  0E3B               	movlw	59
 31303  002D18  16DF               	andwf	indf2,f,c
 31304                           
 31305                           ; BSR set to: 0
 31306                           ;usb_device.c: 2511: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 31307  002D1A  0E00               	movlw	0
 31308  002D1C  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 31309  002D1E  0E05               	movlw	5
 31310  002D20  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 31311  002D22  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 31312  002D26  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 31313  002D2A  0E00               	movlw	0
 31314  002D2C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 31315  002D2E  0E02               	movlw	2
 31316  002D30  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 31317  002D32  EC12  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 31318                           
 31319                           ;usb_device.c: 2512: }
 31320  002D36  D007               	goto	i2l8199
 31321  002D38                     i2l8197:
 31322                           
 31323                           ;usb_device.c: 2513: else
 31324                           ;usb_device.c: 2514: {
 31325                           ;usb_device.c: 2516: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 31326  002D38  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 31327  002D3C  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 31328  002D40  0E3B               	movlw	59
 31329  002D42  16DF               	andwf	indf2,f,c
 31330  002D44  D000               	goto	i2l8199
 31331  002D46                     i2l8199:
 31332                           
 31333                           ;usb_device.c: 2517: }
 31334                           ;usb_device.c: 2519: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 31335  002D46  0104               	movlb	4	; () banked
 31336  002D48  5134               	movf	52,w,b	;volatile
 31337  002D4A  0B0F               	andlw	15
 31338  002D4C  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 31339  002D4E  5016               	movf	??_USBStdFeatureReqHandler,w,c
 31340  002D50  0D01               	mullw	1
 31341  002D52  0E6A               	movlw	106
 31342  002D54  24F3               	addwf	prodl,w,c
 31343  002D56  6E17               	movwf	USBStdFeatureReqHandler@pUEP,c
 31344  002D58  0E0F               	movlw	15
 31345  002D5A  20F4               	addwfc	prodh,w,c
 31346  002D5C  6E18               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 31347                           
 31348                           ; BSR set to: 4
 31349                           ;usb_device.c: 2522: *pUEP &= ~0x0001;
 31350  002D5E  C017  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 31351  002D62  C018  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 31352  002D66  0EFE               	movlw	254
 31353  002D68  16DF               	andwf	indf2,f,c
 31354  002D6A  D001               	goto	i2l1973
 31355                           
 31356                           ; BSR set to: 4
 31357  002D6C  D000               	goto	i2l1973
 31358  002D6E                     i2l1973:
 31359  002D6E  0012               	return		;funcret
 31360  002D70                     __end_of_USBStdFeatureReqHandler:
 31361                           	opt stack 0
 31362                           pclatu	equ	0xFFB
 31363                           pclath	equ	0xFFA
 31364                           tblptru	equ	0xFF8
 31365                           tblptrh	equ	0xFF7
 31366                           tblptrl	equ	0xFF6
 31367                           tablat	equ	0xFF5
 31368                           prodh	equ	0xFF4
 31369                           prodl	equ	0xFF3
 31370                           intcon	equ	0xFF2
 31371                           intcon2	equ	0xFF1
 31372                           intcon3	equ	0xFF0
 31373                           indf0	equ	0xFEF
 31374                           postinc0	equ	0xFEE
 31375                           fsr0h	equ	0xFEA
 31376                           fsr0l	equ	0xFE9
 31377                           wreg	equ	0xFE8
 31378                           indf1	equ	0xFE7
 31379                           postdec1	equ	0xFE5
 31380                           fsr1h	equ	0xFE2
 31381                           fsr1l	equ	0xFE1
 31382                           indf2	equ	0xFDF
 31383                           postinc2	equ	0xFDE
 31384                           postdec2	equ	0xFDD
 31385                           plusw2	equ	0xFDB
 31386                           fsr2h	equ	0xFDA
 31387                           fsr2l	equ	0xFD9
 31388                           status	equ	0xFD8
 31389                           
 31390 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 31391 ;; Defined at:
 31392 ;;		line 308 in file "../Includes/Board/USBapp.c"
 31393 ;; Parameters:    Size  Location     Type
 31394 ;;  event           2   13[COMRAM] enum E5977
 31395 ;;  pdata           2   15[COMRAM] PTR void 
 31396 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(48), NULL(0), 
 31397 ;;  size            2   17[COMRAM] unsigned int 
 31398 ;; Auto vars:     Size  Location     Type
 31399 ;;		None
 31400 ;; Return value:  Size  Location     Type
 31401 ;;                  1    wreg      unsigned char 
 31402 ;; Registers used:
 31403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31404 ;; Tracked objects:
 31405 ;;		On entry : 0/0
 31406 ;;		On exit  : 0/0
 31407 ;;		Unchanged: 0/0
 31408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31409 ;;      Params:         6       0       0       0       0       0       0       0       0
 31410 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31411 ;;      Temps:          2       0       0       0       0       0       0       0       0
 31412 ;;      Totals:         8       0       0       0       0       0       0       0       0
 31413 ;;Total ram usage:        8 bytes
 31414 ;; Hardware stack levels used:    1
 31415 ;; Hardware stack levels required when called:    4
 31416 ;; This function calls:
 31417 ;;		_USBCheckCDCRequest
 31418 ;;		_USBapp_CdcEmulatorInitialize
 31419 ;; This function is called by:
 31420 ;;		_USBDeviceTasks
 31421 ;;		_USBStdSetCfgHandler
 31422 ;;		_USBSuspend
 31423 ;;		_USBWakeFromSuspend
 31424 ;;		_USBCtrlTrfSetupHandler
 31425 ;;		_USBCheckStdRequest
 31426 ;;		_USBStdFeatureReqHandler
 31427 ;; This function uses a non-reentrant model
 31428 ;;
 31429                           
 31430                           	psect	text120
 31431  006424                     __ptext120:
 31432                           	opt stack 0
 31433  006424                     _USER_USB_CALLBACK_EVENT_HANDLER:
 31434                           	opt stack 15
 31435                           
 31436                           ;USBapp.c: 310: switch( (int) event )
 31437                           
 31438                           ;incstack = 0
 31439  006424  D00F               	goto	i2l7741
 31440                           
 31441                           ;USBapp.c: 313: break;
 31442                           
 31443                           ;USBapp.c: 311: {
 31444                           ;USBapp.c: 312: case EVENT_TRANSFER:
 31445  006426  D039               	goto	i2l924
 31446                           
 31447                           ;USBapp.c: 319: break;
 31448                           
 31449                           ;USBapp.c: 315: case EVENT_SOF:
 31450  006428  D038               	goto	i2l924
 31451                           
 31452                           ;USBapp.c: 324: break;
 31453                           
 31454                           ;USBapp.c: 321: case EVENT_SUSPEND:
 31455  00642A  D037               	goto	i2l924
 31456                           
 31457                           ;USBapp.c: 329: break;
 31458                           
 31459                           ;USBapp.c: 326: case EVENT_RESUME:
 31460  00642C  D036               	goto	i2l924
 31461  00642E                     i2l7735:
 31462                           
 31463                           ;USBapp.c: 334: USBapp_CdcEmulatorInitialize();
 31464  00642E  EC9C  F033         	call	_USBapp_CdcEmulatorInitialize	;wreg free
 31465                           
 31466                           ;USBapp.c: 335: break;
 31467  006432  D033               	goto	i2l924
 31468                           
 31469                           ;USBapp.c: 338: break;
 31470                           
 31471                           ;USBapp.c: 337: case EVENT_SET_DESCRIPTOR:
 31472  006434  D032               	goto	i2l924
 31473  006436                     i2l7737:
 31474                           
 31475                           ;USBapp.c: 343: USBCheckCDCRequest();
 31476  006436  ECDB  F02B         	call	_USBCheckCDCRequest	;wreg free
 31477                           
 31478                           ;USBapp.c: 344: break;
 31479  00643A  D02F               	goto	i2l924
 31480                           
 31481                           ;USBapp.c: 347: break;
 31482                           
 31483                           ;USBapp.c: 346: case EVENT_BUS_ERROR:
 31484  00643C  D02E               	goto	i2l924
 31485                           
 31486                           ;USBapp.c: 350: break;
 31487                           
 31488                           ;USBapp.c: 349: case EVENT_TRANSFER_TERMINATED:
 31489  00643E  D02D               	goto	i2l924
 31490                           
 31491                           ;USBapp.c: 353: break;
 31492                           
 31493                           ;USBapp.c: 352: default:
 31494  006440  D02C               	goto	i2l924
 31495                           
 31496                           ;USBapp.c: 354: }
 31497  006442  D02B               	goto	i2l924
 31498  006444                     i2l7741:
 31499  006444  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 31500  006448  C00F  F015         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 31501                           
 31502                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 31503                           ; Switch size 1, requested type "space"
 31504                           ; Number of cases is 2, Range of values is 0 to 127
 31505                           ; switch strategies available:
 31506                           ; Name         Instructions Cycles
 31507                           ; simple_byte            7     4 (average)
 31508                           ;	Chosen strategy is simple_byte
 31509  00644C  5015               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 31510  00644E  0A00               	xorlw	0	; case 0
 31511  006450  B4D8               	btfsc	status,2,c
 31512  006452  D004               	goto	i2l14989
 31513  006454  0A7F               	xorlw	127	; case 127
 31514  006456  B4D8               	btfsc	status,2,c
 31515  006458  D01B               	goto	i2l14991
 31516  00645A  D01F               	goto	i2l924
 31517  00645C                     i2l14989:
 31518                           
 31519                           ; Switch size 1, requested type "space"
 31520                           ; Number of cases is 8, Range of values is 1 to 117
 31521                           ; switch strategies available:
 31522                           ; Name         Instructions Cycles
 31523                           ; simple_byte           25    13 (average)
 31524                           ;	Chosen strategy is simple_byte
 31525  00645C  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 31526  00645E  0A01               	xorlw	1	; case 1
 31527  006460  B4D8               	btfsc	status,2,c
 31528  006462  D7E5               	goto	i2l7735
 31529  006464  0A03               	xorlw	3	; case 2
 31530  006466  B4D8               	btfsc	status,2,c
 31531  006468  D018               	goto	i2l924
 31532  00646A  0A01               	xorlw	1	; case 3
 31533  00646C  B4D8               	btfsc	status,2,c
 31534  00646E  D7E3               	goto	i2l7737
 31535  006470  0A06               	xorlw	6	; case 5
 31536  006472  B4D8               	btfsc	status,2,c
 31537  006474  D012               	goto	i2l924
 31538  006476  0A77               	xorlw	119	; case 114
 31539  006478  B4D8               	btfsc	status,2,c
 31540  00647A  D00F               	goto	i2l924
 31541  00647C  0A01               	xorlw	1	; case 115
 31542  00647E  B4D8               	btfsc	status,2,c
 31543  006480  D00C               	goto	i2l924
 31544  006482  0A07               	xorlw	7	; case 116
 31545  006484  B4D8               	btfsc	status,2,c
 31546  006486  D009               	goto	i2l924
 31547  006488  0A01               	xorlw	1	; case 117
 31548  00648A  B4D8               	btfsc	status,2,c
 31549  00648C  D006               	goto	i2l924
 31550  00648E  D005               	goto	i2l924
 31551  006490                     i2l14991:
 31552                           
 31553                           ; Switch size 1, requested type "space"
 31554                           ; Number of cases is 1, Range of values is 255 to 255
 31555                           ; switch strategies available:
 31556                           ; Name         Instructions Cycles
 31557                           ; simple_byte            4     3 (average)
 31558                           ;	Chosen strategy is simple_byte
 31559  006490  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 31560  006492  0AFF               	xorlw	255	; case 255
 31561  006494  B4D8               	btfsc	status,2,c
 31562  006496  D001               	goto	i2l924
 31563  006498  D000               	goto	i2l924
 31564  00649A                     i2l924:
 31565  00649A  0012               	return		;funcret
 31566  00649C                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 31567                           	opt stack 0
 31568                           pclatu	equ	0xFFB
 31569                           pclath	equ	0xFFA
 31570                           tblptru	equ	0xFF8
 31571                           tblptrh	equ	0xFF7
 31572                           tblptrl	equ	0xFF6
 31573                           tablat	equ	0xFF5
 31574                           prodh	equ	0xFF4
 31575                           prodl	equ	0xFF3
 31576                           intcon	equ	0xFF2
 31577                           intcon2	equ	0xFF1
 31578                           intcon3	equ	0xFF0
 31579                           indf0	equ	0xFEF
 31580                           postinc0	equ	0xFEE
 31581                           fsr0h	equ	0xFEA
 31582                           fsr0l	equ	0xFE9
 31583                           wreg	equ	0xFE8
 31584                           indf1	equ	0xFE7
 31585                           postdec1	equ	0xFE5
 31586                           fsr1h	equ	0xFE2
 31587                           fsr1l	equ	0xFE1
 31588                           indf2	equ	0xFDF
 31589                           postinc2	equ	0xFDE
 31590                           postdec2	equ	0xFDD
 31591                           plusw2	equ	0xFDB
 31592                           fsr2h	equ	0xFDA
 31593                           fsr2l	equ	0xFD9
 31594                           status	equ	0xFD8
 31595                           
 31596 ;; *************** function _USBapp_CdcEmulatorInitialize *****************
 31597 ;; Defined at:
 31598 ;;		line 144 in file "../Includes/Board/USBapp.c"
 31599 ;; Parameters:    Size  Location     Type
 31600 ;;		None
 31601 ;; Auto vars:     Size  Location     Type
 31602 ;;  i               1   12[COMRAM] unsigned char 
 31603 ;; Return value:  Size  Location     Type
 31604 ;;                  1    wreg      void 
 31605 ;; Registers used:
 31606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31607 ;; Tracked objects:
 31608 ;;		On entry : 0/0
 31609 ;;		On exit  : 0/0
 31610 ;;		Unchanged: 0/0
 31611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31612 ;;      Params:         0       0       0       0       0       0       0       0       0
 31613 ;;      Locals:         1       0       0       0       0       0       0       0       0
 31614 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31615 ;;      Totals:         1       0       0       0       0       0       0       0       0
 31616 ;;Total ram usage:        1 bytes
 31617 ;; Hardware stack levels used:    1
 31618 ;; Hardware stack levels required when called:    3
 31619 ;; This function calls:
 31620 ;;		_CDCInitEP
 31621 ;;		i2_EUSART_Initialize
 31622 ;; This function is called by:
 31623 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 31624 ;; This function uses a non-reentrant model
 31625 ;;
 31626                           
 31627                           	psect	text121
 31628  006738                     __ptext121:
 31629                           	opt stack 0
 31630  006738                     _USBapp_CdcEmulatorInitialize:
 31631                           	opt stack 15
 31632                           
 31633                           ;USBapp.c: 147: CDCInitEP();
 31634                           
 31635                           ;incstack = 0
 31636  006738  ECF9  F032         	call	_CDCInitEP	;wreg free
 31637                           
 31638                           ;USBapp.c: 148: line_coding.bCharFormat = 0;
 31639  00673C  0E00               	movlw	0
 31640  00673E  0101               	movlb	1	; () banked
 31641  006740  6FE3               	movwf	(_line_coding+4)& (0+255),b
 31642                           
 31643                           ; BSR set to: 1
 31644                           ;USBapp.c: 149: line_coding.bDataBits = 8;
 31645  006742  0E08               	movlw	8
 31646  006744  0101               	movlb	1	; () banked
 31647  006746  6FE5               	movwf	(_line_coding+6)& (0+255),b
 31648                           
 31649                           ; BSR set to: 1
 31650                           ;USBapp.c: 150: line_coding.bParityType = 0;
 31651  006748  0E00               	movlw	0
 31652  00674A  0101               	movlb	1	; () banked
 31653  00674C  6FE4               	movwf	(_line_coding+5)& (0+255),b
 31654                           
 31655                           ; BSR set to: 1
 31656                           ;USBapp.c: 151: line_coding.dwDTERate = 19200;
 31657  00674E  0E00               	movlw	0
 31658  006750  0101               	movlb	1	; () banked
 31659  006752  6FDF               	movwf	_line_coding& (0+255),b
 31660  006754  0E4B               	movlw	75
 31661  006756  6FE0               	movwf	(_line_coding+1)& (0+255),b
 31662  006758  0E00               	movlw	0
 31663  00675A  6FE1               	movwf	(_line_coding+2)& (0+255),b
 31664  00675C  0E00               	movlw	0
 31665  00675E  6FE2               	movwf	(_line_coding+3)& (0+255),b
 31666                           
 31667                           ; BSR set to: 1
 31668                           ;USBapp.c: 152: EUSART_Initialize();
 31669  006760  ECEE  F036         	call	i2_EUSART_Initialize	;wreg free
 31670                           
 31671                           ;USBapp.c: 154: for (unsigned char i = 0; i <sizeof (USB_Buffer); i++)
 31672  006764  0E00               	movlw	0
 31673  006766  6E0D               	movwf	USBapp_CdcEmulatorInitialize@i,c
 31674  006768  0E3F               	movlw	63
 31675  00676A  640D               	cpfsgt	USBapp_CdcEmulatorInitialize@i,c
 31676  00676C  D001               	goto	i2u558_41
 31677  00676E  D001               	goto	i2u558_40
 31678  006770                     i2u558_41:
 31679  006770  D002               	goto	i2l7663
 31680  006772                     i2u558_40:
 31681  006772  D012               	goto	i2l7669
 31682  006774  D011               	goto	i2l7669
 31683  006776                     i2l7663:
 31684                           
 31685                           ;USBapp.c: 155: {
 31686                           ;USBapp.c: 156: USB_Buffer[i] = 0;
 31687  006776  500D               	movf	USBapp_CdcEmulatorInitialize@i,w,c
 31688  006778  0D01               	mullw	1
 31689  00677A  0E80               	movlw	low _USB_Buffer
 31690  00677C  24F3               	addwf	prodl,w,c
 31691  00677E  6ED9               	movwf	fsr2l,c
 31692  006780  0E02               	movlw	high _USB_Buffer
 31693  006782  20F4               	addwfc	prodh,w,c
 31694  006784  6EDA               	movwf	fsr2h,c
 31695  006786  0E00               	movlw	0
 31696  006788  6EDF               	movwf	indf2,c
 31697  00678A  2A0D               	incf	USBapp_CdcEmulatorInitialize@i,f,c
 31698  00678C  0E3F               	movlw	63
 31699  00678E  640D               	cpfsgt	USBapp_CdcEmulatorInitialize@i,c
 31700  006790  D001               	goto	i2u559_41
 31701  006792  D001               	goto	i2u559_40
 31702  006794                     i2u559_41:
 31703  006794  D7F0               	goto	i2l7663
 31704  006796                     i2u559_40:
 31705  006796  D000               	goto	i2l7669
 31706  006798                     i2l7669:
 31707                           
 31708                           ;USBapp.c: 157: }
 31709                           ;USBapp.c: 158: NextUSBOut = 0;
 31710  006798  0E00               	movlw	0
 31711  00679A  6E53               	movwf	_NextUSBOut,c
 31712                           
 31713                           ;USBapp.c: 159: LastRS232Out = 0;
 31714  00679C  0E00               	movlw	0
 31715  00679E  6E51               	movwf	_LastRS232Out,c
 31716  0067A0  0012               	return		;funcret
 31717  0067A2                     __end_of_USBapp_CdcEmulatorInitialize:
 31718                           	opt stack 0
 31719                           pclatu	equ	0xFFB
 31720                           pclath	equ	0xFFA
 31721                           tblptru	equ	0xFF8
 31722                           tblptrh	equ	0xFF7
 31723                           tblptrl	equ	0xFF6
 31724                           tablat	equ	0xFF5
 31725                           prodh	equ	0xFF4
 31726                           prodl	equ	0xFF3
 31727                           intcon	equ	0xFF2
 31728                           intcon2	equ	0xFF1
 31729                           intcon3	equ	0xFF0
 31730                           indf0	equ	0xFEF
 31731                           postinc0	equ	0xFEE
 31732                           fsr0h	equ	0xFEA
 31733                           fsr0l	equ	0xFE9
 31734                           wreg	equ	0xFE8
 31735                           indf1	equ	0xFE7
 31736                           postdec1	equ	0xFE5
 31737                           fsr1h	equ	0xFE2
 31738                           fsr1l	equ	0xFE1
 31739                           indf2	equ	0xFDF
 31740                           postinc2	equ	0xFDE
 31741                           postdec2	equ	0xFDD
 31742                           plusw2	equ	0xFDB
 31743                           fsr2h	equ	0xFDA
 31744                           fsr2l	equ	0xFD9
 31745                           status	equ	0xFD8
 31746                           
 31747 ;; *************** function _CDCInitEP *****************
 31748 ;; Defined at:
 31749 ;;		line 296 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 31750 ;; Parameters:    Size  Location     Type
 31751 ;;		None
 31752 ;; Auto vars:     Size  Location     Type
 31753 ;;		None
 31754 ;; Return value:  Size  Location     Type
 31755 ;;                  1    wreg      void 
 31756 ;; Registers used:
 31757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31758 ;; Tracked objects:
 31759 ;;		On entry : 0/0
 31760 ;;		On exit  : 0/0
 31761 ;;		Unchanged: 0/0
 31762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31763 ;;      Params:         0       0       0       0       0       0       0       0       0
 31764 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31765 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31766 ;;      Totals:         0       0       0       0       0       0       0       0       0
 31767 ;;Total ram usage:        0 bytes
 31768 ;; Hardware stack levels used:    1
 31769 ;; Hardware stack levels required when called:    2
 31770 ;; This function calls:
 31771 ;;		_USBEnableEndpoint
 31772 ;;		i2_USBTransferOnePacket
 31773 ;; This function is called by:
 31774 ;;		_USBapp_CdcEmulatorInitialize
 31775 ;; This function uses a non-reentrant model
 31776 ;;
 31777                           
 31778                           	psect	text122
 31779  0065F2                     __ptext122:
 31780                           	opt stack 0
 31781  0065F2                     _CDCInitEP:
 31782                           	opt stack 15
 31783                           
 31784                           ;usb_device_cdc.c: 299: line_coding.dwDTERate = 19200;
 31785                           
 31786                           ;incstack = 0
 31787  0065F2  0E00               	movlw	0
 31788  0065F4  0101               	movlb	1	; () banked
 31789  0065F6  6FDF               	movwf	_line_coding& (0+255),b
 31790  0065F8  0E4B               	movlw	75
 31791  0065FA  6FE0               	movwf	(_line_coding+1)& (0+255),b
 31792  0065FC  0E00               	movlw	0
 31793  0065FE  6FE1               	movwf	(_line_coding+2)& (0+255),b
 31794  006600  0E00               	movlw	0
 31795  006602  6FE2               	movwf	(_line_coding+3)& (0+255),b
 31796                           
 31797                           ;usb_device_cdc.c: 300: line_coding.bCharFormat = 0x00;
 31798  006604  0E00               	movlw	0
 31799  006606  0101               	movlb	1	; () banked
 31800  006608  6FE3               	movwf	(_line_coding+4)& (0+255),b
 31801                           
 31802                           ;usb_device_cdc.c: 301: line_coding.bParityType = 0x00;
 31803  00660A  0E00               	movlw	0
 31804  00660C  0101               	movlb	1	; () banked
 31805  00660E  6FE4               	movwf	(_line_coding+5)& (0+255),b
 31806                           
 31807                           ;usb_device_cdc.c: 302: line_coding.bDataBits = 0x08;
 31808  006610  0E08               	movlw	8
 31809  006612  0101               	movlb	1	; () banked
 31810  006614  6FE5               	movwf	(_line_coding+6)& (0+255),b
 31811                           
 31812                           ;usb_device_cdc.c: 304: cdc_rx_len = 0;
 31813  006616  0E00               	movlw	0
 31814  006618  0100               	movlb	0	; () banked
 31815  00661A  6FD0               	movwf	_cdc_rx_len& (0+255),b
 31816                           
 31817                           ; BSR set to: 0
 31818                           ;usb_device_cdc.c: 317: USBEnableEndpoint(1,0x02|0x10|0x08);
 31819  00661C  0E1A               	movlw	26
 31820  00661E  6E09               	movwf	USBEnableEndpoint@options,c
 31821  006620  0E01               	movlw	1
 31822  006622  ECE8  F035         	call	_USBEnableEndpoint
 31823                           
 31824                           ;usb_device_cdc.c: 318: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 31825  006626  0E1E               	movlw	30
 31826  006628  6E09               	movwf	USBEnableEndpoint@options,c
 31827  00662A  0E02               	movlw	2
 31828  00662C  ECE8  F035         	call	_USBEnableEndpoint
 31829                           
 31830                           ;usb_device_cdc.c: 320: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 31831  006630  0E00               	movlw	0
 31832  006632  6E01               	movwf	i2USBTransferOnePacket@dir,c
 31833  006634  0E40               	movlw	64
 31834  006636  6E02               	movwf	i2USBTransferOnePacket@data,c
 31835  006638  0E05               	movlw	5
 31836  00663A  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 31837  00663C  0E40               	movlw	64
 31838  00663E  6E04               	movwf	i2USBTransferOnePacket@len,c
 31839  006640  0E02               	movlw	2
 31840  006642  ECB5  F029         	call	i2_USBTransferOnePacket
 31841  006646  C001  F0BF         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 31842  00664A  C002  F0C0         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 31843                           
 31844                           ;usb_device_cdc.c: 321: CDCDataInHandle = (0);
 31845  00664E  0E00               	movlw	0
 31846  006650  0100               	movlb	0	; () banked
 31847  006652  6FBD               	movwf	_CDCDataInHandle& (0+255),b
 31848  006654  0E00               	movlw	0
 31849  006656  0100               	movlb	0	; () banked
 31850  006658  6FBE               	movwf	(_CDCDataInHandle+1)& (0+255),b
 31851                           
 31852                           ; BSR set to: 0
 31853                           ;usb_device_cdc.c: 326: cdc_trf_state = 0;
 31854  00665A  0E00               	movlw	0
 31855  00665C  6E55               	movwf	_cdc_trf_state,c
 31856                           
 31857                           ; BSR set to: 0
 31858  00665E  0012               	return		;funcret
 31859  006660                     __end_of_CDCInitEP:
 31860                           	opt stack 0
 31861                           pclatu	equ	0xFFB
 31862                           pclath	equ	0xFFA
 31863                           tblptru	equ	0xFF8
 31864                           tblptrh	equ	0xFF7
 31865                           tblptrl	equ	0xFF6
 31866                           tablat	equ	0xFF5
 31867                           prodh	equ	0xFF4
 31868                           prodl	equ	0xFF3
 31869                           intcon	equ	0xFF2
 31870                           intcon2	equ	0xFF1
 31871                           intcon3	equ	0xFF0
 31872                           indf0	equ	0xFEF
 31873                           postinc0	equ	0xFEE
 31874                           fsr0h	equ	0xFEA
 31875                           fsr0l	equ	0xFE9
 31876                           wreg	equ	0xFE8
 31877                           indf1	equ	0xFE7
 31878                           postdec1	equ	0xFE5
 31879                           fsr1h	equ	0xFE2
 31880                           fsr1l	equ	0xFE1
 31881                           indf2	equ	0xFDF
 31882                           postinc2	equ	0xFDE
 31883                           postdec2	equ	0xFDD
 31884                           plusw2	equ	0xFDB
 31885                           fsr2h	equ	0xFDA
 31886                           fsr2l	equ	0xFD9
 31887                           status	equ	0xFD8
 31888                           
 31889 ;; *************** function i2_USBTransferOnePacket *****************
 31890 ;; Defined at:
 31891 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 31892 ;; Parameters:    Size  Location     Type
 31893 ;;  ep              1    wreg     unsigned char 
 31894 ;;  dir             1    0[COMRAM] unsigned char 
 31895 ;;  data            2    1[COMRAM] PTR unsigned char 
 31896 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 31897 ;;  len             1    3[COMRAM] unsigned char 
 31898 ;; Auto vars:     Size  Location     Type
 31899 ;;  ep              1    4[COMRAM] unsigned char 
 31900 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 31901 ;;		 -> BDT(48), NULL(0), 
 31902 ;; Return value:  Size  Location     Type
 31903 ;;                  2    0[COMRAM] PTR void 
 31904 ;; Registers used:
 31905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31906 ;; Tracked objects:
 31907 ;;		On entry : 0/0
 31908 ;;		On exit  : 0/0
 31909 ;;		Unchanged: 0/0
 31910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31911 ;;      Params:         4       0       0       0       0       0       0       0       0
 31912 ;;      Locals:         3       0       0       0       0       0       0       0       0
 31913 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31914 ;;      Totals:         7       0       0       0       0       0       0       0       0
 31915 ;;Total ram usage:        7 bytes
 31916 ;; Hardware stack levels used:    1
 31917 ;; This function calls:
 31918 ;;		Nothing
 31919 ;; This function is called by:
 31920 ;;		_CDCInitEP
 31921 ;; This function uses a non-reentrant model
 31922 ;;
 31923                           
 31924                           	psect	text123
 31925  00536A                     __ptext123:
 31926                           	opt stack 0
 31927  00536A                     i2_USBTransferOnePacket:
 31928                           	opt stack 16
 31929                           
 31930                           ; BSR set to: 0
 31931                           ;incstack = 0
 31932                           ;i2USBTransferOnePacket@ep stored from wreg
 31933  00536A  6E05               	movwf	i2USBTransferOnePacket@ep,c
 31934                           
 31935                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 31936                           ;usb_device.c: 762: if(dir != 0)
 31937  00536C  5001               	movf	i2USBTransferOnePacket@dir,w,c
 31938  00536E  B4D8               	btfsc	status,2,c
 31939  005370  D001               	goto	i2u550_41
 31940  005372  D001               	goto	i2u550_40
 31941  005374                     i2u550_41:
 31942  005374  D00D               	goto	i2l7541
 31943  005376                     i2u550_40:
 31944                           
 31945                           ;usb_device.c: 763: {
 31946                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 31947  005376  5005               	movf	i2USBTransferOnePacket@ep,w,c
 31948  005378  0D02               	mullw	2
 31949  00537A  0E3C               	movlw	low _pBDTEntryIn
 31950  00537C  24F3               	addwf	prodl,w,c
 31951  00537E  6ED9               	movwf	fsr2l,c
 31952  005380  0E00               	movlw	high _pBDTEntryIn
 31953  005382  20F4               	addwfc	prodh,w,c
 31954  005384  6EDA               	movwf	fsr2h,c
 31955  005386  CFDE F006          	movff	postinc2,i2USBTransferOnePacket@handle
 31956  00538A  CFDD F007          	movff	postdec2,i2USBTransferOnePacket@handle+1
 31957                           
 31958                           ;usb_device.c: 766: }
 31959  00538E  D00D               	goto	i2l7543
 31960  005390                     i2l7541:
 31961                           
 31962                           ;usb_device.c: 767: else
 31963                           ;usb_device.c: 768: {
 31964                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 31965  005390  5005               	movf	i2USBTransferOnePacket@ep,w,c
 31966  005392  0D02               	mullw	2
 31967  005394  0E40               	movlw	low _pBDTEntryOut
 31968  005396  24F3               	addwf	prodl,w,c
 31969  005398  6ED9               	movwf	fsr2l,c
 31970  00539A  0E01               	movlw	high _pBDTEntryOut
 31971  00539C  20F4               	addwfc	prodh,w,c
 31972  00539E  6EDA               	movwf	fsr2h,c
 31973  0053A0  CFDE F006          	movff	postinc2,i2USBTransferOnePacket@handle
 31974  0053A4  CFDD F007          	movff	postdec2,i2USBTransferOnePacket@handle+1
 31975  0053A8  D000               	goto	i2l7543
 31976  0053AA                     i2l7543:
 31977                           
 31978                           ;usb_device.c: 771: }
 31979                           ;usb_device.c: 775: if(handle == 0)
 31980  0053AA  5006               	movf	i2USBTransferOnePacket@handle,w,c
 31981  0053AC  1007               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 31982  0053AE  A4D8               	btfss	status,2,c
 31983  0053B0  D001               	goto	i2u551_41
 31984  0053B2  D001               	goto	i2u551_40
 31985  0053B4                     i2u551_41:
 31986  0053B4  D006               	goto	i2l7549
 31987  0053B6                     i2u551_40:
 31988                           
 31989                           ;usb_device.c: 776: {
 31990                           ;usb_device.c: 777: return 0;
 31991  0053B6  0E00               	movlw	0
 31992  0053B8  6E01               	movwf	?i2_USBTransferOnePacket,c
 31993  0053BA  0E00               	movlw	0
 31994  0053BC  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 31995  0053BE  D045               	goto	i2l1764
 31996  0053C0  D044               	goto	i2l1764
 31997  0053C2                     i2l7549:
 31998                           
 31999                           ;usb_device.c: 778: }
 32000                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 32001  0053C2  EE20 F002          	lfsr	2,2
 32002  0053C6  5006               	movf	i2USBTransferOnePacket@handle,w,c
 32003  0053C8  26D9               	addwf	fsr2l,f,c
 32004  0053CA  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 32005  0053CC  22DA               	addwfc	fsr2h,f,c
 32006  0053CE  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 32007  0053D2  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 32008                           
 32009                           ;usb_device.c: 781: handle->CNT = len;
 32010  0053D6  EE20 F001          	lfsr	2,1
 32011  0053DA  5006               	movf	i2USBTransferOnePacket@handle,w,c
 32012  0053DC  26D9               	addwf	fsr2l,f,c
 32013  0053DE  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 32014  0053E0  22DA               	addwfc	fsr2h,f,c
 32015  0053E2  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 32016                           
 32017                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 32018  0053E6  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 32019  0053EA  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 32020  0053EE  0E40               	movlw	64
 32021  0053F0  16DF               	andwf	indf2,f,c
 32022                           
 32023                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 32024  0053F2  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 32025  0053F6  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 32026  0053FA  0E00               	movlw	0
 32027  0053FC  86DB               	bsf	plusw2,3,c
 32028                           
 32029                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 32030  0053FE  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 32031  005402  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 32032  005406  0E00               	movlw	0
 32033  005408  8EDB               	bsf	plusw2,7,c
 32034                           
 32035                           ;usb_device.c: 787: if(dir != 0)
 32036  00540A  5001               	movf	i2USBTransferOnePacket@dir,w,c
 32037  00540C  B4D8               	btfsc	status,2,c
 32038  00540E  D001               	goto	i2u552_41
 32039  005410  D001               	goto	i2u552_40
 32040  005412                     i2u552_41:
 32041  005412  D00B               	goto	i2l7561
 32042  005414                     i2u552_40:
 32043                           
 32044                           ;usb_device.c: 788: {
 32045                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 32046  005414  5005               	movf	i2USBTransferOnePacket@ep,w,c
 32047  005416  0D02               	mullw	2
 32048  005418  0E3C               	movlw	low _pBDTEntryIn
 32049  00541A  24F3               	addwf	prodl,w,c
 32050  00541C  6ED9               	movwf	fsr2l,c
 32051  00541E  0E00               	movlw	high _pBDTEntryIn
 32052  005420  20F4               	addwfc	prodh,w,c
 32053  005422  6EDA               	movwf	fsr2h,c
 32054  005424  0E04               	movlw	4
 32055  005426  1ADF               	xorwf	indf2,f,c
 32056                           
 32057                           ;usb_device.c: 791: }
 32058  005428  D00B               	goto	i2l7563
 32059  00542A                     i2l7561:
 32060                           
 32061                           ;usb_device.c: 792: else
 32062                           ;usb_device.c: 793: {
 32063                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 32064  00542A  5005               	movf	i2USBTransferOnePacket@ep,w,c
 32065  00542C  0D02               	mullw	2
 32066  00542E  0E40               	movlw	low _pBDTEntryOut
 32067  005430  24F3               	addwf	prodl,w,c
 32068  005432  6ED9               	movwf	fsr2l,c
 32069  005434  0E01               	movlw	high _pBDTEntryOut
 32070  005436  20F4               	addwfc	prodh,w,c
 32071  005438  6EDA               	movwf	fsr2h,c
 32072  00543A  0E04               	movlw	4
 32073  00543C  1ADF               	xorwf	indf2,f,c
 32074  00543E  D000               	goto	i2l7563
 32075  005440                     i2l7563:
 32076                           
 32077                           ;usb_device.c: 796: }
 32078                           ;usb_device.c: 797: return (void*)handle;
 32079  005440  C006  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 32080  005444  C007  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 32081  005448  D000               	goto	i2l1764
 32082  00544A                     i2l1764:
 32083  00544A  0012               	return		;funcret
 32084  00544C                     __end_ofi2_USBTransferOnePacket:
 32085                           	opt stack 0
 32086                           pclatu	equ	0xFFB
 32087                           pclath	equ	0xFFA
 32088                           tblptru	equ	0xFF8
 32089                           tblptrh	equ	0xFF7
 32090                           tblptrl	equ	0xFF6
 32091                           tablat	equ	0xFF5
 32092                           prodh	equ	0xFF4
 32093                           prodl	equ	0xFF3
 32094                           intcon	equ	0xFF2
 32095                           intcon2	equ	0xFF1
 32096                           intcon3	equ	0xFF0
 32097                           indf0	equ	0xFEF
 32098                           postinc0	equ	0xFEE
 32099                           fsr0h	equ	0xFEA
 32100                           fsr0l	equ	0xFE9
 32101                           wreg	equ	0xFE8
 32102                           indf1	equ	0xFE7
 32103                           postdec1	equ	0xFE5
 32104                           fsr1h	equ	0xFE2
 32105                           fsr1l	equ	0xFE1
 32106                           indf2	equ	0xFDF
 32107                           postinc2	equ	0xFDE
 32108                           postdec2	equ	0xFDD
 32109                           plusw2	equ	0xFDB
 32110                           fsr2h	equ	0xFDA
 32111                           fsr2l	equ	0xFD9
 32112                           status	equ	0xFD8
 32113                           
 32114 ;; *************** function _USBEnableEndpoint *****************
 32115 ;; Defined at:
 32116 ;;		line 645 in file "../Includes/Usb/Framework/usb_device.c"
 32117 ;; Parameters:    Size  Location     Type
 32118 ;;  ep              1    wreg     unsigned char 
 32119 ;;  options         1    8[COMRAM] unsigned char 
 32120 ;; Auto vars:     Size  Location     Type
 32121 ;;  ep              1   11[COMRAM] unsigned char 
 32122 ;;  p               2    9[COMRAM] PTR unsigned char 
 32123 ;;		 -> UEP0(1), 
 32124 ;; Return value:  Size  Location     Type
 32125 ;;                  1    wreg      void 
 32126 ;; Registers used:
 32127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32128 ;; Tracked objects:
 32129 ;;		On entry : 0/0
 32130 ;;		On exit  : 0/0
 32131 ;;		Unchanged: 0/0
 32132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32133 ;;      Params:         1       0       0       0       0       0       0       0       0
 32134 ;;      Locals:         3       0       0       0       0       0       0       0       0
 32135 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32136 ;;      Totals:         4       0       0       0       0       0       0       0       0
 32137 ;;Total ram usage:        4 bytes
 32138 ;; Hardware stack levels used:    1
 32139 ;; Hardware stack levels required when called:    1
 32140 ;; This function calls:
 32141 ;;		_USBConfigureEndpoint
 32142 ;; This function is called by:
 32143 ;;		_CDCInitEP
 32144 ;; This function uses a non-reentrant model
 32145 ;;
 32146                           
 32147                           	psect	text124
 32148  006BD0                     __ptext124:
 32149                           	opt stack 0
 32150  006BD0                     _USBEnableEndpoint:
 32151                           	opt stack 15
 32152                           
 32153                           ;incstack = 0
 32154                           ;USBEnableEndpoint@ep stored from wreg
 32155  006BD0  6E0C               	movwf	USBEnableEndpoint@ep,c
 32156                           
 32157                           ;usb_device.c: 647: unsigned char* p;
 32158                           ;usb_device.c: 651: if(options & 0x04)
 32159  006BD2  A409               	btfss	USBEnableEndpoint@options,2,c
 32160  006BD4  D001               	goto	i2u548_41
 32161  006BD6  D001               	goto	i2u548_40
 32162  006BD8                     i2u548_41:
 32163  006BD8  D006               	goto	i2l7529
 32164  006BDA                     i2u548_40:
 32165                           
 32166                           ;usb_device.c: 652: {
 32167                           ;usb_device.c: 653: USBConfigureEndpoint(ep, 0);
 32168  006BDA  0E00               	movlw	0
 32169  006BDC  6E01               	movwf	USBConfigureEndpoint@direction,c
 32170  006BDE  500C               	movf	USBEnableEndpoint@ep,w,c
 32171  006BE0  EC58  F02F         	call	_USBConfigureEndpoint
 32172  006BE4  D000               	goto	i2l7529
 32173  006BE6                     i2l7529:
 32174                           
 32175                           ;usb_device.c: 654: }
 32176                           ;usb_device.c: 655: if(options & 0x02)
 32177  006BE6  A209               	btfss	USBEnableEndpoint@options,1,c
 32178  006BE8  D001               	goto	i2u549_41
 32179  006BEA  D001               	goto	i2u549_40
 32180  006BEC                     i2u549_41:
 32181  006BEC  D006               	goto	i2l7533
 32182  006BEE                     i2u549_40:
 32183                           
 32184                           ;usb_device.c: 656: {
 32185                           ;usb_device.c: 657: USBConfigureEndpoint(ep, 1);
 32186  006BEE  0E01               	movlw	1
 32187  006BF0  6E01               	movwf	USBConfigureEndpoint@direction,c
 32188  006BF2  500C               	movf	USBEnableEndpoint@ep,w,c
 32189  006BF4  EC58  F02F         	call	_USBConfigureEndpoint
 32190  006BF8  D000               	goto	i2l7533
 32191  006BFA                     i2l7533:
 32192                           
 32193                           ;usb_device.c: 658: }
 32194                           ;usb_device.c: 663: p = (unsigned char*)(&UEP0+ep);
 32195  006BFA  500C               	movf	USBEnableEndpoint@ep,w,c
 32196  006BFC  0D01               	mullw	1
 32197  006BFE  0E6A               	movlw	106
 32198  006C00  24F3               	addwf	prodl,w,c
 32199  006C02  6E0A               	movwf	USBEnableEndpoint@p,c
 32200  006C04  0E0F               	movlw	15
 32201  006C06  20F4               	addwfc	prodh,w,c
 32202  006C08  6E0B               	movwf	USBEnableEndpoint@p+1,c
 32203                           
 32204                           ;usb_device.c: 664: *p = options;
 32205  006C0A  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 32206  006C0E  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 32207  006C12  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 32208  006C16  0012               	return		;funcret
 32209  006C18                     __end_of_USBEnableEndpoint:
 32210                           	opt stack 0
 32211                           pclatu	equ	0xFFB
 32212                           pclath	equ	0xFFA
 32213                           tblptru	equ	0xFF8
 32214                           tblptrh	equ	0xFF7
 32215                           tblptrl	equ	0xFF6
 32216                           tablat	equ	0xFF5
 32217                           prodh	equ	0xFF4
 32218                           prodl	equ	0xFF3
 32219                           intcon	equ	0xFF2
 32220                           intcon2	equ	0xFF1
 32221                           intcon3	equ	0xFF0
 32222                           indf0	equ	0xFEF
 32223                           postinc0	equ	0xFEE
 32224                           fsr0h	equ	0xFEA
 32225                           fsr0l	equ	0xFE9
 32226                           wreg	equ	0xFE8
 32227                           indf1	equ	0xFE7
 32228                           postdec1	equ	0xFE5
 32229                           fsr1h	equ	0xFE2
 32230                           fsr1l	equ	0xFE1
 32231                           indf2	equ	0xFDF
 32232                           postinc2	equ	0xFDE
 32233                           postdec2	equ	0xFDD
 32234                           plusw2	equ	0xFDB
 32235                           fsr2h	equ	0xFDA
 32236                           fsr2l	equ	0xFD9
 32237                           status	equ	0xFD8
 32238                           
 32239 ;; *************** function _USBConfigureEndpoint *****************
 32240 ;; Defined at:
 32241 ;;		line 1228 in file "../Includes/Usb/Framework/usb_device.c"
 32242 ;; Parameters:    Size  Location     Type
 32243 ;;  EPNum           1    wreg     unsigned char 
 32244 ;;  direction       1    0[COMRAM] unsigned char 
 32245 ;; Auto vars:     Size  Location     Type
 32246 ;;  EPNum           1    5[COMRAM] unsigned char 
 32247 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 32248 ;;		 -> BDT(48), 
 32249 ;; Return value:  Size  Location     Type
 32250 ;;                  1    wreg      void 
 32251 ;; Registers used:
 32252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32253 ;; Tracked objects:
 32254 ;;		On entry : 0/0
 32255 ;;		On exit  : 0/0
 32256 ;;		Unchanged: 0/0
 32257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32258 ;;      Params:         1       0       0       0       0       0       0       0       0
 32259 ;;      Locals:         3       0       0       0       0       0       0       0       0
 32260 ;;      Temps:          4       0       0       0       0       0       0       0       0
 32261 ;;      Totals:         8       0       0       0       0       0       0       0       0
 32262 ;;Total ram usage:        8 bytes
 32263 ;; Hardware stack levels used:    1
 32264 ;; This function calls:
 32265 ;;		Nothing
 32266 ;; This function is called by:
 32267 ;;		_USBEnableEndpoint
 32268 ;; This function uses a non-reentrant model
 32269 ;;
 32270                           
 32271                           	psect	text125
 32272  005EB0                     __ptext125:
 32273                           	opt stack 0
 32274  005EB0                     _USBConfigureEndpoint:
 32275                           	opt stack 15
 32276                           
 32277                           ;incstack = 0
 32278                           ;USBConfigureEndpoint@EPNum stored from wreg
 32279  005EB0  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 32280                           
 32281                           ;usb_device.c: 1230: volatile BDT_ENTRY* handle;
 32282                           ;usb_device.c: 1234: handle = (volatile BDT_ENTRY*)&BDT[0];
 32283  005EB2  0E00               	movlw	0
 32284  005EB4  6E07               	movwf	USBConfigureEndpoint@handle,c
 32285  005EB6  0E04               	movlw	4
 32286  005EB8  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 32287                           
 32288                           ;usb_device.c: 1235: handle += (4*EPNum+2*direction+0u);
 32289  005EBA  5001               	movf	USBConfigureEndpoint@direction,w,c
 32290  005EBC  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 32291  005EBE  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 32292  005EC0  90D8               	bcf	status,0,c
 32293  005EC2  3602               	rlcf	??_USBConfigureEndpoint,f,c
 32294  005EC4  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 32295  005EC6  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 32296  005EC8  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 32297  005ECA  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 32298  005ECC  90D8               	bcf	status,0,c
 32299  005ECE  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 32300  005ED0  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 32301  005ED2  90D8               	bcf	status,0,c
 32302  005ED4  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 32303  005ED6  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 32304  005ED8  5002               	movf	??_USBConfigureEndpoint,w,c
 32305  005EDA  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 32306  005EDC  5003               	movf	??_USBConfigureEndpoint+1,w,c
 32307  005EDE  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 32308  005EE0  90D8               	bcf	status,0,c
 32309  005EE2  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 32310  005EE4  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 32311  005EE6  90D8               	bcf	status,0,c
 32312  005EE8  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 32313  005EEA  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 32314  005EEC  5004               	movf	??_USBConfigureEndpoint+2,w,c
 32315  005EEE  2607               	addwf	USBConfigureEndpoint@handle,f,c
 32316  005EF0  5005               	movf	??_USBConfigureEndpoint+3,w,c
 32317  005EF2  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 32318                           
 32319                           ;usb_device.c: 1237: handle->STAT.UOWN = 0;
 32320  005EF4  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 32321  005EF8  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 32322  005EFC  9EDF               	bcf	indf2,7,c
 32323                           
 32324                           ;usb_device.c: 1242: if(direction == 0)
 32325  005EFE  5001               	movf	USBConfigureEndpoint@direction,w,c
 32326  005F00  A4D8               	btfss	status,2,c
 32327  005F02  D001               	goto	i2u547_41
 32328  005F04  D001               	goto	i2u547_40
 32329  005F06                     i2u547_41:
 32330  005F06  D00D               	goto	i2l7505
 32331  005F08                     i2u547_40:
 32332                           
 32333                           ;usb_device.c: 1243: {
 32334                           ;usb_device.c: 1244: pBDTEntryOut[EPNum] = handle;
 32335  005F08  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 32336  005F0A  0D02               	mullw	2
 32337  005F0C  0E40               	movlw	low _pBDTEntryOut
 32338  005F0E  24F3               	addwf	prodl,w,c
 32339  005F10  6ED9               	movwf	fsr2l,c
 32340  005F12  0E01               	movlw	high _pBDTEntryOut
 32341  005F14  20F4               	addwfc	prodh,w,c
 32342  005F16  6EDA               	movwf	fsr2h,c
 32343  005F18  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 32344  005F1C  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 32345                           
 32346                           ;usb_device.c: 1245: }
 32347  005F20  D00D               	goto	i2l7507
 32348  005F22                     i2l7505:
 32349                           
 32350                           ;usb_device.c: 1246: else
 32351                           ;usb_device.c: 1247: {
 32352                           ;usb_device.c: 1248: pBDTEntryIn[EPNum] = handle;
 32353  005F22  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 32354  005F24  0D02               	mullw	2
 32355  005F26  0E3C               	movlw	low _pBDTEntryIn
 32356  005F28  24F3               	addwf	prodl,w,c
 32357  005F2A  6ED9               	movwf	fsr2l,c
 32358  005F2C  0E00               	movlw	high _pBDTEntryIn
 32359  005F2E  20F4               	addwfc	prodh,w,c
 32360  005F30  6EDA               	movwf	fsr2h,c
 32361  005F32  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 32362  005F36  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 32363  005F3A  D000               	goto	i2l7507
 32364  005F3C                     i2l7507:
 32365                           
 32366                           ;usb_device.c: 1249: }
 32367                           ;usb_device.c: 1250: handle->STAT.DTS = 0;
 32368  005F3C  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 32369  005F40  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 32370  005F44  9CDF               	bcf	indf2,6,c
 32371                           
 32372                           ;usb_device.c: 1251: (handle+1)->STAT.DTS = 1;
 32373  005F46  EE20 F004          	lfsr	2,4
 32374  005F4A  5007               	movf	USBConfigureEndpoint@handle,w,c
 32375  005F4C  26D9               	addwf	fsr2l,f,c
 32376  005F4E  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 32377  005F50  22DA               	addwfc	fsr2h,f,c
 32378  005F52  8CDF               	bsf	indf2,6,c
 32379  005F54  0012               	return		;funcret
 32380  005F56                     __end_of_USBConfigureEndpoint:
 32381                           	opt stack 0
 32382                           pclatu	equ	0xFFB
 32383                           pclath	equ	0xFFA
 32384                           tblptru	equ	0xFF8
 32385                           tblptrh	equ	0xFF7
 32386                           tblptrl	equ	0xFF6
 32387                           tablat	equ	0xFF5
 32388                           prodh	equ	0xFF4
 32389                           prodl	equ	0xFF3
 32390                           intcon	equ	0xFF2
 32391                           intcon2	equ	0xFF1
 32392                           intcon3	equ	0xFF0
 32393                           indf0	equ	0xFEF
 32394                           postinc0	equ	0xFEE
 32395                           fsr0h	equ	0xFEA
 32396                           fsr0l	equ	0xFE9
 32397                           wreg	equ	0xFE8
 32398                           indf1	equ	0xFE7
 32399                           postdec1	equ	0xFE5
 32400                           fsr1h	equ	0xFE2
 32401                           fsr1l	equ	0xFE1
 32402                           indf2	equ	0xFDF
 32403                           postinc2	equ	0xFDE
 32404                           postdec2	equ	0xFDD
 32405                           plusw2	equ	0xFDB
 32406                           fsr2h	equ	0xFDA
 32407                           fsr2l	equ	0xFD9
 32408                           status	equ	0xFD8
 32409                           
 32410 ;; *************** function _USBCheckCDCRequest *****************
 32411 ;; Defined at:
 32412 ;;		line 184 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 32413 ;; Parameters:    Size  Location     Type
 32414 ;;		None
 32415 ;; Auto vars:     Size  Location     Type
 32416 ;;		None
 32417 ;; Return value:  Size  Location     Type
 32418 ;;                  1    wreg      void 
 32419 ;; Registers used:
 32420 ;;		wreg, status,2, status,0
 32421 ;; Tracked objects:
 32422 ;;		On entry : 0/0
 32423 ;;		On exit  : 0/0
 32424 ;;		Unchanged: 0/0
 32425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32426 ;;      Params:         0       0       0       0       0       0       0       0       0
 32427 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32428 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32429 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32430 ;;Total ram usage:        0 bytes
 32431 ;; Hardware stack levels used:    1
 32432 ;; This function calls:
 32433 ;;		Nothing
 32434 ;; This function is called by:
 32435 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 32436 ;; This function uses a non-reentrant model
 32437 ;;
 32438                           
 32439                           	psect	text126
 32440  0057B6                     __ptext126:
 32441                           	opt stack 0
 32442  0057B6                     _USBCheckCDCRequest:
 32443                           	opt stack 18
 32444                           
 32445                           ;usb_device_cdc.c: 189: if(SetupPkt.Recipient != (0x01)) return;
 32446                           
 32447                           ;incstack = 0
 32448  0057B6  0104               	movlb	4	; () banked
 32449  0057B8  5130               	movf	48,w,b	;volatile
 32450  0057BA  0B1F               	andlw	31
 32451  0057BC  06E8               	decf	wreg,f,c
 32452  0057BE  B4D8               	btfsc	status,2,c
 32453  0057C0  D001               	goto	i2u560_41
 32454  0057C2  D001               	goto	i2u560_40
 32455  0057C4                     i2u560_41:
 32456  0057C4  D002               	goto	i2l7675
 32457  0057C6                     i2u560_40:
 32458  0057C6  D05D               	goto	i2l2021
 32459                           
 32460                           ; BSR set to: 4
 32461  0057C8  D05C               	goto	i2l2021
 32462  0057CA                     i2l7675:
 32463                           
 32464                           ; BSR set to: 4
 32465                           ;usb_device_cdc.c: 194: if(SetupPkt.RequestType != (0x20>>5)) return;
 32466  0057CA  0104               	movlb	4	; () banked
 32467  0057CC  3930               	swapf	48,w,b	;volatile
 32468  0057CE  32E8               	rrcf	wreg,f,c
 32469  0057D0  0B03               	andlw	3
 32470  0057D2  06E8               	decf	wreg,f,c
 32471  0057D4  B4D8               	btfsc	status,2,c
 32472  0057D6  D001               	goto	i2u561_41
 32473  0057D8  D001               	goto	i2u561_40
 32474  0057DA                     i2u561_41:
 32475  0057DA  D002               	goto	i2l7679
 32476  0057DC                     i2u561_40:
 32477  0057DC  D052               	goto	i2l2021
 32478                           
 32479                           ; BSR set to: 4
 32480  0057DE  D051               	goto	i2l2021
 32481  0057E0                     i2l7679:
 32482                           
 32483                           ; BSR set to: 4
 32484                           ;usb_device_cdc.c: 200: if((SetupPkt.bIntfID != 0x0)&&
 32485                           ;usb_device_cdc.c: 201: (SetupPkt.bIntfID != 0x01)) return;
 32486  0057E0  0104               	movlb	4	; () banked
 32487  0057E2  5134               	movf	52,w,b	;volatile
 32488  0057E4  B4D8               	btfsc	status,2,c
 32489  0057E6  D001               	goto	i2u562_41
 32490  0057E8  D001               	goto	i2u562_40
 32491  0057EA                     i2u562_41:
 32492  0057EA  D039               	goto	i2l7709
 32493  0057EC                     i2u562_40:
 32494                           
 32495                           ; BSR set to: 4
 32496  0057EC  0104               	movlb	4	; () banked
 32497  0057EE  0534               	decf	52,w,b	;volatile
 32498  0057F0  B4D8               	btfsc	status,2,c
 32499  0057F2  D001               	goto	i2u563_41
 32500  0057F4  D001               	goto	i2u563_40
 32501  0057F6                     i2u563_41:
 32502  0057F6  D033               	goto	i2l7709
 32503  0057F8                     i2u563_40:
 32504  0057F8  D044               	goto	i2l2021
 32505                           
 32506                           ; BSR set to: 4
 32507  0057FA  D043               	goto	i2l2021
 32508                           
 32509                           ; BSR set to: 4
 32510                           ;usb_device_cdc.c: 203: switch(SetupPkt.bRequest)
 32511  0057FC  D030               	goto	i2l7709
 32512  0057FE                     i2l7685:
 32513                           
 32514                           ; BSR set to: 4
 32515                           ;usb_device_cdc.c: 208: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 32516  0057FE  0ED7               	movlw	low _dummy_encapsulated_cmd_response
 32517  005800  6E36               	movwf	_inPipes,c	;volatile
 32518  005802  0E01               	movlw	high _dummy_encapsulated_cmd_response
 32519  005804  6E37               	movwf	_inPipes+1,c	;volatile
 32520                           
 32521                           ; BSR set to: 4
 32522                           ;usb_device_cdc.c: 209: inPipes[0].wCount.Val = 0x08;
 32523  005806  0E00               	movlw	0
 32524  005808  6E3B               	movwf	_inPipes+5,c	;volatile
 32525  00580A  0E08               	movlw	8
 32526  00580C  6E3A               	movwf	_inPipes+4,c	;volatile
 32527                           
 32528                           ; BSR set to: 4
 32529                           ;usb_device_cdc.c: 210: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 32530  00580E  8039               	bsf	_inPipes+3,0,c	;volatile
 32531                           
 32532                           ; BSR set to: 4
 32533                           ;usb_device_cdc.c: 211: inPipes[0].info.bits.busy = 1;
 32534  005810  8E39               	bsf	_inPipes+3,7,c	;volatile
 32535                           
 32536                           ;usb_device_cdc.c: 212: break;
 32537  005812  D037               	goto	i2l2021
 32538  005814                     i2l7693:
 32539                           
 32540                           ; BSR set to: 4
 32541                           ;usb_device_cdc.c: 215: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 32542  005814  0ED7               	movlw	low _dummy_encapsulated_cmd_response
 32543  005816  6E36               	movwf	_inPipes,c	;volatile
 32544  005818  0E01               	movlw	high _dummy_encapsulated_cmd_response
 32545  00581A  6E37               	movwf	_inPipes+1,c	;volatile
 32546                           
 32547                           ; BSR set to: 4
 32548                           ;usb_device_cdc.c: 216: inPipes[0].info.bits.busy = 1;
 32549  00581C  8E39               	bsf	_inPipes+3,7,c	;volatile
 32550                           
 32551                           ;usb_device_cdc.c: 217: break;
 32552  00581E  D031               	goto	i2l2021
 32553  005820                     i2l2028:
 32554                           
 32555                           ; BSR set to: 4
 32556                           ;usb_device_cdc.c: 220: outPipes[0].wCount.Val = SetupPkt.wLength;
 32557  005820  C436 F032          	movff	1078,_outPipes+4	;volatile
 32558  005824  C437 F033          	movff	1079,_outPipes+5	;volatile
 32559                           
 32560                           ; BSR set to: 4
 32561                           ;usb_device_cdc.c: 221: outPipes[0].pDst.bRam = (uint8_t*)&cdc_notice.SetLineCoding._byt
      +                          e[0];
 32562  005828  0ECD               	movlw	low _cdc_notice
 32563  00582A  6E2E               	movwf	_outPipes,c	;volatile
 32564  00582C  0E01               	movlw	high _cdc_notice
 32565  00582E  6E2F               	movwf	_outPipes+1,c	;volatile
 32566                           
 32567                           ;usb_device_cdc.c: 222: outPipes[0].pFunc = &USART_mySetLineCodingHandler;
 32568  005830  0E8C               	movlw	low _USART_mySetLineCodingHandler
 32569  005832  6E34               	movwf	_outPipes+6,c	;volatile
 32570  005834  0E69               	movlw	high _USART_mySetLineCodingHandler
 32571  005836  6E35               	movwf	_outPipes+7,c	;volatile
 32572                           
 32573                           ; BSR set to: 4
 32574                           ;usb_device_cdc.c: 223: outPipes[0].info.bits.busy = 1;
 32575  005838  8E31               	bsf	_outPipes+3,7,c	;volatile
 32576                           
 32577                           ;usb_device_cdc.c: 224: break;
 32578  00583A  D023               	goto	i2l2021
 32579  00583C                     i2l7701:
 32580                           
 32581                           ; BSR set to: 4
 32582                           ;usb_device_cdc.c: 227: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 32583  00583C  0EDF               	movlw	low _line_coding
 32584  00583E  6E36               	movwf	_inPipes,c	;volatile
 32585  005840  0E01               	movlw	high _line_coding
 32586  005842  6E37               	movwf	_inPipes+1,c	;volatile
 32587                           
 32588                           ; BSR set to: 4
 32589  005844  0E00               	movlw	0
 32590  005846  6E3B               	movwf	_inPipes+5,c	;volatile
 32591  005848  0E07               	movlw	7
 32592  00584A  6E3A               	movwf	_inPipes+4,c	;volatile
 32593                           
 32594                           ; BSR set to: 4
 32595  00584C  0EC1               	movlw	193
 32596  00584E  6E39               	movwf	_inPipes+3,c	;volatile
 32597                           
 32598                           ;usb_device_cdc.c: 231: break;
 32599  005850  D018               	goto	i2l2021
 32600  005852                     i2l2030:
 32601                           
 32602                           ; BSR set to: 4
 32603                           ;usb_device_cdc.c: 234: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 32604  005852  C432 F0CD          	movff	1074,_control_signal_bitmap	;volatile
 32605                           
 32606                           ;usb_device_cdc.c: 255: inPipes[0].info.bits.busy = 1;
 32607  005856  8E39               	bsf	_inPipes+3,7,c	;volatile
 32608                           
 32609                           ;usb_device_cdc.c: 256: break;
 32610  005858  D014               	goto	i2l2021
 32611                           
 32612                           ; BSR set to: 4
 32613                           ;usb_device_cdc.c: 259: break;
 32614                           
 32615                           ;usb_device_cdc.c: 258: default:
 32616  00585A  D013               	goto	i2l2021
 32617                           
 32618                           ; BSR set to: 4
 32619                           ;usb_device_cdc.c: 260: }
 32620  00585C  D012               	goto	i2l2021
 32621  00585E                     i2l7709:
 32622                           
 32623                           ; BSR set to: 4
 32624  00585E  0104               	movlb	4	; () banked
 32625  005860  5131               	movf	49,w,b	;volatile
 32626                           
 32627                           ; Switch size 1, requested type "space"
 32628                           ; Number of cases is 5, Range of values is 0 to 34
 32629                           ; switch strategies available:
 32630                           ; Name         Instructions Cycles
 32631                           ; simple_byte           16     9 (average)
 32632                           ;	Chosen strategy is simple_byte
 32633  005862  0A00               	xorlw	0	; case 0
 32634  005864  B4D8               	btfsc	status,2,c
 32635  005866  D7CB               	goto	i2l7685
 32636  005868  0A01               	xorlw	1	; case 1
 32637  00586A  B4D8               	btfsc	status,2,c
 32638  00586C  D7D3               	goto	i2l7693
 32639  00586E  0A21               	xorlw	33	; case 32
 32640  005870  B4D8               	btfsc	status,2,c
 32641  005872  D7D6               	goto	i2l2028
 32642  005874  0A01               	xorlw	1	; case 33
 32643  005876  B4D8               	btfsc	status,2,c
 32644  005878  D7E1               	goto	i2l7701
 32645  00587A  0A03               	xorlw	3	; case 34
 32646  00587C  B4D8               	btfsc	status,2,c
 32647  00587E  D7E9               	goto	i2l2030
 32648  005880  D000               	goto	i2l2021
 32649  005882                     i2l2021:
 32650                           
 32651                           ; BSR set to: 4
 32652  005882  0012               	return		;funcret
 32653  005884                     __end_of_USBCheckCDCRequest:
 32654                           	opt stack 0
 32655                           pclatu	equ	0xFFB
 32656                           pclath	equ	0xFFA
 32657                           tblptru	equ	0xFF8
 32658                           tblptrh	equ	0xFF7
 32659                           tblptrl	equ	0xFF6
 32660                           tablat	equ	0xFF5
 32661                           prodh	equ	0xFF4
 32662                           prodl	equ	0xFF3
 32663                           intcon	equ	0xFF2
 32664                           intcon2	equ	0xFF1
 32665                           intcon3	equ	0xFF0
 32666                           indf0	equ	0xFEF
 32667                           postinc0	equ	0xFEE
 32668                           fsr0h	equ	0xFEA
 32669                           fsr0l	equ	0xFE9
 32670                           wreg	equ	0xFE8
 32671                           indf1	equ	0xFE7
 32672                           postdec1	equ	0xFE5
 32673                           fsr1h	equ	0xFE2
 32674                           fsr1l	equ	0xFE1
 32675                           indf2	equ	0xFDF
 32676                           postinc2	equ	0xFDE
 32677                           postdec2	equ	0xFDD
 32678                           plusw2	equ	0xFDB
 32679                           fsr2h	equ	0xFDA
 32680                           fsr2l	equ	0xFD9
 32681                           status	equ	0xFD8
 32682                           
 32683 ;; *************** function _USBCtrlTrfOutHandler *****************
 32684 ;; Defined at:
 32685 ;;		line 2169 in file "../Includes/Usb/Framework/usb_device.c"
 32686 ;; Parameters:    Size  Location     Type
 32687 ;;		None
 32688 ;; Auto vars:     Size  Location     Type
 32689 ;;		None
 32690 ;; Return value:  Size  Location     Type
 32691 ;;                  1    wreg      void 
 32692 ;; Registers used:
 32693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 32694 ;; Tracked objects:
 32695 ;;		On entry : 0/0
 32696 ;;		On exit  : 0/0
 32697 ;;		Unchanged: 0/0
 32698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32699 ;;      Params:         0       0       0       0       0       0       0       0       0
 32700 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32701 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32702 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32703 ;;Total ram usage:        0 bytes
 32704 ;; Hardware stack levels used:    1
 32705 ;; Hardware stack levels required when called:    3
 32706 ;; This function calls:
 32707 ;;		_USBCtrlTrfRxService
 32708 ;; This function is called by:
 32709 ;;		_USBCtrlEPService
 32710 ;; This function uses a non-reentrant model
 32711 ;;
 32712                           
 32713                           	psect	text127
 32714  0066CC                     __ptext127:
 32715                           	opt stack 0
 32716  0066CC                     _USBCtrlTrfOutHandler:
 32717                           	opt stack 15
 32718                           
 32719                           ;usb_device.c: 2171: if(controlTransferState == 2)
 32720                           
 32721                           ; BSR set to: 4
 32722                           ;incstack = 0
 32723  0066CC  0E02               	movlw	2
 32724  0066CE  184D               	xorwf	_controlTransferState,w,c	;volatile
 32725  0066D0  A4D8               	btfss	status,2,c
 32726  0066D2  D001               	goto	i2u833_41
 32727  0066D4  D001               	goto	i2u833_40
 32728  0066D6                     i2u833_41:
 32729  0066D6  D003               	goto	i2l9729
 32730  0066D8                     i2u833_40:
 32731                           
 32732                           ;usb_device.c: 2172: {
 32733                           ;usb_device.c: 2173: USBCtrlTrfRxService();
 32734  0066D8  ECB4  F01D         	call	_USBCtrlTrfRxService	;wreg free
 32735                           
 32736                           ;usb_device.c: 2174: }
 32737  0066DC  D02C               	goto	i2l1915
 32738  0066DE                     i2l9729:
 32739                           
 32740                           ;usb_device.c: 2175: else
 32741                           ;usb_device.c: 2176: {
 32742                           ;usb_device.c: 2179: controlTransferState = 0;
 32743  0066DE  0E00               	movlw	0
 32744  0066E0  6E4D               	movwf	_controlTransferState,c	;volatile
 32745                           
 32746                           ;usb_device.c: 2186: if(BothEP0OutUOWNsSet == 0)
 32747  0066E2  0100               	movlb	0	; () banked
 32748  0066E4  51D5               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 32749  0066E6  A4D8               	btfss	status,2,c
 32750  0066E8  D001               	goto	i2u834_41
 32751  0066EA  D001               	goto	i2u834_40
 32752  0066EC                     i2u834_41:
 32753  0066EC  D01F               	goto	i2l9737
 32754  0066EE                     i2u834_40:
 32755                           
 32756                           ; BSR set to: 0
 32757                           ;usb_device.c: 2187: {
 32758                           ;usb_device.c: 2188: pBDTEntryEP0OutNext->CNT = 8;
 32759  0066EE  EE20 F001          	lfsr	2,1
 32760  0066F2  5042               	movf	_pBDTEntryEP0OutNext,w,c
 32761  0066F4  26D9               	addwf	fsr2l,f,c
 32762  0066F6  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 32763  0066F8  22DA               	addwfc	fsr2h,f,c
 32764  0066FA  0E08               	movlw	8
 32765  0066FC  6EDF               	movwf	indf2,c
 32766                           
 32767                           ;usb_device.c: 2189: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 32768  0066FE  EE20 F002          	lfsr	2,2
 32769  006702  5042               	movf	_pBDTEntryEP0OutNext,w,c
 32770  006704  26D9               	addwf	fsr2l,f,c
 32771  006706  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 32772  006708  22DA               	addwfc	fsr2h,f,c
 32773  00670A  0E30               	movlw	48
 32774  00670C  6EDE               	movwf	postinc2,c
 32775  00670E  0E04               	movlw	4
 32776  006710  6EDD               	movwf	postdec2,c
 32777                           
 32778                           ; BSR set to: 0
 32779                           ;usb_device.c: 2190: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 32780  006712  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32781  006716  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32782  00671A  0E0C               	movlw	12
 32783  00671C  6EDF               	movwf	indf2,c
 32784                           
 32785                           ; BSR set to: 0
 32786                           ;usb_device.c: 2191: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 32787  00671E  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32788  006722  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32789  006726  0E00               	movlw	0
 32790  006728  8EDB               	bsf	plusw2,7,c
 32791                           
 32792                           ;usb_device.c: 2192: }
 32793  00672A  D005               	goto	i2l1915
 32794  00672C                     i2l9737:
 32795                           
 32796                           ; BSR set to: 0
 32797                           ;usb_device.c: 2193: else
 32798                           ;usb_device.c: 2194: {
 32799                           ;usb_device.c: 2195: BothEP0OutUOWNsSet = 0;
 32800  00672C  0E00               	movlw	0
 32801  00672E  0100               	movlb	0	; () banked
 32802  006730  6FD5               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 32803  006732  D001               	goto	i2l1915
 32804                           
 32805                           ; BSR set to: 0
 32806  006734  D000               	goto	i2l1915
 32807  006736                     i2l1915:
 32808  006736  0012               	return		;funcret
 32809  006738                     __end_of_USBCtrlTrfOutHandler:
 32810                           	opt stack 0
 32811                           pclatu	equ	0xFFB
 32812                           pclath	equ	0xFFA
 32813                           tblptru	equ	0xFF8
 32814                           tblptrh	equ	0xFF7
 32815                           tblptrl	equ	0xFF6
 32816                           tablat	equ	0xFF5
 32817                           prodh	equ	0xFF4
 32818                           prodl	equ	0xFF3
 32819                           intcon	equ	0xFF2
 32820                           intcon2	equ	0xFF1
 32821                           intcon3	equ	0xFF0
 32822                           indf0	equ	0xFEF
 32823                           postinc0	equ	0xFEE
 32824                           fsr0h	equ	0xFEA
 32825                           fsr0l	equ	0xFE9
 32826                           wreg	equ	0xFE8
 32827                           indf1	equ	0xFE7
 32828                           postdec1	equ	0xFE5
 32829                           fsr1h	equ	0xFE2
 32830                           fsr1l	equ	0xFE1
 32831                           indf2	equ	0xFDF
 32832                           postinc2	equ	0xFDE
 32833                           postdec2	equ	0xFDD
 32834                           plusw2	equ	0xFDB
 32835                           fsr2h	equ	0xFDA
 32836                           fsr2l	equ	0xFD9
 32837                           status	equ	0xFD8
 32838                           
 32839 ;; *************** function _USBCtrlTrfRxService *****************
 32840 ;; Defined at:
 32841 ;;		line 1518 in file "../Includes/Usb/Framework/usb_device.c"
 32842 ;; Parameters:    Size  Location     Type
 32843 ;;		None
 32844 ;; Auto vars:     Size  Location     Type
 32845 ;;  byteToRead      1   18[COMRAM] unsigned char 
 32846 ;;  i               1   17[COMRAM] unsigned char 
 32847 ;; Return value:  Size  Location     Type
 32848 ;;                  1    wreg      void 
 32849 ;; Registers used:
 32850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 32851 ;; Tracked objects:
 32852 ;;		On entry : 0/0
 32853 ;;		On exit  : 0/0
 32854 ;;		Unchanged: 0/0
 32855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32856 ;;      Params:         0       0       0       0       0       0       0       0       0
 32857 ;;      Locals:         2       0       0       0       0       0       0       0       0
 32858 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32859 ;;      Totals:         2       0       0       0       0       0       0       0       0
 32860 ;;Total ram usage:        2 bytes
 32861 ;; Hardware stack levels used:    1
 32862 ;; Hardware stack levels required when called:    2
 32863 ;; This function calls:
 32864 ;;		_USART_mySetLineCodingHandler
 32865 ;;		_USBCtrlEPAllowStatusStage
 32866 ;; This function is called by:
 32867 ;;		_USBCtrlTrfOutHandler
 32868 ;; This function uses a non-reentrant model
 32869 ;;
 32870                           
 32871                           	psect	text128
 32872  003B68                     __ptext128:
 32873                           	opt stack 0
 32874  003B68                     _USBCtrlTrfRxService:
 32875                           	opt stack 15
 32876                           
 32877                           ;usb_device.c: 1520: uint8_t byteToRead;
 32878                           ;usb_device.c: 1521: uint8_t i;
 32879                           ;usb_device.c: 1525: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 32880                           
 32881                           ;incstack = 0
 32882  003B68  EE20 F001          	lfsr	2,1
 32883  003B6C  5044               	movf	_pBDTEntryEP0OutCurrent,w,c
 32884  003B6E  26D9               	addwf	fsr2l,f,c
 32885  003B70  5045               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 32886  003B72  22DA               	addwfc	fsr2h,f,c
 32887  003B74  50DF               	movf	indf2,w,c
 32888  003B76  6E13               	movwf	USBCtrlTrfRxService@byteToRead,c
 32889                           
 32890                           ;usb_device.c: 1531: if(byteToRead > outPipes[0].wCount.Val)
 32891  003B78  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 32892  003B7A  5C32               	subwf	_outPipes+4,w,c	;volatile
 32893  003B7C  0E00               	movlw	0
 32894  003B7E  5833               	subwfb	_outPipes+5,w,c	;volatile
 32895  003B80  B0D8               	btfsc	status,0,c
 32896  003B82  D001               	goto	i2u655_41
 32897  003B84  D001               	goto	i2u655_40
 32898  003B86                     i2u655_41:
 32899  003B86  D003               	goto	i2l8431
 32900  003B88                     i2u655_40:
 32901                           
 32902                           ;usb_device.c: 1532: {
 32903                           ;usb_device.c: 1533: byteToRead = outPipes[0].wCount.Val;
 32904  003B88  C032  F013         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 32905  003B8C  D000               	goto	i2l8431
 32906  003B8E                     i2l8431:
 32907                           
 32908                           ;usb_device.c: 1534: }
 32909                           ;usb_device.c: 1536: outPipes[0].wCount.Val -= byteToRead;
 32910  003B8E  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 32911  003B90  5E32               	subwf	_outPipes+4,f,c	;volatile
 32912  003B92  0E00               	movlw	0
 32913  003B94  5A33               	subwfb	_outPipes+5,f,c	;volatile
 32914                           
 32915                           ;usb_device.c: 1540: for(i=0;i<byteToRead;i++)
 32916  003B96  0E00               	movlw	0
 32917  003B98  6E12               	movwf	USBCtrlTrfRxService@i,c
 32918  003B9A  D012               	goto	i2l8441
 32919  003B9C                     i2l8435:
 32920                           
 32921                           ;usb_device.c: 1541: {
 32922                           ;usb_device.c: 1542: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 32923  003B9C  5012               	movf	USBCtrlTrfRxService@i,w,c
 32924  003B9E  0D01               	mullw	1
 32925  003BA0  0E38               	movlw	56
 32926  003BA2  24F3               	addwf	prodl,w,c
 32927  003BA4  6ED9               	movwf	fsr2l,c
 32928  003BA6  0E04               	movlw	4
 32929  003BA8  20F4               	addwfc	prodh,w,c
 32930  003BAA  6EDA               	movwf	fsr2h,c
 32931  003BAC  C02E  FFE1         	movff	_outPipes,fsr1l	;volatile
 32932  003BB0  C02F  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 32933  003BB4  CFDF FFE7          	movff	indf2,indf1
 32934  003BB8  4A2E               	infsnz	_outPipes,f,c	;volatile
 32935  003BBA  2A2F               	incf	_outPipes+1,f,c	;volatile
 32936  003BBC  2A12               	incf	USBCtrlTrfRxService@i,f,c
 32937  003BBE  D000               	goto	i2l8441
 32938  003BC0                     i2l8441:
 32939  003BC0  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 32940  003BC2  5C12               	subwf	USBCtrlTrfRxService@i,w,c
 32941  003BC4  A0D8               	btfss	status,0,c
 32942  003BC6  D001               	goto	i2u656_41
 32943  003BC8  D001               	goto	i2u656_40
 32944  003BCA                     i2u656_41:
 32945  003BCA  D7E8               	goto	i2l8435
 32946  003BCC                     i2u656_40:
 32947  003BCC  D000               	goto	i2l8443
 32948  003BCE                     i2l8443:
 32949                           
 32950                           ;usb_device.c: 1543: }
 32951                           ;usb_device.c: 1547: if(outPipes[0].wCount.Val > 0)
 32952  003BCE  5032               	movf	_outPipes+4,w,c	;volatile
 32953  003BD0  1033               	iorwf	_outPipes+5,w,c	;volatile
 32954  003BD2  B4D8               	btfsc	status,2,c
 32955  003BD4  D001               	goto	i2u657_41
 32956  003BD6  D001               	goto	i2u657_40
 32957  003BD8                     i2u657_41:
 32958  003BD8  D035               	goto	i2l8457
 32959  003BDA                     i2u657_40:
 32960                           
 32961                           ;usb_device.c: 1548: {
 32962                           ;usb_device.c: 1549: pBDTEntryEP0OutNext->CNT = 8;
 32963  003BDA  EE20 F001          	lfsr	2,1
 32964  003BDE  5042               	movf	_pBDTEntryEP0OutNext,w,c
 32965  003BE0  26D9               	addwf	fsr2l,f,c
 32966  003BE2  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 32967  003BE4  22DA               	addwfc	fsr2h,f,c
 32968  003BE6  0E08               	movlw	8
 32969  003BE8  6EDF               	movwf	indf2,c
 32970                           
 32971                           ;usb_device.c: 1550: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 32972  003BEA  EE20 F002          	lfsr	2,2
 32973  003BEE  5042               	movf	_pBDTEntryEP0OutNext,w,c
 32974  003BF0  26D9               	addwf	fsr2l,f,c
 32975  003BF2  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 32976  003BF4  22DA               	addwfc	fsr2h,f,c
 32977  003BF6  0E38               	movlw	56
 32978  003BF8  6EDE               	movwf	postinc2,c
 32979  003BFA  0E04               	movlw	4
 32980  003BFC  6EDD               	movwf	postdec2,c
 32981                           
 32982                           ;usb_device.c: 1551: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 32983  003BFE  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 32984  003C02  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 32985  003C06  BCDF               	btfsc	indf2,6,c
 32986  003C08  D001               	goto	i2u658_41
 32987  003C0A  D001               	goto	i2u658_40
 32988  003C0C                     i2u658_41:
 32989  003C0C  D00D               	goto	i2l8453
 32990  003C0E                     i2u658_40:
 32991                           
 32992                           ;usb_device.c: 1552: {
 32993                           ;usb_device.c: 1553: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 32994  003C0E  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 32995  003C12  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 32996  003C16  0E48               	movlw	72
 32997  003C18  6EDF               	movwf	indf2,c
 32998                           
 32999                           ;usb_device.c: 1554: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 33000  003C1A  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 33001  003C1E  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 33002  003C22  0E00               	movlw	0
 33003  003C24  8EDB               	bsf	plusw2,7,c
 33004                           
 33005                           ;usb_device.c: 1555: }
 33006  003C26  D04B               	goto	i2l1846
 33007  003C28                     i2l8453:
 33008                           
 33009                           ;usb_device.c: 1556: else
 33010                           ;usb_device.c: 1557: {
 33011                           ;usb_device.c: 1558: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 33012  003C28  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 33013  003C2C  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 33014  003C30  0E08               	movlw	8
 33015  003C32  6EDF               	movwf	indf2,c
 33016                           
 33017                           ;usb_device.c: 1559: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 33018  003C34  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 33019  003C38  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 33020  003C3C  0E00               	movlw	0
 33021  003C3E  8EDB               	bsf	plusw2,7,c
 33022  003C40  D03E               	goto	i2l1846
 33023                           
 33024                           ;usb_device.c: 1560: }
 33025                           ;usb_device.c: 1561: }
 33026  003C42  D03D               	goto	i2l1846
 33027  003C44                     i2l8457:
 33028                           
 33029                           ;usb_device.c: 1562: else
 33030                           ;usb_device.c: 1563: {
 33031                           ;usb_device.c: 1567: pBDTEntryEP0OutNext->CNT = 8;
 33032  003C44  EE20 F001          	lfsr	2,1
 33033  003C48  5042               	movf	_pBDTEntryEP0OutNext,w,c
 33034  003C4A  26D9               	addwf	fsr2l,f,c
 33035  003C4C  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 33036  003C4E  22DA               	addwfc	fsr2h,f,c
 33037  003C50  0E08               	movlw	8
 33038  003C52  6EDF               	movwf	indf2,c
 33039                           
 33040                           ;usb_device.c: 1568: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 33041  003C54  EE20 F002          	lfsr	2,2
 33042  003C58  5042               	movf	_pBDTEntryEP0OutNext,w,c
 33043  003C5A  26D9               	addwf	fsr2l,f,c
 33044  003C5C  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 33045  003C5E  22DA               	addwfc	fsr2h,f,c
 33046  003C60  0E30               	movlw	48
 33047  003C62  6EDE               	movwf	postinc2,c
 33048  003C64  0E04               	movlw	4
 33049  003C66  6EDD               	movwf	postdec2,c
 33050                           
 33051                           ;usb_device.c: 1572: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 33052  003C68  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 33053  003C6C  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 33054  003C70  0E04               	movlw	4
 33055  003C72  6EDF               	movwf	indf2,c
 33056                           
 33057                           ;usb_device.c: 1573: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 33058  003C74  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 33059  003C78  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 33060  003C7C  0E00               	movlw	0
 33061  003C7E  8EDB               	bsf	plusw2,7,c
 33062                           
 33063                           ;usb_device.c: 1580: if(outPipes[0].pFunc != (0))
 33064  003C80  5034               	movf	_outPipes+6,w,c	;volatile
 33065  003C82  1035               	iorwf	_outPipes+7,w,c	;volatile
 33066  003C84  B4D8               	btfsc	status,2,c
 33067  003C86  D001               	goto	i2u659_41
 33068  003C88  D001               	goto	i2u659_40
 33069  003C8A                     i2u659_41:
 33070  003C8A  D00F               	goto	i2l8467
 33071  003C8C                     i2u659_40:
 33072                           
 33073                           ;usb_device.c: 1581: {
 33074                           ;usb_device.c: 1586: outPipes[0].pFunc();
 33075  003C8C  EE20  F034         	lfsr	2,_outPipes+6	;volatile
 33076  003C90  D801               	call	i2u660_48
 33077  003C92  D00A               	goto	i2u660_49
 33078  003C94                     i2u660_48:
 33079  003C94  0005               	push	
 33080  003C96  6EFA               	movwf	pclath,c
 33081  003C98  50DE               	movf	postinc2,w,c
 33082  003C9A  6EFD               	movwf	tosl,c
 33083  003C9C  50DE               	movf	postinc2,w,c
 33084  003C9E  6EFE               	movwf	tosh,c
 33085  003CA0  50F8               	movf	tblptru,w,c
 33086  003CA2  6EFF               	movwf	tosu,c
 33087  003CA4  50FA               	movf	pclath,w,c
 33088  003CA6  0012               	return		;indir
 33089  003CA8                     i2u660_49:
 33090  003CA8  D000               	goto	i2l8467
 33091  003CAA                     i2l8467:
 33092                           
 33093                           ;usb_device.c: 1588: }
 33094                           ;usb_device.c: 1589: outPipes[0].info.bits.busy = 0;
 33095  003CAA  9E31               	bcf	_outPipes+3,7,c	;volatile
 33096                           
 33097                           ;usb_device.c: 1603: if(USBDeferStatusStagePacket == 0)
 33098  003CAC  504A               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 33099  003CAE  A4D8               	btfss	status,2,c
 33100  003CB0  D001               	goto	i2u661_41
 33101  003CB2  D001               	goto	i2u661_40
 33102  003CB4                     i2u661_41:
 33103  003CB4  D004               	goto	i2l1846
 33104  003CB6                     i2u661_40:
 33105                           
 33106                           ;usb_device.c: 1604: {
 33107                           ;usb_device.c: 1605: USBCtrlEPAllowStatusStage();
 33108  003CB6  EC42  F029         	call	_USBCtrlEPAllowStatusStage	;wreg free
 33109  003CBA  D001               	goto	i2l1846
 33110  003CBC  D000               	goto	i2l1846
 33111  003CBE                     i2l1846:
 33112  003CBE  0012               	return		;funcret
 33113  003CC0                     __end_of_USBCtrlTrfRxService:
 33114                           	opt stack 0
 33115                           tosu	equ	0xFFF
 33116                           tosh	equ	0xFFE
 33117                           tosl	equ	0xFFD
 33118                           pclatu	equ	0xFFB
 33119                           pclath	equ	0xFFA
 33120                           tblptru	equ	0xFF8
 33121                           tblptrh	equ	0xFF7
 33122                           tblptrl	equ	0xFF6
 33123                           tablat	equ	0xFF5
 33124                           prodh	equ	0xFF4
 33125                           prodl	equ	0xFF3
 33126                           intcon	equ	0xFF2
 33127                           intcon2	equ	0xFF1
 33128                           intcon3	equ	0xFF0
 33129                           indf0	equ	0xFEF
 33130                           postinc0	equ	0xFEE
 33131                           fsr0h	equ	0xFEA
 33132                           fsr0l	equ	0xFE9
 33133                           wreg	equ	0xFE8
 33134                           indf1	equ	0xFE7
 33135                           postdec1	equ	0xFE5
 33136                           fsr1h	equ	0xFE2
 33137                           fsr1l	equ	0xFE1
 33138                           indf2	equ	0xFDF
 33139                           postinc2	equ	0xFDE
 33140                           postdec2	equ	0xFDD
 33141                           plusw2	equ	0xFDB
 33142                           fsr2h	equ	0xFDA
 33143                           fsr2l	equ	0xFD9
 33144                           status	equ	0xFD8
 33145                           
 33146 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 33147 ;; Defined at:
 33148 ;;		line 1104 in file "../Includes/Usb/Framework/usb_device.c"
 33149 ;; Parameters:    Size  Location     Type
 33150 ;;		None
 33151 ;; Auto vars:     Size  Location     Type
 33152 ;;		None
 33153 ;; Return value:  Size  Location     Type
 33154 ;;                  1    wreg      void 
 33155 ;; Registers used:
 33156 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33157 ;; Tracked objects:
 33158 ;;		On entry : 0/0
 33159 ;;		On exit  : 0/0
 33160 ;;		Unchanged: 0/0
 33161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33162 ;;      Params:         0       0       0       0       0       0       0       0       0
 33163 ;;      Locals:         0       0       0       0       0       0       0       0       0
 33164 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33165 ;;      Totals:         0       0       0       0       0       0       0       0       0
 33166 ;;Total ram usage:        0 bytes
 33167 ;; Hardware stack levels used:    1
 33168 ;; This function calls:
 33169 ;;		Nothing
 33170 ;; This function is called by:
 33171 ;;		_USBDeviceTasks
 33172 ;;		_USBCtrlEPServiceComplete
 33173 ;;		_USBCtrlTrfRxService
 33174 ;; This function uses a non-reentrant model
 33175 ;;
 33176                           
 33177                           	psect	text129
 33178  005284                     __ptext129:
 33179                           	opt stack 0
 33180  005284                     _USBCtrlEPAllowStatusStage:
 33181                           	opt stack 16
 33182                           
 33183                           ;usb_device.c: 1111: if(USBStatusStageEnabledFlag1 == 0)
 33184                           
 33185                           ;incstack = 0
 33186  005284  0100               	movlb	0	; () banked
 33187  005286  51D4               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 33188  005288  A4D8               	btfss	status,2,c
 33189  00528A  D001               	goto	i2u589_41
 33190  00528C  D001               	goto	i2u589_40
 33191  00528E                     i2u589_41:
 33192  00528E  D06C               	goto	i2l1794
 33193  005290                     i2u589_40:
 33194                           
 33195                           ; BSR set to: 0
 33196                           ;usb_device.c: 1112: {
 33197                           ;usb_device.c: 1113: USBStatusStageEnabledFlag1 = 1;
 33198  005290  0E01               	movlw	1
 33199  005292  0100               	movlb	0	; () banked
 33200  005294  6FD4               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 33201                           
 33202                           ;usb_device.c: 1114: if(USBStatusStageEnabledFlag2 == 0)
 33203  005296  0100               	movlb	0	; () banked
 33204  005298  51D3               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 33205  00529A  A4D8               	btfss	status,2,c
 33206  00529C  D001               	goto	i2u590_41
 33207  00529E  D001               	goto	i2u590_40
 33208  0052A0                     i2u590_41:
 33209  0052A0  D063               	goto	i2l1794
 33210  0052A2                     i2u590_40:
 33211                           
 33212                           ; BSR set to: 0
 33213                           ;usb_device.c: 1115: {
 33214                           ;usb_device.c: 1116: USBStatusStageEnabledFlag2 = 1;
 33215  0052A2  0E01               	movlw	1
 33216  0052A4  0100               	movlb	0	; () banked
 33217  0052A6  6FD3               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 33218                           
 33219                           ; BSR set to: 0
 33220                           ;usb_device.c: 1120: if(controlTransferState == 2)
 33221  0052A8  0E02               	movlw	2
 33222  0052AA  184D               	xorwf	_controlTransferState,w,c	;volatile
 33223  0052AC  A4D8               	btfss	status,2,c
 33224  0052AE  D001               	goto	i2u591_41
 33225  0052B0  D001               	goto	i2u591_40
 33226  0052B2                     i2u591_41:
 33227  0052B2  D015               	goto	i2l7979
 33228  0052B4                     i2u591_40:
 33229                           
 33230                           ; BSR set to: 0
 33231                           ;usb_device.c: 1121: {
 33232                           ;usb_device.c: 1122: pBDTEntryIn[0]->CNT = 0;
 33233  0052B4  EE20 F001          	lfsr	2,1
 33234  0052B8  503C               	movf	_pBDTEntryIn,w,c
 33235  0052BA  26D9               	addwf	fsr2l,f,c
 33236  0052BC  503D               	movf	_pBDTEntryIn+1,w,c
 33237  0052BE  22DA               	addwfc	fsr2h,f,c
 33238  0052C0  0E00               	movlw	0
 33239  0052C2  6EDF               	movwf	indf2,c
 33240                           
 33241                           ; BSR set to: 0
 33242                           ;usb_device.c: 1123: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 33243  0052C4  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 33244  0052C8  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 33245  0052CC  0E48               	movlw	72
 33246  0052CE  6EDF               	movwf	indf2,c
 33247                           
 33248                           ; BSR set to: 0
 33249                           ;usb_device.c: 1124: pBDTEntryIn[0]->STAT.Val |= 0x80;
 33250  0052D0  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 33251  0052D4  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 33252  0052D8  0E00               	movlw	0
 33253  0052DA  8EDB               	bsf	plusw2,7,c
 33254                           
 33255                           ;usb_device.c: 1125: }
 33256  0052DC  D045               	goto	i2l1794
 33257  0052DE                     i2l7979:
 33258                           
 33259                           ; BSR set to: 0
 33260                           ;usb_device.c: 1126: else if(controlTransferState == 1)
 33261  0052DE  044D               	decf	_controlTransferState,w,c	;volatile
 33262  0052E0  A4D8               	btfss	status,2,c
 33263  0052E2  D001               	goto	i2u592_41
 33264  0052E4  D001               	goto	i2u592_40
 33265  0052E6                     i2u592_41:
 33266  0052E6  D040               	goto	i2l1794
 33267  0052E8                     i2u592_40:
 33268                           
 33269                           ; BSR set to: 0
 33270                           ;usb_device.c: 1127: {
 33271                           ;usb_device.c: 1128: BothEP0OutUOWNsSet = 0;
 33272  0052E8  0E00               	movlw	0
 33273  0052EA  0100               	movlb	0	; () banked
 33274  0052EC  6FD5               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 33275                           
 33276                           ; BSR set to: 0
 33277                           ;usb_device.c: 1132: pBDTEntryEP0OutCurrent->CNT = 8;
 33278  0052EE  EE20 F001          	lfsr	2,1
 33279  0052F2  5044               	movf	_pBDTEntryEP0OutCurrent,w,c
 33280  0052F4  26D9               	addwf	fsr2l,f,c
 33281  0052F6  5045               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 33282  0052F8  22DA               	addwfc	fsr2h,f,c
 33283  0052FA  0E08               	movlw	8
 33284  0052FC  6EDF               	movwf	indf2,c
 33285                           
 33286                           ; BSR set to: 0
 33287                           ;usb_device.c: 1133: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 33288  0052FE  EE20 F002          	lfsr	2,2
 33289  005302  5044               	movf	_pBDTEntryEP0OutCurrent,w,c
 33290  005304  26D9               	addwf	fsr2l,f,c
 33291  005306  5045               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 33292  005308  22DA               	addwfc	fsr2h,f,c
 33293  00530A  0E30               	movlw	48
 33294  00530C  6EDE               	movwf	postinc2,c
 33295  00530E  0E04               	movlw	4
 33296  005310  6EDD               	movwf	postdec2,c
 33297                           
 33298                           ; BSR set to: 0
 33299                           ;usb_device.c: 1134: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 33300  005312  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 33301  005316  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 33302  00531A  0E04               	movlw	4
 33303  00531C  6EDF               	movwf	indf2,c
 33304                           
 33305                           ; BSR set to: 0
 33306                           ;usb_device.c: 1135: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 33307  00531E  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 33308  005322  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 33309  005326  0E00               	movlw	0
 33310  005328  8EDB               	bsf	plusw2,7,c
 33311                           
 33312                           ; BSR set to: 0
 33313                           ;usb_device.c: 1136: BothEP0OutUOWNsSet = 1;
 33314  00532A  0E01               	movlw	1
 33315  00532C  0100               	movlb	0	; () banked
 33316  00532E  6FD5               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 33317                           
 33318                           ; BSR set to: 0
 33319                           ;usb_device.c: 1139: pBDTEntryEP0OutNext->CNT = 8;
 33320  005330  EE20 F001          	lfsr	2,1
 33321  005334  5042               	movf	_pBDTEntryEP0OutNext,w,c
 33322  005336  26D9               	addwf	fsr2l,f,c
 33323  005338  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 33324  00533A  22DA               	addwfc	fsr2h,f,c
 33325  00533C  0E08               	movlw	8
 33326  00533E  6EDF               	movwf	indf2,c
 33327                           
 33328                           ; BSR set to: 0
 33329                           ;usb_device.c: 1140: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 33330  005340  EE20 F002          	lfsr	2,2
 33331  005344  5042               	movf	_pBDTEntryEP0OutNext,w,c
 33332  005346  26D9               	addwf	fsr2l,f,c
 33333  005348  5043               	movf	_pBDTEntryEP0OutNext+1,w,c
 33334  00534A  22DA               	addwfc	fsr2h,f,c
 33335  00534C  0E30               	movlw	48
 33336  00534E  6EDE               	movwf	postinc2,c
 33337  005350  0E04               	movlw	4
 33338  005352  6EDD               	movwf	postdec2,c
 33339                           
 33340                           ; BSR set to: 0
 33341                           ;usb_device.c: 1141: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 33342  005354  C042  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 33343  005358  C043  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 33344  00535C  0E80               	movlw	128
 33345  00535E  6EDF               	movwf	indf2,c
 33346  005360  D003               	goto	i2l1794
 33347                           
 33348                           ; BSR set to: 0
 33349  005362  D002               	goto	i2l1794
 33350                           
 33351                           ; BSR set to: 0
 33352  005364  D001               	goto	i2l1794
 33353                           
 33354                           ; BSR set to: 0
 33355  005366  D000               	goto	i2l1794
 33356  005368                     i2l1794:
 33357                           
 33358                           ; BSR set to: 0
 33359  005368  0012               	return		;funcret
 33360  00536A                     __end_of_USBCtrlEPAllowStatusStage:
 33361                           	opt stack 0
 33362                           tosu	equ	0xFFF
 33363                           tosh	equ	0xFFE
 33364                           tosl	equ	0xFFD
 33365                           pclatu	equ	0xFFB
 33366                           pclath	equ	0xFFA
 33367                           tblptru	equ	0xFF8
 33368                           tblptrh	equ	0xFF7
 33369                           tblptrl	equ	0xFF6
 33370                           tablat	equ	0xFF5
 33371                           prodh	equ	0xFF4
 33372                           prodl	equ	0xFF3
 33373                           intcon	equ	0xFF2
 33374                           intcon2	equ	0xFF1
 33375                           intcon3	equ	0xFF0
 33376                           indf0	equ	0xFEF
 33377                           postinc0	equ	0xFEE
 33378                           fsr0h	equ	0xFEA
 33379                           fsr0l	equ	0xFE9
 33380                           wreg	equ	0xFE8
 33381                           indf1	equ	0xFE7
 33382                           postdec1	equ	0xFE5
 33383                           fsr1h	equ	0xFE2
 33384                           fsr1l	equ	0xFE1
 33385                           indf2	equ	0xFDF
 33386                           postinc2	equ	0xFDE
 33387                           postdec2	equ	0xFDD
 33388                           plusw2	equ	0xFDB
 33389                           fsr2h	equ	0xFDA
 33390                           fsr2l	equ	0xFD9
 33391                           status	equ	0xFD8
 33392                           
 33393 ;; *************** function _USBCtrlTrfInHandler *****************
 33394 ;; Defined at:
 33395 ;;		line 2223 in file "../Includes/Usb/Framework/usb_device.c"
 33396 ;; Parameters:    Size  Location     Type
 33397 ;;		None
 33398 ;; Auto vars:     Size  Location     Type
 33399 ;;  lastDTS         1   17[COMRAM] unsigned char 
 33400 ;; Return value:  Size  Location     Type
 33401 ;;                  1    wreg      void 
 33402 ;; Registers used:
 33403 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 33404 ;; Tracked objects:
 33405 ;;		On entry : 0/0
 33406 ;;		On exit  : 0/0
 33407 ;;		Unchanged: 0/0
 33408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33409 ;;      Params:         0       0       0       0       0       0       0       0       0
 33410 ;;      Locals:         1       0       0       0       0       0       0       0       0
 33411 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33412 ;;      Totals:         1       0       0       0       0       0       0       0       0
 33413 ;;Total ram usage:        1 bytes
 33414 ;; Hardware stack levels used:    1
 33415 ;; Hardware stack levels required when called:    2
 33416 ;; This function calls:
 33417 ;;		_USART_mySetLineCodingHandler
 33418 ;;		_USBCtrlTrfTxService
 33419 ;; This function is called by:
 33420 ;;		_USBCtrlEPService
 33421 ;; This function uses a non-reentrant model
 33422 ;;
 33423                           
 33424                           	psect	text130
 33425  0043D4                     __ptext130:
 33426                           	opt stack 0
 33427  0043D4                     _USBCtrlTrfInHandler:
 33428                           	opt stack 16
 33429                           
 33430                           ;usb_device.c: 2225: uint8_t lastDTS;
 33431                           ;usb_device.c: 2227: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 33432                           
 33433                           ; BSR set to: 0
 33434                           ;incstack = 0
 33435  0043D4  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 33436  0043D8  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 33437  0043DC  0E00               	movlw	0
 33438  0043DE  BCDF               	btfsc	indf2,6,c
 33439  0043E0  0E01               	movlw	1
 33440  0043E2  6E12               	movwf	USBCtrlTrfInHandler@lastDTS,c
 33441                           
 33442                           ;usb_device.c: 2230: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 33443  0043E4  0E04               	movlw	4
 33444  0043E6  1A3C               	xorwf	_pBDTEntryIn,f,c
 33445                           
 33446                           ;usb_device.c: 2235: if(USBDeviceState == ADR_PENDING_STATE)
 33447  0043E8  0E08               	movlw	8
 33448  0043EA  0100               	movlb	0	; () banked
 33449  0043EC  19DE               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 33450  0043EE  A4D8               	btfss	status,2,c
 33451  0043F0  D001               	goto	i2u835_41
 33452  0043F2  D001               	goto	i2u835_40
 33453  0043F4                     i2u835_41:
 33454  0043F4  D012               	goto	i2l9753
 33455  0043F6                     i2u835_40:
 33456                           
 33457                           ; BSR set to: 0
 33458                           ;usb_device.c: 2236: {
 33459                           ;usb_device.c: 2237: UADDR = (SetupPkt.bDevADR & 0x7F);
 33460  0043F6  0104               	movlb	4	; () banked
 33461  0043F8  5132               	movf	50,w,b	;volatile
 33462  0043FA  0B7F               	andlw	127
 33463  0043FC  6E63               	movwf	3939,c	;volatile
 33464                           
 33465                           ; BSR set to: 4
 33466                           ;usb_device.c: 2238: if(UADDR != 0u)
 33467  0043FE  5063               	movf	3939,w,c	;volatile
 33468  004400  B4D8               	btfsc	status,2,c
 33469  004402  D001               	goto	i2u836_41
 33470  004404  D001               	goto	i2u836_40
 33471  004406                     i2u836_41:
 33472  004406  D004               	goto	i2l9751
 33473  004408                     i2u836_40:
 33474                           
 33475                           ; BSR set to: 4
 33476                           ;usb_device.c: 2239: {
 33477                           ;usb_device.c: 2240: USBDeviceState=ADDRESS_STATE;
 33478  004408  0E10               	movlw	16
 33479  00440A  0100               	movlb	0	; () banked
 33480  00440C  6FDE               	movwf	_USBDeviceState& (0+255),b	;volatile
 33481                           
 33482                           ;usb_device.c: 2241: }
 33483  00440E  D005               	goto	i2l9753
 33484  004410                     i2l9751:
 33485                           
 33486                           ;usb_device.c: 2242: else
 33487                           ;usb_device.c: 2243: {
 33488                           ;usb_device.c: 2244: USBDeviceState=DEFAULT_STATE;
 33489  004410  0E04               	movlw	4
 33490  004412  0100               	movlb	0	; () banked
 33491  004414  6FDE               	movwf	_USBDeviceState& (0+255),b	;volatile
 33492  004416  D001               	goto	i2l9753
 33493                           
 33494                           ; BSR set to: 0
 33495  004418  D000               	goto	i2l9753
 33496  00441A                     i2l9753:
 33497                           
 33498                           ; BSR set to: 0
 33499                           ;usb_device.c: 2245: }
 33500                           ;usb_device.c: 2246: }
 33501                           ;usb_device.c: 2249: if(controlTransferState == 1)
 33502  00441A  044D               	decf	_controlTransferState,w,c	;volatile
 33503  00441C  A4D8               	btfss	status,2,c
 33504  00441E  D001               	goto	i2u837_41
 33505  004420  D001               	goto	i2u837_40
 33506  004422                     i2u837_41:
 33507  004422  D040               	goto	i2l1921
 33508  004424                     i2u837_40:
 33509                           
 33510                           ; BSR set to: 0
 33511                           ;usb_device.c: 2250: {
 33512                           ;usb_device.c: 2251: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 33513  004424  EE20 F002          	lfsr	2,2
 33514  004428  503C               	movf	_pBDTEntryIn,w,c
 33515  00442A  26D9               	addwf	fsr2l,f,c
 33516  00442C  503D               	movf	_pBDTEntryIn+1,w,c
 33517  00442E  22DA               	addwfc	fsr2h,f,c
 33518  004430  0E38               	movlw	56
 33519  004432  6EDE               	movwf	postinc2,c
 33520  004434  0E04               	movlw	4
 33521  004436  6EDD               	movwf	postdec2,c
 33522                           
 33523                           ; BSR set to: 0
 33524                           ;usb_device.c: 2252: USBCtrlTrfTxService();
 33525  004438  ECF7  F024         	call	_USBCtrlTrfTxService	;wreg free
 33526                           
 33527                           ;usb_device.c: 2258: if(shortPacketStatus == 2)
 33528  00443C  0E02               	movlw	2
 33529  00443E  184E               	xorwf	_shortPacketStatus,w,c	;volatile
 33530  004440  A4D8               	btfss	status,2,c
 33531  004442  D001               	goto	i2u838_41
 33532  004444  D001               	goto	i2u838_40
 33533  004446                     i2u838_41:
 33534  004446  D00D               	goto	i2l9765
 33535  004448                     i2u838_40:
 33536                           
 33537                           ;usb_device.c: 2259: {
 33538                           ;usb_device.c: 2262: pBDTEntryIn[0]->STAT.Val = 0x04;
 33539  004448  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 33540  00444C  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 33541  004450  0E04               	movlw	4
 33542  004452  6EDF               	movwf	indf2,c
 33543                           
 33544                           ;usb_device.c: 2263: pBDTEntryIn[0]->STAT.Val |= 0x80;
 33545  004454  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 33546  004458  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 33547  00445C  0E00               	movlw	0
 33548  00445E  8EDB               	bsf	plusw2,7,c
 33549                           
 33550                           ;usb_device.c: 2264: }
 33551  004460  D03F               	goto	i2l1929
 33552  004462                     i2l9765:
 33553                           
 33554                           ;usb_device.c: 2265: else
 33555                           ;usb_device.c: 2266: {
 33556                           ;usb_device.c: 2267: if(lastDTS == 0)
 33557  004462  5012               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 33558  004464  A4D8               	btfss	status,2,c
 33559  004466  D001               	goto	i2u839_41
 33560  004468  D001               	goto	i2u839_40
 33561  00446A                     i2u839_41:
 33562  00446A  D00D               	goto	i2l9771
 33563  00446C                     i2u839_40:
 33564                           
 33565                           ;usb_device.c: 2268: {
 33566                           ;usb_device.c: 2269: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 33567  00446C  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 33568  004470  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 33569  004474  0E48               	movlw	72
 33570  004476  6EDF               	movwf	indf2,c
 33571                           
 33572                           ;usb_device.c: 2270: pBDTEntryIn[0]->STAT.Val |= 0x80;
 33573  004478  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 33574  00447C  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 33575  004480  0E00               	movlw	0
 33576  004482  8EDB               	bsf	plusw2,7,c
 33577                           
 33578                           ;usb_device.c: 2271: }
 33579  004484  D02D               	goto	i2l1929
 33580  004486                     i2l9771:
 33581                           
 33582                           ;usb_device.c: 2272: else
 33583                           ;usb_device.c: 2273: {
 33584                           ;usb_device.c: 2274: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 33585  004486  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 33586  00448A  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 33587  00448E  0E08               	movlw	8
 33588  004490  6EDF               	movwf	indf2,c
 33589                           
 33590                           ;usb_device.c: 2275: pBDTEntryIn[0]->STAT.Val |= 0x80;
 33591  004492  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 33592  004496  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 33593  00449A  0E00               	movlw	0
 33594  00449C  8EDB               	bsf	plusw2,7,c
 33595  00449E  D020               	goto	i2l1929
 33596  0044A0  D01F               	goto	i2l1929
 33597                           
 33598                           ;usb_device.c: 2276: }
 33599                           ;usb_device.c: 2277: }
 33600                           ;usb_device.c: 2278: }
 33601  0044A2  D01E               	goto	i2l1929
 33602  0044A4                     i2l1921:
 33603                           
 33604                           ; BSR set to: 0
 33605                           ;usb_device.c: 2279: else
 33606                           ;usb_device.c: 2280: {
 33607                           ;usb_device.c: 2284: if(outPipes[0].info.bits.busy == 1)
 33608  0044A4  AE31               	btfss	_outPipes+3,7,c	;volatile
 33609  0044A6  D001               	goto	i2u840_41
 33610  0044A8  D001               	goto	i2u840_40
 33611  0044AA                     i2u840_41:
 33612  0044AA  D017               	goto	i2l9781
 33613  0044AC                     i2u840_40:
 33614                           
 33615                           ; BSR set to: 0
 33616                           ;usb_device.c: 2285: {
 33617                           ;usb_device.c: 2286: if(outPipes[0].pFunc != (0))
 33618  0044AC  5034               	movf	_outPipes+6,w,c	;volatile
 33619  0044AE  1035               	iorwf	_outPipes+7,w,c	;volatile
 33620  0044B0  B4D8               	btfsc	status,2,c
 33621  0044B2  D001               	goto	i2u841_41
 33622  0044B4  D001               	goto	i2u841_40
 33623  0044B6                     i2u841_41:
 33624  0044B6  D00F               	goto	i2l9779
 33625  0044B8                     i2u841_40:
 33626                           
 33627                           ; BSR set to: 0
 33628                           ;usb_device.c: 2287: {
 33629                           ;usb_device.c: 2288: outPipes[0].pFunc();
 33630  0044B8  EE20  F034         	lfsr	2,_outPipes+6	;volatile
 33631  0044BC  D801               	call	i2u842_48
 33632  0044BE  D00A               	goto	i2u842_49
 33633  0044C0                     i2u842_48:
 33634  0044C0  0005               	push	
 33635  0044C2  6EFA               	movwf	pclath,c
 33636  0044C4  50DE               	movf	postinc2,w,c
 33637  0044C6  6EFD               	movwf	tosl,c
 33638  0044C8  50DE               	movf	postinc2,w,c
 33639  0044CA  6EFE               	movwf	tosh,c
 33640  0044CC  50F8               	movf	tblptru,w,c
 33641  0044CE  6EFF               	movwf	tosu,c
 33642  0044D0  50FA               	movf	pclath,w,c
 33643  0044D2  0012               	return		;indir
 33644  0044D4                     i2u842_49:
 33645  0044D4  D000               	goto	i2l9779
 33646  0044D6                     i2l9779:
 33647                           
 33648                           ;usb_device.c: 2289: }
 33649                           ;usb_device.c: 2290: outPipes[0].info.bits.busy = 0;
 33650  0044D6  9E31               	bcf	_outPipes+3,7,c	;volatile
 33651  0044D8  D000               	goto	i2l9781
 33652  0044DA                     i2l9781:
 33653                           
 33654                           ;usb_device.c: 2291: }
 33655                           ;usb_device.c: 2293: controlTransferState = 0;
 33656  0044DA  0E00               	movlw	0
 33657  0044DC  6E4D               	movwf	_controlTransferState,c	;volatile
 33658  0044DE  D000               	goto	i2l1929
 33659  0044E0                     i2l1929:
 33660  0044E0  0012               	return		;funcret
 33661  0044E2                     __end_of_USBCtrlTrfInHandler:
 33662                           	opt stack 0
 33663                           tosu	equ	0xFFF
 33664                           tosh	equ	0xFFE
 33665                           tosl	equ	0xFFD
 33666                           pclatu	equ	0xFFB
 33667                           pclath	equ	0xFFA
 33668                           tblptru	equ	0xFF8
 33669                           tblptrh	equ	0xFF7
 33670                           tblptrl	equ	0xFF6
 33671                           tablat	equ	0xFF5
 33672                           prodh	equ	0xFF4
 33673                           prodl	equ	0xFF3
 33674                           intcon	equ	0xFF2
 33675                           intcon2	equ	0xFF1
 33676                           intcon3	equ	0xFF0
 33677                           indf0	equ	0xFEF
 33678                           postinc0	equ	0xFEE
 33679                           fsr0h	equ	0xFEA
 33680                           fsr0l	equ	0xFE9
 33681                           wreg	equ	0xFE8
 33682                           indf1	equ	0xFE7
 33683                           postdec1	equ	0xFE5
 33684                           fsr1h	equ	0xFE2
 33685                           fsr1l	equ	0xFE1
 33686                           indf2	equ	0xFDF
 33687                           postinc2	equ	0xFDE
 33688                           postdec2	equ	0xFDD
 33689                           plusw2	equ	0xFDB
 33690                           fsr2h	equ	0xFDA
 33691                           fsr2l	equ	0xFD9
 33692                           status	equ	0xFD8
 33693                           
 33694 ;; *************** function _USBCtrlTrfTxService *****************
 33695 ;; Defined at:
 33696 ;;		line 1437 in file "../Includes/Usb/Framework/usb_device.c"
 33697 ;; Parameters:    Size  Location     Type
 33698 ;;		None
 33699 ;; Auto vars:     Size  Location     Type
 33700 ;;  byteToSend      1    0[COMRAM] unsigned char 
 33701 ;; Return value:  Size  Location     Type
 33702 ;;                  1    wreg      void 
 33703 ;; Registers used:
 33704 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 33705 ;; Tracked objects:
 33706 ;;		On entry : 0/0
 33707 ;;		On exit  : 0/0
 33708 ;;		Unchanged: 0/0
 33709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33710 ;;      Params:         0       0       0       0       0       0       0       0       0
 33711 ;;      Locals:         1       0       0       0       0       0       0       0       0
 33712 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33713 ;;      Totals:         1       0       0       0       0       0       0       0       0
 33714 ;;Total ram usage:        1 bytes
 33715 ;; Hardware stack levels used:    1
 33716 ;; This function calls:
 33717 ;;		Nothing
 33718 ;; This function is called by:
 33719 ;;		_USBCtrlEPAllowDataStage
 33720 ;;		_USBCtrlTrfInHandler
 33721 ;; This function uses a non-reentrant model
 33722 ;;
 33723                           
 33724                           	psect	text131
 33725  0049EE                     __ptext131:
 33726                           	opt stack 0
 33727  0049EE                     _USBCtrlTrfTxService:
 33728                           	opt stack 15
 33729                           
 33730                           ;usb_device.c: 1439: uint8_t byteToSend;
 33731                           ;usb_device.c: 1443: byteToSend = 8;
 33732                           
 33733                           ;incstack = 0
 33734  0049EE  0E08               	movlw	8
 33735  0049F0  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 33736                           
 33737                           ;usb_device.c: 1444: if(inPipes[0].wCount.Val < (uint8_t)8)
 33738  0049F2  503B               	movf	_inPipes+5,w,c	;volatile
 33739  0049F4  E105               	bnz	i2u568_41
 33740  0049F6  0E08               	movlw	8
 33741  0049F8  5C3A               	subwf	_inPipes+4,w,c	;volatile
 33742  0049FA  B0D8               	btfsc	status,0,c
 33743  0049FC  D001               	goto	i2u568_41
 33744  0049FE  D001               	goto	i2u568_40
 33745  004A00                     i2u568_41:
 33746  004A00  D014               	goto	i2l7797
 33747  004A02                     i2u568_40:
 33748                           
 33749                           ;usb_device.c: 1445: {
 33750                           ;usb_device.c: 1446: byteToSend = inPipes[0].wCount.Val;
 33751  004A02  C03A  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 33752                           
 33753                           ;usb_device.c: 1453: if(shortPacketStatus == 0)
 33754  004A06  504E               	movf	_shortPacketStatus,w,c	;volatile
 33755  004A08  A4D8               	btfss	status,2,c
 33756  004A0A  D001               	goto	i2u569_41
 33757  004A0C  D001               	goto	i2u569_40
 33758  004A0E                     i2u569_41:
 33759  004A0E  D003               	goto	i2l7793
 33760  004A10                     i2u569_40:
 33761                           
 33762                           ;usb_device.c: 1454: {
 33763                           ;usb_device.c: 1455: shortPacketStatus = 1;
 33764  004A10  0E01               	movlw	1
 33765  004A12  6E4E               	movwf	_shortPacketStatus,c	;volatile
 33766                           
 33767                           ;usb_device.c: 1456: }
 33768  004A14  D00A               	goto	i2l7797
 33769  004A16                     i2l7793:
 33770                           
 33771                           ;usb_device.c: 1457: else if(shortPacketStatus == 1)
 33772  004A16  044E               	decf	_shortPacketStatus,w,c	;volatile
 33773  004A18  A4D8               	btfss	status,2,c
 33774  004A1A  D001               	goto	i2u570_41
 33775  004A1C  D001               	goto	i2u570_40
 33776  004A1E                     i2u570_41:
 33777  004A1E  D005               	goto	i2l7797
 33778  004A20                     i2u570_40:
 33779                           
 33780                           ;usb_device.c: 1458: {
 33781                           ;usb_device.c: 1459: shortPacketStatus = 2;
 33782  004A20  0E02               	movlw	2
 33783  004A22  6E4E               	movwf	_shortPacketStatus,c	;volatile
 33784  004A24  D002               	goto	i2l7797
 33785  004A26  D001               	goto	i2l7797
 33786  004A28  D000               	goto	i2l7797
 33787  004A2A                     i2l7797:
 33788                           
 33789                           ;usb_device.c: 1460: }
 33790                           ;usb_device.c: 1461: }
 33791                           ;usb_device.c: 1465: inPipes[0].wCount.Val -= byteToSend;
 33792  004A2A  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 33793  004A2C  5E3A               	subwf	_inPipes+4,f,c	;volatile
 33794  004A2E  0E00               	movlw	0
 33795  004A30  5A3B               	subwfb	_inPipes+5,f,c	;volatile
 33796                           
 33797                           ;usb_device.c: 1470: pBDTEntryIn[0]->CNT = byteToSend;
 33798  004A32  EE20 F001          	lfsr	2,1
 33799  004A36  503C               	movf	_pBDTEntryIn,w,c
 33800  004A38  26D9               	addwf	fsr2l,f,c
 33801  004A3A  503D               	movf	_pBDTEntryIn+1,w,c
 33802  004A3C  22DA               	addwfc	fsr2h,f,c
 33803  004A3E  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 33804                           
 33805                           ;usb_device.c: 1474: pDst = (volatile uint8_t*)CtrlTrfData;
 33806  004A42  0E38               	movlw	56
 33807  004A44  0101               	movlb	1	; () banked
 33808  004A46  6F54               	movwf	_pDst& (0+255),b
 33809  004A48  0E04               	movlw	4
 33810  004A4A  0101               	movlb	1	; () banked
 33811  004A4C  6F55               	movwf	(_pDst+1)& (0+255),b
 33812                           
 33813                           ; BSR set to: 1
 33814                           ;usb_device.c: 1475: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 33815  004A4E  B039               	btfsc	_inPipes+3,0,c	;volatile
 33816  004A50  D001               	goto	i2u571_41
 33817  004A52  D001               	goto	i2u571_40
 33818  004A54                     i2u571_41:
 33819  004A54  D042               	goto	i2l7825
 33820  004A56                     i2u571_40:
 33821  004A56  D01D               	goto	i2l7815
 33822                           
 33823                           ; BSR set to: 1
 33824                           ;usb_device.c: 1476: {
 33825                           ;usb_device.c: 1477: while(byteToSend)
 33826  004A58  D01C               	goto	i2l7815
 33827  004A5A                     i2l7807:
 33828                           
 33829                           ; BSR set to: 1
 33830                           ;usb_device.c: 1478: {
 33831                           ;usb_device.c: 1479: *pDst++ = *inPipes[0].pSrc.bRom++;
 33832  004A5A  C036  FFF6         	movff	_inPipes,tblptrl	;volatile
 33833  004A5E  C037  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 33834  004A62  6AF8               	clrf	tblptru,c
 33835  004A64  C154  FFD9         	movff	_pDst,fsr2l
 33836  004A68  C155  FFDA         	movff	_pDst+1,fsr2h
 33837  004A6C  0E07               	movlw	(high __ramtop+-1)
 33838  004A6E  64F7               	cpfsgt	tblptrh,c
 33839  004A70  D003               	bra	i2u572_47
 33840  004A72  0008               	tblrd		*
 33841  004A74  50F5               	movf	tablat,w,c
 33842  004A76  D005               	bra	i2u572_40
 33843  004A78                     i2u572_47:
 33844  004A78  CFF6 FFE9          	movff	tblptrl,fsr0l
 33845  004A7C  CFF7 FFEA          	movff	tblptrh,fsr0h
 33846  004A80  50EF               	movf	indf0,w,c
 33847  004A82                     i2u572_40:
 33848  004A82  6EDF               	movwf	indf2,c
 33849  004A84  4A36               	infsnz	_inPipes,f,c	;volatile
 33850  004A86  2A37               	incf	_inPipes+1,f,c	;volatile
 33851  004A88  0101               	movlb	1	; () banked
 33852  004A8A  4B54               	infsnz	_pDst& (0+255),f,b
 33853  004A8C  2B55               	incf	(_pDst+1)& (0+255),f,b
 33854                           
 33855                           ; BSR set to: 1
 33856                           ;usb_device.c: 1480: byteToSend--;
 33857  004A8E  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 33858  004A90  D000               	goto	i2l7815
 33859  004A92                     i2l7815:
 33860                           
 33861                           ; BSR set to: 1
 33862  004A92  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 33863  004A94  A4D8               	btfss	status,2,c
 33864  004A96  D001               	goto	i2u573_41
 33865  004A98  D001               	goto	i2u573_40
 33866  004A9A                     i2u573_41:
 33867  004A9A  D7DF               	goto	i2l7807
 33868  004A9C                     i2u573_40:
 33869  004A9C  D025               	goto	i2l1833
 33870                           
 33871                           ; BSR set to: 1
 33872                           ;usb_device.c: 1481: }
 33873                           ;usb_device.c: 1482: }
 33874  004A9E  D024               	goto	i2l1833
 33875                           
 33876                           ; BSR set to: 1
 33877                           ;usb_device.c: 1483: else
 33878                           ;usb_device.c: 1484: {
 33879                           ;usb_device.c: 1485: while(byteToSend)
 33880  004AA0  D01C               	goto	i2l7825
 33881  004AA2                     i2l7817:
 33882                           
 33883                           ; BSR set to: 1
 33884                           ;usb_device.c: 1486: {
 33885                           ;usb_device.c: 1487: *pDst++ = *inPipes[0].pSrc.bRam++;
 33886  004AA2  C036  FFF6         	movff	_inPipes,tblptrl	;volatile
 33887  004AA6  C037  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 33888  004AAA  6AF8               	clrf	tblptru,c
 33889  004AAC  C154  FFD9         	movff	_pDst,fsr2l
 33890  004AB0  C155  FFDA         	movff	_pDst+1,fsr2h
 33891  004AB4  0E07               	movlw	(high __ramtop+-1)
 33892  004AB6  64F7               	cpfsgt	tblptrh,c
 33893  004AB8  D003               	bra	i2u574_47
 33894  004ABA  0008               	tblrd		*
 33895  004ABC  50F5               	movf	tablat,w,c
 33896  004ABE  D005               	bra	i2u574_40
 33897  004AC0                     i2u574_47:
 33898  004AC0  CFF6 FFE9          	movff	tblptrl,fsr0l
 33899  004AC4  CFF7 FFEA          	movff	tblptrh,fsr0h
 33900  004AC8  50EF               	movf	indf0,w,c
 33901  004ACA                     i2u574_40:
 33902  004ACA  6EDF               	movwf	indf2,c
 33903  004ACC  4A36               	infsnz	_inPipes,f,c	;volatile
 33904  004ACE  2A37               	incf	_inPipes+1,f,c	;volatile
 33905  004AD0  0101               	movlb	1	; () banked
 33906  004AD2  4B54               	infsnz	_pDst& (0+255),f,b
 33907  004AD4  2B55               	incf	(_pDst+1)& (0+255),f,b
 33908                           
 33909                           ; BSR set to: 1
 33910                           ;usb_device.c: 1488: byteToSend--;
 33911  004AD6  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 33912  004AD8  D000               	goto	i2l7825
 33913  004ADA                     i2l7825:
 33914                           
 33915                           ; BSR set to: 1
 33916  004ADA  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 33917  004ADC  A4D8               	btfss	status,2,c
 33918  004ADE  D001               	goto	i2u575_41
 33919  004AE0  D001               	goto	i2u575_40
 33920  004AE2                     i2u575_41:
 33921  004AE2  D7DF               	goto	i2l7817
 33922  004AE4                     i2u575_40:
 33923  004AE4  D001               	goto	i2l1833
 33924                           
 33925                           ; BSR set to: 1
 33926  004AE6  D000               	goto	i2l1833
 33927  004AE8                     i2l1833:
 33928                           
 33929                           ; BSR set to: 1
 33930  004AE8  0012               	return		;funcret
 33931  004AEA                     __end_of_USBCtrlTrfTxService:
 33932                           	opt stack 0
 33933                           tosu	equ	0xFFF
 33934                           tosh	equ	0xFFE
 33935                           tosl	equ	0xFFD
 33936                           pclatu	equ	0xFFB
 33937                           pclath	equ	0xFFA
 33938                           tblptru	equ	0xFF8
 33939                           tblptrh	equ	0xFF7
 33940                           tblptrl	equ	0xFF6
 33941                           tablat	equ	0xFF5
 33942                           prodh	equ	0xFF4
 33943                           prodl	equ	0xFF3
 33944                           intcon	equ	0xFF2
 33945                           intcon2	equ	0xFF1
 33946                           intcon3	equ	0xFF0
 33947                           indf0	equ	0xFEF
 33948                           postinc0	equ	0xFEE
 33949                           fsr0h	equ	0xFEA
 33950                           fsr0l	equ	0xFE9
 33951                           wreg	equ	0xFE8
 33952                           indf1	equ	0xFE7
 33953                           postdec1	equ	0xFE5
 33954                           fsr1h	equ	0xFE2
 33955                           fsr1l	equ	0xFE1
 33956                           indf2	equ	0xFDF
 33957                           postinc2	equ	0xFDE
 33958                           postdec2	equ	0xFDD
 33959                           plusw2	equ	0xFDB
 33960                           fsr2h	equ	0xFDA
 33961                           fsr2l	equ	0xFD9
 33962                           status	equ	0xFD8
 33963                           
 33964 ;; *************** function _USART_mySetLineCodingHandler *****************
 33965 ;; Defined at:
 33966 ;;		line 273 in file "../Includes/Board/USBapp.c"
 33967 ;; Parameters:    Size  Location     Type
 33968 ;;		None
 33969 ;; Auto vars:     Size  Location     Type
 33970 ;;  dwBaud          4   13[COMRAM] unsigned long 
 33971 ;; Return value:  Size  Location     Type
 33972 ;;                  1    wreg      void 
 33973 ;; Registers used:
 33974 ;;		wreg, status,2, status,0, cstack
 33975 ;; Tracked objects:
 33976 ;;		On entry : 0/0
 33977 ;;		On exit  : 0/0
 33978 ;;		Unchanged: 0/0
 33979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33980 ;;      Params:         0       0       0       0       0       0       0       0       0
 33981 ;;      Locals:         4       0       0       0       0       0       0       0       0
 33982 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33983 ;;      Totals:         4       0       0       0       0       0       0       0       0
 33984 ;;Total ram usage:        4 bytes
 33985 ;; Hardware stack levels used:    1
 33986 ;; Hardware stack levels required when called:    1
 33987 ;; This function calls:
 33988 ;;		___lldiv
 33989 ;;		i2_EUSART_Initialize
 33990 ;; This function is called by:
 33991 ;;		_USBCheckCDCRequest
 33992 ;;		_USBCtrlTrfRxService
 33993 ;;		_USBCtrlTrfInHandler
 33994 ;; This function uses a non-reentrant model
 33995 ;;
 33996                           
 33997                           	psect	text132
 33998  00698C                     __ptext132:
 33999                           	opt stack 0
 34000  00698C                     _USART_mySetLineCodingHandler:
 34001                           	opt stack 15
 34002                           
 34003                           ;USBapp.c: 276: {line_coding.dwDTERate=cdc_notice.GetLineCoding.dwDTERate;};
 34004                           
 34005                           ; BSR set to: 1
 34006                           ;incstack = 0
 34007  00698C  C1CD  F1DF         	movff	_cdc_notice,_line_coding
 34008  006990  C1CE  F1E0         	movff	_cdc_notice+1,_line_coding+1
 34009  006994  C1CF  F1E1         	movff	_cdc_notice+2,_line_coding+2
 34010  006998  C1D0  F1E2         	movff	_cdc_notice+3,_line_coding+3
 34011                           
 34012                           ;USBapp.c: 278: uint32_t dwBaud;
 34013                           ;USBapp.c: 279: dwBaud = ((48000000/4) / line_coding.dwDTERate) - 1;
 34014  00699C  0E00               	movlw	0
 34015  00699E  6E01               	movwf	___lldiv@dividend,c
 34016  0069A0  0E1B               	movlw	27
 34017  0069A2  6E02               	movwf	___lldiv@dividend+1,c
 34018  0069A4  0EB7               	movlw	183
 34019  0069A6  6E03               	movwf	___lldiv@dividend+2,c
 34020  0069A8  0E00               	movlw	0
 34021  0069AA  6E04               	movwf	___lldiv@dividend+3,c
 34022  0069AC  C1DF  F005         	movff	_line_coding,___lldiv@divisor
 34023  0069B0  C1E0  F006         	movff	_line_coding+1,___lldiv@divisor+1
 34024  0069B4  C1E1  F007         	movff	_line_coding+2,___lldiv@divisor+2
 34025  0069B8  C1E2  F008         	movff	_line_coding+3,___lldiv@divisor+3
 34026  0069BC  ECAB  F02F         	call	___lldiv	;wreg free
 34027  0069C0  0EFF               	movlw	255
 34028  0069C2  2401               	addwf	?___lldiv,w,c
 34029  0069C4  6E0E               	movwf	USART_mySetLineCodingHandler@dwBaud,c
 34030  0069C6  0EFF               	movlw	255
 34031  0069C8  2002               	addwfc	?___lldiv+1,w,c
 34032  0069CA  6E0F               	movwf	USART_mySetLineCodingHandler@dwBaud+1,c
 34033  0069CC  0EFF               	movlw	255
 34034  0069CE  2003               	addwfc	?___lldiv+2,w,c
 34035  0069D0  6E10               	movwf	USART_mySetLineCodingHandler@dwBaud+2,c
 34036  0069D2  0EFF               	movlw	255
 34037  0069D4  2004               	addwfc	?___lldiv+3,w,c
 34038  0069D6  6E11               	movwf	USART_mySetLineCodingHandler@dwBaud+3,c
 34039                           
 34040                           ;USBapp.c: 280: SPBRG = (uint8_t) dwBaud;
 34041  0069D8  C00E  FFAF         	movff	USART_mySetLineCodingHandler@dwBaud,4015	;volatile
 34042                           
 34043                           ;USBapp.c: 281: SPBRGH = (uint8_t)((uint16_t) (dwBaud >> 8));
 34044  0069DC  C00F  FFB0         	movff	USART_mySetLineCodingHandler@dwBaud+1,4016	;volatile
 34045                           
 34046                           ;USBapp.c: 283: EUSART_Initialize();
 34047  0069E0  ECEE  F036         	call	i2_EUSART_Initialize	;wreg free
 34048  0069E4  0012               	return		;funcret
 34049  0069E6                     __end_of_USART_mySetLineCodingHandler:
 34050                           	opt stack 0
 34051                           tosu	equ	0xFFF
 34052                           tosh	equ	0xFFE
 34053                           tosl	equ	0xFFD
 34054                           pclatu	equ	0xFFB
 34055                           pclath	equ	0xFFA
 34056                           tblptru	equ	0xFF8
 34057                           tblptrh	equ	0xFF7
 34058                           tblptrl	equ	0xFF6
 34059                           tablat	equ	0xFF5
 34060                           prodh	equ	0xFF4
 34061                           prodl	equ	0xFF3
 34062                           intcon	equ	0xFF2
 34063                           intcon2	equ	0xFF1
 34064                           intcon3	equ	0xFF0
 34065                           indf0	equ	0xFEF
 34066                           postinc0	equ	0xFEE
 34067                           fsr0h	equ	0xFEA
 34068                           fsr0l	equ	0xFE9
 34069                           wreg	equ	0xFE8
 34070                           indf1	equ	0xFE7
 34071                           postdec1	equ	0xFE5
 34072                           fsr1h	equ	0xFE2
 34073                           fsr1l	equ	0xFE1
 34074                           indf2	equ	0xFDF
 34075                           postinc2	equ	0xFDE
 34076                           postdec2	equ	0xFDD
 34077                           plusw2	equ	0xFDB
 34078                           fsr2h	equ	0xFDA
 34079                           fsr2l	equ	0xFD9
 34080                           status	equ	0xFD8
 34081                           
 34082 ;; *************** function i2_EUSART_Initialize *****************
 34083 ;; Defined at:
 34084 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 34085 ;; Parameters:    Size  Location     Type
 34086 ;;		None
 34087 ;; Auto vars:     Size  Location     Type
 34088 ;;		None
 34089 ;; Return value:  Size  Location     Type
 34090 ;;                  1    wreg      void 
 34091 ;; Registers used:
 34092 ;;		wreg, status,2
 34093 ;; Tracked objects:
 34094 ;;		On entry : 0/0
 34095 ;;		On exit  : 0/0
 34096 ;;		Unchanged: 0/0
 34097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34098 ;;      Params:         0       0       0       0       0       0       0       0       0
 34099 ;;      Locals:         0       0       0       0       0       0       0       0       0
 34100 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34101 ;;      Totals:         0       0       0       0       0       0       0       0       0
 34102 ;;Total ram usage:        0 bytes
 34103 ;; Hardware stack levels used:    1
 34104 ;; This function calls:
 34105 ;;		Nothing
 34106 ;; This function is called by:
 34107 ;;		_USBapp_CdcEmulatorInitialize
 34108 ;;		_USART_mySetLineCodingHandler
 34109 ;; This function uses a non-reentrant model
 34110 ;;
 34111                           
 34112                           	psect	text133
 34113  006DDC                     __ptext133:
 34114                           	opt stack 0
 34115  006DDC                     i2_EUSART_Initialize:
 34116                           	opt stack 17
 34117                           
 34118                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 34119                           
 34120                           ;incstack = 0
 34121  006DDC  9A9D               	bcf	3997,5,c	;volatile
 34122                           
 34123                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 34124  006DDE  989D               	bcf	3997,4,c	;volatile
 34125                           
 34126                           ;eusart.c: 85: BAUDCON = 0x48;
 34127  006DE0  0E48               	movlw	72
 34128  006DE2  6EB8               	movwf	4024,c	;volatile
 34129                           
 34130                           ;eusart.c: 88: RCSTA = 0x90;
 34131  006DE4  0E90               	movlw	144
 34132  006DE6  6EAB               	movwf	4011,c	;volatile
 34133                           
 34134                           ;eusart.c: 91: TXSTA = 0x26;
 34135  006DE8  0E26               	movlw	38
 34136  006DEA  6EAC               	movwf	4012,c	;volatile
 34137                           
 34138                           ;eusart.c: 95: SPBRG = 0xD0;
 34139  006DEC  0ED0               	movlw	208
 34140  006DEE  6EAF               	movwf	4015,c	;volatile
 34141                           
 34142                           ;eusart.c: 100: SPBRGH = 0x00;
 34143  006DF0  0E00               	movlw	0
 34144  006DF2  6EB0               	movwf	4016,c	;volatile
 34145                           
 34146                           ;eusart.c: 103: eusartTxHead = 0;
 34147  006DF4  0E00               	movlw	0
 34148  006DF6  0100               	movlb	0	; () banked
 34149  006DF8  6FDB               	movwf	_eusartTxHead& (0+255),b
 34150                           
 34151                           ;eusart.c: 104: eusartTxTail = 0;
 34152  006DFA  0E00               	movlw	0
 34153  006DFC  0100               	movlb	0	; () banked
 34154  006DFE  6FDA               	movwf	_eusartTxTail& (0+255),b
 34155                           
 34156                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 34157  006E00  0E40               	movlw	64
 34158  006E02  6E4F               	movwf	_eusartTxBufferRemaining,c	;volatile
 34159                           
 34160                           ;eusart.c: 107: eusartRxHead = 0;
 34161  006E04  0E00               	movlw	0
 34162  006E06  0100               	movlb	0	; () banked
 34163  006E08  6FD9               	movwf	_eusartRxHead& (0+255),b
 34164                           
 34165                           ;eusart.c: 108: eusartRxTail = 0;
 34166  006E0A  0E00               	movlw	0
 34167  006E0C  0100               	movlb	0	; () banked
 34168  006E0E  6FD8               	movwf	_eusartRxTail& (0+255),b
 34169                           
 34170                           ;eusart.c: 109: eusartRxCount = 0;
 34171  006E10  0E00               	movlw	0
 34172  006E12  6E57               	movwf	_eusartRxCount,c	;volatile
 34173                           
 34174                           ; BSR set to: 0
 34175                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 34176  006E14  8A9D               	bsf	3997,5,c	;volatile
 34177                           
 34178                           ; BSR set to: 0
 34179                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 34180  006E16  88AB               	bsf	4011,4,c	;volatile
 34181                           
 34182                           ; BSR set to: 0
 34183  006E18  0012               	return		;funcret
 34184  006E1A                     __end_ofi2_EUSART_Initialize:
 34185                           	opt stack 0
 34186                           tosu	equ	0xFFF
 34187                           tosh	equ	0xFFE
 34188                           tosl	equ	0xFFD
 34189                           pclatu	equ	0xFFB
 34190                           pclath	equ	0xFFA
 34191                           tblptru	equ	0xFF8
 34192                           tblptrh	equ	0xFF7
 34193                           tblptrl	equ	0xFF6
 34194                           tablat	equ	0xFF5
 34195                           prodh	equ	0xFF4
 34196                           prodl	equ	0xFF3
 34197                           intcon	equ	0xFF2
 34198                           intcon2	equ	0xFF1
 34199                           intcon3	equ	0xFF0
 34200                           indf0	equ	0xFEF
 34201                           postinc0	equ	0xFEE
 34202                           fsr0h	equ	0xFEA
 34203                           fsr0l	equ	0xFE9
 34204                           wreg	equ	0xFE8
 34205                           indf1	equ	0xFE7
 34206                           postdec1	equ	0xFE5
 34207                           fsr1h	equ	0xFE2
 34208                           fsr1l	equ	0xFE1
 34209                           indf2	equ	0xFDF
 34210                           postinc2	equ	0xFDE
 34211                           postdec2	equ	0xFDD
 34212                           plusw2	equ	0xFDB
 34213                           fsr2h	equ	0xFDA
 34214                           fsr2l	equ	0xFD9
 34215                           status	equ	0xFD8
 34216                           
 34217 ;; *************** function ___lldiv *****************
 34218 ;; Defined at:
 34219 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
 34220 ;; Parameters:    Size  Location     Type
 34221 ;;  dividend        4    0[COMRAM] unsigned long 
 34222 ;;  divisor         4    4[COMRAM] unsigned long 
 34223 ;; Auto vars:     Size  Location     Type
 34224 ;;  quotient        4    8[COMRAM] unsigned long 
 34225 ;;  counter         1   12[COMRAM] unsigned char 
 34226 ;; Return value:  Size  Location     Type
 34227 ;;                  4    0[COMRAM] unsigned long 
 34228 ;; Registers used:
 34229 ;;		wreg, status,2, status,0
 34230 ;; Tracked objects:
 34231 ;;		On entry : 0/0
 34232 ;;		On exit  : 0/0
 34233 ;;		Unchanged: 0/0
 34234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34235 ;;      Params:         8       0       0       0       0       0       0       0       0
 34236 ;;      Locals:         5       0       0       0       0       0       0       0       0
 34237 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34238 ;;      Totals:        13       0       0       0       0       0       0       0       0
 34239 ;;Total ram usage:       13 bytes
 34240 ;; Hardware stack levels used:    1
 34241 ;; This function calls:
 34242 ;;		Nothing
 34243 ;; This function is called by:
 34244 ;;		_USART_mySetLineCodingHandler
 34245 ;; This function uses a non-reentrant model
 34246 ;;
 34247                           
 34248                           	psect	text134
 34249  005F56                     __ptext134:
 34250                           	opt stack 0
 34251  005F56                     ___lldiv:
 34252                           	opt stack 15
 34253                           
 34254                           ; BSR set to: 0
 34255                           ;incstack = 0
 34256  005F56  0E00               	movlw	0
 34257  005F58  6E09               	movwf	___lldiv@quotient,c
 34258  005F5A  0E00               	movlw	0
 34259  005F5C  6E0A               	movwf	___lldiv@quotient+1,c
 34260  005F5E  0E00               	movlw	0
 34261  005F60  6E0B               	movwf	___lldiv@quotient+2,c
 34262  005F62  0E00               	movlw	0
 34263  005F64  6E0C               	movwf	___lldiv@quotient+3,c
 34264  005F66  5005               	movf	___lldiv@divisor,w,c
 34265  005F68  1006               	iorwf	___lldiv@divisor+1,w,c
 34266  005F6A  1007               	iorwf	___lldiv@divisor+2,w,c
 34267  005F6C  1008               	iorwf	___lldiv@divisor+3,w,c
 34268  005F6E  B4D8               	btfsc	status,2,c
 34269  005F70  D001               	goto	i2u576_41
 34270  005F72  D001               	goto	i2u576_40
 34271  005F74                     i2u576_41:
 34272  005F74  D033               	goto	i2l2526
 34273  005F76                     i2u576_40:
 34274  005F76  0E01               	movlw	1
 34275  005F78  6E0D               	movwf	___lldiv@counter,c
 34276  005F7A  D007               	goto	i2l7835
 34277  005F7C                     i2l7833:
 34278  005F7C  90D8               	bcf	status,0,c
 34279  005F7E  3605               	rlcf	___lldiv@divisor,f,c
 34280  005F80  3606               	rlcf	___lldiv@divisor+1,f,c
 34281  005F82  3607               	rlcf	___lldiv@divisor+2,f,c
 34282  005F84  3608               	rlcf	___lldiv@divisor+3,f,c
 34283  005F86  2A0D               	incf	___lldiv@counter,f,c
 34284  005F88  D000               	goto	i2l7835
 34285  005F8A                     i2l7835:
 34286  005F8A  AE08               	btfss	___lldiv@divisor+3,7,c
 34287  005F8C  D001               	goto	i2u577_41
 34288  005F8E  D001               	goto	i2u577_40
 34289  005F90                     i2u577_41:
 34290  005F90  D7F5               	goto	i2l7833
 34291  005F92                     i2u577_40:
 34292  005F92  D001               	goto	i2l7837
 34293  005F94  D000               	goto	i2l7837
 34294  005F96                     i2l7837:
 34295  005F96  90D8               	bcf	status,0,c
 34296  005F98  3609               	rlcf	___lldiv@quotient,f,c
 34297  005F9A  360A               	rlcf	___lldiv@quotient+1,f,c
 34298  005F9C  360B               	rlcf	___lldiv@quotient+2,f,c
 34299  005F9E  360C               	rlcf	___lldiv@quotient+3,f,c
 34300  005FA0  5005               	movf	___lldiv@divisor,w,c
 34301  005FA2  5C01               	subwf	___lldiv@dividend,w,c
 34302  005FA4  5006               	movf	___lldiv@divisor+1,w,c
 34303  005FA6  5802               	subwfb	___lldiv@dividend+1,w,c
 34304  005FA8  5007               	movf	___lldiv@divisor+2,w,c
 34305  005FAA  5803               	subwfb	___lldiv@dividend+2,w,c
 34306  005FAC  5008               	movf	___lldiv@divisor+3,w,c
 34307  005FAE  5804               	subwfb	___lldiv@dividend+3,w,c
 34308  005FB0  A0D8               	btfss	status,0,c
 34309  005FB2  D001               	goto	i2u578_41
 34310  005FB4  D001               	goto	i2u578_40
 34311  005FB6                     i2u578_41:
 34312  005FB6  D00A               	goto	i2l7845
 34313  005FB8                     i2u578_40:
 34314  005FB8  5005               	movf	___lldiv@divisor,w,c
 34315  005FBA  5E01               	subwf	___lldiv@dividend,f,c
 34316  005FBC  5006               	movf	___lldiv@divisor+1,w,c
 34317  005FBE  5A02               	subwfb	___lldiv@dividend+1,f,c
 34318  005FC0  5007               	movf	___lldiv@divisor+2,w,c
 34319  005FC2  5A03               	subwfb	___lldiv@dividend+2,f,c
 34320  005FC4  5008               	movf	___lldiv@divisor+3,w,c
 34321  005FC6  5A04               	subwfb	___lldiv@dividend+3,f,c
 34322  005FC8  8009               	bsf	___lldiv@quotient,0,c
 34323  005FCA  D000               	goto	i2l7845
 34324  005FCC                     i2l7845:
 34325  005FCC  90D8               	bcf	status,0,c
 34326  005FCE  3208               	rrcf	___lldiv@divisor+3,f,c
 34327  005FD0  3207               	rrcf	___lldiv@divisor+2,f,c
 34328  005FD2  3206               	rrcf	___lldiv@divisor+1,f,c
 34329  005FD4  3205               	rrcf	___lldiv@divisor,f,c
 34330  005FD6  2E0D               	decfsz	___lldiv@counter,f,c
 34331  005FD8  D7DE               	goto	i2l7837
 34332  005FDA  D000               	goto	i2l2526
 34333  005FDC                     i2l2526:
 34334  005FDC  C009  F001         	movff	___lldiv@quotient,?___lldiv
 34335  005FE0  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 34336  005FE4  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 34337  005FE8  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 34338  005FEC  0012               	return		;funcret
 34339  005FEE                     __end_of___lldiv:
 34340                           	opt stack 0
 34341                           tosu	equ	0xFFF
 34342                           tosh	equ	0xFFE
 34343                           tosl	equ	0xFFD
 34344                           pclatu	equ	0xFFB
 34345                           pclath	equ	0xFFA
 34346                           tblptru	equ	0xFF8
 34347                           tblptrh	equ	0xFF7
 34348                           tblptrl	equ	0xFF6
 34349                           tablat	equ	0xFF5
 34350                           prodh	equ	0xFF4
 34351                           prodl	equ	0xFF3
 34352                           intcon	equ	0xFF2
 34353                           intcon2	equ	0xFF1
 34354                           intcon3	equ	0xFF0
 34355                           indf0	equ	0xFEF
 34356                           postinc0	equ	0xFEE
 34357                           fsr0h	equ	0xFEA
 34358                           fsr0l	equ	0xFE9
 34359                           wreg	equ	0xFE8
 34360                           indf1	equ	0xFE7
 34361                           postdec1	equ	0xFE5
 34362                           fsr1h	equ	0xFE2
 34363                           fsr1l	equ	0xFE1
 34364                           indf2	equ	0xFDF
 34365                           postinc2	equ	0xFDE
 34366                           postdec2	equ	0xFDD
 34367                           plusw2	equ	0xFDB
 34368                           fsr2h	equ	0xFDA
 34369                           fsr2l	equ	0xFD9
 34370                           status	equ	0xFD8
 34371                           
 34372 ;; *************** function _TMRapp_Tick *****************
 34373 ;; Defined at:
 34374 ;;		line 45 in file "../Includes/Drivers/TMRapp.c"
 34375 ;; Parameters:    Size  Location     Type
 34376 ;;		None
 34377 ;; Auto vars:     Size  Location     Type
 34378 ;;		None
 34379 ;; Return value:  Size  Location     Type
 34380 ;;                  1    wreg      void 
 34381 ;; Registers used:
 34382 ;;		None
 34383 ;; Tracked objects:
 34384 ;;		On entry : 0/0
 34385 ;;		On exit  : 0/0
 34386 ;;		Unchanged: 0/0
 34387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34388 ;;      Params:         0       0       0       0       0       0       0       0       0
 34389 ;;      Locals:         0       0       0       0       0       0       0       0       0
 34390 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34391 ;;      Totals:         0       0       0       0       0       0       0       0       0
 34392 ;;Total ram usage:        0 bytes
 34393 ;; Hardware stack levels used:    1
 34394 ;; This function calls:
 34395 ;;		Nothing
 34396 ;; This function is called by:
 34397 ;;		_INTERRUPT_InterruptManager
 34398 ;; This function uses a non-reentrant model
 34399 ;;
 34400                           
 34401                           	psect	text135
 34402  0072F8                     __ptext135:
 34403                           	opt stack 0
 34404  0072F8                     _TMRapp_Tick:
 34405                           	opt stack 20
 34406                           
 34407                           ;TMRapp.c: 48: appTimer.mSecTick = 1;
 34408                           
 34409                           ;incstack = 0
 34410  0072F8  0100               	movlb	0	; () banked
 34411  0072FA  81F2               	bsf	_appTimer& (0+255),0,b
 34412                           
 34413                           ; BSR set to: 0
 34414  0072FC  0012               	return		;funcret
 34415  0072FE                     __end_of_TMRapp_Tick:
 34416                           	opt stack 0
 34417                           tosu	equ	0xFFF
 34418                           tosh	equ	0xFFE
 34419                           tosl	equ	0xFFD
 34420                           pclatu	equ	0xFFB
 34421                           pclath	equ	0xFFA
 34422                           tblptru	equ	0xFF8
 34423                           tblptrh	equ	0xFF7
 34424                           tblptrl	equ	0xFF6
 34425                           tablat	equ	0xFF5
 34426                           prodh	equ	0xFF4
 34427                           prodl	equ	0xFF3
 34428                           intcon	equ	0xFF2
 34429                           intcon2	equ	0xFF1
 34430                           intcon3	equ	0xFF0
 34431                           indf0	equ	0xFEF
 34432                           postinc0	equ	0xFEE
 34433                           fsr0h	equ	0xFEA
 34434                           fsr0l	equ	0xFE9
 34435                           wreg	equ	0xFE8
 34436                           indf1	equ	0xFE7
 34437                           postdec1	equ	0xFE5
 34438                           fsr1h	equ	0xFE2
 34439                           fsr1l	equ	0xFE1
 34440                           indf2	equ	0xFDF
 34441                           postinc2	equ	0xFDE
 34442                           postdec2	equ	0xFDD
 34443                           plusw2	equ	0xFDB
 34444                           fsr2h	equ	0xFDA
 34445                           fsr2l	equ	0xFD9
 34446                           status	equ	0xFD8
 34447                           
 34448 ;; *************** function _TMR3_ISR *****************
 34449 ;; Defined at:
 34450 ;;		line 161 in file "../Includes/MccGenerated/tmr3.c"
 34451 ;; Parameters:    Size  Location     Type
 34452 ;;		None
 34453 ;; Auto vars:     Size  Location     Type
 34454 ;;		None
 34455 ;; Return value:  Size  Location     Type
 34456 ;;                  1    wreg      void 
 34457 ;; Registers used:
 34458 ;;		wreg, status,2
 34459 ;; Tracked objects:
 34460 ;;		On entry : 0/0
 34461 ;;		On exit  : 0/0
 34462 ;;		Unchanged: 0/0
 34463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34464 ;;      Params:         0       0       0       0       0       0       0       0       0
 34465 ;;      Locals:         0       0       0       0       0       0       0       0       0
 34466 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34467 ;;      Totals:         0       0       0       0       0       0       0       0       0
 34468 ;;Total ram usage:        0 bytes
 34469 ;; Hardware stack levels used:    1
 34470 ;; This function calls:
 34471 ;;		Nothing
 34472 ;; This function is called by:
 34473 ;;		_INTERRUPT_InterruptManager
 34474 ;; This function uses a non-reentrant model
 34475 ;;
 34476                           
 34477                           	psect	text136
 34478  00708A                     __ptext136:
 34479                           	opt stack 0
 34480  00708A                     _TMR3_ISR:
 34481                           	opt stack 20
 34482                           
 34483                           ;tmr3.c: 164: PIR2bits.TMR3IF = 0;
 34484                           
 34485                           ; BSR set to: 0
 34486                           ;incstack = 0
 34487  00708A  92A1               	bcf	4001,1,c	;volatile
 34488                           
 34489                           ;tmr3.c: 167: if(LATEbits.LATE2 == 1)
 34490  00708C  A48D               	btfss	3981,2,c	;volatile
 34491  00708E  D001               	goto	i2u460_41
 34492  007090  D001               	goto	i2u460_40
 34493  007092                     i2u460_41:
 34494  007092  D006               	goto	i2l1588
 34495  007094                     i2u460_40:
 34496                           
 34497                           ;tmr3.c: 168: {
 34498                           ;tmr3.c: 169: LATEbits.LATE2 = 0;
 34499  007094  948D               	bcf	3981,2,c	;volatile
 34500                           
 34501                           ;tmr3.c: 170: TMR3H = 0xD5;
 34502  007096  0ED5               	movlw	213
 34503  007098  6EB3               	movwf	4019,c	;volatile
 34504                           
 34505                           ;tmr3.c: 171: TMR3L = 0xD0;
 34506  00709A  0ED0               	movlw	208
 34507  00709C  6EB2               	movwf	4018,c	;volatile
 34508                           
 34509                           ;tmr3.c: 172: } else {
 34510  00709E  D006               	goto	i2l1590
 34511  0070A0                     i2l1588:
 34512                           
 34513                           ;tmr3.c: 173: LATEbits.LATE2 = 1;
 34514  0070A0  848D               	bsf	3981,2,c	;volatile
 34515                           
 34516                           ;tmr3.c: 174: TMR3H = 0xFB;
 34517  0070A2  0EFB               	movlw	251
 34518  0070A4  6EB3               	movwf	4019,c	;volatile
 34519                           
 34520                           ;tmr3.c: 175: TMR3L = 0x50;
 34521  0070A6  0E50               	movlw	80
 34522  0070A8  6EB2               	movwf	4018,c	;volatile
 34523  0070AA  D000               	goto	i2l1590
 34524  0070AC                     i2l1590:
 34525  0070AC  0012               	return		;funcret
 34526  0070AE                     __end_of_TMR3_ISR:
 34527                           	opt stack 0
 34528                           tosu	equ	0xFFF
 34529                           tosh	equ	0xFFE
 34530                           tosl	equ	0xFFD
 34531                           pclatu	equ	0xFFB
 34532                           pclath	equ	0xFFA
 34533                           tblptru	equ	0xFF8
 34534                           tblptrh	equ	0xFF7
 34535                           tblptrl	equ	0xFF6
 34536                           tablat	equ	0xFF5
 34537                           prodh	equ	0xFF4
 34538                           prodl	equ	0xFF3
 34539                           intcon	equ	0xFF2
 34540                           intcon2	equ	0xFF1
 34541                           intcon3	equ	0xFF0
 34542                           indf0	equ	0xFEF
 34543                           postinc0	equ	0xFEE
 34544                           fsr0h	equ	0xFEA
 34545                           fsr0l	equ	0xFE9
 34546                           wreg	equ	0xFE8
 34547                           indf1	equ	0xFE7
 34548                           postdec1	equ	0xFE5
 34549                           fsr1h	equ	0xFE2
 34550                           fsr1l	equ	0xFE1
 34551                           indf2	equ	0xFDF
 34552                           postinc2	equ	0xFDE
 34553                           postdec2	equ	0xFDD
 34554                           plusw2	equ	0xFDB
 34555                           fsr2h	equ	0xFDA
 34556                           fsr2l	equ	0xFD9
 34557                           status	equ	0xFD8
 34558                           
 34559 ;; *************** function _TMR1_ISR *****************
 34560 ;; Defined at:
 34561 ;;		line 152 in file "../Includes/MccGenerated/tmr1.c"
 34562 ;; Parameters:    Size  Location     Type
 34563 ;;		None
 34564 ;; Auto vars:     Size  Location     Type
 34565 ;;		None
 34566 ;; Return value:  Size  Location     Type
 34567 ;;                  1    wreg      void 
 34568 ;; Registers used:
 34569 ;;		wreg, status,2
 34570 ;; Tracked objects:
 34571 ;;		On entry : 0/0
 34572 ;;		On exit  : 0/0
 34573 ;;		Unchanged: 0/0
 34574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34575 ;;      Params:         0       0       0       0       0       0       0       0       0
 34576 ;;      Locals:         0       0       0       0       0       0       0       0       0
 34577 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34578 ;;      Totals:         0       0       0       0       0       0       0       0       0
 34579 ;;Total ram usage:        0 bytes
 34580 ;; Hardware stack levels used:    1
 34581 ;; This function calls:
 34582 ;;		Nothing
 34583 ;; This function is called by:
 34584 ;;		_INTERRUPT_InterruptManager
 34585 ;; This function uses a non-reentrant model
 34586 ;;
 34587                           
 34588                           	psect	text137
 34589  007290                     __ptext137:
 34590                           	opt stack 0
 34591  007290                     _TMR1_ISR:
 34592                           	opt stack 20
 34593                           
 34594                           ;tmr1.c: 156: PIR1bits.TMR1IF = 0;
 34595                           
 34596                           ;incstack = 0
 34597  007290  909E               	bcf	3998,0,c	;volatile
 34598                           
 34599                           ;tmr1.c: 158: TMR1H = (timer1ReloadVal >> 8);
 34600  007292  5047               	movf	_timer1ReloadVal+1,w,c	;volatile
 34601  007294  6ECF               	movwf	4047,c	;volatile
 34602                           
 34603                           ;tmr1.c: 159: TMR1L = timer1ReloadVal;
 34604  007296  C046  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 34605  00729A  0012               	return		;funcret
 34606  00729C                     __end_of_TMR1_ISR:
 34607                           	opt stack 0
 34608                           tosu	equ	0xFFF
 34609                           tosh	equ	0xFFE
 34610                           tosl	equ	0xFFD
 34611                           pclatu	equ	0xFFB
 34612                           pclath	equ	0xFFA
 34613                           tblptru	equ	0xFF8
 34614                           tblptrh	equ	0xFF7
 34615                           tblptrl	equ	0xFF6
 34616                           tablat	equ	0xFF5
 34617                           prodh	equ	0xFF4
 34618                           prodl	equ	0xFF3
 34619                           intcon	equ	0xFF2
 34620                           intcon2	equ	0xFF1
 34621                           intcon3	equ	0xFF0
 34622                           indf0	equ	0xFEF
 34623                           postinc0	equ	0xFEE
 34624                           fsr0h	equ	0xFEA
 34625                           fsr0l	equ	0xFE9
 34626                           wreg	equ	0xFE8
 34627                           indf1	equ	0xFE7
 34628                           postdec1	equ	0xFE5
 34629                           fsr1h	equ	0xFE2
 34630                           fsr1l	equ	0xFE1
 34631                           indf2	equ	0xFDF
 34632                           postinc2	equ	0xFDE
 34633                           postdec2	equ	0xFDD
 34634                           plusw2	equ	0xFDB
 34635                           fsr2h	equ	0xFDA
 34636                           fsr2l	equ	0xFD9
 34637                           status	equ	0xFD8
 34638                           
 34639 ;; *************** function _EUSART_Transmit_ISR *****************
 34640 ;; Defined at:
 34641 ;;		line 162 in file "../Includes/MccGenerated/eusart.c"
 34642 ;; Parameters:    Size  Location     Type
 34643 ;;		None
 34644 ;; Auto vars:     Size  Location     Type
 34645 ;;		None
 34646 ;; Return value:  Size  Location     Type
 34647 ;;                  1    wreg      void 
 34648 ;; Registers used:
 34649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34650 ;; Tracked objects:
 34651 ;;		On entry : 0/0
 34652 ;;		On exit  : 0/0
 34653 ;;		Unchanged: 0/0
 34654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34655 ;;      Params:         0       0       0       0       0       0       0       0       0
 34656 ;;      Locals:         0       0       0       0       0       0       0       0       0
 34657 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34658 ;;      Totals:         0       0       0       0       0       0       0       0       0
 34659 ;;Total ram usage:        0 bytes
 34660 ;; Hardware stack levels used:    1
 34661 ;; This function calls:
 34662 ;;		Nothing
 34663 ;; This function is called by:
 34664 ;;		_INTERRUPT_InterruptManager
 34665 ;; This function uses a non-reentrant model
 34666 ;;
 34667                           
 34668                           	psect	text138
 34669  006C9C                     __ptext138:
 34670                           	opt stack 0
 34671  006C9C                     _EUSART_Transmit_ISR:
 34672                           	opt stack 20
 34673                           
 34674                           ;eusart.c: 166: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 34675                           
 34676                           ;incstack = 0
 34677  006C9C  0E40               	movlw	64
 34678  006C9E  604F               	cpfslt	_eusartTxBufferRemaining,c	;volatile
 34679  006CA0  D001               	goto	i2u1002_41
 34680  006CA2  D001               	goto	i2u1002_40
 34681  006CA4                     i2u1002_41:
 34682  006CA4  D019               	goto	i2l1142
 34683  006CA6                     i2u1002_40:
 34684                           
 34685                           ;eusart.c: 167: {
 34686                           ;eusart.c: 168: TXREG = eusartTxBuffer[eusartTxTail++];
 34687  006CA6  0100               	movlb	0	; () banked
 34688  006CA8  51DA               	movf	_eusartTxTail& (0+255),w,b
 34689  006CAA  0D01               	mullw	1
 34690  006CAC  0E40               	movlw	low _eusartTxBuffer
 34691  006CAE  24F3               	addwf	prodl,w,c
 34692  006CB0  6ED9               	movwf	fsr2l,c
 34693  006CB2  0E02               	movlw	high _eusartTxBuffer
 34694  006CB4  20F4               	addwfc	prodh,w,c
 34695  006CB6  6EDA               	movwf	fsr2h,c
 34696  006CB8  50DF               	movf	indf2,w,c
 34697  006CBA  6EAD               	movwf	4013,c	;volatile
 34698                           
 34699                           ; BSR set to: 0
 34700  006CBC  0100               	movlb	0	; () banked
 34701  006CBE  2BDA               	incf	_eusartTxTail& (0+255),f,b
 34702                           
 34703                           ; BSR set to: 0
 34704                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 34705  006CC0  0E3F               	movlw	63
 34706  006CC2  0100               	movlb	0	; () banked
 34707  006CC4  65DA               	cpfsgt	_eusartTxTail& (0+255),b
 34708  006CC6  D001               	goto	i2u1003_41
 34709  006CC8  D001               	goto	i2u1003_40
 34710  006CCA                     i2u1003_41:
 34711  006CCA  D004               	goto	i2l11297
 34712  006CCC                     i2u1003_40:
 34713                           
 34714                           ; BSR set to: 0
 34715                           ;eusart.c: 170: {
 34716                           ;eusart.c: 171: eusartTxTail = 0;
 34717  006CCC  0E00               	movlw	0
 34718  006CCE  0100               	movlb	0	; () banked
 34719  006CD0  6FDA               	movwf	_eusartTxTail& (0+255),b
 34720  006CD2  D000               	goto	i2l11297
 34721  006CD4                     i2l11297:
 34722                           
 34723                           ; BSR set to: 0
 34724                           ;eusart.c: 172: }
 34725                           ;eusart.c: 173: eusartTxBufferRemaining++;
 34726  006CD4  2A4F               	incf	_eusartTxBufferRemaining,f,c	;volatile
 34727                           
 34728                           ;eusart.c: 174: }
 34729  006CD6  D002               	goto	i2l1145
 34730  006CD8                     i2l1142:
 34731                           
 34732                           ;eusart.c: 175: else
 34733                           ;eusart.c: 176: {
 34734                           ;eusart.c: 177: PIE1bits.TXIE = 0;
 34735  006CD8  989D               	bcf	3997,4,c	;volatile
 34736  006CDA  D000               	goto	i2l1145
 34737  006CDC                     i2l1145:
 34738  006CDC  0012               	return		;funcret
 34739  006CDE                     __end_of_EUSART_Transmit_ISR:
 34740                           	opt stack 0
 34741                           tosu	equ	0xFFF
 34742                           tosh	equ	0xFFE
 34743                           tosl	equ	0xFFD
 34744                           pclatu	equ	0xFFB
 34745                           pclath	equ	0xFFA
 34746                           tblptru	equ	0xFF8
 34747                           tblptrh	equ	0xFF7
 34748                           tblptrl	equ	0xFF6
 34749                           tablat	equ	0xFF5
 34750                           prodh	equ	0xFF4
 34751                           prodl	equ	0xFF3
 34752                           intcon	equ	0xFF2
 34753                           intcon2	equ	0xFF1
 34754                           intcon3	equ	0xFF0
 34755                           indf0	equ	0xFEF
 34756                           postinc0	equ	0xFEE
 34757                           fsr0h	equ	0xFEA
 34758                           fsr0l	equ	0xFE9
 34759                           wreg	equ	0xFE8
 34760                           indf1	equ	0xFE7
 34761                           postdec1	equ	0xFE5
 34762                           fsr1h	equ	0xFE2
 34763                           fsr1l	equ	0xFE1
 34764                           indf2	equ	0xFDF
 34765                           postinc2	equ	0xFDE
 34766                           postdec2	equ	0xFDD
 34767                           plusw2	equ	0xFDB
 34768                           fsr2h	equ	0xFDA
 34769                           fsr2l	equ	0xFD9
 34770                           status	equ	0xFD8
 34771                           
 34772 ;; *************** function _EUSART_Receive_ISR *****************
 34773 ;; Defined at:
 34774 ;;		line 181 in file "../Includes/MccGenerated/eusart.c"
 34775 ;; Parameters:    Size  Location     Type
 34776 ;;		None
 34777 ;; Auto vars:     Size  Location     Type
 34778 ;;		None
 34779 ;; Return value:  Size  Location     Type
 34780 ;;                  1    wreg      void 
 34781 ;; Registers used:
 34782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34783 ;; Tracked objects:
 34784 ;;		On entry : 0/0
 34785 ;;		On exit  : 0/0
 34786 ;;		Unchanged: 0/0
 34787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34788 ;;      Params:         0       0       0       0       0       0       0       0       0
 34789 ;;      Locals:         0       0       0       0       0       0       0       0       0
 34790 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34791 ;;      Totals:         0       0       0       0       0       0       0       0       0
 34792 ;;Total ram usage:        0 bytes
 34793 ;; Hardware stack levels used:    1
 34794 ;; This function calls:
 34795 ;;		Nothing
 34796 ;; This function is called by:
 34797 ;;		_INTERRUPT_InterruptManager
 34798 ;; This function uses a non-reentrant model
 34799 ;;
 34800                           
 34801                           	psect	text139
 34802  006CDE                     __ptext139:
 34803                           	opt stack 0
 34804  006CDE                     _EUSART_Receive_ISR:
 34805                           	opt stack 20
 34806                           
 34807                           ;eusart.c: 183: if(1 == RCSTAbits.OERR)
 34808                           
 34809                           ;incstack = 0
 34810  006CDE  A2AB               	btfss	4011,1,c	;volatile
 34811  006CE0  D001               	goto	i2u1004_41
 34812  006CE2  D001               	goto	i2u1004_40
 34813  006CE4                     i2u1004_41:
 34814  006CE4  D003               	goto	i2l11303
 34815  006CE6                     i2u1004_40:
 34816                           
 34817                           ;eusart.c: 184: {
 34818                           ;eusart.c: 187: RCSTAbits.CREN = 0;
 34819  006CE6  98AB               	bcf	4011,4,c	;volatile
 34820                           
 34821                           ;eusart.c: 188: RCSTAbits.CREN = 1;
 34822  006CE8  88AB               	bsf	4011,4,c	;volatile
 34823                           
 34824                           ;eusart.c: 189: }
 34825  006CEA  D019               	goto	i2l1151
 34826  006CEC                     i2l11303:
 34827                           
 34828                           ;eusart.c: 190: else
 34829                           ;eusart.c: 191: {
 34830                           ;eusart.c: 193: eusartRxBuffer[eusartRxHead++] = RCREG;
 34831  006CEC  0100               	movlb	0	; () banked
 34832  006CEE  51D9               	movf	_eusartRxHead& (0+255),w,b
 34833  006CF0  0D01               	mullw	1
 34834  006CF2  0E00               	movlw	low _eusartRxBuffer
 34835  006CF4  24F3               	addwf	prodl,w,c
 34836  006CF6  6ED9               	movwf	fsr2l,c
 34837  006CF8  0E02               	movlw	high _eusartRxBuffer
 34838  006CFA  20F4               	addwfc	prodh,w,c
 34839  006CFC  6EDA               	movwf	fsr2h,c
 34840  006CFE  CFAE FFDF          	movff	4014,indf2	;volatile
 34841                           
 34842                           ; BSR set to: 0
 34843  006D02  0100               	movlb	0	; () banked
 34844  006D04  2BD9               	incf	_eusartRxHead& (0+255),f,b
 34845                           
 34846                           ; BSR set to: 0
 34847                           ;eusart.c: 194: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 34848  006D06  0E3F               	movlw	63
 34849  006D08  0100               	movlb	0	; () banked
 34850  006D0A  65D9               	cpfsgt	_eusartRxHead& (0+255),b
 34851  006D0C  D001               	goto	i2u1005_41
 34852  006D0E  D001               	goto	i2u1005_40
 34853  006D10                     i2u1005_41:
 34854  006D10  D004               	goto	i2l11311
 34855  006D12                     i2u1005_40:
 34856                           
 34857                           ; BSR set to: 0
 34858                           ;eusart.c: 195: {
 34859                           ;eusart.c: 196: eusartRxHead = 0;
 34860  006D12  0E00               	movlw	0
 34861  006D14  0100               	movlb	0	; () banked
 34862  006D16  6FD9               	movwf	_eusartRxHead& (0+255),b
 34863  006D18  D000               	goto	i2l11311
 34864  006D1A                     i2l11311:
 34865                           
 34866                           ; BSR set to: 0
 34867                           ;eusart.c: 197: }
 34868                           ;eusart.c: 198: eusartRxCount++;
 34869  006D1A  2A57               	incf	_eusartRxCount,f,c	;volatile
 34870  006D1C  D000               	goto	i2l1151
 34871  006D1E                     i2l1151:
 34872  006D1E  0012               	return		;funcret
 34873  006D20                     __end_of_EUSART_Receive_ISR:
 34874                           	opt stack 0
 34875                           tosu	equ	0xFFF
 34876                           tosh	equ	0xFFE
 34877                           tosl	equ	0xFFD
 34878                           pclatu	equ	0xFFB
 34879                           pclath	equ	0xFFA
 34880                           tblptru	equ	0xFF8
 34881                           tblptrh	equ	0xFF7
 34882                           tblptrl	equ	0xFF6
 34883                           tablat	equ	0xFF5
 34884                           prodh	equ	0xFF4
 34885                           prodl	equ	0xFF3
 34886                           intcon	equ	0xFF2
 34887                           intcon2	equ	0xFF1
 34888                           intcon3	equ	0xFF0
 34889                           indf0	equ	0xFEF
 34890                           postinc0	equ	0xFEE
 34891                           fsr0h	equ	0xFEA
 34892                           fsr0l	equ	0xFE9
 34893                           wreg	equ	0xFE8
 34894                           indf1	equ	0xFE7
 34895                           postdec1	equ	0xFE5
 34896                           fsr1h	equ	0xFE2
 34897                           fsr1l	equ	0xFE1
 34898                           indf2	equ	0xFDF
 34899                           postinc2	equ	0xFDE
 34900                           postdec2	equ	0xFDD
 34901                           plusw2	equ	0xFDB
 34902                           fsr2h	equ	0xFDA
 34903                           fsr2l	equ	0xFD9
 34904                           status	equ	0xFD8
 34905                           
 34906 ;; *************** function _CMP1_ISR *****************
 34907 ;; Defined at:
 34908 ;;		line 95 in file "../Includes/MccGenerated/cmp1.c"
 34909 ;; Parameters:    Size  Location     Type
 34910 ;;		None
 34911 ;; Auto vars:     Size  Location     Type
 34912 ;;		None
 34913 ;; Return value:  Size  Location     Type
 34914 ;;                  1    wreg      void 
 34915 ;; Registers used:
 34916 ;;		None
 34917 ;; Tracked objects:
 34918 ;;		On entry : 0/0
 34919 ;;		On exit  : 0/0
 34920 ;;		Unchanged: 0/0
 34921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34922 ;;      Params:         0       0       0       0       0       0       0       0       0
 34923 ;;      Locals:         0       0       0       0       0       0       0       0       0
 34924 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34925 ;;      Totals:         0       0       0       0       0       0       0       0       0
 34926 ;;Total ram usage:        0 bytes
 34927 ;; Hardware stack levels used:    1
 34928 ;; This function calls:
 34929 ;;		Nothing
 34930 ;; This function is called by:
 34931 ;;		_INTERRUPT_InterruptManager
 34932 ;; This function uses a non-reentrant model
 34933 ;;
 34934                           
 34935                           	psect	text140
 34936  00730A                     __ptext140:
 34937                           	opt stack 0
 34938  00730A                     _CMP1_ISR:
 34939                           	opt stack 20
 34940                           
 34941                           ;cmp1.c: 98: PIR2bits.C1IF = 0;
 34942                           
 34943                           ;incstack = 0
 34944  00730A  9CA1               	bcf	4001,6,c	;volatile
 34945  00730C  0012               	return		;funcret
 34946  00730E                     __end_of_CMP1_ISR:
 34947                           	opt stack 0
 34948                           tosu	equ	0xFFF
 34949                           tosh	equ	0xFFE
 34950                           tosl	equ	0xFFD
 34951                           pclatu	equ	0xFFB
 34952                           pclath	equ	0xFFA
 34953                           tblptru	equ	0xFF8
 34954                           tblptrh	equ	0xFF7
 34955                           tblptrl	equ	0xFF6
 34956                           tablat	equ	0xFF5
 34957                           prodh	equ	0xFF4
 34958                           prodl	equ	0xFF3
 34959                           intcon	equ	0xFF2
 34960                           intcon2	equ	0xFF1
 34961                           intcon3	equ	0xFF0
 34962                           indf0	equ	0xFEF
 34963                           postinc0	equ	0xFEE
 34964                           fsr0h	equ	0xFEA
 34965                           fsr0l	equ	0xFE9
 34966                           wreg	equ	0xFE8
 34967                           indf1	equ	0xFE7
 34968                           postdec1	equ	0xFE5
 34969                           fsr1h	equ	0xFE2
 34970                           fsr1l	equ	0xFE1
 34971                           indf2	equ	0xFDF
 34972                           postinc2	equ	0xFDE
 34973                           postdec2	equ	0xFDD
 34974                           plusw2	equ	0xFDB
 34975                           fsr2h	equ	0xFDA
 34976                           fsr2l	equ	0xFD9
 34977                           status	equ	0xFD8
 34978                           tosu	equ	0xFFF
 34979                           tosh	equ	0xFFE
 34980                           tosl	equ	0xFFD
 34981                           pclatu	equ	0xFFB
 34982                           pclath	equ	0xFFA
 34983                           tblptru	equ	0xFF8
 34984                           tblptrh	equ	0xFF7
 34985                           tblptrl	equ	0xFF6
 34986                           tablat	equ	0xFF5
 34987                           prodh	equ	0xFF4
 34988                           prodl	equ	0xFF3
 34989                           intcon	equ	0xFF2
 34990                           intcon2	equ	0xFF1
 34991                           intcon3	equ	0xFF0
 34992                           indf0	equ	0xFEF
 34993                           postinc0	equ	0xFEE
 34994                           fsr0h	equ	0xFEA
 34995                           fsr0l	equ	0xFE9
 34996                           wreg	equ	0xFE8
 34997                           indf1	equ	0xFE7
 34998                           postdec1	equ	0xFE5
 34999                           fsr1h	equ	0xFE2
 35000                           fsr1l	equ	0xFE1
 35001                           indf2	equ	0xFDF
 35002                           postinc2	equ	0xFDE
 35003                           postdec2	equ	0xFDD
 35004                           plusw2	equ	0xFDB
 35005                           fsr2h	equ	0xFDA
 35006                           fsr2l	equ	0xFD9
 35007                           status	equ	0xFD8
 35008                           
 35009                           	psect	text141
 35010  000000                     __ptext141:
 35011                           	opt stack 0
 35012                           tosu	equ	0xFFF
 35013                           tosh	equ	0xFFE
 35014                           tosl	equ	0xFFD
 35015                           pclatu	equ	0xFFB
 35016                           pclath	equ	0xFFA
 35017                           tblptru	equ	0xFF8
 35018                           tblptrh	equ	0xFF7
 35019                           tblptrl	equ	0xFF6
 35020                           tablat	equ	0xFF5
 35021                           prodh	equ	0xFF4
 35022                           prodl	equ	0xFF3
 35023                           intcon	equ	0xFF2
 35024                           intcon2	equ	0xFF1
 35025                           intcon3	equ	0xFF0
 35026                           indf0	equ	0xFEF
 35027                           postinc0	equ	0xFEE
 35028                           fsr0h	equ	0xFEA
 35029                           fsr0l	equ	0xFE9
 35030                           wreg	equ	0xFE8
 35031                           indf1	equ	0xFE7
 35032                           postdec1	equ	0xFE5
 35033                           fsr1h	equ	0xFE2
 35034                           fsr1l	equ	0xFE1
 35035                           indf2	equ	0xFDF
 35036                           postinc2	equ	0xFDE
 35037                           postdec2	equ	0xFDD
 35038                           plusw2	equ	0xFDB
 35039                           fsr2h	equ	0xFDA
 35040                           fsr2l	equ	0xFD9
 35041                           status	equ	0xFD8
 35042                           
 35043                           	psect	rparam
 35044  0000                     tosu	equ	0xFFF
 35045                           tosh	equ	0xFFE
 35046                           tosl	equ	0xFFD
 35047                           pclatu	equ	0xFFB
 35048                           pclath	equ	0xFFA
 35049                           tblptru	equ	0xFF8
 35050                           tblptrh	equ	0xFF7
 35051                           tblptrl	equ	0xFF6
 35052                           tablat	equ	0xFF5
 35053                           prodh	equ	0xFF4
 35054                           prodl	equ	0xFF3
 35055                           intcon	equ	0xFF2
 35056                           intcon2	equ	0xFF1
 35057                           intcon3	equ	0xFF0
 35058                           indf0	equ	0xFEF
 35059                           postinc0	equ	0xFEE
 35060                           fsr0h	equ	0xFEA
 35061                           fsr0l	equ	0xFE9
 35062                           wreg	equ	0xFE8
 35063                           indf1	equ	0xFE7
 35064                           postdec1	equ	0xFE5
 35065                           fsr1h	equ	0xFE2
 35066                           fsr1l	equ	0xFE1
 35067                           indf2	equ	0xFDF
 35068                           postinc2	equ	0xFDE
 35069                           postdec2	equ	0xFDD
 35070                           plusw2	equ	0xFDB
 35071                           fsr2h	equ	0xFDA
 35072                           fsr2l	equ	0xFD9
 35073                           status	equ	0xFD8
 35074                           
 35075                           	psect	temp
 35076  00005B                     btemp:
 35077                           	opt stack 0
 35078  00005B                     	ds	1
 35079  0000                     int$flags	set	btemp
 35080                           tosu	equ	0xFFF
 35081                           tosh	equ	0xFFE
 35082                           tosl	equ	0xFFD
 35083                           pclatu	equ	0xFFB
 35084                           pclath	equ	0xFFA
 35085                           tblptru	equ	0xFF8
 35086                           tblptrh	equ	0xFF7
 35087                           tblptrl	equ	0xFF6
 35088                           tablat	equ	0xFF5
 35089                           prodh	equ	0xFF4
 35090                           prodl	equ	0xFF3
 35091                           intcon	equ	0xFF2
 35092                           intcon2	equ	0xFF1
 35093                           intcon3	equ	0xFF0
 35094                           indf0	equ	0xFEF
 35095                           postinc0	equ	0xFEE
 35096                           fsr0h	equ	0xFEA
 35097                           fsr0l	equ	0xFE9
 35098                           wreg	equ	0xFE8
 35099                           indf1	equ	0xFE7
 35100                           postdec1	equ	0xFE5
 35101                           fsr1h	equ	0xFE2
 35102                           fsr1l	equ	0xFE1
 35103                           indf2	equ	0xFDF
 35104                           postinc2	equ	0xFDE
 35105                           postdec2	equ	0xFDD
 35106                           plusw2	equ	0xFDB
 35107                           fsr2h	equ	0xFDA
 35108                           fsr2l	equ	0xFD9
 35109                           status	equ	0xFD8


Data Sizes:
    Strings     1606
    Constant    969
    Data        11
    BSS         670
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160     87     159
    BANK1           256      5     250
    BANK2           256      0     192
    BANK3           256      0     128
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ReadyByteFrame$0	PTR char  size(2) Largest target is 128
		 -> buffer_rx(BANK3[128]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_97(CODE[7]), STR_95(CODE[7]), STR_93(CODE[7]), STR_90(CODE[7]), 
		 -> STR_35(CODE[5]), STR_31(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_89(CODE[3]), STR_69(CODE[14]), STR_67(CODE[11]), STR_63(CODE[7]), 
		 -> STR_60(CODE[9]), STR_59(CODE[11]), STR_57(CODE[14]), STR_54(CODE[14]), 
		 -> STR_53(CODE[3]), STR_49(CODE[9]), STR_45(CODE[14]), STR_44(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> clearLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> clearLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK2[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK2[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S5653_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S5653_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S5653_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S5653_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S4431$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    S4421$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S4421$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4397$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4397$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4397$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4397$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    oled_putString@string	PTR const unsigned char  size(2) Largest target is 64
		 -> oled_putUint16@numData(COMRAM[6]), oled_putint8@numData(BANK0[6]), oled_putUint8@numData(BANK0[6]), STR_189(CODE[12]), 
		 -> STR_188(CODE[8]), STR_187(CODE[9]), storedLight(BANK1[5]), STR_182(CODE[5]), 
		 -> STR_181(CODE[8]), STR_180(CODE[8]), STR_179(CODE[9]), STR_162(CODE[16]), 
		 -> STR_161(CODE[17]), STR_160(CODE[17]), STR_159(CODE[4]), STR_158(CODE[4]), 
		 -> STR_157(CODE[4]), STR_156(CODE[4]), STR_155(CODE[4]), STR_154(CODE[4]), 
		 -> STR_153(CODE[4]), STR_152(CODE[16]), STR_151(CODE[17]), STR_150(CODE[4]), 
		 -> STR_149(CODE[4]), STR_148(CODE[4]), STR_147(CODE[4]), STR_146(CODE[4]), 
		 -> STR_145(CODE[4]), STR_144(CODE[4]), STR_143(CODE[4]), STR_142(CODE[4]), 
		 -> STR_141(CODE[4]), STR_140(CODE[4]), STR_139(CODE[4]), STR_138(CODE[4]), 
		 -> STR_137(CODE[16]), STR_136(CODE[12]), STR_135(CODE[17]), STR_134(CODE[16]), 
		 -> STR_133(CODE[16]), STR_132(CODE[16]), STR_131(CODE[15]), STR_130(CODE[15]), 
		 -> STR_129(CODE[16]), STR_128(CODE[4]), STR_127(CODE[3]), STR_126(CODE[3]), 
		 -> STR_125(CODE[3]), STR_124(CODE[3]), STR_123(CODE[2]), STR_122(CODE[5]), 
		 -> STR_121(CODE[7]), STR_120(CODE[17]), STR_119(CODE[17]), STR_118(CODE[2]), 
		 -> STR_117(CODE[7]), STR_116(CODE[7]), STR_115(CODE[16]), STR_114(CODE[16]), 
		 -> STR_113(CODE[15]), STR_112(CODE[15]), STR_111(CODE[17]), STR_110(CODE[16]), 
		 -> STR_109(CODE[17]), STR_108(CODE[17]), STR_107(CODE[7]), STR_106(CODE[10]), 
		 -> STR_105(CODE[17]), STR_104(CODE[16]), STR_103(CODE[16]), STR_102(CODE[16]), 
		 -> STR_101(CODE[16]), STR_100(CODE[17]), STR_99(CODE[17]), STR_98(CODE[16]), 
		 -> STR_96(CODE[19]), STR_94(CODE[17]), STR_92(CODE[17]), STR_91(CODE[17]), 
		 -> responseData(BANK1[32]), responsePortNum(BANK1[3]), STR_88(CODE[13]), STR_87(CODE[12]), 
		 -> STR_86(CODE[12]), STR_83(CODE[18]), STR_82(CODE[13]), STR_81(CODE[17]), 
		 -> STR_80(CODE[16]), STR_79(CODE[17]), STR_78(CODE[17]), STR_77(CODE[16]), 
		 -> STR_76(CODE[17]), STR_75(CODE[17]), STR_73(CODE[13]), STR_72(CODE[12]), 
		 -> STR_71(CODE[17]), STR_65(CODE[7]), STR_64(CODE[10]), STR_62(CODE[11]), 
		 -> STR_61(CODE[11]), STR_56(CODE[9]), STR_55(CODE[11]), STR_51(CODE[11]), 
		 -> STR_50(CODE[10]), STR_47(CODE[9]), STR_46(CODE[11]), STR_42(CODE[17]), 
		 -> STR_40(CODE[17]), STR_38(CODE[17]), STR_37(CODE[17]), STR_36(CODE[17]), 
		 -> STR_34(CODE[17]), STR_33(CODE[17]), STR_32(CODE[17]), moduleResonseBuffer(BANK1[64]), 
		 -> STR_29(CODE[17]), STR_28(CODE[17]), STR_27(CODE[17]), STR_26(CODE[17]), 
		 -> STR_25(CODE[9]), STR_24(CODE[10]), STR_23(CODE[5]), STR_20(CODE[9]), 
		 -> STR_19(CODE[8]), STR_18(CODE[8]), STR_17(CODE[9]), STR_16(CODE[10]), 
		 -> STR_15(CODE[11]), STR_14(CODE[13]), STR_13(CODE[13]), STR_12(CODE[13]), 
		 -> STR_11(CODE[12]), STR_10(CODE[13]), STR_9(CODE[9]), STR_8(CODE[12]), 
		 -> STR_7(CODE[16]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[9]), 
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    oled_setFont@font	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    selectedFont	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    moteApp_setLightString@lightString	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    sp__memcpy	PTR void  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    moteApp_convertSensorValue@string	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    moteApp_addToDataBuffer@string	PTR const unsigned char  size(2) Largest target is 64
		 -> storedLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    sendDataCommand@appData	PTR unsigned char  size(2) Largest target is 16
		 -> dataBuffer(BANK1[16]), 

    sendDataCommand@string	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_85(CODE[12]), STR_84(CODE[14]), STR_74(CODE[14]), 

    sendCommand@string	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_186(CODE[22]), STR_185(CODE[22]), STR_184(CODE[27]), STR_183(CODE[27]), 
		 -> STR_178(CODE[26]), STR_177(CODE[26]), STR_176(CODE[26]), STR_175(CODE[26]), 
		 -> STR_174(CODE[3]), STR_173(CODE[9]), STR_172(CODE[15]), STR_171(CODE[13]), 
		 -> STR_170(CODE[13]), STR_169(CODE[13]), STR_168(CODE[13]), STR_167(CODE[13]), 
		 -> STR_166(CODE[13]), STR_165(CODE[13]), STR_164(CODE[13]), STR_163(CODE[16]), 
		 -> STR_70(CODE[11]), STR_68(CODE[11]), STR_66(CODE[14]), STR_58(CODE[14]), 
		 -> STR_52(CODE[10]), STR_48(CODE[13]), STR_43(CODE[14]), STR_41(CODE[13]), 
		 -> STR_39(CODE[10]), STR_30(CODE[10]), STR_22(CODE[20]), STR_21(CODE[2]), 

    sp__moteApp_getLightString	PTR unsigned char  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    sp__moteApp_getTempValue	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    sp__moteApp_getLightValue	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBapp_CdcEmulatorInitialize
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USART_mySetLineCodingHandler
    _USBCtrlTrfInHandler->_USART_mySetLineCodingHandler
    _USART_mySetLineCodingHandler->___lldiv

Critical Paths under _main in BANK0

    _main->_moteHandler
    _test_powerup->_moteApp_testSensors
    _test_switch->_oled_putString
    _test_oled->_oled_putString
    _test_leds->_oled_putString
    _test_comms->_oled_putString
    _moteApp_toggleLeds->_sendCommand
    _moteApp_testSensors->_ADC_TempConversion
    _moteHandler->_moteRunningProcess
    _moteRunningProcess->_ADC_TempConversion
    _sendDataCommand->_EUSART_Write
    _sendDataCommand->_hexToStr
    _oled_putint8->_oled_putString
    _oled_putUint8->_oled_putString
    _moteApp_setSensorsInput->_moteApp_delayms
    _moteApp_getTempValue->_MOTEapp_getModuleResponse
    _moteApp_getTempValue->_sendCommand
    _moteApp_getLightValue->_moteApp_setLightString
    _moteApp_setLightString->_memcpy
    _moteApp_convertSensorValue->_moteApp_getLightValue
    _moteApp_addToDataBuffer->_moteApp_getLightValue
    _moteApp_add8bToDataBuffer->___awmod
    _oled_setDisplay->_oled_writeCommand
    _oled_devInit->_oled_initialDispayLine
    _oled_devInit->_oled_powerControl
    _oled_devInit->_oled_regulorResistorSelect
    _oled_devInit->_oled_setContrastControlRegister
    _oled_setContrastControlRegister->_oled_writeCommand
    _oled_regulorResistorSelect->_oled_writeCommand
    _oled_powerControl->_oled_writeCommand
    _oled_initialDispayLine->_oled_writeCommand
    _oled_displayOff->_oled_writeCommand
    _moduleSleep->_sendCommand
    _moduleResync->_moteApp_delayms
    _MOTEapp_getModuleResponse->_EUSART_Read
    _MOTEapp_SetDataRateSetting->_sendCommand
    _ADC_TempConversion->___fldiv
    ___flmul->___fladd
    ___fldiv->___flmul
    _moteJoiningProcess->_oled_putString
    _TMRapp_Handler->___almod
    _moteApp_clearCommand->_sendCommand
    _sendCommand->_EUSART_Write
    _EndLine->_EUSART_Write
    _USBapp_Handler->_oled_putString
    _oled_putString->_moteApp_getLightValue
    _oled_clear->_oled_clearRow
    _oled_clearRow->_oled_putChar
    _oled_putChar->_Set_Column_Address
    _oled_putChar->_Set_Page_Address
    _Set_Page_Address->_oled_writeCommand
    _Set_Column_Address->_oled_writeCommand
    _USBapp_DeviceCdcEmulatorHandler->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_moteHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  861007
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
               _MOTEapp_handlerState
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _USBapp_Handler
                _USBapp_handlerState
                       _moduleResync
               _moteApp_clearCommand
                    _moteApp_delayms
                        _moteHandler
                         _oled_clear
                          _oled_init
                     _oled_putString
                       _test_powerup
 ---------------------------------------------------------------------------------
 (1) _test_powerup                                         0     0      0  335040
                 _EUSART_FlushBuffer
                    _moteApp_delayms
                _moteApp_testSensors
                         _oled_clear
                         _test_comms
                          _test_leds
                          _test_oled
                        _test_switch
 ---------------------------------------------------------------------------------
 (2) _test_switch                                          4     4      0   48844
                                             22 BANK0      4     4      0
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_oled                                            0     0      0   48708
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_leds                                            0     0      0   48234
                            _delayms
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_comms                                           0     0      0   51782
                            _delayms
                 _moteApp_toggleLeds
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_toggleLeds                                   2     2      0    3548
                                              3 BANK0      2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _delayms                                              5     3      2     900
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _moteApp_testSensors                                  3     3      0  133747
                                             76 BANK0      1     1      0
                 _ADC_TempConversion
         _moteApp_convertSensorValue
              _moteApp_getLightValue
               _moteApp_getTempValue
            _moteApp_setSensorsInput
                         _oled_clear
                       _oled_putChar
                     _oled_putString
                       _oled_putint8
 ---------------------------------------------------------------------------------
 (1) _moteHandler                                          6     6      0  408210
                                             86 BANK0      1     1      0
                                              0 BANK1      5     5      0
                 _ADC_TempConversion
             _MOTEapp_TimerBasedTask
          _MOTEapp_getModuleResponse
               _TMRapp_ClearBitFlags
                     _TMRapp_Handler
                     _USBapp_exitCDC
                _USBapp_exitCDCState
         _moteApp_convertSensorValue
              _moteApp_getLightValue
               _moteApp_getTempValue
                 _moteJoiningProcess
                 _moteRunningProcess
                         _oled_clear
                     _oled_putString
                       _oled_putint8
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _moteRunningProcess                                  10     7      3  216674
                                             76 BANK0     10     7      3
                 _ADC_TempConversion
         _MOTEapp_SetDataRateSetting
                     _TMR2_ReadTimer
                  _moteApp_GoToSleep
          _moteApp_add8bToDataBuffer
            _moteApp_addToDataBuffer
               _moteApp_clearBuffers
         _moteApp_convertSensorValue
                    _moteApp_delayms
             _moteApp_getLightString
              _moteApp_getLightValue
               _moteApp_getTempValue
            _moteApp_lightStringSize
            _moteApp_setSensorsInput
                         _oled_clear
                     _oled_putString
                      _oled_putUint8
                       _oled_putint8
                    _sendDataCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _sendDataCommand                                      8     3      5    1667
                                              1 BANK0      8     3      5
                       _EUSART_Write
                            _EndLine
                           _hexToStr
 ---------------------------------------------------------------------------------
 (4) _hexToStr                                             1     1      0     189
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putint8                                        10     8      2   51815
                                             22 BANK0     10     8      2
                            ___awmod
                            ___lbdiv
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _oled_putUint8                                        9     7      2   51710
                                             22 BANK0      9     7      2
                            ___awmod
                            ___lbdiv
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_setSensorsInput                              2     2      0    6041
                                              5 BANK0      2     2      0
          _MOTEapp_getModuleResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _moteApp_lightStringSize                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _moteApp_getTempValue                                 4     2      2    3755
                                              3 BANK0      4     2      2
          _MOTEapp_getModuleResponse
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _moteApp_getLightValue                                4     2      2    4818
                                             13 BANK0      4     2      2
          _MOTEapp_getModuleResponse
             _moteApp_setLightString
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _moteApp_setLightString                               3     1      2    1063
                                             10 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              10     4      6     798
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (3) _moteApp_getLightString                               2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _moteApp_convertSensorValue                           8     6      2    7958
                                             17 BANK0      8     6      2
                             ___wmul
              _moteApp_getLightValue (ARG)
               _moteApp_getTempValue (ARG)
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    7068
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_clearBuffers                                 4     4      0     396
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _moteApp_addToDataBuffer                              4     1      3     645
                                             17 BANK0      4     1      3
             _moteApp_getLightString (ARG)
              _moteApp_getLightValue (ARG)
 ---------------------------------------------------------------------------------
 (3) _moteApp_add8bToDataBuffer                            4     3      1    3840
                                              6 BANK0      4     3      1
                            ___awmod
                            ___lbdiv
            _moteApp_lightStringSize (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     865
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    2305
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_GoToSleep                                    1     1      0   13879
                                             14 BANK0      1     1      0
                 _EUSART_FlushBuffer
             _PIN_MANAGER_Initialize
                       _moduleResync
                        _moduleSleep
                    _moteApp_delayms
                    _oled_displayOff
                          _oled_init
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            0     0      0    1884
                         _oled_clear
                       _oled_devInit
                    _oled_setDisplay
                       _oled_setFont
 ---------------------------------------------------------------------------------
 (2) _oled_setFont                                         2     0      2     166
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _oled_setDisplay                                      1     1      0      62
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (2) _oled_devInit                                         1     1      0     282
                                              2 BANK0      1     1      0
             _oled_initialDispayLine
                  _oled_powerControl
         _oled_regulorResistorSelect
    _oled_setContrastControlRegister
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_setContrastControlRegister                      1     1      0      62
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_regulorResistorSelect                           1     1      0      62
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_powerControl                                    1     1      0      62
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_initialDispayLine                               1     1      0      65
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_displayOff                                      1     1      0      31
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _moduleSleep                                          1     1      0    3517
                                              3 BANK0      1     1      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _moduleResync                                         3     3      0    6047
                                              5 BANK0      3     3      0
          _MOTEapp_getModuleResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _MOTEapp_getModuleResponse                            2     2      0     204
                                              1 BANK0      2     2      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART_FlushBuffer                                   1     1      0      99
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_ReadTimer                                       1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_SetDataRateSetting                           2     2      0    3579
                                              3 BANK0      2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _ADC_TempConversion                                   6     6      0    9408
                                             70 BANK0      6     6      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     580
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     441
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    2777
                                             20 BANK0     25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    1991
                                             45 BANK0     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3486
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (2) _moteJoiningProcess                                   6     4      2   60063
                                             22 BANK0      6     4      2
                   _DATAEE_WriteByte
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                        _sendCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6    2064
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    2629
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _moteApp_delayms                                      5     3      2    2252
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     3     2      1     304
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDCState                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMRapp_Handler                                       0     0      0    4201
                            ___almod
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    3560
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     641
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (2) _TMRapp_ClearBitFlags                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MOTEapp_TimerBasedTask                               1     1      0     217
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _moteApp_clearCommand                                 0     0      0    3517
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _sendCommand                                          2     0      2    3517
                                              1 BANK0      2     0      2
                       _EUSART_Write
                            _EndLine
 ---------------------------------------------------------------------------------
 (5) _EndLine                                              0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (1) _USBapp_handlerState                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_Handler                                       1     1      0   53591
                                             22 BANK0      1     1      0
    _USBapp_DeviceCdcEmulatorHandler
                         _oled_clear
                     _oled_putString
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _service_pushbutton                                   1     1      0      46
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putString                                       5     1      4   47334
                                             17 BANK0      5     1      4
             _moteApp_getLightString (ARG)
              _moteApp_getLightValue (ARG)
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (3) _oled_clear                                           0     0      0    1374
                      _oled_clearRow
 ---------------------------------------------------------------------------------
 (4) _oled_clearRow                                        2     2      0    1374
                                             12 BANK0      2     2      0
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (4) _oled_putChar                                        10     8      2    1244
                                              2 BANK0     10     8      2
                 _Set_Column_Address
                   _Set_Page_Address
                     _oled_writeData
 ---------------------------------------------------------------------------------
 (5) _oled_writeData                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _Set_Page_Address                                     1     1      0      96
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (5) _Set_Column_Address                                   1     1      0      93
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (6) _oled_writeCommand                                    1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_DeviceCdcEmulatorHandler                      1     1      0    4800
                                             13 BANK0      1     1      0
                       _CDCTxService
                        _EUSART_Read
                       _EUSART_Write
           _MOTEapp_setResponseReady
               _USBapp_getrxByteFlag
                       _getsUSBUSART
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     270
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2267
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBapp_getrxByteFlag                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_setResponseReady                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Read                                          1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2164
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1926
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CMP1_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0       0
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              0 BANK0      2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOTEapp_handlerState                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                         14    14      0   30063
                                             31 COMRAM    14    14      0
                           _CMP1_ISR
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR1_ISR
                           _TMR3_ISR
                        _TMRapp_Tick
                     _USBDeviceTasks
               _USBapp_setrxByteFlag
 ---------------------------------------------------------------------------------
 (11) _USBapp_setrxByteFlag                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USBDeviceTasks                                      1     1      0   30063
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (12) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (12) _USBWakeFromSuspend                                  0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBSuspend                                          0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPService                                    3     3      0   17698
                                             27 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfSetupHandler                              0     0      0   16631
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (14) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (14) _USBCheckStdRequest                                  0     0      0   12636
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStdSetCfgHandler                                 1     1      0    4401
                                             21 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (15) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (15) _USBStdFeatureReqHandler                             6     6      0    4286
                                             21 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3903
                                             13 COMRAM     8     2      6
                 _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
 ---------------------------------------------------------------------------------
 (13) _USBapp_CdcEmulatorInitialize                        1     1      0    1211
                                             12 COMRAM     1     1      0
                          _CDCInitEP
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (13) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfOutHandler                                0     0      0     499
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfRxService                                 2     2      0     499
                                             17 COMRAM     2     2      0
       _USART_mySetLineCodingHandler *
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfInHandler                                 1     1      0     500
                                             17 COMRAM     1     1      0
       _USART_mySetLineCodingHandler *
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USART_mySetLineCodingHandler                        4     4      0     385
                                             13 COMRAM     4     4      0
                            ___lldiv
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (14) i2_EUSART_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) ___lldiv                                            13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (11) _TMRapp_Tick                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR3_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CMP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _MOTEapp_handlerState
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
     _TMR3_Initialize
       _TMR3_StartTimer
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _USBapp_Handler
     _USBapp_DeviceCdcEmulatorHandler
       _CDCTxService
         _USBTransferOnePacket
       _EUSART_Read
       _EUSART_Write
       _MOTEapp_setResponseReady
       _USBapp_getrxByteFlag
       _getsUSBUSART
         _USBTransferOnePacket
       _putUSBUSART
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_putString
       _moteApp_getLightString (ARG)
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putChar (ARG)
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
     _service_pushbutton
   _USBapp_handlerState
   _moduleResync
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _moteApp_delayms
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_clearCommand
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_delayms
   _moteHandler
     _ADC_TempConversion
       ___fladd
       ___fldiv
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
     _MOTEapp_TimerBasedTask
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _TMRapp_ClearBitFlags
     _TMRapp_Handler
       ___almod
       ___lwmod
     _USBapp_exitCDC
     _USBapp_exitCDCState
     _moteApp_convertSensorValue
       ___wmul
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
     _moteApp_getLightValue
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _moteApp_setLightString
         _memcpy
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _moteApp_getTempValue
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _moteJoiningProcess
       _DATAEE_WriteByte
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
       _strcmp
       _strncmp
     _moteRunningProcess
       _ADC_TempConversion
         ___fladd
         ___fldiv
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _MOTEapp_SetDataRateSetting
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _TMR2_ReadTimer
       _moteApp_GoToSleep
         _EUSART_FlushBuffer
         _PIN_MANAGER_Initialize
         _moduleResync
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moduleSleep
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_delayms
         _oled_displayOff
           _oled_writeCommand
         _oled_init
           _oled_clear
             _oled_clearRow
               _oled_putChar
                 _Set_Column_Address
                   _oled_writeCommand
                 _Set_Page_Address
                   _oled_writeCommand
                 _oled_writeData
           _oled_devInit
             _oled_initialDispayLine
               _oled_writeCommand
             _oled_powerControl
               _oled_writeCommand
             _oled_regulorResistorSelect
               _oled_writeCommand
             _oled_setContrastControlRegister
               _oled_writeCommand
             _oled_writeCommand
           _oled_setDisplay
             _oled_writeCommand
           _oled_setFont
       _moteApp_add8bToDataBuffer
         ___awmod
         ___lbdiv
         _moteApp_lightStringSize (ARG)
       _moteApp_addToDataBuffer
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_clearBuffers
       _moteApp_convertSensorValue
         ___wmul
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_getTempValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_delayms
       _moteApp_getLightString
       _moteApp_getLightValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_lightStringSize
       _moteApp_setSensorsInput
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _oled_putUint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _sendDataCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
         _hexToStr
       _strcmp
       _strncmp
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_putString
       _moteApp_getLightString (ARG)
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putChar (ARG)
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
     _oled_putint8
       ___awmod
       ___lbdiv
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _service_pushbutton
   _oled_clear
     _oled_clearRow
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
   _oled_init
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_devInit
       _oled_initialDispayLine
         _oled_writeCommand
       _oled_powerControl
         _oled_writeCommand
       _oled_regulorResistorSelect
         _oled_writeCommand
       _oled_setContrastControlRegister
         _oled_writeCommand
       _oled_writeCommand
     _oled_setDisplay
       _oled_writeCommand
     _oled_setFont
   _oled_putString
     _moteApp_getLightString (ARG)
     _moteApp_getLightValue (ARG)
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _moteApp_setLightString
         _memcpy
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _oled_putChar (ARG)
       _Set_Column_Address
         _oled_writeCommand
       _Set_Page_Address
         _oled_writeCommand
       _oled_writeData
   _test_powerup
     _EUSART_FlushBuffer
     _moteApp_delayms
     _moteApp_testSensors
       _ADC_TempConversion
         ___fladd
         ___fldiv
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _moteApp_convertSensorValue
         ___wmul
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_getTempValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_getLightValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_setSensorsInput
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _oled_putint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_comms
       _delayms
       _moteApp_toggleLeds
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_leds
       _delayms
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_oled
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_switch
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData

 _INTERRUPT_InterruptManager (ROOT)
   _CMP1_ISR
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR1_ISR
   _TMR3_ISR
   _TMRapp_Tick
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USART_mySetLineCodingHandler *
           ___lldiv
           i2_EUSART_Initialize
         _USBCtrlTrfTxService *
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USART_mySetLineCodingHandler *
             ___lldiv
             i2_EUSART_Initialize
           _USBCtrlEPAllowStatusStage *
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             _USBapp_CdcEmulatorInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               i2_EUSART_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           _USBapp_CdcEmulatorInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             i2_EUSART_Initialize
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         i2_EUSART_Initialize
     i2_USBDeviceInit
       i2_memset
   _USBapp_setrxByteFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      80      11       50.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C0       9       75.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      5      FA       7       97.7%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     57      9F       5       99.4%
BITBANK5            80      0       0      15        0.0%
BANK5               80      0       0      16        0.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     2D      5A       1       95.7%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     333      14        0.0%
DATA                 0      0     333       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Mar 28 09:22:52 2018

           __size_of_moteApp_lightStringSize 0008                                   _USB_SD_Ptr 75EF  
                               ___fldiv@aexp 00A5                                 ___fldiv@bexp 00A4  
                               ___fldiv@sign 0099                        ??_moteApp_testSensors 00AC  
                          ??_CMP1_Initialize 0060                                           l59 3EEC  
                                 _USB_Buffer 0280                    _MOTEapp_getModuleResponse 6082  
                                         _cs 015A               moteJoiningProcess@selectButton 0077  
                              _USBDeviceInit 371E                          ___wmul@multiplicand 0062  
                    EUSART_FlushBuffer@index 0060                       __end_of_oled_writeData 71B0  
                       ??_moteApp_toggleLeds 0063                           __size_of_CDCInitEP 006E  
                   USBapp_handlerState@state 0060                                 __CFG_CP0$OFF 000000  
                               __CFG_CP1$OFF 000000                                 __CFG_CP2$OFF 000000  
                               __CFG_CP3$OFF 000000               __end_of_moteApp_setLightString 6082  
       USER_USB_CALLBACK_EVENT_HANDLER@event 000E         USER_USB_CALLBACK_EVENT_HANDLER@pdata 0010  
                                        l109 6D84                                          l126 455A  
                __end_of_USBStdGetDscHandler 4068                                          l334 5B9A  
                                        l343 5C0E                                          l440 1AC2  
                                        l352 701A                                          l337 5BFE  
                                        l610 6BCE                                          l346 6D44  
                                        l349 6D5E                                          l445 1B60  
                                        l517 0BCC                                          l390 13FA  
                                        l703 6328                                          l376 2EDC  
                                        l625 6110                                          l562 111A  
                                        l466 0346                                          l707 5936  
                                        l467 0346                                          l396 142A  
                                        l732 698A                                          l581 1324  
                                        l494 0802                                          l671 49EC  
                                        l663 48FA                                          l657 6A90  
                                        l906 72F0                                          l842 4EC6  
                                        l666 4952                                          l690 4BE2  
                                        l754 72CA                                          l739 66CA  
                                        _BDT 000400                                          l669 498A  
                                        l757 7274                                          l749 607E  
                                        l854 4F9C                                          l943 5E06  
                                        l839 4EC4                                          _CKE 007E3E  
                                        l856 4FB4                                          l873 42B4  
                                        l849 4F86                                          l874 41E4  
                                        l859 72DA                                          l876 4220  
                                        l965 3A08                                          _CKP 007E34  
                                        _GIE 007F97                                 __CFG_CPB$OFF 000000  
                    ?_oled_initialDispayLine 0001                                          _PR2 000FBB  
                               __CFG_CPD$OFF 000000                           _moteJoiningProcess 13EE  
                                        _UIE 000F64                                          _UIR 000F65  
                            _timer1ReloadVal 0046                                          _log 02D0  
                                 _USBSuspend 7038                                 ___awmod@sign 0065  
               __end_of_moteApp_clearBuffers 4BE4                 __end_of_moteApp_clearCommand 7254  
                       USBStdSetCfgHandler@i 0016                              _TMR2_Initialize 720A  
                                        prod 000FF3                                          tosl 000FFD  
                                        wreg 000FE8                               _USBDeviceTasks 3200  
                             _USBDeviceState 00DE                                 ___flmul@aexp 0081  
                               ___flmul@bexp 0086                                 ___flmul@sign 0080  
                               ___flmul@temp 008B                                 ___flmul@prod 0087  
                      moteApp_delayms@length 0060                 MOTEapp_SetDataRateSetting@dr 0064  
                      ??_USBCtrlTrfRxService 0012                     __size_ofi2_USBDeviceInit 015E  
                             ??_getsUSBUSART 006A                                 ?_EUSART_Read 0001  
                   USBEnableEndpoint@options 0009                                 __CFG_LVP$OFF 000000  
                        ?_moteJoiningProcess 0076                                 ___fltol@exp1 0069  
                                       l1021 7148                                         l1014 717C  
                                       l1017 710E                                         l1130 6AE4  
                                       l1052 6E54                                         l1044 6198  
                                       l1028 55EA                                         l1037 59FA  
                                       l1127 6A9A                                         l1063 7006  
                                       l1136 6A06                                         l1072 71AE  
                                       l1081 7240                                         l1075 71F4  
                                       l1236 711E                                         l1084 722E  
                                       l1069 71C6                                         l1078 7208  
                                       l2055 46F4                                         l2081 3598  
                                       l2082 343C                              _timer3ReloadVal 00C1  
                                       l1460 71DE                                         l1276 4EC2  
                                       l1525 728E                                         l1454 6C42  
                                       l2087 34A0                                         l2255 43D2  
                                       l2407 3DF8                                         l2512 6510  
                                       l1722 379C                                         l2179 6EC8  
                 USBConfigureEndpoint@handle 0007                                         l2613 6E90  
                                       l2630 1D44                                         l2367 57B4  
                                       l2607 6B36                                         l2721 247A  
                                       l2714 21CE                                         l2731 25C2  
                                       l2723 2508                                         l1764 47F4  
                                       l2628 1D96                                         l2724 24F4  
                                       l2741 6808                                         l2645 1F30  
                                       l2637 20F6                                         l2629 1D84  
                                       l2654 2006                                         l2718 2610  
                                       l1783 6C86                                         l2655 1FF2  
                                       l1784 6C84                                         l2760 3106  
                                       l2753 304A                                         l1786 6C9A  
                                       l2682 2A64                                         l2684 2884  
                                       l2756 31FE                                         l2589 641A  
                                       l2749 5AB2                                         l2693 28CC  
                                       l2695 295A                                         l2687 2824  
                                       l2767 3174                                         l2696 2946  
                                       l2768 3190                                         STR_1 7D1E  
                                       STR_2 7D00                                         STR_3 7D0F  
                                       STR_4 7F3D                                         STR_5 7D8A  
                                       STR_6 7D97                                         STR_7 7CC3  
                                       STR_8 7E70                                         STR_9 7F46  
                            _lightStringSize 00DF                                         _LATD 000F8C  
            __size_of_MOTEapp_TimerBasedTask 0048                                         _PEIE 007F96  
                      ??_USBCtrlTrfTxService 0001                                         _UCFG 000F62  
                                       _UEP0 000F6A                                         _UEP1 000F6B  
                                       _UEIE 000F66                                         _UEIR 000F67  
                                       _UCON 000F60                                         _TMR2 000FBC  
                                       _TMR3 000FB2                              _CDCDataInHandle 00BD  
     USBStdFeatureReqHandler@current_ep_data 0019                                         _pDst 0154  
                                       _main 3DFA                     ??i2_USBTransferOnePacket 0005  
          __end_of_moteApp_add8bToDataBuffer 56E8                                         fsr0h 000FEA  
                                       fsr1h 000FE2                                         indf0 000FEF  
                                       fsr2h 000FDA                                         fsr0l 000FE9  
                                       indf1 000FE7                                  _BaudRateGen 0146  
                                       indf2 000FDF                                         fsr1l 000FE1  
                                       fsr2l 000FD9                              _USBDeviceAttach 6C5A  
                                       btemp 005B                                __CFG_BORV$190 000000  
               moteApp_addToDataBuffer@index 0074                                         prodh 000FF4  
                                       prodl 000FF3                         _USBapp_setrxByteFlag 72F2  
                                       start 0126                                __CFG_IESO$OFF 000000  
                            ___fldiv@new_exp 009E                              __end_of_EndLine 7284  
                            _TMR3_Initialize 70D0                                  _storedLight 01EB  
                __end_of_USBapp_exitCDCState 72A6                             __end_of_CMP1_ISR 730E  
                            ?_oled_putString 0071                   __end_of_USBCheckStdRequest 50A8  
                     ??_USBCtrlTrfOutHandler 0014                  __size_of_moteRunningProcess 12C4  
                           ?_oled_setDisplay 0001                                __CFG_MCLRE$ON 000000  
                               ___param_bank 000000                    ??_USBStdFeatureReqHandler 0016  
                                _TMRapp_Tick 72F8                         ??_moteJoiningProcess 0078  
                     moteApp_delayms@counter 0063                ?_USART_mySetLineCodingHandler 0001  
                     sendDataCommand@appData 0063                            sendCommand@string 0061  
                   ??_USBStdGetStatusHandler 0001                 __end_of_USBapp_getrxByteFlag 72F2  
                  __size_of_DATAEE_WriteByte 0042                               ?_USBDeviceInit 0001  
                     _moteApp_getLightString 7266                                ?_EUSART_Write 0001  
             __size_of_OSCILLATOR_Initialize 001E               __end_of_oled_initialDispayLine 720A  
                            ?_oled_writeData 0001                __end_of_OSCILLATOR_Initialize 712E  
                                      l12011 60CE                                        l12015 60EE  
                                      l12103 5BC4                                        l12031 6B1A  
                                      l12025 6AF8                                        l12123 6186  
                                      l13011 59FE                                        l12019 610A  
                                      l12107 5BDA                                        l12211 604C  
                                      l12117 6126                                        l13021 5A8A  
                                      l12133 6886                                        l13101 5D20  
                                      l12231 4760                                        l12223 4724  
                                      l13031 67B2                                        l13023 5AA6  
                                      l13015 5A38                                        l12303 1C7E  
                                      l12215 606E                                        l12225 4740  
                                      l13201 361A                                        l12145 7024  
                                      l13105 5D40                                        l14001 04AE  
                                      l12243 47D2                                        l13035 67F8  
                                      l13019 5A7C                                        l12403 1F8A  
                                      l13211 3674                                        l13203 362C  
                                      l12139 68AE                                        l12075 6FF8  
                                      l13051 4B28                                        l13107 5D50  
                                      l12155 6A64                                        l14003 04BA  
                                      l12245 47EA                                        l13029 67A4  
                                      l12413 1FBA                                        l12333 1CBC  
                                      l12261 1B86                                        l13213 3686  
                                      l13205 363E                                        l13301 49BE  
                                      l13133 6322                                        l13045 4B00  
                                      l12165 6A88                                        l14101 0798  
                                      l14005 04C6                                        l12407 1F9C  
                                      l12415 1FC8                                        l12351 1D74  
                                      l12271 1BC0                                        l13207 3650  
                                      l13127 62F8                                        l13119 62BC  
                                      l13063 4B66                                        l14103 079E  
                                      l13321 462C                                        l12441 20B4  
                                      l12433 206E                                        l12409 1FA4  
                                      l12361 1DC4                                        l12345 1D5C  
                                      l12273 1BD4                                        l12513 2772  
                                      l12505 273E                                        l13209 3662  
                                      l13217 369A                                        l13225 4904  
                                      l13129 6310                                        l13081 4BBA  
                                      l13057 4B3E                                        l13161 4810  
                                      l14113 07F2                                        l14121 0840  
                                      l14041 059C                                        l13331 4682  
                                      l13323 4638                                        l12371 1E12  
                                      l12347 1D64                                        l12291 1C3C  
                                      l12267 1BB4                                        l12531 2832  
                                      l12523 27F0                                        l13219 36D6  
                                      l12099 5BA4                                        l13075 4BA4  
                                      l13091 5CD4                                        l13163 4828  
                                      l14211 0BF0                                        l14131 08E2  
                                      l14115 07FA                                        l14107 07AC  
                                      l11901 5970                                        l12453 20E4  
                                      l12445 20C4                                        l12437 208A  
                                      l12285 1C0E                                        l12701 2564  
                                      l12605 214A                                        l13069 4B7C  
                                      l13157 47F8                                        l14301 0F78  
                                      l14141 095E                                        l14053 0610  
                                      l14045 05CA                                        l13407 34FA  
                                      l13335 46B4                                        l12447 20CA  
                                      l12375 1E22                                        l12295 1C48  
                                      l12279 1BF4                                        l12551 28EE  
                                      l12543 28B2                                        l12463 2636  
                                      l12623 21B6                                        l12607 2150  
                                      l13095 5CF4                                        l13183 48DA  
                                      l13175 486C                                        l14303 0F96  
                                      l14207 0BB0                                        l14151 09BE  
                                      l14127 0892                                        l14135 0932  
                                      l14071 06B6                                        l13425 3566  
                                      l13409 350E                                        l13417 3534  
                                      l11921 6A36                                        l13337 46C6  
                                      l13329 467A                                        l12369 1E0A  
                                      l12297 1C5C                                        l12537 2880  
                                      l12473 2670                                        l12705 2590  
                                      l12633 2202                                        l12625 21BC  
                                      l12617 2188                                        l12609 2164  
                                      l13097 5D04                                        l13185 48EC  
                                      l13169 483E                                        l14321 105C  
                                      l14305 0FB4                                        l14313 100E  
                                      l14241 0D1A                                        l14137 0946  
                                      l14049 05F8                                        l13521 4586  
                                      l13513 451E                                        l13427 356E  
                                      l13419 3546                                        l11923 6A3A  
                                      l13339 46EE                                        l12379 1E36  
                                      l12539 2892                                        l12483 26A8  
                                      l12475 2684                                        l12715 25E8  
                                      l12731 570A                                        l13179 4888  
                                      l14331 10AE                                        l14323 1066  
                                      l14307 0FD2                                        l14315 1040  
                                      l14243 0D38                                        l14227 0C7A  
                                      l14163 0A28                                        l13531 45C0  
                                      l13515 453C                                        l13429 3596  
                                      l13373 342C                                        l11909 69EE  
                                      l13461 4388                                        l13453 431E  
                                      l13445 42E0                                        l13701 1416  
                                      l12397 1F6E                                        l12389 1F10  
                                      l12573 29EA                                        l12549 28E2  
                                      l12493 26E2                                        l12469 2664  
                                      l12717 25F6                                        l12629 21EC  
                                      l13197 35F6                                        l12741 5746  
                                      l12821 64FA                                        l12813 64C8  
                                      l14309 0FF0                                        l14245 0D56  
                                      l14253 0DB0                                        l14413 138E  
                                      l13533 45D2                                        l13391 34A6  
                                      l13367 340C                                        l11927 6A9E  
                                      l13359 7086                                        l13455 4330  
                                      l12583 2A3A                                        l12495 26F6  
                                      l13199 3608                                        l13295 49AC  
                                      l12743 5754                                        l12751 5790  
                                      l12735 5720                                        l12815 64D6  
                                      l14335 10D2                                        l14327 108A  
                                      l14319 1056                                        l14271 0E58  
                                      l14247 0D74                                        l14255 0DDA  
                                      l14239 0CFC                                        l14183 0AE8  
                                      l14079 06F2                                        l12911 4C80  
                                      l13527 45B2                                        l13385 3482  
                                      l13369 3418                                        l11937 6ADA  
                                      l11953 6E34                                        l13457 433E  
                                      l13465 439E                                        l13449 42FE  
                                      l13481 63E0                                        l13801 17EC  
                                      l12585 2A40                                        l12577 2A26  
                                      l12569 29B6                                        l12489 26D6  
                                      l12681 2490                                        l12841 308A  
                                      l12809 64BC                                        l12825 650A  
                                      l14361 11BE                                        l14249 0D92  
                                      l14523 6E74                                        l13379 344A  
                                      l14451 427E                                        l14419 41AE  
                                      l13651 6BA2                                        l13811 185C  
                                      l12683 249C                                        l12675 2460  
                                      l12843 3092                                        l12835 305C  
                                      l12755 57AA                                        l12747 577E  
                                      l12739 5738                                        l14371 11EC  
                                      l14339 10F6                                        l14347 113C  
                                      l14275 0E70                                        l14267 0E34  
                                      l14259 0DFE                                        l14187 0B00  
                                      l14461 42B0                                        l13469 43C0  
                                      l13485 640A                                        l13477 63C4  
                                      l11981 6D2C                                        l13821 18DE  
                                      l13733 1570                                        l12781 3D66  
                                      l12765 3CEC                                        l12853 314A  
                                      l12845 30A4                                        l14381 1256  
                                      l14365 11D4                                        l14373 11F2  
                                      l14349 1168                                        l14285 0ED0  
                                      l14197 0B60                                        l14519 6E60  
                                      l13399 34D4                                        l13671 5D78  
                                      l13655 6BB2                                        l13479 63D2  
                                      l13719 14D4                                        l12599 211C  
                                      l12791 3DA0                                        l12855 315C  
                                      l12847 30E8                                        l12943 669C  
                                      l14383 1274                                        l14375 11FC  
                                      l14391 12CE                                        l14473 7128  
                                      l13681 5DC0                                        l11993 6EE4  
                                      l13833 195C                                        l13817 18A0  
                                      l12793 3DB2                                        l12785 3D7C  
                                      l12945 66AC                                        l12961 697C  
                                      l14393 1300                                        l14385 1292  
                                      l14377 121A                                        l14369 11E8  
                                      l14297 0F3C                                        l14713 2DA4  
                                      l14619 6C90                                        l13691 5E00  
                                      l13683 5DCA                                        l11995 6EFC  
                                      l13739 159C                                        l12795 3DC4  
                                      l12867 31EC                                        l12971 58A4  
                                      l12939 667C                                        l12955 694C  
                                      l14387 12B0                                        l14379 1238  
                                      l14299 0F5A                                        l13931 02C4  
                                      l14723 2DC4                                        l14715 2DAC  
                                      l14557 3772                                        l11989 6ECC  
                                      l13861 1A82                                        l13853 1A30  
                                      l13845 19DC                                        l13765 1682  
                                      l13749 15EC                                        l12981 5926  
                                      l14733 2DFA                                        l12893 6D6C  
                                      l14591 386C                                        l13687 5DF2  
                                      l13679 5DB6                                        l13871 1AB4  
                                      l13791 178E                                        l13775 16F2  
                                      l13759 1640                                        l12799 3DE6  
                                      l12959 696C                                        l12991 5548  
                                      l14399 131C                                        l13927 02AC  
                                      l14585 37FA                                        l14569 37A8  
                                      l14577 37BC                                        l13689 5DF8  
                                      l14681 4F3A                                        l13849 1A18  
                                      l13697 13FE                                        l13881 1B5A  
                                      l12977 58E4                                        l13953 033C  
                                      l13929 02B8                                        l13945 0320  
                                      l14761 2EC6                                        l14737 2E08  
                                      l14729 2DE2                                        l14579 37C6  
                                      l14683 4F42                                        l14667 4ECA  
                                      l13875 1AD6                                        l13867 1A9C  
                                      l13795 17AA                                        l13779 1710  
                                      l13955 034A                                        l14739 2E10  
                                      l14851 3EF0                                        l14677 4F2A  
                                      l13981 042C                                        l14765 2EE0  
                                      l14757 2EB2                                        l14837 3E78  
                                      l14695 4F6E                                        l13879 1B12  
                                      l13959 0362                                        l14791 2FBE  
                                      l13969 03C2                                        l14777 2F42  
                                      l14857 3F02                                        l14865 3F1A  
                                      l14795 2FD4                                        l14797 2FF0  
                              ___fltol@sign1 0068                              __end_of___almod 43D4  
                            __end_of___fladd 20F8                                        ?_main 0001  
                            __end_of___fldiv 2A66                              __end_of___lbdiv 6512  
                                      _EEADR 000FA9                                        STR_10 7DF4  
                                      STR_11 7E7C                                        STR_20 7F4F  
                                      STR_12 7E1B                                        STR_21 7FFC  
                                      STR_13 7E01                                        STR_30 7EFC  
                                      STR_14 7E0E                                        STR_22 7A82  
                                      STR_23 7AC7                                        STR_31 7FB8  
                                      STR_15 7EBF                                        STR_16 7F06  
                                      STR_24 7EDE                                        STR_32 7B43  
                                      STR_40 7ABB                                        STR_17 7F58  
                                      STR_25 7F34                                        STR_41 7DE7  
                                      STR_33 7B98                                        STR_18 7F69  
                                      STR_50 7ED4                                        STR_26 7BA9  
                                      STR_34 7AEE                                        STR_42 7ADD  
                                      STR_35 7FBD                                        STR_19 7F71  
                                      STR_51 7E9E                                        STR_43 7D3B  
                                      STR_27 7BFE                                        STR_36 7B43  
                                      STR_60 7F22                                        STR_44 7FF7  
                                      STR_52 7EF2                                        STR_28 7C0F  
                            __end_of___awmod 57B6                                        STR_37 7B98  
                                      STR_53 7FF7                                        STR_61 7E88  
                                      STR_45 7D57                                        STR_29 7B32  
                                      STR_38 7AEE                                        STR_62 7E9E  
                                      STR_70 7EA9                                        STR_54 7D57  
                                      STR_46 7EB4                                        STR_55 7EB4  
                                      STR_39 7EFC                                        STR_63 7F95  
                                      STR_47 7F19                                        STR_71 7C31  
                                      STR_80 7C83                                        STR_56 7F19  
                                      STR_48 7DE7                                        STR_64 7EE8  
                                      STR_72 7E34                                        STR_65 7F8E  
                                      STR_49 7F22                                        STR_73 7D72  
                                      STR_57 7D49                                        STR_81 7BDC  
                                      STR_66 7D3B                                        STR_58 7D3B  
                                      STR_90 7FAA                                        STR_82 7D65  
                                      STR_74 7D2D                                        STR_67 7E93  
                                      STR_59 7E93                                        STR_91 7B54  
                                      STR_75 7B21                                        STR_83 7AA9  
                                      STR_84 7D2D                                        STR_68 7EA9  
                                      STR_76 7B87                                        STR_92 7ACC  
                                      STR_69 7D49                                        STR_93 7FB1  
                                      STR_85 7E64                                        STR_77 7C83  
                                      STR_86 7E4C                                        STR_94 7BBA  
                                      STR_78 7B10                                        STR_95 7FA3  
                                      STR_87 7E40                                        STR_79 7AFF  
                                      STR_88 7D72                                        STR_96 7A96  
                            __end_of___flmul 2612                                        STR_89 7FF7  
                                      STR_97 7F9C                                        STR_98 7CB3  
                                      STR_99 7B21            __size_of_USBCtrlEPServiceComplete 012E  
                            __end_of___fltol 3DFA                              _TMR1_StartTimer 7306  
                            __end_of___lldiv 5FEE                                        u11000 6196  
                                      u11001 6194                                        u11010 6882  
                                      u11011 6880                                        u11100 4708  
                                      u11020 68AC                                        u11101 4706  
                                      u11021 68AA                                        u11110 4750  
                                      u11030 7022                                        u11111 474E  
                                      u11031 7020                                        u11120 47BA  
                                      u11200 1C6C                                        u12000 3CD6  
                                      u11040 6A58                                        u11121 47B8  
                                      u11201 1C6A                                        u12001 3CD4  
                                      u11041 6A56                                        u11210 1C76  
                                      u11130 1B80                                        u12010 3D0C  
                                      u11050 6A70                                        u11211 1C74  
                                      u11131 1B7E                                        u11051 6A6E  
                                      u11300 1DEE                                        u11220 1D0A  
                                      u11140 1B94                                        u12020 3D3E  
                                      u12100 300A                                        u11060 6A7C  
                                      u11301 1DEC                                        u11221 1D08  
                                      u11141 1B92                                        u12021 3D3C  
                                      u12101 3008                                        u11061 6A7A  
                                      u11310 1DF8                                        u11230 1D24  
                                      u11150 1BA0                                        u12030 3D4E  
                                      u12110 3014                                        u11070 6048  
                                      u11311 1DF6                                        u11231 1D20  
                                      u11151 1B9E                                        u12031 3D4C  
                                      u12015 3D00                                        u12111 3012  
                                      u11071 6046                                        u13000 391E  
                                      u12200 6C4A                                        u11400 1FC4  
                                      u11320 1E1C                                        u11240 1D26  
                                      u11160 1BEE                                        u12040 3D88  
                                      u12120 3074                                        u11080 6068  
                                      u13001 391C                                        u12201 6C48  
                                      u11401 1FC2                                        u11321 1E1A  
                                      u11161 1BEC                                        u12041 3D86  
                                      u12121 3072                                        u11081 6066  
                                      u13010 395E                                        u11410 1FD8  
                                      u11330 1E6A                                        u11250 1D4E  
                                      u11170 1C08                                        u12050 3DC0  
                                      u12130 30E4                                        u11090 607E  
                                      u13011 395C                                        u11411 1FD6  
                                      u11331 1E68                                        u11251 1D4C  
                                      u11171 1C06                                        u12051 3DBE  
                                      u12131 30E2                                        u11091 607C  
                                      u13100 5DA0                                        u13020 398E  
                                      u11500 20BE                                        u11420 1FEA  
                                      u11340 1EFE                                        u11260 1D6E  
                                      u11180 1C1C                                        u12060 3DD2  
                                      u12140 3146                                        u12300 58C4  
          __size_of_MOTEapp_setResponseReady 0008                                        u13101 5D9E  
                                      u13021 398C                                        u11501 20BC  
                                      u11421 1FE8                                        u11341 1EFC  
                                      u11261 1D6C                                        u11181 1C1A  
                                      u12061 3DD0                                        u12141 3144  
                                      u12301 58C2                                        u13110 5DAE  
                                      u13030 39B8                                        u11510 20DE  
                                      u11430 1FFC                                        u11350 1F48  
                                      u11270 1D94                                        u11190 1C28  
                                      u12150 3166                                        u12070 64B4  
                                      u12310 5936                                        u13111 5DAC  
                                      u13031 39B6                                        u12215 6C56  
                                      u11511 20DC                                        u11431 1FFA  
                                      u11351 1F46                                        u11271 1D92  
                                      u11191 1C26                                        u12151 3164  
                                      u12071 64B2                                        u12311 5934  
                                      u10800 6AD2                                        u14000 4288  
                                      u13120 5DD8                                        u13040 39E2  
                                      u12216 6C58                                        u13200 167A  
                                      u11440 2014                                        u11360 1F56  
                                      u11280 1DA0                                        u11600 27FE  
                                      u11520 2630                                        u12160 3172  
                                      u12080 64D2                                        u12400 4B26  
                                      u12240 6696                                        u12320 5540  
                                      _T1CON 000FCD                                        u10801 6AD0  
                                      u14001 4286                                        u13121 5DD6  
                                      u13041 39E0                                        u13201 1678  
                                      u11441 2012                                        u11361 1F54  
                                      u11281 1D9E                                        u11601 27FC  
                                      u11521 262E                                        u12161 3170  
                                      u12081 64D0                                        u12401 4B24  
                                      u12241 6694                                        u12321 553E  
                     __end_of_USBDeviceTasks 33D2                                        u14010 4292  
                                      u10810 6E30                                        u13050 6B96  
                                      u13210 16AE                                        u13130 1424  
                                      u11450 202C                                        u11370 1F84  
                                      u11290 1DAE                                        u11610 2820  
                                      u11530 2644                                        u12170 317E  
                                      u12090 64EC                                        u12410 4B3A  
                                      u12250 66AA                                        u12330 55E4  
                                      u14011 4290                                        u10811 6E2E  
                                      u13051 6B94                                        u13211 16AC  
                                      u13131 1422                                        u11451 202A  
                                      u11371 1F82                                        u11291 1DAC  
                                      u11611 281E                                        u11531 2642  
                                      u12171 317C                                        u12091 64EA  
                                      u12411 4B38                                        u12251 66A8  
                                      u12331 55E2                                        u14020 7126  
                                      u14100 6C8E                                        u10740 596C  
                                      u10820 6E52                                        u13060 6BAC  
                                      u12340 5A10                                        u13300 1918  
                                      u13220 171E                                        u13140 1438  
                                      u11460 2064                                        u11380 1F94  
                                      u11700 2968                                        u11620 285A  
                                      u11540 2650                                        u12180 31DC  
                                      u10900 713E                                        u12420 4B64  
                                      u12260 6966                                        u12500 5D4E  
                                      u14021 7124                                        u14101 6C8C  
                                      u10741 596A                                        u10821 6E50  
                                      u13061 6BAA                                        u12341 5A0E  
                                      u13301 1916                                        u13221 171C  
                                      u13141 1436                                        u11461 2062  
                                      u11381 1F92                                        u11701 2966  
                                      u11621 2858                                        u11541 264E  
                                      u12181 31DA                                        u10901 713C  
                                      u12421 4B62                                        u12261 6964  
                                      u12501 5D4C                                        u14030 6E8E  
                                      u10750 59F8                                        u14110 4F36  
                                      u13070 6BBC                                        u10830 6D5C  
                                      u12350 5A36                                        u13310 1988  
                                      u13230 174A                                        u13150 146E  
                                      u11470 207A                                        u11390 1FB2  
                                      u11710 2980                                        u11630 2890  
                                      u11550 26A2                                        u12190 31E6  
                                      u10910 6FEA                                        u12510 62B8  
                                      u12430 4B78                                        u12270 697A  
                                      u14031 6E8C                                        u10751 59F6  
                                      u14111 4F34                                        u13071 6BBA  
                                      u10831 6D5A                                        u12351 5A34  
                                      u13311 1986                                        u13231 1748  
                                      u13151 146C                                        u11471 2078  
                                      u11391 1FB0                                        u11711 297E  
                                      u11631 288E                                        u11551 26A0  
                                      u12191 31E4                                        u10911 6FE8  
                                      u12511 62B6                                        u12431 4B76  
                                      u12271 6978                                        u14040 376E  
                                      u10760 69F8                                        u13080 5D6E  
                                      u14120 4F62                                        u10840 6EFA  
                                      u12360 5AA4                                        u13320 1A08  
                                      u13240 17B8                                        u13160 150A  
                                      u11480 2088                                        u11720 29CE  
                                      u11640 28AA                                        u11560 26B6  
                                      u11800 21A2                                        u10920 5BA2  
                                      u12600 4950                                        u12520 62CE  
                                      u12440 4BA2                                        u12280 58A0  
                                      _T2CON 000FBA                                        u14041 376C  
                                      u10761 69F6                                        u13081 5D6C  
                                      u14121 4F60                                        u10841 6EF8  
                                      u12361 5AA2                                        u13321 1A06  
                                      u13241 17B6                                        u13161 1508  
                                      u11481 2086                                        u11721 29CC  
                                      u11641 28A8                                        u11561 26B4  
                                      u11801 21A0                                        u10921 5BA0  
                                      u12601 494E                                        u12521 62CC  
                                      u12441 4BA0                                        u12281 589E  
                                      u14050 379C                                        u10770 6A00  
                                      u13090 5D76                                        u14130 4F8E  
                                      u12370 67E2                                        u13330 1A3E  
                                      u13250 17E4                                        u13170 15AA  
                                      u11490 20AA                                        u11730 2A02  
                                      u11650 28C8                                        u11570 26C2  
                                      u11810 21DC                                        u10850 6092  
                                      u10930 5BD2                                        u12610 497A  
                                      u12530 6320                                        u12450 4BB6  
                                      u12290 58B6                                        u14051 379A  
                                      u10771 69FE                                        u13091 5D74  
                                      u14131 4F8C                                        u12371 67E0  
                                      u13331 1A3C                                        u13251 17E2  
                                      u13171 15A8                                        u11491 20A8  
                                      u11731 2A00                                        u11651 28C6  
                                      u11571 26C0                                        u11811 21DA  
                                      u10851 6090                                        u10931 5BD0  
                                      u12611 4978                                        u12531 631E  
                                      u12451 4BB4                                        u12291 58B4  
                                      u14060 37C4                                        u12700 33E4  
                                      u10780 6A2E                                        u14140 4F9A  
                                      u12380 67F4                                        u13340 1A6A  
                                      u13260 1818                                        u13180 15FA  
                                      u11740 2A34                                        u11660 28EC  
                                      u11580 270E                                        u11900 252E  
                                      u11820 21EA                                        u10860 60AE  
                                      u10940 5BF4                                        u12620 4982  
                                      u12460 4BE0                                        u12540 4826  
                                      u14061 37C2                                        u12701 33E2  
                                      u10781 6A2C                                        u14141 4F98  
                                      u12381 67F2                                        u13341 1A68  
                                      u13261 1816                                        u13181 15F8  
                                      u11741 2A32                                        u11661 28EA  
                                      u11581 270C                                        u11901 252C  
                                      u11821 21E8                                        u10861 60AC  
                                      u10941 5BF2                                        u12621 4980  
                                      u12461 4BDE                                        u12541 4824  
                                      u14070 37F6                                        u12710 33FC  
                                      u10790 6AA8                                        u14150 4FAC  
                                      u13350 1AAA                                        u13270 1888  
                                      u13190 164E                                        u11670 28FE  
                                      u11590 274C                                        u11910 257C  
                                      u11830 2402                                        u11750 2116  
                                      u10870 60DC                                        u10950 5C0C  
                                      u12630 498A                                        u12390 4AFC  
                                      u12470 5CEE                                        u12550 483A  
                                      u14230 2E2A                                        u14071 37F4  
                                      u12711 33F4                                        u10791 6AA6  
                                      u14151 4FAA                                        u13351 1AA8  
                                      u13271 1886                                        u13191 164C  
                                      u11671 28FC                                        u11591 274A  
                                      u11911 257A                                        u11751 2114  
                                      u10871 60DA                                        u10951 5C0A  
                                      u12631 4988                                        u12391 4AFA  
                                      u12471 5CEC                                        u12551 4838  
                                      u14080 386A                                        u12800 3542  
                                      u12720 3428                                        u12640 4604  
                                      u10960 6122                                        u13360 1ACA  
                                      u13280 18CC                                        u11680 293E  
                                      u11920 25A8                                        u11840 2476  
                                      u11760 212A                                        u10880 60EA  
                                      u12480 5D02                                        u12560 486A  
                    __end_of_sendDataCommand 48F2                                        _T3CON 000FB1  
                                      u14081 3868                                        u12801 3540  
                                      u12721 3426                                        u12641 4602  
                                      u10961 6120                                        u13361 1AC8  
                                      u13281 18CA                                        u11681 293C  
                                      u11921 25A6                                        u11841 2474  
                                      u11761 2128                                        u10881 60E8  
                                      u12481 5D00                                        u12561 4868  
                                      u14090 6C66                                        u12810 3552  
                                      u12730 3438                                        u12650 461C  
                                      u10970 6146                                        u13370 1AD2  
                                      u13290 18EC                                        u11690 2950  
                                      u11930 25E2                                        u11850 249A  
                                      u11770 2136                                        u10890 6B34  
                                      u12490 5D3A                                        u12570 48EA  
                                      u14091 6C64                                        u12811 3550  
                                      u12731 3436                                        u12651 4614  
                                      u13371 1AD0                                        u13291 18EA  
                                      u11691 294E                                        u11931 25E0  
                                      u11851 2498                                        u11835 23F6  
                                      u11771 2134                                        u10891 6B32  
                                      u12491 5D38                                        u12571 48E8  
                                      u12820 3560                                        u12740 3446  
                                      u12660 4648                                        u10980 6150  
                                      u12900 63DC                                        u11860 24AC  
                                      u11780 2182                                        u12580 35AC  
                                      u11940 56F8                                        u12821 355E  
                                      u12741 3444                                        u12661 4646  
                                      u10981 614E                                        u12901 63DA  
                                      u11861 24AA                                        u11781 2180  
                                      u12581 35AA                                        u11941 56F6  
                                      u12750 3456                                        u12718 3400  
                                      u12670 4664                                        u10990 6178  
                                      u12830 42C6                                        u12910 63F8  
                                      u11870 24EC                                        u11790 2196  
                                      u12590 4902                                        u11950 5714  
                                      u12751 3454                                        u12671 4662  
                                      u12831 42C4                                        u12911 63F6  
                                      u11871 24EA                                        u11791 2194  
                                      u12591 4900                                        u11951 5712  
                                      u14407 4C64                                        u12760 348C  
                                      u12680 46C4                                        u12840 42EA  
                                      u11880 24FE                                        u11960 5730  
                                      u12761 348A                                        u12681 46C2  
                                      u10977 613C                                        u12841 42E8  
                                      u11881 24FC                                        u11961 572E  
                                      u14417 4C98                                        u12770 3498  
                                      u12658 4620                                        u12690 706E  
                                      u12850 4316                                        u11890 2516  
                                      u11970 5750                    ?_USBCtrlEPServiceComplete 0001  
                                      u12771 3496                                        u12691 706C  
                                      u12851 4314                                        u11891 2514  
                                      u14507 35C4                                        u11971 574E  
                                      u14427 4CAA                                        u14347 45C8  
                                      u12780 34D0                                        u13900 41A2  
                                      u12860 433A                                        u11980 576C  
                                      u12781 34CE                                        u13901 41A0  
                                      u10997 616E                                        u12861 4338  
                                      u14517 35D6                                        u11981 576A  
                                      u14437 4CBC                                        u14357 4BF0  
                                      u12790 3508                                        u13910 41AA  
                                      u12870 4366                                        u11990 579E  
                                      u12791 3506                                        u13911 41A8  
                                      u12871 4364                                        u14527 35E8  
                                      u11991 579C                                        u14447 6D74  
                                      u14367 4C02                                        u13920 41B8  
                                      u12880 43AC                                        u13921 41B6  
                                      u12881 43AA                                        u14537 36DE  
                                      u14457 093A                                        u14377 4C14  
                                      u13930 41DA                                        u12890 63BC  
                                      u13931 41D8                                        u12891 63BA  
                                      u14547 36F0                                        u14467 633A  
                                      u14387 4C40                                        u13940 41EE  
                                      u12980 38CA                                        u13941 41EC  
                                      u12981 38C8                                        u14557 3702  
                                      u14477 634E                                        u14397 4C52  
                                      u13950 41F6                                        u12990 38F4  
                                      u13951 41F4                                        u12991 38F2  
                                      u14567 1ADE                                        u14487 6362  
                                      u13960 421A                                        u13961 4218  
                                      u14577 1AF0                                        u14497 702C  
                                      u13970 422A                                        u13971 4228  
                                      u14587 1B02                                        u13980 4238  
                                      u13981 4236                                        u14597 6D34  
                                      u13990 4242                                        u13991 4240  
                            __end_of___lwmod 6424                    ?_MOTEapp_setResponseReady 0001  
                        oled_putUint8@number 0078                                        i2l924 649A  
                                      _UADDR 000F63                                        _RCREG 000FAE  
                                      _RCSTA 000FAB                                        _TMR1H 000FCF  
                                      _TMR3H 000FB3                                        _TMR1L 000FCE  
                                      _TMR3L 000FB2                                        _SPBRG 000FAF  
                                      _TRISD 000F95      moteApp_add8bToDataBuffer@bufferLocation 0066  
                                      _USTAT 000F61                                        _TXREG 000FAD  
                                      _TXSTA 000FAC                                __CFG_WRT0$OFF 000000  
         __size_of_USBCtrlEPAllowStatusStage 00E6                              __end_of_delayms 6D9E  
                              __CFG_WRT1$OFF 000000                                __CFG_WRT2$OFF 000000  
                              __CFG_WRT3$OFF 000000                               __CFG_EBTR0$OFF 000000  
                             __CFG_FCMEN$OFF 000000                               __CFG_EBTR1$OFF 000000  
                             __CFG_EBTR2$OFF 000000                               __CFG_EBTR3$OFF 000000  
            __end_of_USBCtrlEPAllowDataStage 5EB0                            oled_putChar@index 006B  
                           __end_of_TMR1_ISR 729C                                        _sd000 79B4  
                                      _sd001 796E              service_pushbutton@Release_Timer 00DC  
                                      _sd002 793A                                __CFG_WRTB$OFF 000000  
                           __end_of_TMR3_ISR 70AE                                __CFG_WRTC$OFF 000000  
                              __CFG_WRTD$OFF 000000                              _DATAEE_ReadByte 71C8  
                             __CFG_EBTRB$OFF 000000                                   i2memset@p1 0001  
                                      _n_bit 00F5                                        _light 0158  
                                      _stops 015B                               __pbitbssCOMRAM 02D0  
                    __end_of_TMR1_Initialize 6F3A                                 _runningState 00E9  
                                      pclath 000FFA                                        tablat 000FF5  
                                      plusw2 000FDB                            __end_of_CDCInitEP 6660  
                 oled_setDisplay@displayType 0061                                        status 000FD8  
                             __CFG_T3CMX$RC0 000000                              _TMR2_StartTimer 7302  
                            __end_of_strncmp 5AB4                              ___lbdiv@divisor 0060  
                             __CFG_ICPRT$OFF 000000                        ?_USBapp_setrxByteFlag 0001  
                           __end_ofi2_memset 6FA6                              ___lbdiv@counter 0062  
                               _m10SecTicker 0156                 __end_of_moteApp_getTempValue 698C  
                            putUSBUSART@data 0060           USART_mySetLineCodingHandler@dwBaud 000E  
               __size_of_USBStdSetCfgHandler 00F6                              __initialization 6222  
                      TMR2_ReadTimer@readVal 0060                __size_of_TMRapp_ClearBitFlags 0008  
                               __end_of_main 3F32                        _control_signal_bitmap 00CD  
              __size_of_MOTEapp_handlerState 000A                       _MOTEapp_TimerBasedTask 6B88  
                             ??_EUSART_Write 0060                      __end_of_TMR2_Initialize 721E  
                               ?_sendCommand 0061                  ?_INTERRUPT_InterruptManager 0001  
                  __size_of_USBCtrlEPService 00F0                                       ??_main 00B7  
                               ?_moduleSleep 0001                                 ?_moteHandler 0001  
           __size_of_moteApp_addToDataBuffer 0084                              _TMR3_StartTimer 72FE  
                              __activetblptr 000002                              ?_USBDeviceTasks 0001  
                        i2_EUSART_Initialize 6DDC                    sendDataCommand@dataLength 0065  
                                ?_USBSuspend 0001                                   _NextUSBOut 0053  
                             __CFG_SDOMX$RB3 000000                              __CFG_CCP2MX$RC1 000000  
                               _cdc_mem_type 00CE             moteApp_convertSensorValue@string 0071  
                    __end_of_USBDeviceAttach 6C9C                                       _ADCON0 000FC2  
                                     _ADCON1 000FC1                                       _ADCON2 000FC0  
                           _CDCDataOutHandle 00BF                            _getsUSBUSART$6012 006B  
                                     _ACTCON 000FB5                                       STR_100 7B87  
                                     STR_101 7C83                                       STR_110 7C83  
                                     STR_102 7C63                                       STR_103 7C53  
                                     STR_111 7C20                                       STR_104 7C83  
                                     STR_112 7CD3                                       STR_120 7B65  
                                     STR_121 7F87                                       STR_113 7CE2  
                                     STR_105 7C42                                       STR_130 7CE2  
                                     STR_122 7FC2                                       STR_106 7ECA  
                                     STR_114 7C73                                       _ADRESH 000FC4  
                                     STR_131 7CD3                                       STR_115 7C63  
                                     STR_107 7E51                                       STR_123 7DCB  
                                     STR_132 7C63                                       STR_108 7B10  
                                     STR_124 7FE0                                       STR_140 7FCF  
                                     STR_116 7F80                                       STR_133 7C53  
                                     STR_109 7AFF                                       STR_125 7FEC  
                                     STR_141 7FD3                                       STR_117 7F79  
                                     STR_134 7C83                                       STR_126 7FE4  
                                     STR_150 7FEF                                       STR_118 7FFA  
                                     STR_142 7FD7                                       _ADRESL 000FC3  
                                     STR_127 7FE8                                       STR_143 7FDB  
                                     STR_135 7BED                                       STR_151 7BCB  
                                     STR_119 7B76                                       STR_160 7B21  
                                     STR_144 7FF3                                       STR_128 7FEF  
                                     STR_136 7E58                                       STR_152 7C93  
                                     STR_137 7C73                                       STR_129 7C73  
                                     STR_153 7FC7                                       STR_145 7FDB  
                                     STR_161 7B87                                       STR_162 7C83  
                                     STR_154 7FCB                                       STR_146 7FDF  
                                     STR_138 7FC7                                       STR_170 7DCD  
                                     STR_155 7FCF                                       STR_147 7FEB  
                                     STR_139 7FCB                                       STR_171 7DDA  
                                     STR_163 7CA3                                       STR_156 7FD3  
                                     STR_180 7F71                                       STR_148 7FE3  
                                     STR_164 7D7F                                       STR_172 7CF1  
                                     STR_157 7FD7                                       STR_181 7F69  
                                     STR_149 7FE7                                       STR_173 7F2B  
                                     STR_165 7D8C                                       _EEDATA 000FA8  
                                     STR_174 7A05                                       STR_182 7AC7  
                                     STR_158 7FDB                                       STR_166 7D99  
                                     STR_159 7FF3                                       STR_167 7DA6  
                                     STR_175 7A22                                       STR_183 79D3  
                                     STR_168 7DB3                                       STR_176 7A3C  
                                     STR_184 79B8                                       STR_169 7DC0  
                                     STR_185 7A56                                       STR_177 79EE  
                                     STR_186 7A6C                                       STR_178 7A08  
                                     STR_179 7F58                                       STR_187 7F10  
                                     STR_188 7F61                                       STR_189 7E28  
                                     _EECON2 000FA7                              getsUSBUSART@len 0069  
                                     _T1GCON 000FCC                         oled_putUint8@numData 0079  
                                     _T3GCON 000FB4                        __size_of_CDCTxService 01C8  
                                     i2l1201 00D6                                       i2l1204 00EA  
                    __end_of_TMR3_Initialize 70F2                                       i2l2021 5882  
                                     i2l1142 6CD8                                       i2l2030 5852  
                                     i2l1151 6D1E                                       i2l1145 6CDC  
                                     i2l2028 5820                                       i2l1192 0072  
                                     i2l1194 008C                                       i2l1196 00A2  
                                     i2l1198 00B8                                       i2l1800 5EAE  
                                     i2l1722 3A76                                       i2l2613 6FA4  
                                     i2l1590 70AC                                       i2l2526 5FDC  
                                     i2l1734 324A                                       i2l1735 33D0  
                                     i2l1808 40F6                                       i2l1744 3328  
                                     i2l1833 4AE8                                       i2l1921 44A4  
                                     i2l1905 5196                                       i2l1745 33CE  
                                     i2l1818 4194                                       i2l1746 3342  
                                     i2l1915 6736                                       i2l1588 70A0  
                                     i2l1764 544A                                       i2l1853 4DCE  
                                     i2l1933 50A6                                       i2l1846 3CBE  
                                     i2l1950 2AA2                                       i2l1871 545A  
                                     i2l1935 4FCE                                       i2l1944 5020  
                                     i2l1929 44E0                                       i2l1881 552A  
                                     i2l1794 5368                                       i2l1874 5512  
                                     i2l1867 4066                                       i2l1875 5478  
                                     i2l1876 547C                                       i2l1884 6B84  
                                     i2l1973 2D6E                                       i2l1895 6F70  
                                     i2l1969 2CC8                                       i2l8101 54AA  
                                     i2l8013 5E7C                                       i2l8103 54CC  
                                     i2l8111 54F8                                       i2l8033 4D28  
                                     i2l8009 5E5E                                       i2l8151 2B86  
                                     i2l8143 2B38                                       i2l8063 3F46  
                                     i2l8055 4DAA                                       i2l8039 4D5E  
                                     i2l7505 5F22                                       i2l8145 2B76  
                                     i2l8129 2A9A                                       i2l7507 5F3C  
                                     i2l8171 2C54                                       i2l8155 2BB2  
                                     i2l8083 403C                                       i2l8075 3FE0  
                                     i2l8067 3F58                                       i2l7701 583C  
                                     i2l7533 6BFA                                       i2l7541 5390  
                                     i2l8181 2C9E                                       i2l8165 2C1A  
                                     i2l8157 2BD4                                       i2l8149 2B82  
                                     i2l8085 4044                                       i2l8077 3FE8  
                                     _TABLAT 000FF5                                       i2l8431 3B8E  
                                     i2l7543 53AA                                       i2l8191 2CF0  
                                     i2l8183 2CAC                                       i2l8167 2C3A  
                                     i2l8095 5464                                       i2l8407 4134  
                                     i2l8441 3BC0                                       i2l7529 6BE6  
                                     i2l7561 542A                                       i2l8193 2D0E  
                                     i2l8089 404C                                       i2l8505 503A  
                                     i2l8443 3BCE                                       i2l8435 3B9C  
                                     i2l7563 5440                                       i2l8453 3C28  
                                     i2l7709 585E                                       i2l7549 53C2  
                                     i2l7741 6444                                       i2l8197 2D38  
                                     i2l8509 505E                                       i2l7807 4A5A  
                                     i2l7815 4A92                                       i2l7663 6776  
                                     i2l7735 642E                                       i2l8199 2D46  
                                     i2l8383 4090                                       i2l7833 5F7C  
                                     i2l7817 4AA2                                       i2l7825 4ADA  
                                     i2l8457 3C44                                       i2l7737 6436  
                                     i2l8481 4FDE                                       i2l7835 5F8A  
                                     i2l8467 3CAA                                       i2l7675 57CA  
                                     i2l7851 6F7C                                       i2l8491 4FF6  
                                     i2l8483 4FE4                                       i2l8387 409E  
                                     i2l7845 5FCC                                       i2l7837 5F96  
                                     i2l7693 5814                                       i2l7685 57FE  
                                     i2l7669 6798                                       i2l8493 4FFE  
                                     i2l7679 57E0                                       i2l7855 6F8E  
                                     i2l8495 5004                                       i2l8479 4FD8  
                                     i2l8399 4116                                       i2l7793 4A16  
                                     i2l7797 4A2A                                       i2l9751 4410  
                                     i2l9753 441A                                       i2l9737 672C  
                                     i2l9729 66DE                                       i2l9771 4486  
                                     i2l7979 52DE                                       i2l9781 44DA  
                                     i2l9765 4462                                       i2l9779 44D6  
                                  ??_EndLine 0061                                       _OSCCON 000FD3  
                              CDCTxService@i 006A                                       _SPBRGH 000FB0  
                                     _SSPBUF 000FC9                             __end_of___xxtofl 3200  
                   i2USBTransferOnePacket@ep 0005                            ??i2_USBDeviceInit 0009  
            __size_ofi2_USBTransferOnePacket 00E2                         ?i2_EUSART_Initialize 0001  
                       oled_displayOff@state 0001                                oled_putChar@k 006A  
             __size_of_moteApp_getLightValue 006C                __end_of_moteApp_getLightValue 66CC  
                          _shortPacketStatus 004E               moteRunningProcess@changeStates 00B5  
                             __CFG_XINST$OFF 000000                         _moteApp_clearBuffers 4AEA  
                       _moteApp_clearCommand 7242                      _moteApp_lightStringSize 72C4  
               ??_MOTEapp_SetDataRateSetting 0063                              USBDeviceTasks@i 001F  
                 __end_of_Set_Column_Address 7110                  USBStdFeatureReqHandler@pUEP 0017  
                           __end_of_hexToStr 6A92                     USBTransferOnePacket@data 0061  
                 USBCtrlTrfInHandler@lastDTS 0012                              ??_USBDeviceInit 0068  
                  __size_of_Set_Page_Address 001A                      __end_of_TMR1_StartTimer 730A  
                               ?_putUSBUSART 0060                                    ??___almod 0068  
                                  ??___fladd 0068                                       ___wmul 6E92  
                                  ??___fldiv 0095                                    ??___lbdiv 0061  
                             __CFG_STVREN$ON 000000                                    ??___awmod 0064  
                   ?_moteApp_setSensorsInput 0001                                    ??___flmul 007C  
                                  ??___fltol 0064                                    ??___lldiv 0009  
                                     _appKey 0100                         __end_of_getsUSBUSART 46F6  
                                  ??___lwmod 0064                            _USBEnableEndpoint 6BD0  
            __size_of_USBStdGetStatusHandler 00E0                          _EUSART_Transmit_ISR 6C9C  
                                     _memcpy 6AE6                                       _memset 6E56  
                                     clear_0 6260                                       clear_1 626C  
                                     clear_2 6278                                       clear_3 6284  
                                     clear_4 6292                                       _parity 015C  
                            ___awmod@divisor 0062                                    ??_delayms 0062  
                            ___awmod@counter 0064                           ?_USBEnableEndpoint 0009  
             ??_USART_mySetLineCodingHandler 000E                                       _status 00CC  
                    __end_of_DATAEE_ReadByte 71E0                                       _strcmp 67A2  
                 __end_of_ADC_TempConversion 4EC4                __size_of_USBTransferOnePacket 0100  
                           ?_sendDataCommand 0061                              _moteApp_delayms 6D20  
                __size_of_service_pushbutton 00A8                                 _CDCTxService 33D2  
                               __mediumconst 75EE                                       tblptrh 000FF7  
                                     tblptrl 000FF6                                       tblptru 000FF8  
                        ??_USBEnableEndpoint 000A                                    ?_CMP1_ISR 0001  
                    __end_of_TMR2_StartTimer 7306                                 _dataRateRead 00EC  
                                _CtrlTrfData 000438                                    ??_strncmp 0066  
                           ___lbdiv@dividend 0061                                ?_oled_devInit 0001  
                       ?_EUSART_Transmit_ISR 0001                         _controlTransferState 004D  
                  USBapp_Handler@buttonPress 0076                         _USBapp_getrxByteFlag 72EC  
                           ?_TMR1_Initialize 0001                         __CFG_LS48MHZ$SYS48X8 000000  
        __size_of_MOTEapp_SetDataRateSetting 0184                                 ___xxtofl@arg 006A  
                       __size_of_EUSART_Read 0054                                 ___xxtofl@exp 0069  
                          _SYSTEM_Initialize 70AE                                 ___xxtofl@val 0060  
               __size_of_USBapp_handlerState 000A           moteApp_getLightValue@escapeCounter 006F  
                                 __accesstop 0060                      __end_of__initialization 6298  
                     ??_USBapp_setrxByteFlag 0001                              __CFG_PBADEN$OFF 000000  
                               ?_test_switch 0001                        ??i2_EUSART_Initialize 0001  
                            _CMP1_Initialize 7254                           ?_SYSTEM_Initialize 0001  
                         oled_writeData@data 0060                                ___rparam_used 000001  
                              ?_oled_setFont 0060                     __size_of_USBStallHandler 0050  
                                 ___fltol@f1 0060                                ?_oled_putChar 0062  
                      ?_moteApp_clearBuffers 0001                        ?_moteApp_clearCommand 0001  
                        __size_of_USBSuspend 002A                  __size_of_EUSART_FlushBuffer 0062  
                              ?_oled_putint8 0076                               __pcstackCOMRAM 0001  
                  __end_of_USBEnableEndpoint 6C18                             __CFG_nPWRTEN$OFF 000000  
                              __end_of_sd000 79B8                                __end_of_sd001 79A2  
                              __end_of_sd002 796E                                 __pidataBANK0 72BA  
                               __pidataBANK1 730E                          ??_SYSTEM_Initialize 0062  
                    __end_of_TMR3_StartTimer 7302                                    ?_TMR1_ISR 0001  
                                  ?_TMR3_ISR 0001             __size_of_USBCtrlEPAllowDataStage 00A8  
                           _DATAEE_WriteByte 6C18                __size_of_USBConfigureEndpoint 00A6  
    __end_of_oled_setContrastControlRegister 71F6     __size_of_oled_setContrastControlRegister 0016  
           ?_oled_setContrastControlRegister 0001            ??_oled_setContrastControlRegister 0061  
            _oled_setContrastControlRegister 71E0                  __end_of_USBCtrlTrfInHandler 44E2  
                           ?_TMR2_Initialize 0001                             ___lbdiv@quotient 0063  
       moteApp_setSensorsInput@escapeCounter 0065                       i2_USBTransferOnePacket 536A  
                            __CFG_PCLKEN$OFF 000000                               __CFG_nLPBOR$ON 000000  
                          __end_of_OledFont0 78F7                            _CDCTxService$6060 0068  
                                 _cdc_notice 01CD                                    ?i2_memset 0001  
                                 _cdc_rx_len 00D0                                   _cdc_tx_len 00CF  
                       _moteApp_getTempValue 6930                                   ??_CMP1_ISR 0001  
                            _responsePortNum 01F0                     ??_USBCtrlTrfSetupHandler 001C  
                                 _dataBuffer 01BD                               ??_oled_devInit 0062  
                           ?_USBDeviceAttach 0001                    __end_of_SYSTEM_Initialize 70D0  
                      ??_EUSART_Transmit_ISR 0001                       _USBStdGetStatusHandler 544C  
                              ?_moduleResync 0001                        ?_USBapp_getrxByteFlag 0001  
                       service_pushbutton@bs 0060                                   __pbssBANK0 00B7  
                                 __pbssBANK1 0100                                   __pbssBANK2 0200  
                                 __pbssBANK3 0300                         __end_of_EUSART_Write 6A3E  
                    __size_of_TMR2_ReadTimer 000C                             ?_TMR3_Initialize 0001  
                           ??_oled_putString 0075                  oled_regulorResistorSelect@r 0061  
                    moduleResync@escapeEvent 0067                               ??_oled_setFont 0062  
               ??_moteApp_convertSensorValue 0073                              _periodicUpValue 00FD  
                  ??_moteApp_lightStringSize 0060                  __size_of_EUSART_Receive_ISR 0042  
                        oled_putString@index 0075                               ??_oled_putChar 0064  
                __size_of_USBWakeFromSuspend 0038                                  _pBDTEntryIn 003C  
                     __size_of_oled_clearRow 003C                                   _clearLight 01E6  
                __end_of_moteApp_testSensors 5284                     sendDataCommand@byteCount 0067  
           __end_of_USBCtrlEPServiceComplete 4196             __end_of_MOTEapp_setResponseReady 72EC  
                             ??_oled_putint8 0078                       oled_putChar@start_page 0063  
                __size_of_USBCheckCDCRequest 00CE                            __CFG_PLLSEL$PLL3X 000000  
                         __size_of_oled_init 0032                      ?_moteApp_getLightString 0060  
                           ??_oled_writeData 0060                         USBCtrlTrfRxService@i 0012  
                               ?_TMRapp_Tick 0001                                      ?___wmul 0060  
                           ?_TMR1_StartTimer 0001                                   ??_TMR1_ISR 0001  
                                 ??_TMR3_ISR 0001                      __end_of_moteApp_delayms 6D60  
                                    _CM1CON0 000F98                      __size_of_USBapp_Handler 00F2  
                    __size_of_TMRapp_Handler 016C                                      ?_memcpy 0060  
                                    _BAUDCON 000FB8                                      ?_memset 0060  
                                 _device_dsc 79A2                    Set_Column_Address@address 0061  
                   __size_of_oled_displayOff 0008                             _USBCtrlEPService 50A8  
                    _moteApp_addToDataBuffer 62A6                  __size_of_moteApp_toggleLeds 00F6  
                                 _ep_data_in 00BA                      __size_of_ADC_Initialize 001A  
                                    ?_strcmp 0060                             ?_DATAEE_ReadByte 0001  
                __end_of_USBCtrlTrfRxService 3CC0                         __size_of_sendCommand 0038  
                         _USBCheckStdRequest 4FB6                                _eusartRxCount 0057  
                          _configDescriptor1 78F7                                      i2l11311 6D1A  
                                    i2l11303 6CEC                                      i2l11411 33C0  
                                    i2l11403 3378                                      i2l11331 323E  
                                    i2l11323 3226                                      i2l11405 338E  
                                    i2l11409 339E                                      i2l11353 3282  
                                    i2l11345 326A                                      i2l11611 005C  
                                    i2l11365 32C0                                      i2l10903 6B82  
                                    i2l11383 3318                                      i2l11375 32E8  
                                    i2l11359 32B0                                      i2l11297 6CD4  
                                    i2l11369 32D2                                      i2l10931 515E  
                                    i2l10923 510E                                      i2l11637 00DC  
                                    i2l10935 5178                                      i2l10937 5180  
                                    i2l10881 6F66                                      i2l10971 3A82  
                                    i2l10981 3AA0                                      i2l10879 6F62  
                                    i2l10959 3A52                                      i2l10993 3B36  
                                    i2l10987 3AD0                                      i2l10979 3A96  
                                    i2l14991 6490                                      i2l14989 645C  
                                  ?___xxtofl 0060                                      _RS232cp 0050  
                            __CFG_WDTEN$SWON 000000                        ?_moteApp_getTempValue 0063  
                         __size_of_test_leds 0066                                   ??i2_memset 0007  
                         __size_of_test_oled 00AE                         __size_of_moduleSleep 0030  
                __end_of_USBCtrlTrfTxService 4AEA                         __size_of_moteHandler 0288  
                        _USBStdSetCfgHandler 4CDA                                      _OSCCON2 000FD2  
                                    _TBLPTRH 000FF7                                      _TBLPTRL 000FF6  
                                    _TBLPTRU 000FF8                                      _OSCTUNE 000F9B  
                     __size_of_oled_putUint8 00A8               USBapp_LEDUpdateStatus@ledCount 0048  
                            __CFG_WDTPS$8192 000000          __size_of_moteApp_convertSensorValue 00BC  
                                    _SSP1ADD 000FC8                      __end_of_CMP1_Initialize 7266  
                             ??_moduleResync 0065                          ?_USBCheckStdRequest 0001  
                           ?_TMR2_StartTimer 0001                 __size_of_USBStdGetDscHandler 0136  
                                    _UIEbits 000F64                                    ?_hexToStr 0001  
                      ADC_TempConversion@val 00A8                                      _UIRbits 000F65  
                     test_switch@buttonCheck 0079              moteRunningProcess@bufferReadPos 00B4  
                                    _EndLine 7276                                _cdc_trf_state 0055  
                       DATAEE_WriteByte@bAdd 0061                              _countBitsSilent 00C9  
                    __size_of_USBapp_exitCDC 0008                   __end_of_moteRunningProcess 13EE  
                     ??_moteApp_clearBuffers 0060                       ??_moteApp_clearCommand 0063  
                 ?_moteApp_add8bToDataBuffer 0066                                      _pCDCDst 014E  
                                    _pCDCSrc 0151                        __size_of_getsUSBUSART 0108  
             __end_of_moteApp_getLightString 7276           __end_of_MOTEapp_SetDataRateSetting 371E  
                 _MOTEapp_SetDataRateSetting 359A                                      __Hparam 0000  
                       ?_USBStdSetCfgHandler 0001                                    _CDCInitEP 65F2  
                    ?_MOTEapp_TimerBasedTask 0001                                      __Lparam 0000  
                 __size_of_USBEnableEndpoint 0048                  USBapp_exitCDCState@usbState 0060  
                        moteHandler@s2Button 01F5                             _Set_Page_Address 7164  
                       ??_USBCheckStdRequest 001C                 moteRunningProcess@sleepEvent 00AE  
                                    ___almod 42B6                                      ___fladd 1B62  
                          _timerMinTickCount 00C3                __size_of_USBCtrlTrfOutHandler 006C  
                __size_of_moteJoiningProcess 0774                                      ___fldiv 2612  
                                    ___lbdiv 649C                                      ___awmod 56E8  
                                    ___flmul 20F8                             ?_TMR3_StartTimer 0001  
                                    ___fltol 3CC0                                      ___lldiv 5F56  
                           ??_USBDeviceTasks 001F                              __size_of___wmul 0038  
                          ??_USBStallHandler 0001                                      ___lwmod 63AC  
                       oled_putint8@negative 0078           oled_setContrastControlRegister@mod 0061  
                       __size_of_putUSBUSART 0028                                      __pcinit 6222  
                         getsUSBUSART@buffer 0067                              __size_of_memcpy 0052  
               __size_of_USBapp_exitCDCState 000A                              __size_of_memset 003C  
                  __end_of_configDescriptor1 793A                                      __ramtop 0800  
                                    _delayms 6D60                            hexToStr@character 0060  
                                    __ptext0 3DFA                                      __ptext1 6512  
                                    __ptext2 44E2                                      __ptext3 5AB4  
                                    __ptext4 680A                                      __ptext5 6584  
                                    __ptext6 4BE4                                      __ptext7 6D60  
                                    __ptext8 5198                                      __ptext9 2D70  
                   __size_of_oled_setDisplay 0030                                      _inPipes 0036  
                _USBDeferOUTDataStagePackets 00D1              __end_of_moteApp_lightStringSize 72CC  
                            __size_of_strcmp 0068                    moteRunningProcess@counter 00B3  
                           oled_setFont@font 0060                                      _countRX 00CA  
                                  _T1CONbits 000FCD                        _OSCILLATOR_Initialize 7110  
                                    _exitUSB 00F7                                 ??_USBSuspend 0016  
                              _oled_clearRow 6E1A                                    _T2CONbits 000FBA  
            moteApp_add8bToDataBuffer@number 0069                                   ??___xxtofl 0064  
                                  _T3CONbits 000FB1                                   _oled_clear 714A  
                           ___awmod@dividend 0060                     ??_PIN_MANAGER_Initialize 0060  
               __end_of_TMRapp_ClearBitFlags 72E4                                 _LastRS232Out 0051  
                            i2_USBDeviceInit 3A0A                             i2USBDeviceInit@i 0009  
                          __end_of_oled_init 6FD8                                      _rx_data 00CB  
               __end_of_MOTEapp_handlerState 72BA                       ??_USBapp_getrxByteFlag 0060  
                         __end_of_USB_CD_Ptr 75F7                   moteRunningProcess@readByte 00B0  
                 __size_of_SYSTEM_Initialize 0022              __size_of_USBCtrlTrfSetupHandler 0088  
                                 ??_hexToStr 0060                                      _strncmp 59FC  
                       end_of_initialization 6298                                 _getsUSBUSART 45EE  
              sendDataCommand@byteCount_1623 0068                           __end_of_USB_SD_Ptr 75F5  
                                    memcpy@d 0066                                      memcpy@n 0064  
                                    memcpy@s 0068                          _pBDTEntryEP0OutNext 0042  
                                    memset@c 0062                                      memset@n 0064  
                                    memset@p 0066                                __Lmediumconst 75EE  
            _dummy_encapsulated_cmd_response 01D7                                    i2u1002_40 6CA6  
                                  i2u1010_40 3246                                    i2u1002_41 6CA4  
                                  i2u1010_41 3244                                    i2u1003_40 6CCC  
                                  i2u1011_40 3252                                    i2u1003_41 6CCA  
                                  i2u1011_41 3250                                    i2u1004_40 6CE6  
                                  i2u1020_40 32E2                                    i2u1012_40 325A  
                                  i2u1004_41 6CE4                                    i2u1020_41 32E0  
                                  i2u1012_41 3258                                    i2u1005_40 6D12  
                                  i2u1021_40 32F0                                    i2u1013_40 3272  
                                  i2u1005_41 6D10                                    i2u1021_41 32EE  
                                  i2u1013_41 3270                                    i2u1022_40 32F8  
                                  i2u1014_40 327A                                    i2u1006_40 320C  
                                  i2u1022_41 32F6                                    i2u1014_41 3278  
                                  i2u1006_41 320A     moteApp_convertSensorValue@convertedValue 0077  
                                  i2u1023_40 3324                                    i2u1015_40 328A  
                                  i2u1007_40 3214                                    i2u1023_41 3322  
                                  i2u1015_41 3288                                    i2u1007_41 3212  
                                  i2u1024_40 3330                                    i2u1016_40 3292  
                                  i2u1008_40 322E                                    i2u1024_41 332E  
                                  i2u1016_41 3290                                    i2u1008_41 322C  
                                  i2u1025_40 333E                                    i2u1017_40 32BC  
                                  i2u1009_40 3236                                    i2u1025_41 333C  
                                  i2u1017_41 32BA                                    i2u1009_41 3234  
                                  i2u1026_40 334A                                    i2u1018_40 32CA  
                                  i2u1050_40 009C                                    i2u1026_41 3348  
                                  i2u1018_41 32C8                                    i2u1050_41 009A  
                                  i2u1027_40 3362                                    i2u1019_40 32DA  
                                  i2u1051_40 00AA                                    i2u1043_40 004A  
                                  i2u1027_41 3360                                    i2u1019_41 32D8  
                                  i2u1051_41 00A8                                    i2u1043_41 0048  
                                  i2u1028_40 3398                                    i2u1052_40 00B2  
                                  i2u1044_40 0052                                    i2u1028_41 3396  
                                  i2u1052_41 00B0                                    i2u1044_41 0050  
                                  i2u1029_40 33CC                                    i2u1053_40 00C0  
                                  i2u1045_40 0064                                    i2u1029_41 33CA  
                                  i2u1053_41 00BE                                    i2u1045_41 0062  
                                  i2u1054_40 00C8                                    i2u1046_40 006C  
                                  i2u1054_41 00C6                                    i2u1046_41 006A  
                   ?_USBStdFeatureReqHandler 0001                                    i2u1055_40 00D2  
                                  i2u1047_40 007A                                    i2u1055_41 00D0  
                                  i2u1047_41 0078                                    i2u1048_40 0082  
                                  i2u1048_41 0080                                    i2u1049_40 0094  
                                  i2u1049_41 0092               __end_of_MOTEapp_TimerBasedTask 6BD0  
                          _EUSART_Initialize 6D9E                            _oled_powerControl 7230  
                                 _rxByteFlag 0054                        ??_USBStdSetCfgHandler 0016  
                            ___lldiv@divisor 0005                         __size_of_test_switch 010C  
                                 ?_CDCInitEP 0001                              ___lldiv@counter 000D  
                          __end_of_test_leds 6870                            __end_of_test_oled 5B62  
             moteJoiningProcess@changeStates 0076                           ?_EUSART_Initialize 0001  
                         ?_oled_powerControl 0001                                _oled_putUint8 5C10  
                         __end_of_USBSuspend 7062               ??_USBapp_CdcEmulatorInitialize 000D  
                    _USBCtrlEPAllowDataStage 5E08                                    _RCSTAbits 000FAB  
                   ??_moteApp_setLightString 006C                           test_switch@timeout 0077  
                                    postdec1 000FE5                                      postdec2 000FDD  
                                    postinc0 000FEE                                      postinc2 000FDE  
                  ??_moteApp_addToDataBuffer 0074               moteApp_setLightString@stingPos 006C  
                       __end_of_oled_devInit 63AC                     _USBCtrlEPServiceComplete 4068  
                    moteApp_toggleLeds@state 0064                                   _responseId 0130  
                                 _retryCount 00E8                             ?_moteApp_delayms 0060  
                              _randomPortNum 00E7                     _MOTEapp_setResponseReady 72E4  
                                    strcmp@r 0065                   _USBStatusStageEnabledFlag1 00D4  
                 _USBStatusStageEnabledFlag2 00D3                                _dataRateValue 00FB  
                        _USBapp_handlerState 72A6                          ??_EUSART_Initialize 0060  
                        ??_oled_powerControl 0061                           USBEnableEndpoint@p 000A  
                                  _PORTAbits 000F80                                    _PORTBbits 000F81  
                                  _PORTCbits 000F82                      oled_putUint8@start_page 0077  
                             ?_oled_clearRow 0001                                   _test_comms 6584  
                     ??_moteApp_getTempValue 0065                         __end_of_oled_setFont 714A  
                                ___fladd@grs 0073                           _Set_Column_Address 70F2  
                       __end_of_oled_putChar 59FC                                ___xxtofl@sign 0068  
                                  _TRISAbits 000F92                                    _TRISBbits 000F93  
                                  _TRISCbits 000F94                                    _TRISEbits 000F96  
                          ??_oled_displayOff 0061                        __size_of_EUSART_Write 0058  
                       __end_of_oled_putint8 560A                           _BothEP0OutUOWNsSet 00D5  
           __size_of_moteApp_setSensorsInput 00A8                                ?_test_powerup 0001  
                                ___fldiv@grs 00A0                                  ___fldiv@rem 009A  
                           ?_CMP1_Initialize 0001                    USBConfigureEndpoint@EPNum 0006  
                 ?_USBCtrlEPAllowStatusStage 0001                     __end_of_DATAEE_WriteByte 6C5A  
                        ?_Set_Column_Address 0001          USER_USB_CALLBACK_EVENT_HANDLER@size 0012  
                             _TMR2_ReadTimer 7284                                    _USTATcopy 0058  
                          __size_of_CMP1_ISR 0004                         ?_USBapp_handlerState 0001  
                         _ADC_TempConversion 4DD0                     oled_putString@start_page 0074  
                                _CM1CON0bits 000F98                                  ___flmul@grs 0082  
         __end_of_moteApp_convertSensorValue 5940                   _moteApp_convertSensorValue 5884  
                  __end_of_EUSART_Initialize 6DDC                    __end_of_oled_powerControl 7242  
                    oled_putint8@station_dot 0076                 ??_oled_regulorResistorSelect 0061  
               __end_of_USBTransferOnePacket 47F6                                  _CM2CON1bits 000F9A  
                                  _TXSTAbits 000FAC                               ?_oled_putUint8 0076  
                          putUSBUSART@length 0062                          ?_ADC_TempConversion 0001  
                   ??_oled_initialDispayLine 0061                        _moteApp_getLightValue 6660  
                     _USBCtrlTrfSetupHandler 619A                         ??_Set_Column_Address 0061  
                    ?i2_USBTransferOnePacket 0001                         __end_of_moduleResync 5C10  
                      __end_of_USBDeviceInit 389E                               _TMRapp_Handler 389E  
                             _USBapp_Handler 4EC4                         __size_of_TMRapp_Tick 0006  
        MOTEapp_getModuleResponse@bufferByte 0062                               __end_of___wmul 6ECA  
                               _EUSART_Write 69E6                        sendDataCommand@string 0061  
                    __end_ofi2_USBDeviceInit 3B68                            __size_of_TMR1_ISR 000C  
                 __end_of_service_pushbutton 5E08                            __size_of_TMR3_ISR 0024  
                             _ADC_Initialize 717E                  moteApp_clearBuffers@counter 0060  
                    moteApp_GoToSleep@status 006E                                    i2memset@c 0003  
                                  i2memset@n 0005                                    i2memset@p 0007  
                             __end_of_memcpy 6B38                       ?_OSCILLATOR_Initialize 0001  
                             __end_of_memset 6E92                            _USBBusIsSuspended 00D6  
                   oled_writeCommand@command 0060                               __end_of_strcmp 680A  
                                ?_oled_clear 0001                          start_initialization 6222  
                       ??_ADC_TempConversion 00A6                      ?_USBStdGetStatusHandler 0001  
              USBCtrlTrfRxService@byteToRead 0013                               ??_test_powerup 00AD  
        __size_of_oled_regulorResistorSelect 0012              __size_of_PIN_MANAGER_Initialize 005E  
                          ??_oled_setDisplay 0061                                ??_EUSART_Read 0060  
                     __end_of_TMR2_ReadTimer 7290              __end_of_moteApp_addToDataBuffer 632A  
                                _cdc_data_rx 000540                                  _cdc_data_tx 000500  
                __end_ofi2_EUSART_Initialize 6E1A                            __size_ofi2_memset 0034  
                                  _OledFont0 75F7                 __end_of_USBConfigureEndpoint 5F56  
            __end_of_USBStdFeatureReqHandler 2D70                     __size_of_sendDataCommand 00FC  
                      ??_USBapp_handlerState 0060              moteApp_convertSensorValue@index 0076  
          __end_of_USBCtrlEPAllowStatusStage 536A                                _periodicState 00F9  
                             _USBapp_exitCDC 72D4                     __end_of_USBCtrlEPService 5198  
       __end_of_USART_mySetLineCodingHandler 69E6        __size_of_USART_mySetLineCodingHandler 005A  
               _USART_mySetLineCodingHandler 698C                   __end_of_EUSART_FlushBuffer 68D2  
                        DATAEE_ReadByte@bAdd 0060                __size_of_USBapp_setrxByteFlag 0006  
                              _moteModeState 00EE                    ??_USBCtrlEPAllowDataStage 0002  
                                ??_CDCInitEP 000D                               USBDeviceInit@i 0068  
                         _periodicTimerValue 00FC                       _pBDTEntryEP0OutCurrent 0044  
                   __size_of_TMR1_Initialize 0038                      USBTransferOnePacket@dir 0060  
                    USBTransferOnePacket@len 0063                       __end_of_USBapp_Handler 4FB6  
                     __end_of_TMRapp_Handler 3A0A               __end_ofi2_USBTransferOnePacket 544C  
                       _TMRapp_ClearBitFlags 72DC                                     ??___wmul 0064  
            __size_of_moteApp_setLightString 0094                          _USBStdGetDscHandler 3F32  
                       _MOTEapp_handlerState 72B0                       __end_of_ADC_Initialize 7198  
                                __pdataBANK0 00F6                                  __pdataBANK1 01F8  
                                   ??_memcpy 0066                                     ??_memset 0066  
                            ??_oled_clearRow 006C              MOTEapp_TimerBasedTask@timerTask 0060  
                        _moduleResonseBuffer 015D                                     ??_strcmp 0064  
                                ?_test_comms 0001                    oled_putString@station_dot 0073  
                                  ___fladd@a 0064                                    ___fladd@b 0060  
                     _USBActiveConfiguration 0059               __end_of_USBStdGetStatusHandler 552C  
                                  ___fldiv@a 0091                                    ___fldiv@b 008D  
                __end_of_EUSART_Transmit_ISR 6CDE                                    ___flmul@a 0078  
                                  ___flmul@b 0074                                  __pbssCOMRAM 002E  
                 service_pushbutton@PB_Timer 014A                                __pcstackBANK0 0060  
                              __pcstackBANK1 01F3                 __size_of_USBCtrlTrfInHandler 010E  
                   __size_of_TMR2_Initialize 0014                     __end_of_Set_Page_Address 717E  
                          __size_of___xxtofl 0208                              ?_TMR2_ReadTimer 0001  
                                _activeState 00EB                         ?_USBStdGetDscHandler 0001  
                     __end_of_USBapp_exitCDC 72DC           __size_of_MOTEapp_getModuleResponse 0090  
                 ?_MOTEapp_getModuleResponse 0001                    ADC_TempConversion@tempRaw 00A6  
                 __end_of_EUSART_Receive_ISR 6D20               moteRunningProcess@messageReady 00AD  
                                   ?_EndLine 0001                          _USBapp_exitCDCState 729C  
                 __end_of_USBWakeFromSuspend 6F72                   __size_of_EUSART_Initialize 003E  
                 __size_of_oled_powerControl 0012                            __size_of_hexToStr 0054  
                            _USBStallHandler 6B38                                 _pBDTEntryOut 0140  
                        __end_of_EUSART_Read 6AE6                   __end_of_USBCheckCDCRequest 5884  
                            ??_oled_putUint8 0078                         oled_putString@string 0071  
                   __size_of_USBDeviceAttach 0042                                    _appDevEui 0120  
                ??_moteApp_add8bToDataBuffer 0067                            _oled_writeCommand 71B0  
                      __size_of_oled_devInit 0082                      oled_putChar@station_dot 0062  
                ?_MOTEapp_SetDataRateSetting 0001                       _PIN_MANAGER_Initialize 68D2  
                     ?_moteApp_getLightValue 006D                          __size_of_oled_clear 001A  
                      ?_TMRapp_ClearBitFlags 0001                              _messageReceived 00E6  
                   __size_of_TMR3_Initialize 0022                         EUSART_Read@readValue 0060  
            __size_of_oled_initialDispayLine 0014                              ?_TMRapp_Handler 0001  
                            ?_USBapp_Handler 0001                                    __pintcode 0008  
                         ?_oled_writeCommand 0001                                __pmediumconst 75EE  
                                   ?___almod 0060                                     ?___fladd 0060  
                      ?_MOTEapp_handlerState 0001                                     ?___fldiv 008D  
                                  __ptext100 717E                                    __ptext101 72B0  
                                   ?___lbdiv 0060                                    __ptext110 50A8  
                                  __ptext102 71C8                                    __ptext111 619A  
                                  __ptext120 6424                                    __ptext112 4068  
                                  __ptext104 72F2                                    __ptext121 6738  
                                  __ptext113 5E08                                    __ptext105 3200  
                                  __ptext130 43D4                                    __ptext122 65F2  
                                  __ptext114 4FB6                                    __ptext106 3A0A  
                                  __ptext131 49EE                                    __ptext123 536A  
                                  __ptext115 4CDA                                    __ptext107 6F3A  
                                  __ptext140 730A                                    __ptext132 698C  
                                  __ptext124 6BD0                                    __ptext116 6F72  
                                  __ptext108 7038                                    __ptext141 0000  
                                  __ptext133 6DDC                                    __ptext125 5EB0  
                                  __ptext117 544C                                    __ptext109 6B38  
                                  __ptext134 5F56                                    __ptext126 57B6  
                                  __ptext118 3F32                                    __ptext135 72F8  
                                  __ptext127 66CC                                    __ptext119 2A66  
                                  __ptext136 708A                                    __ptext128 3B68  
                                  __ptext137 7290                                    __ptext129 5284  
                                  __ptext138 6C9C                                    __ptext139 6CDE  
                                   ?___awmod 0060                                     ?___flmul 0074  
                                   ?___fltol 0060                   __end_of_moteApp_toggleLeds 4CDA  
                                   ?___lldiv 0001                                     ?___lwmod 0060  
                            ?_ADC_Initialize 0001                        __size_of_oled_setFont 001C  
                               _eusartRxHead 00D9                                ??_sendCommand 0063  
          moteApp_getTempValue@escapeCounter 0065                                 _eusartTxHead 00DB  
                               _eusartRxTail 00D8                 __size_of_moteApp_testSensors 00EC  
                               _eusartTxTail 00DA                         ?_USBapp_exitCDCState 0001  
                      __size_of_oled_putChar 00BC                           _moteRunningProcess 012A  
                          _moduleBufferIndex 0056                                     ?_delayms 0060  
                                  _buffer_rx 0300                 ??_INTERRUPT_InterruptManager 0020  
                           ___almod@dividend 0060                             ?i2_USBDeviceInit 0001  
                     moteHandler@readMessage 01F7                          ??_oled_writeCommand 0060  
                              ??_moduleSleep 0063                                ??_moteHandler 00B6  
                      __size_of_oled_putint8 00DE                      _eusartTxBufferRemaining 004F  
                       _USBTransferOnePacket 46F6                                    _mainState 00F0  
                   __size_of_TMR1_StartTimer 0004                      _moteApp_setSensorsInput 5CB8  
                     moteHandler@buttonPress 01F6                          ?_moteRunningProcess 00AC  
               __end_of_USBCtrlTrfOutHandler 6738                                    _minTicker 00E4  
                      ??_USBStdGetDscHandler 0001                                     _CMP1_ISR 730A  
                     _moteApp_setLightString 5FEE                                  _ep_data_out 00B7  
               __size_of_USBCtrlTrfRxService 0158                                    _secTicker 00E5  
                            ?_USBapp_exitCDC 0001                USBConfigureEndpoint@direction 0001  
                   __size_of_DATAEE_ReadByte 0018                                     ?_strncmp 0060  
                        oled_putint8@numData 0079                     ?_moteApp_lightStringSize 0001  
                               _oled_devInit 632A           __end_of_oled_regulorResistorSelect 7230  
                 _oled_regulorResistorSelect 721E                               _eusartRxBuffer 0200  
              moteApp_addToDataBuffer@string 0071                            _dataRateSelection 00F8  
                           _timerMsTickCount 00C5                                    _oled_init 6FA6  
               __size_of_USBCtrlTrfTxService 00FC            __end_of_MOTEapp_getModuleResponse 6112  
                             _eusartTxBuffer 0240                               ___wmul@product 0064  
                                   _IOCBbits 000F86                                     _LATAbits 000F89  
                                   _IOCCbits 000F87                    __end_of_oled_writeCommand 71C8  
                                   _LATBbits 000F8A                                     _LATCbits 000F8B  
                                   _LATEbits 000F8D                   ??_USBCtrlEPServiceComplete 0002  
                 ??_MOTEapp_setResponseReady 0060                                     _PIE1bits 000F9D  
                                   _IPR3bits 000FA5                                     _PIE2bits 000FA0  
                                   _PIE3bits 000FA3                          __size_of_test_comms 006E  
                   __size_of_TMR2_StartTimer 0004                                 _oled_setFont 712E  
                                  _moteState 00FE                            ??_sendDataCommand 0066  
                              _operationType 00F1                        __size_of_moduleResync 00AE  
                       ??_moteRunningProcess 00AF                   __end_of_moteJoiningProcess 1B62  
        __size_of_INTERRUPT_InterruptManager 011E                                 _oled_putChar 5940  
                                   i2u600_40 3FAE                                     i2u600_47 3FA4  
                                   i2u601_40 3FDC                                     _PIR1bits 000F9E  
                                   i2u601_47 3FD2                                     i2u610_40 2A82  
                                   i2u602_40 3FF4                                     i2u610_41 2A80  
                                   i2u602_41 3FF2                                     i2u611_40 2A92  
                                   i2u603_40 4032                                     i2u611_41 2A90  
                                   _PIR2bits 000FA1                                     i2u603_47 4028  
              __size_of_moteApp_clearBuffers 00FA                                     i2u460_40 7094  
                                   i2u620_40 2BE2                                     i2u612_40 2AAE  
                                   i2u604_40 5470                __size_of_moteApp_clearCommand 0012  
                                   i2u460_41 7092                                     i2u620_41 2BE0  
                                   i2u612_41 2AAC                                     i2u604_41 546E  
                                   i2u621_40 2BF2                                     i2u613_40 2ABE  
                                   i2u605_40 5488                                     i2u621_41 2BF0  
                                   i2u613_41 2ABC                                     i2u605_41 5486  
                                   _PIR3bits 000FA4                                     i2u550_40 5376  
                                   i2u622_40 2BFC                                     i2u614_40 2ACE  
                                   i2u606_40 54DC                                     i2u550_41 5374  
                                   i2u622_41 2BFA                                     i2u614_41 2ACC  
                                   i2u606_41 54DA                                     i2u551_40 53B6  
                                   i2u623_40 2C68                                     i2u615_40 2AE0  
                                   i2u607_40 54EC                                     i2u551_41 53B4  
                                   i2u623_41 2C66                                     i2u615_41 2ADE  
                                   i2u607_41 54EA                                     i2u560_40 57C6  
                                   i2u552_40 5414                                     i2u624_40 2CB8  
                                   i2u616_40 2AEE                                     i2u608_40 551A  
                                   i2u560_41 57C4                                     i2u552_41 5412  
                                   i2u624_41 2CB6                                     i2u616_41 2AEC  
                                   i2u608_41 5518                                     i2u561_40 57DC  
                                   i2u625_40 2CC8                                     i2u617_40 2AFA  
                                   i2u609_40 2A72                                     i2u561_41 57DA  
                                   i2u625_41 2CC6                                     i2u617_41 2AF8  
                                   i2u609_41 2A70                                     i2u570_40 4A20  
                                   i2u562_40 57EC                                     i2u626_40 2CD2  
                                   i2u618_40 2B7E                                     i2u650_40 408A  
                                   i2u570_41 4A1E                                     i2u562_41 57EA  
                                   i2u626_41 2CD0                                     i2u618_41 2B7C  
                                   i2u650_41 4088                                     i2u571_40 4A56  
                                   i2u563_40 57F8                                     i2u547_40 5F08  
                                   i2u619_40 2B90                                     i2u651_40 4100  
                                   i2u571_41 4A54                                     i2u563_41 57F6  
                                   i2u547_41 5F06                                     i2u619_41 2B8E  
                                   i2u651_41 40FE                                     i2u572_40 4A82  
                                   i2u548_40 6BDA                                     i2u652_40 4110  
                                   i2u548_41 6BD8                                     i2u652_41 410E  
                                   i2u572_47 4A78                                     i2u573_40 4A9C  
                                   i2u661_40 3CB6                                     i2u660_48 3C94  
                                   i2u549_40 6BEE                                     i2u653_40 412C  
                                   i2u573_41 4A9A                                     i2u661_41 3CB4  
                                   i2u660_49 3CA8                                     i2u549_41 6BEC  
                                   i2u653_41 412A                                     i2u574_40 4ACA  
                                   i2u590_40 52A2                                     i2u558_40 6772  
                                   i2u662_40 4FC8                                     i2u654_40 418A  
                                   i2u590_41 52A0                                     i2u558_41 6770  
                                   i2u662_41 4FC6                                     i2u654_41 4188  
                                   i2u574_47 4AC0                                     i2u575_40 4AE4  
                                   i2u591_40 52B4                                     i2u655_40 3B88  
                                   i2u559_40 6796                                     i2u575_41 4AE2  
                                   i2u591_41 52B2                                     i2u655_41 3B86  
                                   i2u559_41 6794                                     i2u576_40 5F76  
                                   i2u568_40 4A02                                     i2u840_40 44AC  
                                   i2u592_40 52E8                                     i2u656_40 3BCC  
                                   i2u648_40 4072                    USBCtrlEPService@setup_cnt 001E  
                                   i2u576_41 5F74                                     i2u568_41 4A00  
                                   i2u840_41 44AA                                     i2u592_41 52E6  
                                   i2u656_41 3BCA                                     i2u648_41 4070  
                                   i2u577_40 5F92                                     i2u569_40 4A10  
                                   i2u841_40 44B8                                     i2u657_40 3BDA  
                                   i2u833_40 66D8                                     i2u593_40 5E20  
                                   i2u649_40 407A                                     i2u577_41 5F90  
                                   i2u569_41 4A0E                                     i2u841_41 44B6  
                                   i2u657_41 3BD8                                     i2u833_41 66D6  
                                   i2u593_41 5E1E                                     i2u649_41 4078  
                                   i2u578_40 5FB8                                     i2u658_40 3C0E  
                                   i2u834_40 66EE                                     i2u594_40 5E72  
                                   i2u578_41 5FB6                                     i2u658_41 3C0C  
                                   i2u834_41 66EC                                     i2u594_41 5E70  
                                   i2u842_48 44C0                                     i2u835_40 43F6  
                                   i2u659_40 3C8C                                     i2u579_40 6FA2  
                                   i2u595_40 4D24                                     i2u842_49 44D4  
                                   i2u835_41 43F4                                     i2u659_41 3C8A  
                                   i2u579_41 6FA0                                     i2u595_41 4D22  
                                   i2u836_40 4408                                     i2u596_40 4D5C  
                                   i2u836_41 4406                                     i2u596_41 4D5A  
                                   i2u837_40 4424                                     i2u589_40 5290  
                                   i2u597_40 4DA2                                     i2u837_41 4422  
                                   i2u589_41 528E                                     i2u597_41 4DA0  
                                   i2u838_40 4448                                     i2u598_40 3F40  
                                   i2u838_41 4446                                     i2u598_41 3F3E  
                                   i2u839_40 446C                                     i2u599_40 3F64  
                                   i2u839_41 446A                                     i2u599_41 3F62  
                                   i2u970_40 510A                                     i2u970_41 5108  
                                   i2u971_40 515C                                     i2u971_41 515A  
                                   i2u972_40 518E                                     i2u964_40 6F6E  
                                   i2u972_41 518C                                     i2u964_41 6F6C  
                                   i2u965_40 6B40                                     i2u973_40 3A4E  
                                   i2u965_41 6B3E                                     i2u973_41 3A4C  
                                   i2u966_40 6B54                                     i2u974_40 3A76  
                                   i2u966_41 6B52                                     i2u974_41 3A74  
                                   i2u967_40 6B68                                     i2u975_40 3A9E  
                                   i2u967_41 6B66                                     i2u975_41 3A9C  
                                   _RCONbits 000FD0                         __end_of_test_powerup 6584  
                                   i2u968_40 50BC                                     i2u976_40 3ACC  
                                   i2u968_41 50BA                                     i2u976_41 3ACA  
                               _oled_putint8 552C                                     i2u969_40 50FC  
                                   i2u977_40 3B34                                     i2u969_41 50FA  
                                   i2u977_41 3B32                                ??_putUSBUSART 0063  
                                   _UEP0bits 000F6A                   _USBDeferINDataStagePackets 00D2  
                                   _SSP1CON1 000FC6                  __size_of_USBCheckStdRequest 00F2  
                                   _TMR1_ISR 7290                      __size_of_oled_putString 0088  
                                   _TMR3_ISR 708A                                     _SSP1STAT 000FC7  
                                   _UCONbits 000F60                              _oled_displayOff 72CC  
                                  _test_leds 680A                                     _VREFCON0 000F7D  
             moteRunningProcess@selectButton 00AC                         _USBConfigureEndpoint 5EB0  
                                  _test_oled 5AB4                        ??_USBapp_exitCDCState 0060  
           __size_of_USBStdFeatureReqHandler 030A                            ??_TMR1_Initialize 0060  
                                 _ADCON0bits 000FC2                      Set_Page_Address@address 0061  
                          ___wmul@multiplier 0060                        ?_USBTransferOnePacket 0060  
        moteRunningProcess@sizeOfUpdate_1493 00B2                       ADC_TempConversion@temp 00A7  
                     oled_putint8@start_page 0077                    _moteApp_add8bToDataBuffer 560A  
                    __size_of_oled_writeData 0018                                ?_CDCTxService 0001  
                   __size_of_TMR3_StartTimer 0004                     moteHandler@gotoNextState 01F4  
                               _RemoteWakeup 00D7                          __end_of_sendCommand 6F02  
                                   i2_memset 6F72                            __CFG_CFGPLLEN$OFF 000000  
                     _oled_initialDispayLine 71F6                        DATAEE_WriteByte@bData 0060  
                         _RS232_Out_Data_Rdy 0052            moteApp_setLightString@lightString 006A  
                    __end_of_USBStallHandler 6B88                          __end_of_moduleSleep 7038  
                        __end_of_moteHandler 2FF8                                  _EUSART_Read 6A92  
                          _moteApp_GoToSleep 48F2                                  _INTCON2bits 000FF1  
                                _INTCON3bits 000FF0                                    copy_data0 624E  
                ??_USBCtrlEPAllowStatusStage 0001        moteApp_addToDataBuffer@bufferLocation 0073  
                               _moduleResync 5B62                  __end_of_USBStdSetCfgHandler 4DD0  
                          ?_DATAEE_WriteByte 0060                __size_of_USBapp_getrxByteFlag 0006  
                         ?_moteApp_GoToSleep 0001                                   ?_oled_init 0001  
                          ??_TMR2_Initialize 0060                                ??_test_switch 0076  
MOTEapp_getModuleResponse@terminatorReceived 0061                  ?_moteApp_convertSensorValue 0071  
                           __size_of_EndLine 000E                           ??_DATAEE_WriteByte 0061  
                         __end_of_device_dsc 79B4                                   _EECON1bits 000FA6  
                    ?_USBCtrlTrfSetupHandler 0001                USBapp_CdcEmulatorInitialize@i 000D  
                     ??_TMRapp_ClearBitFlags 0060                      USBStdGetStatusHandler@p 0002  
                                   __Hrparam 0000                          ??_moteApp_GoToSleep 006E  
                                   __Lrparam 0000                       USBTransferOnePacket@ep 0064  
                     ??_MOTEapp_handlerState 0060                           __CFG_BOREN$SBORDIS 000000  
                                   _SetupPkt 000430                      ??_OSCILLATOR_Initialize 0060  
                      ?_USBConfigureEndpoint 0001                             __size_of___almod 011E  
                           __size_of___fladd 0596                            ??_USBDeviceAttach 0060  
                                 ?_test_leds 0001                             __size_of___fldiv 0454  
                           __size_of___lbdiv 0076                                   ?_test_oled 0001  
                           __size_of___awmod 00CE                             __size_of___flmul 051A  
                           __size_of___fltol 013A                   oled_initialDispayLine@line 0061  
             moteJoiningProcess@readDataRate 0079                                 _selectedFont 01F8  
                           __size_of___lldiv 0098                              _oled_setDisplay 6FD8  
           moteApp_clearBuffers@counter_1710 0061             moteApp_clearBuffers@counter_1711 0062  
           moteApp_clearBuffers@counter_1712 0063                             __size_of___lwmod 0078  
                  MOTEapp_handlerState@state 0060                            ??_TMR3_Initialize 0060  
                  ??_moteApp_setSensorsInput 0065                             __size_of_delayms 003E  
                                 _ANSELAbits 000F5B                          __end_of_putUSBUSART 708A  
                                _line_coding 01DF                                   _ANSELCbits 000F5D  
                             ??_CDCTxService 0067                                _responseReady 00EA  
                               ??_oled_clear 006E                                     ___xxtofl 2FF8  
                                _menuTimeout 00FA                     __size_of_moteApp_delayms 0040  
                  __end_of_moteApp_GoToSleep 49EE                __size_of_moteApp_getTempValue 005C  
                    __size_of_USBDeviceTasks 01D2                                     _appTimer 00F2  
                                   _appState 00EF                                     __ptext10 012A  
                                   __ptext11 47F6                                     __ptext20 6AE6  
                                   __ptext12 6A3E                                     __ptext21 7266  
                                   __ptext13 552C                                   _T1GCONbits 000FCC  
                                   __ptext30 6FA6                                     __ptext22 5884  
                                   __ptext14 5C10                                     __ptext31 712E  
                                   __ptext23 6E92                                     __ptext15 5CB8  
                                   __ptext40 5B62                                     __ptext32 6FD8  
                                   __ptext24 4AEA                                     __ptext16 72C4  
                                   __ptext41 6082                                     __ptext33 632A  
                                   __ptext25 62A6                                     __ptext17 6930  
                                   __ptext50 1B62                                     __ptext42 6870  
                                   __ptext34 71E0                                     __ptext26 560A  
                                   __ptext18 6660                                     __ptext51 13EE  
                                   __ptext43 7284                                     __ptext35 721E  
                                   __ptext27 649C                                     __ptext19 5FEE  
                                   __ptext60 42B6                                     __ptext52 59FC  
                                   __ptext44 359A                                     __ptext36 7230  
                                   __ptext28 56E8                                     __ptext61 72DC  
                                   __ptext53 67A2                                     __ptext45 4DD0  
                                   __ptext37 71F6                                     __ptext29 48F2  
                                   __ptext70 714A                                     __ptext62 6B88  
                                   __ptext54 6D20                                     __ptext46 2FF8  
                                   __ptext38 72CC                                     __ptext71 6E1A  
                                   __ptext63 7242                                     __ptext55 6C18  
                                   __ptext47 3CC0                                     __ptext39 7008  
                                   __ptext80 72EC                                     __ptext72 5940  
                                   __ptext64 6ECA                                     __ptext56 729C  
                                   __ptext48 20F8                                     __ptext81 72E4  
                                   __ptext73 7198                                     __ptext65 7276  
                                   __ptext57 72D4                                     __ptext49 2612  
                                   __ptext90 70D0                                     __ptext82 69E6  
                                   __ptext74 7164                                     __ptext66 72A6  
                                   __ptext58 389E                                     __ptext91 72FE  
                                   __ptext83 6A92                                     __ptext75 70F2  
                                   __ptext67 4EC4                                     __ptext59 63AC  
                                   __ptext92 720A                                     __ptext84 33D2  
                                   __ptext76 71B0                                     __ptext68 5D60  
                                   __ptext93 7302                                     __ptext85 46F6  
                                   __ptext77 4196                                     __ptext69 6112  
                                   __ptext94 6F02                                     __ptext86 371E  
                                   __ptext78 7062                                     __ptext95 7306  
                                   __ptext87 6E56                                     __ptext79 45EE  
                                   __ptext96 68D2                                     __ptext88 6C5A  
                                   __ptext97 7110                                     __ptext89 70AE  
                                   __ptext98 6D9E                                     __ptext99 7254  
       __end_of_USBapp_CdcEmulatorInitialize 67A2        __size_of_USBapp_CdcEmulatorInitialize 006A  
               _USBapp_CdcEmulatorInitialize 6738                                 _SSP1CON1bits 000FC6  
                                   _dotCount 00E1                                     _hexToStr 6A3E  
                         _service_pushbutton 5D60                              ___almod@divisor 0064  
                          ??_TMR1_StartTimer 0060                              ___almod@counter 0068  
                                 _T3GCONbits 000FB4                  DATAEE_WriteByte@GIEBitValue 0062  
                   ??_moteApp_getLightString 0062                                  _OSCCON2bits 000FD2  
                           __size_of_strncmp 00B8               __end_of_USBCtrlTrfSetupHandler 6222  
                              __size_of_main 0138                            ?_USBCtrlEPService 0001  
                 __size_of_oled_writeCommand 0018                               _Contrast_level 00F6  
                                   _rnModule 00E2                           oled_putint8@number 007F  
                                 strncmp@len 0064                          ?_service_pushbutton 0001  
                          ??_DATAEE_ReadByte 0060                     __size_of_CMP1_Initialize 0012  
                   ?_moteApp_addToDataBuffer 0071                      __end_of_oled_displayOff 72D4  
                         ??_USBCtrlEPService 001C                    moduleResync@escapeCounter 0065  
                                   delayms@i 0063                                     delayms@t 0060  
                        _USBCtrlTrfInHandler 43D4                                ??_TMRapp_Tick 0001  
                           _dataRatePosition 00E0                           __end_of_oled_clear 7164  
                        __end_of_test_switch 45EE                                     _outPipes 002E  
                       _USBCtrlTrfOutHandler 66CC                                     int$flags 005B  
                                   _usbState 00DD                    _USBCtrlEPAllowStatusStage 5284  
                __size_of_Set_Column_Address 001E                            ??_TMR2_StartTimer 0060  
         __end_of_INTERRUPT_InterruptManager 0126                   _INTERRUPT_InterruptManager 0008  
             moteRunningProcess@sizeOfUpdate 00B1                                 _SSP1STATbits 000FC7  
                                _sendCommand 6ECA                       ??_USBTransferOnePacket 0064  
                         oled_clearRow@index 006D                           _EUSART_FlushBuffer 6870  
                               ??_test_comms 0076                 __end_of_USBapp_setrxByteFlag 72F8  
                                _moduleSleep 7008                                  _moteHandler 2D70  
                           ??_TMR2_ReadTimer 0060                         ??_service_pushbutton 0060  
                  _USBDeferStatusStagePacket 004A                     CDCTxService@byte_to_send 006B  
                                 _INTCONbits 000FF2                  __end_of_USBapp_handlerState 72B0  
                       ?_USBCtrlTrfInHandler 0001                          ?_EUSART_FlushBuffer 0001  
                                   memcpy@d1 0060                  __size_of_ADC_TempConversion 00F4  
                                   memcpy@s1 0062                USBCtrlTrfTxService@byteToSend 0001  
                                   memset@p1 0060                             ?_USBStallHandler 0001  
                   USBStdFeatureReqHandler@p 001A                            ?_Set_Page_Address 0001  
                   ??_MOTEapp_TimerBasedTask 0060                                 _responseData 019D  
                          ??_TMR3_StartTimer 0060                ?_USBapp_CdcEmulatorInitialize 0001  
                                   intlevel2 0000                          _moteApp_testSensors 5198  
                                ??_oled_init 006E                  ??_MOTEapp_getModuleResponse 0061  
                         ??_Set_Page_Address 0061                       __size_of_USBDeviceInit 0180  
                       oled_powerControl@vol 0061      __end_of_USER_USB_CALLBACK_EVENT_HANDLER 649C  
   __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0078            ??_USER_USB_CALLBACK_EVENT_HANDLER 0014  
           ?_USER_USB_CALLBACK_EVENT_HANDLER 000E              _USER_USB_CALLBACK_EVENT_HANDLER 6424  
             moteJoiningProcess@messageReady 007B              __end_of_moteApp_setSensorsInput 5D60  
                           ___lwmod@dividend 0060                 i2USBTransferOnePacket@handle 0006  
                               _VREFCON0bits 000F7D                             ___lldiv@dividend 0001  
                    ?_PIN_MANAGER_Initialize 0001                      ??_moteApp_getLightValue 006F  
                           ??_USBapp_Handler 0076                             ??_TMRapp_Handler 006A  
                      __size_of_test_powerup 0072                         moteHandler@gotoSleep 01F3  
               __size_ofi2_EUSART_Initialize 003E                                    strncmp@s1 0060  
                                  strncmp@s2 0062                             ??_ADC_Initialize 0060  
                         __end_of_test_comms 65F2                         ??_EUSART_FlushBuffer 0060  
                    __end_of_oled_setDisplay 7008                   i2USBTransferOnePacket@data 0002  
                                _sleepTicker 00E3                       ??_USBConfigureEndpoint 0002  
                      ?_USBCtrlTrfOutHandler 0001                               _oled_putString 6112  
                                _putUSBUSART 7062                           _EUSART_Receive_ISR 6CDE  
                          oled_clearRow@page 006C                         __CFG_CPUDIV$NOCLKDIV 000000  
                        _USBCtrlTrfRxService 3B68                           _USBWakeFromSuspend 6F3A  
                                ??_test_leds 0076                                _powerOnStatus 00ED  
                                ??_test_oled 0076                      _USBStdFeatureReqHandler 2A66  
                       ?_moteApp_testSensors 0001      __end_of_USBapp_DeviceCdcEmulatorHandler 42B6  
   __size_of_USBapp_DeviceCdcEmulatorHandler 0120             ?_USBapp_DeviceCdcEmulatorHandler 0001  
          ??_USBapp_DeviceCdcEmulatorHandler 006D              _USBapp_DeviceCdcEmulatorHandler 4196  
                         _USBCheckCDCRequest 57B6                          _USBCtrlTrfTxService 49EE  
                        __end_of_TMRapp_Tick 72FE                        __end_of_oled_clearRow 6E56  
                                _temperature 00C7                          ?_EUSART_Receive_ISR 0001  
                             _oled_writeData 7198                          ?_USBWakeFromSuspend 0001  
                                   strcmp@s1 0060                                     strcmp@s2 0062  
                    ?_moteApp_setLightString 006A                             ___lldiv@quotient 0009  
                            ___lwmod@divisor 0062                             ??_USBapp_exitCDC 0060  
                      ??_USBCtrlTrfInHandler 0012                        _USBAlternateInterface 00F3  
                            ___lwmod@counter 0064                          ?_USBCheckCDCRequest 0001  
                 __size_of_moteApp_GoToSleep 00FC                    i2USBTransferOnePacket@dir 0001  
                         _moteApp_toggleLeds 4BE4                    i2USBTransferOnePacket@len 0004  
                        USBEnableEndpoint@ep 000C                              _endpoint_number 004C  
                                 _WDTCONbits 000FD1                                 _test_powerup 6512  
                            _sendDataCommand 47F6                         ?_USBCtrlTrfRxService 0001  
                              ___fladd@signs 0070                                ?_getsUSBUSART 0067  
                   oled_putUint8@station_dot 0076                           __CFG_FOSC$INTOSCIO 000000  
                         EUSART_Write@txData 0060                 __size_of_EUSART_Transmit_ISR 0042  
             __end_of_PIN_MANAGER_Initialize 6930                     ?_USBCtrlEPAllowDataStage 0001  
         __size_of_moteApp_add8bToDataBuffer 00DE                                 ___almod@sign 0069  
                       ?_USBCtrlTrfTxService 0001                            ??_moteApp_delayms 0062  
            __size_of_moteApp_getLightString 0010                  ?_oled_regulorResistorSelect 0001  
                        ?_moteApp_toggleLeds 0001                                 ___fladd@aexp 0071  
                               ___fladd@bexp 0072                 _USBStatusStageTimeoutCounter 004B  
                                _test_switch 44E2                         ??_EUSART_Receive_ISR 0001  
                       ??_USBWakeFromSuspend 0016                   USBTransferOnePacket@handle 0065  
                       __end_of_CDCTxService 359A                              _TMR1_Initialize 6F02  
          moteJoiningProcess@joiningComplete 007A                             ?_oled_displayOff 0001  
                      __end_of_oled_putUint8 5CB8                       __end_of_oled_putString 619A  
                       ??_USBCheckCDCRequest 0001                                   _USB_CD_Ptr 75F5  
